// primero de exporta esta ruta para poder usar "riscv64-unknown-elf-gcc"

export PATH=$PATH:/opt/riscv/bin   

// Una vez que se puede usar el compilador para crear el codigo objeto 

riscv64-unknown-elf-gcc -o nombre nombre.c -static-libgcc -lm

riscv64-unknown-elf-as -o nombre nombre.c -static-libgcc -lm   // este es para ensamblador

// Ya que se tiene el condigo objeto se puede usar el simulador spike 

spike  /usr/local/RISCV/riscv64-unknown-elf/bin/pk nombre

************************Steps for install 

************************Steps for install QEMU **********************************************************
// Firstly, we need to install common development tools:

$ sudo apt install autoconf automake autotools-dev curl libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev git 

$ sudo apt-get install -y gcc-riscv64-linux-gnu 
// https://toolchains.bootlin.com/  This link is for tool already built 
$ sudo apt-get install -y libpixman-1-dev
$ sudo apt-get install libglib2.0-dev
$ sudo apt install ninja-build
$ git clone https://github.com/qemu/qemu
$ cd qemu
$ git checkout v5.2.0
$ ./configure --target-list=riscv64-softmmu
$ make -j $(nproc)
$ sudo make install

// Ready, you already have the QEMU installation

************************************************************************************************************