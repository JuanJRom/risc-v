
C:/wsFreedomStudio/kernel_sifive_semaphore/src/debug/empty.elf:     file format elf32-littleriscv
C:/wsFreedomStudio/kernel_sifive_semaphore/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00000ff8 memsz 0x00000ff8 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x20407440 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00001308 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002000 vaddr 0x20401000 paddr 0x20401000 align 2**12
         filesz 0x0000643a memsz 0x0000643a flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000c90  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             0000643a  20401000  20401000  00002000  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  20407440  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000708  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  80000ed0  80000ed0  000097c8  2**4  ALLOC
  8 .heap             00000800  800012d0  800012d0  000097c8  2**3  ALLOC
  9 .debug_info       0001f45f  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002d9b  00000000  00000000  00028c27  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000c98  00000000  00000000  0002b9c8  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000a58  00000000  00000000  0002c660  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000a4ae  00000000  00000000  0002d0b8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004929  00000000  00000000  00037566  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003be8f  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003bebf  2**0  CONTENTS, READONLY
 17 .debug_frame      00003168  00000000  00000000  0003bef0  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401000 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80000ed0 l    d  .stack	00000000 .stack
800012d0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c0 l     F .init	00000000 __metal_memory_scrub
2040012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400240 l       .init	00000000 _skip_init
20400484 l       .rodata	00000000 argv
20400488 l       .rodata	00000000 envp
2040048c l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
204059ae l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
204059c8 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
204059e2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
204059f8 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20405a0c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20405a1e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20405a2e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20405a44 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20405a56 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
20400688 l     O .rodata	00000880 pll_configs
20405a6c l     F .text	0000004e get_pll_config_freq
20405cda l     F .text	000000ac find_closest_config
20405d86 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 trap.c
00000000 l    df *ABS*	00000000 findfp.c
20401bee l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
20401fba l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20402dbc l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20402de6 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20402e0e l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20402e4a l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20402faa l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
204034f0 l     F .text	00000024 __metal_driver_cpu_hartid
20403514 l     F .text	0000002a __metal_driver_cpu_timebase
2040353e l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20403568 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20404ef4 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20404f1e l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20404f46 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20404f6e l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20404f96 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20404fb8 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20406114 l     F .text	00000026 __metal_driver_sifive_gpio0_base
2040613a l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20406164 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406a38 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20406a62 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20406a90 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20406ab8 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20406ae6 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20406b10 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406b38 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20406f02 l     F .text	000000da pre_rate_change_callback_func
20406fdc l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
204057be l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
204057d8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
204057ee l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405802 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
204058be l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
204058d8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
204058ee l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405902 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2040609c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
204069c8 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407380 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 kernel.c
20401000 l     F .text	0000001a r_mie
2040101a l     F .text	0000001a w_mie
20401034 l     F .text	0000001a w_mtvec
2040104e l     F .text	0000002e intr_on
2040107c l     F .text	00000026 intr_off
00000000 l    df *ABS*	00000000 semaphore.c
204013de l     F .text	0000001a r_mie
204013f8 l     F .text	0000001a w_mie
20401412 l     F .text	0000002e intr_on
20401440 l     F .text	00000026 intr_off
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007e8 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007e0 l     O .bss	00000004 init_done.1
800007e4 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20407300 l       .text	00000000 IRQ_0
20407304 l       .text	00000000 IRQ_1
20407308 l       .text	00000000 IRQ_2
2040730c l       .text	00000000 IRQ_3
20407310 l       .text	00000000 IRQ_4
20407314 l       .text	00000000 IRQ_5
20407318 l       .text	00000000 IRQ_6
2040731c l       .text	00000000 IRQ_7
20407320 l       .text	00000000 IRQ_8
20407324 l       .text	00000000 IRQ_9
20407328 l       .text	00000000 IRQ_10
2040732c l       .text	00000000 IRQ_11
20407330 l       .text	00000000 IRQ_12
20407334 l       .text	00000000 IRQ_13
20407338 l       .text	00000000 IRQ_14
2040733c l       .text	00000000 IRQ_15
20407340 l       .text	00000000 IRQ_LC0
20407344 l       .text	00000000 IRQ_LC1
20407348 l       .text	00000000 IRQ_LC2
2040734c l       .text	00000000 IRQ_LC3
20407350 l       .text	00000000 IRQ_LC4
20407354 l       .text	00000000 IRQ_LC5
20407358 l       .text	00000000 IRQ_LC6
2040735c l       .text	00000000 IRQ_LC7
20407360 l       .text	00000000 IRQ_LC8
20407364 l       .text	00000000 IRQ_LC9
20407368 l       .text	00000000 IRQ_LC10
2040736c l       .text	00000000 IRQ_LC11
20407370 l       .text	00000000 IRQ_LC12
20407374 l       .text	00000000 IRQ_LC13
20407378 l       .text	00000000 IRQ_LC14
2040737c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
20400f90 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20402404 g     F .text	0000002e _isatty_r
20403dd2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401764 g     F .text	000000da _puts_r
20402432 g     F .text	00000032 _lseek_r
20407174 g     F .text	00000026 metal_clock_get_rate_hz
20406e62 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20403186 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20406cb6 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
20403d3c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
204045e4 g     F .text	00000058 __metal_valid_interrupt_id
20401726 g     F .text	0000003e printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20404a64 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
20407120 g     F .text	00000054 _metal_clock_append_to_callbacks
20405012 g     F .text	00000046 __metal_plic0_complete_interrupt
2040482a g     F .text	000001e2 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20402338 g     F .text	00000036 __sseek
20401ca6 g     F .text	0000006a __sinit
2040187a g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
20401c60 g     F .text	00000046 __sfmoreglue
20401fb8 g     F .text	00000002 __malloc_unlock
20407270 g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
204065a2 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20400498 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000ed0 g       .bss	00000000 metal_segment_bss_target_end
20402e7a g     F .text	0000009a __metal_clint0_mtime_get
20404e68 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20401166 g     F .text	00000020 system_init
20406d7a g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20406358 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
204069ee g     F .text	0000004a __metal_driver_sifive_test0_exit
204029ea g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20406c86 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20406c14 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400142 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
20402f14 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
204023d4 g     F .text	00000030 _fstat_r
204067f2 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800007d8 g     O .bss	00000004 errno
20405b5e g     F .text	0000017c __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
204071e6 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
204040c0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000cc  w    F .init	00000000 __metal_before_start
20402ce6  w    F .text	00000014 metal_init_run
20400624 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
204005e0 g     O .rodata	00000044 __metal_driver_vtable_cpu
20402d8e g     F .text	0000002e metal_uart_set_baud_rate
2040700c g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20404af0 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400f08 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
800012d0 g       .heap	00000000 metal_segment_heap_target_start
20401c56 g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
2040402a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20405f36 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405722 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
2040183e g     F .text	0000000c puts
20401466 g     F .text	00000020 osSemaphoreInit
20404318  w    F .text	00000096 metal_lc13_interrupt_vector_handler
204036fa g     F .text	00000018 __metal_default_exception_handler
2040284e g     F .text	00000026 _fstat
204034bc g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20404a80 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
2040139c g     F .text	00000042 handle_trap
2040358c g     F .text	00000030 __metal_driver_cpu_get
2040057c g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
204035ee g     F .text	00000018 __metal_interrupt_global_disable
20405796 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20403f94  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20404156  w    F .text	00000096 metal_lc10_interrupt_vector_handler
2040184a g     F .text	00000030 _sbrk_r
20405542 g     F .text	00000050 __metal_driver_riscv_plic0_disable
204046f8 g     F .text	0000004e __metal_exception_register
20401150 g     F .text	00000016 osKernelLaunch
20402bf6 g     F .text	00000078 metal_init
204027fa g     F .text	00000032 _read_r
20404c82 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2040643a g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
2040127e g     F .text	0000007c handle_interrupt
80000000 g       .rodata	00000000 metal_segment_lim_target_end
204037ea g     F .text	00000068 __metal_default_sw_handler
20407218 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20406b62 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20402874 g     F .text	00000020 _isatty
20406500 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20406ba2 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20400ff0 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20400fd0 g     O .rodata	00000004 _global_impure_ptr
204011d0 g     F .text	00000018 osSchedulerRoundRobin
20403852  w    F .text	00000092 metal_timer_interrupt_vector_handler
20402a54 g     F .text	0000005e __libc_init_array
2040647a g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
204041ec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
2040598c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20404a0c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
204028e8 g     F .text	0000008a _sbrk
204063f4 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
204070de g     F .text	00000042 _metal_clock_call_all_callbacks
20401500 g     F .text	00000000 switch_to
204002ba g     F .init	00000002 _init
20403650 g     F .text	0000001a __metal_interrupt_timer_disable
204065ec g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20404d40 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400f54 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20406bdc g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20406540 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402a1e g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
2040697a g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20402c6e g     F .text	00000078 metal_fini
20404cca g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20404ed4 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
204036a2 g     F .text	0000002c __metal_interrupt_local_enable
20403488 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
80000874 g     O .bss	00000004 currentPt
20402d0e g     F .text	00000026 metal_tty_putc
20401186 g     F .text	0000004a timer_init
20405212 g     F .text	00000018 __metal_plic0_default_handler
20402972  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20405592 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
204038e4 g     F .text	00000016 __metal_default_beu_handler
20400390 g     O .rodata	00000020 __sf_fake_stderr
20403686 g     F .text	0000001c __metal_interrupt_external_disable
20406b82 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20404ad4 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20404746 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
80000ec8 g     O .bss	00000004 semaphore1
20401fe4 g     F .text	00000042 __sfputs_r
20404e22 g     F .text	00000046 __metal_driver_cpu_exception_register
20403606 g     F .text	00000018 __metal_interrupt_software_enable
20403c10  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20402464 g     F .text	0000001a memchr
20401212 g     F .text	0000002a task1
204015a2 g     F .text	000000a6 _free_r
800007dc g     O .bss	00000004 _global_atexit
204050d8 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
204044da g     F .text	00000058 __metal_controller_interrupt_vector_mode
20402b2e g     F .text	000000c8 __call_exitprocs
800012d0 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400150 g     F .init	00000000 _start
20405818 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20402894 g     F .text	0000002a _lseek
20404e02 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20404e96 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
2040366a g     F .text	0000001c __metal_interrupt_external_enable
20402ab2 g     F .text	0000007c __register_exitproc
20406daa g     F .text	00000042 __metal_driver_sifive_uart0_putc
204052d6 g     F .text	0000015a __metal_driver_riscv_plic0_init
204054f2 g     F .text	00000050 __metal_driver_riscv_plic0_enable
204063c8 g     F .text	0000002c __metal_driver_sifive_gpio0_output
20403efe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
204035bc g     F .text	0000001a __metal_myhart_id
2040699a g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
80000878 g     O .bss	00000010 tcbs
20403758  w    F .text	00000092 metal_software_interrupt_vector_handler
20404a38 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
204023a6 g     F .text	0000002e _close_r
20406e42 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
204011e8 g     F .text	0000002a task
20403068 g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
2040193a g     F .text	0000010a __swsetup_r
20401d10 g     F .text	0000009c __sfp
2040719a g     F .text	0000004c metal_clock_set_rate_hz
204022ba g     F .text	00000030 __sread
20406318 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002bc  w    F .init	00000000 secondary_main
2040372a  w    F .text	0000002e metal_interrupt_vector_handler
20401fb6 g     F .text	00000002 __malloc_lock
20406c4e g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401b8a g     F .text	00000064 _fflush_r
2040509e g     F .text	0000003a __metal_plic0_get_threshold
204060ae g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204003b0 g     O .rodata	00000020 __sf_fake_stdin
2040463c g     F .text	000000bc __metal_local_interrupt_enable
20403348 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20401f0e g     F .text	000000a8 memset
20403e68  w    F .text	00000096 metal_lc5_interrupt_vector_handler
2040123c g     F .text	00000042 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20406d30 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20400fd4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20404cde g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20404da2 g     F .text	00000060 __metal_driver_cpu_get_msip
204072da g     F .text	00000018 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20404eb4 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20404fd6 g     F .text	0000003c __metal_plic0_claim_interrupt
20406d00 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
2040236e g     F .text	00000006 __sclose
20404282  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008a g     F .init	00000000 metal_mem_scrub
204014ec g     F .text	00000000 osSchedulerLaunch
20401648 g     F .text	000000de _malloc_r
2040316a g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ecc g     O .bss	00000004 semaphore2
20401486 g     F .text	0000002a osSignalSet
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20404b60 g     F .text	00000046 __metal_driver_cpu_timebase_get
20405686 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
2040729e g     F .text	0000001a metal_cpu_get_current_hartid
20405918 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407300 g       .text	00000000 __metal_vector_table
20400ff8 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
800007c8 g     O .bss	00000004 count
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204010dc g     F .text	00000074 osKernelAddThreads
204002ba g     F .init	00000002 _fini
20401726 g     F .text	0000003e iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
2040513a g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
204035d6 g     F .text	00000018 __metal_interrupt_global_enable
204029e0 g     F .text	0000000a atexit
20402374 g     F .text	00000032 _write_r
800007cc g     O .bss	00000004 count1
20403636 g     F .text	0000001a __metal_interrupt_timer_enable
20406dec g     F .text	00000056 __metal_driver_sifive_uart0_getc
20403290 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
2040247e g     F .text	0000010c _printf_common
800007a0 g     O .data	00000004 _impure_ptr
20404c0c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401a44 g     F .text	00000146 __sflush_r
204072b8 g     F .text	00000022 __metal_shutdown_exit
204055c2 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20405aba g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
204060dc g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
204073e2 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
204031de g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20400fec g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
204012fa g     F .text	000000a2 handle_exception
20407440 g       *ABS*	00000000 metal_segment_data_source_start
20400134 g       .init	00000000 early_trap_vector
80001ad0 g       .heap	00000000 metal_segment_heap_target_end
20404532 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20401e16 g     F .text	0000005a __swhatbuf_r
204064ba g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
204038fa g     F .text	00000066 __metal_default_timer_handler
20402972 g     F .text	0000006e _write
2040522a g     F .text	000000ac __metal_plic0_handler
20403ca6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20404444  w    F .text	00000096 metal_lc15_interrupt_vector_handler
2040724a g     F .text	00000026 metal_cpu_interrupt_controller
204010a2 g     F .text	0000003a osKernelStackInit
800007c0 g     O .data	00000004 __metal_dt_test_100000
80000888 g     O .bss	00000640 TCB_STACK
204022ea g     F .text	0000004e __swrite
204029f4 g     F .text	0000002a exit
20402026 g     F .text	00000294 _vfiprintf_r
20401dac g     F .text	0000006a _fwalk_reent
20407402 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20400ff8 g       *ABS*	00000000 metal_segment_lim_source_start
204003d0 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
20403712 g     F .text	00000018 __metal_default_interrupt_handler
20402d60 g     F .text	0000002e metal_uart_putc
204028be g     F .text	0000002a _read
20402cfa  w    F .text	00000014 metal_fini_run
2040639e g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403980 g     F .text	00000180 __metal_exception_handler
20403b7a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20407426 g     F .text	00000014 _exit
20404ba6 g     F .text	00000066 __metal_driver_cpu_mtime_get
20401e70 g     F .text	0000009e __smakebuf_r
20403142 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
2040258a g     F .text	00000270 _printf_i
800007d4 g     O .bss	00000004 __malloc_sbrk_start
204043ae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20400fdc g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20402fe0 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007d0 g     O .bss	00000004 __malloc_free_list
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20402026 g     F .text	00000294 _vfprintf_r
204014b0 g     F .text	0000003a osSignalWait
20404c9c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2040516e g     F .text	000000a4 __metal_plic0_enable
20400088  w      .init	00000000 __register_frame_info
2040589c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20404cb0 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
204036ce g     F .text	0000002c __metal_interrupt_local_disable
2040361e g     F .text	00000018 __metal_interrupt_software_disable
20402d34 g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
20405058 g     F .text	00000046 __metal_plic0_set_threshold
204055ea g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2040282c g     F .text	00000022 _close
20400fe4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20405430 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11428293          	addi	t0,t0,276 # 20400134 <early_trap_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011463          	bnez	sp,20400038 <_enter+0x38>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	33018113          	addi	sp,gp,816 # 800012d0 <_sp>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20400038:	f1402573          	csrr	a0,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:60
    li t0, 0
2040003c:	4281                	li	t0,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:61
    la t1, __stack_size
2040003e:	40000313          	li	t1,1024
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400042:	ff017113          	andi	sp,sp,-16
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20400046:	00a28563          	beq	t0,a0,20400050 <_enter+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004a:	911a                	add	sp,sp,t1
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2040004c:	0285                	addi	t0,t0,1
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:67
    j 1b
2040004e:	bfd5                	j	20400042 <_enter+0x42>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400050:	00000097          	auipc	ra,0x0
20400054:	07c08093          	addi	ra,ra,124 # 204000cc <__metal_before_start>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:77
    beqz ra, 1f
20400058:	00008363          	beqz	ra,2040005e <_enter+0x5e>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:78
    jalr ra
2040005c:	9082                	jalr	ra
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2040005e:	f1402573          	csrr	a0,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:85
    li a1, 0
20400062:	4581                	li	a1,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:86
    li a2, 0
20400064:	4601                	li	a2,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:87
    call _start
20400066:	20ed                	jal	20400150 <_start>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400068:	00000093          	li	ra,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:93
    beqz ra, 1f
2040006c:	00008363          	beqz	ra,20400072 <_enter+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:94
    jalr ra
20400070:	9082                	jalr	ra
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400072:	00000297          	auipc	t0,0x0
20400076:	00c28293          	addi	t0,t0,12 # 2040007e <_enter+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007a:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2040007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:103
     j 1b
20400082:	bff5                	j	2040007e <_enter+0x7e>
20400084:	0000                	unimp
	...

20400088 <__register_frame_info>:
__register_frame_info():
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400088:	8082                	ret

2040008a <metal_mem_scrub>:
metal_mem_scrub():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008a:	46a1                	li	a3,8
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2040008c:	3006b373          	csrrc	t1,mstatus,a3
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400090:	4291                	li	t0,4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400092:	0055c563          	blt	a1,t0,2040009c <metal_mem_scrub+0x12>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20400096:	00357613          	andi	a2,a0,3
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009a:	ca11                	beqz	a2,204000ae <metal_mem_scrub+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2040009c:	00050023          	sb	zero,0(a0)
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a0:	0505                	addi	a0,a0,1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a2:	15fd                	addi	a1,a1,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a4:	feb047e3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000a8:	30031073          	csrw	mstatus,t1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:39
    ret
204000ac:	8082                	ret
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000ae:	00052023          	sw	zero,0(a0)
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b2:	0511                	addi	a0,a0,4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b4:	15f1                	addi	a1,a1,-4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000b6:	fcb04ee3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000ba:	30031073          	csrw	mstatus,t1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:46
    ret
204000be:	8082                	ret

204000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c0:	00032023          	sw	zero,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c4:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000c6:	fe734de3          	blt	t1,t2,204000c0 <__metal_memory_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ca:	8082                	ret

204000cc <__metal_before_start>:
__metal_before_start():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000cc:	8406                	mv	s0,ra
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000ce:	dfc00297          	auipc	t0,0xdfc00
204000d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000d6:	04028c63          	beqz	t0,2040012e <skip_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000da:	dfc00297          	auipc	t0,0xdfc00
204000de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e2:	f14027f3          	csrr	a5,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000e6:	46a1                	li	a3,8
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000e8:	3006b073          	csrc	mstatus,a3
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000ec:	830a                	mv	t1,sp
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000ee:	dfc00397          	auipc	t2,0xdfc00
204000f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000f6:	938a                	add	t2,t2,sp
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000f8:	00730363          	beq	t1,t2,204000fe <__metal_before_start+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
204000fc:	37d1                	jal	204000c0 <__metal_memory_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
204000fe:	02579863          	bne	a5,t0,2040012e <skip_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400102:	5fc00317          	auipc	t1,0x5fc00
20400106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010a:	5fc00397          	auipc	t2,0x5fc00
2040010e:	6be38393          	addi	t2,t2,1726 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400112:	00730363          	beq	t1,t2,20400118 <__metal_before_start+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400116:	376d                	jal	204000c0 <__metal_memory_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400118:	5fc00317          	auipc	t1,0x5fc00
2040011c:	ee830313          	addi	t1,t1,-280 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400120:	5fc00397          	auipc	t2,0x5fc00
20400124:	ee038393          	addi	t2,t2,-288 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400128:	00730363          	beq	t1,t2,2040012e <skip_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2040012c:	3f51                	jal	204000c0 <__metal_memory_scrub>

2040012e <skip_scrub>:
skip_scrub():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2040012e:	80a2                	mv	ra,s0
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:130
    ret
20400130:	8082                	ret
	...

20400134 <early_trap_vector>:
early_trap_vector():
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400134:	342022f3          	csrr	t0,mcause
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400138:	34102373          	csrr	t1,mepc
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:66
    csrr t2, mtval
2040013c:	343023f3          	csrr	t2,mtval
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:67
    j early_trap_vector
20400140:	bfd5                	j	20400134 <early_trap_vector>

20400142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/wsFreedomStudio/kernel/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400142:	1141                	addi	sp,sp,-16
20400144:	c622                	sw	s0,12(sp)
20400146:	0800                	addi	s0,sp,16
C:/wsFreedomStudio/kernel/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400148:	0001                	nop
2040014a:	4432                	lw	s0,12(sp)
2040014c:	0141                	addi	sp,sp,16
2040014e:	8082                	ret

20400150 <_start>:
_start():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400150:	8406                	mv	s0,ra
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400152:	5fc01197          	auipc	gp,0x5fc01
20400156:	e4e18193          	addi	gp,gp,-434 # 80000fa0 <__global_pointer$>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015a:	00000293          	li	t0,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2040015e:	0e551163          	bne	a0,t0,20400240 <_skip_init>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400162:	00007297          	auipc	t0,0x7
20400166:	2de28293          	addi	t0,t0,734 # 20407440 <metal_segment_data_source_start>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016a:	5fc00317          	auipc	t1,0x5fc00
2040016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400172:	5fc00397          	auipc	t2,0x5fc00
20400176:	65638393          	addi	t2,t2,1622 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017a:	00628c63          	beq	t0,t1,20400192 <_start+0x42>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2040017e:	00735a63          	bge	t1,t2,20400192 <_start+0x42>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400182:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20400186:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400188:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2040018c:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2040018e:	fe734ae3          	blt	t1,t2,20400182 <_start+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400192:	00001297          	auipc	t0,0x1
20400196:	e6628293          	addi	t0,t0,-410 # 20400ff8 <metal_segment_itim_source_start>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019a:	5fc00317          	auipc	t1,0x5fc00
2040019e:	e6630313          	addi	t1,t1,-410 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a2:	5fc00397          	auipc	t2,0x5fc00
204001a6:	e5e38393          	addi	t2,t2,-418 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001aa:	00628c63          	beq	t0,t1,204001c2 <_start+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001ae:	00735a63          	bge	t1,t2,204001c2 <_start+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b2:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001b6:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001b8:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001bc:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001be:	fe734ae3          	blt	t1,t2,204001b2 <_start+0x62>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c2:	0000100f          	fence.i
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001c6:	00001297          	auipc	t0,0x1
204001ca:	e3228293          	addi	t0,t0,-462 # 20400ff8 <metal_segment_itim_source_start>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001ce:	5fc00317          	auipc	t1,0x5fc00
204001d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001d6:	5fc00397          	auipc	t2,0x5fc00
204001da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001de:	00628c63          	beq	t0,t1,204001f6 <_start+0xa6>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e2:	00735a63          	bge	t1,t2,204001f6 <_start+0xa6>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001e6:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ea:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001ec:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f0:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f2:	fe734ae3          	blt	t1,t2,204001e6 <_start+0x96>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001f6:	0000100f          	fence.i
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fa:	5fc00317          	auipc	t1,0x5fc00
204001fe:	5ce30313          	addi	t1,t1,1486 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400202:	f3018393          	addi	t2,gp,-208 # 80000ed0 <metal_segment_bss_target_end>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20400206:	00735763          	bge	t1,t2,20400214 <_start+0xc4>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020a:	00032023          	sw	zero,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2040020e:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400210:	fe734de3          	blt	t1,t2,2040020a <_start+0xba>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400214:	5fc00217          	auipc	tp,0x5fc00
20400218:	5b420213          	addi	tp,tp,1460 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2040021c:	c211                	beqz	a2,20400220 <_start+0xd0>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:167
  jalr a2
2040021e:	9602                	jalr	a2
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400220:	00002517          	auipc	a0,0x2
20400224:	7fe50513          	addi	a0,a0,2046 # 20402a1e <__libc_fini_array>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:172
  call atexit
20400228:	7b8020ef          	jal	ra,204029e0 <atexit>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2040022c:	029020ef          	jal	ra,20402a54 <__libc_init_array>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400230:	00003517          	auipc	a0,0x3
20400234:	aca50513          	addi	a0,a0,-1334 # 20402cfa <metal_fini_run>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:178
  call atexit
20400238:	7a8020ef          	jal	ra,204029e0 <atexit>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2040023c:	2ab020ef          	jal	ra,20402ce6 <metal_init_run>

20400240 <_skip_init>:
_skip_init():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400240:	3709                	jal	20400142 <__metal_synchronize_harts>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400242:	56fd                	li	a3,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400244:	3046b073          	csrc	mie,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400248:	3446b073          	csrc	mip,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2040024c:	301027f3          	csrr	a5,misa
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400250:	00042737          	lui	a4,0x42
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400254:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20400256:	c709                	beqz	a4,20400260 <_skip_init+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400258:	3036b073          	csrc	mideleg,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2040025c:	3026b073          	csrc	medeleg,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400260:	00040737          	lui	a4,0x40
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400264:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20400266:	c319                	beqz	a4,2040026c <_skip_init+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400268:	1806b073          	csrc	satp,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2040026c:	6741                	lui	a4,0x10
2040026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400272:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400274:	cb89                	beqz	a5,20400286 <_skip_init+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400276:	300027f3          	csrr	a5,mstatus
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027a:	6709                	lui	a4,0x2
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2040027c:	8fd9                	or	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2040027e:	30079073          	csrw	mstatus,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400282:	00305073          	csrwi	fcsr,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400286:	301027f3          	csrr	a5,misa
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028a:	00200737          	lui	a4,0x200
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2040028e:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400290:	c799                	beqz	a5,2040029e <_skip_init+0x5e>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400292:	300027f3          	csrr	a5,mstatus
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20400296:	2007e793          	ori	a5,a5,512
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029a:	30079073          	csrw	mstatus,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2040029e:	4505                	li	a0,1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a0:	00000597          	auipc	a1,0x0
204002a4:	1e458593          	addi	a1,a1,484 # 20400484 <argv>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002a8:	00000617          	auipc	a2,0x0
204002ac:	1e060613          	addi	a2,a2,480 # 20400488 <envp>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b0:	2031                	jal	204002bc <secondary_main>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b2:	742020ef          	jal	ra,204029f4 <exit>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002b6:	80a2                	mv	ra,s0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:248
  ret
204002b8:	8082                	ret

204002ba <_fini>:
_init():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002ba:	8082                	ret

204002bc <secondary_main>:
secondary_main():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002bc:	1141                	addi	sp,sp,-16
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002be:	c206                	sw	ra,4(sp)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c0:	f14022f3          	csrr	t0,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c4:	00000313          	li	t1,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002c8:	00628563          	beq	t0,t1,204002d2 <secondary_main+0x16>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002cc:	10500073          	wfi
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:282
  j 1b
204002d0:	bff5                	j	204002cc <secondary_main+0x10>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d2:	76b000ef          	jal	ra,2040123c <main>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002d6:	4092                	lw	ra,4(sp)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002d8:	0141                	addi	sp,sp,16
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:291
  ret
204002da:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20400302:	233020ef          	jal	ra,20402d34 <metal_uart_init>
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	716050ef          	jal	ra,20405a2e <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffecc0>
2040032e:	78c050ef          	jal	ra,20405aba <__metal_driver_sifive_fe310_g000_pll_init>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	6ea050ef          	jal	ra,20405a2e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffecc0>
20400358:	643060ef          	jal	ra,2040719a <metal_clock_set_rate_hz>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401000 <r_mie>:
r_mie():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:99

// Machine-mode Interrupt Enable
#define MIE_MEIE (1L << 11)  // external
#define MIE_MTIE (1L << 7)   // timer
#define MIE_MSIE (1L << 3)   // software
static inline uint32_t r_mie() {
20401000:	1101                	addi	sp,sp,-32
20401002:	ce22                	sw	s0,28(sp)
20401004:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:101
    uint32_t x;
    asm volatile("csrr %0, mie" : "=r"(x));
20401006:	304027f3          	csrr	a5,mie
2040100a:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:102
    return x;
2040100e:	fec42783          	lw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:103
}
20401012:	853e                	mv	a0,a5
20401014:	4472                	lw	s0,28(sp)
20401016:	6105                	addi	sp,sp,32
20401018:	8082                	ret

2040101a <w_mie>:
w_mie():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:105

static inline void w_mie(uint32_t x) {
2040101a:	1101                	addi	sp,sp,-32
2040101c:	ce22                	sw	s0,28(sp)
2040101e:	1000                	addi	s0,sp,32
20401020:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
20401024:	fec42783          	lw	a5,-20(s0)
20401028:	30479073          	csrw	mie,a5
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:107
}
2040102c:	0001                	nop
2040102e:	4472                	lw	s0,28(sp)
20401030:	6105                	addi	sp,sp,32
20401032:	8082                	ret

20401034 <w_mtvec>:
w_mtvec():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:157
    asm volatile("csrr %0, stvec" : "=r"(x));
    return x;
}

// Machine-mode interrupt vector
static inline void w_mtvec(uint32_t x) {
20401034:	1101                	addi	sp,sp,-32
20401036:	ce22                	sw	s0,28(sp)
20401038:	1000                	addi	s0,sp,32
2040103a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:158
    asm volatile("csrw mtvec, %0" : : "r"(x));
2040103e:	fec42783          	lw	a5,-20(s0)
20401042:	30579073          	csrw	mtvec,a5
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:159
}
20401046:	0001                	nop
20401048:	4472                	lw	s0,28(sp)
2040104a:	6105                	addi	sp,sp,32
2040104c:	8082                	ret

2040104e <intr_on>:
intr_on():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:224
//Interrupts on and off by JJRH
#define INTERRUPT_ON (1 << 7)
#define INTERRUPT_OFF (0 << 7)

// enable device interrupts by JJRH
static inline void intr_on() {
2040104e:	1101                	addi	sp,sp,-32
20401050:	ce06                	sw	ra,28(sp)
20401052:	cc22                	sw	s0,24(sp)
20401054:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:225
	uint32_t mie = r_mie();
20401056:	376d                	jal	20401000 <r_mie>
20401058:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:226
	mie |= INTERRUPT_ON;
2040105c:	fec42783          	lw	a5,-20(s0)
20401060:	0807e793          	ori	a5,a5,128
20401064:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
20401068:	30046073          	csrsi	mstatus,8
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:228
	w_mie(mie);
2040106c:	fec42503          	lw	a0,-20(s0)
20401070:	376d                	jal	2040101a <w_mie>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:229
}
20401072:	0001                	nop
20401074:	40f2                	lw	ra,28(sp)
20401076:	4462                	lw	s0,24(sp)
20401078:	6105                	addi	sp,sp,32
2040107a:	8082                	ret

2040107c <intr_off>:
intr_off():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:240

// disable device interrupts
//static inline void intr_off() { w_sstatus(r_sstatus() & ~SSTATUS_SIE); }

// disable device interrupts  by JJRH
static inline void intr_off() {
2040107c:	1101                	addi	sp,sp,-32
2040107e:	ce06                	sw	ra,28(sp)
20401080:	cc22                	sw	s0,24(sp)
20401082:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:241
	uint32_t mie = r_mie();
20401084:	3fb5                	jal	20401000 <r_mie>
20401086:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:242
	mie &= INTERRUPT_OFF;
2040108a:	fe042623          	sw	zero,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
2040108e:	30046073          	csrsi	mstatus,8
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:244
	w_mie(mie);
20401092:	fec42503          	lw	a0,-20(s0)
20401096:	3751                	jal	2040101a <w_mie>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:245
}
20401098:	0001                	nop
2040109a:	40f2                	lw	ra,28(sp)
2040109c:	4462                	lw	s0,24(sp)
2040109e:	6105                	addi	sp,sp,32
204010a0:	8082                	ret

204010a2 <osKernelStackInit>:
osKernelStackInit():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:32
typedef struct tcb tcb_t;
tcb_t tcbs[NUM_OF_THREADS];
tcb_t *currentPt;
int32_t TCB_STACK[NUM_OF_THREADS][STACKSIZE];

void osKernelStackInit(int i){
204010a2:	1101                	addi	sp,sp,-32
204010a4:	ce22                	sw	s0,28(sp)
204010a6:	1000                	addi	s0,sp,32
204010a8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:33
	tcbs[i].stackPt	= &TCB_STACK[i][STACKSIZE];
204010ac:	fec42783          	lw	a5,-20(s0)
204010b0:	00178713          	addi	a4,a5,1
204010b4:	32000793          	li	a5,800
204010b8:	02f70733          	mul	a4,a4,a5
204010bc:	800017b7          	lui	a5,0x80001
204010c0:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffedb8>
204010c4:	973e                	add	a4,a4,a5
204010c6:	8d818693          	addi	a3,gp,-1832 # 80000878 <tcbs>
204010ca:	fec42783          	lw	a5,-20(s0)
204010ce:	078e                	slli	a5,a5,0x3
204010d0:	97b6                	add	a5,a5,a3
204010d2:	c398                	sw	a4,0(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:35
	//TCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;
}
204010d4:	0001                	nop
204010d6:	4472                	lw	s0,28(sp)
204010d8:	6105                	addi	sp,sp,32
204010da:	8082                	ret

204010dc <osKernelAddThreads>:
osKernelAddThreads():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:37

uint32_t osKernelAddThreads(void(*task0)(void), void(*task1)(void)/*, void(*task2)(void), void(*task3)(void)*/){
204010dc:	1101                	addi	sp,sp,-32
204010de:	ce06                	sw	ra,28(sp)
204010e0:	cc22                	sw	s0,24(sp)
204010e2:	1000                	addi	s0,sp,32
204010e4:	fea42623          	sw	a0,-20(s0)
204010e8:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:38
	intr_off();
204010ec:	3f41                	jal	2040107c <intr_off>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:39
	tcbs[0].nextPt = &tcbs[1];
204010ee:	8d818793          	addi	a5,gp,-1832 # 80000878 <tcbs>
204010f2:	8e018713          	addi	a4,gp,-1824 # 80000880 <tcbs+0x8>
204010f6:	c3d8                	sw	a4,4(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:40
	tcbs[1].nextPt = &tcbs[0];
204010f8:	8d818793          	addi	a5,gp,-1832 # 80000878 <tcbs>
204010fc:	8d818713          	addi	a4,gp,-1832 # 80000878 <tcbs>
20401100:	c7d8                	sw	a4,12(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:43
	/*tcbs[2].nextPt = &tcbs[3];
	tcbs[3].nextPt = &tcbs[0];*/
	osKernelStackInit(0);
20401102:	4501                	li	a0,0
20401104:	3f79                	jal	204010a2 <osKernelStackInit>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:44
	TCB_STACK[0][STACKSIZE] = (int32_t)(task0);
20401106:	fec42703          	lw	a4,-20(s0)
2040110a:	800017b7          	lui	a5,0x80001
2040110e:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffedb8>
20401112:	32e7a023          	sw	a4,800(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:45
	osKernelStackInit(1);
20401116:	4505                	li	a0,1
20401118:	3769                	jal	204010a2 <osKernelStackInit>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:46
	TCB_STACK[1][STACKSIZE] = (int32_t)(task1);
2040111a:	fe842703          	lw	a4,-24(s0)
2040111e:	800017b7          	lui	a5,0x80001
20401122:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffedb8>
20401126:	64e7a023          	sw	a4,1600(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:47
	TCB_STACK[1][STACKSIZE-1] = (int32_t)(task1);
2040112a:	fe842703          	lw	a4,-24(s0)
2040112e:	800017b7          	lui	a5,0x80001
20401132:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffedb8>
20401136:	62e7ae23          	sw	a4,1596(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:54
	TCB_STACK[2][STACKSIZE] = (int32_t)(task2);
	TCB_STACK[2][STACKSIZE-1] = (int32_t)(task2);
	osKernelStackInit(3);
	TCB_STACK[3][STACKSIZE] = (int32_t)(task3);
	TCB_STACK[3][STACKSIZE-1] = (int32_t)(task3);*/
	currentPt =  &tcbs[0];
2040113a:	8d818713          	addi	a4,gp,-1832 # 80000878 <tcbs>
2040113e:	8ce1aa23          	sw	a4,-1836(gp) # 80000874 <currentPt>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:55
	intr_on();
20401142:	3731                	jal	2040104e <intr_on>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:56
	return 1;
20401144:	4785                	li	a5,1
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:57
}
20401146:	853e                	mv	a0,a5
20401148:	40f2                	lw	ra,28(sp)
2040114a:	4462                	lw	s0,24(sp)
2040114c:	6105                	addi	sp,sp,32
2040114e:	8082                	ret

20401150 <osKernelLaunch>:
osKernelLaunch():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:59

void osKernelLaunch(void){
20401150:	1141                	addi	sp,sp,-16
20401152:	c606                	sw	ra,12(sp)
20401154:	c422                	sw	s0,8(sp)
20401156:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:60
	system_init();
20401158:	2039                	jal	20401166 <system_init>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:61
	osSchedulerLaunch();
2040115a:	2e49                	jal	204014ec <osSchedulerLaunch>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:62
}
2040115c:	0001                	nop
2040115e:	40b2                	lw	ra,12(sp)
20401160:	4422                	lw	s0,8(sp)
20401162:	0141                	addi	sp,sp,16
20401164:	8082                	ret

20401166 <system_init>:
system_init():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:64

void system_init(){
20401166:	1141                	addi	sp,sp,-16
20401168:	c606                	sw	ra,12(sp)
2040116a:	c422                	sw	s0,8(sp)
2040116c:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:66
	//w_mepc((uint32_t)main);
	w_mtvec((uint32_t)switch_to);
2040116e:	204017b7          	lui	a5,0x20401
20401172:	50078793          	addi	a5,a5,1280 # 20401500 <switch_to>
20401176:	853e                	mv	a0,a5
20401178:	3d75                	jal	20401034 <w_mtvec>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:67
	timer_init();
2040117a:	2031                	jal	20401186 <timer_init>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:68
}
2040117c:	0001                	nop
2040117e:	40b2                	lw	ra,12(sp)
20401180:	4422                	lw	s0,8(sp)
20401182:	0141                	addi	sp,sp,16
20401184:	8082                	ret

20401186 <timer_init>:
timer_init():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:71


void timer_init(void) {
20401186:	1141                	addi	sp,sp,-16
20401188:	c606                	sw	ra,12(sp)
2040118a:	c422                	sw	s0,8(sp)
2040118c:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:72
	*MTIMECMP = *MTIME + 0xfffff * 5;
2040118e:	0200c7b7          	lui	a5,0x200c
20401192:	17e1                	addi	a5,a5,-8
20401194:	4398                	lw	a4,0(a5)
20401196:	43dc                	lw	a5,4(a5)
20401198:	02004837          	lui	a6,0x2004
2040119c:	00500537          	lui	a0,0x500
204011a0:	156d                	addi	a0,a0,-5
204011a2:	4581                	li	a1,0
204011a4:	00a70633          	add	a2,a4,a0
204011a8:	88b2                	mv	a7,a2
204011aa:	00e8b8b3          	sltu	a7,a7,a4
204011ae:	00b786b3          	add	a3,a5,a1
204011b2:	00d887b3          	add	a5,a7,a3
204011b6:	86be                	mv	a3,a5
204011b8:	8732                	mv	a4,a2
204011ba:	87b6                	mv	a5,a3
204011bc:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
204011c0:	00f82223          	sw	a5,4(a6)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:73
	intr_on();
204011c4:	3569                	jal	2040104e <intr_on>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:74
}
204011c6:	0001                	nop
204011c8:	40b2                	lw	ra,12(sp)
204011ca:	4422                	lw	s0,8(sp)
204011cc:	0141                	addi	sp,sp,16
204011ce:	8082                	ret

204011d0 <osSchedulerRoundRobin>:
osSchedulerRoundRobin():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:76

void osSchedulerRoundRobin(void){
204011d0:	1141                	addi	sp,sp,-16
204011d2:	c622                	sw	s0,12(sp)
204011d4:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:77
	currentPt = currentPt->nextPt;
204011d6:	8d41a783          	lw	a5,-1836(gp) # 80000874 <currentPt>
204011da:	43d8                	lw	a4,4(a5)
204011dc:	8ce1aa23          	sw	a4,-1836(gp) # 80000874 <currentPt>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.c:78
}
204011e0:	0001                	nop
204011e2:	4432                	lw	s0,12(sp)
204011e4:	0141                	addi	sp,sp,16
204011e6:	8082                	ret

204011e8 <task>:
task():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:13
#include "list.h"

int count = 0, count1= 0;//*, count2= 0, count3= 0;
uint32_t semaphore1, semaphore2;

void task(void){
204011e8:	1141                	addi	sp,sp,-16
204011ea:	c606                	sw	ra,12(sp)
204011ec:	c422                	sw	s0,8(sp)
204011ee:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:15 (discriminator 1)
	while(1){
		osSignalWait(&semaphore2);
204011f0:	f2c18513          	addi	a0,gp,-212 # 80000ecc <semaphore2>
204011f4:	2c75                	jal	204014b0 <osSignalWait>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:16 (discriminator 1)
		count++;
204011f6:	800007b7          	lui	a5,0x80000
204011fa:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffecf8>
204011fe:	00178713          	addi	a4,a5,1
20401202:	800007b7          	lui	a5,0x80000
20401206:	7ce7a423          	sw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffecf8>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:18 (discriminator 1)
		//printf("task 0 counter: %d\n", count);
		osSignalSet(&semaphore1);
2040120a:	f2818513          	addi	a0,gp,-216 # 80000ec8 <semaphore1>
2040120e:	2ca5                	jal	20401486 <osSignalSet>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:15 (discriminator 1)
		osSignalWait(&semaphore2);
20401210:	b7c5                	j	204011f0 <task+0x8>

20401212 <task1>:
task1():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:24
		//asm volatile("wfi");
	}
}


void task1(void){
20401212:	1141                	addi	sp,sp,-16
20401214:	c606                	sw	ra,12(sp)
20401216:	c422                	sw	s0,8(sp)
20401218:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:26 (discriminator 1)
	while(1){
		osSignalWait(&semaphore1);
2040121a:	f2818513          	addi	a0,gp,-216 # 80000ec8 <semaphore1>
2040121e:	2c49                	jal	204014b0 <osSignalWait>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:27 (discriminator 1)
		count1++;
20401220:	800007b7          	lui	a5,0x80000
20401224:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffecfc>
20401228:	00178713          	addi	a4,a5,1
2040122c:	800007b7          	lui	a5,0x80000
20401230:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffecfc>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:29 (discriminator 1)
		//printf("task 1 counter: %d\n", count);
		osSignalSet(&semaphore2);
20401234:	f2c18513          	addi	a0,gp,-212 # 80000ecc <semaphore2>
20401238:	24b9                	jal	20401486 <osSignalSet>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:26 (discriminator 1)
		osSignalWait(&semaphore1);
2040123a:	b7c5                	j	2040121a <task1+0x8>

2040123c <main>:
main():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:51
		asm volatile("wfi");
	}
}
*/

int main() {
2040123c:	1141                	addi	sp,sp,-16
2040123e:	c606                	sw	ra,12(sp)
20401240:	c422                	sw	s0,8(sp)
20401242:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:52
	printf("RISC-V Kernel\n");
20401244:	204007b7          	lui	a5,0x20400
20401248:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
2040124c:	2bcd                	jal	2040183e <puts>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:53
	osSemaphoreInit(&semaphore1, 1);
2040124e:	4585                	li	a1,1
20401250:	f2818513          	addi	a0,gp,-216 # 80000ec8 <semaphore1>
20401254:	2c09                	jal	20401466 <osSemaphoreInit>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:54
	osSemaphoreInit(&semaphore2, 2);
20401256:	4589                	li	a1,2
20401258:	f2c18513          	addi	a0,gp,-212 # 80000ecc <semaphore2>
2040125c:	2429                	jal	20401466 <osSemaphoreInit>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:56

	osKernelAddThreads(&task, &task1 /*, &task2, &task3 */);
2040125e:	204017b7          	lui	a5,0x20401
20401262:	21278593          	addi	a1,a5,530 # 20401212 <task1>
20401266:	204017b7          	lui	a5,0x20401
2040126a:	1e878513          	addi	a0,a5,488 # 204011e8 <task>
2040126e:	35bd                	jal	204010dc <osKernelAddThreads>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:57
	osKernelLaunch();
20401270:	35c5                	jal	20401150 <osKernelLaunch>
20401272:	4781                	li	a5,0
C:\wsFreedomStudio\kernel_sifive_semaphore\src/main.c:58
}
20401274:	853e                	mv	a0,a5
20401276:	40b2                	lw	ra,12(sp)
20401278:	4422                	lw	s0,8(sp)
2040127a:	0141                	addi	sp,sp,16
2040127c:	8082                	ret

2040127e <handle_interrupt>:
handle_interrupt():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:14

#define CLINT_BASE 0x2000000
#define MTIME (volatile unsigned long long int *)(CLINT_BASE + 0xbff8)
#define MTIMECMP (volatile unsigned long long int *)(CLINT_BASE + 0x4000)

void handle_interrupt(uint32_t mcause) {
2040127e:	1101                	addi	sp,sp,-32
20401280:	ce06                	sw	ra,28(sp)
20401282:	cc22                	sw	s0,24(sp)
20401284:	1000                	addi	s0,sp,32
20401286:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:15
    if ((mcause << 1 >> 1) == 0x7) {
2040128a:	fec42703          	lw	a4,-20(s0)
2040128e:	800007b7          	lui	a5,0x80000
20401292:	fff7c793          	not	a5,a5
20401296:	8f7d                	and	a4,a4,a5
20401298:	479d                	li	a5,7
2040129a:	02f71e63          	bne	a4,a5,204012d6 <handle_interrupt+0x58>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:17
        //printf("  Switch context \n");
        *MTIMECMP = *MTIME + 0xfffff * 5;
2040129e:	0200c7b7          	lui	a5,0x200c
204012a2:	17e1                	addi	a5,a5,-8
204012a4:	4398                	lw	a4,0(a5)
204012a6:	43dc                	lw	a5,4(a5)
204012a8:	02004837          	lui	a6,0x2004
204012ac:	00500537          	lui	a0,0x500
204012b0:	156d                	addi	a0,a0,-5
204012b2:	4581                	li	a1,0
204012b4:	00a70633          	add	a2,a4,a0
204012b8:	88b2                	mv	a7,a2
204012ba:	00e8b8b3          	sltu	a7,a7,a4
204012be:	00b786b3          	add	a3,a5,a1
204012c2:	00d887b3          	add	a5,a7,a3
204012c6:	86be                	mv	a3,a5
204012c8:	8732                	mv	a4,a2
204012ca:	87b6                	mv	a5,a3
204012cc:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
204012d0:	00f82223          	sw	a5,4(a6)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:24
    } else {
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1)
            ;
    }
}
204012d4:	a839                	j	204012f2 <handle_interrupt+0x74>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:20
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
204012d6:	fec42703          	lw	a4,-20(s0)
204012da:	800007b7          	lui	a5,0x80000
204012de:	fff7c793          	not	a5,a5
204012e2:	8ff9                	and	a5,a5,a4
204012e4:	85be                	mv	a1,a5
204012e6:	204007b7          	lui	a5,0x20400
204012ea:	37878513          	addi	a0,a5,888 # 20400378 <use_hfxosc+0x3c>
204012ee:	2925                	jal	20401726 <iprintf>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:21 (discriminator 1)
        while (1)
204012f0:	a001                	j	204012f0 <handle_interrupt+0x72>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:24
}
204012f2:	40f2                	lw	ra,28(sp)
204012f4:	4462                	lw	s0,24(sp)
204012f6:	6105                	addi	sp,sp,32
204012f8:	8082                	ret

204012fa <handle_exception>:
handle_exception():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:26

void handle_exception(uint32_t mcause) {
204012fa:	7179                	addi	sp,sp,-48
204012fc:	d606                	sw	ra,44(sp)
204012fe:	d422                	sw	s0,40(sp)
20401300:	1800                	addi	s0,sp,48
20401302:	fca42e23          	sw	a0,-36(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:29
    unsigned long long int mie;

    if (mcause == 0x8) {
20401306:	fdc42703          	lw	a4,-36(s0)
2040130a:	47a1                	li	a5,8
2040130c:	06f71663          	bne	a4,a5,20401378 <handle_exception+0x7e>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:30
        *MTIMECMP = *MTIME + 0xfffff * 25;
20401310:	0200c7b7          	lui	a5,0x200c
20401314:	17e1                	addi	a5,a5,-8
20401316:	4398                	lw	a4,0(a5)
20401318:	43dc                	lw	a5,4(a5)
2040131a:	02004837          	lui	a6,0x2004
2040131e:	01900537          	lui	a0,0x1900
20401322:	151d                	addi	a0,a0,-25
20401324:	4581                	li	a1,0
20401326:	00a70633          	add	a2,a4,a0
2040132a:	88b2                	mv	a7,a2
2040132c:	00e8b8b3          	sltu	a7,a7,a4
20401330:	00b786b3          	add	a3,a5,a1
20401334:	00d887b3          	add	a5,a7,a3
20401338:	86be                	mv	a3,a5
2040133a:	8732                	mv	a4,a2
2040133c:	87b6                	mv	a5,a3
2040133e:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
20401342:	00f82223          	sw	a5,4(a6)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:32

        asm volatile("csrr %0, mie" : "=r"(mie));
20401346:	30402773          	csrr	a4,mie
2040134a:	fee42423          	sw	a4,-24(s0)
2040134e:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:33
        mie |= (1 << 7);
20401352:	fe842783          	lw	a5,-24(s0)
20401356:	0807e793          	ori	a5,a5,128
2040135a:	fef42423          	sw	a5,-24(s0)
2040135e:	fec42783          	lw	a5,-20(s0)
20401362:	0007e793          	ori	a5,a5,0
20401366:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:34
        asm volatile("csrw mie, %0" : "=r"(mie));
2040136a:	30471073          	csrw	mie,a4
2040136e:	fee42423          	sw	a4,-24(s0)
20401372:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:40
    } else {
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1)
            ;
    }
}
20401376:	a839                	j	20401394 <handle_exception+0x9a>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:36
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
20401378:	fdc42703          	lw	a4,-36(s0)
2040137c:	800007b7          	lui	a5,0x80000
20401380:	fff7c793          	not	a5,a5
20401384:	8ff9                	and	a5,a5,a4
20401386:	85be                	mv	a1,a5
20401388:	204007b7          	lui	a5,0x20400
2040138c:	37878513          	addi	a0,a5,888 # 20400378 <use_hfxosc+0x3c>
20401390:	2e59                	jal	20401726 <iprintf>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:37 (discriminator 1)
        while (1)
20401392:	a001                	j	20401392 <handle_exception+0x98>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:40
}
20401394:	50b2                	lw	ra,44(sp)
20401396:	5422                	lw	s0,40(sp)
20401398:	6145                	addi	sp,sp,48
2040139a:	8082                	ret

2040139c <handle_trap>:
handle_trap():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:42

void handle_trap() {
2040139c:	1101                	addi	sp,sp,-32
2040139e:	ce06                	sw	ra,28(sp)
204013a0:	cc22                	sw	s0,24(sp)
204013a2:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:44
    uint32_t mcause, mepc;
    asm volatile("csrr %0, mcause" : "=r"(mcause));
204013a4:	342027f3          	csrr	a5,mcause
204013a8:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:45
    asm volatile("csrr %0, mepc" : "=r"(mepc));
204013ac:	341027f3          	csrr	a5,mepc
204013b0:	fef42423          	sw	a5,-24(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:47

    if (mcause >> 31) {
204013b4:	fec42783          	lw	a5,-20(s0)
204013b8:	0007d663          	bgez	a5,204013c4 <handle_trap+0x28>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:48
        handle_interrupt(mcause);
204013bc:	fec42503          	lw	a0,-20(s0)
204013c0:	3d7d                	jal	2040127e <handle_interrupt>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:55
        handle_exception(mcause);
        asm volatile("csrr t0, mepc");
        asm volatile("addi t0, t0, 0x4");
        asm volatile("csrw mepc, t0");
    }
}
204013c2:	a809                	j	204013d4 <handle_trap+0x38>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:50
        handle_exception(mcause);
204013c4:	fec42503          	lw	a0,-20(s0)
204013c8:	3f0d                	jal	204012fa <handle_exception>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:51
        asm volatile("csrr t0, mepc");
204013ca:	341022f3          	csrr	t0,mepc
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:52
        asm volatile("addi t0, t0, 0x4");
204013ce:	0291                	addi	t0,t0,4
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:53
        asm volatile("csrw mepc, t0");
204013d0:	34129073          	csrw	mepc,t0
C:\wsFreedomStudio\kernel_sifive_semaphore\src/trap.c:55
}
204013d4:	0001                	nop
204013d6:	40f2                	lw	ra,28(sp)
204013d8:	4462                	lw	s0,24(sp)
204013da:	6105                	addi	sp,sp,32
204013dc:	8082                	ret

204013de <r_mie>:
r_mie():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:99
static inline uint32_t r_mie() {
204013de:	1101                	addi	sp,sp,-32
204013e0:	ce22                	sw	s0,28(sp)
204013e2:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:101
    asm volatile("csrr %0, mie" : "=r"(x));
204013e4:	304027f3          	csrr	a5,mie
204013e8:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:102
    return x;
204013ec:	fec42783          	lw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:103
}
204013f0:	853e                	mv	a0,a5
204013f2:	4472                	lw	s0,28(sp)
204013f4:	6105                	addi	sp,sp,32
204013f6:	8082                	ret

204013f8 <w_mie>:
w_mie():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:105
static inline void w_mie(uint32_t x) {
204013f8:	1101                	addi	sp,sp,-32
204013fa:	ce22                	sw	s0,28(sp)
204013fc:	1000                	addi	s0,sp,32
204013fe:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
20401402:	fec42783          	lw	a5,-20(s0)
20401406:	30479073          	csrw	mie,a5
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:107
}
2040140a:	0001                	nop
2040140c:	4472                	lw	s0,28(sp)
2040140e:	6105                	addi	sp,sp,32
20401410:	8082                	ret

20401412 <intr_on>:
intr_on():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:224
static inline void intr_on() {
20401412:	1101                	addi	sp,sp,-32
20401414:	ce06                	sw	ra,28(sp)
20401416:	cc22                	sw	s0,24(sp)
20401418:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:225
	uint32_t mie = r_mie();
2040141a:	37d1                	jal	204013de <r_mie>
2040141c:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:226
	mie |= INTERRUPT_ON;
20401420:	fec42783          	lw	a5,-20(s0)
20401424:	0807e793          	ori	a5,a5,128
20401428:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
2040142c:	30046073          	csrsi	mstatus,8
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:228
	w_mie(mie);
20401430:	fec42503          	lw	a0,-20(s0)
20401434:	37d1                	jal	204013f8 <w_mie>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:229
}
20401436:	0001                	nop
20401438:	40f2                	lw	ra,28(sp)
2040143a:	4462                	lw	s0,24(sp)
2040143c:	6105                	addi	sp,sp,32
2040143e:	8082                	ret

20401440 <intr_off>:
intr_off():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:240
static inline void intr_off() {
20401440:	1101                	addi	sp,sp,-32
20401442:	ce06                	sw	ra,28(sp)
20401444:	cc22                	sw	s0,24(sp)
20401446:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:241
	uint32_t mie = r_mie();
20401448:	3f59                	jal	204013de <r_mie>
2040144a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:242
	mie &= INTERRUPT_OFF;
2040144e:	fe042623          	sw	zero,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
20401452:	30046073          	csrsi	mstatus,8
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:244
	w_mie(mie);
20401456:	fec42503          	lw	a0,-20(s0)
2040145a:	3f79                	jal	204013f8 <w_mie>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/riscv.h:245
}
2040145c:	0001                	nop
2040145e:	40f2                	lw	ra,28(sp)
20401460:	4462                	lw	s0,24(sp)
20401462:	6105                	addi	sp,sp,32
20401464:	8082                	ret

20401466 <osSemaphoreInit>:
osSemaphoreInit():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:11
 */

#include "kernel.h"
#include "riscv.h"

void osSemaphoreInit(int32_t *semaphore, int32_t value){
20401466:	1101                	addi	sp,sp,-32
20401468:	ce22                	sw	s0,28(sp)
2040146a:	1000                	addi	s0,sp,32
2040146c:	fea42623          	sw	a0,-20(s0)
20401470:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:12
	*semaphore = value;
20401474:	fec42783          	lw	a5,-20(s0)
20401478:	fe842703          	lw	a4,-24(s0)
2040147c:	c398                	sw	a4,0(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:13
}
2040147e:	0001                	nop
20401480:	4472                	lw	s0,28(sp)
20401482:	6105                	addi	sp,sp,32
20401484:	8082                	ret

20401486 <osSignalSet>:
osSignalSet():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:15

void osSignalSet(int32_t *semaphore){
20401486:	1101                	addi	sp,sp,-32
20401488:	ce06                	sw	ra,28(sp)
2040148a:	cc22                	sw	s0,24(sp)
2040148c:	1000                	addi	s0,sp,32
2040148e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:16
	intr_off();
20401492:	377d                	jal	20401440 <intr_off>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:17
	*semaphore +=1;
20401494:	fec42783          	lw	a5,-20(s0)
20401498:	439c                	lw	a5,0(a5)
2040149a:	00178713          	addi	a4,a5,1
2040149e:	fec42783          	lw	a5,-20(s0)
204014a2:	c398                	sw	a4,0(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:18
	intr_on();
204014a4:	37bd                	jal	20401412 <intr_on>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:19
}
204014a6:	0001                	nop
204014a8:	40f2                	lw	ra,28(sp)
204014aa:	4462                	lw	s0,24(sp)
204014ac:	6105                	addi	sp,sp,32
204014ae:	8082                	ret

204014b0 <osSignalWait>:
osSignalWait():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:21

void osSignalWait(int32_t *semaphore){
204014b0:	1101                	addi	sp,sp,-32
204014b2:	ce06                	sw	ra,28(sp)
204014b4:	cc22                	sw	s0,24(sp)
204014b6:	1000                	addi	s0,sp,32
204014b8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:22
	intr_off();
204014bc:	3751                	jal	20401440 <intr_off>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:23
	while(*semaphore <=0){
204014be:	a019                	j	204014c4 <osSignalWait+0x14>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:24
		intr_off();
204014c0:	3741                	jal	20401440 <intr_off>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:25
		intr_on();
204014c2:	3f81                	jal	20401412 <intr_on>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:23
	while(*semaphore <=0){
204014c4:	fec42783          	lw	a5,-20(s0)
204014c8:	439c                	lw	a5,0(a5)
204014ca:	fef05be3          	blez	a5,204014c0 <osSignalWait+0x10>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:27
	}
	*semaphore -=1;
204014ce:	fec42783          	lw	a5,-20(s0)
204014d2:	439c                	lw	a5,0(a5)
204014d4:	fff78713          	addi	a4,a5,-1
204014d8:	fec42783          	lw	a5,-20(s0)
204014dc:	c398                	sw	a4,0(a5)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:28
	intr_on();
204014de:	3f15                	jal	20401412 <intr_on>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/semaphore.c:29
}
204014e0:	0001                	nop
204014e2:	40f2                	lw	ra,28(sp)
204014e4:	4462                	lw	s0,24(sp)
204014e6:	6105                	addi	sp,sp,32
204014e8:	8082                	ret
	...

204014ec <osSchedulerLaunch>:
osSchedulerLaunch():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:6
.section .text
.global osSchedulerLaunch
.type osSchedulerLaunch, @function
.extern currentPt
osSchedulerLaunch:
    lw t0, currentPt   # Load currentPt into T0
204014ec:	8d41a283          	lw	t0,-1836(gp) # 80000874 <currentPt>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:7
    lw t1, (t0)
204014f0:	0002a303          	lw	t1,0(t0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:8
    lw sp, (t0)        # t1 = &t0
204014f4:	0002a103          	lw	sp,0(t0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:9
    lw ra, (sp)
204014f8:	4082                	lw	ra,0(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:10
    addi sp, sp, -132   # make a stack frame
204014fa:	f7c10113          	addi	sp,sp,-132
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:11
    ret
204014fe:	8082                	ret

20401500 <switch_to>:
switch_to():
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:20
.global switch_to
.type switch_to, @function
.align 2
switch_to:

    call handle_trap
20401500:	3d71                	jal	2040139c <handle_trap>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:21
    mv tp, sp
20401502:	820a                	mv	tp,sp
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:22
    mv sp, fp
20401504:	8122                	mv	sp,s0
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:24
    #Push register
    sw ra, (sp)
20401506:	c006                	sw	ra,0(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:25
    sw sp, 4(sp)
20401508:	c20a                	sw	sp,4(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:26
    sw gp, 8(sp)
2040150a:	c40e                	sw	gp,8(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:27
    sw tp, 12(sp)
2040150c:	c612                	sw	tp,12(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:28
    sw t0, 16(sp)
2040150e:	c816                	sw	t0,16(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:29
    sw t1, 20(sp)
20401510:	ca1a                	sw	t1,20(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:30
    sw t2, 24(sp)
20401512:	cc1e                	sw	t2,24(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:31
    sw t3, 28(sp)
20401514:	ce72                	sw	t3,28(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:32
    sw s0, 32(sp)
20401516:	d022                	sw	s0,32(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:33
    sw s1, 36(sp)
20401518:	d226                	sw	s1,36(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:34
    sw a0, 40(sp)
2040151a:	d42a                	sw	a0,40(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:35
    sw a1, 44(sp)
2040151c:	d62e                	sw	a1,44(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:36
    sw a2, 48(sp)
2040151e:	d832                	sw	a2,48(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:37
    sw a3, 52(sp)
20401520:	da36                	sw	a3,52(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:38
    sw a4, 56(sp)
20401522:	dc3a                	sw	a4,56(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:39
    sw a5, 60(sp)
20401524:	de3e                	sw	a5,60(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:40
    sw a6, 64(sp)
20401526:	c0c2                	sw	a6,64(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:41
    sw a7, 68(sp)
20401528:	c2c6                	sw	a7,68(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:42
    sw s2, 72(sp)
2040152a:	c4ca                	sw	s2,72(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:43
    sw s3, 76(sp)
2040152c:	c6ce                	sw	s3,76(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:44
    sw s4, 80(sp)
2040152e:	c8d2                	sw	s4,80(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:45
    sw s5, 84(sp)
20401530:	cad6                	sw	s5,84(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:46
    sw s6, 88(sp)
20401532:	ccda                	sw	s6,88(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:47
    sw s7, 92(sp)
20401534:	cede                	sw	s7,92(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:48
    sw s8, 96(sp)
20401536:	d0e2                	sw	s8,96(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:49
    sw s9, 100(sp)
20401538:	d2e6                	sw	s9,100(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:50
    sw s10,104(sp)
2040153a:	d4ea                	sw	s10,104(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:51
    sw s11,108(sp)
2040153c:	d6ee                	sw	s11,108(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:52
    sw t3, 112(sp)
2040153e:	d8f2                	sw	t3,112(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:53
    sw t4, 116(sp)
20401540:	daf6                	sw	t4,116(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:54
    sw t5, 120(sp)
20401542:	dcfa                	sw	t5,120(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:55
    sw t6, 124(sp)
20401544:	defe                	sw	t6,124(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:56
    csrr t0, mepc
20401546:	341022f3          	csrr	t0,mepc
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:57
    sw t0, 132(sp)
2040154a:	c316                	sw	t0,132(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:75
    #addi sp, sp, -132  # make a stack frame
    #lw t0, 132(sp)     # load mepc
    #csrw mepc, t0

    #Switch context in c
    call osSchedulerRoundRobin
2040154c:	3151                	jal	204011d0 <osSchedulerRoundRobin>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:76
    lw t0, currentPt   # Load currentPt into T0
2040154e:	8d41a283          	lw	t0,-1836(gp) # 80000874 <currentPt>
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:77
    lw sp, (t0)
20401552:	0002a103          	lw	sp,0(t0)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:78
    addi sp, sp, -132  # make a stack frame
20401556:	f7c10113          	addi	sp,sp,-132
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:79
    lw t0, 132(sp)     # load mepc
2040155a:	429a                	lw	t0,132(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:80
    csrw mepc, t0
2040155c:	34129073          	csrw	mepc,t0
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:84


    #Pop register
    lw ra, (sp)
20401560:	4082                	lw	ra,0(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:87
    #lw sp, 4(sp)
    #lw gp, 8(sp)
    lw tp, 12(sp)
20401562:	4232                	lw	tp,12(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:88
    lw t0, 16(sp)
20401564:	42c2                	lw	t0,16(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:89
    lw t1, 20(sp)
20401566:	4352                	lw	t1,20(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:90
    lw t2, 24(sp)
20401568:	43e2                	lw	t2,24(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:91
    lw t3, 28(sp)
2040156a:	4e72                	lw	t3,28(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:92
    lw s0, 32(sp)
2040156c:	5402                	lw	s0,32(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:93
    lw s1, 36(sp)
2040156e:	5492                	lw	s1,36(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:94
    lw a0, 40(sp)
20401570:	5522                	lw	a0,40(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:95
    lw a1, 44(sp)
20401572:	55b2                	lw	a1,44(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:96
    lw a2, 48(sp)
20401574:	5642                	lw	a2,48(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:97
    lw a3, 52(sp)
20401576:	56d2                	lw	a3,52(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:98
    lw a4, 56(sp)
20401578:	5762                	lw	a4,56(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:99
    lw a5, 60(sp)
2040157a:	57f2                	lw	a5,60(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:100
    lw a6, 64(sp)
2040157c:	4806                	lw	a6,64(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:101
    lw a7, 68(sp)
2040157e:	4896                	lw	a7,68(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:102
    lw s2, 72(sp)
20401580:	4926                	lw	s2,72(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:103
    lw s3, 76(sp)
20401582:	49b6                	lw	s3,76(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:104
    lw s4, 80(sp)
20401584:	4a46                	lw	s4,80(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:105
    lw s5, 84(sp)
20401586:	4ad6                	lw	s5,84(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:106
    lw s6, 88(sp)
20401588:	4b66                	lw	s6,88(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:107
    lw s7, 92(sp)
2040158a:	4bf6                	lw	s7,92(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:108
    lw s8, 96(sp)
2040158c:	5c06                	lw	s8,96(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:109
    lw s9, 100(sp)
2040158e:	5c96                	lw	s9,100(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:110
    lw s10,104(sp)
20401590:	5d26                	lw	s10,104(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:111
    lw s11,108(sp)
20401592:	5db6                	lw	s11,108(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:112
    lw t3, 112(sp)
20401594:	5e46                	lw	t3,112(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:113
    lw t4, 116(sp)
20401596:	5ed6                	lw	t4,116(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:114
    lw t5, 120(sp)
20401598:	5f66                	lw	t5,120(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:115
    lw t6, 124(sp)
2040159a:	5ff6                	lw	t6,124(sp)
C:\wsFreedomStudio\kernel_sifive_semaphore\src/kernel.S:117

    mret
2040159c:	30200073          	mret
	...

204015a2 <_free_r>:
_free_r():
204015a2:	c1d5                	beqz	a1,20401646 <_free_r+0xa4>
204015a4:	ffc5a783          	lw	a5,-4(a1)
204015a8:	1101                	addi	sp,sp,-32
204015aa:	cc22                	sw	s0,24(sp)
204015ac:	ce06                	sw	ra,28(sp)
204015ae:	ffc58413          	addi	s0,a1,-4
204015b2:	0007d363          	bgez	a5,204015b8 <_free_r+0x16>
204015b6:	943e                	add	s0,s0,a5
204015b8:	c62a                	sw	a0,12(sp)
204015ba:	1fd000ef          	jal	ra,20401fb6 <__malloc_lock>
204015be:	5fbff717          	auipc	a4,0x5fbff
204015c2:	21270713          	addi	a4,a4,530 # 800007d0 <__malloc_free_list>
204015c6:	431c                	lw	a5,0(a4)
204015c8:	4532                	lw	a0,12(sp)
204015ca:	eb89                	bnez	a5,204015dc <_free_r+0x3a>
204015cc:	00042223          	sw	zero,4(s0)
204015d0:	c300                	sw	s0,0(a4)
204015d2:	4462                	lw	s0,24(sp)
204015d4:	40f2                	lw	ra,28(sp)
204015d6:	6105                	addi	sp,sp,32
204015d8:	1e10006f          	j	20401fb8 <__malloc_unlock>
204015dc:	00f47d63          	bgeu	s0,a5,204015f6 <_free_r+0x54>
204015e0:	4010                	lw	a2,0(s0)
204015e2:	00c406b3          	add	a3,s0,a2
204015e6:	00d79663          	bne	a5,a3,204015f2 <_free_r+0x50>
204015ea:	4394                	lw	a3,0(a5)
204015ec:	43dc                	lw	a5,4(a5)
204015ee:	96b2                	add	a3,a3,a2
204015f0:	c014                	sw	a3,0(s0)
204015f2:	c05c                	sw	a5,4(s0)
204015f4:	bff1                	j	204015d0 <_free_r+0x2e>
204015f6:	873e                	mv	a4,a5
204015f8:	43dc                	lw	a5,4(a5)
204015fa:	c399                	beqz	a5,20401600 <_free_r+0x5e>
204015fc:	fef47de3          	bgeu	s0,a5,204015f6 <_free_r+0x54>
20401600:	4314                	lw	a3,0(a4)
20401602:	00d70633          	add	a2,a4,a3
20401606:	00861f63          	bne	a2,s0,20401624 <_free_r+0x82>
2040160a:	4010                	lw	a2,0(s0)
2040160c:	96b2                	add	a3,a3,a2
2040160e:	c314                	sw	a3,0(a4)
20401610:	00d70633          	add	a2,a4,a3
20401614:	fac79fe3          	bne	a5,a2,204015d2 <_free_r+0x30>
20401618:	4390                	lw	a2,0(a5)
2040161a:	43dc                	lw	a5,4(a5)
2040161c:	96b2                	add	a3,a3,a2
2040161e:	c314                	sw	a3,0(a4)
20401620:	c35c                	sw	a5,4(a4)
20401622:	bf45                	j	204015d2 <_free_r+0x30>
20401624:	00c47563          	bgeu	s0,a2,2040162e <_free_r+0x8c>
20401628:	47b1                	li	a5,12
2040162a:	c11c                	sw	a5,0(a0)
2040162c:	b75d                	j	204015d2 <_free_r+0x30>
2040162e:	4010                	lw	a2,0(s0)
20401630:	00c406b3          	add	a3,s0,a2
20401634:	00d79663          	bne	a5,a3,20401640 <_free_r+0x9e>
20401638:	4394                	lw	a3,0(a5)
2040163a:	43dc                	lw	a5,4(a5)
2040163c:	96b2                	add	a3,a3,a2
2040163e:	c014                	sw	a3,0(s0)
20401640:	c05c                	sw	a5,4(s0)
20401642:	c340                	sw	s0,4(a4)
20401644:	b779                	j	204015d2 <_free_r+0x30>
20401646:	8082                	ret

20401648 <_malloc_r>:
_malloc_r():
20401648:	1101                	addi	sp,sp,-32
2040164a:	ca26                	sw	s1,20(sp)
2040164c:	00358493          	addi	s1,a1,3
20401650:	98f1                	andi	s1,s1,-4
20401652:	c84a                	sw	s2,16(sp)
20401654:	ce06                	sw	ra,28(sp)
20401656:	cc22                	sw	s0,24(sp)
20401658:	c64e                	sw	s3,12(sp)
2040165a:	04a1                	addi	s1,s1,8
2040165c:	47b1                	li	a5,12
2040165e:	892a                	mv	s2,a0
20401660:	04f4f663          	bgeu	s1,a5,204016ac <_malloc_r+0x64>
20401664:	44b1                	li	s1,12
20401666:	04b4e563          	bltu	s1,a1,204016b0 <_malloc_r+0x68>
2040166a:	854a                	mv	a0,s2
2040166c:	14b000ef          	jal	ra,20401fb6 <__malloc_lock>
20401670:	5fbff697          	auipc	a3,0x5fbff
20401674:	16068693          	addi	a3,a3,352 # 800007d0 <__malloc_free_list>
20401678:	4298                	lw	a4,0(a3)
2040167a:	843a                	mv	s0,a4
2040167c:	e429                	bnez	s0,204016c6 <_malloc_r+0x7e>
2040167e:	5fbff417          	auipc	s0,0x5fbff
20401682:	15640413          	addi	s0,s0,342 # 800007d4 <__malloc_sbrk_start>
20401686:	401c                	lw	a5,0(s0)
20401688:	e789                	bnez	a5,20401692 <_malloc_r+0x4a>
2040168a:	4581                	li	a1,0
2040168c:	854a                	mv	a0,s2
2040168e:	2a75                	jal	2040184a <_sbrk_r>
20401690:	c008                	sw	a0,0(s0)
20401692:	85a6                	mv	a1,s1
20401694:	854a                	mv	a0,s2
20401696:	2a55                	jal	2040184a <_sbrk_r>
20401698:	59fd                	li	s3,-1
2040169a:	07351a63          	bne	a0,s3,2040170e <_malloc_r+0xc6>
2040169e:	47b1                	li	a5,12
204016a0:	00f92023          	sw	a5,0(s2)
204016a4:	854a                	mv	a0,s2
204016a6:	113000ef          	jal	ra,20401fb8 <__malloc_unlock>
204016aa:	a031                	j	204016b6 <_malloc_r+0x6e>
204016ac:	fa04dde3          	bgez	s1,20401666 <_malloc_r+0x1e>
204016b0:	47b1                	li	a5,12
204016b2:	00f92023          	sw	a5,0(s2)
204016b6:	4501                	li	a0,0
204016b8:	40f2                	lw	ra,28(sp)
204016ba:	4462                	lw	s0,24(sp)
204016bc:	44d2                	lw	s1,20(sp)
204016be:	4942                	lw	s2,16(sp)
204016c0:	49b2                	lw	s3,12(sp)
204016c2:	6105                	addi	sp,sp,32
204016c4:	8082                	ret
204016c6:	401c                	lw	a5,0(s0)
204016c8:	8f85                	sub	a5,a5,s1
204016ca:	0207cf63          	bltz	a5,20401708 <_malloc_r+0xc0>
204016ce:	462d                	li	a2,11
204016d0:	00f67663          	bgeu	a2,a5,204016dc <_malloc_r+0x94>
204016d4:	c01c                	sw	a5,0(s0)
204016d6:	943e                	add	s0,s0,a5
204016d8:	c004                	sw	s1,0(s0)
204016da:	a029                	j	204016e4 <_malloc_r+0x9c>
204016dc:	405c                	lw	a5,4(s0)
204016de:	02871363          	bne	a4,s0,20401704 <_malloc_r+0xbc>
204016e2:	c29c                	sw	a5,0(a3)
204016e4:	854a                	mv	a0,s2
204016e6:	0d3000ef          	jal	ra,20401fb8 <__malloc_unlock>
204016ea:	00b40513          	addi	a0,s0,11
204016ee:	00440793          	addi	a5,s0,4
204016f2:	9961                	andi	a0,a0,-8
204016f4:	40f50733          	sub	a4,a0,a5
204016f8:	fcf500e3          	beq	a0,a5,204016b8 <_malloc_r+0x70>
204016fc:	943a                	add	s0,s0,a4
204016fe:	8f89                	sub	a5,a5,a0
20401700:	c01c                	sw	a5,0(s0)
20401702:	bf5d                	j	204016b8 <_malloc_r+0x70>
20401704:	c35c                	sw	a5,4(a4)
20401706:	bff9                	j	204016e4 <_malloc_r+0x9c>
20401708:	8722                	mv	a4,s0
2040170a:	4040                	lw	s0,4(s0)
2040170c:	bf85                	j	2040167c <_malloc_r+0x34>
2040170e:	00350413          	addi	s0,a0,3 # 1900003 <__heap_size+0x18ff803>
20401712:	9871                	andi	s0,s0,-4
20401714:	fc8502e3          	beq	a0,s0,204016d8 <_malloc_r+0x90>
20401718:	40a405b3          	sub	a1,s0,a0
2040171c:	854a                	mv	a0,s2
2040171e:	2235                	jal	2040184a <_sbrk_r>
20401720:	fb351ce3          	bne	a0,s3,204016d8 <_malloc_r+0x90>
20401724:	bfad                	j	2040169e <_malloc_r+0x56>

20401726 <iprintf>:
printf():
20401726:	715d                	addi	sp,sp,-80
20401728:	d422                	sw	s0,40(sp)
2040172a:	d606                	sw	ra,44(sp)
2040172c:	842a                	mv	s0,a0
2040172e:	da2e                	sw	a1,52(sp)
20401730:	dc32                	sw	a2,56(sp)
20401732:	de36                	sw	a3,60(sp)
20401734:	c0ba                	sw	a4,64(sp)
20401736:	c2be                	sw	a5,68(sp)
20401738:	c4c2                	sw	a6,72(sp)
2040173a:	c6c6                	sw	a7,76(sp)
2040173c:	5fbff517          	auipc	a0,0x5fbff
20401740:	06452503          	lw	a0,100(a0) # 800007a0 <_impure_ptr>
20401744:	c511                	beqz	a0,20401750 <iprintf+0x2a>
20401746:	4d1c                	lw	a5,24(a0)
20401748:	e781                	bnez	a5,20401750 <iprintf+0x2a>
2040174a:	c62a                	sw	a0,12(sp)
2040174c:	2ba9                	jal	20401ca6 <__sinit>
2040174e:	4532                	lw	a0,12(sp)
20401750:	450c                	lw	a1,8(a0)
20401752:	1854                	addi	a3,sp,52
20401754:	8622                	mv	a2,s0
20401756:	ce36                	sw	a3,28(sp)
20401758:	0cf000ef          	jal	ra,20402026 <_vfiprintf_r>
2040175c:	50b2                	lw	ra,44(sp)
2040175e:	5422                	lw	s0,40(sp)
20401760:	6161                	addi	sp,sp,80
20401762:	8082                	ret

20401764 <_puts_r>:
_puts_r():
20401764:	1101                	addi	sp,sp,-32
20401766:	ca26                	sw	s1,20(sp)
20401768:	c84a                	sw	s2,16(sp)
2040176a:	ce06                	sw	ra,28(sp)
2040176c:	cc22                	sw	s0,24(sp)
2040176e:	c64e                	sw	s3,12(sp)
20401770:	c452                	sw	s4,8(sp)
20401772:	84aa                	mv	s1,a0
20401774:	892e                	mv	s2,a1
20401776:	c501                	beqz	a0,2040177e <_puts_r+0x1a>
20401778:	4d1c                	lw	a5,24(a0)
2040177a:	e391                	bnez	a5,2040177e <_puts_r+0x1a>
2040177c:	232d                	jal	20401ca6 <__sinit>
2040177e:	4c9c                	lw	a5,24(s1)
20401780:	4480                	lw	s0,8(s1)
20401782:	e399                	bnez	a5,20401788 <_puts_r+0x24>
20401784:	8526                	mv	a0,s1
20401786:	2305                	jal	20401ca6 <__sinit>
20401788:	fffff797          	auipc	a5,0xfffff
2040178c:	c2878793          	addi	a5,a5,-984 # 204003b0 <__sf_fake_stdin>
20401790:	02f41c63          	bne	s0,a5,204017c8 <_puts_r+0x64>
20401794:	40c0                	lw	s0,4(s1)
20401796:	00c45783          	lhu	a5,12(s0)
2040179a:	8ba1                	andi	a5,a5,8
2040179c:	c7b1                	beqz	a5,204017e8 <_puts_r+0x84>
2040179e:	481c                	lw	a5,16(s0)
204017a0:	c7a1                	beqz	a5,204017e8 <_puts_r+0x84>
204017a2:	59fd                	li	s3,-1
204017a4:	4a29                	li	s4,10
204017a6:	441c                	lw	a5,8(s0)
204017a8:	00094583          	lbu	a1,0(s2)
204017ac:	17fd                	addi	a5,a5,-1
204017ae:	e9b1                	bnez	a1,20401802 <_puts_r+0x9e>
204017b0:	c41c                	sw	a5,8(s0)
204017b2:	0607de63          	bgez	a5,2040182e <_puts_r+0xca>
204017b6:	8622                	mv	a2,s0
204017b8:	45a9                	li	a1,10
204017ba:	8526                	mv	a0,s1
204017bc:	287d                	jal	2040187a <__swbuf_r>
204017be:	57fd                	li	a5,-1
204017c0:	02f50863          	beq	a0,a5,204017f0 <_puts_r+0x8c>
204017c4:	4529                	li	a0,10
204017c6:	a035                	j	204017f2 <_puts_r+0x8e>
204017c8:	fffff797          	auipc	a5,0xfffff
204017cc:	c0878793          	addi	a5,a5,-1016 # 204003d0 <__sf_fake_stdout>
204017d0:	00f41463          	bne	s0,a5,204017d8 <_puts_r+0x74>
204017d4:	4480                	lw	s0,8(s1)
204017d6:	b7c1                	j	20401796 <_puts_r+0x32>
204017d8:	fffff797          	auipc	a5,0xfffff
204017dc:	bb878793          	addi	a5,a5,-1096 # 20400390 <__sf_fake_stderr>
204017e0:	faf41be3          	bne	s0,a5,20401796 <_puts_r+0x32>
204017e4:	44c0                	lw	s0,12(s1)
204017e6:	bf45                	j	20401796 <_puts_r+0x32>
204017e8:	85a2                	mv	a1,s0
204017ea:	8526                	mv	a0,s1
204017ec:	22b9                	jal	2040193a <__swsetup_r>
204017ee:	d955                	beqz	a0,204017a2 <_puts_r+0x3e>
204017f0:	557d                	li	a0,-1
204017f2:	40f2                	lw	ra,28(sp)
204017f4:	4462                	lw	s0,24(sp)
204017f6:	44d2                	lw	s1,20(sp)
204017f8:	4942                	lw	s2,16(sp)
204017fa:	49b2                	lw	s3,12(sp)
204017fc:	4a22                	lw	s4,8(sp)
204017fe:	6105                	addi	sp,sp,32
20401800:	8082                	ret
20401802:	c41c                	sw	a5,8(s0)
20401804:	0905                	addi	s2,s2,1
20401806:	0007d763          	bgez	a5,20401814 <_puts_r+0xb0>
2040180a:	4c18                	lw	a4,24(s0)
2040180c:	00e7cb63          	blt	a5,a4,20401822 <_puts_r+0xbe>
20401810:	01458963          	beq	a1,s4,20401822 <_puts_r+0xbe>
20401814:	401c                	lw	a5,0(s0)
20401816:	00178713          	addi	a4,a5,1
2040181a:	c018                	sw	a4,0(s0)
2040181c:	00b78023          	sb	a1,0(a5)
20401820:	b759                	j	204017a6 <_puts_r+0x42>
20401822:	8622                	mv	a2,s0
20401824:	8526                	mv	a0,s1
20401826:	2891                	jal	2040187a <__swbuf_r>
20401828:	f7351fe3          	bne	a0,s3,204017a6 <_puts_r+0x42>
2040182c:	b7d1                	j	204017f0 <_puts_r+0x8c>
2040182e:	401c                	lw	a5,0(s0)
20401830:	00178713          	addi	a4,a5,1
20401834:	c018                	sw	a4,0(s0)
20401836:	4729                	li	a4,10
20401838:	00e78023          	sb	a4,0(a5)
2040183c:	b761                	j	204017c4 <_puts_r+0x60>

2040183e <puts>:
puts():
2040183e:	85aa                	mv	a1,a0
20401840:	5fbff517          	auipc	a0,0x5fbff
20401844:	f6052503          	lw	a0,-160(a0) # 800007a0 <_impure_ptr>
20401848:	bf31                	j	20401764 <_puts_r>

2040184a <_sbrk_r>:
_sbrk_r():
2040184a:	1141                	addi	sp,sp,-16
2040184c:	c422                	sw	s0,8(sp)
2040184e:	842a                	mv	s0,a0
20401850:	852e                	mv	a0,a1
20401852:	5fbff797          	auipc	a5,0x5fbff
20401856:	f807a323          	sw	zero,-122(a5) # 800007d8 <errno>
2040185a:	c606                	sw	ra,12(sp)
2040185c:	08c010ef          	jal	ra,204028e8 <_sbrk>
20401860:	57fd                	li	a5,-1
20401862:	00f51863          	bne	a0,a5,20401872 <_sbrk_r+0x28>
20401866:	5fbff797          	auipc	a5,0x5fbff
2040186a:	f727a783          	lw	a5,-142(a5) # 800007d8 <errno>
2040186e:	c391                	beqz	a5,20401872 <_sbrk_r+0x28>
20401870:	c01c                	sw	a5,0(s0)
20401872:	40b2                	lw	ra,12(sp)
20401874:	4422                	lw	s0,8(sp)
20401876:	0141                	addi	sp,sp,16
20401878:	8082                	ret

2040187a <__swbuf_r>:
__swbuf_r():
2040187a:	1101                	addi	sp,sp,-32
2040187c:	cc22                	sw	s0,24(sp)
2040187e:	ca26                	sw	s1,20(sp)
20401880:	c84a                	sw	s2,16(sp)
20401882:	ce06                	sw	ra,28(sp)
20401884:	c64e                	sw	s3,12(sp)
20401886:	84aa                	mv	s1,a0
20401888:	892e                	mv	s2,a1
2040188a:	8432                	mv	s0,a2
2040188c:	c501                	beqz	a0,20401894 <__swbuf_r+0x1a>
2040188e:	4d1c                	lw	a5,24(a0)
20401890:	e391                	bnez	a5,20401894 <__swbuf_r+0x1a>
20401892:	2911                	jal	20401ca6 <__sinit>
20401894:	fffff797          	auipc	a5,0xfffff
20401898:	b1c78793          	addi	a5,a5,-1252 # 204003b0 <__sf_fake_stdin>
2040189c:	06f41963          	bne	s0,a5,2040190e <__swbuf_r+0x94>
204018a0:	40c0                	lw	s0,4(s1)
204018a2:	4c1c                	lw	a5,24(s0)
204018a4:	c41c                	sw	a5,8(s0)
204018a6:	00c45783          	lhu	a5,12(s0)
204018aa:	8ba1                	andi	a5,a5,8
204018ac:	c3c9                	beqz	a5,2040192e <__swbuf_r+0xb4>
204018ae:	481c                	lw	a5,16(s0)
204018b0:	cfbd                	beqz	a5,2040192e <__swbuf_r+0xb4>
204018b2:	481c                	lw	a5,16(s0)
204018b4:	4008                	lw	a0,0(s0)
204018b6:	0ff97993          	zext.b	s3,s2
204018ba:	0ff97913          	zext.b	s2,s2
204018be:	8d1d                	sub	a0,a0,a5
204018c0:	485c                	lw	a5,20(s0)
204018c2:	00f54663          	blt	a0,a5,204018ce <__swbuf_r+0x54>
204018c6:	85a2                	mv	a1,s0
204018c8:	8526                	mv	a0,s1
204018ca:	24c1                	jal	20401b8a <_fflush_r>
204018cc:	e52d                	bnez	a0,20401936 <__swbuf_r+0xbc>
204018ce:	441c                	lw	a5,8(s0)
204018d0:	0505                	addi	a0,a0,1
204018d2:	17fd                	addi	a5,a5,-1
204018d4:	c41c                	sw	a5,8(s0)
204018d6:	401c                	lw	a5,0(s0)
204018d8:	00178713          	addi	a4,a5,1
204018dc:	c018                	sw	a4,0(s0)
204018de:	01378023          	sb	s3,0(a5)
204018e2:	485c                	lw	a5,20(s0)
204018e4:	00a78963          	beq	a5,a0,204018f6 <__swbuf_r+0x7c>
204018e8:	00c45783          	lhu	a5,12(s0)
204018ec:	8b85                	andi	a5,a5,1
204018ee:	cb81                	beqz	a5,204018fe <__swbuf_r+0x84>
204018f0:	47a9                	li	a5,10
204018f2:	00f91663          	bne	s2,a5,204018fe <__swbuf_r+0x84>
204018f6:	85a2                	mv	a1,s0
204018f8:	8526                	mv	a0,s1
204018fa:	2c41                	jal	20401b8a <_fflush_r>
204018fc:	ed0d                	bnez	a0,20401936 <__swbuf_r+0xbc>
204018fe:	40f2                	lw	ra,28(sp)
20401900:	4462                	lw	s0,24(sp)
20401902:	44d2                	lw	s1,20(sp)
20401904:	49b2                	lw	s3,12(sp)
20401906:	854a                	mv	a0,s2
20401908:	4942                	lw	s2,16(sp)
2040190a:	6105                	addi	sp,sp,32
2040190c:	8082                	ret
2040190e:	fffff797          	auipc	a5,0xfffff
20401912:	ac278793          	addi	a5,a5,-1342 # 204003d0 <__sf_fake_stdout>
20401916:	00f41463          	bne	s0,a5,2040191e <__swbuf_r+0xa4>
2040191a:	4480                	lw	s0,8(s1)
2040191c:	b759                	j	204018a2 <__swbuf_r+0x28>
2040191e:	fffff797          	auipc	a5,0xfffff
20401922:	a7278793          	addi	a5,a5,-1422 # 20400390 <__sf_fake_stderr>
20401926:	f6f41ee3          	bne	s0,a5,204018a2 <__swbuf_r+0x28>
2040192a:	44c0                	lw	s0,12(s1)
2040192c:	bf9d                	j	204018a2 <__swbuf_r+0x28>
2040192e:	85a2                	mv	a1,s0
20401930:	8526                	mv	a0,s1
20401932:	2021                	jal	2040193a <__swsetup_r>
20401934:	dd3d                	beqz	a0,204018b2 <__swbuf_r+0x38>
20401936:	597d                	li	s2,-1
20401938:	b7d9                	j	204018fe <__swbuf_r+0x84>

2040193a <__swsetup_r>:
__swsetup_r():
2040193a:	1141                	addi	sp,sp,-16
2040193c:	c422                	sw	s0,8(sp)
2040193e:	c226                	sw	s1,4(sp)
20401940:	c04a                	sw	s2,0(sp)
20401942:	c606                	sw	ra,12(sp)
20401944:	5fbff497          	auipc	s1,0x5fbff
20401948:	e5c4a483          	lw	s1,-420(s1) # 800007a0 <_impure_ptr>
2040194c:	892a                	mv	s2,a0
2040194e:	842e                	mv	s0,a1
20401950:	c489                	beqz	s1,2040195a <__swsetup_r+0x20>
20401952:	4c9c                	lw	a5,24(s1)
20401954:	e399                	bnez	a5,2040195a <__swsetup_r+0x20>
20401956:	8526                	mv	a0,s1
20401958:	26b9                	jal	20401ca6 <__sinit>
2040195a:	fffff797          	auipc	a5,0xfffff
2040195e:	a5678793          	addi	a5,a5,-1450 # 204003b0 <__sf_fake_stdin>
20401962:	02f41763          	bne	s0,a5,20401990 <__swsetup_r+0x56>
20401966:	40c0                	lw	s0,4(s1)
20401968:	00c41783          	lh	a5,12(s0)
2040196c:	01079713          	slli	a4,a5,0x10
20401970:	0087f693          	andi	a3,a5,8
20401974:	8341                	srli	a4,a4,0x10
20401976:	eaad                	bnez	a3,204019e8 <__swsetup_r+0xae>
20401978:	01077693          	andi	a3,a4,16
2040197c:	ea95                	bnez	a3,204019b0 <__swsetup_r+0x76>
2040197e:	4725                	li	a4,9
20401980:	00e92023          	sw	a4,0(s2)
20401984:	0407e793          	ori	a5,a5,64
20401988:	00f41623          	sh	a5,12(s0)
2040198c:	557d                	li	a0,-1
2040198e:	a871                	j	20401a2a <__swsetup_r+0xf0>
20401990:	fffff797          	auipc	a5,0xfffff
20401994:	a4078793          	addi	a5,a5,-1472 # 204003d0 <__sf_fake_stdout>
20401998:	00f41463          	bne	s0,a5,204019a0 <__swsetup_r+0x66>
2040199c:	4480                	lw	s0,8(s1)
2040199e:	b7e9                	j	20401968 <__swsetup_r+0x2e>
204019a0:	fffff797          	auipc	a5,0xfffff
204019a4:	9f078793          	addi	a5,a5,-1552 # 20400390 <__sf_fake_stderr>
204019a8:	fcf410e3          	bne	s0,a5,20401968 <__swsetup_r+0x2e>
204019ac:	44c0                	lw	s0,12(s1)
204019ae:	bf6d                	j	20401968 <__swsetup_r+0x2e>
204019b0:	8b11                	andi	a4,a4,4
204019b2:	c70d                	beqz	a4,204019dc <__swsetup_r+0xa2>
204019b4:	584c                	lw	a1,52(s0)
204019b6:	c989                	beqz	a1,204019c8 <__swsetup_r+0x8e>
204019b8:	04440793          	addi	a5,s0,68
204019bc:	00f58463          	beq	a1,a5,204019c4 <__swsetup_r+0x8a>
204019c0:	854a                	mv	a0,s2
204019c2:	36c5                	jal	204015a2 <_free_r>
204019c4:	02042a23          	sw	zero,52(s0)
204019c8:	00c45783          	lhu	a5,12(s0)
204019cc:	00042223          	sw	zero,4(s0)
204019d0:	fdb7f793          	andi	a5,a5,-37
204019d4:	00f41623          	sh	a5,12(s0)
204019d8:	481c                	lw	a5,16(s0)
204019da:	c01c                	sw	a5,0(s0)
204019dc:	00c45783          	lhu	a5,12(s0)
204019e0:	0087e793          	ori	a5,a5,8
204019e4:	00f41623          	sh	a5,12(s0)
204019e8:	481c                	lw	a5,16(s0)
204019ea:	ef81                	bnez	a5,20401a02 <__swsetup_r+0xc8>
204019ec:	00c45783          	lhu	a5,12(s0)
204019f0:	20000713          	li	a4,512
204019f4:	2807f793          	andi	a5,a5,640
204019f8:	00e78563          	beq	a5,a4,20401a02 <__swsetup_r+0xc8>
204019fc:	85a2                	mv	a1,s0
204019fe:	854a                	mv	a0,s2
20401a00:	2985                	jal	20401e70 <__smakebuf_r>
20401a02:	00c41783          	lh	a5,12(s0)
20401a06:	01079713          	slli	a4,a5,0x10
20401a0a:	0017f693          	andi	a3,a5,1
20401a0e:	8341                	srli	a4,a4,0x10
20401a10:	c29d                	beqz	a3,20401a36 <__swsetup_r+0xfc>
20401a12:	4854                	lw	a3,20(s0)
20401a14:	00042423          	sw	zero,8(s0)
20401a18:	40d006b3          	neg	a3,a3
20401a1c:	cc14                	sw	a3,24(s0)
20401a1e:	4814                	lw	a3,16(s0)
20401a20:	4501                	li	a0,0
20401a22:	e681                	bnez	a3,20401a2a <__swsetup_r+0xf0>
20401a24:	08077713          	andi	a4,a4,128
20401a28:	ff31                	bnez	a4,20401984 <__swsetup_r+0x4a>
20401a2a:	40b2                	lw	ra,12(sp)
20401a2c:	4422                	lw	s0,8(sp)
20401a2e:	4492                	lw	s1,4(sp)
20401a30:	4902                	lw	s2,0(sp)
20401a32:	0141                	addi	sp,sp,16
20401a34:	8082                	ret
20401a36:	00277693          	andi	a3,a4,2
20401a3a:	4601                	li	a2,0
20401a3c:	e291                	bnez	a3,20401a40 <__swsetup_r+0x106>
20401a3e:	4850                	lw	a2,20(s0)
20401a40:	c410                	sw	a2,8(s0)
20401a42:	bff1                	j	20401a1e <__swsetup_r+0xe4>

20401a44 <__sflush_r>:
__sflush_r():
20401a44:	00c5d783          	lhu	a5,12(a1)
20401a48:	1101                	addi	sp,sp,-32
20401a4a:	cc22                	sw	s0,24(sp)
20401a4c:	ca26                	sw	s1,20(sp)
20401a4e:	ce06                	sw	ra,28(sp)
20401a50:	c84a                	sw	s2,16(sp)
20401a52:	c64e                	sw	s3,12(sp)
20401a54:	0087f713          	andi	a4,a5,8
20401a58:	84aa                	mv	s1,a0
20401a5a:	842e                	mv	s0,a1
20401a5c:	e375                	bnez	a4,20401b40 <__sflush_r+0xfc>
20401a5e:	41d8                	lw	a4,4(a1)
20401a60:	00e04763          	bgtz	a4,20401a6e <__sflush_r+0x2a>
20401a64:	41b8                	lw	a4,64(a1)
20401a66:	00e04463          	bgtz	a4,20401a6e <__sflush_r+0x2a>
20401a6a:	4501                	li	a0,0
20401a6c:	a875                	j	20401b28 <__sflush_r+0xe4>
20401a6e:	5458                	lw	a4,44(s0)
20401a70:	df6d                	beqz	a4,20401a6a <__sflush_r+0x26>
20401a72:	6685                	lui	a3,0x1
20401a74:	0004a903          	lw	s2,0(s1)
20401a78:	8ff5                	and	a5,a5,a3
20401a7a:	0004a023          	sw	zero,0(s1)
20401a7e:	cfa5                	beqz	a5,20401af6 <__sflush_r+0xb2>
20401a80:	4868                	lw	a0,84(s0)
20401a82:	00c45783          	lhu	a5,12(s0)
20401a86:	8b91                	andi	a5,a5,4
20401a88:	c799                	beqz	a5,20401a96 <__sflush_r+0x52>
20401a8a:	405c                	lw	a5,4(s0)
20401a8c:	8d1d                	sub	a0,a0,a5
20401a8e:	585c                	lw	a5,52(s0)
20401a90:	c399                	beqz	a5,20401a96 <__sflush_r+0x52>
20401a92:	403c                	lw	a5,64(s0)
20401a94:	8d1d                	sub	a0,a0,a5
20401a96:	545c                	lw	a5,44(s0)
20401a98:	500c                	lw	a1,32(s0)
20401a9a:	862a                	mv	a2,a0
20401a9c:	4681                	li	a3,0
20401a9e:	8526                	mv	a0,s1
20401aa0:	9782                	jalr	a5
20401aa2:	57fd                	li	a5,-1
20401aa4:	00c45703          	lhu	a4,12(s0)
20401aa8:	00f51d63          	bne	a0,a5,20401ac2 <__sflush_r+0x7e>
20401aac:	4094                	lw	a3,0(s1)
20401aae:	47f5                	li	a5,29
20401ab0:	08d7e363          	bltu	a5,a3,20401b36 <__sflush_r+0xf2>
20401ab4:	204007b7          	lui	a5,0x20400
20401ab8:	0785                	addi	a5,a5,1
20401aba:	00d7d7b3          	srl	a5,a5,a3
20401abe:	8b85                	andi	a5,a5,1
20401ac0:	cbbd                	beqz	a5,20401b36 <__sflush_r+0xf2>
20401ac2:	481c                	lw	a5,16(s0)
20401ac4:	00042223          	sw	zero,4(s0)
20401ac8:	c01c                	sw	a5,0(s0)
20401aca:	6785                	lui	a5,0x1
20401acc:	8f7d                	and	a4,a4,a5
20401ace:	c719                	beqz	a4,20401adc <__sflush_r+0x98>
20401ad0:	57fd                	li	a5,-1
20401ad2:	00f51463          	bne	a0,a5,20401ada <__sflush_r+0x96>
20401ad6:	409c                	lw	a5,0(s1)
20401ad8:	e391                	bnez	a5,20401adc <__sflush_r+0x98>
20401ada:	c868                	sw	a0,84(s0)
20401adc:	584c                	lw	a1,52(s0)
20401ade:	0124a023          	sw	s2,0(s1)
20401ae2:	d5c1                	beqz	a1,20401a6a <__sflush_r+0x26>
20401ae4:	04440793          	addi	a5,s0,68
20401ae8:	00f58463          	beq	a1,a5,20401af0 <__sflush_r+0xac>
20401aec:	8526                	mv	a0,s1
20401aee:	3c55                	jal	204015a2 <_free_r>
20401af0:	02042a23          	sw	zero,52(s0)
20401af4:	bf9d                	j	20401a6a <__sflush_r+0x26>
20401af6:	500c                	lw	a1,32(s0)
20401af8:	4685                	li	a3,1
20401afa:	4601                	li	a2,0
20401afc:	8526                	mv	a0,s1
20401afe:	9702                	jalr	a4
20401b00:	57fd                	li	a5,-1
20401b02:	f8f510e3          	bne	a0,a5,20401a82 <__sflush_r+0x3e>
20401b06:	409c                	lw	a5,0(s1)
20401b08:	dfad                	beqz	a5,20401a82 <__sflush_r+0x3e>
20401b0a:	4775                	li	a4,29
20401b0c:	00e78563          	beq	a5,a4,20401b16 <__sflush_r+0xd2>
20401b10:	4759                	li	a4,22
20401b12:	00e79563          	bne	a5,a4,20401b1c <__sflush_r+0xd8>
20401b16:	0124a023          	sw	s2,0(s1)
20401b1a:	bf81                	j	20401a6a <__sflush_r+0x26>
20401b1c:	00c45783          	lhu	a5,12(s0)
20401b20:	0407e793          	ori	a5,a5,64
20401b24:	00f41623          	sh	a5,12(s0)
20401b28:	40f2                	lw	ra,28(sp)
20401b2a:	4462                	lw	s0,24(sp)
20401b2c:	44d2                	lw	s1,20(sp)
20401b2e:	4942                	lw	s2,16(sp)
20401b30:	49b2                	lw	s3,12(sp)
20401b32:	6105                	addi	sp,sp,32
20401b34:	8082                	ret
20401b36:	04076713          	ori	a4,a4,64
20401b3a:	00e41623          	sh	a4,12(s0)
20401b3e:	b7ed                	j	20401b28 <__sflush_r+0xe4>
20401b40:	0105a983          	lw	s3,16(a1)
20401b44:	f20983e3          	beqz	s3,20401a6a <__sflush_r+0x26>
20401b48:	0005a903          	lw	s2,0(a1)
20401b4c:	8b8d                	andi	a5,a5,3
20401b4e:	0135a023          	sw	s3,0(a1)
20401b52:	41390933          	sub	s2,s2,s3
20401b56:	4701                	li	a4,0
20401b58:	e391                	bnez	a5,20401b5c <__sflush_r+0x118>
20401b5a:	49d8                	lw	a4,20(a1)
20401b5c:	c418                	sw	a4,8(s0)
20401b5e:	f12056e3          	blez	s2,20401a6a <__sflush_r+0x26>
20401b62:	541c                	lw	a5,40(s0)
20401b64:	500c                	lw	a1,32(s0)
20401b66:	86ca                	mv	a3,s2
20401b68:	864e                	mv	a2,s3
20401b6a:	8526                	mv	a0,s1
20401b6c:	9782                	jalr	a5
20401b6e:	00a04a63          	bgtz	a0,20401b82 <__sflush_r+0x13e>
20401b72:	00c45783          	lhu	a5,12(s0)
20401b76:	557d                	li	a0,-1
20401b78:	0407e793          	ori	a5,a5,64
20401b7c:	00f41623          	sh	a5,12(s0)
20401b80:	b765                	j	20401b28 <__sflush_r+0xe4>
20401b82:	99aa                	add	s3,s3,a0
20401b84:	40a90933          	sub	s2,s2,a0
20401b88:	bfd9                	j	20401b5e <__sflush_r+0x11a>

20401b8a <_fflush_r>:
_fflush_r():
20401b8a:	499c                	lw	a5,16(a1)
20401b8c:	cfb9                	beqz	a5,20401bea <_fflush_r+0x60>
20401b8e:	1101                	addi	sp,sp,-32
20401b90:	cc22                	sw	s0,24(sp)
20401b92:	ce06                	sw	ra,28(sp)
20401b94:	842a                	mv	s0,a0
20401b96:	c511                	beqz	a0,20401ba2 <_fflush_r+0x18>
20401b98:	4d1c                	lw	a5,24(a0)
20401b9a:	e781                	bnez	a5,20401ba2 <_fflush_r+0x18>
20401b9c:	c62e                	sw	a1,12(sp)
20401b9e:	2221                	jal	20401ca6 <__sinit>
20401ba0:	45b2                	lw	a1,12(sp)
20401ba2:	fffff797          	auipc	a5,0xfffff
20401ba6:	80e78793          	addi	a5,a5,-2034 # 204003b0 <__sf_fake_stdin>
20401baa:	00f59b63          	bne	a1,a5,20401bc0 <_fflush_r+0x36>
20401bae:	404c                	lw	a1,4(s0)
20401bb0:	00c59783          	lh	a5,12(a1)
20401bb4:	c795                	beqz	a5,20401be0 <_fflush_r+0x56>
20401bb6:	8522                	mv	a0,s0
20401bb8:	4462                	lw	s0,24(sp)
20401bba:	40f2                	lw	ra,28(sp)
20401bbc:	6105                	addi	sp,sp,32
20401bbe:	b559                	j	20401a44 <__sflush_r>
20401bc0:	fffff797          	auipc	a5,0xfffff
20401bc4:	81078793          	addi	a5,a5,-2032 # 204003d0 <__sf_fake_stdout>
20401bc8:	00f59463          	bne	a1,a5,20401bd0 <_fflush_r+0x46>
20401bcc:	440c                	lw	a1,8(s0)
20401bce:	b7cd                	j	20401bb0 <_fflush_r+0x26>
20401bd0:	ffffe797          	auipc	a5,0xffffe
20401bd4:	7c078793          	addi	a5,a5,1984 # 20400390 <__sf_fake_stderr>
20401bd8:	fcf59ce3          	bne	a1,a5,20401bb0 <_fflush_r+0x26>
20401bdc:	444c                	lw	a1,12(s0)
20401bde:	bfc9                	j	20401bb0 <_fflush_r+0x26>
20401be0:	40f2                	lw	ra,28(sp)
20401be2:	4462                	lw	s0,24(sp)
20401be4:	4501                	li	a0,0
20401be6:	6105                	addi	sp,sp,32
20401be8:	8082                	ret
20401bea:	4501                	li	a0,0
20401bec:	8082                	ret

20401bee <std>:
std():
20401bee:	1141                	addi	sp,sp,-16
20401bf0:	c422                	sw	s0,8(sp)
20401bf2:	c606                	sw	ra,12(sp)
20401bf4:	842a                	mv	s0,a0
20401bf6:	00b51623          	sh	a1,12(a0)
20401bfa:	00c51723          	sh	a2,14(a0)
20401bfe:	00052023          	sw	zero,0(a0)
20401c02:	00052223          	sw	zero,4(a0)
20401c06:	00052423          	sw	zero,8(a0)
20401c0a:	06052223          	sw	zero,100(a0)
20401c0e:	00052823          	sw	zero,16(a0)
20401c12:	00052a23          	sw	zero,20(a0)
20401c16:	00052c23          	sw	zero,24(a0)
20401c1a:	4621                	li	a2,8
20401c1c:	4581                	li	a1,0
20401c1e:	05c50513          	addi	a0,a0,92
20401c22:	24f5                	jal	20401f0e <memset>
20401c24:	00000797          	auipc	a5,0x0
20401c28:	69678793          	addi	a5,a5,1686 # 204022ba <__sread>
20401c2c:	d05c                	sw	a5,36(s0)
20401c2e:	00000797          	auipc	a5,0x0
20401c32:	6bc78793          	addi	a5,a5,1724 # 204022ea <__swrite>
20401c36:	d41c                	sw	a5,40(s0)
20401c38:	00000797          	auipc	a5,0x0
20401c3c:	70078793          	addi	a5,a5,1792 # 20402338 <__sseek>
20401c40:	d45c                	sw	a5,44(s0)
20401c42:	00000797          	auipc	a5,0x0
20401c46:	72c78793          	addi	a5,a5,1836 # 2040236e <__sclose>
20401c4a:	40b2                	lw	ra,12(sp)
20401c4c:	d000                	sw	s0,32(s0)
20401c4e:	d81c                	sw	a5,48(s0)
20401c50:	4422                	lw	s0,8(sp)
20401c52:	0141                	addi	sp,sp,16
20401c54:	8082                	ret

20401c56 <_cleanup_r>:
_cleanup_r():
20401c56:	00000597          	auipc	a1,0x0
20401c5a:	f3458593          	addi	a1,a1,-204 # 20401b8a <_fflush_r>
20401c5e:	a2b9                	j	20401dac <_fwalk_reent>

20401c60 <__sfmoreglue>:
__sfmoreglue():
20401c60:	1141                	addi	sp,sp,-16
20401c62:	c226                	sw	s1,4(sp)
20401c64:	06800613          	li	a2,104
20401c68:	fff58493          	addi	s1,a1,-1
20401c6c:	02c484b3          	mul	s1,s1,a2
20401c70:	c04a                	sw	s2,0(sp)
20401c72:	892e                	mv	s2,a1
20401c74:	c422                	sw	s0,8(sp)
20401c76:	c606                	sw	ra,12(sp)
20401c78:	07448593          	addi	a1,s1,116
20401c7c:	9cdff0ef          	jal	ra,20401648 <_malloc_r>
20401c80:	842a                	mv	s0,a0
20401c82:	c919                	beqz	a0,20401c98 <__sfmoreglue+0x38>
20401c84:	00052023          	sw	zero,0(a0)
20401c88:	01252223          	sw	s2,4(a0)
20401c8c:	0531                	addi	a0,a0,12
20401c8e:	c408                	sw	a0,8(s0)
20401c90:	06848613          	addi	a2,s1,104
20401c94:	4581                	li	a1,0
20401c96:	2ca5                	jal	20401f0e <memset>
20401c98:	40b2                	lw	ra,12(sp)
20401c9a:	8522                	mv	a0,s0
20401c9c:	4422                	lw	s0,8(sp)
20401c9e:	4492                	lw	s1,4(sp)
20401ca0:	4902                	lw	s2,0(sp)
20401ca2:	0141                	addi	sp,sp,16
20401ca4:	8082                	ret

20401ca6 <__sinit>:
__sinit():
20401ca6:	4d1c                	lw	a5,24(a0)
20401ca8:	e3bd                	bnez	a5,20401d0e <__sinit+0x68>
20401caa:	1141                	addi	sp,sp,-16
20401cac:	c422                	sw	s0,8(sp)
20401cae:	c606                	sw	ra,12(sp)
20401cb0:	00000797          	auipc	a5,0x0
20401cb4:	fa678793          	addi	a5,a5,-90 # 20401c56 <_cleanup_r>
20401cb8:	d51c                	sw	a5,40(a0)
20401cba:	04052423          	sw	zero,72(a0)
20401cbe:	04052623          	sw	zero,76(a0)
20401cc2:	04052823          	sw	zero,80(a0)
20401cc6:	fffff797          	auipc	a5,0xfffff
20401cca:	30a7a783          	lw	a5,778(a5) # 20400fd0 <_global_impure_ptr>
20401cce:	842a                	mv	s0,a0
20401cd0:	00f51463          	bne	a0,a5,20401cd8 <__sinit+0x32>
20401cd4:	4785                	li	a5,1
20401cd6:	cd1c                	sw	a5,24(a0)
20401cd8:	8522                	mv	a0,s0
20401cda:	281d                	jal	20401d10 <__sfp>
20401cdc:	c048                	sw	a0,4(s0)
20401cde:	8522                	mv	a0,s0
20401ce0:	2805                	jal	20401d10 <__sfp>
20401ce2:	c408                	sw	a0,8(s0)
20401ce4:	8522                	mv	a0,s0
20401ce6:	202d                	jal	20401d10 <__sfp>
20401ce8:	c448                	sw	a0,12(s0)
20401cea:	4048                	lw	a0,4(s0)
20401cec:	4601                	li	a2,0
20401cee:	4591                	li	a1,4
20401cf0:	3dfd                	jal	20401bee <std>
20401cf2:	4408                	lw	a0,8(s0)
20401cf4:	4605                	li	a2,1
20401cf6:	45a5                	li	a1,9
20401cf8:	3ddd                	jal	20401bee <std>
20401cfa:	4448                	lw	a0,12(s0)
20401cfc:	4609                	li	a2,2
20401cfe:	45c9                	li	a1,18
20401d00:	35fd                	jal	20401bee <std>
20401d02:	4785                	li	a5,1
20401d04:	40b2                	lw	ra,12(sp)
20401d06:	cc1c                	sw	a5,24(s0)
20401d08:	4422                	lw	s0,8(sp)
20401d0a:	0141                	addi	sp,sp,16
20401d0c:	8082                	ret
20401d0e:	8082                	ret

20401d10 <__sfp>:
__sfp():
20401d10:	1141                	addi	sp,sp,-16
20401d12:	c226                	sw	s1,4(sp)
20401d14:	fffff497          	auipc	s1,0xfffff
20401d18:	2bc4a483          	lw	s1,700(s1) # 20400fd0 <_global_impure_ptr>
20401d1c:	4c9c                	lw	a5,24(s1)
20401d1e:	c04a                	sw	s2,0(sp)
20401d20:	c606                	sw	ra,12(sp)
20401d22:	c422                	sw	s0,8(sp)
20401d24:	892a                	mv	s2,a0
20401d26:	e399                	bnez	a5,20401d2c <__sfp+0x1c>
20401d28:	8526                	mv	a0,s1
20401d2a:	3fb5                	jal	20401ca6 <__sinit>
20401d2c:	04848493          	addi	s1,s1,72
20401d30:	4480                	lw	s0,8(s1)
20401d32:	40dc                	lw	a5,4(s1)
20401d34:	17fd                	addi	a5,a5,-1
20401d36:	0007d663          	bgez	a5,20401d42 <__sfp+0x32>
20401d3a:	409c                	lw	a5,0(s1)
20401d3c:	cfb1                	beqz	a5,20401d98 <__sfp+0x88>
20401d3e:	4084                	lw	s1,0(s1)
20401d40:	bfc5                	j	20401d30 <__sfp+0x20>
20401d42:	00c41703          	lh	a4,12(s0)
20401d46:	e731                	bnez	a4,20401d92 <__sfp+0x82>
20401d48:	77c1                	lui	a5,0xffff0
20401d4a:	0785                	addi	a5,a5,1
20401d4c:	06042223          	sw	zero,100(s0)
20401d50:	00042023          	sw	zero,0(s0)
20401d54:	00042223          	sw	zero,4(s0)
20401d58:	00042423          	sw	zero,8(s0)
20401d5c:	c45c                	sw	a5,12(s0)
20401d5e:	00042823          	sw	zero,16(s0)
20401d62:	00042a23          	sw	zero,20(s0)
20401d66:	00042c23          	sw	zero,24(s0)
20401d6a:	4621                	li	a2,8
20401d6c:	4581                	li	a1,0
20401d6e:	05c40513          	addi	a0,s0,92
20401d72:	2a71                	jal	20401f0e <memset>
20401d74:	02042a23          	sw	zero,52(s0)
20401d78:	02042c23          	sw	zero,56(s0)
20401d7c:	04042423          	sw	zero,72(s0)
20401d80:	04042623          	sw	zero,76(s0)
20401d84:	40b2                	lw	ra,12(sp)
20401d86:	8522                	mv	a0,s0
20401d88:	4422                	lw	s0,8(sp)
20401d8a:	4492                	lw	s1,4(sp)
20401d8c:	4902                	lw	s2,0(sp)
20401d8e:	0141                	addi	sp,sp,16
20401d90:	8082                	ret
20401d92:	06840413          	addi	s0,s0,104
20401d96:	bf79                	j	20401d34 <__sfp+0x24>
20401d98:	4591                	li	a1,4
20401d9a:	854a                	mv	a0,s2
20401d9c:	35d1                	jal	20401c60 <__sfmoreglue>
20401d9e:	c088                	sw	a0,0(s1)
20401da0:	842a                	mv	s0,a0
20401da2:	fd51                	bnez	a0,20401d3e <__sfp+0x2e>
20401da4:	47b1                	li	a5,12
20401da6:	00f92023          	sw	a5,0(s2)
20401daa:	bfe9                	j	20401d84 <__sfp+0x74>

20401dac <_fwalk_reent>:
_fwalk_reent():
20401dac:	7179                	addi	sp,sp,-48
20401dae:	d422                	sw	s0,40(sp)
20401db0:	d04a                	sw	s2,32(sp)
20401db2:	ce4e                	sw	s3,28(sp)
20401db4:	cc52                	sw	s4,24(sp)
20401db6:	c85a                	sw	s6,16(sp)
20401db8:	c65e                	sw	s7,12(sp)
20401dba:	d606                	sw	ra,44(sp)
20401dbc:	d226                	sw	s1,36(sp)
20401dbe:	ca56                	sw	s5,20(sp)
20401dc0:	892a                	mv	s2,a0
20401dc2:	8a2e                	mv	s4,a1
20401dc4:	04850413          	addi	s0,a0,72
20401dc8:	4981                	li	s3,0
20401dca:	4b05                	li	s6,1
20401dcc:	5bfd                	li	s7,-1
20401dce:	4404                	lw	s1,8(s0)
20401dd0:	00442a83          	lw	s5,4(s0)
20401dd4:	1afd                	addi	s5,s5,-1
20401dd6:	020ad063          	bgez	s5,20401df6 <_fwalk_reent+0x4a>
20401dda:	4000                	lw	s0,0(s0)
20401ddc:	f86d                	bnez	s0,20401dce <_fwalk_reent+0x22>
20401dde:	50b2                	lw	ra,44(sp)
20401de0:	5422                	lw	s0,40(sp)
20401de2:	5492                	lw	s1,36(sp)
20401de4:	5902                	lw	s2,32(sp)
20401de6:	4a62                	lw	s4,24(sp)
20401de8:	4ad2                	lw	s5,20(sp)
20401dea:	4b42                	lw	s6,16(sp)
20401dec:	4bb2                	lw	s7,12(sp)
20401dee:	854e                	mv	a0,s3
20401df0:	49f2                	lw	s3,28(sp)
20401df2:	6145                	addi	sp,sp,48
20401df4:	8082                	ret
20401df6:	00c4d783          	lhu	a5,12(s1)
20401dfa:	00fb7b63          	bgeu	s6,a5,20401e10 <_fwalk_reent+0x64>
20401dfe:	00e49783          	lh	a5,14(s1)
20401e02:	01778763          	beq	a5,s7,20401e10 <_fwalk_reent+0x64>
20401e06:	85a6                	mv	a1,s1
20401e08:	854a                	mv	a0,s2
20401e0a:	9a02                	jalr	s4
20401e0c:	00a9e9b3          	or	s3,s3,a0
20401e10:	06848493          	addi	s1,s1,104
20401e14:	b7c1                	j	20401dd4 <_fwalk_reent+0x28>

20401e16 <__swhatbuf_r>:
__swhatbuf_r():
20401e16:	7159                	addi	sp,sp,-112
20401e18:	d0ca                	sw	s2,96(sp)
20401e1a:	892e                	mv	s2,a1
20401e1c:	00e59583          	lh	a1,14(a1)
20401e20:	d4a2                	sw	s0,104(sp)
20401e22:	d2a6                	sw	s1,100(sp)
20401e24:	d686                	sw	ra,108(sp)
20401e26:	8432                	mv	s0,a2
20401e28:	84b6                	mv	s1,a3
20401e2a:	0005dc63          	bgez	a1,20401e42 <__swhatbuf_r+0x2c>
20401e2e:	00c91783          	lh	a5,12(s2)
20401e32:	0004a023          	sw	zero,0(s1)
20401e36:	0807f793          	andi	a5,a5,128
20401e3a:	e38d                	bnez	a5,20401e5c <__swhatbuf_r+0x46>
20401e3c:	40000793          	li	a5,1024
20401e40:	a005                	j	20401e60 <__swhatbuf_r+0x4a>
20401e42:	0030                	addi	a2,sp,8
20401e44:	2b41                	jal	204023d4 <_fstat_r>
20401e46:	fe0544e3          	bltz	a0,20401e2e <__swhatbuf_r+0x18>
20401e4a:	4732                	lw	a4,12(sp)
20401e4c:	67bd                	lui	a5,0xf
20401e4e:	8ff9                	and	a5,a5,a4
20401e50:	7779                	lui	a4,0xffffe
20401e52:	97ba                	add	a5,a5,a4
20401e54:	0017b793          	seqz	a5,a5
20401e58:	c09c                	sw	a5,0(s1)
20401e5a:	b7cd                	j	20401e3c <__swhatbuf_r+0x26>
20401e5c:	04000793          	li	a5,64
20401e60:	50b6                	lw	ra,108(sp)
20401e62:	c01c                	sw	a5,0(s0)
20401e64:	5426                	lw	s0,104(sp)
20401e66:	5496                	lw	s1,100(sp)
20401e68:	5906                	lw	s2,96(sp)
20401e6a:	4501                	li	a0,0
20401e6c:	6165                	addi	sp,sp,112
20401e6e:	8082                	ret

20401e70 <__smakebuf_r>:
__smakebuf_r():
20401e70:	00c5d783          	lhu	a5,12(a1)
20401e74:	1101                	addi	sp,sp,-32
20401e76:	cc22                	sw	s0,24(sp)
20401e78:	ce06                	sw	ra,28(sp)
20401e7a:	ca26                	sw	s1,20(sp)
20401e7c:	c84a                	sw	s2,16(sp)
20401e7e:	8b89                	andi	a5,a5,2
20401e80:	842e                	mv	s0,a1
20401e82:	cf89                	beqz	a5,20401e9c <__smakebuf_r+0x2c>
20401e84:	04740793          	addi	a5,s0,71
20401e88:	c01c                	sw	a5,0(s0)
20401e8a:	c81c                	sw	a5,16(s0)
20401e8c:	4785                	li	a5,1
20401e8e:	c85c                	sw	a5,20(s0)
20401e90:	40f2                	lw	ra,28(sp)
20401e92:	4462                	lw	s0,24(sp)
20401e94:	44d2                	lw	s1,20(sp)
20401e96:	4942                	lw	s2,16(sp)
20401e98:	6105                	addi	sp,sp,32
20401e9a:	8082                	ret
20401e9c:	0074                	addi	a3,sp,12
20401e9e:	0030                	addi	a2,sp,8
20401ea0:	892a                	mv	s2,a0
20401ea2:	3f95                	jal	20401e16 <__swhatbuf_r>
20401ea4:	45a2                	lw	a1,8(sp)
20401ea6:	84aa                	mv	s1,a0
20401ea8:	854a                	mv	a0,s2
20401eaa:	f9eff0ef          	jal	ra,20401648 <_malloc_r>
20401eae:	ed01                	bnez	a0,20401ec6 <__smakebuf_r+0x56>
20401eb0:	00c41783          	lh	a5,12(s0)
20401eb4:	2007f713          	andi	a4,a5,512
20401eb8:	ff61                	bnez	a4,20401e90 <__smakebuf_r+0x20>
20401eba:	9bf1                	andi	a5,a5,-4
20401ebc:	0027e793          	ori	a5,a5,2
20401ec0:	00f41623          	sh	a5,12(s0)
20401ec4:	b7c1                	j	20401e84 <__smakebuf_r+0x14>
20401ec6:	00000797          	auipc	a5,0x0
20401eca:	d9078793          	addi	a5,a5,-624 # 20401c56 <_cleanup_r>
20401ece:	02f92423          	sw	a5,40(s2)
20401ed2:	00c45783          	lhu	a5,12(s0)
20401ed6:	c008                	sw	a0,0(s0)
20401ed8:	c808                	sw	a0,16(s0)
20401eda:	0807e793          	ori	a5,a5,128
20401ede:	00f41623          	sh	a5,12(s0)
20401ee2:	47a2                	lw	a5,8(sp)
20401ee4:	c85c                	sw	a5,20(s0)
20401ee6:	47b2                	lw	a5,12(sp)
20401ee8:	cf89                	beqz	a5,20401f02 <__smakebuf_r+0x92>
20401eea:	00e41583          	lh	a1,14(s0)
20401eee:	854a                	mv	a0,s2
20401ef0:	2b11                	jal	20402404 <_isatty_r>
20401ef2:	c901                	beqz	a0,20401f02 <__smakebuf_r+0x92>
20401ef4:	00c45783          	lhu	a5,12(s0)
20401ef8:	9bf1                	andi	a5,a5,-4
20401efa:	0017e793          	ori	a5,a5,1
20401efe:	00f41623          	sh	a5,12(s0)
20401f02:	00c45503          	lhu	a0,12(s0)
20401f06:	8cc9                	or	s1,s1,a0
20401f08:	00941623          	sh	s1,12(s0)
20401f0c:	b751                	j	20401e90 <__smakebuf_r+0x20>

20401f0e <memset>:
memset():
20401f0e:	433d                	li	t1,15
20401f10:	872a                	mv	a4,a0
20401f12:	02c37363          	bgeu	t1,a2,20401f38 <memset+0x2a>
20401f16:	00f77793          	andi	a5,a4,15
20401f1a:	efbd                	bnez	a5,20401f98 <memset+0x8a>
20401f1c:	e5ad                	bnez	a1,20401f86 <memset+0x78>
20401f1e:	ff067693          	andi	a3,a2,-16
20401f22:	8a3d                	andi	a2,a2,15
20401f24:	96ba                	add	a3,a3,a4
20401f26:	c30c                	sw	a1,0(a4)
20401f28:	c34c                	sw	a1,4(a4)
20401f2a:	c70c                	sw	a1,8(a4)
20401f2c:	c74c                	sw	a1,12(a4)
20401f2e:	0741                	addi	a4,a4,16
20401f30:	fed76be3          	bltu	a4,a3,20401f26 <memset+0x18>
20401f34:	e211                	bnez	a2,20401f38 <memset+0x2a>
20401f36:	8082                	ret
20401f38:	40c306b3          	sub	a3,t1,a2
20401f3c:	068a                	slli	a3,a3,0x2
20401f3e:	00000297          	auipc	t0,0x0
20401f42:	9696                	add	a3,a3,t0
20401f44:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
20401f48:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffc53e>
20401f4c:	00b706a3          	sb	a1,13(a4)
20401f50:	00b70623          	sb	a1,12(a4)
20401f54:	00b705a3          	sb	a1,11(a4)
20401f58:	00b70523          	sb	a1,10(a4)
20401f5c:	00b704a3          	sb	a1,9(a4)
20401f60:	00b70423          	sb	a1,8(a4)
20401f64:	00b703a3          	sb	a1,7(a4)
20401f68:	00b70323          	sb	a1,6(a4)
20401f6c:	00b702a3          	sb	a1,5(a4)
20401f70:	00b70223          	sb	a1,4(a4)
20401f74:	00b701a3          	sb	a1,3(a4)
20401f78:	00b70123          	sb	a1,2(a4)
20401f7c:	00b700a3          	sb	a1,1(a4)
20401f80:	00b70023          	sb	a1,0(a4)
20401f84:	8082                	ret
20401f86:	0ff5f593          	zext.b	a1,a1
20401f8a:	00859693          	slli	a3,a1,0x8
20401f8e:	8dd5                	or	a1,a1,a3
20401f90:	01059693          	slli	a3,a1,0x10
20401f94:	8dd5                	or	a1,a1,a3
20401f96:	b761                	j	20401f1e <memset+0x10>
20401f98:	00279693          	slli	a3,a5,0x2
20401f9c:	00000297          	auipc	t0,0x0
20401fa0:	9696                	add	a3,a3,t0
20401fa2:	8286                	mv	t0,ra
20401fa4:	fa8680e7          	jalr	-88(a3)
20401fa8:	8096                	mv	ra,t0
20401faa:	17c1                	addi	a5,a5,-16
20401fac:	8f1d                	sub	a4,a4,a5
20401fae:	963e                	add	a2,a2,a5
20401fb0:	f8c374e3          	bgeu	t1,a2,20401f38 <memset+0x2a>
20401fb4:	b7a5                	j	20401f1c <memset+0xe>

20401fb6 <__malloc_lock>:
__malloc_lock():
20401fb6:	8082                	ret

20401fb8 <__malloc_unlock>:
__malloc_unlock():
20401fb8:	8082                	ret

20401fba <__sfputc_r>:
__sfputc_r():
20401fba:	461c                	lw	a5,8(a2)
20401fbc:	17fd                	addi	a5,a5,-1
20401fbe:	c61c                	sw	a5,8(a2)
20401fc0:	0007da63          	bgez	a5,20401fd4 <__sfputc_r+0x1a>
20401fc4:	4e18                	lw	a4,24(a2)
20401fc6:	00e7c563          	blt	a5,a4,20401fd0 <__sfputc_r+0x16>
20401fca:	47a9                	li	a5,10
20401fcc:	00f59463          	bne	a1,a5,20401fd4 <__sfputc_r+0x1a>
20401fd0:	8abff06f          	j	2040187a <__swbuf_r>
20401fd4:	421c                	lw	a5,0(a2)
20401fd6:	852e                	mv	a0,a1
20401fd8:	00178713          	addi	a4,a5,1
20401fdc:	c218                	sw	a4,0(a2)
20401fde:	00b78023          	sb	a1,0(a5)
20401fe2:	8082                	ret

20401fe4 <__sfputs_r>:
__sfputs_r():
20401fe4:	1101                	addi	sp,sp,-32
20401fe6:	cc22                	sw	s0,24(sp)
20401fe8:	ca26                	sw	s1,20(sp)
20401fea:	c84a                	sw	s2,16(sp)
20401fec:	c64e                	sw	s3,12(sp)
20401fee:	c452                	sw	s4,8(sp)
20401ff0:	ce06                	sw	ra,28(sp)
20401ff2:	892a                	mv	s2,a0
20401ff4:	89ae                	mv	s3,a1
20401ff6:	8432                	mv	s0,a2
20401ff8:	00d604b3          	add	s1,a2,a3
20401ffc:	5a7d                	li	s4,-1
20401ffe:	00941463          	bne	s0,s1,20402006 <__sfputs_r+0x22>
20402002:	4501                	li	a0,0
20402004:	a809                	j	20402016 <__sfputs_r+0x32>
20402006:	00044583          	lbu	a1,0(s0)
2040200a:	864e                	mv	a2,s3
2040200c:	854a                	mv	a0,s2
2040200e:	3775                	jal	20401fba <__sfputc_r>
20402010:	0405                	addi	s0,s0,1
20402012:	ff4516e3          	bne	a0,s4,20401ffe <__sfputs_r+0x1a>
20402016:	40f2                	lw	ra,28(sp)
20402018:	4462                	lw	s0,24(sp)
2040201a:	44d2                	lw	s1,20(sp)
2040201c:	4942                	lw	s2,16(sp)
2040201e:	49b2                	lw	s3,12(sp)
20402020:	4a22                	lw	s4,8(sp)
20402022:	6105                	addi	sp,sp,32
20402024:	8082                	ret

20402026 <_vfiprintf_r>:
_vfiprintf_r():
20402026:	7135                	addi	sp,sp,-160
20402028:	cd22                	sw	s0,152(sp)
2040202a:	cb26                	sw	s1,148(sp)
2040202c:	c94a                	sw	s2,144(sp)
2040202e:	c74e                	sw	s3,140(sp)
20402030:	cf06                	sw	ra,156(sp)
20402032:	c552                	sw	s4,136(sp)
20402034:	c356                	sw	s5,132(sp)
20402036:	c15a                	sw	s6,128(sp)
20402038:	dede                	sw	s7,124(sp)
2040203a:	dce2                	sw	s8,120(sp)
2040203c:	dae6                	sw	s9,116(sp)
2040203e:	89aa                	mv	s3,a0
20402040:	84ae                	mv	s1,a1
20402042:	8932                	mv	s2,a2
20402044:	8436                	mv	s0,a3
20402046:	c501                	beqz	a0,2040204e <_vfiprintf_r+0x28>
20402048:	4d1c                	lw	a5,24(a0)
2040204a:	e391                	bnez	a5,2040204e <_vfiprintf_r+0x28>
2040204c:	39a9                	jal	20401ca6 <__sinit>
2040204e:	ffffe797          	auipc	a5,0xffffe
20402052:	36278793          	addi	a5,a5,866 # 204003b0 <__sf_fake_stdin>
20402056:	0cf49b63          	bne	s1,a5,2040212c <_vfiprintf_r+0x106>
2040205a:	0049a483          	lw	s1,4(s3)
2040205e:	00c4d783          	lhu	a5,12(s1)
20402062:	8ba1                	andi	a5,a5,8
20402064:	c7f5                	beqz	a5,20402150 <_vfiprintf_r+0x12a>
20402066:	489c                	lw	a5,16(s1)
20402068:	c7e5                	beqz	a5,20402150 <_vfiprintf_r+0x12a>
2040206a:	02000793          	li	a5,32
2040206e:	02f104a3          	sb	a5,41(sp)
20402072:	03000793          	li	a5,48
20402076:	d202                	sw	zero,36(sp)
20402078:	02f10523          	sb	a5,42(sp)
2040207c:	c622                	sw	s0,12(sp)
2040207e:	02500b93          	li	s7,37
20402082:	ffffea97          	auipc	s5,0xffffe
20402086:	36ea8a93          	addi	s5,s5,878 # 204003f0 <__sf_fake_stdout+0x20>
2040208a:	4c05                	li	s8,1
2040208c:	4b29                	li	s6,10
2040208e:	844a                	mv	s0,s2
20402090:	00044783          	lbu	a5,0(s0)
20402094:	c399                	beqz	a5,2040209a <_vfiprintf_r+0x74>
20402096:	0f779063          	bne	a5,s7,20402176 <_vfiprintf_r+0x150>
2040209a:	41240cb3          	sub	s9,s0,s2
2040209e:	01240d63          	beq	s0,s2,204020b8 <_vfiprintf_r+0x92>
204020a2:	86e6                	mv	a3,s9
204020a4:	864a                	mv	a2,s2
204020a6:	85a6                	mv	a1,s1
204020a8:	854e                	mv	a0,s3
204020aa:	3f2d                	jal	20401fe4 <__sfputs_r>
204020ac:	57fd                	li	a5,-1
204020ae:	1ef50463          	beq	a0,a5,20402296 <_vfiprintf_r+0x270>
204020b2:	5792                	lw	a5,36(sp)
204020b4:	97e6                	add	a5,a5,s9
204020b6:	d23e                	sw	a5,36(sp)
204020b8:	00044783          	lbu	a5,0(s0)
204020bc:	1c078d63          	beqz	a5,20402296 <_vfiprintf_r+0x270>
204020c0:	57fd                	li	a5,-1
204020c2:	00140913          	addi	s2,s0,1
204020c6:	c802                	sw	zero,16(sp)
204020c8:	ce02                	sw	zero,28(sp)
204020ca:	ca3e                	sw	a5,20(sp)
204020cc:	cc02                	sw	zero,24(sp)
204020ce:	040109a3          	sb	zero,83(sp)
204020d2:	d482                	sw	zero,104(sp)
204020d4:	00094583          	lbu	a1,0(s2)
204020d8:	4615                	li	a2,5
204020da:	8556                	mv	a0,s5
204020dc:	2661                	jal	20402464 <memchr>
204020de:	47c2                	lw	a5,16(sp)
204020e0:	00190413          	addi	s0,s2,1
204020e4:	e959                	bnez	a0,2040217a <_vfiprintf_r+0x154>
204020e6:	0107f713          	andi	a4,a5,16
204020ea:	c709                	beqz	a4,204020f4 <_vfiprintf_r+0xce>
204020ec:	02000713          	li	a4,32
204020f0:	04e109a3          	sb	a4,83(sp)
204020f4:	0087f713          	andi	a4,a5,8
204020f8:	c709                	beqz	a4,20402102 <_vfiprintf_r+0xdc>
204020fa:	02b00713          	li	a4,43
204020fe:	04e109a3          	sb	a4,83(sp)
20402102:	00094683          	lbu	a3,0(s2)
20402106:	02a00713          	li	a4,42
2040210a:	08e68063          	beq	a3,a4,2040218a <_vfiprintf_r+0x164>
2040210e:	47f2                	lw	a5,28(sp)
20402110:	844a                	mv	s0,s2
20402112:	4681                	li	a3,0
20402114:	4625                	li	a2,9
20402116:	00044703          	lbu	a4,0(s0)
2040211a:	00140593          	addi	a1,s0,1
2040211e:	fd070713          	addi	a4,a4,-48
20402122:	0ae67963          	bgeu	a2,a4,204021d4 <_vfiprintf_r+0x1ae>
20402126:	cab5                	beqz	a3,2040219a <_vfiprintf_r+0x174>
20402128:	ce3e                	sw	a5,28(sp)
2040212a:	a885                	j	2040219a <_vfiprintf_r+0x174>
2040212c:	ffffe797          	auipc	a5,0xffffe
20402130:	2a478793          	addi	a5,a5,676 # 204003d0 <__sf_fake_stdout>
20402134:	00f49563          	bne	s1,a5,2040213e <_vfiprintf_r+0x118>
20402138:	0089a483          	lw	s1,8(s3)
2040213c:	b70d                	j	2040205e <_vfiprintf_r+0x38>
2040213e:	ffffe797          	auipc	a5,0xffffe
20402142:	25278793          	addi	a5,a5,594 # 20400390 <__sf_fake_stderr>
20402146:	f0f49ce3          	bne	s1,a5,2040205e <_vfiprintf_r+0x38>
2040214a:	00c9a483          	lw	s1,12(s3)
2040214e:	bf01                	j	2040205e <_vfiprintf_r+0x38>
20402150:	85a6                	mv	a1,s1
20402152:	854e                	mv	a0,s3
20402154:	fe6ff0ef          	jal	ra,2040193a <__swsetup_r>
20402158:	d909                	beqz	a0,2040206a <_vfiprintf_r+0x44>
2040215a:	557d                	li	a0,-1
2040215c:	40fa                	lw	ra,156(sp)
2040215e:	446a                	lw	s0,152(sp)
20402160:	44da                	lw	s1,148(sp)
20402162:	494a                	lw	s2,144(sp)
20402164:	49ba                	lw	s3,140(sp)
20402166:	4a2a                	lw	s4,136(sp)
20402168:	4a9a                	lw	s5,132(sp)
2040216a:	4b0a                	lw	s6,128(sp)
2040216c:	5bf6                	lw	s7,124(sp)
2040216e:	5c66                	lw	s8,120(sp)
20402170:	5cd6                	lw	s9,116(sp)
20402172:	610d                	addi	sp,sp,160
20402174:	8082                	ret
20402176:	0405                	addi	s0,s0,1
20402178:	bf21                	j	20402090 <_vfiprintf_r+0x6a>
2040217a:	41550533          	sub	a0,a0,s5
2040217e:	00ac1533          	sll	a0,s8,a0
20402182:	8fc9                	or	a5,a5,a0
20402184:	c83e                	sw	a5,16(sp)
20402186:	8922                	mv	s2,s0
20402188:	b7b1                	j	204020d4 <_vfiprintf_r+0xae>
2040218a:	4732                	lw	a4,12(sp)
2040218c:	00470693          	addi	a3,a4,4
20402190:	4318                	lw	a4,0(a4)
20402192:	c636                	sw	a3,12(sp)
20402194:	02074963          	bltz	a4,204021c6 <_vfiprintf_r+0x1a0>
20402198:	ce3a                	sw	a4,28(sp)
2040219a:	00044703          	lbu	a4,0(s0)
2040219e:	02e00793          	li	a5,46
204021a2:	04f71f63          	bne	a4,a5,20402200 <_vfiprintf_r+0x1da>
204021a6:	00144703          	lbu	a4,1(s0)
204021aa:	02a00793          	li	a5,42
204021ae:	02f71b63          	bne	a4,a5,204021e4 <_vfiprintf_r+0x1be>
204021b2:	47b2                	lw	a5,12(sp)
204021b4:	0409                	addi	s0,s0,2
204021b6:	00478713          	addi	a4,a5,4
204021ba:	439c                	lw	a5,0(a5)
204021bc:	c63a                	sw	a4,12(sp)
204021be:	0207c163          	bltz	a5,204021e0 <_vfiprintf_r+0x1ba>
204021c2:	ca3e                	sw	a5,20(sp)
204021c4:	a835                	j	20402200 <_vfiprintf_r+0x1da>
204021c6:	40e00733          	neg	a4,a4
204021ca:	0027e793          	ori	a5,a5,2
204021ce:	ce3a                	sw	a4,28(sp)
204021d0:	c83e                	sw	a5,16(sp)
204021d2:	b7e1                	j	2040219a <_vfiprintf_r+0x174>
204021d4:	036787b3          	mul	a5,a5,s6
204021d8:	842e                	mv	s0,a1
204021da:	4685                	li	a3,1
204021dc:	97ba                	add	a5,a5,a4
204021de:	bf25                	j	20402116 <_vfiprintf_r+0xf0>
204021e0:	57fd                	li	a5,-1
204021e2:	b7c5                	j	204021c2 <_vfiprintf_r+0x19c>
204021e4:	0405                	addi	s0,s0,1
204021e6:	ca02                	sw	zero,20(sp)
204021e8:	4681                	li	a3,0
204021ea:	4781                	li	a5,0
204021ec:	4625                	li	a2,9
204021ee:	00044703          	lbu	a4,0(s0)
204021f2:	00140593          	addi	a1,s0,1
204021f6:	fd070713          	addi	a4,a4,-48
204021fa:	06e67463          	bgeu	a2,a4,20402262 <_vfiprintf_r+0x23c>
204021fe:	f2f1                	bnez	a3,204021c2 <_vfiprintf_r+0x19c>
20402200:	00044583          	lbu	a1,0(s0)
20402204:	460d                	li	a2,3
20402206:	ffffe517          	auipc	a0,0xffffe
2040220a:	1f250513          	addi	a0,a0,498 # 204003f8 <__sf_fake_stdout+0x28>
2040220e:	2c99                	jal	20402464 <memchr>
20402210:	cd11                	beqz	a0,2040222c <_vfiprintf_r+0x206>
20402212:	ffffe797          	auipc	a5,0xffffe
20402216:	1e678793          	addi	a5,a5,486 # 204003f8 <__sf_fake_stdout+0x28>
2040221a:	8d1d                	sub	a0,a0,a5
2040221c:	04000793          	li	a5,64
20402220:	00a797b3          	sll	a5,a5,a0
20402224:	4542                	lw	a0,16(sp)
20402226:	0405                	addi	s0,s0,1
20402228:	8d5d                	or	a0,a0,a5
2040222a:	c82a                	sw	a0,16(sp)
2040222c:	00044583          	lbu	a1,0(s0)
20402230:	4619                	li	a2,6
20402232:	ffffe517          	auipc	a0,0xffffe
20402236:	1ca50513          	addi	a0,a0,458 # 204003fc <__sf_fake_stdout+0x2c>
2040223a:	00140913          	addi	s2,s0,1
2040223e:	02b10423          	sb	a1,40(sp)
20402242:	240d                	jal	20402464 <memchr>
20402244:	c12d                	beqz	a0,204022a6 <_vfiprintf_r+0x280>
20402246:	00000793          	li	a5,0
2040224a:	e795                	bnez	a5,20402276 <_vfiprintf_r+0x250>
2040224c:	4742                	lw	a4,16(sp)
2040224e:	47b2                	lw	a5,12(sp)
20402250:	10077713          	andi	a4,a4,256
20402254:	cf09                	beqz	a4,2040226e <_vfiprintf_r+0x248>
20402256:	0791                	addi	a5,a5,4
20402258:	c63e                	sw	a5,12(sp)
2040225a:	5792                	lw	a5,36(sp)
2040225c:	97d2                	add	a5,a5,s4
2040225e:	d23e                	sw	a5,36(sp)
20402260:	b53d                	j	2040208e <_vfiprintf_r+0x68>
20402262:	036787b3          	mul	a5,a5,s6
20402266:	842e                	mv	s0,a1
20402268:	4685                	li	a3,1
2040226a:	97ba                	add	a5,a5,a4
2040226c:	b749                	j	204021ee <_vfiprintf_r+0x1c8>
2040226e:	079d                	addi	a5,a5,7
20402270:	9be1                	andi	a5,a5,-8
20402272:	07a1                	addi	a5,a5,8
20402274:	b7d5                	j	20402258 <_vfiprintf_r+0x232>
20402276:	0078                	addi	a4,sp,12
20402278:	00000697          	auipc	a3,0x0
2040227c:	d6c68693          	addi	a3,a3,-660 # 20401fe4 <__sfputs_r>
20402280:	8626                	mv	a2,s1
20402282:	080c                	addi	a1,sp,16
20402284:	854e                	mv	a0,s3
20402286:	00000097          	auipc	ra,0x0
2040228a:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
2040228e:	57fd                	li	a5,-1
20402290:	8a2a                	mv	s4,a0
20402292:	fcf514e3          	bne	a0,a5,2040225a <_vfiprintf_r+0x234>
20402296:	00c4d783          	lhu	a5,12(s1)
2040229a:	0407f793          	andi	a5,a5,64
2040229e:	ea079ee3          	bnez	a5,2040215a <_vfiprintf_r+0x134>
204022a2:	5512                	lw	a0,36(sp)
204022a4:	bd65                	j	2040215c <_vfiprintf_r+0x136>
204022a6:	0078                	addi	a4,sp,12
204022a8:	00000697          	auipc	a3,0x0
204022ac:	d3c68693          	addi	a3,a3,-708 # 20401fe4 <__sfputs_r>
204022b0:	8626                	mv	a2,s1
204022b2:	080c                	addi	a1,sp,16
204022b4:	854e                	mv	a0,s3
204022b6:	2cd1                	jal	2040258a <_printf_i>
204022b8:	bfd9                	j	2040228e <_vfiprintf_r+0x268>

204022ba <__sread>:
__sread():
204022ba:	1141                	addi	sp,sp,-16
204022bc:	c422                	sw	s0,8(sp)
204022be:	842e                	mv	s0,a1
204022c0:	00e59583          	lh	a1,14(a1)
204022c4:	c606                	sw	ra,12(sp)
204022c6:	2b15                	jal	204027fa <_read_r>
204022c8:	00054963          	bltz	a0,204022da <__sread+0x20>
204022cc:	487c                	lw	a5,84(s0)
204022ce:	97aa                	add	a5,a5,a0
204022d0:	c87c                	sw	a5,84(s0)
204022d2:	40b2                	lw	ra,12(sp)
204022d4:	4422                	lw	s0,8(sp)
204022d6:	0141                	addi	sp,sp,16
204022d8:	8082                	ret
204022da:	00c45783          	lhu	a5,12(s0)
204022de:	777d                	lui	a4,0xfffff
204022e0:	177d                	addi	a4,a4,-1
204022e2:	8ff9                	and	a5,a5,a4
204022e4:	00f41623          	sh	a5,12(s0)
204022e8:	b7ed                	j	204022d2 <__sread+0x18>

204022ea <__swrite>:
__swrite():
204022ea:	00c5d783          	lhu	a5,12(a1)
204022ee:	1101                	addi	sp,sp,-32
204022f0:	cc22                	sw	s0,24(sp)
204022f2:	ca26                	sw	s1,20(sp)
204022f4:	c84a                	sw	s2,16(sp)
204022f6:	c64e                	sw	s3,12(sp)
204022f8:	ce06                	sw	ra,28(sp)
204022fa:	1007f793          	andi	a5,a5,256
204022fe:	84aa                	mv	s1,a0
20402300:	842e                	mv	s0,a1
20402302:	8932                	mv	s2,a2
20402304:	89b6                	mv	s3,a3
20402306:	c791                	beqz	a5,20402312 <__swrite+0x28>
20402308:	00e59583          	lh	a1,14(a1)
2040230c:	4689                	li	a3,2
2040230e:	4601                	li	a2,0
20402310:	220d                	jal	20402432 <_lseek_r>
20402312:	00c45783          	lhu	a5,12(s0)
20402316:	777d                	lui	a4,0xfffff
20402318:	177d                	addi	a4,a4,-1
2040231a:	8ff9                	and	a5,a5,a4
2040231c:	00e41583          	lh	a1,14(s0)
20402320:	00f41623          	sh	a5,12(s0)
20402324:	4462                	lw	s0,24(sp)
20402326:	40f2                	lw	ra,28(sp)
20402328:	86ce                	mv	a3,s3
2040232a:	864a                	mv	a2,s2
2040232c:	49b2                	lw	s3,12(sp)
2040232e:	4942                	lw	s2,16(sp)
20402330:	8526                	mv	a0,s1
20402332:	44d2                	lw	s1,20(sp)
20402334:	6105                	addi	sp,sp,32
20402336:	a83d                	j	20402374 <_write_r>

20402338 <__sseek>:
__sseek():
20402338:	1141                	addi	sp,sp,-16
2040233a:	c422                	sw	s0,8(sp)
2040233c:	842e                	mv	s0,a1
2040233e:	00e59583          	lh	a1,14(a1)
20402342:	c606                	sw	ra,12(sp)
20402344:	20fd                	jal	20402432 <_lseek_r>
20402346:	57fd                	li	a5,-1
20402348:	00c45703          	lhu	a4,12(s0)
2040234c:	00f51b63          	bne	a0,a5,20402362 <__sseek+0x2a>
20402350:	77fd                	lui	a5,0xfffff
20402352:	17fd                	addi	a5,a5,-1
20402354:	8ff9                	and	a5,a5,a4
20402356:	00f41623          	sh	a5,12(s0)
2040235a:	40b2                	lw	ra,12(sp)
2040235c:	4422                	lw	s0,8(sp)
2040235e:	0141                	addi	sp,sp,16
20402360:	8082                	ret
20402362:	6785                	lui	a5,0x1
20402364:	8fd9                	or	a5,a5,a4
20402366:	00f41623          	sh	a5,12(s0)
2040236a:	c868                	sw	a0,84(s0)
2040236c:	b7fd                	j	2040235a <__sseek+0x22>

2040236e <__sclose>:
__sclose():
2040236e:	00e59583          	lh	a1,14(a1)
20402372:	a815                	j	204023a6 <_close_r>

20402374 <_write_r>:
_write_r():
20402374:	1141                	addi	sp,sp,-16
20402376:	c422                	sw	s0,8(sp)
20402378:	842a                	mv	s0,a0
2040237a:	852e                	mv	a0,a1
2040237c:	85b2                	mv	a1,a2
2040237e:	8636                	mv	a2,a3
20402380:	5fbfe797          	auipc	a5,0x5fbfe
20402384:	4407ac23          	sw	zero,1112(a5) # 800007d8 <errno>
20402388:	c606                	sw	ra,12(sp)
2040238a:	23e5                	jal	20402972 <_write>
2040238c:	57fd                	li	a5,-1
2040238e:	00f51863          	bne	a0,a5,2040239e <_write_r+0x2a>
20402392:	5fbfe797          	auipc	a5,0x5fbfe
20402396:	4467a783          	lw	a5,1094(a5) # 800007d8 <errno>
2040239a:	c391                	beqz	a5,2040239e <_write_r+0x2a>
2040239c:	c01c                	sw	a5,0(s0)
2040239e:	40b2                	lw	ra,12(sp)
204023a0:	4422                	lw	s0,8(sp)
204023a2:	0141                	addi	sp,sp,16
204023a4:	8082                	ret

204023a6 <_close_r>:
_close_r():
204023a6:	1141                	addi	sp,sp,-16
204023a8:	c422                	sw	s0,8(sp)
204023aa:	842a                	mv	s0,a0
204023ac:	852e                	mv	a0,a1
204023ae:	5fbfe797          	auipc	a5,0x5fbfe
204023b2:	4207a523          	sw	zero,1066(a5) # 800007d8 <errno>
204023b6:	c606                	sw	ra,12(sp)
204023b8:	2995                	jal	2040282c <_close>
204023ba:	57fd                	li	a5,-1
204023bc:	00f51863          	bne	a0,a5,204023cc <_close_r+0x26>
204023c0:	5fbfe797          	auipc	a5,0x5fbfe
204023c4:	4187a783          	lw	a5,1048(a5) # 800007d8 <errno>
204023c8:	c391                	beqz	a5,204023cc <_close_r+0x26>
204023ca:	c01c                	sw	a5,0(s0)
204023cc:	40b2                	lw	ra,12(sp)
204023ce:	4422                	lw	s0,8(sp)
204023d0:	0141                	addi	sp,sp,16
204023d2:	8082                	ret

204023d4 <_fstat_r>:
_fstat_r():
204023d4:	1141                	addi	sp,sp,-16
204023d6:	c422                	sw	s0,8(sp)
204023d8:	842a                	mv	s0,a0
204023da:	852e                	mv	a0,a1
204023dc:	85b2                	mv	a1,a2
204023de:	5fbfe797          	auipc	a5,0x5fbfe
204023e2:	3e07ad23          	sw	zero,1018(a5) # 800007d8 <errno>
204023e6:	c606                	sw	ra,12(sp)
204023e8:	219d                	jal	2040284e <_fstat>
204023ea:	57fd                	li	a5,-1
204023ec:	00f51863          	bne	a0,a5,204023fc <_fstat_r+0x28>
204023f0:	5fbfe797          	auipc	a5,0x5fbfe
204023f4:	3e87a783          	lw	a5,1000(a5) # 800007d8 <errno>
204023f8:	c391                	beqz	a5,204023fc <_fstat_r+0x28>
204023fa:	c01c                	sw	a5,0(s0)
204023fc:	40b2                	lw	ra,12(sp)
204023fe:	4422                	lw	s0,8(sp)
20402400:	0141                	addi	sp,sp,16
20402402:	8082                	ret

20402404 <_isatty_r>:
_isatty_r():
20402404:	1141                	addi	sp,sp,-16
20402406:	c422                	sw	s0,8(sp)
20402408:	842a                	mv	s0,a0
2040240a:	852e                	mv	a0,a1
2040240c:	5fbfe797          	auipc	a5,0x5fbfe
20402410:	3c07a623          	sw	zero,972(a5) # 800007d8 <errno>
20402414:	c606                	sw	ra,12(sp)
20402416:	29b9                	jal	20402874 <_isatty>
20402418:	57fd                	li	a5,-1
2040241a:	00f51863          	bne	a0,a5,2040242a <_isatty_r+0x26>
2040241e:	5fbfe797          	auipc	a5,0x5fbfe
20402422:	3ba7a783          	lw	a5,954(a5) # 800007d8 <errno>
20402426:	c391                	beqz	a5,2040242a <_isatty_r+0x26>
20402428:	c01c                	sw	a5,0(s0)
2040242a:	40b2                	lw	ra,12(sp)
2040242c:	4422                	lw	s0,8(sp)
2040242e:	0141                	addi	sp,sp,16
20402430:	8082                	ret

20402432 <_lseek_r>:
_lseek_r():
20402432:	1141                	addi	sp,sp,-16
20402434:	c422                	sw	s0,8(sp)
20402436:	842a                	mv	s0,a0
20402438:	852e                	mv	a0,a1
2040243a:	85b2                	mv	a1,a2
2040243c:	8636                	mv	a2,a3
2040243e:	5fbfe797          	auipc	a5,0x5fbfe
20402442:	3807ad23          	sw	zero,922(a5) # 800007d8 <errno>
20402446:	c606                	sw	ra,12(sp)
20402448:	21b1                	jal	20402894 <_lseek>
2040244a:	57fd                	li	a5,-1
2040244c:	00f51863          	bne	a0,a5,2040245c <_lseek_r+0x2a>
20402450:	5fbfe797          	auipc	a5,0x5fbfe
20402454:	3887a783          	lw	a5,904(a5) # 800007d8 <errno>
20402458:	c391                	beqz	a5,2040245c <_lseek_r+0x2a>
2040245a:	c01c                	sw	a5,0(s0)
2040245c:	40b2                	lw	ra,12(sp)
2040245e:	4422                	lw	s0,8(sp)
20402460:	0141                	addi	sp,sp,16
20402462:	8082                	ret

20402464 <memchr>:
memchr():
20402464:	0ff5f593          	zext.b	a1,a1
20402468:	962a                	add	a2,a2,a0
2040246a:	00c51463          	bne	a0,a2,20402472 <memchr+0xe>
2040246e:	4501                	li	a0,0
20402470:	8082                	ret
20402472:	00054783          	lbu	a5,0(a0)
20402476:	feb78de3          	beq	a5,a1,20402470 <memchr+0xc>
2040247a:	0505                	addi	a0,a0,1
2040247c:	b7fd                	j	2040246a <memchr+0x6>

2040247e <_printf_common>:
_printf_common():
2040247e:	7179                	addi	sp,sp,-48
20402480:	cc52                	sw	s4,24(sp)
20402482:	499c                	lw	a5,16(a1)
20402484:	8a3a                	mv	s4,a4
20402486:	4598                	lw	a4,8(a1)
20402488:	d422                	sw	s0,40(sp)
2040248a:	d226                	sw	s1,36(sp)
2040248c:	ce4e                	sw	s3,28(sp)
2040248e:	ca56                	sw	s5,20(sp)
20402490:	d606                	sw	ra,44(sp)
20402492:	d04a                	sw	s2,32(sp)
20402494:	c85a                	sw	s6,16(sp)
20402496:	c65e                	sw	s7,12(sp)
20402498:	89aa                	mv	s3,a0
2040249a:	842e                	mv	s0,a1
2040249c:	84b2                	mv	s1,a2
2040249e:	8ab6                	mv	s5,a3
204024a0:	00e7d363          	bge	a5,a4,204024a6 <_printf_common+0x28>
204024a4:	87ba                	mv	a5,a4
204024a6:	c09c                	sw	a5,0(s1)
204024a8:	04344703          	lbu	a4,67(s0)
204024ac:	c319                	beqz	a4,204024b2 <_printf_common+0x34>
204024ae:	0785                	addi	a5,a5,1
204024b0:	c09c                	sw	a5,0(s1)
204024b2:	401c                	lw	a5,0(s0)
204024b4:	0207f793          	andi	a5,a5,32
204024b8:	c781                	beqz	a5,204024c0 <_printf_common+0x42>
204024ba:	409c                	lw	a5,0(s1)
204024bc:	0789                	addi	a5,a5,2
204024be:	c09c                	sw	a5,0(s1)
204024c0:	00042903          	lw	s2,0(s0)
204024c4:	00697913          	andi	s2,s2,6
204024c8:	00091a63          	bnez	s2,204024dc <_printf_common+0x5e>
204024cc:	01940b13          	addi	s6,s0,25
204024d0:	5bfd                	li	s7,-1
204024d2:	445c                	lw	a5,12(s0)
204024d4:	4098                	lw	a4,0(s1)
204024d6:	8f99                	sub	a5,a5,a4
204024d8:	04f94c63          	blt	s2,a5,20402530 <_printf_common+0xb2>
204024dc:	04344783          	lbu	a5,67(s0)
204024e0:	00f036b3          	snez	a3,a5
204024e4:	401c                	lw	a5,0(s0)
204024e6:	0207f793          	andi	a5,a5,32
204024ea:	eba5                	bnez	a5,2040255a <_printf_common+0xdc>
204024ec:	04340613          	addi	a2,s0,67
204024f0:	85d6                	mv	a1,s5
204024f2:	854e                	mv	a0,s3
204024f4:	9a02                	jalr	s4
204024f6:	57fd                	li	a5,-1
204024f8:	04f50363          	beq	a0,a5,2040253e <_printf_common+0xc0>
204024fc:	401c                	lw	a5,0(s0)
204024fe:	4611                	li	a2,4
20402500:	4098                	lw	a4,0(s1)
20402502:	8b99                	andi	a5,a5,6
20402504:	4454                	lw	a3,12(s0)
20402506:	4481                	li	s1,0
20402508:	00c79763          	bne	a5,a2,20402516 <_printf_common+0x98>
2040250c:	40e684b3          	sub	s1,a3,a4
20402510:	0004d363          	bgez	s1,20402516 <_printf_common+0x98>
20402514:	4481                	li	s1,0
20402516:	441c                	lw	a5,8(s0)
20402518:	4818                	lw	a4,16(s0)
2040251a:	00f75463          	bge	a4,a5,20402522 <_printf_common+0xa4>
2040251e:	8f99                	sub	a5,a5,a4
20402520:	94be                	add	s1,s1,a5
20402522:	4901                	li	s2,0
20402524:	0469                	addi	s0,s0,26
20402526:	5b7d                	li	s6,-1
20402528:	05249863          	bne	s1,s2,20402578 <_printf_common+0xfa>
2040252c:	4501                	li	a0,0
2040252e:	a809                	j	20402540 <_printf_common+0xc2>
20402530:	4685                	li	a3,1
20402532:	865a                	mv	a2,s6
20402534:	85d6                	mv	a1,s5
20402536:	854e                	mv	a0,s3
20402538:	9a02                	jalr	s4
2040253a:	01751e63          	bne	a0,s7,20402556 <_printf_common+0xd8>
2040253e:	557d                	li	a0,-1
20402540:	50b2                	lw	ra,44(sp)
20402542:	5422                	lw	s0,40(sp)
20402544:	5492                	lw	s1,36(sp)
20402546:	5902                	lw	s2,32(sp)
20402548:	49f2                	lw	s3,28(sp)
2040254a:	4a62                	lw	s4,24(sp)
2040254c:	4ad2                	lw	s5,20(sp)
2040254e:	4b42                	lw	s6,16(sp)
20402550:	4bb2                	lw	s7,12(sp)
20402552:	6145                	addi	sp,sp,48
20402554:	8082                	ret
20402556:	0905                	addi	s2,s2,1
20402558:	bfad                	j	204024d2 <_printf_common+0x54>
2040255a:	00d40733          	add	a4,s0,a3
2040255e:	03000613          	li	a2,48
20402562:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd573>
20402566:	04544703          	lbu	a4,69(s0)
2040256a:	00168793          	addi	a5,a3,1
2040256e:	97a2                	add	a5,a5,s0
20402570:	0689                	addi	a3,a3,2
20402572:	04e781a3          	sb	a4,67(a5)
20402576:	bf9d                	j	204024ec <_printf_common+0x6e>
20402578:	4685                	li	a3,1
2040257a:	8622                	mv	a2,s0
2040257c:	85d6                	mv	a1,s5
2040257e:	854e                	mv	a0,s3
20402580:	9a02                	jalr	s4
20402582:	fb650ee3          	beq	a0,s6,2040253e <_printf_common+0xc0>
20402586:	0905                	addi	s2,s2,1
20402588:	b745                	j	20402528 <_printf_common+0xaa>

2040258a <_printf_i>:
_printf_i():
2040258a:	7179                	addi	sp,sp,-48
2040258c:	d422                	sw	s0,40(sp)
2040258e:	d226                	sw	s1,36(sp)
20402590:	d04a                	sw	s2,32(sp)
20402592:	ce4e                	sw	s3,28(sp)
20402594:	d606                	sw	ra,44(sp)
20402596:	cc52                	sw	s4,24(sp)
20402598:	ca56                	sw	s5,20(sp)
2040259a:	c85a                	sw	s6,16(sp)
2040259c:	0185c803          	lbu	a6,24(a1)
204025a0:	07800793          	li	a5,120
204025a4:	84aa                	mv	s1,a0
204025a6:	842e                	mv	s0,a1
204025a8:	8932                	mv	s2,a2
204025aa:	89b6                	mv	s3,a3
204025ac:	0107ee63          	bltu	a5,a6,204025c8 <_printf_i+0x3e>
204025b0:	06200793          	li	a5,98
204025b4:	04358693          	addi	a3,a1,67
204025b8:	0107ed63          	bltu	a5,a6,204025d2 <_printf_i+0x48>
204025bc:	1c080563          	beqz	a6,20402786 <_printf_i+0x1fc>
204025c0:	05800793          	li	a5,88
204025c4:	12f80a63          	beq	a6,a5,204026f8 <_printf_i+0x16e>
204025c8:	04240a93          	addi	s5,s0,66
204025cc:	05040123          	sb	a6,66(s0)
204025d0:	a815                	j	20402604 <_printf_i+0x7a>
204025d2:	f9d80793          	addi	a5,a6,-99
204025d6:	0ff7f793          	zext.b	a5,a5
204025da:	4655                	li	a2,21
204025dc:	fef666e3          	bltu	a2,a5,204025c8 <_printf_i+0x3e>
204025e0:	ffffe617          	auipc	a2,0xffffe
204025e4:	e4c60613          	addi	a2,a2,-436 # 2040042c <__sf_fake_stdout+0x5c>
204025e8:	078a                	slli	a5,a5,0x2
204025ea:	97b2                	add	a5,a5,a2
204025ec:	439c                	lw	a5,0(a5)
204025ee:	97b2                	add	a5,a5,a2
204025f0:	8782                	jr	a5
204025f2:	431c                	lw	a5,0(a4)
204025f4:	04258a93          	addi	s5,a1,66
204025f8:	00478693          	addi	a3,a5,4
204025fc:	439c                	lw	a5,0(a5)
204025fe:	c314                	sw	a3,0(a4)
20402600:	04f58123          	sb	a5,66(a1)
20402604:	4785                	li	a5,1
20402606:	a25d                	j	204027ac <_printf_i+0x222>
20402608:	419c                	lw	a5,0(a1)
2040260a:	4308                	lw	a0,0(a4)
2040260c:	0807f613          	andi	a2,a5,128
20402610:	00450593          	addi	a1,a0,4
20402614:	c20d                	beqz	a2,20402636 <_printf_i+0xac>
20402616:	411c                	lw	a5,0(a0)
20402618:	c30c                	sw	a1,0(a4)
2040261a:	0007d863          	bgez	a5,2040262a <_printf_i+0xa0>
2040261e:	02d00713          	li	a4,45
20402622:	40f007b3          	neg	a5,a5
20402626:	04e401a3          	sb	a4,67(s0)
2040262a:	ffffe617          	auipc	a2,0xffffe
2040262e:	dda60613          	addi	a2,a2,-550 # 20400404 <__sf_fake_stdout+0x34>
20402632:	4829                	li	a6,10
20402634:	a0a1                	j	2040267c <_printf_i+0xf2>
20402636:	0407f613          	andi	a2,a5,64
2040263a:	411c                	lw	a5,0(a0)
2040263c:	c30c                	sw	a1,0(a4)
2040263e:	de71                	beqz	a2,2040261a <_printf_i+0x90>
20402640:	07c2                	slli	a5,a5,0x10
20402642:	87c1                	srai	a5,a5,0x10
20402644:	bfd9                	j	2040261a <_printf_i+0x90>
20402646:	4190                	lw	a2,0(a1)
20402648:	431c                	lw	a5,0(a4)
2040264a:	08067513          	andi	a0,a2,128
2040264e:	00478593          	addi	a1,a5,4
20402652:	c501                	beqz	a0,2040265a <_printf_i+0xd0>
20402654:	c30c                	sw	a1,0(a4)
20402656:	439c                	lw	a5,0(a5)
20402658:	a039                	j	20402666 <_printf_i+0xdc>
2040265a:	04067613          	andi	a2,a2,64
2040265e:	c30c                	sw	a1,0(a4)
20402660:	da7d                	beqz	a2,20402656 <_printf_i+0xcc>
20402662:	0007d783          	lhu	a5,0(a5)
20402666:	06f00713          	li	a4,111
2040266a:	ffffe617          	auipc	a2,0xffffe
2040266e:	d9a60613          	addi	a2,a2,-614 # 20400404 <__sf_fake_stdout+0x34>
20402672:	0ee80463          	beq	a6,a4,2040275a <_printf_i+0x1d0>
20402676:	4829                	li	a6,10
20402678:	040401a3          	sb	zero,67(s0)
2040267c:	4058                	lw	a4,4(s0)
2040267e:	c418                	sw	a4,8(s0)
20402680:	00074563          	bltz	a4,2040268a <_printf_i+0x100>
20402684:	400c                	lw	a1,0(s0)
20402686:	99ed                	andi	a1,a1,-5
20402688:	c00c                	sw	a1,0(s0)
2040268a:	e399                	bnez	a5,20402690 <_printf_i+0x106>
2040268c:	8ab6                	mv	s5,a3
2040268e:	cf19                	beqz	a4,204026ac <_printf_i+0x122>
20402690:	8ab6                	mv	s5,a3
20402692:	0307f733          	remu	a4,a5,a6
20402696:	1afd                	addi	s5,s5,-1
20402698:	9732                	add	a4,a4,a2
2040269a:	00074703          	lbu	a4,0(a4)
2040269e:	00ea8023          	sb	a4,0(s5)
204026a2:	873e                	mv	a4,a5
204026a4:	0307d7b3          	divu	a5,a5,a6
204026a8:	ff0775e3          	bgeu	a4,a6,20402692 <_printf_i+0x108>
204026ac:	47a1                	li	a5,8
204026ae:	00f81e63          	bne	a6,a5,204026ca <_printf_i+0x140>
204026b2:	401c                	lw	a5,0(s0)
204026b4:	8b85                	andi	a5,a5,1
204026b6:	cb91                	beqz	a5,204026ca <_printf_i+0x140>
204026b8:	4058                	lw	a4,4(s0)
204026ba:	481c                	lw	a5,16(s0)
204026bc:	00e7c763          	blt	a5,a4,204026ca <_printf_i+0x140>
204026c0:	03000793          	li	a5,48
204026c4:	fefa8fa3          	sb	a5,-1(s5)
204026c8:	1afd                	addi	s5,s5,-1
204026ca:	415686b3          	sub	a3,a3,s5
204026ce:	c814                	sw	a3,16(s0)
204026d0:	874e                	mv	a4,s3
204026d2:	86ca                	mv	a3,s2
204026d4:	0070                	addi	a2,sp,12
204026d6:	85a2                	mv	a1,s0
204026d8:	8526                	mv	a0,s1
204026da:	3355                	jal	2040247e <_printf_common>
204026dc:	5a7d                	li	s4,-1
204026de:	0d451b63          	bne	a0,s4,204027b4 <_printf_i+0x22a>
204026e2:	557d                	li	a0,-1
204026e4:	50b2                	lw	ra,44(sp)
204026e6:	5422                	lw	s0,40(sp)
204026e8:	5492                	lw	s1,36(sp)
204026ea:	5902                	lw	s2,32(sp)
204026ec:	49f2                	lw	s3,28(sp)
204026ee:	4a62                	lw	s4,24(sp)
204026f0:	4ad2                	lw	s5,20(sp)
204026f2:	4b42                	lw	s6,16(sp)
204026f4:	6145                	addi	sp,sp,48
204026f6:	8082                	ret
204026f8:	050582a3          	sb	a6,69(a1)
204026fc:	ffffe617          	auipc	a2,0xffffe
20402700:	d0860613          	addi	a2,a2,-760 # 20400404 <__sf_fake_stdout+0x34>
20402704:	400c                	lw	a1,0(s0)
20402706:	4308                	lw	a0,0(a4)
20402708:	0805f813          	andi	a6,a1,128
2040270c:	411c                	lw	a5,0(a0)
2040270e:	0511                	addi	a0,a0,4
20402710:	02080d63          	beqz	a6,2040274a <_printf_i+0x1c0>
20402714:	c308                	sw	a0,0(a4)
20402716:	0015f713          	andi	a4,a1,1
2040271a:	c701                	beqz	a4,20402722 <_printf_i+0x198>
2040271c:	0205e593          	ori	a1,a1,32
20402720:	c00c                	sw	a1,0(s0)
20402722:	4841                	li	a6,16
20402724:	fbb1                	bnez	a5,20402678 <_printf_i+0xee>
20402726:	4018                	lw	a4,0(s0)
20402728:	fdf77713          	andi	a4,a4,-33
2040272c:	c018                	sw	a4,0(s0)
2040272e:	b7a9                	j	20402678 <_printf_i+0xee>
20402730:	419c                	lw	a5,0(a1)
20402732:	0207e793          	ori	a5,a5,32
20402736:	c19c                	sw	a5,0(a1)
20402738:	07800793          	li	a5,120
2040273c:	04f402a3          	sb	a5,69(s0)
20402740:	ffffe617          	auipc	a2,0xffffe
20402744:	cd860613          	addi	a2,a2,-808 # 20400418 <__sf_fake_stdout+0x48>
20402748:	bf75                	j	20402704 <_printf_i+0x17a>
2040274a:	0405f813          	andi	a6,a1,64
2040274e:	c308                	sw	a0,0(a4)
20402750:	fc0803e3          	beqz	a6,20402716 <_printf_i+0x18c>
20402754:	07c2                	slli	a5,a5,0x10
20402756:	83c1                	srli	a5,a5,0x10
20402758:	bf7d                	j	20402716 <_printf_i+0x18c>
2040275a:	4821                	li	a6,8
2040275c:	bf31                	j	20402678 <_printf_i+0xee>
2040275e:	4190                	lw	a2,0(a1)
20402760:	431c                	lw	a5,0(a4)
20402762:	49cc                	lw	a1,20(a1)
20402764:	08067813          	andi	a6,a2,128
20402768:	00478513          	addi	a0,a5,4
2040276c:	00080663          	beqz	a6,20402778 <_printf_i+0x1ee>
20402770:	c308                	sw	a0,0(a4)
20402772:	439c                	lw	a5,0(a5)
20402774:	c38c                	sw	a1,0(a5)
20402776:	a801                	j	20402786 <_printf_i+0x1fc>
20402778:	c308                	sw	a0,0(a4)
2040277a:	04067613          	andi	a2,a2,64
2040277e:	439c                	lw	a5,0(a5)
20402780:	da75                	beqz	a2,20402774 <_printf_i+0x1ea>
20402782:	00b79023          	sh	a1,0(a5)
20402786:	00042823          	sw	zero,16(s0)
2040278a:	8ab6                	mv	s5,a3
2040278c:	b791                	j	204026d0 <_printf_i+0x146>
2040278e:	431c                	lw	a5,0(a4)
20402790:	41d0                	lw	a2,4(a1)
20402792:	4581                	li	a1,0
20402794:	00478693          	addi	a3,a5,4
20402798:	c314                	sw	a3,0(a4)
2040279a:	0007aa83          	lw	s5,0(a5)
2040279e:	8556                	mv	a0,s5
204027a0:	31d1                	jal	20402464 <memchr>
204027a2:	c501                	beqz	a0,204027aa <_printf_i+0x220>
204027a4:	41550533          	sub	a0,a0,s5
204027a8:	c048                	sw	a0,4(s0)
204027aa:	405c                	lw	a5,4(s0)
204027ac:	c81c                	sw	a5,16(s0)
204027ae:	040401a3          	sb	zero,67(s0)
204027b2:	bf39                	j	204026d0 <_printf_i+0x146>
204027b4:	4814                	lw	a3,16(s0)
204027b6:	8656                	mv	a2,s5
204027b8:	85ca                	mv	a1,s2
204027ba:	8526                	mv	a0,s1
204027bc:	9982                	jalr	s3
204027be:	f34502e3          	beq	a0,s4,204026e2 <_printf_i+0x158>
204027c2:	401c                	lw	a5,0(s0)
204027c4:	8b89                	andi	a5,a5,2
204027c6:	e78d                	bnez	a5,204027f0 <_printf_i+0x266>
204027c8:	47b2                	lw	a5,12(sp)
204027ca:	4448                	lw	a0,12(s0)
204027cc:	f0f55ce3          	bge	a0,a5,204026e4 <_printf_i+0x15a>
204027d0:	853e                	mv	a0,a5
204027d2:	bf09                	j	204026e4 <_printf_i+0x15a>
204027d4:	4685                	li	a3,1
204027d6:	8656                	mv	a2,s5
204027d8:	85ca                	mv	a1,s2
204027da:	8526                	mv	a0,s1
204027dc:	9982                	jalr	s3
204027de:	f16502e3          	beq	a0,s6,204026e2 <_printf_i+0x158>
204027e2:	0a05                	addi	s4,s4,1
204027e4:	445c                	lw	a5,12(s0)
204027e6:	4732                	lw	a4,12(sp)
204027e8:	8f99                	sub	a5,a5,a4
204027ea:	fefa45e3          	blt	s4,a5,204027d4 <_printf_i+0x24a>
204027ee:	bfe9                	j	204027c8 <_printf_i+0x23e>
204027f0:	4a01                	li	s4,0
204027f2:	01940a93          	addi	s5,s0,25
204027f6:	5b7d                	li	s6,-1
204027f8:	b7f5                	j	204027e4 <_printf_i+0x25a>

204027fa <_read_r>:
_read_r():
204027fa:	1141                	addi	sp,sp,-16
204027fc:	c422                	sw	s0,8(sp)
204027fe:	842a                	mv	s0,a0
20402800:	852e                	mv	a0,a1
20402802:	85b2                	mv	a1,a2
20402804:	8636                	mv	a2,a3
20402806:	5fbfe797          	auipc	a5,0x5fbfe
2040280a:	fc07a923          	sw	zero,-46(a5) # 800007d8 <errno>
2040280e:	c606                	sw	ra,12(sp)
20402810:	207d                	jal	204028be <_read>
20402812:	57fd                	li	a5,-1
20402814:	00f51863          	bne	a0,a5,20402824 <_read_r+0x2a>
20402818:	5fbfe797          	auipc	a5,0x5fbfe
2040281c:	fc07a783          	lw	a5,-64(a5) # 800007d8 <errno>
20402820:	c391                	beqz	a5,20402824 <_read_r+0x2a>
20402822:	c01c                	sw	a5,0(s0)
20402824:	40b2                	lw	ra,12(sp)
20402826:	4422                	lw	s0,8(sp)
20402828:	0141                	addi	sp,sp,16
2040282a:	8082                	ret

2040282c <_close>:
_close():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2040282c:	1101                	addi	sp,sp,-32
2040282e:	ce06                	sw	ra,28(sp)
20402830:	cc22                	sw	s0,24(sp)
20402832:	1000                	addi	s0,sp,32
20402834:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20402838:	2a4d                	jal	204029ea <__errno>
2040283a:	872a                	mv	a4,a0
2040283c:	05800793          	li	a5,88
20402840:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:5
    return -1;
20402842:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:6
}
20402844:	853e                	mv	a0,a5
20402846:	40f2                	lw	ra,28(sp)
20402848:	4462                	lw	s0,24(sp)
2040284a:	6105                	addi	sp,sp,32
2040284c:	8082                	ret

2040284e <_fstat>:
_fstat():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
2040284e:	1101                	addi	sp,sp,-32
20402850:	ce06                	sw	ra,28(sp)
20402852:	cc22                	sw	s0,24(sp)
20402854:	1000                	addi	s0,sp,32
20402856:	fea42623          	sw	a0,-20(s0)
2040285a:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
2040285e:	2271                	jal	204029ea <__errno>
20402860:	872a                	mv	a4,a0
20402862:	fa800793          	li	a5,-88
20402866:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20402868:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:7
}
2040286a:	853e                	mv	a0,a5
2040286c:	40f2                	lw	ra,28(sp)
2040286e:	4462                	lw	s0,24(sp)
20402870:	6105                	addi	sp,sp,32
20402872:	8082                	ret

20402874 <_isatty>:
_isatty():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20402874:	1101                	addi	sp,sp,-32
20402876:	ce22                	sw	s0,28(sp)
20402878:	1000                	addi	s0,sp,32
2040287a:	fea42623          	sw	a0,-20(s0)
2040287e:	fec42783          	lw	a5,-20(s0)
20402882:	17fd                	addi	a5,a5,-1
20402884:	0017b793          	seqz	a5,a5
20402888:	0ff7f793          	zext.b	a5,a5
2040288c:	853e                	mv	a0,a5
2040288e:	4472                	lw	s0,28(sp)
20402890:	6105                	addi	sp,sp,32
20402892:	8082                	ret

20402894 <_lseek>:
_lseek():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20402894:	1101                	addi	sp,sp,-32
20402896:	ce06                	sw	ra,28(sp)
20402898:	cc22                	sw	s0,24(sp)
2040289a:	1000                	addi	s0,sp,32
2040289c:	fea42623          	sw	a0,-20(s0)
204028a0:	feb42423          	sw	a1,-24(s0)
204028a4:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
204028a8:	2289                	jal	204029ea <__errno>
204028aa:	872a                	mv	a4,a0
204028ac:	05800793          	li	a5,88
204028b0:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:6
    return -1;
204028b2:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:7
}
204028b4:	853e                	mv	a0,a5
204028b6:	40f2                	lw	ra,28(sp)
204028b8:	4462                	lw	s0,24(sp)
204028ba:	6105                	addi	sp,sp,32
204028bc:	8082                	ret

204028be <_read>:
_read():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
204028be:	1101                	addi	sp,sp,-32
204028c0:	ce06                	sw	ra,28(sp)
204028c2:	cc22                	sw	s0,24(sp)
204028c4:	1000                	addi	s0,sp,32
204028c6:	fea42623          	sw	a0,-20(s0)
204028ca:	feb42423          	sw	a1,-24(s0)
204028ce:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
204028d2:	2a21                	jal	204029ea <__errno>
204028d4:	872a                	mv	a4,a0
204028d6:	05800793          	li	a5,88
204028da:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:6
    return -1;
204028dc:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:7
}
204028de:	853e                	mv	a0,a5
204028e0:	40f2                	lw	ra,28(sp)
204028e2:	4462                	lw	s0,24(sp)
204028e4:	6105                	addi	sp,sp,32
204028e6:	8082                	ret

204028e8 <_sbrk>:
_sbrk():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
204028e8:	7179                	addi	sp,sp,-48
204028ea:	d606                	sw	ra,44(sp)
204028ec:	d422                	sw	s0,40(sp)
204028ee:	1800                	addi	s0,sp,48
204028f0:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
204028f4:	800007b7          	lui	a5,0x80000
204028f8:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffecd4>
204028fc:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20402900:	33018713          	addi	a4,gp,816 # 800012d0 <_sp>
20402904:	800027b7          	lui	a5,0x80002
20402908:	ad078793          	addi	a5,a5,-1328 # 80001ad0 <metal_segment_heap_target_end+0x0>
2040290c:	00f71463          	bne	a4,a5,20402914 <_sbrk+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402910:	57fd                	li	a5,-1
20402912:	a899                	j	20402968 <_sbrk+0x80>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20402914:	800007b7          	lui	a5,0x80000
20402918:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffecd4>
2040291c:	fdc42783          	lw	a5,-36(s0)
20402920:	973e                	add	a4,a4,a5
20402922:	800027b7          	lui	a5,0x80002
20402926:	ad078793          	addi	a5,a5,-1328 # 80001ad0 <metal_segment_heap_target_end+0x0>
2040292a:	02f77663          	bgeu	a4,a5,20402956 <_sbrk+0x6e>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
2040292e:	800007b7          	lui	a5,0x80000
20402932:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffecd4>
20402936:	fdc42783          	lw	a5,-36(s0)
2040293a:	973e                	add	a4,a4,a5
2040293c:	800007b7          	lui	a5,0x80000
20402940:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffecd4>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20402944:	fdc42583          	lw	a1,-36(s0)
20402948:	fec42503          	lw	a0,-20(s0)
2040294c:	f3efd0ef          	jal	ra,2040008a <metal_mem_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20402950:	fec42783          	lw	a5,-20(s0)
20402954:	a811                	j	20402968 <_sbrk+0x80>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20402956:	800007b7          	lui	a5,0x80000
2040295a:	80002737          	lui	a4,0x80002
2040295e:	ad070713          	addi	a4,a4,-1328 # 80001ad0 <metal_segment_heap_target_end+0x0>
20402962:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffecd4>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20402966:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:43
}
20402968:	853e                	mv	a0,a5
2040296a:	50b2                	lw	ra,44(sp)
2040296c:	5422                	lw	s0,40(sp)
2040296e:	6145                	addi	sp,sp,48
20402970:	8082                	ret

20402972 <_write>:
_write():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20402972:	7179                	addi	sp,sp,-48
20402974:	d606                	sw	ra,44(sp)
20402976:	d422                	sw	s0,40(sp)
20402978:	1800                	addi	s0,sp,48
2040297a:	fca42e23          	sw	a0,-36(s0)
2040297e:	fcb42c23          	sw	a1,-40(s0)
20402982:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20402986:	fdc42703          	lw	a4,-36(s0)
2040298a:	4785                	li	a5,1
2040298c:	00f70963          	beq	a4,a5,2040299e <_write+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20402990:	28a9                	jal	204029ea <__errno>
20402992:	872a                	mv	a4,a0
20402994:	05800793          	li	a5,88
20402998:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:10
        return -1;
2040299a:	57fd                	li	a5,-1
2040299c:	a82d                	j	204029d6 <_write+0x64>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
2040299e:	fd842783          	lw	a5,-40(s0)
204029a2:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
204029a6:	fe042623          	sw	zero,-20(s0)
204029aa:	a839                	j	204029c8 <_write+0x56>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
204029ac:	fe842703          	lw	a4,-24(s0)
204029b0:	fec42783          	lw	a5,-20(s0)
204029b4:	97ba                	add	a5,a5,a4
204029b6:	0007c783          	lbu	a5,0(a5)
204029ba:	853e                	mv	a0,a5
204029bc:	2e89                	jal	20402d0e <metal_tty_putc>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
204029be:	fec42783          	lw	a5,-20(s0)
204029c2:	0785                	addi	a5,a5,1
204029c4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
204029c8:	fec42703          	lw	a4,-20(s0)
204029cc:	fd442783          	lw	a5,-44(s0)
204029d0:	fcf76ee3          	bltu	a4,a5,204029ac <_write+0x3a>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:16
    return 0;
204029d4:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:17
}
204029d6:	853e                	mv	a0,a5
204029d8:	50b2                	lw	ra,44(sp)
204029da:	5422                	lw	s0,40(sp)
204029dc:	6145                	addi	sp,sp,48
204029de:	8082                	ret

204029e0 <atexit>:
atexit():
204029e0:	85aa                	mv	a1,a0
204029e2:	4681                	li	a3,0
204029e4:	4601                	li	a2,0
204029e6:	4501                	li	a0,0
204029e8:	a0e9                	j	20402ab2 <__register_exitproc>

204029ea <__errno>:
__errno():
204029ea:	5fbfe517          	auipc	a0,0x5fbfe
204029ee:	db652503          	lw	a0,-586(a0) # 800007a0 <_impure_ptr>
204029f2:	8082                	ret

204029f4 <exit>:
exit():
204029f4:	1141                	addi	sp,sp,-16
204029f6:	c422                	sw	s0,8(sp)
204029f8:	c606                	sw	ra,12(sp)
204029fa:	00000797          	auipc	a5,0x0
204029fe:	13478793          	addi	a5,a5,308 # 20402b2e <__call_exitprocs>
20402a02:	842a                	mv	s0,a0
20402a04:	c399                	beqz	a5,20402a0a <exit+0x16>
20402a06:	4581                	li	a1,0
20402a08:	221d                	jal	20402b2e <__call_exitprocs>
20402a0a:	ffffe517          	auipc	a0,0xffffe
20402a0e:	5c652503          	lw	a0,1478(a0) # 20400fd0 <_global_impure_ptr>
20402a12:	551c                	lw	a5,40(a0)
20402a14:	c391                	beqz	a5,20402a18 <exit+0x24>
20402a16:	9782                	jalr	a5
20402a18:	8522                	mv	a0,s0
20402a1a:	20d040ef          	jal	ra,20407426 <_exit>

20402a1e <__libc_fini_array>:
__libc_fini_array():
20402a1e:	1141                	addi	sp,sp,-16
20402a20:	c422                	sw	s0,8(sp)
20402a22:	c226                	sw	s1,4(sp)
20402a24:	ffffe417          	auipc	s0,0xffffe
20402a28:	8cc40413          	addi	s0,s0,-1844 # 204002f0 <__fini_array_end>
20402a2c:	ffffe497          	auipc	s1,0xffffe
20402a30:	8c448493          	addi	s1,s1,-1852 # 204002f0 <__fini_array_end>
20402a34:	8c05                	sub	s0,s0,s1
20402a36:	c606                	sw	ra,12(sp)
20402a38:	8409                	srai	s0,s0,0x2
20402a3a:	e411                	bnez	s0,20402a46 <__libc_fini_array+0x28>
20402a3c:	40b2                	lw	ra,12(sp)
20402a3e:	4422                	lw	s0,8(sp)
20402a40:	4492                	lw	s1,4(sp)
20402a42:	0141                	addi	sp,sp,16
20402a44:	8082                	ret
20402a46:	147d                	addi	s0,s0,-1
20402a48:	00241793          	slli	a5,s0,0x2
20402a4c:	97a6                	add	a5,a5,s1
20402a4e:	439c                	lw	a5,0(a5)
20402a50:	9782                	jalr	a5
20402a52:	b7e5                	j	20402a3a <__libc_fini_array+0x1c>

20402a54 <__libc_init_array>:
__libc_init_array():
20402a54:	1141                	addi	sp,sp,-16
20402a56:	c422                	sw	s0,8(sp)
20402a58:	c226                	sw	s1,4(sp)
20402a5a:	ffffe417          	auipc	s0,0xffffe
20402a5e:	88640413          	addi	s0,s0,-1914 # 204002e0 <_metal_tty_init_ptr>
20402a62:	ffffe497          	auipc	s1,0xffffe
20402a66:	87e48493          	addi	s1,s1,-1922 # 204002e0 <_metal_tty_init_ptr>
20402a6a:	8c81                	sub	s1,s1,s0
20402a6c:	c04a                	sw	s2,0(sp)
20402a6e:	c606                	sw	ra,12(sp)
20402a70:	8489                	srai	s1,s1,0x2
20402a72:	4901                	li	s2,0
20402a74:	02991563          	bne	s2,s1,20402a9e <__libc_init_array+0x4a>
20402a78:	ffffe417          	auipc	s0,0xffffe
20402a7c:	86840413          	addi	s0,s0,-1944 # 204002e0 <_metal_tty_init_ptr>
20402a80:	ffffe497          	auipc	s1,0xffffe
20402a84:	86048493          	addi	s1,s1,-1952 # 204002e0 <_metal_tty_init_ptr>
20402a88:	8c81                	sub	s1,s1,s0
20402a8a:	8489                	srai	s1,s1,0x2
20402a8c:	4901                	li	s2,0
20402a8e:	00991d63          	bne	s2,s1,20402aa8 <__libc_init_array+0x54>
20402a92:	40b2                	lw	ra,12(sp)
20402a94:	4422                	lw	s0,8(sp)
20402a96:	4492                	lw	s1,4(sp)
20402a98:	4902                	lw	s2,0(sp)
20402a9a:	0141                	addi	sp,sp,16
20402a9c:	8082                	ret
20402a9e:	401c                	lw	a5,0(s0)
20402aa0:	0905                	addi	s2,s2,1
20402aa2:	0411                	addi	s0,s0,4
20402aa4:	9782                	jalr	a5
20402aa6:	b7f9                	j	20402a74 <__libc_init_array+0x20>
20402aa8:	401c                	lw	a5,0(s0)
20402aaa:	0905                	addi	s2,s2,1
20402aac:	0411                	addi	s0,s0,4
20402aae:	9782                	jalr	a5
20402ab0:	bff9                	j	20402a8e <__libc_init_array+0x3a>

20402ab2 <__register_exitproc>:
__register_exitproc():
20402ab2:	88aa                	mv	a7,a0
20402ab4:	5fbfe517          	auipc	a0,0x5fbfe
20402ab8:	d2850513          	addi	a0,a0,-728 # 800007dc <_global_atexit>
20402abc:	411c                	lw	a5,0(a0)
20402abe:	ef91                	bnez	a5,20402ada <__register_exitproc+0x28>
20402ac0:	5fbfe717          	auipc	a4,0x5fbfe
20402ac4:	d2870713          	addi	a4,a4,-728 # 800007e8 <_global_atexit0>
20402ac8:	c118                	sw	a4,0(a0)
20402aca:	00000513          	li	a0,0
20402ace:	87ba                	mv	a5,a4
20402ad0:	c509                	beqz	a0,20402ada <__register_exitproc+0x28>
20402ad2:	411c                	lw	a5,0(a0)
20402ad4:	08f72423          	sw	a5,136(a4)
20402ad8:	87ba                	mv	a5,a4
20402ada:	43d8                	lw	a4,4(a5)
20402adc:	487d                	li	a6,31
20402ade:	557d                	li	a0,-1
20402ae0:	04e84663          	blt	a6,a4,20402b2c <__register_exitproc+0x7a>
20402ae4:	02088d63          	beqz	a7,20402b1e <__register_exitproc+0x6c>
20402ae8:	0887a803          	lw	a6,136(a5)
20402aec:	04080063          	beqz	a6,20402b2c <__register_exitproc+0x7a>
20402af0:	00271513          	slli	a0,a4,0x2
20402af4:	9542                	add	a0,a0,a6
20402af6:	c110                	sw	a2,0(a0)
20402af8:	10082303          	lw	t1,256(a6)
20402afc:	4605                	li	a2,1
20402afe:	00e61633          	sll	a2,a2,a4
20402b02:	00c36333          	or	t1,t1,a2
20402b06:	10682023          	sw	t1,256(a6)
20402b0a:	08d52023          	sw	a3,128(a0)
20402b0e:	4689                	li	a3,2
20402b10:	00d89763          	bne	a7,a3,20402b1e <__register_exitproc+0x6c>
20402b14:	10482683          	lw	a3,260(a6)
20402b18:	8e55                	or	a2,a2,a3
20402b1a:	10c82223          	sw	a2,260(a6)
20402b1e:	00170693          	addi	a3,a4,1
20402b22:	070a                	slli	a4,a4,0x2
20402b24:	c3d4                	sw	a3,4(a5)
20402b26:	97ba                	add	a5,a5,a4
20402b28:	c78c                	sw	a1,8(a5)
20402b2a:	4501                	li	a0,0
20402b2c:	8082                	ret

20402b2e <__call_exitprocs>:
__call_exitprocs():
20402b2e:	7179                	addi	sp,sp,-48
20402b30:	ca56                	sw	s5,20(sp)
20402b32:	c85a                	sw	s6,16(sp)
20402b34:	c65e                	sw	s7,12(sp)
20402b36:	c462                	sw	s8,8(sp)
20402b38:	d606                	sw	ra,44(sp)
20402b3a:	d422                	sw	s0,40(sp)
20402b3c:	d226                	sw	s1,36(sp)
20402b3e:	d04a                	sw	s2,32(sp)
20402b40:	ce4e                	sw	s3,28(sp)
20402b42:	cc52                	sw	s4,24(sp)
20402b44:	c266                	sw	s9,4(sp)
20402b46:	8b2a                	mv	s6,a0
20402b48:	8aae                	mv	s5,a1
20402b4a:	5fbfeb97          	auipc	s7,0x5fbfe
20402b4e:	c92b8b93          	addi	s7,s7,-878 # 800007dc <_global_atexit>
20402b52:	4c05                	li	s8,1
20402b54:	000ba483          	lw	s1,0(s7)
20402b58:	cc81                	beqz	s1,20402b70 <__call_exitprocs+0x42>
20402b5a:	40c0                	lw	s0,4(s1)
20402b5c:	0884a983          	lw	s3,136(s1)
20402b60:	fff40913          	addi	s2,s0,-1
20402b64:	040a                	slli	s0,s0,0x2
20402b66:	00898a33          	add	s4,s3,s0
20402b6a:	9426                	add	s0,s0,s1
20402b6c:	00095f63          	bgez	s2,20402b8a <__call_exitprocs+0x5c>
20402b70:	50b2                	lw	ra,44(sp)
20402b72:	5422                	lw	s0,40(sp)
20402b74:	5492                	lw	s1,36(sp)
20402b76:	5902                	lw	s2,32(sp)
20402b78:	49f2                	lw	s3,28(sp)
20402b7a:	4a62                	lw	s4,24(sp)
20402b7c:	4ad2                	lw	s5,20(sp)
20402b7e:	4b42                	lw	s6,16(sp)
20402b80:	4bb2                	lw	s7,12(sp)
20402b82:	4c22                	lw	s8,8(sp)
20402b84:	4c92                	lw	s9,4(sp)
20402b86:	6145                	addi	sp,sp,48
20402b88:	8082                	ret
20402b8a:	000a8c63          	beqz	s5,20402ba2 <__call_exitprocs+0x74>
20402b8e:	00099663          	bnez	s3,20402b9a <__call_exitprocs+0x6c>
20402b92:	197d                	addi	s2,s2,-1
20402b94:	1a71                	addi	s4,s4,-4
20402b96:	1471                	addi	s0,s0,-4
20402b98:	bfd1                	j	20402b6c <__call_exitprocs+0x3e>
20402b9a:	07ca2783          	lw	a5,124(s4)
20402b9e:	ff579ae3          	bne	a5,s5,20402b92 <__call_exitprocs+0x64>
20402ba2:	40d8                	lw	a4,4(s1)
20402ba4:	405c                	lw	a5,4(s0)
20402ba6:	177d                	addi	a4,a4,-1
20402ba8:	03271863          	bne	a4,s2,20402bd8 <__call_exitprocs+0xaa>
20402bac:	0124a223          	sw	s2,4(s1)
20402bb0:	d3ed                	beqz	a5,20402b92 <__call_exitprocs+0x64>
20402bb2:	0044ac83          	lw	s9,4(s1)
20402bb6:	00098863          	beqz	s3,20402bc6 <__call_exitprocs+0x98>
20402bba:	1009a683          	lw	a3,256(s3)
20402bbe:	012c1733          	sll	a4,s8,s2
20402bc2:	8ef9                	and	a3,a3,a4
20402bc4:	ee89                	bnez	a3,20402bde <__call_exitprocs+0xb0>
20402bc6:	9782                	jalr	a5
20402bc8:	40d8                	lw	a4,4(s1)
20402bca:	000ba783          	lw	a5,0(s7)
20402bce:	f99713e3          	bne	a4,s9,20402b54 <__call_exitprocs+0x26>
20402bd2:	fcf480e3          	beq	s1,a5,20402b92 <__call_exitprocs+0x64>
20402bd6:	bfbd                	j	20402b54 <__call_exitprocs+0x26>
20402bd8:	00042223          	sw	zero,4(s0)
20402bdc:	bfd1                	j	20402bb0 <__call_exitprocs+0x82>
20402bde:	1049a683          	lw	a3,260(s3)
20402be2:	ffca2583          	lw	a1,-4(s4)
20402be6:	8f75                	and	a4,a4,a3
20402be8:	e701                	bnez	a4,20402bf0 <__call_exitprocs+0xc2>
20402bea:	855a                	mv	a0,s6
20402bec:	9782                	jalr	a5
20402bee:	bfe9                	j	20402bc8 <__call_exitprocs+0x9a>
20402bf0:	852e                	mv	a0,a1
20402bf2:	9782                	jalr	a5
20402bf4:	bfd1                	j	20402bc8 <__call_exitprocs+0x9a>

20402bf6 <metal_init>:
metal_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402bf6:	1101                	addi	sp,sp,-32
20402bf8:	ce06                	sw	ra,28(sp)
20402bfa:	cc22                	sw	s0,24(sp)
20402bfc:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402bfe:	800007b7          	lui	a5,0x80000
20402c02:	7e07a783          	lw	a5,2016(a5) # 800007e0 <metal_segment_heap_target_end+0xffffed10>
20402c06:	efa9                	bnez	a5,20402c60 <metal_init+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20402c08:	800007b7          	lui	a5,0x80000
20402c0c:	4705                	li	a4,1
20402c0e:	7ee7a023          	sw	a4,2016(a5) # 800007e0 <metal_segment_heap_target_end+0xffffed10>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402c12:	204007b7          	lui	a5,0x20400
20402c16:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20402c1a:	204007b7          	lui	a5,0x20400
20402c1e:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402c22:	04e7f163          	bgeu	a5,a4,20402c64 <metal_init+0x6e>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402c26:	204007b7          	lui	a5,0x20400
20402c2a:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402c2e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402c32:	a831                	j	20402c4e <metal_init+0x58>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402c34:	fec42783          	lw	a5,-20(s0)
20402c38:	439c                	lw	a5,0(a5)
20402c3a:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:33

        func();
20402c3e:	fe842783          	lw	a5,-24(s0)
20402c42:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:35

        funcptr += 1;
20402c44:	fec42783          	lw	a5,-20(s0)
20402c48:	0791                	addi	a5,a5,4
20402c4a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402c4e:	fec42703          	lw	a4,-20(s0)
20402c52:	204007b7          	lui	a5,0x20400
20402c56:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
20402c5a:	fcf71de3          	bne	a4,a5,20402c34 <metal_init+0x3e>
20402c5e:	a021                	j	20402c66 <metal_init+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:21
        return;
20402c60:	0001                	nop
20402c62:	a011                	j	20402c66 <metal_init+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:26
        return;
20402c64:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:37
    }
}
20402c66:	40f2                	lw	ra,28(sp)
20402c68:	4462                	lw	s0,24(sp)
20402c6a:	6105                	addi	sp,sp,32
20402c6c:	8082                	ret

20402c6e <metal_fini>:
metal_fini():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:39

void metal_fini(void) {
20402c6e:	1101                	addi	sp,sp,-32
20402c70:	ce06                	sw	ra,28(sp)
20402c72:	cc22                	sw	s0,24(sp)
20402c74:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20402c76:	800007b7          	lui	a5,0x80000
20402c7a:	7e47a783          	lw	a5,2020(a5) # 800007e4 <metal_segment_heap_target_end+0xffffed14>
20402c7e:	efa9                	bnez	a5,20402cd8 <metal_fini+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20402c80:	800007b7          	lui	a5,0x80000
20402c84:	4705                	li	a4,1
20402c86:	7ee7a223          	sw	a4,2020(a5) # 800007e4 <metal_segment_heap_target_end+0xffffed14>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20402c8a:	204007b7          	lui	a5,0x20400
20402c8e:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20402c92:	204007b7          	lui	a5,0x20400
20402c96:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402c9a:	04e7f163          	bgeu	a5,a4,20402cdc <metal_fini+0x6e>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20402c9e:	204007b7          	lui	a5,0x20400
20402ca2:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402ca6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402caa:	a831                	j	20402cc6 <metal_fini+0x58>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20402cac:	fec42783          	lw	a5,-20(s0)
20402cb0:	439c                	lw	a5,0(a5)
20402cb2:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:55

        func();
20402cb6:	fe842783          	lw	a5,-24(s0)
20402cba:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:57

        funcptr += 1;
20402cbc:	fec42783          	lw	a5,-20(s0)
20402cc0:	0791                	addi	a5,a5,4
20402cc2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402cc6:	fec42703          	lw	a4,-20(s0)
20402cca:	204007b7          	lui	a5,0x20400
20402cce:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402cd2:	fcf71de3          	bne	a4,a5,20402cac <metal_fini+0x3e>
20402cd6:	a021                	j	20402cde <metal_fini+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:43
        return;
20402cd8:	0001                	nop
20402cda:	a011                	j	20402cde <metal_fini+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:48
        return;
20402cdc:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:59
    }
}
20402cde:	40f2                	lw	ra,28(sp)
20402ce0:	4462                	lw	s0,24(sp)
20402ce2:	6105                	addi	sp,sp,32
20402ce4:	8082                	ret

20402ce6 <metal_init_run>:
metal_init_run():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402ce6:	1141                	addi	sp,sp,-16
20402ce8:	c606                	sw	ra,12(sp)
20402cea:	c422                	sw	s0,8(sp)
20402cec:	0800                	addi	s0,sp,16
20402cee:	3721                	jal	20402bf6 <metal_init>
20402cf0:	0001                	nop
20402cf2:	40b2                	lw	ra,12(sp)
20402cf4:	4422                	lw	s0,8(sp)
20402cf6:	0141                	addi	sp,sp,16
20402cf8:	8082                	ret

20402cfa <metal_fini_run>:
metal_fini_run():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20402cfa:	1141                	addi	sp,sp,-16
20402cfc:	c606                	sw	ra,12(sp)
20402cfe:	c422                	sw	s0,8(sp)
20402d00:	0800                	addi	s0,sp,16
20402d02:	37b5                	jal	20402c6e <metal_fini>
20402d04:	0001                	nop
20402d06:	40b2                	lw	ra,12(sp)
20402d08:	4422                	lw	s0,8(sp)
20402d0a:	0141                	addi	sp,sp,16
20402d0c:	8082                	ret

20402d0e <metal_tty_putc>:
metal_tty_putc():
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20402d0e:	1101                	addi	sp,sp,-32
20402d10:	ce06                	sw	ra,28(sp)
20402d12:	cc22                	sw	s0,24(sp)
20402d14:	1000                	addi	s0,sp,32
20402d16:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20402d1a:	fec42583          	lw	a1,-20(s0)
20402d1e:	800007b7          	lui	a5,0x80000
20402d22:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20402d26:	282d                	jal	20402d60 <metal_uart_putc>
20402d28:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:14
}
20402d2a:	853e                	mv	a0,a5
20402d2c:	40f2                	lw	ra,28(sp)
20402d2e:	4462                	lw	s0,24(sp)
20402d30:	6105                	addi	sp,sp,32
20402d32:	8082                	ret

20402d34 <metal_uart_init>:
metal_uart_init():
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20402d34:	1101                	addi	sp,sp,-32
20402d36:	ce06                	sw	ra,28(sp)
20402d38:	cc22                	sw	s0,24(sp)
20402d3a:	1000                	addi	s0,sp,32
20402d3c:	fea42623          	sw	a0,-20(s0)
20402d40:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20402d44:	fec42783          	lw	a5,-20(s0)
20402d48:	439c                	lw	a5,0(a5)
20402d4a:	439c                	lw	a5,0(a5)
20402d4c:	fe842583          	lw	a1,-24(s0)
20402d50:	fec42503          	lw	a0,-20(s0)
20402d54:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:61
}
20402d56:	0001                	nop
20402d58:	40f2                	lw	ra,28(sp)
20402d5a:	4462                	lw	s0,24(sp)
20402d5c:	6105                	addi	sp,sp,32
20402d5e:	8082                	ret

20402d60 <metal_uart_putc>:
metal_uart_putc():
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20402d60:	1101                	addi	sp,sp,-32
20402d62:	ce06                	sw	ra,28(sp)
20402d64:	cc22                	sw	s0,24(sp)
20402d66:	1000                	addi	s0,sp,32
20402d68:	fea42623          	sw	a0,-20(s0)
20402d6c:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20402d70:	fec42783          	lw	a5,-20(s0)
20402d74:	439c                	lw	a5,0(a5)
20402d76:	43dc                	lw	a5,4(a5)
20402d78:	fe842583          	lw	a1,-24(s0)
20402d7c:	fec42503          	lw	a0,-20(s0)
20402d80:	9782                	jalr	a5
20402d82:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:71
}
20402d84:	853e                	mv	a0,a5
20402d86:	40f2                	lw	ra,28(sp)
20402d88:	4462                	lw	s0,24(sp)
20402d8a:	6105                	addi	sp,sp,32
20402d8c:	8082                	ret

20402d8e <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20402d8e:	1101                	addi	sp,sp,-32
20402d90:	ce06                	sw	ra,28(sp)
20402d92:	cc22                	sw	s0,24(sp)
20402d94:	1000                	addi	s0,sp,32
20402d96:	fea42623          	sw	a0,-20(s0)
20402d9a:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20402d9e:	fec42783          	lw	a5,-20(s0)
20402da2:	439c                	lw	a5,0(a5)
20402da4:	4bdc                	lw	a5,20(a5)
20402da6:	fe842583          	lw	a1,-24(s0)
20402daa:	fec42503          	lw	a0,-20(s0)
20402dae:	9782                	jalr	a5
20402db0:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:113
}
20402db2:	853e                	mv	a0,a5
20402db4:	40f2                	lw	ra,28(sp)
20402db6:	4462                	lw	s0,24(sp)
20402db8:	6105                	addi	sp,sp,32
20402dba:	8082                	ret

20402dbc <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20402dbc:	1101                	addi	sp,sp,-32
20402dbe:	ce22                	sw	s0,28(sp)
20402dc0:	1000                	addi	s0,sp,32
20402dc2:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402dc6:	fec42703          	lw	a4,-20(s0)
20402dca:	800007b7          	lui	a5,0x80000
20402dce:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffecdc>
20402dd2:	00f71563          	bne	a4,a5,20402ddc <__metal_driver_sifive_clint0_control_base+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20402dd6:	020007b7          	lui	a5,0x2000
20402dda:	a011                	j	20402dde <__metal_driver_sifive_clint0_control_base+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:207
	}
	else {
		return 0;
20402ddc:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:209
	}
}
20402dde:	853e                	mv	a0,a5
20402de0:	4472                	lw	s0,28(sp)
20402de2:	6105                	addi	sp,sp,32
20402de4:	8082                	ret

20402de6 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20402de6:	1101                	addi	sp,sp,-32
20402de8:	ce22                	sw	s0,28(sp)
20402dea:	1000                	addi	s0,sp,32
20402dec:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402df0:	fec42703          	lw	a4,-20(s0)
20402df4:	800007b7          	lui	a5,0x80000
20402df8:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffecdc>
20402dfc:	00f71463          	bne	a4,a5,20402e04 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
20402e00:	4789                	li	a5,2
20402e02:	a011                	j	20402e06 <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:227
	}
	else {
		return 0;
20402e04:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:229
	}
}
20402e06:	853e                	mv	a0,a5
20402e08:	4472                	lw	s0,28(sp)
20402e0a:	6105                	addi	sp,sp,32
20402e0c:	8082                	ret

20402e0e <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20402e0e:	1101                	addi	sp,sp,-32
20402e10:	ce22                	sw	s0,28(sp)
20402e12:	1000                	addi	s0,sp,32
20402e14:	fea42623          	sw	a0,-20(s0)
20402e18:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:233
	if (idx == 0) {
20402e1c:	fe842783          	lw	a5,-24(s0)
20402e20:	e791                	bnez	a5,20402e2c <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402e22:	800007b7          	lui	a5,0x80000
20402e26:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe5b8>
20402e2a:	a821                	j	20402e42 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:236
	}
	else if (idx == 1) {
20402e2c:	fe842703          	lw	a4,-24(s0)
20402e30:	4785                	li	a5,1
20402e32:	00f71763          	bne	a4,a5,20402e40 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402e36:	800007b7          	lui	a5,0x80000
20402e3a:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe5b8>
20402e3e:	a011                	j	20402e42 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:240
	}
	else {
		return NULL;
20402e40:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:242
	}
}
20402e42:	853e                	mv	a0,a5
20402e44:	4472                	lw	s0,28(sp)
20402e46:	6105                	addi	sp,sp,32
20402e48:	8082                	ret

20402e4a <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20402e4a:	1101                	addi	sp,sp,-32
20402e4c:	ce22                	sw	s0,28(sp)
20402e4e:	1000                	addi	s0,sp,32
20402e50:	fea42623          	sw	a0,-20(s0)
20402e54:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:246
	if (idx == 0) {
20402e58:	fe842783          	lw	a5,-24(s0)
20402e5c:	e399                	bnez	a5,20402e62 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:247
		return 3;
20402e5e:	478d                	li	a5,3
20402e60:	a809                	j	20402e72 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:249
	}
	else if (idx == 1) {
20402e62:	fe842703          	lw	a4,-24(s0)
20402e66:	4785                	li	a5,1
20402e68:	00f71463          	bne	a4,a5,20402e70 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:250
		return 7;
20402e6c:	479d                	li	a5,7
20402e6e:	a011                	j	20402e72 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:253
	}
	else {
		return 0;
20402e70:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:255
	}
}
20402e72:	853e                	mv	a0,a5
20402e74:	4472                	lw	s0,28(sp)
20402e76:	6105                	addi	sp,sp,32
20402e78:	8082                	ret

20402e7a <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20402e7a:	715d                	addi	sp,sp,-80
20402e7c:	c686                	sw	ra,76(sp)
20402e7e:	c4a2                	sw	s0,72(sp)
20402e80:	c2ca                	sw	s2,68(sp)
20402e82:	c0ce                	sw	s3,64(sp)
20402e84:	de52                	sw	s4,60(sp)
20402e86:	dc56                	sw	s5,56(sp)
20402e88:	da5a                	sw	s6,52(sp)
20402e8a:	d85e                	sw	s7,48(sp)
20402e8c:	d662                	sw	s8,44(sp)
20402e8e:	d466                	sw	s9,40(sp)
20402e90:	0880                	addi	s0,sp,80
20402e92:	faa42e23          	sw	a0,-68(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402e96:	fbc42783          	lw	a5,-68(s0)
20402e9a:	853e                	mv	a0,a5
20402e9c:	3705                	jal	20402dbc <__metal_driver_sifive_clint0_control_base>
20402e9e:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20402ea2:	fcc42703          	lw	a4,-52(s0)
20402ea6:	67b1                	lui	a5,0xc
20402ea8:	17f1                	addi	a5,a5,-4
20402eaa:	97ba                	add	a5,a5,a4
20402eac:	439c                	lw	a5,0(a5)
20402eae:	fcf42423          	sw	a5,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20402eb2:	fcc42703          	lw	a4,-52(s0)
20402eb6:	67b1                	lui	a5,0xc
20402eb8:	17e1                	addi	a5,a5,-8
20402eba:	97ba                	add	a5,a5,a4
20402ebc:	439c                	lw	a5,0(a5)
20402ebe:	fcf42223          	sw	a5,-60(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20402ec2:	fcc42703          	lw	a4,-52(s0)
20402ec6:	67b1                	lui	a5,0xc
20402ec8:	17f1                	addi	a5,a5,-4
20402eca:	97ba                	add	a5,a5,a4
20402ecc:	439c                	lw	a5,0(a5)
20402ece:	fc842703          	lw	a4,-56(s0)
20402ed2:	fcf718e3          	bne	a4,a5,20402ea2 <__metal_clint0_mtime_get+0x28>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20402ed6:	fc842783          	lw	a5,-56(s0)
20402eda:	8c3e                	mv	s8,a5
20402edc:	4c81                	li	s9,0
20402ede:	000c1993          	slli	s3,s8,0x0
20402ee2:	4901                	li	s2,0
20402ee4:	fc442783          	lw	a5,-60(s0)
20402ee8:	8a3e                	mv	s4,a5
20402eea:	4a81                	li	s5,0
20402eec:	01496b33          	or	s6,s2,s4
20402ef0:	0159ebb3          	or	s7,s3,s5
20402ef4:	875a                	mv	a4,s6
20402ef6:	87de                	mv	a5,s7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:30
}
20402ef8:	853a                	mv	a0,a4
20402efa:	85be                	mv	a1,a5
20402efc:	40b6                	lw	ra,76(sp)
20402efe:	4426                	lw	s0,72(sp)
20402f00:	4916                	lw	s2,68(sp)
20402f02:	4986                	lw	s3,64(sp)
20402f04:	5a72                	lw	s4,60(sp)
20402f06:	5ae2                	lw	s5,56(sp)
20402f08:	5b52                	lw	s6,52(sp)
20402f0a:	5bc2                	lw	s7,48(sp)
20402f0c:	5c32                	lw	s8,44(sp)
20402f0e:	5ca2                	lw	s9,40(sp)
20402f10:	6161                	addi	sp,sp,80
20402f12:	8082                	ret

20402f14 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20402f14:	7179                	addi	sp,sp,-48
20402f16:	d606                	sw	ra,44(sp)
20402f18:	d422                	sw	s0,40(sp)
20402f1a:	d24a                	sw	s2,36(sp)
20402f1c:	d04e                	sw	s3,32(sp)
20402f1e:	1800                	addi	s0,sp,48
20402f20:	fca42e23          	sw	a0,-36(s0)
20402f24:	fcb42c23          	sw	a1,-40(s0)
20402f28:	fcc42823          	sw	a2,-48(s0)
20402f2c:	fcd42a23          	sw	a3,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20402f30:	fdc42783          	lw	a5,-36(s0)
20402f34:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402f38:	fec42783          	lw	a5,-20(s0)
20402f3c:	853e                	mv	a0,a5
20402f3e:	3dbd                	jal	20402dbc <__metal_driver_sifive_clint0_control_base>
20402f40:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402f44:	fd842783          	lw	a5,-40(s0)
20402f48:	078e                	slli	a5,a5,0x3
20402f4a:	873e                	mv	a4,a5
20402f4c:	fe842783          	lw	a5,-24(s0)
20402f50:	973e                	add	a4,a4,a5
20402f52:	6791                	lui	a5,0x4
20402f54:	0791                	addi	a5,a5,4
20402f56:	97ba                	add	a5,a5,a4
20402f58:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20402f5a:	57fd                	li	a5,-1
20402f5c:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402f5e:	fd842783          	lw	a5,-40(s0)
20402f62:	078e                	slli	a5,a5,0x3
20402f64:	873e                	mv	a4,a5
20402f66:	fe842783          	lw	a5,-24(s0)
20402f6a:	973e                	add	a4,a4,a5
20402f6c:	6791                	lui	a5,0x4
20402f6e:	97ba                	add	a5,a5,a4
20402f70:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20402f72:	fd042783          	lw	a5,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20402f76:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20402f78:	fd442783          	lw	a5,-44(s0)
20402f7c:	0007d913          	srli	s2,a5,0x0
20402f80:	4981                	li	s3,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402f82:	fd842783          	lw	a5,-40(s0)
20402f86:	078e                	slli	a5,a5,0x3
20402f88:	873e                	mv	a4,a5
20402f8a:	fe842783          	lw	a5,-24(s0)
20402f8e:	973e                	add	a4,a4,a5
20402f90:	6791                	lui	a5,0x4
20402f92:	0791                	addi	a5,a5,4
20402f94:	97ba                	add	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20402f96:	874a                	mv	a4,s2
20402f98:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20402f9a:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:55
}
20402f9c:	853e                	mv	a0,a5
20402f9e:	50b2                	lw	ra,44(sp)
20402fa0:	5422                	lw	s0,40(sp)
20402fa2:	5912                	lw	s2,36(sp)
20402fa4:	5982                	lw	s3,32(sp)
20402fa6:	6145                	addi	sp,sp,48
20402fa8:	8082                	ret

20402faa <_get_cpu_intc>:
_get_cpu_intc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20402faa:	1101                	addi	sp,sp,-32
20402fac:	ce06                	sw	ra,28(sp)
20402fae:	cc22                	sw	s0,24(sp)
20402fb0:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20402fb2:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20402fb6:	f14027f3          	csrr	a5,mhartid
20402fba:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20402fbe:	fec42783          	lw	a5,-20(s0)
20402fc2:	853e                	mv	a0,a5
20402fc4:	2ac040ef          	jal	ra,20407270 <metal_cpu_get>
20402fc8:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20402fcc:	fe842503          	lw	a0,-24(s0)
20402fd0:	27a040ef          	jal	ra,2040724a <metal_cpu_interrupt_controller>
20402fd4:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:65
}
20402fd6:	853e                	mv	a0,a5
20402fd8:	40f2                	lw	ra,28(sp)
20402fda:	4462                	lw	s0,24(sp)
20402fdc:	6105                	addi	sp,sp,32
20402fde:	8082                	ret

20402fe0 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20402fe0:	7139                	addi	sp,sp,-64
20402fe2:	de06                	sw	ra,60(sp)
20402fe4:	dc22                	sw	s0,56(sp)
20402fe6:	0080                	addi	s0,sp,64
20402fe8:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20402fec:	fcc42503          	lw	a0,-52(s0)
20402ff0:	3bdd                	jal	20402de6 <__metal_driver_sifive_clint0_num_interrupts>
20402ff2:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20402ff6:	fcc42783          	lw	a5,-52(s0)
20402ffa:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20402ffe:	fe442783          	lw	a5,-28(s0)
20403002:	43dc                	lw	a5,4(a5)
20403004:	efa9                	bnez	a5,2040305e <__metal_driver_riscv_clint0_init+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20403006:	fe042623          	sw	zero,-20(s0)
2040300a:	a081                	j	2040304a <__metal_driver_riscv_clint0_init+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040300c:	fec42583          	lw	a1,-20(s0)
20403010:	fcc42503          	lw	a0,-52(s0)
20403014:	3bed                	jal	20402e0e <__metal_driver_sifive_clint0_interrupt_parents>
20403016:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040301a:	fec42583          	lw	a1,-20(s0)
2040301e:	fcc42503          	lw	a0,-52(s0)
20403022:	3525                	jal	20402e4a <__metal_driver_sifive_clint0_interrupt_lines>
20403024:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20403028:	fe042783          	lw	a5,-32(s0)
2040302c:	439c                	lw	a5,0(a5)
2040302e:	4fdc                	lw	a5,28(a5)
20403030:	fcc42683          	lw	a3,-52(s0)
20403034:	4601                	li	a2,0
20403036:	fdc42583          	lw	a1,-36(s0)
2040303a:	fe042503          	lw	a0,-32(s0)
2040303e:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20403040:	fec42783          	lw	a5,-20(s0)
20403044:	0785                	addi	a5,a5,1
20403046:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
2040304a:	fec42703          	lw	a4,-20(s0)
2040304e:	fe842783          	lw	a5,-24(s0)
20403052:	faf74de3          	blt	a4,a5,2040300c <__metal_driver_riscv_clint0_init+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20403056:	fe442783          	lw	a5,-28(s0)
2040305a:	4705                	li	a4,1
2040305c:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
2040305e:	0001                	nop
20403060:	50f2                	lw	ra,60(sp)
20403062:	5462                	lw	s0,56(sp)
20403064:	6121                	addi	sp,sp,64
20403066:	8082                	ret

20403068 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20403068:	7139                	addi	sp,sp,-64
2040306a:	de06                	sw	ra,60(sp)
2040306c:	dc22                	sw	s0,56(sp)
2040306e:	0080                	addi	s0,sp,64
20403070:	fca42623          	sw	a0,-52(s0)
20403074:	fcb42423          	sw	a1,-56(s0)
20403078:	fcc42223          	sw	a2,-60(s0)
2040307c:	fcd42023          	sw	a3,-64(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20403080:	57fd                	li	a5,-1
20403082:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20403086:	454010ef          	jal	ra,204044da <__metal_controller_interrupt_vector_mode>
2040308a:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
2040308e:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403092:	3f21                	jal	20402faa <_get_cpu_intc>
20403094:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403098:	fcc42503          	lw	a0,-52(s0)
2040309c:	33a9                	jal	20402de6 <__metal_driver_sifive_clint0_num_interrupts>
2040309e:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
204030a2:	fe042703          	lw	a4,-32(s0)
204030a6:	4785                	li	a5,1
204030a8:	00f70863          	beq	a4,a5,204030b8 <__metal_driver_riscv_clint0_register+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
204030ac:	fe042783          	lw	a5,-32(s0)
204030b0:	c781                	beqz	a5,204030b8 <__metal_driver_riscv_clint0_register+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
204030b2:	fec42783          	lw	a5,-20(s0)
204030b6:	a049                	j	20403138 <__metal_driver_riscv_clint0_register+0xd0>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
204030b8:	fe042223          	sw	zero,-28(s0)
204030bc:	a091                	j	20403100 <__metal_driver_riscv_clint0_register+0x98>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204030be:	fe442583          	lw	a1,-28(s0)
204030c2:	fcc42503          	lw	a0,-52(s0)
204030c6:	3351                	jal	20402e4a <__metal_driver_sifive_clint0_interrupt_lines>
204030c8:	fca42a23          	sw	a0,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204030cc:	fe442583          	lw	a1,-28(s0)
204030d0:	fcc42503          	lw	a0,-52(s0)
204030d4:	3b2d                	jal	20402e0e <__metal_driver_sifive_clint0_interrupt_parents>
204030d6:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
204030da:	fdc42703          	lw	a4,-36(s0)
204030de:	fe842783          	lw	a5,-24(s0)
204030e2:	00f71863          	bne	a4,a5,204030f2 <__metal_driver_riscv_clint0_register+0x8a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
204030e6:	fc842703          	lw	a4,-56(s0)
204030ea:	fd442783          	lw	a5,-44(s0)
204030ee:	02f70063          	beq	a4,a5,2040310e <__metal_driver_riscv_clint0_register+0xa6>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
204030f2:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
204030f6:	fe442783          	lw	a5,-28(s0)
204030fa:	0785                	addi	a5,a5,1
204030fc:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20403100:	fe442703          	lw	a4,-28(s0)
20403104:	fd842783          	lw	a5,-40(s0)
20403108:	faf74be3          	blt	a4,a5,204030be <__metal_driver_riscv_clint0_register+0x56>
2040310c:	a011                	j	20403110 <__metal_driver_riscv_clint0_register+0xa8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
2040310e:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20403110:	fe842783          	lw	a5,-24(s0)
20403114:	c385                	beqz	a5,20403134 <__metal_driver_riscv_clint0_register+0xcc>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20403116:	fe842783          	lw	a5,-24(s0)
2040311a:	439c                	lw	a5,0(a5)
2040311c:	4fdc                	lw	a5,28(a5)
2040311e:	fc042683          	lw	a3,-64(s0)
20403122:	fc442603          	lw	a2,-60(s0)
20403126:	fc842583          	lw	a1,-56(s0)
2040312a:	fe842503          	lw	a0,-24(s0)
2040312e:	9782                	jalr	a5
20403130:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20403134:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:115
}
20403138:	853e                	mv	a0,a5
2040313a:	50f2                	lw	ra,60(sp)
2040313c:	5462                	lw	s0,56(sp)
2040313e:	6121                	addi	sp,sp,64
20403140:	8082                	ret

20403142 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20403142:	7179                	addi	sp,sp,-48
20403144:	d622                	sw	s0,44(sp)
20403146:	1800                	addi	s0,sp,48
20403148:	fca42e23          	sw	a0,-36(s0)
2040314c:	fcb42c23          	sw	a1,-40(s0)
20403150:	fcc42a23          	sw	a2,-44(s0)
20403154:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20403158:	57fd                	li	a5,-1
2040315a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
2040315e:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:123
}
20403162:	853e                	mv	a0,a5
20403164:	5432                	lw	s0,44(sp)
20403166:	6145                	addi	sp,sp,48
20403168:	8082                	ret

2040316a <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2040316a:	1101                	addi	sp,sp,-32
2040316c:	ce06                	sw	ra,28(sp)
2040316e:	cc22                	sw	s0,24(sp)
20403170:	1000                	addi	s0,sp,32
20403172:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20403176:	364010ef          	jal	ra,204044da <__metal_controller_interrupt_vector_mode>
2040317a:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:128
}
2040317c:	853e                	mv	a0,a5
2040317e:	40f2                	lw	ra,28(sp)
20403180:	4462                	lw	s0,24(sp)
20403182:	6105                	addi	sp,sp,32
20403184:	8082                	ret

20403186 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20403186:	7179                	addi	sp,sp,-48
20403188:	d606                	sw	ra,44(sp)
2040318a:	d422                	sw	s0,40(sp)
2040318c:	1800                	addi	s0,sp,48
2040318e:	fca42e23          	sw	a0,-36(s0)
20403192:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20403196:	57fd                	li	a5,-1
20403198:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
2040319c:	3539                	jal	20402faa <_get_cpu_intc>
2040319e:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
204031a2:	fe842783          	lw	a5,-24(s0)
204031a6:	c395                	beqz	a5,204031ca <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
204031a8:	fd842703          	lw	a4,-40(s0)
204031ac:	4785                	li	a5,1
204031ae:	02e7e063          	bltu	a5,a4,204031ce <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
204031b2:	fe842783          	lw	a5,-24(s0)
204031b6:	439c                	lw	a5,0(a5)
204031b8:	43dc                	lw	a5,4(a5)
204031ba:	fd842583          	lw	a1,-40(s0)
204031be:	fe842503          	lw	a0,-24(s0)
204031c2:	9782                	jalr	a5
204031c4:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
204031c8:	a021                	j	204031d0 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
204031ca:	0001                	nop
204031cc:	a011                	j	204031d0 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
204031ce:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
204031d0:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:148
}
204031d4:	853e                	mv	a0,a5
204031d6:	50b2                	lw	ra,44(sp)
204031d8:	5422                	lw	s0,40(sp)
204031da:	6145                	addi	sp,sp,48
204031dc:	8082                	ret

204031de <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
204031de:	7139                	addi	sp,sp,-64
204031e0:	de06                	sw	ra,60(sp)
204031e2:	dc22                	sw	s0,56(sp)
204031e4:	0080                	addi	s0,sp,64
204031e6:	fca42623          	sw	a0,-52(s0)
204031ea:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
204031ee:	57fd                	li	a5,-1
204031f0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
204031f4:	fc842783          	lw	a5,-56(s0)
204031f8:	c7c9                	beqz	a5,20403282 <__metal_driver_riscv_clint0_enable+0xa4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
204031fa:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204031fe:	3375                	jal	20402faa <_get_cpu_intc>
20403200:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20403204:	fcc42503          	lw	a0,-52(s0)
20403208:	3ef9                	jal	20402de6 <__metal_driver_sifive_clint0_num_interrupts>
2040320a:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
2040320e:	fe042223          	sw	zero,-28(s0)
20403212:	a091                	j	20403256 <__metal_driver_riscv_clint0_enable+0x78>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403214:	fe442583          	lw	a1,-28(s0)
20403218:	fcc42503          	lw	a0,-52(s0)
2040321c:	313d                	jal	20402e4a <__metal_driver_sifive_clint0_interrupt_lines>
2040321e:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403222:	fe442583          	lw	a1,-28(s0)
20403226:	fcc42503          	lw	a0,-52(s0)
2040322a:	36d5                	jal	20402e0e <__metal_driver_sifive_clint0_interrupt_parents>
2040322c:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20403230:	fe042703          	lw	a4,-32(s0)
20403234:	fe842783          	lw	a5,-24(s0)
20403238:	00f71863          	bne	a4,a5,20403248 <__metal_driver_riscv_clint0_enable+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
2040323c:	fc842703          	lw	a4,-56(s0)
20403240:	fd842783          	lw	a5,-40(s0)
20403244:	02f70063          	beq	a4,a5,20403264 <__metal_driver_riscv_clint0_enable+0x86>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20403248:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
2040324c:	fe442783          	lw	a5,-28(s0)
20403250:	0785                	addi	a5,a5,1
20403252:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20403256:	fe442703          	lw	a4,-28(s0)
2040325a:	fdc42783          	lw	a5,-36(s0)
2040325e:	faf74be3          	blt	a4,a5,20403214 <__metal_driver_riscv_clint0_enable+0x36>
20403262:	a011                	j	20403266 <__metal_driver_riscv_clint0_enable+0x88>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20403264:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20403266:	fe842783          	lw	a5,-24(s0)
2040326a:	cf81                	beqz	a5,20403282 <__metal_driver_riscv_clint0_enable+0xa4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
2040326c:	fe842783          	lw	a5,-24(s0)
20403270:	439c                	lw	a5,0(a5)
20403272:	53dc                	lw	a5,36(a5)
20403274:	fc842583          	lw	a1,-56(s0)
20403278:	fe842503          	lw	a0,-24(s0)
2040327c:	9782                	jalr	a5
2040327e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20403282:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:178
}
20403286:	853e                	mv	a0,a5
20403288:	50f2                	lw	ra,60(sp)
2040328a:	5462                	lw	s0,56(sp)
2040328c:	6121                	addi	sp,sp,64
2040328e:	8082                	ret

20403290 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20403290:	7139                	addi	sp,sp,-64
20403292:	de06                	sw	ra,60(sp)
20403294:	dc22                	sw	s0,56(sp)
20403296:	0080                	addi	s0,sp,64
20403298:	fca42623          	sw	a0,-52(s0)
2040329c:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
204032a0:	57fd                	li	a5,-1
204032a2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
204032a6:	fc842783          	lw	a5,-56(s0)
204032aa:	cbc1                	beqz	a5,2040333a <__metal_driver_riscv_clint0_disable+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
204032ac:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204032b0:	39ed                	jal	20402faa <_get_cpu_intc>
204032b2:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
204032b6:	fcc42503          	lw	a0,-52(s0)
204032ba:	b2dff0ef          	jal	ra,20402de6 <__metal_driver_sifive_clint0_num_interrupts>
204032be:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
204032c2:	fe042223          	sw	zero,-28(s0)
204032c6:	a0a1                	j	2040330e <__metal_driver_riscv_clint0_disable+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204032c8:	fe442583          	lw	a1,-28(s0)
204032cc:	fcc42503          	lw	a0,-52(s0)
204032d0:	b7bff0ef          	jal	ra,20402e4a <__metal_driver_sifive_clint0_interrupt_lines>
204032d4:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204032d8:	fe442583          	lw	a1,-28(s0)
204032dc:	fcc42503          	lw	a0,-52(s0)
204032e0:	b2fff0ef          	jal	ra,20402e0e <__metal_driver_sifive_clint0_interrupt_parents>
204032e4:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
204032e8:	fe042703          	lw	a4,-32(s0)
204032ec:	fe842783          	lw	a5,-24(s0)
204032f0:	00f71863          	bne	a4,a5,20403300 <__metal_driver_riscv_clint0_disable+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
204032f4:	fc842703          	lw	a4,-56(s0)
204032f8:	fd842783          	lw	a5,-40(s0)
204032fc:	02f70063          	beq	a4,a5,2040331c <__metal_driver_riscv_clint0_disable+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20403300:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403304:	fe442783          	lw	a5,-28(s0)
20403308:	0785                	addi	a5,a5,1
2040330a:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
2040330e:	fe442703          	lw	a4,-28(s0)
20403312:	fdc42783          	lw	a5,-36(s0)
20403316:	faf749e3          	blt	a4,a5,204032c8 <__metal_driver_riscv_clint0_disable+0x38>
2040331a:	a011                	j	2040331e <__metal_driver_riscv_clint0_disable+0x8e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
2040331c:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
2040331e:	fe842783          	lw	a5,-24(s0)
20403322:	cf81                	beqz	a5,2040333a <__metal_driver_riscv_clint0_disable+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20403324:	fe842783          	lw	a5,-24(s0)
20403328:	439c                	lw	a5,0(a5)
2040332a:	579c                	lw	a5,40(a5)
2040332c:	fc842583          	lw	a1,-56(s0)
20403330:	fe842503          	lw	a0,-24(s0)
20403334:	9782                	jalr	a5
20403336:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
2040333a:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:208
}
2040333e:	853e                	mv	a0,a5
20403340:	50f2                	lw	ra,60(sp)
20403342:	5462                	lw	s0,56(sp)
20403344:	6121                	addi	sp,sp,64
20403346:	8082                	ret

20403348 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20403348:	7179                	addi	sp,sp,-48
2040334a:	d606                	sw	ra,44(sp)
2040334c:	d422                	sw	s0,40(sp)
2040334e:	1800                	addi	s0,sp,48
20403350:	fca42e23          	sw	a0,-36(s0)
20403354:	fcb42c23          	sw	a1,-40(s0)
20403358:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
2040335c:	57fd                	li	a5,-1
2040335e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20403362:	fdc42783          	lw	a5,-36(s0)
20403366:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
2040336a:	fdc42503          	lw	a0,-36(s0)
2040336e:	a4fff0ef          	jal	ra,20402dbc <__metal_driver_sifive_clint0_control_base>
20403372:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20403376:	fd842703          	lw	a4,-40(s0)
2040337a:	4791                	li	a5,4
2040337c:	0cf70163          	beq	a4,a5,2040343e <__metal_driver_riscv_clint0_command_request+0xf6>
20403380:	fd842703          	lw	a4,-40(s0)
20403384:	4791                	li	a5,4
20403386:	0ee7c163          	blt	a5,a4,20403468 <__metal_driver_riscv_clint0_command_request+0x120>
2040338a:	fd842703          	lw	a4,-40(s0)
2040338e:	478d                	li	a5,3
20403390:	06f70663          	beq	a4,a5,204033fc <__metal_driver_riscv_clint0_command_request+0xb4>
20403394:	fd842703          	lw	a4,-40(s0)
20403398:	478d                	li	a5,3
2040339a:	0ce7c763          	blt	a5,a4,20403468 <__metal_driver_riscv_clint0_command_request+0x120>
2040339e:	fd842703          	lw	a4,-40(s0)
204033a2:	4785                	li	a5,1
204033a4:	00f70863          	beq	a4,a5,204033b4 <__metal_driver_riscv_clint0_command_request+0x6c>
204033a8:	fd842703          	lw	a4,-40(s0)
204033ac:	4789                	li	a5,2
204033ae:	02f70363          	beq	a4,a5,204033d4 <__metal_driver_riscv_clint0_command_request+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
204033b2:	a85d                	j	20403468 <__metal_driver_riscv_clint0_command_request+0x120>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
204033b4:	fd442783          	lw	a5,-44(s0)
204033b8:	cbd5                	beqz	a5,2040346c <__metal_driver_riscv_clint0_command_request+0x124>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
204033ba:	fe842503          	lw	a0,-24(s0)
204033be:	abdff0ef          	jal	ra,20402e7a <__metal_clint0_mtime_get>
204033c2:	872a                	mv	a4,a0
204033c4:	87ae                	mv	a5,a1
204033c6:	fd442683          	lw	a3,-44(s0)
204033ca:	c298                	sw	a4,0(a3)
204033cc:	c2dc                	sw	a5,4(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
204033ce:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
204033d2:	a869                	j	2040346c <__metal_driver_riscv_clint0_command_request+0x124>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
204033d4:	fd442783          	lw	a5,-44(s0)
204033d8:	cfc1                	beqz	a5,20403470 <__metal_driver_riscv_clint0_command_request+0x128>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
204033da:	fd442783          	lw	a5,-44(s0)
204033de:	439c                	lw	a5,0(a5)
204033e0:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
204033e4:	fe042783          	lw	a5,-32(s0)
204033e8:	078a                	slli	a5,a5,0x2
204033ea:	873e                	mv	a4,a5
204033ec:	fe442783          	lw	a5,-28(s0)
204033f0:	97ba                	add	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
204033f2:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
204033f6:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204033fa:	a89d                	j	20403470 <__metal_driver_riscv_clint0_command_request+0x128>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
204033fc:	fd442783          	lw	a5,-44(s0)
20403400:	cbb5                	beqz	a5,20403474 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20403402:	fd442783          	lw	a5,-44(s0)
20403406:	439c                	lw	a5,0(a5)
20403408:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
2040340c:	fe042783          	lw	a5,-32(s0)
20403410:	078a                	slli	a5,a5,0x2
20403412:	873e                	mv	a4,a5
20403414:	fe442783          	lw	a5,-28(s0)
20403418:	97ba                	add	a5,a5,a4
2040341a:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
2040341c:	4785                	li	a5,1
2040341e:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20403420:	0480000f          	fence	o,i
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20403424:	fe042783          	lw	a5,-32(s0)
20403428:	078a                	slli	a5,a5,0x2
2040342a:	873e                	mv	a4,a5
2040342c:	fe442783          	lw	a5,-28(s0)
20403430:	97ba                	add	a5,a5,a4
20403432:	439c                	lw	a5,0(a5)
20403434:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20403438:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2040343c:	a825                	j	20403474 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
2040343e:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20403442:	fd442783          	lw	a5,-44(s0)
20403446:	cb8d                	beqz	a5,20403478 <__metal_driver_riscv_clint0_command_request+0x130>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20403448:	fd442783          	lw	a5,-44(s0)
2040344c:	439c                	lw	a5,0(a5)
2040344e:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20403452:	fe042783          	lw	a5,-32(s0)
20403456:	078a                	slli	a5,a5,0x2
20403458:	873e                	mv	a4,a5
2040345a:	fe442783          	lw	a5,-28(s0)
2040345e:	97ba                	add	a5,a5,a4
20403460:	439c                	lw	a5,0(a5)
20403462:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403466:	a809                	j	20403478 <__metal_driver_riscv_clint0_command_request+0x130>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20403468:	0001                	nop
2040346a:	a801                	j	2040347a <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2040346c:	0001                	nop
2040346e:	a031                	j	2040347a <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403470:	0001                	nop
20403472:	a021                	j	2040347a <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403474:	0001                	nop
20403476:	a011                	j	2040347a <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403478:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
2040347a:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:267
}
2040347e:	853e                	mv	a0,a5
20403480:	50b2                	lw	ra,44(sp)
20403482:	5422                	lw	s0,40(sp)
20403484:	6145                	addi	sp,sp,48
20403486:	8082                	ret

20403488 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20403488:	7179                	addi	sp,sp,-48
2040348a:	d606                	sw	ra,44(sp)
2040348c:	d422                	sw	s0,40(sp)
2040348e:	1800                	addi	s0,sp,48
20403490:	fca42e23          	sw	a0,-36(s0)
20403494:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20403498:	607030ef          	jal	ra,2040729e <metal_cpu_get_current_hartid>
2040349c:	87aa                	mv	a5,a0
2040349e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
204034a2:	fec40793          	addi	a5,s0,-20
204034a6:	863e                	mv	a2,a5
204034a8:	4589                	li	a1,2
204034aa:	fdc42503          	lw	a0,-36(s0)
204034ae:	3d69                	jal	20403348 <__metal_driver_riscv_clint0_command_request>
204034b0:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
204034b2:	853e                	mv	a0,a5
204034b4:	50b2                	lw	ra,44(sp)
204034b6:	5422                	lw	s0,40(sp)
204034b8:	6145                	addi	sp,sp,48
204034ba:	8082                	ret

204034bc <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
204034bc:	7179                	addi	sp,sp,-48
204034be:	d606                	sw	ra,44(sp)
204034c0:	d422                	sw	s0,40(sp)
204034c2:	1800                	addi	s0,sp,48
204034c4:	fca42e23          	sw	a0,-36(s0)
204034c8:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
204034cc:	5d3030ef          	jal	ra,2040729e <metal_cpu_get_current_hartid>
204034d0:	87aa                	mv	a5,a0
204034d2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
204034d6:	fec40793          	addi	a5,s0,-20
204034da:	863e                	mv	a2,a5
204034dc:	458d                	li	a1,3
204034de:	fdc42503          	lw	a0,-36(s0)
204034e2:	359d                	jal	20403348 <__metal_driver_riscv_clint0_command_request>
204034e4:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
204034e6:	853e                	mv	a0,a5
204034e8:	50b2                	lw	ra,44(sp)
204034ea:	5422                	lw	s0,40(sp)
204034ec:	6145                	addi	sp,sp,48
204034ee:	8082                	ret

204034f0 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
204034f0:	1101                	addi	sp,sp,-32
204034f2:	ce22                	sw	s0,28(sp)
204034f4:	1000                	addi	s0,sp,32
204034f6:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204034fa:	fec42703          	lw	a4,-20(s0)
204034fe:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403502:	00f71463          	bne	a4,a5,2040350a <__metal_driver_cpu_hartid+0x1a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:263
		return 0;
20403506:	4781                	li	a5,0
20403508:	a011                	j	2040350c <__metal_driver_cpu_hartid+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:266
	}
	else {
		return -1;
2040350a:	57fd                	li	a5,-1
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:268
	}
}
2040350c:	853e                	mv	a0,a5
2040350e:	4472                	lw	s0,28(sp)
20403510:	6105                	addi	sp,sp,32
20403512:	8082                	ret

20403514 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20403514:	1101                	addi	sp,sp,-32
20403516:	ce22                	sw	s0,28(sp)
20403518:	1000                	addi	s0,sp,32
2040351a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040351e:	fec42703          	lw	a4,-20(s0)
20403522:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403526:	00f71763          	bne	a4,a5,20403534 <__metal_driver_cpu_timebase+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:273
		return 1000000;
2040352a:	000f47b7          	lui	a5,0xf4
2040352e:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20403532:	a011                	j	20403536 <__metal_driver_cpu_timebase+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:276
	}
	else {
		return 0;
20403534:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:278
	}
}
20403536:	853e                	mv	a0,a5
20403538:	4472                	lw	s0,28(sp)
2040353a:	6105                	addi	sp,sp,32
2040353c:	8082                	ret

2040353e <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
2040353e:	1101                	addi	sp,sp,-32
20403540:	ce22                	sw	s0,28(sp)
20403542:	1000                	addi	s0,sp,32
20403544:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403548:	fec42703          	lw	a4,-20(s0)
2040354c:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403550:	00f71763          	bne	a4,a5,2040355e <__metal_driver_cpu_interrupt_controller+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20403554:	800007b7          	lui	a5,0x80000
20403558:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe5b8>
2040355c:	a011                	j	20403560 <__metal_driver_cpu_interrupt_controller+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:286
	}
	else {
		return NULL;
2040355e:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:288
	}
}
20403560:	853e                	mv	a0,a5
20403562:	4472                	lw	s0,28(sp)
20403564:	6105                	addi	sp,sp,32
20403566:	8082                	ret

20403568 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20403568:	1101                	addi	sp,sp,-32
2040356a:	ce22                	sw	s0,28(sp)
2040356c:	1000                	addi	s0,sp,32
2040356e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403572:	fec42703          	lw	a4,-20(s0)
20403576:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040357a:	00f71463          	bne	a4,a5,20403582 <__metal_driver_cpu_buserror+0x1a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:303
		return NULL;
2040357e:	4781                	li	a5,0
20403580:	a011                	j	20403584 <__metal_driver_cpu_buserror+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:306
	}
	else {
		return NULL;
20403582:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:308
	}
}
20403584:	853e                	mv	a0,a5
20403586:	4472                	lw	s0,28(sp)
20403588:	6105                	addi	sp,sp,32
2040358a:	8082                	ret

2040358c <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
2040358c:	1101                	addi	sp,sp,-32
2040358e:	ce22                	sw	s0,28(sp)
20403590:	1000                	addi	s0,sp,32
20403592:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20403596:	fec42783          	lw	a5,-20(s0)
2040359a:	00f04c63          	bgtz	a5,204035b2 <__metal_driver_cpu_get+0x26>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
2040359e:	800007b7          	lui	a5,0x80000
204035a2:	fec42703          	lw	a4,-20(s0)
204035a6:	070a                	slli	a4,a4,0x2
204035a8:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
204035ac:	97ba                	add	a5,a5,a4
204035ae:	439c                	lw	a5,0(a5)
204035b0:	a011                	j	204035b4 <__metal_driver_cpu_get+0x28>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
204035b2:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:30
}
204035b4:	853e                	mv	a0,a5
204035b6:	4472                	lw	s0,28(sp)
204035b8:	6105                	addi	sp,sp,32
204035ba:	8082                	ret

204035bc <__metal_myhart_id>:
__metal_myhart_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
204035bc:	1101                	addi	sp,sp,-32
204035be:	ce22                	sw	s0,28(sp)
204035c0:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
204035c2:	f14027f3          	csrr	a5,mhartid
204035c6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
204035ca:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:36
}
204035ce:	853e                	mv	a0,a5
204035d0:	4472                	lw	s0,28(sp)
204035d2:	6105                	addi	sp,sp,32
204035d4:	8082                	ret

204035d6 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
204035d6:	1101                	addi	sp,sp,-32
204035d8:	ce22                	sw	s0,28(sp)
204035da:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
204035dc:	47a1                	li	a5,8
204035de:	3007a7f3          	csrrs	a5,mstatus,a5
204035e2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204035e6:	0001                	nop
204035e8:	4472                	lw	s0,28(sp)
204035ea:	6105                	addi	sp,sp,32
204035ec:	8082                	ret

204035ee <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
204035ee:	1101                	addi	sp,sp,-32
204035f0:	ce22                	sw	s0,28(sp)
204035f2:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
204035f4:	47a1                	li	a5,8
204035f6:	3007b7f3          	csrrc	a5,mstatus,a5
204035fa:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204035fe:	0001                	nop
20403600:	4472                	lw	s0,28(sp)
20403602:	6105                	addi	sp,sp,32
20403604:	8082                	ret

20403606 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20403606:	1101                	addi	sp,sp,-32
20403608:	ce22                	sw	s0,28(sp)
2040360a:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2040360c:	47a1                	li	a5,8
2040360e:	3047a7f3          	csrrs	a5,mie,a5
20403612:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403616:	0001                	nop
20403618:	4472                	lw	s0,28(sp)
2040361a:	6105                	addi	sp,sp,32
2040361c:	8082                	ret

2040361e <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
2040361e:	1101                	addi	sp,sp,-32
20403620:	ce22                	sw	s0,28(sp)
20403622:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403624:	47a1                	li	a5,8
20403626:	3047b7f3          	csrrc	a5,mie,a5
2040362a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2040362e:	0001                	nop
20403630:	4472                	lw	s0,28(sp)
20403632:	6105                	addi	sp,sp,32
20403634:	8082                	ret

20403636 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20403636:	1101                	addi	sp,sp,-32
20403638:	ce22                	sw	s0,28(sp)
2040363a:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2040363c:	08000793          	li	a5,128
20403640:	3047a7f3          	csrrs	a5,mie,a5
20403644:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403648:	0001                	nop
2040364a:	4472                	lw	s0,28(sp)
2040364c:	6105                	addi	sp,sp,32
2040364e:	8082                	ret

20403650 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20403650:	1101                	addi	sp,sp,-32
20403652:	ce22                	sw	s0,28(sp)
20403654:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403656:	08000793          	li	a5,128
2040365a:	3047b7f3          	csrrc	a5,mie,a5
2040365e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403662:	0001                	nop
20403664:	4472                	lw	s0,28(sp)
20403666:	6105                	addi	sp,sp,32
20403668:	8082                	ret

2040366a <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
2040366a:	1101                	addi	sp,sp,-32
2040366c:	ce22                	sw	s0,28(sp)
2040366e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403670:	6785                	lui	a5,0x1
20403672:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403676:	3047a7f3          	csrrs	a5,mie,a5
2040367a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2040367e:	0001                	nop
20403680:	4472                	lw	s0,28(sp)
20403682:	6105                	addi	sp,sp,32
20403684:	8082                	ret

20403686 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20403686:	1101                	addi	sp,sp,-32
20403688:	ce22                	sw	s0,28(sp)
2040368a:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
2040368c:	6785                	lui	a5,0x1
2040368e:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403692:	3047b7f3          	csrrc	a5,mie,a5
20403696:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
2040369a:	0001                	nop
2040369c:	4472                	lw	s0,28(sp)
2040369e:	6105                	addi	sp,sp,32
204036a0:	8082                	ret

204036a2 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
204036a2:	7179                	addi	sp,sp,-48
204036a4:	d622                	sw	s0,44(sp)
204036a6:	1800                	addi	s0,sp,48
204036a8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
204036ac:	fdc42783          	lw	a5,-36(s0)
204036b0:	4705                	li	a4,1
204036b2:	00f717b3          	sll	a5,a4,a5
204036b6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
204036ba:	fec42783          	lw	a5,-20(s0)
204036be:	3047a7f3          	csrrs	a5,mie,a5
204036c2:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:105
}
204036c6:	0001                	nop
204036c8:	5432                	lw	s0,44(sp)
204036ca:	6145                	addi	sp,sp,48
204036cc:	8082                	ret

204036ce <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
204036ce:	7179                	addi	sp,sp,-48
204036d0:	d622                	sw	s0,44(sp)
204036d2:	1800                	addi	s0,sp,48
204036d4:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
204036d8:	fdc42783          	lw	a5,-36(s0)
204036dc:	4705                	li	a4,1
204036de:	00f717b3          	sll	a5,a4,a5
204036e2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
204036e6:	fec42783          	lw	a5,-20(s0)
204036ea:	3047b7f3          	csrrc	a5,mie,a5
204036ee:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:111
}
204036f2:	0001                	nop
204036f4:	5432                	lw	s0,44(sp)
204036f6:	6145                	addi	sp,sp,48
204036f8:	8082                	ret

204036fa <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
204036fa:	1101                	addi	sp,sp,-32
204036fc:	ce06                	sw	ra,28(sp)
204036fe:	cc22                	sw	s0,24(sp)
20403700:	1000                	addi	s0,sp,32
20403702:	fea42623          	sw	a0,-20(s0)
20403706:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
2040370a:	06400513          	li	a0,100
2040370e:	3cd030ef          	jal	ra,204072da <metal_shutdown>

20403712 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20403712:	1101                	addi	sp,sp,-32
20403714:	ce06                	sw	ra,28(sp)
20403716:	cc22                	sw	s0,24(sp)
20403718:	1000                	addi	s0,sp,32
2040371a:	fea42623          	sw	a0,-20(s0)
2040371e:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20403722:	0c800513          	li	a0,200
20403726:	3b5030ef          	jal	ra,204072da <metal_shutdown>

2040372a <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
2040372a:	715d                	addi	sp,sp,-80
2040372c:	c686                	sw	ra,76(sp)
2040372e:	c496                	sw	t0,72(sp)
20403730:	c29a                	sw	t1,68(sp)
20403732:	c09e                	sw	t2,64(sp)
20403734:	de22                	sw	s0,60(sp)
20403736:	dc2a                	sw	a0,56(sp)
20403738:	da2e                	sw	a1,52(sp)
2040373a:	d832                	sw	a2,48(sp)
2040373c:	d636                	sw	a3,44(sp)
2040373e:	d43a                	sw	a4,40(sp)
20403740:	d23e                	sw	a5,36(sp)
20403742:	d042                	sw	a6,32(sp)
20403744:	ce46                	sw	a7,28(sp)
20403746:	cc72                	sw	t3,24(sp)
20403748:	ca76                	sw	t4,20(sp)
2040374a:	c87a                	sw	t5,16(sp)
2040374c:	c67e                	sw	t6,12(sp)
2040374e:	0880                	addi	s0,sp,80
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20403750:	12c00513          	li	a0,300
20403754:	387030ef          	jal	ra,204072da <metal_shutdown>

20403758 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20403758:	711d                	addi	sp,sp,-96
2040375a:	ce86                	sw	ra,92(sp)
2040375c:	cc96                	sw	t0,88(sp)
2040375e:	ca9a                	sw	t1,84(sp)
20403760:	c89e                	sw	t2,80(sp)
20403762:	c6a2                	sw	s0,76(sp)
20403764:	c4aa                	sw	a0,72(sp)
20403766:	c2ae                	sw	a1,68(sp)
20403768:	c0b2                	sw	a2,64(sp)
2040376a:	de36                	sw	a3,60(sp)
2040376c:	dc3a                	sw	a4,56(sp)
2040376e:	da3e                	sw	a5,52(sp)
20403770:	d842                	sw	a6,48(sp)
20403772:	d646                	sw	a7,44(sp)
20403774:	d472                	sw	t3,40(sp)
20403776:	d276                	sw	t4,36(sp)
20403778:	d07a                	sw	t5,32(sp)
2040377a:	ce7e                	sw	t6,28(sp)
2040377c:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
2040377e:	3d3d                	jal	204035bc <__metal_myhart_id>
20403780:	872a                	mv	a4,a0
20403782:	800007b7          	lui	a5,0x80000
20403786:	070a                	slli	a4,a4,0x2
20403788:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
2040378c:	97ba                	add	a5,a5,a4
2040378e:	439c                	lw	a5,0(a5)
20403790:	faf42623          	sw	a5,-84(s0)
20403794:	fac42783          	lw	a5,-84(s0)
20403798:	c785                	beqz	a5,204037c0 <metal_software_interrupt_vector_handler+0x68>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
2040379a:	fac42503          	lw	a0,-84(s0)
2040379e:	3345                	jal	2040353e <__metal_driver_cpu_interrupt_controller>
204037a0:	faa42423          	sw	a0,-88(s0)
204037a4:	fa842783          	lw	a5,-88(s0)
204037a8:	0e07a783          	lw	a5,224(a5)
204037ac:	faf42223          	sw	a5,-92(s0)
204037b0:	fa842783          	lw	a5,-88(s0)
204037b4:	0d87a783          	lw	a5,216(a5)
204037b8:	fa442583          	lw	a1,-92(s0)
204037bc:	450d                	li	a0,3
204037be:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:130
}
204037c0:	0001                	nop
204037c2:	40f6                	lw	ra,92(sp)
204037c4:	42e6                	lw	t0,88(sp)
204037c6:	4356                	lw	t1,84(sp)
204037c8:	43c6                	lw	t2,80(sp)
204037ca:	4436                	lw	s0,76(sp)
204037cc:	4526                	lw	a0,72(sp)
204037ce:	4596                	lw	a1,68(sp)
204037d0:	4606                	lw	a2,64(sp)
204037d2:	56f2                	lw	a3,60(sp)
204037d4:	5762                	lw	a4,56(sp)
204037d6:	57d2                	lw	a5,52(sp)
204037d8:	5842                	lw	a6,48(sp)
204037da:	58b2                	lw	a7,44(sp)
204037dc:	5e22                	lw	t3,40(sp)
204037de:	5e92                	lw	t4,36(sp)
204037e0:	5f02                	lw	t5,32(sp)
204037e2:	4ff2                	lw	t6,28(sp)
204037e4:	6125                	addi	sp,sp,96
204037e6:	30200073          	mret

204037ea <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
204037ea:	7179                	addi	sp,sp,-48
204037ec:	d606                	sw	ra,44(sp)
204037ee:	d422                	sw	s0,40(sp)
204037f0:	1800                	addi	s0,sp,48
204037f2:	fca42e23          	sw	a0,-36(s0)
204037f6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204037fa:	33c9                	jal	204035bc <__metal_myhart_id>
204037fc:	872a                	mv	a4,a0
204037fe:	800007b7          	lui	a5,0x80000
20403802:	070a                	slli	a4,a4,0x2
20403804:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403808:	97ba                	add	a5,a5,a4
2040380a:	439c                	lw	a5,0(a5)
2040380c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403810:	342027f3          	csrr	a5,mcause
20403814:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20403818:	fec42783          	lw	a5,-20(s0)
2040381c:	c795                	beqz	a5,20403848 <__metal_default_sw_handler+0x5e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040381e:	fec42503          	lw	a0,-20(s0)
20403822:	3b31                	jal	2040353e <__metal_driver_cpu_interrupt_controller>
20403824:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20403828:	fe842783          	lw	a5,-24(s0)
2040382c:	3ff7f793          	andi	a5,a5,1023
20403830:	fe442703          	lw	a4,-28(s0)
20403834:	0e878793          	addi	a5,a5,232
20403838:	078a                	slli	a5,a5,0x2
2040383a:	97ba                	add	a5,a5,a4
2040383c:	439c                	lw	a5,0(a5)
2040383e:	fdc42583          	lw	a1,-36(s0)
20403842:	fec42503          	lw	a0,-20(s0)
20403846:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20403848:	0001                	nop
2040384a:	50b2                	lw	ra,44(sp)
2040384c:	5422                	lw	s0,40(sp)
2040384e:	6145                	addi	sp,sp,48
20403850:	8082                	ret

20403852 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20403852:	711d                	addi	sp,sp,-96
20403854:	ce86                	sw	ra,92(sp)
20403856:	cc96                	sw	t0,88(sp)
20403858:	ca9a                	sw	t1,84(sp)
2040385a:	c89e                	sw	t2,80(sp)
2040385c:	c6a2                	sw	s0,76(sp)
2040385e:	c4aa                	sw	a0,72(sp)
20403860:	c2ae                	sw	a1,68(sp)
20403862:	c0b2                	sw	a2,64(sp)
20403864:	de36                	sw	a3,60(sp)
20403866:	dc3a                	sw	a4,56(sp)
20403868:	da3e                	sw	a5,52(sp)
2040386a:	d842                	sw	a6,48(sp)
2040386c:	d646                	sw	a7,44(sp)
2040386e:	d472                	sw	t3,40(sp)
20403870:	d276                	sw	t4,36(sp)
20403872:	d07a                	sw	t5,32(sp)
20403874:	ce7e                	sw	t6,28(sp)
20403876:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20403878:	3391                	jal	204035bc <__metal_myhart_id>
2040387a:	872a                	mv	a4,a0
2040387c:	800007b7          	lui	a5,0x80000
20403880:	070a                	slli	a4,a4,0x2
20403882:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403886:	97ba                	add	a5,a5,a4
20403888:	439c                	lw	a5,0(a5)
2040388a:	faf42623          	sw	a5,-84(s0)
2040388e:	fac42783          	lw	a5,-84(s0)
20403892:	c785                	beqz	a5,204038ba <metal_timer_interrupt_vector_handler+0x68>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20403894:	fac42503          	lw	a0,-84(s0)
20403898:	315d                	jal	2040353e <__metal_driver_cpu_interrupt_controller>
2040389a:	faa42423          	sw	a0,-88(s0)
2040389e:	fa842783          	lw	a5,-88(s0)
204038a2:	1407a783          	lw	a5,320(a5)
204038a6:	faf42223          	sw	a5,-92(s0)
204038aa:	fa842783          	lw	a5,-88(s0)
204038ae:	1387a783          	lw	a5,312(a5)
204038b2:	fa442583          	lw	a1,-92(s0)
204038b6:	451d                	li	a0,7
204038b8:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:150
}
204038ba:	0001                	nop
204038bc:	40f6                	lw	ra,92(sp)
204038be:	42e6                	lw	t0,88(sp)
204038c0:	4356                	lw	t1,84(sp)
204038c2:	43c6                	lw	t2,80(sp)
204038c4:	4436                	lw	s0,76(sp)
204038c6:	4526                	lw	a0,72(sp)
204038c8:	4596                	lw	a1,68(sp)
204038ca:	4606                	lw	a2,64(sp)
204038cc:	56f2                	lw	a3,60(sp)
204038ce:	5762                	lw	a4,56(sp)
204038d0:	57d2                	lw	a5,52(sp)
204038d2:	5842                	lw	a6,48(sp)
204038d4:	58b2                	lw	a7,44(sp)
204038d6:	5e22                	lw	t3,40(sp)
204038d8:	5e92                	lw	t4,36(sp)
204038da:	5f02                	lw	t5,32(sp)
204038dc:	4ff2                	lw	t6,28(sp)
204038de:	6125                	addi	sp,sp,96
204038e0:	30200073          	mret

204038e4 <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
204038e4:	1101                	addi	sp,sp,-32
204038e6:	ce22                	sw	s0,28(sp)
204038e8:	1000                	addi	s0,sp,32
204038ea:	fea42623          	sw	a0,-20(s0)
204038ee:	feb42423          	sw	a1,-24(s0)
204038f2:	0001                	nop
204038f4:	4472                	lw	s0,28(sp)
204038f6:	6105                	addi	sp,sp,32
204038f8:	8082                	ret

204038fa <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
204038fa:	7179                	addi	sp,sp,-48
204038fc:	d606                	sw	ra,44(sp)
204038fe:	d422                	sw	s0,40(sp)
20403900:	1800                	addi	s0,sp,48
20403902:	fca42e23          	sw	a0,-36(s0)
20403906:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
2040390a:	394d                	jal	204035bc <__metal_myhart_id>
2040390c:	87aa                	mv	a5,a0
2040390e:	853e                	mv	a0,a5
20403910:	39b5                	jal	2040358c <__metal_driver_cpu_get>
20403912:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403916:	fec42503          	lw	a0,-20(s0)
2040391a:	28c010ef          	jal	ra,20404ba6 <__metal_driver_cpu_mtime_get>
2040391e:	fea42023          	sw	a0,-32(s0)
20403922:	feb42223          	sw	a1,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403926:	fe042703          	lw	a4,-32(s0)
2040392a:	fe442783          	lw	a5,-28(s0)
2040392e:	4529                	li	a0,10
20403930:	4581                	li	a1,0
20403932:	00a70633          	add	a2,a4,a0
20403936:	8832                	mv	a6,a2
20403938:	00e83833          	sltu	a6,a6,a4
2040393c:	00b786b3          	add	a3,a5,a1
20403940:	00d807b3          	add	a5,a6,a3
20403944:	86be                	mv	a3,a5
20403946:	8732                	mv	a4,a2
20403948:	87b6                	mv	a5,a3
2040394a:	85ba                	mv	a1,a4
2040394c:	863e                	mv	a2,a5
2040394e:	fec42503          	lw	a0,-20(s0)
20403952:	2ba010ef          	jal	ra,20404c0c <__metal_driver_cpu_mtimecmp_set>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403956:	0001                	nop
20403958:	50b2                	lw	ra,44(sp)
2040395a:	5422                	lw	s0,40(sp)
2040395c:	6145                	addi	sp,sp,48
2040395e:	8082                	ret
	...

20403980 <__metal_exception_handler>:
__metal_exception_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403980:	7119                	addi	sp,sp,-128
20403982:	de86                	sw	ra,124(sp)
20403984:	dc96                	sw	t0,120(sp)
20403986:	da9a                	sw	t1,116(sp)
20403988:	d89e                	sw	t2,112(sp)
2040398a:	d6a2                	sw	s0,108(sp)
2040398c:	d4aa                	sw	a0,104(sp)
2040398e:	d2ae                	sw	a1,100(sp)
20403990:	d0b2                	sw	a2,96(sp)
20403992:	ceb6                	sw	a3,92(sp)
20403994:	ccba                	sw	a4,88(sp)
20403996:	cabe                	sw	a5,84(sp)
20403998:	c8c2                	sw	a6,80(sp)
2040399a:	c6c6                	sw	a7,76(sp)
2040399c:	c4f2                	sw	t3,72(sp)
2040399e:	c2f6                	sw	t4,68(sp)
204039a0:	c0fa                	sw	t5,64(sp)
204039a2:	de7e                	sw	t6,60(sp)
204039a4:	0100                	addi	s0,sp,128
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204039a6:	c17ff0ef          	jal	ra,204035bc <__metal_myhart_id>
204039aa:	872a                	mv	a4,a0
204039ac:	800007b7          	lui	a5,0x80000
204039b0:	070a                	slli	a4,a4,0x2
204039b2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
204039b6:	97ba                	add	a5,a5,a4
204039b8:	439c                	lw	a5,0(a5)
204039ba:	faf42623          	sw	a5,-84(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
204039be:	342027f3          	csrr	a5,mcause
204039c2:	faf42423          	sw	a5,-88(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
204039c6:	341027f3          	csrr	a5,mepc
204039ca:	faf42223          	sw	a5,-92(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
204039ce:	343027f3          	csrr	a5,mtval
204039d2:	faf42023          	sw	a5,-96(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
204039d6:	305027f3          	csrr	a5,mtvec
204039da:	f8f42e23          	sw	a5,-100(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
204039de:	fac42783          	lw	a5,-84(s0)
204039e2:	cbfd                	beqz	a5,20403ad8 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204039e4:	fac42503          	lw	a0,-84(s0)
204039e8:	b57ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
204039ec:	f8a42c23          	sw	a0,-104(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
204039f0:	fa842783          	lw	a5,-88(s0)
204039f4:	3ff7f793          	andi	a5,a5,1023
204039f8:	f8f42a23          	sw	a5,-108(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
204039fc:	fa842783          	lw	a5,-88(s0)
20403a00:	0a07de63          	bgez	a5,20403abc <__metal_exception_handler+0x13c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403a04:	f9442703          	lw	a4,-108(s0)
20403a08:	08000793          	li	a5,128
20403a0c:	02f71263          	bne	a4,a5,20403a30 <__metal_exception_handler+0xb0>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403a10:	f9842783          	lw	a5,-104(s0)
20403a14:	3987a783          	lw	a5,920(a5)
20403a18:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20403a1c:	f9842783          	lw	a5,-104(s0)
20403a20:	3907a783          	lw	a5,912(a5)
20403a24:	f8c42583          	lw	a1,-116(s0)
20403a28:	f9442503          	lw	a0,-108(s0)
20403a2c:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20403a2e:	a06d                	j	20403ad8 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403a30:	f9442703          	lw	a4,-108(s0)
20403a34:	47ad                	li	a5,11
20403a36:	00e7d763          	bge	a5,a4,20403a44 <__metal_exception_handler+0xc4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20403a3a:	f9c42783          	lw	a5,-100(s0)
20403a3e:	03f7f793          	andi	a5,a5,63
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403a42:	ef9d                	bnez	a5,20403a80 <__metal_exception_handler+0x100>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20403a44:	f9842683          	lw	a3,-104(s0)
20403a48:	f9442703          	lw	a4,-108(s0)
20403a4c:	87ba                	mv	a5,a4
20403a4e:	0786                	slli	a5,a5,0x1
20403a50:	97ba                	add	a5,a5,a4
20403a52:	078e                	slli	a5,a5,0x3
20403a54:	97b6                	add	a5,a5,a3
20403a56:	0987a783          	lw	a5,152(a5)
20403a5a:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20403a5e:	f9842683          	lw	a3,-104(s0)
20403a62:	f9442703          	lw	a4,-108(s0)
20403a66:	87ba                	mv	a5,a4
20403a68:	0786                	slli	a5,a5,0x1
20403a6a:	97ba                	add	a5,a5,a4
20403a6c:	078e                	slli	a5,a5,0x3
20403a6e:	97b6                	add	a5,a5,a3
20403a70:	0907a783          	lw	a5,144(a5)
20403a74:	f8c42583          	lw	a1,-116(s0)
20403a78:	f9442503          	lw	a0,-108(s0)
20403a7c:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20403a7e:	a8a9                	j	20403ad8 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403a80:	f9c42783          	lw	a5,-100(s0)
20403a84:	03f7f713          	andi	a4,a5,63
20403a88:	4789                	li	a5,2
20403a8a:	04f71763          	bne	a4,a5,20403ad8 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20403a8e:	307027f3          	csrr	a5,mtvt
20403a92:	f8f42823          	sw	a5,-112(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403a96:	f9842783          	lw	a5,-104(s0)
20403a9a:	0dc7a783          	lw	a5,220(a5)
20403a9e:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403aa2:	f9042783          	lw	a5,-112(s0)
20403aa6:	439c                	lw	a5,0(a5)
20403aa8:	f8f42423          	sw	a5,-120(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20403aac:	f8842783          	lw	a5,-120(s0)
20403ab0:	f8c42583          	lw	a1,-116(s0)
20403ab4:	f9442503          	lw	a0,-108(s0)
20403ab8:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20403aba:	a839                	j	20403ad8 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20403abc:	f9842703          	lw	a4,-104(s0)
20403ac0:	f9442783          	lw	a5,-108(s0)
20403ac4:	0e878793          	addi	a5,a5,232
20403ac8:	078a                	slli	a5,a5,0x2
20403aca:	97ba                	add	a5,a5,a4
20403acc:	439c                	lw	a5,0(a5)
20403ace:	f9442583          	lw	a1,-108(s0)
20403ad2:	fac42503          	lw	a0,-84(s0)
20403ad6:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403ad8:	50f6                	lw	ra,124(sp)
20403ada:	52e6                	lw	t0,120(sp)
20403adc:	5356                	lw	t1,116(sp)
20403ade:	53c6                	lw	t2,112(sp)
20403ae0:	5436                	lw	s0,108(sp)
20403ae2:	5526                	lw	a0,104(sp)
20403ae4:	5596                	lw	a1,100(sp)
20403ae6:	5606                	lw	a2,96(sp)
20403ae8:	46f6                	lw	a3,92(sp)
20403aea:	4766                	lw	a4,88(sp)
20403aec:	47d6                	lw	a5,84(sp)
20403aee:	4846                	lw	a6,80(sp)
20403af0:	48b6                	lw	a7,76(sp)
20403af2:	4e26                	lw	t3,72(sp)
20403af4:	4e96                	lw	t4,68(sp)
20403af6:	4f06                	lw	t5,64(sp)
20403af8:	5ff2                	lw	t6,60(sp)
20403afa:	6109                	addi	sp,sp,128
20403afc:	30200073          	mret
	...

20403b7a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20403b7a:	711d                	addi	sp,sp,-96
20403b7c:	ce86                	sw	ra,92(sp)
20403b7e:	cc96                	sw	t0,88(sp)
20403b80:	ca9a                	sw	t1,84(sp)
20403b82:	c89e                	sw	t2,80(sp)
20403b84:	c6a2                	sw	s0,76(sp)
20403b86:	c4aa                	sw	a0,72(sp)
20403b88:	c2ae                	sw	a1,68(sp)
20403b8a:	c0b2                	sw	a2,64(sp)
20403b8c:	de36                	sw	a3,60(sp)
20403b8e:	dc3a                	sw	a4,56(sp)
20403b90:	da3e                	sw	a5,52(sp)
20403b92:	d842                	sw	a6,48(sp)
20403b94:	d646                	sw	a7,44(sp)
20403b96:	d472                	sw	t3,40(sp)
20403b98:	d276                	sw	t4,36(sp)
20403b9a:	d07a                	sw	t5,32(sp)
20403b9c:	ce7e                	sw	t6,28(sp)
20403b9e:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403ba0:	a1dff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403ba4:	872a                	mv	a4,a0
20403ba6:	800007b7          	lui	a5,0x80000
20403baa:	070a                	slli	a4,a4,0x2
20403bac:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403bb0:	97ba                	add	a5,a5,a4
20403bb2:	439c                	lw	a5,0(a5)
20403bb4:	faf42623          	sw	a5,-84(s0)
20403bb8:	fac42783          	lw	a5,-84(s0)
20403bbc:	c78d                	beqz	a5,20403be6 <metal_lc0_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20403bbe:	fac42503          	lw	a0,-84(s0)
20403bc2:	97dff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403bc6:	faa42423          	sw	a0,-88(s0)
20403bca:	fa842783          	lw	a5,-88(s0)
20403bce:	2187a783          	lw	a5,536(a5)
20403bd2:	faf42223          	sw	a5,-92(s0)
20403bd6:	fa842783          	lw	a5,-88(s0)
20403bda:	2107a783          	lw	a5,528(a5)
20403bde:	fa442583          	lw	a1,-92(s0)
20403be2:	4541                	li	a0,16
20403be4:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403be6:	0001                	nop
20403be8:	40f6                	lw	ra,92(sp)
20403bea:	42e6                	lw	t0,88(sp)
20403bec:	4356                	lw	t1,84(sp)
20403bee:	43c6                	lw	t2,80(sp)
20403bf0:	4436                	lw	s0,76(sp)
20403bf2:	4526                	lw	a0,72(sp)
20403bf4:	4596                	lw	a1,68(sp)
20403bf6:	4606                	lw	a2,64(sp)
20403bf8:	56f2                	lw	a3,60(sp)
20403bfa:	5762                	lw	a4,56(sp)
20403bfc:	57d2                	lw	a5,52(sp)
20403bfe:	5842                	lw	a6,48(sp)
20403c00:	58b2                	lw	a7,44(sp)
20403c02:	5e22                	lw	t3,40(sp)
20403c04:	5e92                	lw	t4,36(sp)
20403c06:	5f02                	lw	t5,32(sp)
20403c08:	4ff2                	lw	t6,28(sp)
20403c0a:	6125                	addi	sp,sp,96
20403c0c:	30200073          	mret

20403c10 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403c10:	711d                	addi	sp,sp,-96
20403c12:	ce86                	sw	ra,92(sp)
20403c14:	cc96                	sw	t0,88(sp)
20403c16:	ca9a                	sw	t1,84(sp)
20403c18:	c89e                	sw	t2,80(sp)
20403c1a:	c6a2                	sw	s0,76(sp)
20403c1c:	c4aa                	sw	a0,72(sp)
20403c1e:	c2ae                	sw	a1,68(sp)
20403c20:	c0b2                	sw	a2,64(sp)
20403c22:	de36                	sw	a3,60(sp)
20403c24:	dc3a                	sw	a4,56(sp)
20403c26:	da3e                	sw	a5,52(sp)
20403c28:	d842                	sw	a6,48(sp)
20403c2a:	d646                	sw	a7,44(sp)
20403c2c:	d472                	sw	t3,40(sp)
20403c2e:	d276                	sw	t4,36(sp)
20403c30:	d07a                	sw	t5,32(sp)
20403c32:	ce7e                	sw	t6,28(sp)
20403c34:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20403c36:	987ff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403c3a:	872a                	mv	a4,a0
20403c3c:	800007b7          	lui	a5,0x80000
20403c40:	070a                	slli	a4,a4,0x2
20403c42:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403c46:	97ba                	add	a5,a5,a4
20403c48:	439c                	lw	a5,0(a5)
20403c4a:	faf42623          	sw	a5,-84(s0)
20403c4e:	fac42783          	lw	a5,-84(s0)
20403c52:	c78d                	beqz	a5,20403c7c <metal_lc1_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20403c54:	fac42503          	lw	a0,-84(s0)
20403c58:	8e7ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403c5c:	faa42423          	sw	a0,-88(s0)
20403c60:	fa842783          	lw	a5,-88(s0)
20403c64:	2307a783          	lw	a5,560(a5)
20403c68:	faf42223          	sw	a5,-92(s0)
20403c6c:	fa842783          	lw	a5,-88(s0)
20403c70:	2287a783          	lw	a5,552(a5)
20403c74:	fa442583          	lw	a1,-92(s0)
20403c78:	4545                	li	a0,17
20403c7a:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:221
}
20403c7c:	0001                	nop
20403c7e:	40f6                	lw	ra,92(sp)
20403c80:	42e6                	lw	t0,88(sp)
20403c82:	4356                	lw	t1,84(sp)
20403c84:	43c6                	lw	t2,80(sp)
20403c86:	4436                	lw	s0,76(sp)
20403c88:	4526                	lw	a0,72(sp)
20403c8a:	4596                	lw	a1,68(sp)
20403c8c:	4606                	lw	a2,64(sp)
20403c8e:	56f2                	lw	a3,60(sp)
20403c90:	5762                	lw	a4,56(sp)
20403c92:	57d2                	lw	a5,52(sp)
20403c94:	5842                	lw	a6,48(sp)
20403c96:	58b2                	lw	a7,44(sp)
20403c98:	5e22                	lw	t3,40(sp)
20403c9a:	5e92                	lw	t4,36(sp)
20403c9c:	5f02                	lw	t5,32(sp)
20403c9e:	4ff2                	lw	t6,28(sp)
20403ca0:	6125                	addi	sp,sp,96
20403ca2:	30200073          	mret

20403ca6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403ca6:	711d                	addi	sp,sp,-96
20403ca8:	ce86                	sw	ra,92(sp)
20403caa:	cc96                	sw	t0,88(sp)
20403cac:	ca9a                	sw	t1,84(sp)
20403cae:	c89e                	sw	t2,80(sp)
20403cb0:	c6a2                	sw	s0,76(sp)
20403cb2:	c4aa                	sw	a0,72(sp)
20403cb4:	c2ae                	sw	a1,68(sp)
20403cb6:	c0b2                	sw	a2,64(sp)
20403cb8:	de36                	sw	a3,60(sp)
20403cba:	dc3a                	sw	a4,56(sp)
20403cbc:	da3e                	sw	a5,52(sp)
20403cbe:	d842                	sw	a6,48(sp)
20403cc0:	d646                	sw	a7,44(sp)
20403cc2:	d472                	sw	t3,40(sp)
20403cc4:	d276                	sw	t4,36(sp)
20403cc6:	d07a                	sw	t5,32(sp)
20403cc8:	ce7e                	sw	t6,28(sp)
20403cca:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20403ccc:	8f1ff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403cd0:	872a                	mv	a4,a0
20403cd2:	800007b7          	lui	a5,0x80000
20403cd6:	070a                	slli	a4,a4,0x2
20403cd8:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403cdc:	97ba                	add	a5,a5,a4
20403cde:	439c                	lw	a5,0(a5)
20403ce0:	faf42623          	sw	a5,-84(s0)
20403ce4:	fac42783          	lw	a5,-84(s0)
20403ce8:	c78d                	beqz	a5,20403d12 <metal_lc2_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20403cea:	fac42503          	lw	a0,-84(s0)
20403cee:	851ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403cf2:	faa42423          	sw	a0,-88(s0)
20403cf6:	fa842783          	lw	a5,-88(s0)
20403cfa:	2487a783          	lw	a5,584(a5)
20403cfe:	faf42223          	sw	a5,-92(s0)
20403d02:	fa842783          	lw	a5,-88(s0)
20403d06:	2407a783          	lw	a5,576(a5)
20403d0a:	fa442583          	lw	a1,-92(s0)
20403d0e:	4549                	li	a0,18
20403d10:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403d12:	0001                	nop
20403d14:	40f6                	lw	ra,92(sp)
20403d16:	42e6                	lw	t0,88(sp)
20403d18:	4356                	lw	t1,84(sp)
20403d1a:	43c6                	lw	t2,80(sp)
20403d1c:	4436                	lw	s0,76(sp)
20403d1e:	4526                	lw	a0,72(sp)
20403d20:	4596                	lw	a1,68(sp)
20403d22:	4606                	lw	a2,64(sp)
20403d24:	56f2                	lw	a3,60(sp)
20403d26:	5762                	lw	a4,56(sp)
20403d28:	57d2                	lw	a5,52(sp)
20403d2a:	5842                	lw	a6,48(sp)
20403d2c:	58b2                	lw	a7,44(sp)
20403d2e:	5e22                	lw	t3,40(sp)
20403d30:	5e92                	lw	t4,36(sp)
20403d32:	5f02                	lw	t5,32(sp)
20403d34:	4ff2                	lw	t6,28(sp)
20403d36:	6125                	addi	sp,sp,96
20403d38:	30200073          	mret

20403d3c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20403d3c:	711d                	addi	sp,sp,-96
20403d3e:	ce86                	sw	ra,92(sp)
20403d40:	cc96                	sw	t0,88(sp)
20403d42:	ca9a                	sw	t1,84(sp)
20403d44:	c89e                	sw	t2,80(sp)
20403d46:	c6a2                	sw	s0,76(sp)
20403d48:	c4aa                	sw	a0,72(sp)
20403d4a:	c2ae                	sw	a1,68(sp)
20403d4c:	c0b2                	sw	a2,64(sp)
20403d4e:	de36                	sw	a3,60(sp)
20403d50:	dc3a                	sw	a4,56(sp)
20403d52:	da3e                	sw	a5,52(sp)
20403d54:	d842                	sw	a6,48(sp)
20403d56:	d646                	sw	a7,44(sp)
20403d58:	d472                	sw	t3,40(sp)
20403d5a:	d276                	sw	t4,36(sp)
20403d5c:	d07a                	sw	t5,32(sp)
20403d5e:	ce7e                	sw	t6,28(sp)
20403d60:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20403d62:	85bff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403d66:	872a                	mv	a4,a0
20403d68:	800007b7          	lui	a5,0x80000
20403d6c:	070a                	slli	a4,a4,0x2
20403d6e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403d72:	97ba                	add	a5,a5,a4
20403d74:	439c                	lw	a5,0(a5)
20403d76:	faf42623          	sw	a5,-84(s0)
20403d7a:	fac42783          	lw	a5,-84(s0)
20403d7e:	c78d                	beqz	a5,20403da8 <metal_lc3_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20403d80:	fac42503          	lw	a0,-84(s0)
20403d84:	fbaff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403d88:	faa42423          	sw	a0,-88(s0)
20403d8c:	fa842783          	lw	a5,-88(s0)
20403d90:	2607a783          	lw	a5,608(a5)
20403d94:	faf42223          	sw	a5,-92(s0)
20403d98:	fa842783          	lw	a5,-88(s0)
20403d9c:	2587a783          	lw	a5,600(a5)
20403da0:	fa442583          	lw	a1,-92(s0)
20403da4:	454d                	li	a0,19
20403da6:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403da8:	0001                	nop
20403daa:	40f6                	lw	ra,92(sp)
20403dac:	42e6                	lw	t0,88(sp)
20403dae:	4356                	lw	t1,84(sp)
20403db0:	43c6                	lw	t2,80(sp)
20403db2:	4436                	lw	s0,76(sp)
20403db4:	4526                	lw	a0,72(sp)
20403db6:	4596                	lw	a1,68(sp)
20403db8:	4606                	lw	a2,64(sp)
20403dba:	56f2                	lw	a3,60(sp)
20403dbc:	5762                	lw	a4,56(sp)
20403dbe:	57d2                	lw	a5,52(sp)
20403dc0:	5842                	lw	a6,48(sp)
20403dc2:	58b2                	lw	a7,44(sp)
20403dc4:	5e22                	lw	t3,40(sp)
20403dc6:	5e92                	lw	t4,36(sp)
20403dc8:	5f02                	lw	t5,32(sp)
20403dca:	4ff2                	lw	t6,28(sp)
20403dcc:	6125                	addi	sp,sp,96
20403dce:	30200073          	mret

20403dd2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20403dd2:	711d                	addi	sp,sp,-96
20403dd4:	ce86                	sw	ra,92(sp)
20403dd6:	cc96                	sw	t0,88(sp)
20403dd8:	ca9a                	sw	t1,84(sp)
20403dda:	c89e                	sw	t2,80(sp)
20403ddc:	c6a2                	sw	s0,76(sp)
20403dde:	c4aa                	sw	a0,72(sp)
20403de0:	c2ae                	sw	a1,68(sp)
20403de2:	c0b2                	sw	a2,64(sp)
20403de4:	de36                	sw	a3,60(sp)
20403de6:	dc3a                	sw	a4,56(sp)
20403de8:	da3e                	sw	a5,52(sp)
20403dea:	d842                	sw	a6,48(sp)
20403dec:	d646                	sw	a7,44(sp)
20403dee:	d472                	sw	t3,40(sp)
20403df0:	d276                	sw	t4,36(sp)
20403df2:	d07a                	sw	t5,32(sp)
20403df4:	ce7e                	sw	t6,28(sp)
20403df6:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403df8:	fc4ff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403dfc:	872a                	mv	a4,a0
20403dfe:	800007b7          	lui	a5,0x80000
20403e02:	070a                	slli	a4,a4,0x2
20403e04:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403e08:	97ba                	add	a5,a5,a4
20403e0a:	439c                	lw	a5,0(a5)
20403e0c:	faf42623          	sw	a5,-84(s0)
20403e10:	fac42783          	lw	a5,-84(s0)
20403e14:	c78d                	beqz	a5,20403e3e <metal_lc4_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20403e16:	fac42503          	lw	a0,-84(s0)
20403e1a:	f24ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403e1e:	faa42423          	sw	a0,-88(s0)
20403e22:	fa842783          	lw	a5,-88(s0)
20403e26:	2787a783          	lw	a5,632(a5)
20403e2a:	faf42223          	sw	a5,-92(s0)
20403e2e:	fa842783          	lw	a5,-88(s0)
20403e32:	2707a783          	lw	a5,624(a5)
20403e36:	fa442583          	lw	a1,-92(s0)
20403e3a:	4551                	li	a0,20
20403e3c:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:236
}
20403e3e:	0001                	nop
20403e40:	40f6                	lw	ra,92(sp)
20403e42:	42e6                	lw	t0,88(sp)
20403e44:	4356                	lw	t1,84(sp)
20403e46:	43c6                	lw	t2,80(sp)
20403e48:	4436                	lw	s0,76(sp)
20403e4a:	4526                	lw	a0,72(sp)
20403e4c:	4596                	lw	a1,68(sp)
20403e4e:	4606                	lw	a2,64(sp)
20403e50:	56f2                	lw	a3,60(sp)
20403e52:	5762                	lw	a4,56(sp)
20403e54:	57d2                	lw	a5,52(sp)
20403e56:	5842                	lw	a6,48(sp)
20403e58:	58b2                	lw	a7,44(sp)
20403e5a:	5e22                	lw	t3,40(sp)
20403e5c:	5e92                	lw	t4,36(sp)
20403e5e:	5f02                	lw	t5,32(sp)
20403e60:	4ff2                	lw	t6,28(sp)
20403e62:	6125                	addi	sp,sp,96
20403e64:	30200073          	mret

20403e68 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20403e68:	711d                	addi	sp,sp,-96
20403e6a:	ce86                	sw	ra,92(sp)
20403e6c:	cc96                	sw	t0,88(sp)
20403e6e:	ca9a                	sw	t1,84(sp)
20403e70:	c89e                	sw	t2,80(sp)
20403e72:	c6a2                	sw	s0,76(sp)
20403e74:	c4aa                	sw	a0,72(sp)
20403e76:	c2ae                	sw	a1,68(sp)
20403e78:	c0b2                	sw	a2,64(sp)
20403e7a:	de36                	sw	a3,60(sp)
20403e7c:	dc3a                	sw	a4,56(sp)
20403e7e:	da3e                	sw	a5,52(sp)
20403e80:	d842                	sw	a6,48(sp)
20403e82:	d646                	sw	a7,44(sp)
20403e84:	d472                	sw	t3,40(sp)
20403e86:	d276                	sw	t4,36(sp)
20403e88:	d07a                	sw	t5,32(sp)
20403e8a:	ce7e                	sw	t6,28(sp)
20403e8c:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20403e8e:	f2eff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403e92:	872a                	mv	a4,a0
20403e94:	800007b7          	lui	a5,0x80000
20403e98:	070a                	slli	a4,a4,0x2
20403e9a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403e9e:	97ba                	add	a5,a5,a4
20403ea0:	439c                	lw	a5,0(a5)
20403ea2:	faf42623          	sw	a5,-84(s0)
20403ea6:	fac42783          	lw	a5,-84(s0)
20403eaa:	c78d                	beqz	a5,20403ed4 <metal_lc5_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20403eac:	fac42503          	lw	a0,-84(s0)
20403eb0:	e8eff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403eb4:	faa42423          	sw	a0,-88(s0)
20403eb8:	fa842783          	lw	a5,-88(s0)
20403ebc:	2907a783          	lw	a5,656(a5)
20403ec0:	faf42223          	sw	a5,-92(s0)
20403ec4:	fa842783          	lw	a5,-88(s0)
20403ec8:	2887a783          	lw	a5,648(a5)
20403ecc:	fa442583          	lw	a1,-92(s0)
20403ed0:	4555                	li	a0,21
20403ed2:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:241
}
20403ed4:	0001                	nop
20403ed6:	40f6                	lw	ra,92(sp)
20403ed8:	42e6                	lw	t0,88(sp)
20403eda:	4356                	lw	t1,84(sp)
20403edc:	43c6                	lw	t2,80(sp)
20403ede:	4436                	lw	s0,76(sp)
20403ee0:	4526                	lw	a0,72(sp)
20403ee2:	4596                	lw	a1,68(sp)
20403ee4:	4606                	lw	a2,64(sp)
20403ee6:	56f2                	lw	a3,60(sp)
20403ee8:	5762                	lw	a4,56(sp)
20403eea:	57d2                	lw	a5,52(sp)
20403eec:	5842                	lw	a6,48(sp)
20403eee:	58b2                	lw	a7,44(sp)
20403ef0:	5e22                	lw	t3,40(sp)
20403ef2:	5e92                	lw	t4,36(sp)
20403ef4:	5f02                	lw	t5,32(sp)
20403ef6:	4ff2                	lw	t6,28(sp)
20403ef8:	6125                	addi	sp,sp,96
20403efa:	30200073          	mret

20403efe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
20403efe:	711d                	addi	sp,sp,-96
20403f00:	ce86                	sw	ra,92(sp)
20403f02:	cc96                	sw	t0,88(sp)
20403f04:	ca9a                	sw	t1,84(sp)
20403f06:	c89e                	sw	t2,80(sp)
20403f08:	c6a2                	sw	s0,76(sp)
20403f0a:	c4aa                	sw	a0,72(sp)
20403f0c:	c2ae                	sw	a1,68(sp)
20403f0e:	c0b2                	sw	a2,64(sp)
20403f10:	de36                	sw	a3,60(sp)
20403f12:	dc3a                	sw	a4,56(sp)
20403f14:	da3e                	sw	a5,52(sp)
20403f16:	d842                	sw	a6,48(sp)
20403f18:	d646                	sw	a7,44(sp)
20403f1a:	d472                	sw	t3,40(sp)
20403f1c:	d276                	sw	t4,36(sp)
20403f1e:	d07a                	sw	t5,32(sp)
20403f20:	ce7e                	sw	t6,28(sp)
20403f22:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20403f24:	e98ff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403f28:	872a                	mv	a4,a0
20403f2a:	800007b7          	lui	a5,0x80000
20403f2e:	070a                	slli	a4,a4,0x2
20403f30:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403f34:	97ba                	add	a5,a5,a4
20403f36:	439c                	lw	a5,0(a5)
20403f38:	faf42623          	sw	a5,-84(s0)
20403f3c:	fac42783          	lw	a5,-84(s0)
20403f40:	c78d                	beqz	a5,20403f6a <metal_lc6_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20403f42:	fac42503          	lw	a0,-84(s0)
20403f46:	df8ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403f4a:	faa42423          	sw	a0,-88(s0)
20403f4e:	fa842783          	lw	a5,-88(s0)
20403f52:	2a87a783          	lw	a5,680(a5)
20403f56:	faf42223          	sw	a5,-92(s0)
20403f5a:	fa842783          	lw	a5,-88(s0)
20403f5e:	2a07a783          	lw	a5,672(a5)
20403f62:	fa442583          	lw	a1,-92(s0)
20403f66:	4559                	li	a0,22
20403f68:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:246
}
20403f6a:	0001                	nop
20403f6c:	40f6                	lw	ra,92(sp)
20403f6e:	42e6                	lw	t0,88(sp)
20403f70:	4356                	lw	t1,84(sp)
20403f72:	43c6                	lw	t2,80(sp)
20403f74:	4436                	lw	s0,76(sp)
20403f76:	4526                	lw	a0,72(sp)
20403f78:	4596                	lw	a1,68(sp)
20403f7a:	4606                	lw	a2,64(sp)
20403f7c:	56f2                	lw	a3,60(sp)
20403f7e:	5762                	lw	a4,56(sp)
20403f80:	57d2                	lw	a5,52(sp)
20403f82:	5842                	lw	a6,48(sp)
20403f84:	58b2                	lw	a7,44(sp)
20403f86:	5e22                	lw	t3,40(sp)
20403f88:	5e92                	lw	t4,36(sp)
20403f8a:	5f02                	lw	t5,32(sp)
20403f8c:	4ff2                	lw	t6,28(sp)
20403f8e:	6125                	addi	sp,sp,96
20403f90:	30200073          	mret

20403f94 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20403f94:	711d                	addi	sp,sp,-96
20403f96:	ce86                	sw	ra,92(sp)
20403f98:	cc96                	sw	t0,88(sp)
20403f9a:	ca9a                	sw	t1,84(sp)
20403f9c:	c89e                	sw	t2,80(sp)
20403f9e:	c6a2                	sw	s0,76(sp)
20403fa0:	c4aa                	sw	a0,72(sp)
20403fa2:	c2ae                	sw	a1,68(sp)
20403fa4:	c0b2                	sw	a2,64(sp)
20403fa6:	de36                	sw	a3,60(sp)
20403fa8:	dc3a                	sw	a4,56(sp)
20403faa:	da3e                	sw	a5,52(sp)
20403fac:	d842                	sw	a6,48(sp)
20403fae:	d646                	sw	a7,44(sp)
20403fb0:	d472                	sw	t3,40(sp)
20403fb2:	d276                	sw	t4,36(sp)
20403fb4:	d07a                	sw	t5,32(sp)
20403fb6:	ce7e                	sw	t6,28(sp)
20403fb8:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20403fba:	e02ff0ef          	jal	ra,204035bc <__metal_myhart_id>
20403fbe:	872a                	mv	a4,a0
20403fc0:	800007b7          	lui	a5,0x80000
20403fc4:	070a                	slli	a4,a4,0x2
20403fc6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20403fca:	97ba                	add	a5,a5,a4
20403fcc:	439c                	lw	a5,0(a5)
20403fce:	faf42623          	sw	a5,-84(s0)
20403fd2:	fac42783          	lw	a5,-84(s0)
20403fd6:	c78d                	beqz	a5,20404000 <metal_lc7_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20403fd8:	fac42503          	lw	a0,-84(s0)
20403fdc:	d62ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20403fe0:	faa42423          	sw	a0,-88(s0)
20403fe4:	fa842783          	lw	a5,-88(s0)
20403fe8:	2c07a783          	lw	a5,704(a5)
20403fec:	faf42223          	sw	a5,-92(s0)
20403ff0:	fa842783          	lw	a5,-88(s0)
20403ff4:	2b87a783          	lw	a5,696(a5)
20403ff8:	fa442583          	lw	a1,-92(s0)
20403ffc:	455d                	li	a0,23
20403ffe:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:251
}
20404000:	0001                	nop
20404002:	40f6                	lw	ra,92(sp)
20404004:	42e6                	lw	t0,88(sp)
20404006:	4356                	lw	t1,84(sp)
20404008:	43c6                	lw	t2,80(sp)
2040400a:	4436                	lw	s0,76(sp)
2040400c:	4526                	lw	a0,72(sp)
2040400e:	4596                	lw	a1,68(sp)
20404010:	4606                	lw	a2,64(sp)
20404012:	56f2                	lw	a3,60(sp)
20404014:	5762                	lw	a4,56(sp)
20404016:	57d2                	lw	a5,52(sp)
20404018:	5842                	lw	a6,48(sp)
2040401a:	58b2                	lw	a7,44(sp)
2040401c:	5e22                	lw	t3,40(sp)
2040401e:	5e92                	lw	t4,36(sp)
20404020:	5f02                	lw	t5,32(sp)
20404022:	4ff2                	lw	t6,28(sp)
20404024:	6125                	addi	sp,sp,96
20404026:	30200073          	mret

2040402a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
2040402a:	711d                	addi	sp,sp,-96
2040402c:	ce86                	sw	ra,92(sp)
2040402e:	cc96                	sw	t0,88(sp)
20404030:	ca9a                	sw	t1,84(sp)
20404032:	c89e                	sw	t2,80(sp)
20404034:	c6a2                	sw	s0,76(sp)
20404036:	c4aa                	sw	a0,72(sp)
20404038:	c2ae                	sw	a1,68(sp)
2040403a:	c0b2                	sw	a2,64(sp)
2040403c:	de36                	sw	a3,60(sp)
2040403e:	dc3a                	sw	a4,56(sp)
20404040:	da3e                	sw	a5,52(sp)
20404042:	d842                	sw	a6,48(sp)
20404044:	d646                	sw	a7,44(sp)
20404046:	d472                	sw	t3,40(sp)
20404048:	d276                	sw	t4,36(sp)
2040404a:	d07a                	sw	t5,32(sp)
2040404c:	ce7e                	sw	t6,28(sp)
2040404e:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20404050:	d6cff0ef          	jal	ra,204035bc <__metal_myhart_id>
20404054:	872a                	mv	a4,a0
20404056:	800007b7          	lui	a5,0x80000
2040405a:	070a                	slli	a4,a4,0x2
2040405c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20404060:	97ba                	add	a5,a5,a4
20404062:	439c                	lw	a5,0(a5)
20404064:	faf42623          	sw	a5,-84(s0)
20404068:	fac42783          	lw	a5,-84(s0)
2040406c:	c78d                	beqz	a5,20404096 <metal_lc8_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
2040406e:	fac42503          	lw	a0,-84(s0)
20404072:	cccff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404076:	faa42423          	sw	a0,-88(s0)
2040407a:	fa842783          	lw	a5,-88(s0)
2040407e:	2d87a783          	lw	a5,728(a5)
20404082:	faf42223          	sw	a5,-92(s0)
20404086:	fa842783          	lw	a5,-88(s0)
2040408a:	2d07a783          	lw	a5,720(a5)
2040408e:	fa442583          	lw	a1,-92(s0)
20404092:	4561                	li	a0,24
20404094:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404096:	0001                	nop
20404098:	40f6                	lw	ra,92(sp)
2040409a:	42e6                	lw	t0,88(sp)
2040409c:	4356                	lw	t1,84(sp)
2040409e:	43c6                	lw	t2,80(sp)
204040a0:	4436                	lw	s0,76(sp)
204040a2:	4526                	lw	a0,72(sp)
204040a4:	4596                	lw	a1,68(sp)
204040a6:	4606                	lw	a2,64(sp)
204040a8:	56f2                	lw	a3,60(sp)
204040aa:	5762                	lw	a4,56(sp)
204040ac:	57d2                	lw	a5,52(sp)
204040ae:	5842                	lw	a6,48(sp)
204040b0:	58b2                	lw	a7,44(sp)
204040b2:	5e22                	lw	t3,40(sp)
204040b4:	5e92                	lw	t4,36(sp)
204040b6:	5f02                	lw	t5,32(sp)
204040b8:	4ff2                	lw	t6,28(sp)
204040ba:	6125                	addi	sp,sp,96
204040bc:	30200073          	mret

204040c0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
204040c0:	711d                	addi	sp,sp,-96
204040c2:	ce86                	sw	ra,92(sp)
204040c4:	cc96                	sw	t0,88(sp)
204040c6:	ca9a                	sw	t1,84(sp)
204040c8:	c89e                	sw	t2,80(sp)
204040ca:	c6a2                	sw	s0,76(sp)
204040cc:	c4aa                	sw	a0,72(sp)
204040ce:	c2ae                	sw	a1,68(sp)
204040d0:	c0b2                	sw	a2,64(sp)
204040d2:	de36                	sw	a3,60(sp)
204040d4:	dc3a                	sw	a4,56(sp)
204040d6:	da3e                	sw	a5,52(sp)
204040d8:	d842                	sw	a6,48(sp)
204040da:	d646                	sw	a7,44(sp)
204040dc:	d472                	sw	t3,40(sp)
204040de:	d276                	sw	t4,36(sp)
204040e0:	d07a                	sw	t5,32(sp)
204040e2:	ce7e                	sw	t6,28(sp)
204040e4:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
204040e6:	cd6ff0ef          	jal	ra,204035bc <__metal_myhart_id>
204040ea:	872a                	mv	a4,a0
204040ec:	800007b7          	lui	a5,0x80000
204040f0:	070a                	slli	a4,a4,0x2
204040f2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
204040f6:	97ba                	add	a5,a5,a4
204040f8:	439c                	lw	a5,0(a5)
204040fa:	faf42623          	sw	a5,-84(s0)
204040fe:	fac42783          	lw	a5,-84(s0)
20404102:	c78d                	beqz	a5,2040412c <metal_lc9_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404104:	fac42503          	lw	a0,-84(s0)
20404108:	c36ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
2040410c:	faa42423          	sw	a0,-88(s0)
20404110:	fa842783          	lw	a5,-88(s0)
20404114:	2f07a783          	lw	a5,752(a5)
20404118:	faf42223          	sw	a5,-92(s0)
2040411c:	fa842783          	lw	a5,-88(s0)
20404120:	2e87a783          	lw	a5,744(a5)
20404124:	fa442583          	lw	a1,-92(s0)
20404128:	4565                	li	a0,25
2040412a:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:261
}
2040412c:	0001                	nop
2040412e:	40f6                	lw	ra,92(sp)
20404130:	42e6                	lw	t0,88(sp)
20404132:	4356                	lw	t1,84(sp)
20404134:	43c6                	lw	t2,80(sp)
20404136:	4436                	lw	s0,76(sp)
20404138:	4526                	lw	a0,72(sp)
2040413a:	4596                	lw	a1,68(sp)
2040413c:	4606                	lw	a2,64(sp)
2040413e:	56f2                	lw	a3,60(sp)
20404140:	5762                	lw	a4,56(sp)
20404142:	57d2                	lw	a5,52(sp)
20404144:	5842                	lw	a6,48(sp)
20404146:	58b2                	lw	a7,44(sp)
20404148:	5e22                	lw	t3,40(sp)
2040414a:	5e92                	lw	t4,36(sp)
2040414c:	5f02                	lw	t5,32(sp)
2040414e:	4ff2                	lw	t6,28(sp)
20404150:	6125                	addi	sp,sp,96
20404152:	30200073          	mret

20404156 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20404156:	711d                	addi	sp,sp,-96
20404158:	ce86                	sw	ra,92(sp)
2040415a:	cc96                	sw	t0,88(sp)
2040415c:	ca9a                	sw	t1,84(sp)
2040415e:	c89e                	sw	t2,80(sp)
20404160:	c6a2                	sw	s0,76(sp)
20404162:	c4aa                	sw	a0,72(sp)
20404164:	c2ae                	sw	a1,68(sp)
20404166:	c0b2                	sw	a2,64(sp)
20404168:	de36                	sw	a3,60(sp)
2040416a:	dc3a                	sw	a4,56(sp)
2040416c:	da3e                	sw	a5,52(sp)
2040416e:	d842                	sw	a6,48(sp)
20404170:	d646                	sw	a7,44(sp)
20404172:	d472                	sw	t3,40(sp)
20404174:	d276                	sw	t4,36(sp)
20404176:	d07a                	sw	t5,32(sp)
20404178:	ce7e                	sw	t6,28(sp)
2040417a:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
2040417c:	c40ff0ef          	jal	ra,204035bc <__metal_myhart_id>
20404180:	872a                	mv	a4,a0
20404182:	800007b7          	lui	a5,0x80000
20404186:	070a                	slli	a4,a4,0x2
20404188:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
2040418c:	97ba                	add	a5,a5,a4
2040418e:	439c                	lw	a5,0(a5)
20404190:	faf42623          	sw	a5,-84(s0)
20404194:	fac42783          	lw	a5,-84(s0)
20404198:	c78d                	beqz	a5,204041c2 <metal_lc10_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040419a:	fac42503          	lw	a0,-84(s0)
2040419e:	ba0ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
204041a2:	faa42423          	sw	a0,-88(s0)
204041a6:	fa842783          	lw	a5,-88(s0)
204041aa:	3087a783          	lw	a5,776(a5)
204041ae:	faf42223          	sw	a5,-92(s0)
204041b2:	fa842783          	lw	a5,-88(s0)
204041b6:	3007a783          	lw	a5,768(a5)
204041ba:	fa442583          	lw	a1,-92(s0)
204041be:	4569                	li	a0,26
204041c0:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:267
}
204041c2:	0001                	nop
204041c4:	40f6                	lw	ra,92(sp)
204041c6:	42e6                	lw	t0,88(sp)
204041c8:	4356                	lw	t1,84(sp)
204041ca:	43c6                	lw	t2,80(sp)
204041cc:	4436                	lw	s0,76(sp)
204041ce:	4526                	lw	a0,72(sp)
204041d0:	4596                	lw	a1,68(sp)
204041d2:	4606                	lw	a2,64(sp)
204041d4:	56f2                	lw	a3,60(sp)
204041d6:	5762                	lw	a4,56(sp)
204041d8:	57d2                	lw	a5,52(sp)
204041da:	5842                	lw	a6,48(sp)
204041dc:	58b2                	lw	a7,44(sp)
204041de:	5e22                	lw	t3,40(sp)
204041e0:	5e92                	lw	t4,36(sp)
204041e2:	5f02                	lw	t5,32(sp)
204041e4:	4ff2                	lw	t6,28(sp)
204041e6:	6125                	addi	sp,sp,96
204041e8:	30200073          	mret

204041ec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
204041ec:	711d                	addi	sp,sp,-96
204041ee:	ce86                	sw	ra,92(sp)
204041f0:	cc96                	sw	t0,88(sp)
204041f2:	ca9a                	sw	t1,84(sp)
204041f4:	c89e                	sw	t2,80(sp)
204041f6:	c6a2                	sw	s0,76(sp)
204041f8:	c4aa                	sw	a0,72(sp)
204041fa:	c2ae                	sw	a1,68(sp)
204041fc:	c0b2                	sw	a2,64(sp)
204041fe:	de36                	sw	a3,60(sp)
20404200:	dc3a                	sw	a4,56(sp)
20404202:	da3e                	sw	a5,52(sp)
20404204:	d842                	sw	a6,48(sp)
20404206:	d646                	sw	a7,44(sp)
20404208:	d472                	sw	t3,40(sp)
2040420a:	d276                	sw	t4,36(sp)
2040420c:	d07a                	sw	t5,32(sp)
2040420e:	ce7e                	sw	t6,28(sp)
20404210:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404212:	baaff0ef          	jal	ra,204035bc <__metal_myhart_id>
20404216:	872a                	mv	a4,a0
20404218:	800007b7          	lui	a5,0x80000
2040421c:	070a                	slli	a4,a4,0x2
2040421e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
20404222:	97ba                	add	a5,a5,a4
20404224:	439c                	lw	a5,0(a5)
20404226:	faf42623          	sw	a5,-84(s0)
2040422a:	fac42783          	lw	a5,-84(s0)
2040422e:	c78d                	beqz	a5,20404258 <metal_lc11_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20404230:	fac42503          	lw	a0,-84(s0)
20404234:	b0aff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404238:	faa42423          	sw	a0,-88(s0)
2040423c:	fa842783          	lw	a5,-88(s0)
20404240:	3207a783          	lw	a5,800(a5)
20404244:	faf42223          	sw	a5,-92(s0)
20404248:	fa842783          	lw	a5,-88(s0)
2040424c:	3187a783          	lw	a5,792(a5)
20404250:	fa442583          	lw	a1,-92(s0)
20404254:	456d                	li	a0,27
20404256:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:273
}
20404258:	0001                	nop
2040425a:	40f6                	lw	ra,92(sp)
2040425c:	42e6                	lw	t0,88(sp)
2040425e:	4356                	lw	t1,84(sp)
20404260:	43c6                	lw	t2,80(sp)
20404262:	4436                	lw	s0,76(sp)
20404264:	4526                	lw	a0,72(sp)
20404266:	4596                	lw	a1,68(sp)
20404268:	4606                	lw	a2,64(sp)
2040426a:	56f2                	lw	a3,60(sp)
2040426c:	5762                	lw	a4,56(sp)
2040426e:	57d2                	lw	a5,52(sp)
20404270:	5842                	lw	a6,48(sp)
20404272:	58b2                	lw	a7,44(sp)
20404274:	5e22                	lw	t3,40(sp)
20404276:	5e92                	lw	t4,36(sp)
20404278:	5f02                	lw	t5,32(sp)
2040427a:	4ff2                	lw	t6,28(sp)
2040427c:	6125                	addi	sp,sp,96
2040427e:	30200073          	mret

20404282 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404282:	711d                	addi	sp,sp,-96
20404284:	ce86                	sw	ra,92(sp)
20404286:	cc96                	sw	t0,88(sp)
20404288:	ca9a                	sw	t1,84(sp)
2040428a:	c89e                	sw	t2,80(sp)
2040428c:	c6a2                	sw	s0,76(sp)
2040428e:	c4aa                	sw	a0,72(sp)
20404290:	c2ae                	sw	a1,68(sp)
20404292:	c0b2                	sw	a2,64(sp)
20404294:	de36                	sw	a3,60(sp)
20404296:	dc3a                	sw	a4,56(sp)
20404298:	da3e                	sw	a5,52(sp)
2040429a:	d842                	sw	a6,48(sp)
2040429c:	d646                	sw	a7,44(sp)
2040429e:	d472                	sw	t3,40(sp)
204042a0:	d276                	sw	t4,36(sp)
204042a2:	d07a                	sw	t5,32(sp)
204042a4:	ce7e                	sw	t6,28(sp)
204042a6:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
204042a8:	b14ff0ef          	jal	ra,204035bc <__metal_myhart_id>
204042ac:	872a                	mv	a4,a0
204042ae:	800007b7          	lui	a5,0x80000
204042b2:	070a                	slli	a4,a4,0x2
204042b4:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
204042b8:	97ba                	add	a5,a5,a4
204042ba:	439c                	lw	a5,0(a5)
204042bc:	faf42623          	sw	a5,-84(s0)
204042c0:	fac42783          	lw	a5,-84(s0)
204042c4:	c78d                	beqz	a5,204042ee <metal_lc12_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
204042c6:	fac42503          	lw	a0,-84(s0)
204042ca:	a74ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
204042ce:	faa42423          	sw	a0,-88(s0)
204042d2:	fa842783          	lw	a5,-88(s0)
204042d6:	3387a783          	lw	a5,824(a5)
204042da:	faf42223          	sw	a5,-92(s0)
204042de:	fa842783          	lw	a5,-88(s0)
204042e2:	3307a783          	lw	a5,816(a5)
204042e6:	fa442583          	lw	a1,-92(s0)
204042ea:	4571                	li	a0,28
204042ec:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:279
}
204042ee:	0001                	nop
204042f0:	40f6                	lw	ra,92(sp)
204042f2:	42e6                	lw	t0,88(sp)
204042f4:	4356                	lw	t1,84(sp)
204042f6:	43c6                	lw	t2,80(sp)
204042f8:	4436                	lw	s0,76(sp)
204042fa:	4526                	lw	a0,72(sp)
204042fc:	4596                	lw	a1,68(sp)
204042fe:	4606                	lw	a2,64(sp)
20404300:	56f2                	lw	a3,60(sp)
20404302:	5762                	lw	a4,56(sp)
20404304:	57d2                	lw	a5,52(sp)
20404306:	5842                	lw	a6,48(sp)
20404308:	58b2                	lw	a7,44(sp)
2040430a:	5e22                	lw	t3,40(sp)
2040430c:	5e92                	lw	t4,36(sp)
2040430e:	5f02                	lw	t5,32(sp)
20404310:	4ff2                	lw	t6,28(sp)
20404312:	6125                	addi	sp,sp,96
20404314:	30200073          	mret

20404318 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404318:	711d                	addi	sp,sp,-96
2040431a:	ce86                	sw	ra,92(sp)
2040431c:	cc96                	sw	t0,88(sp)
2040431e:	ca9a                	sw	t1,84(sp)
20404320:	c89e                	sw	t2,80(sp)
20404322:	c6a2                	sw	s0,76(sp)
20404324:	c4aa                	sw	a0,72(sp)
20404326:	c2ae                	sw	a1,68(sp)
20404328:	c0b2                	sw	a2,64(sp)
2040432a:	de36                	sw	a3,60(sp)
2040432c:	dc3a                	sw	a4,56(sp)
2040432e:	da3e                	sw	a5,52(sp)
20404330:	d842                	sw	a6,48(sp)
20404332:	d646                	sw	a7,44(sp)
20404334:	d472                	sw	t3,40(sp)
20404336:	d276                	sw	t4,36(sp)
20404338:	d07a                	sw	t5,32(sp)
2040433a:	ce7e                	sw	t6,28(sp)
2040433c:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
2040433e:	a7eff0ef          	jal	ra,204035bc <__metal_myhart_id>
20404342:	872a                	mv	a4,a0
20404344:	800007b7          	lui	a5,0x80000
20404348:	070a                	slli	a4,a4,0x2
2040434a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
2040434e:	97ba                	add	a5,a5,a4
20404350:	439c                	lw	a5,0(a5)
20404352:	faf42623          	sw	a5,-84(s0)
20404356:	fac42783          	lw	a5,-84(s0)
2040435a:	c78d                	beqz	a5,20404384 <metal_lc13_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
2040435c:	fac42503          	lw	a0,-84(s0)
20404360:	9deff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404364:	faa42423          	sw	a0,-88(s0)
20404368:	fa842783          	lw	a5,-88(s0)
2040436c:	3507a783          	lw	a5,848(a5)
20404370:	faf42223          	sw	a5,-92(s0)
20404374:	fa842783          	lw	a5,-88(s0)
20404378:	3487a783          	lw	a5,840(a5)
2040437c:	fa442583          	lw	a1,-92(s0)
20404380:	4575                	li	a0,29
20404382:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404384:	0001                	nop
20404386:	40f6                	lw	ra,92(sp)
20404388:	42e6                	lw	t0,88(sp)
2040438a:	4356                	lw	t1,84(sp)
2040438c:	43c6                	lw	t2,80(sp)
2040438e:	4436                	lw	s0,76(sp)
20404390:	4526                	lw	a0,72(sp)
20404392:	4596                	lw	a1,68(sp)
20404394:	4606                	lw	a2,64(sp)
20404396:	56f2                	lw	a3,60(sp)
20404398:	5762                	lw	a4,56(sp)
2040439a:	57d2                	lw	a5,52(sp)
2040439c:	5842                	lw	a6,48(sp)
2040439e:	58b2                	lw	a7,44(sp)
204043a0:	5e22                	lw	t3,40(sp)
204043a2:	5e92                	lw	t4,36(sp)
204043a4:	5f02                	lw	t5,32(sp)
204043a6:	4ff2                	lw	t6,28(sp)
204043a8:	6125                	addi	sp,sp,96
204043aa:	30200073          	mret

204043ae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
204043ae:	711d                	addi	sp,sp,-96
204043b0:	ce86                	sw	ra,92(sp)
204043b2:	cc96                	sw	t0,88(sp)
204043b4:	ca9a                	sw	t1,84(sp)
204043b6:	c89e                	sw	t2,80(sp)
204043b8:	c6a2                	sw	s0,76(sp)
204043ba:	c4aa                	sw	a0,72(sp)
204043bc:	c2ae                	sw	a1,68(sp)
204043be:	c0b2                	sw	a2,64(sp)
204043c0:	de36                	sw	a3,60(sp)
204043c2:	dc3a                	sw	a4,56(sp)
204043c4:	da3e                	sw	a5,52(sp)
204043c6:	d842                	sw	a6,48(sp)
204043c8:	d646                	sw	a7,44(sp)
204043ca:	d472                	sw	t3,40(sp)
204043cc:	d276                	sw	t4,36(sp)
204043ce:	d07a                	sw	t5,32(sp)
204043d0:	ce7e                	sw	t6,28(sp)
204043d2:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
204043d4:	9e8ff0ef          	jal	ra,204035bc <__metal_myhart_id>
204043d8:	872a                	mv	a4,a0
204043da:	800007b7          	lui	a5,0x80000
204043de:	070a                	slli	a4,a4,0x2
204043e0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
204043e4:	97ba                	add	a5,a5,a4
204043e6:	439c                	lw	a5,0(a5)
204043e8:	faf42623          	sw	a5,-84(s0)
204043ec:	fac42783          	lw	a5,-84(s0)
204043f0:	c78d                	beqz	a5,2040441a <metal_lc14_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
204043f2:	fac42503          	lw	a0,-84(s0)
204043f6:	948ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
204043fa:	faa42423          	sw	a0,-88(s0)
204043fe:	fa842783          	lw	a5,-88(s0)
20404402:	3687a783          	lw	a5,872(a5)
20404406:	faf42223          	sw	a5,-92(s0)
2040440a:	fa842783          	lw	a5,-88(s0)
2040440e:	3607a783          	lw	a5,864(a5)
20404412:	fa442583          	lw	a1,-92(s0)
20404416:	4579                	li	a0,30
20404418:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:291
}
2040441a:	0001                	nop
2040441c:	40f6                	lw	ra,92(sp)
2040441e:	42e6                	lw	t0,88(sp)
20404420:	4356                	lw	t1,84(sp)
20404422:	43c6                	lw	t2,80(sp)
20404424:	4436                	lw	s0,76(sp)
20404426:	4526                	lw	a0,72(sp)
20404428:	4596                	lw	a1,68(sp)
2040442a:	4606                	lw	a2,64(sp)
2040442c:	56f2                	lw	a3,60(sp)
2040442e:	5762                	lw	a4,56(sp)
20404430:	57d2                	lw	a5,52(sp)
20404432:	5842                	lw	a6,48(sp)
20404434:	58b2                	lw	a7,44(sp)
20404436:	5e22                	lw	t3,40(sp)
20404438:	5e92                	lw	t4,36(sp)
2040443a:	5f02                	lw	t5,32(sp)
2040443c:	4ff2                	lw	t6,28(sp)
2040443e:	6125                	addi	sp,sp,96
20404440:	30200073          	mret

20404444 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20404444:	711d                	addi	sp,sp,-96
20404446:	ce86                	sw	ra,92(sp)
20404448:	cc96                	sw	t0,88(sp)
2040444a:	ca9a                	sw	t1,84(sp)
2040444c:	c89e                	sw	t2,80(sp)
2040444e:	c6a2                	sw	s0,76(sp)
20404450:	c4aa                	sw	a0,72(sp)
20404452:	c2ae                	sw	a1,68(sp)
20404454:	c0b2                	sw	a2,64(sp)
20404456:	de36                	sw	a3,60(sp)
20404458:	dc3a                	sw	a4,56(sp)
2040445a:	da3e                	sw	a5,52(sp)
2040445c:	d842                	sw	a6,48(sp)
2040445e:	d646                	sw	a7,44(sp)
20404460:	d472                	sw	t3,40(sp)
20404462:	d276                	sw	t4,36(sp)
20404464:	d07a                	sw	t5,32(sp)
20404466:	ce7e                	sw	t6,28(sp)
20404468:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
2040446a:	952ff0ef          	jal	ra,204035bc <__metal_myhart_id>
2040446e:	872a                	mv	a4,a0
20404470:	800007b7          	lui	a5,0x80000
20404474:	070a                	slli	a4,a4,0x2
20404476:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
2040447a:	97ba                	add	a5,a5,a4
2040447c:	439c                	lw	a5,0(a5)
2040447e:	faf42623          	sw	a5,-84(s0)
20404482:	fac42783          	lw	a5,-84(s0)
20404486:	c78d                	beqz	a5,204044b0 <metal_lc15_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404488:	fac42503          	lw	a0,-84(s0)
2040448c:	8b2ff0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404490:	faa42423          	sw	a0,-88(s0)
20404494:	fa842783          	lw	a5,-88(s0)
20404498:	3807a783          	lw	a5,896(a5)
2040449c:	faf42223          	sw	a5,-92(s0)
204044a0:	fa842783          	lw	a5,-88(s0)
204044a4:	3787a783          	lw	a5,888(a5)
204044a8:	fa442583          	lw	a1,-92(s0)
204044ac:	457d                	li	a0,31
204044ae:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:297
}
204044b0:	0001                	nop
204044b2:	40f6                	lw	ra,92(sp)
204044b4:	42e6                	lw	t0,88(sp)
204044b6:	4356                	lw	t1,84(sp)
204044b8:	43c6                	lw	t2,80(sp)
204044ba:	4436                	lw	s0,76(sp)
204044bc:	4526                	lw	a0,72(sp)
204044be:	4596                	lw	a1,68(sp)
204044c0:	4606                	lw	a2,64(sp)
204044c2:	56f2                	lw	a3,60(sp)
204044c4:	5762                	lw	a4,56(sp)
204044c6:	57d2                	lw	a5,52(sp)
204044c8:	5842                	lw	a6,48(sp)
204044ca:	58b2                	lw	a7,44(sp)
204044cc:	5e22                	lw	t3,40(sp)
204044ce:	5e92                	lw	t4,36(sp)
204044d0:	5f02                	lw	t5,32(sp)
204044d2:	4ff2                	lw	t6,28(sp)
204044d4:	6125                	addi	sp,sp,96
204044d6:	30200073          	mret

204044da <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
204044da:	1101                	addi	sp,sp,-32
204044dc:	ce22                	sw	s0,28(sp)
204044de:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204044e0:	305027f3          	csrr	a5,mtvec
204044e4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
204044e8:	fec42783          	lw	a5,-20(s0)
204044ec:	03f7f793          	andi	a5,a5,63
204044f0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
204044f4:	fec42703          	lw	a4,-20(s0)
204044f8:	478d                	li	a5,3
204044fa:	02f70363          	beq	a4,a5,20404520 <__metal_controller_interrupt_vector_mode+0x46>
204044fe:	fec42703          	lw	a4,-20(s0)
20404502:	478d                	li	a5,3
20404504:	02e7e263          	bltu	a5,a4,20404528 <__metal_controller_interrupt_vector_mode+0x4e>
20404508:	fec42703          	lw	a4,-20(s0)
2040450c:	4785                	li	a5,1
2040450e:	00f70b63          	beq	a4,a5,20404524 <__metal_controller_interrupt_vector_mode+0x4a>
20404512:	fec42703          	lw	a4,-20(s0)
20404516:	4789                	li	a5,2
20404518:	00f71863          	bne	a4,a5,20404528 <__metal_controller_interrupt_vector_mode+0x4e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040451c:	478d                	li	a5,3
2040451e:	a031                	j	2040452a <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20404520:	4791                	li	a5,4
20404522:	a021                	j	2040452a <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20404524:	4785                	li	a5,1
20404526:	a011                	j	2040452a <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20404528:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:314
}
2040452a:	853e                	mv	a0,a5
2040452c:	4472                	lw	s0,28(sp)
2040452e:	6105                	addi	sp,sp,32
20404530:	8082                	ret

20404532 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20404532:	7179                	addi	sp,sp,-48
20404534:	d622                	sw	s0,44(sp)
20404536:	1800                	addi	s0,sp,48
20404538:	fca42e23          	sw	a0,-36(s0)
2040453c:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404540:	305027f3          	csrr	a5,mtvec
20404544:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20404548:	fec42783          	lw	a5,-20(s0)
2040454c:	fc07f793          	andi	a5,a5,-64
20404550:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20404554:	fd842783          	lw	a5,-40(s0)
20404558:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
2040455c:	fdc42703          	lw	a4,-36(s0)
20404560:	4791                	li	a5,4
20404562:	04f70563          	beq	a4,a5,204045ac <__metal_controller_interrupt_vector+0x7a>
20404566:	fdc42703          	lw	a4,-36(s0)
2040456a:	4791                	li	a5,4
2040456c:	06e7e863          	bltu	a5,a4,204045dc <__metal_controller_interrupt_vector+0xaa>
20404570:	fdc42703          	lw	a4,-36(s0)
20404574:	478d                	li	a5,3
20404576:	06e7e363          	bltu	a5,a4,204045dc <__metal_controller_interrupt_vector+0xaa>
2040457a:	fdc42703          	lw	a4,-36(s0)
2040457e:	4789                	li	a5,2
20404580:	00f77b63          	bgeu	a4,a5,20404596 <__metal_controller_interrupt_vector+0x64>
20404584:	fdc42783          	lw	a5,-36(s0)
20404588:	c7a1                	beqz	a5,204045d0 <__metal_controller_interrupt_vector+0x9e>
2040458a:	fdc42703          	lw	a4,-36(s0)
2040458e:	4785                	li	a5,1
20404590:	02f70963          	beq	a4,a5,204045c2 <__metal_controller_interrupt_vector+0x90>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404594:	a0a1                	j	204045dc <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404596:	fe842783          	lw	a5,-24(s0)
2040459a:	30779073          	csrw	mtvt,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040459e:	fec42783          	lw	a5,-20(s0)
204045a2:	0027e793          	ori	a5,a5,2
204045a6:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
204045aa:	a80d                	j	204045dc <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
204045ac:	fe842783          	lw	a5,-24(s0)
204045b0:	30779073          	csrw	mtvt,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
204045b4:	fec42783          	lw	a5,-20(s0)
204045b8:	0037e793          	ori	a5,a5,3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
204045bc:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
204045c0:	a831                	j	204045dc <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
204045c2:	fe842783          	lw	a5,-24(s0)
204045c6:	0017e793          	ori	a5,a5,1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
204045ca:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
204045ce:	a039                	j	204045dc <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
204045d0:	fe842783          	lw	a5,-24(s0)
204045d4:	9bf1                	andi	a5,a5,-4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
204045d6:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
204045da:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:344
}
204045dc:	0001                	nop
204045de:	5432                	lw	s0,44(sp)
204045e0:	6145                	addi	sp,sp,48
204045e2:	8082                	ret

204045e4 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
204045e4:	1101                	addi	sp,sp,-32
204045e6:	ce22                	sw	s0,28(sp)
204045e8:	1000                	addi	s0,sp,32
204045ea:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204045ee:	fec42703          	lw	a4,-20(s0)
204045f2:	47fd                	li	a5,31
204045f4:	02e7c663          	blt	a5,a4,20404620 <__metal_valid_interrupt_id+0x3c>
204045f8:	fec42703          	lw	a4,-20(s0)
204045fc:	478d                	li	a5,3
204045fe:	02f74963          	blt	a4,a5,20404630 <__metal_valid_interrupt_id+0x4c>
20404602:	fec42783          	lw	a5,-20(s0)
20404606:	4705                	li	a4,1
20404608:	00f71733          	sll	a4,a4,a5
2040460c:	77c5                	lui	a5,0xffff1
2040460e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffeedb8>
20404612:	8ff9                	and	a5,a5,a4
20404614:	00f037b3          	snez	a5,a5
20404618:	0ff7f793          	zext.b	a5,a5
2040461c:	eb81                	bnez	a5,2040462c <__metal_valid_interrupt_id+0x48>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040461e:	a809                	j	20404630 <__metal_valid_interrupt_id+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404620:	fec42703          	lw	a4,-20(s0)
20404624:	08000793          	li	a5,128
20404628:	00f71463          	bne	a4,a5,20404630 <__metal_valid_interrupt_id+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
2040462c:	4785                	li	a5,1
2040462e:	a019                	j	20404634 <__metal_valid_interrupt_id+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20404630:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20404632:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:374
}
20404634:	853e                	mv	a0,a5
20404636:	4472                	lw	s0,28(sp)
20404638:	6105                	addi	sp,sp,32
2040463a:	8082                	ret

2040463c <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
2040463c:	7179                	addi	sp,sp,-48
2040463e:	d606                	sw	ra,44(sp)
20404640:	d422                	sw	s0,40(sp)
20404642:	1800                	addi	s0,sp,48
20404644:	fca42e23          	sw	a0,-36(s0)
20404648:	fcb42c23          	sw	a1,-40(s0)
2040464c:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20404650:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20404654:	fdc42783          	lw	a5,-36(s0)
20404658:	e399                	bnez	a5,2040465e <__metal_local_interrupt_enable+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
2040465a:	57fd                	li	a5,-1
2040465c:	a849                	j	204046ee <__metal_local_interrupt_enable+0xb2>
2040465e:	fd842703          	lw	a4,-40(s0)
20404662:	47fd                	li	a5,31
20404664:	08e7e063          	bltu	a5,a4,204046e4 <__metal_local_interrupt_enable+0xa8>
20404668:	fd842783          	lw	a5,-40(s0)
2040466c:	00279713          	slli	a4,a5,0x2
20404670:	204007b7          	lui	a5,0x20400
20404674:	4fc78793          	addi	a5,a5,1276 # 204004fc <__metal_driver_vtable_riscv_clint0+0x64>
20404678:	97ba                	add	a5,a5,a4
2040467a:	439c                	lw	a5,0(a5)
2040467c:	8782                	jr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
2040467e:	fd442783          	lw	a5,-44(s0)
20404682:	c781                	beqz	a5,2040468a <__metal_local_interrupt_enable+0x4e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404684:	f53fe0ef          	jal	ra,204035d6 <__metal_interrupt_global_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404688:	a08d                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
2040468a:	f65fe0ef          	jal	ra,204035ee <__metal_interrupt_global_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2040468e:	a8b1                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404690:	fd442783          	lw	a5,-44(s0)
20404694:	c781                	beqz	a5,2040469c <__metal_local_interrupt_enable+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404696:	f71fe0ef          	jal	ra,20403606 <__metal_interrupt_software_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
2040469a:	a881                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2040469c:	f83fe0ef          	jal	ra,2040361e <__metal_interrupt_software_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
204046a0:	a0a9                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
204046a2:	fd442783          	lw	a5,-44(s0)
204046a6:	c781                	beqz	a5,204046ae <__metal_local_interrupt_enable+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
204046a8:	f8ffe0ef          	jal	ra,20403636 <__metal_interrupt_timer_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
204046ac:	a83d                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
204046ae:	fa3fe0ef          	jal	ra,20403650 <__metal_interrupt_timer_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
204046b2:	a825                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
204046b4:	fd442783          	lw	a5,-44(s0)
204046b8:	c781                	beqz	a5,204046c0 <__metal_local_interrupt_enable+0x84>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
204046ba:	fb1fe0ef          	jal	ra,2040366a <__metal_interrupt_external_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
204046be:	a035                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
204046c0:	fc7fe0ef          	jal	ra,20403686 <__metal_interrupt_external_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
204046c4:	a01d                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
204046c6:	fd442783          	lw	a5,-44(s0)
204046ca:	c799                	beqz	a5,204046d8 <__metal_local_interrupt_enable+0x9c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
204046cc:	fd842783          	lw	a5,-40(s0)
204046d0:	853e                	mv	a0,a5
204046d2:	fd1fe0ef          	jal	ra,204036a2 <__metal_interrupt_local_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
204046d6:	a811                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
204046d8:	fd842783          	lw	a5,-40(s0)
204046dc:	853e                	mv	a0,a5
204046de:	ff1fe0ef          	jal	ra,204036ce <__metal_interrupt_local_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
204046e2:	a021                	j	204046ea <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
204046e4:	57fd                	li	a5,-1
204046e6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
204046ea:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:439
}
204046ee:	853e                	mv	a0,a5
204046f0:	50b2                	lw	ra,44(sp)
204046f2:	5422                	lw	s0,40(sp)
204046f4:	6145                	addi	sp,sp,48
204046f6:	8082                	ret

204046f8 <__metal_exception_register>:
__metal_exception_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
204046f8:	7179                	addi	sp,sp,-48
204046fa:	d622                	sw	s0,44(sp)
204046fc:	1800                	addi	s0,sp,48
204046fe:	fca42e23          	sw	a0,-36(s0)
20404702:	fcb42c23          	sw	a1,-40(s0)
20404706:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2040470a:	fdc42783          	lw	a5,-36(s0)
2040470e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404712:	fd842703          	lw	a4,-40(s0)
20404716:	47ad                	li	a5,11
20404718:	02e7c263          	blt	a5,a4,2040473c <__metal_exception_register+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2040471c:	fd442783          	lw	a5,-44(s0)
20404720:	cf91                	beqz	a5,2040473c <__metal_exception_register+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20404722:	fec42703          	lw	a4,-20(s0)
20404726:	fd842783          	lw	a5,-40(s0)
2040472a:	0e878793          	addi	a5,a5,232
2040472e:	078a                	slli	a5,a5,0x2
20404730:	97ba                	add	a5,a5,a4
20404732:	fd442703          	lw	a4,-44(s0)
20404736:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20404738:	4781                	li	a5,0
2040473a:	a011                	j	2040473e <__metal_exception_register+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
2040473c:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:450
}
2040473e:	853e                	mv	a0,a5
20404740:	5432                	lw	s0,44(sp)
20404742:	6145                	addi	sp,sp,48
20404744:	8082                	ret

20404746 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20404746:	7179                	addi	sp,sp,-48
20404748:	d606                	sw	ra,44(sp)
2040474a:	d422                	sw	s0,40(sp)
2040474c:	1800                	addi	s0,sp,48
2040474e:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404752:	fdc42783          	lw	a5,-36(s0)
20404756:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
2040475a:	fe442783          	lw	a5,-28(s0)
2040475e:	43dc                	lw	a5,4(a5)
20404760:	e3e1                	bnez	a5,20404820 <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404762:	fe042623          	sw	zero,-20(s0)
20404766:	a0b9                	j	204047b4 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20404768:	fe442683          	lw	a3,-28(s0)
2040476c:	fec42703          	lw	a4,-20(s0)
20404770:	87ba                	mv	a5,a4
20404772:	0786                	slli	a5,a5,0x1
20404774:	97ba                	add	a5,a5,a4
20404776:	078e                	slli	a5,a5,0x3
20404778:	97b6                	add	a5,a5,a3
2040477a:	0807a823          	sw	zero,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
2040477e:	fe442683          	lw	a3,-28(s0)
20404782:	fec42703          	lw	a4,-20(s0)
20404786:	87ba                	mv	a5,a4
20404788:	0786                	slli	a5,a5,0x1
2040478a:	97ba                	add	a5,a5,a4
2040478c:	078e                	slli	a5,a5,0x3
2040478e:	97b6                	add	a5,a5,a3
20404790:	0807aa23          	sw	zero,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404794:	fe442683          	lw	a3,-28(s0)
20404798:	fec42703          	lw	a4,-20(s0)
2040479c:	87ba                	mv	a5,a4
2040479e:	0786                	slli	a5,a5,0x1
204047a0:	97ba                	add	a5,a5,a4
204047a2:	078e                	slli	a5,a5,0x3
204047a4:	97b6                	add	a5,a5,a3
204047a6:	0807ac23          	sw	zero,152(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
204047aa:	fec42783          	lw	a5,-20(s0)
204047ae:	0785                	addi	a5,a5,1
204047b0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
204047b4:	fec42703          	lw	a4,-20(s0)
204047b8:	47fd                	li	a5,31
204047ba:	fae7d7e3          	bge	a5,a4,20404768 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
204047be:	fe042423          	sw	zero,-24(s0)
204047c2:	a01d                	j	204047e8 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
204047c4:	fe442703          	lw	a4,-28(s0)
204047c8:	fe842783          	lw	a5,-24(s0)
204047cc:	0e878793          	addi	a5,a5,232
204047d0:	078a                	slli	a5,a5,0x2
204047d2:	97ba                	add	a5,a5,a4
204047d4:	20403737          	lui	a4,0x20403
204047d8:	6fa70713          	addi	a4,a4,1786 # 204036fa <__metal_default_exception_handler>
204047dc:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
204047de:	fe842783          	lw	a5,-24(s0)
204047e2:	0785                	addi	a5,a5,1
204047e4:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
204047e8:	fe842703          	lw	a4,-24(s0)
204047ec:	47ad                	li	a5,11
204047ee:	fce7dbe3          	bge	a5,a4,204047c4 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
204047f2:	305027f3          	csrr	a5,mtvec
204047f6:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
204047fa:	204007b7          	lui	a5,0x20400
204047fe:	13478793          	addi	a5,a5,308 # 20400134 <early_trap_vector>
20404802:	fe042703          	lw	a4,-32(s0)
20404806:	00f71963          	bne	a4,a5,20404818 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
2040480a:	204047b7          	lui	a5,0x20404
2040480e:	98078593          	addi	a1,a5,-1664 # 20403980 <__metal_exception_handler>
20404812:	4501                	li	a0,0
20404814:	d1fff0ef          	jal	ra,20404532 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404818:	fe442783          	lw	a5,-28(s0)
2040481c:	4705                	li	a4,1
2040481e:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20404820:	0001                	nop
20404822:	50b2                	lw	ra,44(sp)
20404824:	5422                	lw	s0,40(sp)
20404826:	6145                	addi	sp,sp,48
20404828:	8082                	ret

2040482a <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
2040482a:	7179                	addi	sp,sp,-48
2040482c:	d606                	sw	ra,44(sp)
2040482e:	d422                	sw	s0,40(sp)
20404830:	1800                	addi	s0,sp,48
20404832:	fca42e23          	sw	a0,-36(s0)
20404836:	fcb42c23          	sw	a1,-40(s0)
2040483a:	fcc42a23          	sw	a2,-44(s0)
2040483e:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20404842:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404846:	fdc42783          	lw	a5,-36(s0)
2040484a:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
2040484e:	fd842503          	lw	a0,-40(s0)
20404852:	3b49                	jal	204045e4 <__metal_valid_interrupt_id>
20404854:	87aa                	mv	a5,a0
20404856:	e399                	bnez	a5,2040485c <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20404858:	57d5                	li	a5,-11
2040485a:	a265                	j	20404a02 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
2040485c:	fd842703          	lw	a4,-40(s0)
20404860:	08000793          	li	a5,128
20404864:	00f71863          	bne	a4,a5,20404874 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20404868:	c73ff0ef          	jal	ra,204044da <__metal_controller_interrupt_vector_mode>
2040486c:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
2040486e:	c399                	beqz	a5,20404874 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20404870:	57cd                	li	a5,-13
20404872:	aa41                	j	20404a02 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20404874:	fd442783          	lw	a5,-44(s0)
20404878:	cfb9                	beqz	a5,204048d6 <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
2040487a:	fd842703          	lw	a4,-40(s0)
2040487e:	08000793          	li	a5,128
20404882:	00f71f63          	bne	a4,a5,204048a0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404886:	fe842783          	lw	a5,-24(s0)
2040488a:	fd442703          	lw	a4,-44(s0)
2040488e:	38e7a823          	sw	a4,912(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20404892:	fe842783          	lw	a5,-24(s0)
20404896:	fd042703          	lw	a4,-48(s0)
2040489a:	38e7ac23          	sw	a4,920(a5)
2040489e:	a285                	j	204049fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
204048a0:	fe842683          	lw	a3,-24(s0)
204048a4:	fd842703          	lw	a4,-40(s0)
204048a8:	87ba                	mv	a5,a4
204048aa:	0786                	slli	a5,a5,0x1
204048ac:	97ba                	add	a5,a5,a4
204048ae:	078e                	slli	a5,a5,0x3
204048b0:	97b6                	add	a5,a5,a3
204048b2:	fd442703          	lw	a4,-44(s0)
204048b6:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
204048ba:	fe842683          	lw	a3,-24(s0)
204048be:	fd842703          	lw	a4,-40(s0)
204048c2:	87ba                	mv	a5,a4
204048c4:	0786                	slli	a5,a5,0x1
204048c6:	97ba                	add	a5,a5,a4
204048c8:	078e                	slli	a5,a5,0x3
204048ca:	97b6                	add	a5,a5,a3
204048cc:	fd042703          	lw	a4,-48(s0)
204048d0:	08e7ac23          	sw	a4,152(a5)
204048d4:	a22d                	j	204049fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
204048d6:	fd842703          	lw	a4,-40(s0)
204048da:	08000793          	li	a5,128
204048de:	0cf70163          	beq	a4,a5,204049a0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x176>
204048e2:	fd842703          	lw	a4,-40(s0)
204048e6:	08000793          	li	a5,128
204048ea:	10e7c763          	blt	a5,a4,204049f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
204048ee:	fd842703          	lw	a4,-40(s0)
204048f2:	47fd                	li	a5,31
204048f4:	10e7c263          	blt	a5,a4,204049f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
204048f8:	fd842703          	lw	a4,-40(s0)
204048fc:	47c1                	li	a5,16
204048fe:	0cf75063          	bge	a4,a5,204049be <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404902:	fd842703          	lw	a4,-40(s0)
20404906:	47ad                	li	a5,11
20404908:	0af70b63          	beq	a4,a5,204049be <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
2040490c:	fd842703          	lw	a4,-40(s0)
20404910:	47ad                	li	a5,11
20404912:	0ee7c363          	blt	a5,a4,204049f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404916:	fd842703          	lw	a4,-40(s0)
2040491a:	478d                	li	a5,3
2040491c:	00f70863          	beq	a4,a5,2040492c <__metal_driver_riscv_cpu_controller_interrupt_register+0x102>
20404920:	fd842703          	lw	a4,-40(s0)
20404924:	479d                	li	a5,7
20404926:	04f70063          	beq	a4,a5,20404966 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13c>
2040492a:	a0f9                	j	204049f8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
2040492c:	fe842683          	lw	a3,-24(s0)
20404930:	fd842703          	lw	a4,-40(s0)
20404934:	87ba                	mv	a5,a4
20404936:	0786                	slli	a5,a5,0x1
20404938:	97ba                	add	a5,a5,a4
2040493a:	078e                	slli	a5,a5,0x3
2040493c:	97b6                	add	a5,a5,a3
2040493e:	20403737          	lui	a4,0x20403
20404942:	7ea70713          	addi	a4,a4,2026 # 204037ea <__metal_default_sw_handler>
20404946:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
2040494a:	fe842683          	lw	a3,-24(s0)
2040494e:	fd842703          	lw	a4,-40(s0)
20404952:	87ba                	mv	a5,a4
20404954:	0786                	slli	a5,a5,0x1
20404956:	97ba                	add	a5,a5,a4
20404958:	078e                	slli	a5,a5,0x3
2040495a:	97b6                	add	a5,a5,a3
2040495c:	fd042703          	lw	a4,-48(s0)
20404960:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20404964:	a869                	j	204049fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20404966:	fe842683          	lw	a3,-24(s0)
2040496a:	fd842703          	lw	a4,-40(s0)
2040496e:	87ba                	mv	a5,a4
20404970:	0786                	slli	a5,a5,0x1
20404972:	97ba                	add	a5,a5,a4
20404974:	078e                	slli	a5,a5,0x3
20404976:	97b6                	add	a5,a5,a3
20404978:	20404737          	lui	a4,0x20404
2040497c:	8fa70713          	addi	a4,a4,-1798 # 204038fa <__metal_default_timer_handler>
20404980:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20404984:	fe842683          	lw	a3,-24(s0)
20404988:	fd842703          	lw	a4,-40(s0)
2040498c:	87ba                	mv	a5,a4
2040498e:	0786                	slli	a5,a5,0x1
20404990:	97ba                	add	a5,a5,a4
20404992:	078e                	slli	a5,a5,0x3
20404994:	97b6                	add	a5,a5,a3
20404996:	fd042703          	lw	a4,-48(s0)
2040499a:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
2040499e:	a085                	j	204049fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
204049a0:	fe842783          	lw	a5,-24(s0)
204049a4:	20404737          	lui	a4,0x20404
204049a8:	8e470713          	addi	a4,a4,-1820 # 204038e4 <__metal_default_beu_handler>
204049ac:	38e7a823          	sw	a4,912(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
204049b0:	fe842783          	lw	a5,-24(s0)
204049b4:	fd042703          	lw	a4,-48(s0)
204049b8:	38e7ac23          	sw	a4,920(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
204049bc:	a089                	j	204049fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
204049be:	fe842683          	lw	a3,-24(s0)
204049c2:	fd842703          	lw	a4,-40(s0)
204049c6:	87ba                	mv	a5,a4
204049c8:	0786                	slli	a5,a5,0x1
204049ca:	97ba                	add	a5,a5,a4
204049cc:	078e                	slli	a5,a5,0x3
204049ce:	97b6                	add	a5,a5,a3
204049d0:	20403737          	lui	a4,0x20403
204049d4:	71270713          	addi	a4,a4,1810 # 20403712 <__metal_default_interrupt_handler>
204049d8:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
204049dc:	fe842683          	lw	a3,-24(s0)
204049e0:	fd842703          	lw	a4,-40(s0)
204049e4:	87ba                	mv	a5,a4
204049e6:	0786                	slli	a5,a5,0x1
204049e8:	97ba                	add	a5,a5,a4
204049ea:	078e                	slli	a5,a5,0x3
204049ec:	97b6                	add	a5,a5,a3
204049ee:	fd042703          	lw	a4,-48(s0)
204049f2:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
204049f6:	a021                	j	204049fe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
204049f8:	57d1                	li	a5,-12
204049fa:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
204049fe:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404a02:	853e                	mv	a0,a5
20404a04:	50b2                	lw	ra,44(sp)
20404a06:	5422                	lw	s0,40(sp)
20404a08:	6145                	addi	sp,sp,48
20404a0a:	8082                	ret

20404a0c <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404a0c:	1101                	addi	sp,sp,-32
20404a0e:	ce06                	sw	ra,28(sp)
20404a10:	cc22                	sw	s0,24(sp)
20404a12:	1000                	addi	s0,sp,32
20404a14:	fea42623          	sw	a0,-20(s0)
20404a18:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404a1c:	fe842783          	lw	a5,-24(s0)
20404a20:	4605                	li	a2,1
20404a22:	85be                	mv	a1,a5
20404a24:	fec42503          	lw	a0,-20(s0)
20404a28:	c15ff0ef          	jal	ra,2040463c <__metal_local_interrupt_enable>
20404a2c:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:554
}
20404a2e:	853e                	mv	a0,a5
20404a30:	40f2                	lw	ra,28(sp)
20404a32:	4462                	lw	s0,24(sp)
20404a34:	6105                	addi	sp,sp,32
20404a36:	8082                	ret

20404a38 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20404a38:	1101                	addi	sp,sp,-32
20404a3a:	ce06                	sw	ra,28(sp)
20404a3c:	cc22                	sw	s0,24(sp)
20404a3e:	1000                	addi	s0,sp,32
20404a40:	fea42623          	sw	a0,-20(s0)
20404a44:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20404a48:	fe842783          	lw	a5,-24(s0)
20404a4c:	4601                	li	a2,0
20404a4e:	85be                	mv	a1,a5
20404a50:	fec42503          	lw	a0,-20(s0)
20404a54:	be9ff0ef          	jal	ra,2040463c <__metal_local_interrupt_enable>
20404a58:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:559
}
20404a5a:	853e                	mv	a0,a5
20404a5c:	40f2                	lw	ra,28(sp)
20404a5e:	4462                	lw	s0,24(sp)
20404a60:	6105                	addi	sp,sp,32
20404a62:	8082                	ret

20404a64 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20404a64:	1101                	addi	sp,sp,-32
20404a66:	ce06                	sw	ra,28(sp)
20404a68:	cc22                	sw	s0,24(sp)
20404a6a:	1000                	addi	s0,sp,32
20404a6c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20404a70:	a6bff0ef          	jal	ra,204044da <__metal_controller_interrupt_vector_mode>
20404a74:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:593
}
20404a76:	853e                	mv	a0,a5
20404a78:	40f2                	lw	ra,28(sp)
20404a7a:	4462                	lw	s0,24(sp)
20404a7c:	6105                	addi	sp,sp,32
20404a7e:	8082                	ret

20404a80 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20404a80:	1101                	addi	sp,sp,-32
20404a82:	ce06                	sw	ra,28(sp)
20404a84:	cc22                	sw	s0,24(sp)
20404a86:	1000                	addi	s0,sp,32
20404a88:	fea42623          	sw	a0,-20(s0)
20404a8c:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20404a90:	fe842783          	lw	a5,-24(s0)
20404a94:	eb99                	bnez	a5,20404aaa <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20404a96:	204047b7          	lui	a5,0x20404
20404a9a:	98078593          	addi	a1,a5,-1664 # 20403980 <__metal_exception_handler>
20404a9e:	fe842503          	lw	a0,-24(s0)
20404aa2:	a91ff0ef          	jal	ra,20404532 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404aa6:	4781                	li	a5,0
20404aa8:	a00d                	j	20404aca <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404aaa:	fe842703          	lw	a4,-24(s0)
20404aae:	4785                	li	a5,1
20404ab0:	00f71c63          	bne	a4,a5,20404ac8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404ab4:	204077b7          	lui	a5,0x20407
20404ab8:	30078593          	addi	a1,a5,768 # 20407300 <__metal_vector_table>
20404abc:	fe842503          	lw	a0,-24(s0)
20404ac0:	a73ff0ef          	jal	ra,20404532 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404ac4:	4781                	li	a5,0
20404ac6:	a011                	j	20404aca <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404ac8:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404aca:	853e                	mv	a0,a5
20404acc:	40f2                	lw	ra,28(sp)
20404ace:	4462                	lw	s0,24(sp)
20404ad0:	6105                	addi	sp,sp,32
20404ad2:	8082                	ret

20404ad4 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404ad4:	1101                	addi	sp,sp,-32
20404ad6:	ce22                	sw	s0,28(sp)
20404ad8:	1000                	addi	s0,sp,32
20404ada:	fea42623          	sw	a0,-20(s0)
20404ade:	feb42423          	sw	a1,-24(s0)
20404ae2:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404ae6:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404ae8:	853e                	mv	a0,a5
20404aea:	4472                	lw	s0,28(sp)
20404aec:	6105                	addi	sp,sp,32
20404aee:	8082                	ret

20404af0 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20404af0:	7139                	addi	sp,sp,-64
20404af2:	de22                	sw	s0,60(sp)
20404af4:	0080                	addi	s0,sp,64
20404af6:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404afa:	4501                	li	a0,0
20404afc:	4581                	li	a1,0
20404afe:	fea42423          	sw	a0,-24(s0)
20404b02:	feb42623          	sw	a1,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404b06:	b80025f3          	csrr	a1,mcycleh
20404b0a:	feb42223          	sw	a1,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20404b0e:	b00025f3          	csrr	a1,mcycle
20404b12:	feb42023          	sw	a1,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404b16:	b80025f3          	csrr	a1,mcycleh
20404b1a:	fcb42e23          	sw	a1,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20404b1e:	fe442503          	lw	a0,-28(s0)
20404b22:	fdc42583          	lw	a1,-36(s0)
20404b26:	feb510e3          	bne	a0,a1,20404b06 <__metal_driver_cpu_mcycle_get+0x16>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20404b2a:	fe442583          	lw	a1,-28(s0)
20404b2e:	882e                	mv	a6,a1
20404b30:	4881                	li	a7,0
20404b32:	00081793          	slli	a5,a6,0x0
20404b36:	4701                	li	a4,0
20404b38:	fe042583          	lw	a1,-32(s0)
20404b3c:	862e                	mv	a2,a1
20404b3e:	4681                	li	a3,0
20404b40:	00c765b3          	or	a1,a4,a2
20404b44:	feb42423          	sw	a1,-24(s0)
20404b48:	8fd5                	or	a5,a5,a3
20404b4a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20404b4e:	fe842703          	lw	a4,-24(s0)
20404b52:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:640
}
20404b56:	853a                	mv	a0,a4
20404b58:	85be                	mv	a1,a5
20404b5a:	5472                	lw	s0,60(sp)
20404b5c:	6121                	addi	sp,sp,64
20404b5e:	8082                	ret

20404b60 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20404b60:	7179                	addi	sp,sp,-48
20404b62:	d606                	sw	ra,44(sp)
20404b64:	d422                	sw	s0,40(sp)
20404b66:	d24a                	sw	s2,36(sp)
20404b68:	d04e                	sw	s3,32(sp)
20404b6a:	1800                	addi	s0,sp,48
20404b6c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20404b70:	fdc42783          	lw	a5,-36(s0)
20404b74:	e781                	bnez	a5,20404b7c <__metal_driver_cpu_timebase_get+0x1c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20404b76:	4901                	li	s2,0
20404b78:	4981                	li	s3,0
20404b7a:	a821                	j	20404b92 <__metal_driver_cpu_timebase_get+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20404b7c:	fdc42503          	lw	a0,-36(s0)
20404b80:	995fe0ef          	jal	ra,20403514 <__metal_driver_cpu_timebase>
20404b84:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20404b88:	fec42783          	lw	a5,-20(s0)
20404b8c:	893e                	mv	s2,a5
20404b8e:	87fd                	srai	a5,a5,0x1f
20404b90:	89be                	mv	s3,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:650
}
20404b92:	874a                	mv	a4,s2
20404b94:	87ce                	mv	a5,s3
20404b96:	853a                	mv	a0,a4
20404b98:	85be                	mv	a1,a5
20404b9a:	50b2                	lw	ra,44(sp)
20404b9c:	5422                	lw	s0,40(sp)
20404b9e:	5912                	lw	s2,36(sp)
20404ba0:	5982                	lw	s3,32(sp)
20404ba2:	6145                	addi	sp,sp,48
20404ba4:	8082                	ret

20404ba6 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404ba6:	7179                	addi	sp,sp,-48
20404ba8:	d606                	sw	ra,44(sp)
20404baa:	d422                	sw	s0,40(sp)
20404bac:	1800                	addi	s0,sp,48
20404bae:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20404bb2:	4781                	li	a5,0
20404bb4:	4801                	li	a6,0
20404bb6:	fef42023          	sw	a5,-32(s0)
20404bba:	ff042223          	sw	a6,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404bbe:	fdc42503          	lw	a0,-36(s0)
20404bc2:	97dfe0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404bc6:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20404bca:	fec42783          	lw	a5,-20(s0)
20404bce:	c78d                	beqz	a5,20404bf8 <__metal_driver_cpu_mtime_get+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404bd0:	fec42783          	lw	a5,-20(s0)
20404bd4:	13c7a783          	lw	a5,316(a5)
20404bd8:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20404bdc:	fe842783          	lw	a5,-24(s0)
20404be0:	cf81                	beqz	a5,20404bf8 <__metal_driver_cpu_mtime_get+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20404be2:	fe842783          	lw	a5,-24(s0)
20404be6:	439c                	lw	a5,0(a5)
20404be8:	47f8                	lw	a4,76(a5)
20404bea:	fe040793          	addi	a5,s0,-32
20404bee:	863e                	mv	a2,a5
20404bf0:	4585                	li	a1,1
20404bf2:	fe842503          	lw	a0,-24(s0)
20404bf6:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404bf8:	fe042703          	lw	a4,-32(s0)
20404bfc:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:667
}
20404c00:	853a                	mv	a0,a4
20404c02:	85be                	mv	a1,a5
20404c04:	50b2                	lw	ra,44(sp)
20404c06:	5422                	lw	s0,40(sp)
20404c08:	6145                	addi	sp,sp,48
20404c0a:	8082                	ret

20404c0c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404c0c:	7179                	addi	sp,sp,-48
20404c0e:	d606                	sw	ra,44(sp)
20404c10:	d422                	sw	s0,40(sp)
20404c12:	d226                	sw	s1,36(sp)
20404c14:	1800                	addi	s0,sp,48
20404c16:	fca42e23          	sw	a0,-36(s0)
20404c1a:	fcb42823          	sw	a1,-48(s0)
20404c1e:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404c22:	57fd                	li	a5,-1
20404c24:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404c28:	fdc42503          	lw	a0,-36(s0)
20404c2c:	913fe0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404c30:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20404c34:	fe842783          	lw	a5,-24(s0)
20404c38:	cf8d                	beqz	a5,20404c72 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404c3a:	fe842783          	lw	a5,-24(s0)
20404c3e:	13c7a783          	lw	a5,316(a5)
20404c42:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20404c46:	fe442783          	lw	a5,-28(s0)
20404c4a:	c785                	beqz	a5,20404c72 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20404c4c:	fe442783          	lw	a5,-28(s0)
20404c50:	439c                	lw	a5,0(a5)
20404c52:	4ba4                	lw	s1,80(a5)
20404c54:	fdc42503          	lw	a0,-36(s0)
20404c58:	899fe0ef          	jal	ra,204034f0 <__metal_driver_cpu_hartid>
20404c5c:	87aa                	mv	a5,a0
20404c5e:	fd042603          	lw	a2,-48(s0)
20404c62:	fd442683          	lw	a3,-44(s0)
20404c66:	85be                	mv	a1,a5
20404c68:	fe442503          	lw	a0,-28(s0)
20404c6c:	9482                	jalr	s1
20404c6e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20404c72:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:685
}
20404c76:	853e                	mv	a0,a5
20404c78:	50b2                	lw	ra,44(sp)
20404c7a:	5422                	lw	s0,40(sp)
20404c7c:	5492                	lw	s1,36(sp)
20404c7e:	6145                	addi	sp,sp,48
20404c80:	8082                	ret

20404c82 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20404c82:	1101                	addi	sp,sp,-32
20404c84:	ce22                	sw	s0,28(sp)
20404c86:	1000                	addi	s0,sp,32
20404c88:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404c8c:	800007b7          	lui	a5,0x80000
20404c90:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffecdc>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20404c94:	853e                	mv	a0,a5
20404c96:	4472                	lw	s0,28(sp)
20404c98:	6105                	addi	sp,sp,32
20404c9a:	8082                	ret

20404c9c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20404c9c:	1101                	addi	sp,sp,-32
20404c9e:	ce22                	sw	s0,28(sp)
20404ca0:	1000                	addi	s0,sp,32
20404ca2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20404ca6:	479d                	li	a5,7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:703
}
20404ca8:	853e                	mv	a0,a5
20404caa:	4472                	lw	s0,28(sp)
20404cac:	6105                	addi	sp,sp,32
20404cae:	8082                	ret

20404cb0 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20404cb0:	1101                	addi	sp,sp,-32
20404cb2:	ce22                	sw	s0,28(sp)
20404cb4:	1000                	addi	s0,sp,32
20404cb6:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404cba:	800007b7          	lui	a5,0x80000
20404cbe:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffecdc>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20404cc2:	853e                	mv	a0,a5
20404cc4:	4472                	lw	s0,28(sp)
20404cc6:	6105                	addi	sp,sp,32
20404cc8:	8082                	ret

20404cca <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20404cca:	1101                	addi	sp,sp,-32
20404ccc:	ce22                	sw	s0,28(sp)
20404cce:	1000                	addi	s0,sp,32
20404cd0:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20404cd4:	478d                	li	a5,3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:721
}
20404cd6:	853e                	mv	a0,a5
20404cd8:	4472                	lw	s0,28(sp)
20404cda:	6105                	addi	sp,sp,32
20404cdc:	8082                	ret

20404cde <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404cde:	7179                	addi	sp,sp,-48
20404ce0:	d606                	sw	ra,44(sp)
20404ce2:	d422                	sw	s0,40(sp)
20404ce4:	1800                	addi	s0,sp,48
20404ce6:	fca42e23          	sw	a0,-36(s0)
20404cea:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20404cee:	57fd                	li	a5,-1
20404cf0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404cf4:	fdc42503          	lw	a0,-36(s0)
20404cf8:	847fe0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404cfc:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20404d00:	fe842783          	lw	a5,-24(s0)
20404d04:	c79d                	beqz	a5,20404d32 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404d06:	fe842783          	lw	a5,-24(s0)
20404d0a:	0dc7a783          	lw	a5,220(a5)
20404d0e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20404d12:	fe442783          	lw	a5,-28(s0)
20404d16:	cf91                	beqz	a5,20404d32 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404d18:	fe442783          	lw	a5,-28(s0)
20404d1c:	439c                	lw	a5,0(a5)
20404d1e:	47f8                	lw	a4,76(a5)
20404d20:	fd840793          	addi	a5,s0,-40
20404d24:	863e                	mv	a2,a5
20404d26:	458d                	li	a1,3
20404d28:	fe442503          	lw	a0,-28(s0)
20404d2c:	9702                	jalr	a4
20404d2e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20404d32:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:738
}
20404d36:	853e                	mv	a0,a5
20404d38:	50b2                	lw	ra,44(sp)
20404d3a:	5422                	lw	s0,40(sp)
20404d3c:	6145                	addi	sp,sp,48
20404d3e:	8082                	ret

20404d40 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404d40:	7179                	addi	sp,sp,-48
20404d42:	d606                	sw	ra,44(sp)
20404d44:	d422                	sw	s0,40(sp)
20404d46:	1800                	addi	s0,sp,48
20404d48:	fca42e23          	sw	a0,-36(s0)
20404d4c:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20404d50:	57fd                	li	a5,-1
20404d52:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404d56:	fdc42503          	lw	a0,-36(s0)
20404d5a:	fe4fe0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404d5e:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20404d62:	fe842783          	lw	a5,-24(s0)
20404d66:	c79d                	beqz	a5,20404d94 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404d68:	fe842783          	lw	a5,-24(s0)
20404d6c:	0dc7a783          	lw	a5,220(a5)
20404d70:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20404d74:	fe442783          	lw	a5,-28(s0)
20404d78:	cf91                	beqz	a5,20404d94 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20404d7a:	fe442783          	lw	a5,-28(s0)
20404d7e:	439c                	lw	a5,0(a5)
20404d80:	47f8                	lw	a4,76(a5)
20404d82:	fd840793          	addi	a5,s0,-40
20404d86:	863e                	mv	a2,a5
20404d88:	4589                	li	a1,2
20404d8a:	fe442503          	lw	a0,-28(s0)
20404d8e:	9702                	jalr	a4
20404d90:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20404d94:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:755
}
20404d98:	853e                	mv	a0,a5
20404d9a:	50b2                	lw	ra,44(sp)
20404d9c:	5422                	lw	s0,40(sp)
20404d9e:	6145                	addi	sp,sp,48
20404da0:	8082                	ret

20404da2 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20404da2:	7179                	addi	sp,sp,-48
20404da4:	d606                	sw	ra,44(sp)
20404da6:	d422                	sw	s0,40(sp)
20404da8:	1800                	addi	s0,sp,48
20404daa:	fca42e23          	sw	a0,-36(s0)
20404dae:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20404db2:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404db6:	fdc42503          	lw	a0,-36(s0)
20404dba:	f84fe0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404dbe:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20404dc2:	fe842783          	lw	a5,-24(s0)
20404dc6:	c79d                	beqz	a5,20404df4 <__metal_driver_cpu_get_msip+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404dc8:	fe842783          	lw	a5,-24(s0)
20404dcc:	0dc7a783          	lw	a5,220(a5)
20404dd0:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20404dd4:	fe442783          	lw	a5,-28(s0)
20404dd8:	cf91                	beqz	a5,20404df4 <__metal_driver_cpu_get_msip+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20404dda:	fe442783          	lw	a5,-28(s0)
20404dde:	439c                	lw	a5,0(a5)
20404de0:	47f8                	lw	a4,76(a5)
20404de2:	fd840793          	addi	a5,s0,-40
20404de6:	863e                	mv	a2,a5
20404de8:	4591                	li	a1,4
20404dea:	fe442503          	lw	a0,-28(s0)
20404dee:	9702                	jalr	a4
20404df0:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20404df4:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404df8:	853e                	mv	a0,a5
20404dfa:	50b2                	lw	ra,44(sp)
20404dfc:	5422                	lw	s0,40(sp)
20404dfe:	6145                	addi	sp,sp,48
20404e00:	8082                	ret

20404e02 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20404e02:	1101                	addi	sp,sp,-32
20404e04:	ce06                	sw	ra,28(sp)
20404e06:	cc22                	sw	s0,24(sp)
20404e08:	1000                	addi	s0,sp,32
20404e0a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20404e0e:	fec42503          	lw	a0,-20(s0)
20404e12:	f2cfe0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404e16:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:777
}
20404e18:	853e                	mv	a0,a5
20404e1a:	40f2                	lw	ra,28(sp)
20404e1c:	4462                	lw	s0,24(sp)
20404e1e:	6105                	addi	sp,sp,32
20404e20:	8082                	ret

20404e22 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20404e22:	7179                	addi	sp,sp,-48
20404e24:	d606                	sw	ra,44(sp)
20404e26:	d422                	sw	s0,40(sp)
20404e28:	1800                	addi	s0,sp,48
20404e2a:	fca42e23          	sw	a0,-36(s0)
20404e2e:	fcb42c23          	sw	a1,-40(s0)
20404e32:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404e36:	fdc42503          	lw	a0,-36(s0)
20404e3a:	f04fe0ef          	jal	ra,2040353e <__metal_driver_cpu_interrupt_controller>
20404e3e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20404e42:	fec42783          	lw	a5,-20(s0)
20404e46:	cb99                	beqz	a5,20404e5c <__metal_driver_cpu_exception_register+0x3a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20404e48:	fd442603          	lw	a2,-44(s0)
20404e4c:	fd842583          	lw	a1,-40(s0)
20404e50:	fec42503          	lw	a0,-20(s0)
20404e54:	8a5ff0ef          	jal	ra,204046f8 <__metal_exception_register>
20404e58:	87aa                	mv	a5,a0
20404e5a:	a011                	j	20404e5e <__metal_driver_cpu_exception_register+0x3c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20404e5c:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:808
}
20404e5e:	853e                	mv	a0,a5
20404e60:	50b2                	lw	ra,44(sp)
20404e62:	5422                	lw	s0,40(sp)
20404e64:	6145                	addi	sp,sp,48
20404e66:	8082                	ret

20404e68 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20404e68:	1101                	addi	sp,sp,-32
20404e6a:	ce22                	sw	s0,28(sp)
20404e6c:	1000                	addi	s0,sp,32
20404e6e:	fea42623          	sw	a0,-20(s0)
20404e72:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20404e76:	fe842783          	lw	a5,-24(s0)
20404e7a:	0007d783          	lhu	a5,0(a5)
20404e7e:	0037f713          	andi	a4,a5,3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20404e82:	478d                	li	a5,3
20404e84:	00f71463          	bne	a4,a5,20404e8c <__metal_driver_cpu_get_instruction_length+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20404e88:	4791                	li	a5,4
20404e8a:	a011                	j	20404e8e <__metal_driver_cpu_get_instruction_length+0x26>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20404e8c:	4789                	li	a5,2
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20404e8e:	853e                	mv	a0,a5
20404e90:	4472                	lw	s0,28(sp)
20404e92:	6105                	addi	sp,sp,32
20404e94:	8082                	ret

20404e96 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20404e96:	7179                	addi	sp,sp,-48
20404e98:	d622                	sw	s0,44(sp)
20404e9a:	1800                	addi	s0,sp,48
20404e9c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20404ea0:	341027f3          	csrr	a5,mepc
20404ea4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20404ea8:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:827
}
20404eac:	853e                	mv	a0,a5
20404eae:	5432                	lw	s0,44(sp)
20404eb0:	6145                	addi	sp,sp,48
20404eb2:	8082                	ret

20404eb4 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20404eb4:	1101                	addi	sp,sp,-32
20404eb6:	ce22                	sw	s0,28(sp)
20404eb8:	1000                	addi	s0,sp,32
20404eba:	fea42623          	sw	a0,-20(s0)
20404ebe:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20404ec2:	fe842783          	lw	a5,-24(s0)
20404ec6:	34179073          	csrw	mepc,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20404eca:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:832
}
20404ecc:	853e                	mv	a0,a5
20404ece:	4472                	lw	s0,28(sp)
20404ed0:	6105                	addi	sp,sp,32
20404ed2:	8082                	ret

20404ed4 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20404ed4:	1101                	addi	sp,sp,-32
20404ed6:	ce06                	sw	ra,28(sp)
20404ed8:	cc22                	sw	s0,24(sp)
20404eda:	1000                	addi	s0,sp,32
20404edc:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20404ee0:	fec42503          	lw	a0,-20(s0)
20404ee4:	e84fe0ef          	jal	ra,20403568 <__metal_driver_cpu_buserror>
20404ee8:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:836
}
20404eea:	853e                	mv	a0,a5
20404eec:	40f2                	lw	ra,28(sp)
20404eee:	4462                	lw	s0,24(sp)
20404ef0:	6105                	addi	sp,sp,32
20404ef2:	8082                	ret

20404ef4 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20404ef4:	1101                	addi	sp,sp,-32
20404ef6:	ce22                	sw	s0,28(sp)
20404ef8:	1000                	addi	s0,sp,32
20404efa:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404efe:	fec42703          	lw	a4,-20(s0)
20404f02:	800007b7          	lui	a5,0x80000
20404f06:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe988>
20404f0a:	00f71563          	bne	a4,a5,20404f14 <__metal_driver_sifive_plic0_control_base+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20404f0e:	0c0007b7          	lui	a5,0xc000
20404f12:	a011                	j	20404f16 <__metal_driver_sifive_plic0_control_base+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:319
	}
	else {
		return 0;
20404f14:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:321
	}
}
20404f16:	853e                	mv	a0,a5
20404f18:	4472                	lw	s0,28(sp)
20404f1a:	6105                	addi	sp,sp,32
20404f1c:	8082                	ret

20404f1e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20404f1e:	1101                	addi	sp,sp,-32
20404f20:	ce22                	sw	s0,28(sp)
20404f22:	1000                	addi	s0,sp,32
20404f24:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404f28:	fec42703          	lw	a4,-20(s0)
20404f2c:	800007b7          	lui	a5,0x80000
20404f30:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe988>
20404f34:	00f71463          	bne	a4,a5,20404f3c <__metal_driver_sifive_plic0_num_interrupts+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20404f38:	47ed                	li	a5,27
20404f3a:	a011                	j	20404f3e <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:339
	}
	else {
		return 0;
20404f3c:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:341
	}
}
20404f3e:	853e                	mv	a0,a5
20404f40:	4472                	lw	s0,28(sp)
20404f42:	6105                	addi	sp,sp,32
20404f44:	8082                	ret

20404f46 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20404f46:	1101                	addi	sp,sp,-32
20404f48:	ce22                	sw	s0,28(sp)
20404f4a:	1000                	addi	s0,sp,32
20404f4c:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404f50:	fec42703          	lw	a4,-20(s0)
20404f54:	800007b7          	lui	a5,0x80000
20404f58:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe988>
20404f5c:	00f71463          	bne	a4,a5,20404f64 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20404f60:	479d                	li	a5,7
20404f62:	a011                	j	20404f66 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:349
	}
	else {
		return 0;
20404f64:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:351
	}
}
20404f66:	853e                	mv	a0,a5
20404f68:	4472                	lw	s0,28(sp)
20404f6a:	6105                	addi	sp,sp,32
20404f6c:	8082                	ret

20404f6e <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20404f6e:	1101                	addi	sp,sp,-32
20404f70:	ce22                	sw	s0,28(sp)
20404f72:	1000                	addi	s0,sp,32
20404f74:	fea42623          	sw	a0,-20(s0)
20404f78:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:355
	if (idx == 0) {
20404f7c:	fe842783          	lw	a5,-24(s0)
20404f80:	e791                	bnez	a5,20404f8c <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20404f82:	800007b7          	lui	a5,0x80000
20404f86:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe5b8>
20404f8a:	a011                	j	20404f8e <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:359
	}
	else {
		return NULL;
20404f8c:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:361
	}
}
20404f8e:	853e                	mv	a0,a5
20404f90:	4472                	lw	s0,28(sp)
20404f92:	6105                	addi	sp,sp,32
20404f94:	8082                	ret

20404f96 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20404f96:	1101                	addi	sp,sp,-32
20404f98:	ce22                	sw	s0,28(sp)
20404f9a:	1000                	addi	s0,sp,32
20404f9c:	fea42623          	sw	a0,-20(s0)
20404fa0:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:365
	if (idx == 0) {
20404fa4:	fe842783          	lw	a5,-24(s0)
20404fa8:	e399                	bnez	a5,20404fae <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:366
		return 11;
20404faa:	47ad                	li	a5,11
20404fac:	a011                	j	20404fb0 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:369
	}
	else {
		return 0;
20404fae:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:371
	}
}
20404fb0:	853e                	mv	a0,a5
20404fb2:	4472                	lw	s0,28(sp)
20404fb4:	6105                	addi	sp,sp,32
20404fb6:	8082                	ret

20404fb8 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20404fb8:	1101                	addi	sp,sp,-32
20404fba:	ce22                	sw	s0,28(sp)
20404fbc:	1000                	addi	s0,sp,32
20404fbe:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:375
	if (hartid == 0) {
20404fc2:	fec42783          	lw	a5,-20(s0)
20404fc6:	e399                	bnez	a5,20404fcc <__metal_driver_sifive_plic0_context_ids+0x14>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:376
		return 0;
20404fc8:	4781                	li	a5,0
20404fca:	a011                	j	20404fce <__metal_driver_sifive_plic0_context_ids+0x16>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:379
	}
	else {
		return -1;
20404fcc:	57fd                	li	a5,-1
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:381
	}
}
20404fce:	853e                	mv	a0,a5
20404fd0:	4472                	lw	s0,28(sp)
20404fd2:	6105                	addi	sp,sp,32
20404fd4:	8082                	ret

20404fd6 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20404fd6:	7179                	addi	sp,sp,-48
20404fd8:	d606                	sw	ra,44(sp)
20404fda:	d422                	sw	s0,40(sp)
20404fdc:	1800                	addi	s0,sp,48
20404fde:	fca42e23          	sw	a0,-36(s0)
20404fe2:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404fe6:	fdc42503          	lw	a0,-36(s0)
20404fea:	3729                	jal	20404ef4 <__metal_driver_sifive_plic0_control_base>
20404fec:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20404ff0:	fd842783          	lw	a5,-40(s0)
20404ff4:	00c79713          	slli	a4,a5,0xc
20404ff8:	fec42783          	lw	a5,-20(s0)
20404ffc:	973e                	add	a4,a4,a5
20404ffe:	002007b7          	lui	a5,0x200
20405002:	0791                	addi	a5,a5,4
20405004:	97ba                	add	a5,a5,a4
20405006:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20405008:	853e                	mv	a0,a5
2040500a:	50b2                	lw	ra,44(sp)
2040500c:	5422                	lw	s0,40(sp)
2040500e:	6145                	addi	sp,sp,48
20405010:	8082                	ret

20405012 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20405012:	7179                	addi	sp,sp,-48
20405014:	d606                	sw	ra,44(sp)
20405016:	d422                	sw	s0,40(sp)
20405018:	1800                	addi	s0,sp,48
2040501a:	fca42e23          	sw	a0,-36(s0)
2040501e:	fcb42c23          	sw	a1,-40(s0)
20405022:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405026:	fdc42503          	lw	a0,-36(s0)
2040502a:	35e9                	jal	20404ef4 <__metal_driver_sifive_plic0_control_base>
2040502c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20405030:	fd842783          	lw	a5,-40(s0)
20405034:	00c79713          	slli	a4,a5,0xc
20405038:	fec42783          	lw	a5,-20(s0)
2040503c:	973e                	add	a4,a4,a5
2040503e:	002007b7          	lui	a5,0x200
20405042:	0791                	addi	a5,a5,4
20405044:	97ba                	add	a5,a5,a4
20405046:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20405048:	fd442783          	lw	a5,-44(s0)
2040504c:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:35
}
2040504e:	0001                	nop
20405050:	50b2                	lw	ra,44(sp)
20405052:	5422                	lw	s0,40(sp)
20405054:	6145                	addi	sp,sp,48
20405056:	8082                	ret

20405058 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20405058:	7179                	addi	sp,sp,-48
2040505a:	d606                	sw	ra,44(sp)
2040505c:	d422                	sw	s0,40(sp)
2040505e:	1800                	addi	s0,sp,48
20405060:	fca42e23          	sw	a0,-36(s0)
20405064:	fcb42c23          	sw	a1,-40(s0)
20405068:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040506c:	fdc42503          	lw	a0,-36(s0)
20405070:	3551                	jal	20404ef4 <__metal_driver_sifive_plic0_control_base>
20405072:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20405076:	fd842783          	lw	a5,-40(s0)
2040507a:	00c79713          	slli	a4,a5,0xc
2040507e:	fec42783          	lw	a5,-20(s0)
20405082:	973e                	add	a4,a4,a5
20405084:	002007b7          	lui	a5,0x200
20405088:	97ba                	add	a5,a5,a4
2040508a:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2040508c:	fd442783          	lw	a5,-44(s0)
20405090:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20405092:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405094:	853e                	mv	a0,a5
20405096:	50b2                	lw	ra,44(sp)
20405098:	5422                	lw	s0,40(sp)
2040509a:	6145                	addi	sp,sp,48
2040509c:	8082                	ret

2040509e <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2040509e:	7179                	addi	sp,sp,-48
204050a0:	d606                	sw	ra,44(sp)
204050a2:	d422                	sw	s0,40(sp)
204050a4:	1800                	addi	s0,sp,48
204050a6:	fca42e23          	sw	a0,-36(s0)
204050aa:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204050ae:	fdc42503          	lw	a0,-36(s0)
204050b2:	3589                	jal	20404ef4 <__metal_driver_sifive_plic0_control_base>
204050b4:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
204050b8:	fd842783          	lw	a5,-40(s0)
204050bc:	00c79713          	slli	a4,a5,0xc
204050c0:	fec42783          	lw	a5,-20(s0)
204050c4:	973e                	add	a4,a4,a5
204050c6:	002007b7          	lui	a5,0x200
204050ca:	97ba                	add	a5,a5,a4
204050cc:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
204050ce:	853e                	mv	a0,a5
204050d0:	50b2                	lw	ra,44(sp)
204050d2:	5422                	lw	s0,40(sp)
204050d4:	6145                	addi	sp,sp,48
204050d6:	8082                	ret

204050d8 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
204050d8:	7179                	addi	sp,sp,-48
204050da:	d606                	sw	ra,44(sp)
204050dc:	d422                	sw	s0,40(sp)
204050de:	1800                	addi	s0,sp,48
204050e0:	fca42e23          	sw	a0,-36(s0)
204050e4:	fcb42c23          	sw	a1,-40(s0)
204050e8:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204050ec:	fdc42503          	lw	a0,-36(s0)
204050f0:	3511                	jal	20404ef4 <__metal_driver_sifive_plic0_control_base>
204050f2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
204050f6:	fdc42503          	lw	a0,-36(s0)
204050fa:	35b1                	jal	20404f46 <__metal_driver_sifive_plic0_max_priority>
204050fc:	87aa                	mv	a5,a0
204050fe:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20405102:	fe842783          	lw	a5,-24(s0)
20405106:	c785                	beqz	a5,2040512e <__metal_driver_riscv_plic0_set_priority+0x56>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405108:	fd442703          	lw	a4,-44(s0)
2040510c:	fe842783          	lw	a5,-24(s0)
20405110:	00f77f63          	bgeu	a4,a5,2040512e <__metal_driver_riscv_plic0_set_priority+0x56>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20405114:	fd842783          	lw	a5,-40(s0)
20405118:	078a                	slli	a5,a5,0x2
2040511a:	873e                	mv	a4,a5
2040511c:	fec42783          	lw	a5,-20(s0)
20405120:	97ba                	add	a5,a5,a4
20405122:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20405124:	fd442783          	lw	a5,-44(s0)
20405128:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
2040512a:	4781                	li	a5,0
2040512c:	a011                	j	20405130 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
2040512e:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:72
}
20405130:	853e                	mv	a0,a5
20405132:	50b2                	lw	ra,44(sp)
20405134:	5422                	lw	s0,40(sp)
20405136:	6145                	addi	sp,sp,48
20405138:	8082                	ret

2040513a <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2040513a:	7179                	addi	sp,sp,-48
2040513c:	d606                	sw	ra,44(sp)
2040513e:	d422                	sw	s0,40(sp)
20405140:	1800                	addi	s0,sp,48
20405142:	fca42e23          	sw	a0,-36(s0)
20405146:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040514a:	fdc42503          	lw	a0,-36(s0)
2040514e:	335d                	jal	20404ef4 <__metal_driver_sifive_plic0_control_base>
20405150:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20405154:	fd842783          	lw	a5,-40(s0)
20405158:	078a                	slli	a5,a5,0x2
2040515a:	873e                	mv	a4,a5
2040515c:	fec42783          	lw	a5,-20(s0)
20405160:	97ba                	add	a5,a5,a4
20405162:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20405164:	853e                	mv	a0,a5
20405166:	50b2                	lw	ra,44(sp)
20405168:	5422                	lw	s0,40(sp)
2040516a:	6145                	addi	sp,sp,48
2040516c:	8082                	ret

2040516e <__metal_plic0_enable>:
__metal_plic0_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2040516e:	7179                	addi	sp,sp,-48
20405170:	d606                	sw	ra,44(sp)
20405172:	d422                	sw	s0,40(sp)
20405174:	1800                	addi	s0,sp,48
20405176:	fca42e23          	sw	a0,-36(s0)
2040517a:	fcb42c23          	sw	a1,-40(s0)
2040517e:	fcc42a23          	sw	a2,-44(s0)
20405182:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405186:	fdc42503          	lw	a0,-36(s0)
2040518a:	d6bff0ef          	jal	ra,20404ef4 <__metal_driver_sifive_plic0_control_base>
2040518e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20405192:	fd842783          	lw	a5,-40(s0)
20405196:	00779713          	slli	a4,a5,0x7
2040519a:	fec42783          	lw	a5,-20(s0)
2040519e:	97ba                	add	a5,a5,a4
204051a0:	fd442703          	lw	a4,-44(s0)
204051a4:	8715                	srai	a4,a4,0x5
204051a6:	070a                	slli	a4,a4,0x2
204051a8:	973e                	add	a4,a4,a5
204051aa:	6789                	lui	a5,0x2
204051ac:	97ba                	add	a5,a5,a4
204051ae:	439c                	lw	a5,0(a5)
204051b0:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204051b4:	fd042783          	lw	a5,-48(s0)
204051b8:	cf81                	beqz	a5,204051d0 <__metal_plic0_enable+0x62>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
204051ba:	fd442783          	lw	a5,-44(s0)
204051be:	8bfd                	andi	a5,a5,31
204051c0:	4705                	li	a4,1
204051c2:	00f717b3          	sll	a5,a4,a5
204051c6:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204051c8:	fe842783          	lw	a5,-24(s0)
204051cc:	8fd9                	or	a5,a5,a4
204051ce:	a829                	j	204051e8 <__metal_plic0_enable+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
204051d0:	fd442783          	lw	a5,-44(s0)
204051d4:	8bfd                	andi	a5,a5,31
204051d6:	4705                	li	a4,1
204051d8:	00f717b3          	sll	a5,a4,a5
204051dc:	fff7c793          	not	a5,a5
204051e0:	873e                	mv	a4,a5
204051e2:	fe842783          	lw	a5,-24(s0)
204051e6:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
204051e8:	fd842703          	lw	a4,-40(s0)
204051ec:	00771693          	slli	a3,a4,0x7
204051f0:	fec42703          	lw	a4,-20(s0)
204051f4:	9736                	add	a4,a4,a3
204051f6:	fd442683          	lw	a3,-44(s0)
204051fa:	8695                	srai	a3,a3,0x5
204051fc:	068a                	slli	a3,a3,0x2
204051fe:	96ba                	add	a3,a3,a4
20405200:	6709                	lui	a4,0x2
20405202:	9736                	add	a4,a4,a3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20405204:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405206:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405208:	853e                	mv	a0,a5
2040520a:	50b2                	lw	ra,44(sp)
2040520c:	5422                	lw	s0,40(sp)
2040520e:	6145                	addi	sp,sp,48
20405210:	8082                	ret

20405212 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20405212:	1101                	addi	sp,sp,-32
20405214:	ce06                	sw	ra,28(sp)
20405216:	cc22                	sw	s0,24(sp)
20405218:	1000                	addi	s0,sp,32
2040521a:	fea42623          	sw	a0,-20(s0)
2040521e:	feb42423          	sw	a1,-24(s0)
20405222:	12c00513          	li	a0,300
20405226:	0b4020ef          	jal	ra,204072da <metal_shutdown>

2040522a <__metal_plic0_handler>:
__metal_plic0_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
2040522a:	7179                	addi	sp,sp,-48
2040522c:	d606                	sw	ra,44(sp)
2040522e:	d422                	sw	s0,40(sp)
20405230:	1800                	addi	s0,sp,48
20405232:	fca42e23          	sw	a0,-36(s0)
20405236:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
2040523a:	fd842783          	lw	a5,-40(s0)
2040523e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20405242:	b7afe0ef          	jal	ra,204035bc <__metal_myhart_id>
20405246:	87aa                	mv	a5,a0
20405248:	853e                	mv	a0,a5
2040524a:	d6fff0ef          	jal	ra,20404fb8 <__metal_driver_sifive_plic0_context_ids>
2040524e:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20405252:	fe842583          	lw	a1,-24(s0)
20405256:	fec42503          	lw	a0,-20(s0)
2040525a:	d7dff0ef          	jal	ra,20404fd6 <__metal_plic0_claim_interrupt>
2040525e:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20405262:	fec42503          	lw	a0,-20(s0)
20405266:	cb9ff0ef          	jal	ra,20404f1e <__metal_driver_sifive_plic0_num_interrupts>
2040526a:	87aa                	mv	a5,a0
2040526c:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20405270:	fe442703          	lw	a4,-28(s0)
20405274:	fe042783          	lw	a5,-32(s0)
20405278:	04f77263          	bgeu	a4,a5,204052bc <__metal_plic0_handler+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
2040527c:	fec42703          	lw	a4,-20(s0)
20405280:	fe442783          	lw	a5,-28(s0)
20405284:	078a                	slli	a5,a5,0x2
20405286:	97ba                	add	a5,a5,a4
20405288:	479c                	lw	a5,8(a5)
2040528a:	cb8d                	beqz	a5,204052bc <__metal_plic0_handler+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2040528c:	fec42703          	lw	a4,-20(s0)
20405290:	fe442783          	lw	a5,-28(s0)
20405294:	078a                	slli	a5,a5,0x2
20405296:	97ba                	add	a5,a5,a4
20405298:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
2040529c:	fe442603          	lw	a2,-28(s0)
204052a0:	fec42683          	lw	a3,-20(s0)
204052a4:	fe442703          	lw	a4,-28(s0)
204052a8:	87ba                	mv	a5,a4
204052aa:	0786                	slli	a5,a5,0x1
204052ac:	97ba                	add	a5,a5,a4
204052ae:	078e                	slli	a5,a5,0x3
204052b0:	97b6                	add	a5,a5,a3
204052b2:	0887a783          	lw	a5,136(a5)
204052b6:	85be                	mv	a1,a5
204052b8:	8532                	mv	a0,a2
204052ba:	9802                	jalr	a6
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
204052bc:	fe442603          	lw	a2,-28(s0)
204052c0:	fe842583          	lw	a1,-24(s0)
204052c4:	fec42503          	lw	a0,-20(s0)
204052c8:	d4bff0ef          	jal	ra,20405012 <__metal_plic0_complete_interrupt>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:121
}
204052cc:	0001                	nop
204052ce:	50b2                	lw	ra,44(sp)
204052d0:	5422                	lw	s0,40(sp)
204052d2:	6145                	addi	sp,sp,48
204052d4:	8082                	ret

204052d6 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
204052d6:	7139                	addi	sp,sp,-64
204052d8:	de06                	sw	ra,60(sp)
204052da:	dc22                	sw	s0,56(sp)
204052dc:	0080                	addi	s0,sp,64
204052de:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204052e2:	fcc42783          	lw	a5,-52(s0)
204052e6:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
204052ea:	fe442783          	lw	a5,-28(s0)
204052ee:	43dc                	lw	a5,4(a5)
204052f0:	12079b63          	bnez	a5,20405426 <__metal_driver_riscv_plic0_init+0x150>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204052f4:	fe042623          	sw	zero,-20(s0)
204052f8:	aa39                	j	20405416 <__metal_driver_riscv_plic0_init+0x140>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
204052fa:	fcc42503          	lw	a0,-52(s0)
204052fe:	c21ff0ef          	jal	ra,20404f1e <__metal_driver_sifive_plic0_num_interrupts>
20405302:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20405306:	fec42583          	lw	a1,-20(s0)
2040530a:	fcc42503          	lw	a0,-52(s0)
2040530e:	c61ff0ef          	jal	ra,20404f6e <__metal_driver_sifive_plic0_interrupt_parents>
20405312:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20405316:	fec42583          	lw	a1,-20(s0)
2040531a:	fcc42503          	lw	a0,-52(s0)
2040531e:	c79ff0ef          	jal	ra,20404f96 <__metal_driver_sifive_plic0_interrupt_lines>
20405322:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20405326:	fdc42783          	lw	a5,-36(s0)
2040532a:	439c                	lw	a5,0(a5)
2040532c:	439c                	lw	a5,0(a5)
2040532e:	fdc42503          	lw	a0,-36(s0)
20405332:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405334:	fe042423          	sw	zero,-24(s0)
20405338:	a88d                	j	204053aa <__metal_driver_riscv_plic0_init+0xd4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
2040533a:	4681                	li	a3,0
2040533c:	fe842603          	lw	a2,-24(s0)
20405340:	fec42583          	lw	a1,-20(s0)
20405344:	fe442503          	lw	a0,-28(s0)
20405348:	351d                	jal	2040516e <__metal_plic0_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
2040534a:	fe842703          	lw	a4,-24(s0)
2040534e:	fe042783          	lw	a5,-32(s0)
20405352:	04f75763          	bge	a4,a5,204053a0 <__metal_driver_riscv_plic0_init+0xca>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20405356:	4601                	li	a2,0
20405358:	fe842583          	lw	a1,-24(s0)
2040535c:	fcc42503          	lw	a0,-52(s0)
20405360:	d79ff0ef          	jal	ra,204050d8 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20405364:	fe442703          	lw	a4,-28(s0)
20405368:	fe842783          	lw	a5,-24(s0)
2040536c:	078a                	slli	a5,a5,0x2
2040536e:	97ba                	add	a5,a5,a4
20405370:	0007a423          	sw	zero,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20405374:	fe442683          	lw	a3,-28(s0)
20405378:	fe842703          	lw	a4,-24(s0)
2040537c:	87ba                	mv	a5,a4
2040537e:	0786                	slli	a5,a5,0x1
20405380:	97ba                	add	a5,a5,a4
20405382:	078e                	slli	a5,a5,0x3
20405384:	97b6                	add	a5,a5,a3
20405386:	0807a223          	sw	zero,132(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
2040538a:	fe442683          	lw	a3,-28(s0)
2040538e:	fe842703          	lw	a4,-24(s0)
20405392:	87ba                	mv	a5,a4
20405394:	0786                	slli	a5,a5,0x1
20405396:	97ba                	add	a5,a5,a4
20405398:	078e                	slli	a5,a5,0x3
2040539a:	97b6                	add	a5,a5,a3
2040539c:	0807a423          	sw	zero,136(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204053a0:	fe842783          	lw	a5,-24(s0)
204053a4:	0785                	addi	a5,a5,1
204053a6:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
204053aa:	fe842703          	lw	a4,-24(s0)
204053ae:	3ff00793          	li	a5,1023
204053b2:	f8e7d4e3          	bge	a5,a4,2040533a <__metal_driver_riscv_plic0_init+0x64>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
204053b6:	4601                	li	a2,0
204053b8:	fec42583          	lw	a1,-20(s0)
204053bc:	fcc42503          	lw	a0,-52(s0)
204053c0:	c99ff0ef          	jal	ra,20405058 <__metal_plic0_set_threshold>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
204053c4:	fdc42783          	lw	a5,-36(s0)
204053c8:	439c                	lw	a5,0(a5)
204053ca:	4fdc                	lw	a5,28(a5)
204053cc:	fe442683          	lw	a3,-28(s0)
204053d0:	4601                	li	a2,0
204053d2:	fd842583          	lw	a1,-40(s0)
204053d6:	fdc42503          	lw	a0,-36(s0)
204053da:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
204053dc:	fdc42783          	lw	a5,-36(s0)
204053e0:	439c                	lw	a5,0(a5)
204053e2:	4fd8                	lw	a4,28(a5)
204053e4:	fe442683          	lw	a3,-28(s0)
204053e8:	204057b7          	lui	a5,0x20405
204053ec:	22a78613          	addi	a2,a5,554 # 2040522a <__metal_plic0_handler>
204053f0:	fd842583          	lw	a1,-40(s0)
204053f4:	fdc42503          	lw	a0,-36(s0)
204053f8:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
204053fa:	fdc42783          	lw	a5,-36(s0)
204053fe:	439c                	lw	a5,0(a5)
20405400:	53dc                	lw	a5,36(a5)
20405402:	fd842583          	lw	a1,-40(s0)
20405406:	fdc42503          	lw	a0,-36(s0)
2040540a:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2040540c:	fec42783          	lw	a5,-20(s0)
20405410:	0785                	addi	a5,a5,1
20405412:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20405416:	fec42783          	lw	a5,-20(s0)
2040541a:	eef050e3          	blez	a5,204052fa <__metal_driver_riscv_plic0_init+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
2040541e:	fe442783          	lw	a5,-28(s0)
20405422:	4705                	li	a4,1
20405424:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20405426:	0001                	nop
20405428:	50f2                	lw	ra,60(sp)
2040542a:	5462                	lw	s0,56(sp)
2040542c:	6121                	addi	sp,sp,64
2040542e:	8082                	ret

20405430 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20405430:	7179                	addi	sp,sp,-48
20405432:	d606                	sw	ra,44(sp)
20405434:	d422                	sw	s0,40(sp)
20405436:	1800                	addi	s0,sp,48
20405438:	fca42e23          	sw	a0,-36(s0)
2040543c:	fcb42c23          	sw	a1,-40(s0)
20405440:	fcc42a23          	sw	a2,-44(s0)
20405444:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405448:	fdc42783          	lw	a5,-36(s0)
2040544c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405450:	fdc42503          	lw	a0,-36(s0)
20405454:	acbff0ef          	jal	ra,20404f1e <__metal_driver_sifive_plic0_num_interrupts>
20405458:	872a                	mv	a4,a0
2040545a:	fd842783          	lw	a5,-40(s0)
2040545e:	00e7c463          	blt	a5,a4,20405466 <__metal_driver_riscv_plic0_register+0x36>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20405462:	57fd                	li	a5,-1
20405464:	a051                	j	204054e8 <__metal_driver_riscv_plic0_register+0xb8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20405466:	fd442783          	lw	a5,-44(s0)
2040546a:	cf9d                	beqz	a5,204054a8 <__metal_driver_riscv_plic0_register+0x78>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
2040546c:	4609                	li	a2,2
2040546e:	fd842583          	lw	a1,-40(s0)
20405472:	fdc42503          	lw	a0,-36(s0)
20405476:	c63ff0ef          	jal	ra,204050d8 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
2040547a:	fec42703          	lw	a4,-20(s0)
2040547e:	fd842783          	lw	a5,-40(s0)
20405482:	078a                	slli	a5,a5,0x2
20405484:	97ba                	add	a5,a5,a4
20405486:	fd442703          	lw	a4,-44(s0)
2040548a:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
2040548c:	fec42683          	lw	a3,-20(s0)
20405490:	fd842703          	lw	a4,-40(s0)
20405494:	87ba                	mv	a5,a4
20405496:	0786                	slli	a5,a5,0x1
20405498:	97ba                	add	a5,a5,a4
2040549a:	078e                	slli	a5,a5,0x3
2040549c:	97b6                	add	a5,a5,a3
2040549e:	fd042703          	lw	a4,-48(s0)
204054a2:	08e7a423          	sw	a4,136(a5)
204054a6:	a081                	j	204054e6 <__metal_driver_riscv_plic0_register+0xb6>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
204054a8:	4605                	li	a2,1
204054aa:	fd842583          	lw	a1,-40(s0)
204054ae:	fdc42503          	lw	a0,-36(s0)
204054b2:	c27ff0ef          	jal	ra,204050d8 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
204054b6:	fec42703          	lw	a4,-20(s0)
204054ba:	fd842783          	lw	a5,-40(s0)
204054be:	078a                	slli	a5,a5,0x2
204054c0:	97ba                	add	a5,a5,a4
204054c2:	20405737          	lui	a4,0x20405
204054c6:	21270713          	addi	a4,a4,530 # 20405212 <__metal_plic0_default_handler>
204054ca:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
204054cc:	fec42683          	lw	a3,-20(s0)
204054d0:	fd842703          	lw	a4,-40(s0)
204054d4:	87ba                	mv	a5,a4
204054d6:	0786                	slli	a5,a5,0x1
204054d8:	97ba                	add	a5,a5,a4
204054da:	078e                	slli	a5,a5,0x3
204054dc:	97b6                	add	a5,a5,a3
204054de:	fd042703          	lw	a4,-48(s0)
204054e2:	08e7a223          	sw	a4,132(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
204054e6:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:185
}
204054e8:	853e                	mv	a0,a5
204054ea:	50b2                	lw	ra,44(sp)
204054ec:	5422                	lw	s0,40(sp)
204054ee:	6145                	addi	sp,sp,48
204054f0:	8082                	ret

204054f2 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
204054f2:	7179                	addi	sp,sp,-48
204054f4:	d606                	sw	ra,44(sp)
204054f6:	d422                	sw	s0,40(sp)
204054f8:	1800                	addi	s0,sp,48
204054fa:	fca42e23          	sw	a0,-36(s0)
204054fe:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405502:	fdc42783          	lw	a5,-36(s0)
20405506:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040550a:	fdc42503          	lw	a0,-36(s0)
2040550e:	a11ff0ef          	jal	ra,20404f1e <__metal_driver_sifive_plic0_num_interrupts>
20405512:	872a                	mv	a4,a0
20405514:	fd842783          	lw	a5,-40(s0)
20405518:	00e7c463          	blt	a5,a4,20405520 <__metal_driver_riscv_plic0_enable+0x2e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2040551c:	57fd                	li	a5,-1
2040551e:	a829                	j	20405538 <__metal_driver_riscv_plic0_enable+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405520:	89cfe0ef          	jal	ra,204035bc <__metal_myhart_id>
20405524:	87aa                	mv	a5,a0
20405526:	4685                	li	a3,1
20405528:	fd842603          	lw	a2,-40(s0)
2040552c:	85be                	mv	a1,a5
2040552e:	fec42503          	lw	a0,-20(s0)
20405532:	c3dff0ef          	jal	ra,2040516e <__metal_plic0_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20405536:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:197
}
20405538:	853e                	mv	a0,a5
2040553a:	50b2                	lw	ra,44(sp)
2040553c:	5422                	lw	s0,40(sp)
2040553e:	6145                	addi	sp,sp,48
20405540:	8082                	ret

20405542 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20405542:	7179                	addi	sp,sp,-48
20405544:	d606                	sw	ra,44(sp)
20405546:	d422                	sw	s0,40(sp)
20405548:	1800                	addi	s0,sp,48
2040554a:	fca42e23          	sw	a0,-36(s0)
2040554e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405552:	fdc42783          	lw	a5,-36(s0)
20405556:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040555a:	fdc42503          	lw	a0,-36(s0)
2040555e:	9c1ff0ef          	jal	ra,20404f1e <__metal_driver_sifive_plic0_num_interrupts>
20405562:	872a                	mv	a4,a0
20405564:	fd842783          	lw	a5,-40(s0)
20405568:	00e7c463          	blt	a5,a4,20405570 <__metal_driver_riscv_plic0_disable+0x2e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
2040556c:	57fd                	li	a5,-1
2040556e:	a829                	j	20405588 <__metal_driver_riscv_plic0_disable+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20405570:	84cfe0ef          	jal	ra,204035bc <__metal_myhart_id>
20405574:	87aa                	mv	a5,a0
20405576:	4681                	li	a3,0
20405578:	fd842603          	lw	a2,-40(s0)
2040557c:	85be                	mv	a1,a5
2040557e:	fec42503          	lw	a0,-20(s0)
20405582:	bedff0ef          	jal	ra,2040516e <__metal_plic0_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20405586:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:208
}
20405588:	853e                	mv	a0,a5
2040558a:	50b2                	lw	ra,44(sp)
2040558c:	5422                	lw	s0,40(sp)
2040558e:	6145                	addi	sp,sp,48
20405590:	8082                	ret

20405592 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405592:	1101                	addi	sp,sp,-32
20405594:	ce06                	sw	ra,28(sp)
20405596:	cc22                	sw	s0,24(sp)
20405598:	1000                	addi	s0,sp,32
2040559a:	fea42623          	sw	a0,-20(s0)
2040559e:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
204055a2:	81afe0ef          	jal	ra,204035bc <__metal_myhart_id>
204055a6:	87aa                	mv	a5,a0
204055a8:	fe842603          	lw	a2,-24(s0)
204055ac:	85be                	mv	a1,a5
204055ae:	fec42503          	lw	a0,-20(s0)
204055b2:	aa7ff0ef          	jal	ra,20405058 <__metal_plic0_set_threshold>
204055b6:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
204055b8:	853e                	mv	a0,a5
204055ba:	40f2                	lw	ra,28(sp)
204055bc:	4462                	lw	s0,24(sp)
204055be:	6105                	addi	sp,sp,32
204055c0:	8082                	ret

204055c2 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
204055c2:	1101                	addi	sp,sp,-32
204055c4:	ce06                	sw	ra,28(sp)
204055c6:	cc22                	sw	s0,24(sp)
204055c8:	1000                	addi	s0,sp,32
204055ca:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
204055ce:	feffd0ef          	jal	ra,204035bc <__metal_myhart_id>
204055d2:	87aa                	mv	a5,a0
204055d4:	85be                	mv	a1,a5
204055d6:	fec42503          	lw	a0,-20(s0)
204055da:	ac5ff0ef          	jal	ra,2040509e <__metal_plic0_get_threshold>
204055de:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:219
}
204055e0:	853e                	mv	a0,a5
204055e2:	40f2                	lw	ra,28(sp)
204055e4:	4462                	lw	s0,24(sp)
204055e6:	6105                	addi	sp,sp,32
204055e8:	8082                	ret

204055ea <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
204055ea:	7179                	addi	sp,sp,-48
204055ec:	d606                	sw	ra,44(sp)
204055ee:	d422                	sw	s0,40(sp)
204055f0:	1800                	addi	s0,sp,48
204055f2:	fca42e23          	sw	a0,-36(s0)
204055f6:	fcb42c23          	sw	a1,-40(s0)
204055fa:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
204055fe:	fe042223          	sw	zero,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405602:	fdc42783          	lw	a5,-36(s0)
20405606:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040560a:	fdc42503          	lw	a0,-36(s0)
2040560e:	911ff0ef          	jal	ra,20404f1e <__metal_driver_sifive_plic0_num_interrupts>
20405612:	872a                	mv	a4,a0
20405614:	fd442783          	lw	a5,-44(s0)
20405618:	00e7c863          	blt	a5,a4,20405628 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2040561c:	57fd                	li	a5,-1
2040561e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405622:	fe442783          	lw	a5,-28(s0)
20405626:	a899                	j	2040567c <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20405628:	fe042623          	sw	zero,-20(s0)
2040562c:	a099                	j	20405672 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
2040562e:	fec42783          	lw	a5,-20(s0)
20405632:	c795                	beqz	a5,2040565e <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20405634:	4685                	li	a3,1
20405636:	fd442603          	lw	a2,-44(s0)
2040563a:	fec42583          	lw	a1,-20(s0)
2040563e:	fe842503          	lw	a0,-24(s0)
20405642:	b2dff0ef          	jal	ra,2040516e <__metal_plic0_enable>
20405646:	87aa                	mv	a5,a0
20405648:	0017f713          	andi	a4,a5,1
2040564c:	fec42783          	lw	a5,-20(s0)
20405650:	00f71733          	sll	a4,a4,a5
20405654:	fe442783          	lw	a5,-28(s0)
20405658:	8fd9                	or	a5,a5,a4
2040565a:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040565e:	fec42783          	lw	a5,-20(s0)
20405662:	0785                	addi	a5,a5,1
20405664:	fef42623          	sw	a5,-20(s0)
20405668:	fd842783          	lw	a5,-40(s0)
2040566c:	8385                	srli	a5,a5,0x1
2040566e:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20405672:	fd842783          	lw	a5,-40(s0)
20405676:	ffc5                	bnez	a5,2040562e <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20405678:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
2040567c:	853e                	mv	a0,a5
2040567e:	50b2                	lw	ra,44(sp)
20405680:	5422                	lw	s0,40(sp)
20405682:	6145                	addi	sp,sp,48
20405684:	8082                	ret

20405686 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20405686:	7179                	addi	sp,sp,-48
20405688:	d606                	sw	ra,44(sp)
2040568a:	d422                	sw	s0,40(sp)
2040568c:	1800                	addi	s0,sp,48
2040568e:	fca42e23          	sw	a0,-36(s0)
20405692:	fcb42c23          	sw	a1,-40(s0)
20405696:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2040569a:	fe042223          	sw	zero,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040569e:	fdc42783          	lw	a5,-36(s0)
204056a2:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204056a6:	fdc42503          	lw	a0,-36(s0)
204056aa:	875ff0ef          	jal	ra,20404f1e <__metal_driver_sifive_plic0_num_interrupts>
204056ae:	872a                	mv	a4,a0
204056b0:	fd442783          	lw	a5,-44(s0)
204056b4:	00e7c863          	blt	a5,a4,204056c4 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
204056b8:	57fd                	li	a5,-1
204056ba:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
204056be:	fe442783          	lw	a5,-28(s0)
204056c2:	a899                	j	20405718 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
204056c4:	fe042623          	sw	zero,-20(s0)
204056c8:	a099                	j	2040570e <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
204056ca:	fec42783          	lw	a5,-20(s0)
204056ce:	c795                	beqz	a5,204056fa <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
204056d0:	4681                	li	a3,0
204056d2:	fd442603          	lw	a2,-44(s0)
204056d6:	fec42583          	lw	a1,-20(s0)
204056da:	fe842503          	lw	a0,-24(s0)
204056de:	a91ff0ef          	jal	ra,2040516e <__metal_plic0_enable>
204056e2:	87aa                	mv	a5,a0
204056e4:	0017f713          	andi	a4,a5,1
204056e8:	fec42783          	lw	a5,-20(s0)
204056ec:	00f71733          	sll	a4,a4,a5
204056f0:	fe442783          	lw	a5,-28(s0)
204056f4:	8fd9                	or	a5,a5,a4
204056f6:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204056fa:	fec42783          	lw	a5,-20(s0)
204056fe:	0785                	addi	a5,a5,1
20405700:	fef42623          	sw	a5,-20(s0)
20405704:	fd842783          	lw	a5,-40(s0)
20405708:	8385                	srli	a5,a5,0x1
2040570a:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
2040570e:	fd842783          	lw	a5,-40(s0)
20405712:	ffc5                	bnez	a5,204056ca <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405714:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20405718:	853e                	mv	a0,a5
2040571a:	50b2                	lw	ra,44(sp)
2040571c:	5422                	lw	s0,40(sp)
2040571e:	6145                	addi	sp,sp,48
20405720:	8082                	ret

20405722 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405722:	7179                	addi	sp,sp,-48
20405724:	d606                	sw	ra,44(sp)
20405726:	d422                	sw	s0,40(sp)
20405728:	1800                	addi	s0,sp,48
2040572a:	fca42e23          	sw	a0,-36(s0)
2040572e:	fcb42c23          	sw	a1,-40(s0)
20405732:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20405736:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
2040573a:	fe042623          	sw	zero,-20(s0)
2040573e:	a091                	j	20405782 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20405740:	fec42783          	lw	a5,-20(s0)
20405744:	c78d                	beqz	a5,2040576e <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20405746:	fd442603          	lw	a2,-44(s0)
2040574a:	fec42583          	lw	a1,-20(s0)
2040574e:	fdc42503          	lw	a0,-36(s0)
20405752:	907ff0ef          	jal	ra,20405058 <__metal_plic0_set_threshold>
20405756:	87aa                	mv	a5,a0
20405758:	0017f713          	andi	a4,a5,1
2040575c:	fec42783          	lw	a5,-20(s0)
20405760:	00f71733          	sll	a4,a4,a5
20405764:	fe842783          	lw	a5,-24(s0)
20405768:	8fd9                	or	a5,a5,a4
2040576a:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040576e:	fec42783          	lw	a5,-20(s0)
20405772:	0785                	addi	a5,a5,1
20405774:	fef42623          	sw	a5,-20(s0)
20405778:	fd842783          	lw	a5,-40(s0)
2040577c:	8385                	srli	a5,a5,0x1
2040577e:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20405782:	fd842783          	lw	a5,-40(s0)
20405786:	ffcd                	bnez	a5,20405740 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20405788:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:281
}
2040578c:	853e                	mv	a0,a5
2040578e:	50b2                	lw	ra,44(sp)
20405790:	5422                	lw	s0,40(sp)
20405792:	6145                	addi	sp,sp,48
20405794:	8082                	ret

20405796 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20405796:	1101                	addi	sp,sp,-32
20405798:	ce06                	sw	ra,28(sp)
2040579a:	cc22                	sw	s0,24(sp)
2040579c:	1000                	addi	s0,sp,32
2040579e:	fea42623          	sw	a0,-20(s0)
204057a2:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
204057a6:	fe842583          	lw	a1,-24(s0)
204057aa:	fec42503          	lw	a0,-20(s0)
204057ae:	8f1ff0ef          	jal	ra,2040509e <__metal_plic0_get_threshold>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
204057b2:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:287
}
204057b4:	853e                	mv	a0,a5
204057b6:	40f2                	lw	ra,28(sp)
204057b8:	4462                	lw	s0,24(sp)
204057ba:	6105                	addi	sp,sp,32
204057bc:	8082                	ret

204057be <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
204057be:	1101                	addi	sp,sp,-32
204057c0:	ce22                	sw	s0,28(sp)
204057c2:	1000                	addi	s0,sp,32
204057c4:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
204057c8:	800007b7          	lui	a5,0x80000
204057cc:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe59c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1039
}
204057d0:	853e                	mv	a0,a5
204057d2:	4472                	lw	s0,28(sp)
204057d4:	6105                	addi	sp,sp,32
204057d6:	8082                	ret

204057d8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
204057d8:	1101                	addi	sp,sp,-32
204057da:	ce22                	sw	s0,28(sp)
204057dc:	1000                	addi	s0,sp,32
204057de:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204057e2:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1044
}
204057e6:	853e                	mv	a0,a5
204057e8:	4472                	lw	s0,28(sp)
204057ea:	6105                	addi	sp,sp,32
204057ec:	8082                	ret

204057ee <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
204057ee:	1101                	addi	sp,sp,-32
204057f0:	ce22                	sw	s0,28(sp)
204057f2:	1000                	addi	s0,sp,32
204057f4:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
204057f8:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1054
}
204057fa:	853e                	mv	a0,a5
204057fc:	4472                	lw	s0,28(sp)
204057fe:	6105                	addi	sp,sp,32
20405800:	8082                	ret

20405802 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405802:	1141                	addi	sp,sp,-16
20405804:	c622                	sw	s0,12(sp)
20405806:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405808:	204017b7          	lui	a5,0x20401
2040580c:	fe478793          	addi	a5,a5,-28 # 20400fe4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1171
}
20405810:	853e                	mv	a0,a5
20405812:	4432                	lw	s0,12(sp)
20405814:	0141                	addi	sp,sp,16
20405816:	8082                	ret

20405818 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405818:	7139                	addi	sp,sp,-64
2040581a:	de06                	sw	ra,60(sp)
2040581c:	dc22                	sw	s0,56(sp)
2040581e:	0080                	addi	s0,sp,64
20405820:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405824:	fcc42503          	lw	a0,-52(s0)
20405828:	3f59                	jal	204057be <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2040582a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
2040582e:	fcc42503          	lw	a0,-52(s0)
20405832:	3f75                	jal	204057ee <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20405834:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20405838:	fcc42503          	lw	a0,-52(s0)
2040583c:	3f71                	jal	204057d8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
2040583e:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405842:	37c1                	jal	20405802 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405844:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20405848:	fe042783          	lw	a5,-32(s0)
2040584c:	439c                	lw	a5,0(a5)
2040584e:	fe842583          	lw	a1,-24(s0)
20405852:	fe442503          	lw	a0,-28(s0)
20405856:	9782                	jalr	a5
20405858:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
2040585c:	fdc42703          	lw	a4,-36(s0)
20405860:	400007b7          	lui	a5,0x40000
20405864:	8ff9                	and	a5,a5,a4
20405866:	e399                	bnez	a5,2040586c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20405868:	57fd                	li	a5,-1
2040586a:	a025                	j	20405892 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
2040586c:	fdc42783          	lw	a5,-36(s0)
20405870:	0007c463          	bltz	a5,20405878 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20405874:	57fd                	li	a5,-1
20405876:	a831                	j	20405892 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20405878:	fec42503          	lw	a0,-20(s0)
2040587c:	0f9010ef          	jal	ra,20407174 <metal_clock_get_rate_hz>
20405880:	87aa                	mv	a5,a0
20405882:	873e                	mv	a4,a5
20405884:	fdc42783          	lw	a5,-36(s0)
20405888:	03f7f793          	andi	a5,a5,63
2040588c:	0785                	addi	a5,a5,1
2040588e:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405892:	853e                	mv	a0,a5
20405894:	50f2                	lw	ra,60(sp)
20405896:	5462                	lw	s0,56(sp)
20405898:	6121                	addi	sp,sp,64
2040589a:	8082                	ret

2040589c <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2040589c:	1101                	addi	sp,sp,-32
2040589e:	ce06                	sw	ra,28(sp)
204058a0:	cc22                	sw	s0,24(sp)
204058a2:	1000                	addi	s0,sp,32
204058a4:	fea42623          	sw	a0,-20(s0)
204058a8:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
204058ac:	fec42503          	lw	a0,-20(s0)
204058b0:	37a5                	jal	20405818 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
204058b2:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
204058b4:	853e                	mv	a0,a5
204058b6:	40f2                	lw	ra,28(sp)
204058b8:	4462                	lw	s0,24(sp)
204058ba:	6105                	addi	sp,sp,32
204058bc:	8082                	ret

204058be <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1060
{
204058be:	1101                	addi	sp,sp,-32
204058c0:	ce22                	sw	s0,28(sp)
204058c2:	1000                	addi	s0,sp,32
204058c4:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
204058c8:	800007b7          	lui	a5,0x80000
204058cc:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe590>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1062
}
204058d0:	853e                	mv	a0,a5
204058d2:	4472                	lw	s0,28(sp)
204058d4:	6105                	addi	sp,sp,32
204058d6:	8082                	ret

204058d8 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1065
{
204058d8:	1101                	addi	sp,sp,-32
204058da:	ce22                	sw	s0,28(sp)
204058dc:	1000                	addi	s0,sp,32
204058de:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204058e2:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1067
}
204058e6:	853e                	mv	a0,a5
204058e8:	4472                	lw	s0,28(sp)
204058ea:	6105                	addi	sp,sp,32
204058ec:	8082                	ret

204058ee <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1070
{
204058ee:	1101                	addi	sp,sp,-32
204058f0:	ce22                	sw	s0,28(sp)
204058f2:	1000                	addi	s0,sp,32
204058f4:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
204058f8:	4791                	li	a5,4
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1072
}
204058fa:	853e                	mv	a0,a5
204058fc:	4472                	lw	s0,28(sp)
204058fe:	6105                	addi	sp,sp,32
20405900:	8082                	ret

20405902 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1169
{
20405902:	1141                	addi	sp,sp,-16
20405904:	c622                	sw	s0,12(sp)
20405906:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405908:	204017b7          	lui	a5,0x20401
2040590c:	fe478793          	addi	a5,a5,-28 # 20400fe4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1171
}
20405910:	853e                	mv	a0,a5
20405912:	4432                	lw	s0,12(sp)
20405914:	0141                	addi	sp,sp,16
20405916:	8082                	ret

20405918 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405918:	7139                	addi	sp,sp,-64
2040591a:	de06                	sw	ra,60(sp)
2040591c:	dc22                	sw	s0,56(sp)
2040591e:	0080                	addi	s0,sp,64
20405920:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405924:	fcc42503          	lw	a0,-52(s0)
20405928:	3f59                	jal	204058be <__metal_driver_sifive_fe310_g000_hfxosc_ref>
2040592a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
2040592e:	fcc42503          	lw	a0,-52(s0)
20405932:	3f75                	jal	204058ee <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20405934:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405938:	fcc42503          	lw	a0,-52(s0)
2040593c:	3f71                	jal	204058d8 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
2040593e:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405942:	37c1                	jal	20405902 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405944:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405948:	fe042783          	lw	a5,-32(s0)
2040594c:	439c                	lw	a5,0(a5)
2040594e:	fe842583          	lw	a1,-24(s0)
20405952:	fe442503          	lw	a0,-28(s0)
20405956:	9782                	jalr	a5
20405958:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
2040595c:	fdc42703          	lw	a4,-36(s0)
20405960:	400007b7          	lui	a5,0x40000
20405964:	8ff9                	and	a5,a5,a4
20405966:	e399                	bnez	a5,2040596c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20405968:	57fd                	li	a5,-1
2040596a:	a821                	j	20405982 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
2040596c:	fdc42783          	lw	a5,-36(s0)
20405970:	0007c463          	bltz	a5,20405978 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20405974:	57fd                	li	a5,-1
20405976:	a031                	j	20405982 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20405978:	fec42503          	lw	a0,-20(s0)
2040597c:	7f8010ef          	jal	ra,20407174 <metal_clock_get_rate_hz>
20405980:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20405982:	853e                	mv	a0,a5
20405984:	50f2                	lw	ra,60(sp)
20405986:	5462                	lw	s0,56(sp)
20405988:	6121                	addi	sp,sp,64
2040598a:	8082                	ret

2040598c <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2040598c:	1101                	addi	sp,sp,-32
2040598e:	ce06                	sw	ra,28(sp)
20405990:	cc22                	sw	s0,24(sp)
20405992:	1000                	addi	s0,sp,32
20405994:	fea42623          	sw	a0,-20(s0)
20405998:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
2040599c:	fec42503          	lw	a0,-20(s0)
204059a0:	3fa5                	jal	20405918 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
204059a2:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
204059a4:	853e                	mv	a0,a5
204059a6:	40f2                	lw	ra,28(sp)
204059a8:	4462                	lw	s0,24(sp)
204059aa:	6105                	addi	sp,sp,32
204059ac:	8082                	ret

204059ae <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1121
{
204059ae:	1101                	addi	sp,sp,-32
204059b0:	ce22                	sw	s0,28(sp)
204059b2:	1000                	addi	s0,sp,32
204059b4:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
204059b8:	800007b7          	lui	a5,0x80000
204059bc:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xffffeca8>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1123
}
204059c0:	853e                	mv	a0,a5
204059c2:	4472                	lw	s0,28(sp)
204059c4:	6105                	addi	sp,sp,32
204059c6:	8082                	ret

204059c8 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1126
{
204059c8:	1101                	addi	sp,sp,-32
204059ca:	ce22                	sw	s0,28(sp)
204059cc:	1000                	addi	s0,sp,32
204059ce:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
204059d2:	800007b7          	lui	a5,0x80000
204059d6:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xffffecb4>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1128
}
204059da:	853e                	mv	a0,a5
204059dc:	4472                	lw	s0,28(sp)
204059de:	6105                	addi	sp,sp,32
204059e0:	8082                	ret

204059e2 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1131
{
204059e2:	1101                	addi	sp,sp,-32
204059e4:	ce22                	sw	s0,28(sp)
204059e6:	1000                	addi	s0,sp,32
204059e8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204059ec:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1133
}
204059f0:	853e                	mv	a0,a5
204059f2:	4472                	lw	s0,28(sp)
204059f4:	6105                	addi	sp,sp,32
204059f6:	8082                	ret

204059f8 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1136
{
204059f8:	1101                	addi	sp,sp,-32
204059fa:	ce22                	sw	s0,28(sp)
204059fc:	1000                	addi	s0,sp,32
204059fe:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405a02:	47b1                	li	a5,12
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1138
}
20405a04:	853e                	mv	a0,a5
20405a06:	4472                	lw	s0,28(sp)
20405a08:	6105                	addi	sp,sp,32
20405a0a:	8082                	ret

20405a0c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1141
{
20405a0c:	1141                	addi	sp,sp,-16
20405a0e:	c622                	sw	s0,12(sp)
20405a10:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405a12:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1143
}
20405a16:	853e                	mv	a0,a5
20405a18:	4432                	lw	s0,12(sp)
20405a1a:	0141                	addi	sp,sp,16
20405a1c:	8082                	ret

20405a1e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1146
{
20405a1e:	1141                	addi	sp,sp,-16
20405a20:	c622                	sw	s0,12(sp)
20405a22:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405a24:	47a1                	li	a5,8
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1148
}
20405a26:	853e                	mv	a0,a5
20405a28:	4432                	lw	s0,12(sp)
20405a2a:	0141                	addi	sp,sp,16
20405a2c:	8082                	ret

20405a2e <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1151
{
20405a2e:	1141                	addi	sp,sp,-16
20405a30:	c622                	sw	s0,12(sp)
20405a32:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1152
		return 16000000;
20405a34:	00f427b7          	lui	a5,0xf42
20405a38:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1153
}
20405a3c:	853e                	mv	a0,a5
20405a3e:	4432                	lw	s0,12(sp)
20405a40:	0141                	addi	sp,sp,16
20405a42:	8082                	ret

20405a44 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1159
{
20405a44:	1141                	addi	sp,sp,-16
20405a46:	c622                	sw	s0,12(sp)
20405a48:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405a4a:	100087b7          	lui	a5,0x10008
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1161
}
20405a4e:	853e                	mv	a0,a5
20405a50:	4432                	lw	s0,12(sp)
20405a52:	0141                	addi	sp,sp,16
20405a54:	8082                	ret

20405a56 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1169
{
20405a56:	1141                	addi	sp,sp,-16
20405a58:	c622                	sw	s0,12(sp)
20405a5a:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405a5c:	204017b7          	lui	a5,0x20401
20405a60:	fe478793          	addi	a5,a5,-28 # 20400fe4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1171
}
20405a64:	853e                	mv	a0,a5
20405a66:	4432                	lw	s0,12(sp)
20405a68:	0141                	addi	sp,sp,16
20405a6a:	8082                	ret

20405a6c <get_pll_config_freq>:
get_pll_config_freq():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20405a6c:	1101                	addi	sp,sp,-32
20405a6e:	ce22                	sw	s0,28(sp)
20405a70:	1000                	addi	s0,sp,32
20405a72:	fea42623          	sw	a0,-20(s0)
20405a76:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20405a7a:	fe842783          	lw	a5,-24(s0)
20405a7e:	479c                	lw	a5,8(a5)
20405a80:	fec42703          	lw	a4,-20(s0)
20405a84:	00f76963          	bltu	a4,a5,20405a96 <get_pll_config_freq+0x2a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20405a88:	fe842783          	lw	a5,-24(s0)
20405a8c:	47dc                	lw	a5,12(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20405a8e:	fec42703          	lw	a4,-20(s0)
20405a92:	00e7f463          	bgeu	a5,a4,20405a9a <get_pll_config_freq+0x2e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20405a96:	57fd                	li	a5,-1
20405a98:	a829                	j	20405ab2 <get_pll_config_freq+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20405a9a:	fe842783          	lw	a5,-24(s0)
20405a9e:	4398                	lw	a4,0(a5)
20405aa0:	fec42783          	lw	a5,-20(s0)
20405aa4:	02f70733          	mul	a4,a4,a5
20405aa8:	fe842783          	lw	a5,-24(s0)
20405aac:	43dc                	lw	a5,4(a5)
20405aae:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20405ab2:	853e                	mv	a0,a5
20405ab4:	4472                	lw	s0,28(sp)
20405ab6:	6105                	addi	sp,sp,32
20405ab8:	8082                	ret

20405aba <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20405aba:	7139                	addi	sp,sp,-64
20405abc:	de06                	sw	ra,60(sp)
20405abe:	dc22                	sw	s0,56(sp)
20405ac0:	0080                	addi	s0,sp,64
20405ac2:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405ac6:	fcc42783          	lw	a5,-52(s0)
20405aca:	853e                	mv	a0,a5
20405acc:	3df5                	jal	204059c8 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405ace:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20405ad2:	3fb1                	jal	20405a2e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405ad4:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405ad8:	3799                	jal	20405a1e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405ada:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405ade:	379d                	jal	20405a44 <__metal_driver_sifive_fe310_g000_prci_base>
20405ae0:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405ae4:	fe042703          	lw	a4,-32(s0)
20405ae8:	fe442783          	lw	a5,-28(s0)
20405aec:	97ba                	add	a5,a5,a4
20405aee:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20405af2:	fcc42783          	lw	a5,-52(s0)
20405af6:	43dc                	lw	a5,4(a5)
20405af8:	853e                	mv	a0,a5
20405afa:	5e4010ef          	jal	ra,204070de <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20405afe:	fdc42783          	lw	a5,-36(s0)
20405b02:	4398                	lw	a4,0(a5)
20405b04:	67c1                	lui	a5,0x10
20405b06:	8ff9                	and	a5,a5,a4
20405b08:	cb91                	beqz	a5,20405b1c <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405b0a:	fdc42783          	lw	a5,-36(s0)
20405b0e:	4398                	lw	a4,0(a5)
20405b10:	77c1                	lui	a5,0xffff0
20405b12:	17fd                	addi	a5,a5,-1
20405b14:	8f7d                	and	a4,a4,a5
20405b16:	fdc42783          	lw	a5,-36(s0)
20405b1a:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405b1c:	fec42783          	lw	a5,-20(s0)
20405b20:	cb91                	beqz	a5,20405b34 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405b22:	fdc42783          	lw	a5,-36(s0)
20405b26:	4398                	lw	a4,0(a5)
20405b28:	000207b7          	lui	a5,0x20
20405b2c:	8f5d                	or	a4,a4,a5
20405b2e:	fdc42783          	lw	a5,-36(s0)
20405b32:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405b34:	fcc42783          	lw	a5,-52(s0)
20405b38:	439c                	lw	a5,0(a5)
20405b3a:	43d8                	lw	a4,4(a5)
20405b3c:	fcc42783          	lw	a5,-52(s0)
20405b40:	fe842583          	lw	a1,-24(s0)
20405b44:	853e                	mv	a0,a5
20405b46:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20405b48:	fcc42783          	lw	a5,-52(s0)
20405b4c:	479c                	lw	a5,8(a5)
20405b4e:	853e                	mv	a0,a5
20405b50:	58e010ef          	jal	ra,204070de <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20405b54:	0001                	nop
20405b56:	50f2                	lw	ra,60(sp)
20405b58:	5462                	lw	s0,56(sp)
20405b5a:	6121                	addi	sp,sp,64
20405b5c:	8082                	ret

20405b5e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20405b5e:	711d                	addi	sp,sp,-96
20405b60:	ce86                	sw	ra,92(sp)
20405b62:	cca2                	sw	s0,88(sp)
20405b64:	1080                	addi	s0,sp,96
20405b66:	faa42623          	sw	a0,-84(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405b6a:	fac42503          	lw	a0,-84(s0)
20405b6e:	e5bff0ef          	jal	ra,204059c8 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405b72:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405b76:	fac42503          	lw	a0,-84(s0)
20405b7a:	e35ff0ef          	jal	ra,204059ae <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405b7e:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405b82:	fac42503          	lw	a0,-84(s0)
20405b86:	e99ff0ef          	jal	ra,20405a1e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405b8a:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20405b8e:	fac42503          	lw	a0,-84(s0)
20405b92:	e7bff0ef          	jal	ra,20405a0c <__metal_driver_sifive_fe310_g000_pll_config_base>
20405b96:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405b9a:	fac42503          	lw	a0,-84(s0)
20405b9e:	e5bff0ef          	jal	ra,204059f8 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405ba2:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20405ba6:	fac42503          	lw	a0,-84(s0)
20405baa:	e39ff0ef          	jal	ra,204059e2 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405bae:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405bb2:	3555                	jal	20405a56 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405bb4:	fca42a23          	sw	a0,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20405bb8:	fd442783          	lw	a5,-44(s0)
20405bbc:	439c                	lw	a5,0(a5)
20405bbe:	fe442583          	lw	a1,-28(s0)
20405bc2:	fe042503          	lw	a0,-32(s0)
20405bc6:	9782                	jalr	a5
20405bc8:	fca42823          	sw	a0,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20405bcc:	fd442783          	lw	a5,-44(s0)
20405bd0:	439c                	lw	a5,0(a5)
20405bd2:	fdc42583          	lw	a1,-36(s0)
20405bd6:	fd842503          	lw	a0,-40(s0)
20405bda:	9782                	jalr	a5
20405bdc:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405be0:	fd042703          	lw	a4,-48(s0)
20405be4:	67c1                	lui	a5,0x10
20405be6:	8f7d                	and	a4,a4,a5
20405be8:	67c1                	lui	a5,0x10
20405bea:	00f77863          	bgeu	a4,a5,20405bfa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20405bee:	fe842503          	lw	a0,-24(s0)
20405bf2:	582010ef          	jal	ra,20407174 <metal_clock_get_rate_hz>
20405bf6:	87aa                	mv	a5,a0
20405bf8:	a8e1                	j	20405cd0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20405bfa:	fd042703          	lw	a4,-48(s0)
20405bfe:	000207b7          	lui	a5,0x20
20405c02:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20405c04:	000207b7          	lui	a5,0x20
20405c08:	00f76563          	bltu	a4,a5,20405c12 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20405c0c:	fec42783          	lw	a5,-20(s0)
20405c10:	a019                	j	20405c16 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20405c12:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20405c16:	853e                	mv	a0,a5
20405c18:	55c010ef          	jal	ra,20407174 <metal_clock_get_rate_hz>
20405c1c:	fca42423          	sw	a0,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405c20:	fd042703          	lw	a4,-48(s0)
20405c24:	000407b7          	lui	a5,0x40
20405c28:	8f7d                	and	a4,a4,a5
20405c2a:	000407b7          	lui	a5,0x40
20405c2e:	00f76563          	bltu	a4,a5,20405c38 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xda>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20405c32:	fc842783          	lw	a5,-56(s0)
20405c36:	a869                	j	20405cd0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405c38:	fd042783          	lw	a5,-48(s0)
20405c3c:	8b9d                	andi	a5,a5,7
20405c3e:	0785                	addi	a5,a5,1
20405c40:	fcf42223          	sw	a5,-60(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20405c44:	fd042783          	lw	a5,-48(s0)
20405c48:	3f07f793          	andi	a5,a5,1008
20405c4c:	8391                	srli	a5,a5,0x4
20405c4e:	0785                	addi	a5,a5,1
20405c50:	0786                	slli	a5,a5,0x1
20405c52:	fcf42023          	sw	a5,-64(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20405c56:	fd042703          	lw	a4,-48(s0)
20405c5a:	6785                	lui	a5,0x1
20405c5c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405c60:	8f7d                	and	a4,a4,a5
20405c62:	3ff00793          	li	a5,1023
20405c66:	00e7e463          	bltu	a5,a4,20405c6e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x110>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20405c6a:	57fd                	li	a5,-1
20405c6c:	a095                	j	20405cd0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20405c6e:	fd042703          	lw	a4,-48(s0)
20405c72:	6785                	lui	a5,0x1
20405c74:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405c78:	8ff9                	and	a5,a5,a4
20405c7a:	83a9                	srli	a5,a5,0xa
20405c7c:	4705                	li	a4,1
20405c7e:	00f717b3          	sll	a5,a4,a5
20405c82:	faf42e23          	sw	a5,-68(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20405c86:	fc842703          	lw	a4,-56(s0)
20405c8a:	fc442783          	lw	a5,-60(s0)
20405c8e:	02f74733          	div	a4,a4,a5
20405c92:	fc042783          	lw	a5,-64(s0)
20405c96:	02f70733          	mul	a4,a4,a5
20405c9a:	fbc42783          	lw	a5,-68(s0)
20405c9e:	02f747b3          	div	a5,a4,a5
20405ca2:	faf42c23          	sw	a5,-72(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20405ca6:	fcc42783          	lw	a5,-52(s0)
20405caa:	1007f713          	andi	a4,a5,256
20405cae:	0ff00793          	li	a5,255
20405cb2:	00e7f563          	bgeu	a5,a4,20405cbc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x15e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20405cb6:	fb842783          	lw	a5,-72(s0)
20405cba:	a819                	j	20405cd0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20405cbc:	fb842703          	lw	a4,-72(s0)
20405cc0:	fcc42783          	lw	a5,-52(s0)
20405cc4:	03f7f793          	andi	a5,a5,63
20405cc8:	0785                	addi	a5,a5,1
20405cca:	0786                	slli	a5,a5,0x1
20405ccc:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20405cd0:	853e                	mv	a0,a5
20405cd2:	40f6                	lw	ra,92(sp)
20405cd4:	4466                	lw	s0,88(sp)
20405cd6:	6125                	addi	sp,sp,96
20405cd8:	8082                	ret

20405cda <find_closest_config>:
find_closest_config():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20405cda:	7139                	addi	sp,sp,-64
20405cdc:	de06                	sw	ra,60(sp)
20405cde:	dc22                	sw	s0,56(sp)
20405ce0:	0080                	addi	s0,sp,64
20405ce2:	fca42623          	sw	a0,-52(s0)
20405ce6:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20405cea:	57fd                	li	a5,-1
20405cec:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20405cf0:	800007b7          	lui	a5,0x80000
20405cf4:	fff7c793          	not	a5,a5
20405cf8:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405cfc:	04300793          	li	a5,67
20405d00:	fef42223          	sw	a5,-28(s0)
20405d04:	a0b5                	j	20405d70 <find_closest_config+0x96>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20405d06:	fcc42683          	lw	a3,-52(s0)
20405d0a:	fe442783          	lw	a5,-28(s0)
20405d0e:	00579713          	slli	a4,a5,0x5
20405d12:	204007b7          	lui	a5,0x20400
20405d16:	68878793          	addi	a5,a5,1672 # 20400688 <pll_configs>
20405d1a:	97ba                	add	a5,a5,a4
20405d1c:	85be                	mv	a1,a5
20405d1e:	8536                	mv	a0,a3
20405d20:	d4dff0ef          	jal	ra,20405a6c <get_pll_config_freq>
20405d24:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20405d28:	fe042703          	lw	a4,-32(s0)
20405d2c:	57fd                	li	a5,-1
20405d2e:	02f70c63          	beq	a4,a5,20405d66 <find_closest_config+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20405d32:	fe042703          	lw	a4,-32(s0)
20405d36:	fc842783          	lw	a5,-56(s0)
20405d3a:	8f1d                	sub	a4,a4,a5
20405d3c:	41f75793          	srai	a5,a4,0x1f
20405d40:	8f3d                	xor	a4,a4,a5
20405d42:	40f707b3          	sub	a5,a4,a5
20405d46:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20405d4a:	fdc42703          	lw	a4,-36(s0)
20405d4e:	fe842783          	lw	a5,-24(s0)
20405d52:	00f75a63          	bge	a4,a5,20405d66 <find_closest_config+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20405d56:	fe442783          	lw	a5,-28(s0)
20405d5a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20405d5e:	fdc42783          	lw	a5,-36(s0)
20405d62:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20405d66:	fe442783          	lw	a5,-28(s0)
20405d6a:	17fd                	addi	a5,a5,-1
20405d6c:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405d70:	fe442783          	lw	a5,-28(s0)
20405d74:	f807d9e3          	bgez	a5,20405d06 <find_closest_config+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20405d78:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20405d7c:	853e                	mv	a0,a5
20405d7e:	50f2                	lw	ra,60(sp)
20405d80:	5462                	lw	s0,56(sp)
20405d82:	6121                	addi	sp,sp,64
20405d84:	8082                	ret

20405d86 <configure_pll>:
configure_pll():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20405d86:	7179                	addi	sp,sp,-48
20405d88:	d606                	sw	ra,44(sp)
20405d8a:	d422                	sw	s0,40(sp)
20405d8c:	1800                	addi	s0,sp,48
20405d8e:	fca42e23          	sw	a0,-36(s0)
20405d92:	fcb42c23          	sw	a1,-40(s0)
20405d96:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20405d9a:	fdc42783          	lw	a5,-36(s0)
20405d9e:	439c                	lw	a5,0(a5)
20405da0:	ff87f713          	andi	a4,a5,-8
20405da4:	fdc42783          	lw	a5,-36(s0)
20405da8:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20405daa:	fdc42783          	lw	a5,-36(s0)
20405dae:	4398                	lw	a4,0(a5)
20405db0:	fd442783          	lw	a5,-44(s0)
20405db4:	4b9c                	lw	a5,16(a5)
20405db6:	8b9d                	andi	a5,a5,7
20405db8:	8f5d                	or	a4,a4,a5
20405dba:	fdc42783          	lw	a5,-36(s0)
20405dbe:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405dc0:	fdc42783          	lw	a5,-36(s0)
20405dc4:	439c                	lw	a5,0(a5)
20405dc6:	c0f7f713          	andi	a4,a5,-1009
20405dca:	fdc42783          	lw	a5,-36(s0)
20405dce:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20405dd0:	fdc42783          	lw	a5,-36(s0)
20405dd4:	4398                	lw	a4,0(a5)
20405dd6:	fd442783          	lw	a5,-44(s0)
20405dda:	4bdc                	lw	a5,20(a5)
20405ddc:	0792                	slli	a5,a5,0x4
20405dde:	3f07f793          	andi	a5,a5,1008
20405de2:	8f5d                	or	a4,a4,a5
20405de4:	fdc42783          	lw	a5,-36(s0)
20405de8:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20405dea:	fdc42783          	lw	a5,-36(s0)
20405dee:	4398                	lw	a4,0(a5)
20405df0:	77fd                	lui	a5,0xfffff
20405df2:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd92f>
20405df6:	8f7d                	and	a4,a4,a5
20405df8:	fdc42783          	lw	a5,-36(s0)
20405dfc:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20405dfe:	fdc42783          	lw	a5,-36(s0)
20405e02:	4398                	lw	a4,0(a5)
20405e04:	fd442783          	lw	a5,-44(s0)
20405e08:	4f9c                	lw	a5,24(a5)
20405e0a:	00a79693          	slli	a3,a5,0xa
20405e0e:	6785                	lui	a5,0x1
20405e10:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405e14:	8ff5                	and	a5,a5,a3
20405e16:	8f5d                	or	a4,a4,a5
20405e18:	fdc42783          	lw	a5,-36(s0)
20405e1c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20405e1e:	fd442783          	lw	a5,-44(s0)
20405e22:	4fdc                	lw	a5,28(a5)
20405e24:	0207db63          	bgez	a5,20405e5a <configure_pll+0xd4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20405e28:	fd842783          	lw	a5,-40(s0)
20405e2c:	439c                	lw	a5,0(a5)
20405e2e:	1007e713          	ori	a4,a5,256
20405e32:	fd842783          	lw	a5,-40(s0)
20405e36:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405e38:	fd842783          	lw	a5,-40(s0)
20405e3c:	439c                	lw	a5,0(a5)
20405e3e:	fc07f713          	andi	a4,a5,-64
20405e42:	fd842783          	lw	a5,-40(s0)
20405e46:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20405e48:	fd842783          	lw	a5,-40(s0)
20405e4c:	439c                	lw	a5,0(a5)
20405e4e:	0017e713          	ori	a4,a5,1
20405e52:	fd842783          	lw	a5,-40(s0)
20405e56:	c398                	sw	a4,0(a5)
20405e58:	a82d                	j	20405e92 <configure_pll+0x10c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20405e5a:	fd842783          	lw	a5,-40(s0)
20405e5e:	439c                	lw	a5,0(a5)
20405e60:	eff7f713          	andi	a4,a5,-257
20405e64:	fd842783          	lw	a5,-40(s0)
20405e68:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405e6a:	fd842783          	lw	a5,-40(s0)
20405e6e:	439c                	lw	a5,0(a5)
20405e70:	fc07f713          	andi	a4,a5,-64
20405e74:	fd842783          	lw	a5,-40(s0)
20405e78:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20405e7a:	fd842783          	lw	a5,-40(s0)
20405e7e:	4398                	lw	a4,0(a5)
20405e80:	fd442783          	lw	a5,-44(s0)
20405e84:	4fdc                	lw	a5,28(a5)
20405e86:	03f7f793          	andi	a5,a5,63
20405e8a:	8f5d                	or	a4,a4,a5
20405e8c:	fd842783          	lw	a5,-40(s0)
20405e90:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20405e92:	fdc42783          	lw	a5,-36(s0)
20405e96:	4398                	lw	a4,0(a5)
20405e98:	fffc07b7          	lui	a5,0xfffc0
20405e9c:	17fd                	addi	a5,a5,-1
20405e9e:	8f7d                	and	a4,a4,a5
20405ea0:	fdc42783          	lw	a5,-36(s0)
20405ea4:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20405ea6:	fe040793          	addi	a5,s0,-32
20405eaa:	863e                	mv	a2,a5
20405eac:	4585                	li	a1,1
20405eae:	800007b7          	lui	a5,0x80000
20405eb2:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffecdc>
20405eb6:	c92fd0ef          	jal	ra,20403348 <__metal_driver_riscv_clint0_command_request>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20405eba:	fe042603          	lw	a2,-32(s0)
20405ebe:	fe442683          	lw	a3,-28(s0)
20405ec2:	4511                	li	a0,4
20405ec4:	4581                	li	a1,0
20405ec6:	00a60733          	add	a4,a2,a0
20405eca:	883a                	mv	a6,a4
20405ecc:	00c83833          	sltu	a6,a6,a2
20405ed0:	00b687b3          	add	a5,a3,a1
20405ed4:	00f806b3          	add	a3,a6,a5
20405ed8:	87b6                	mv	a5,a3
20405eda:	fee42423          	sw	a4,-24(s0)
20405ede:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405ee2:	a819                	j	20405ef8 <configure_pll+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20405ee4:	fe040793          	addi	a5,s0,-32
20405ee8:	863e                	mv	a2,a5
20405eea:	4585                	li	a1,1
20405eec:	800007b7          	lui	a5,0x80000
20405ef0:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffecdc>
20405ef4:	c54fd0ef          	jal	ra,20403348 <__metal_driver_riscv_clint0_command_request>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405ef8:	fe042703          	lw	a4,-32(s0)
20405efc:	fe442783          	lw	a5,-28(s0)
20405f00:	fec42683          	lw	a3,-20(s0)
20405f04:	863e                	mv	a2,a5
20405f06:	00c6ec63          	bltu	a3,a2,20405f1e <configure_pll+0x198>
20405f0a:	fec42683          	lw	a3,-20(s0)
20405f0e:	863e                	mv	a2,a5
20405f10:	fcc69ae3          	bne	a3,a2,20405ee4 <configure_pll+0x15e>
20405f14:	fe842683          	lw	a3,-24(s0)
20405f18:	87ba                	mv	a5,a4
20405f1a:	fcf6f5e3          	bgeu	a3,a5,20405ee4 <configure_pll+0x15e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20405f1e:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20405f20:	fdc42783          	lw	a5,-36(s0)
20405f24:	439c                	lw	a5,0(a5)
20405f26:	fe07dde3          	bgez	a5,20405f20 <configure_pll+0x19a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20405f2a:	0001                	nop
20405f2c:	0001                	nop
20405f2e:	50b2                	lw	ra,44(sp)
20405f30:	5422                	lw	s0,40(sp)
20405f32:	6145                	addi	sp,sp,48
20405f34:	8082                	ret

20405f36 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20405f36:	715d                	addi	sp,sp,-80
20405f38:	c686                	sw	ra,76(sp)
20405f3a:	c4a2                	sw	s0,72(sp)
20405f3c:	0880                	addi	s0,sp,80
20405f3e:	faa42e23          	sw	a0,-68(s0)
20405f42:	fab42c23          	sw	a1,-72(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405f46:	fbc42503          	lw	a0,-68(s0)
20405f4a:	a7fff0ef          	jal	ra,204059c8 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405f4e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405f52:	fbc42503          	lw	a0,-68(s0)
20405f56:	a59ff0ef          	jal	ra,204059ae <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405f5a:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405f5e:	fbc42503          	lw	a0,-68(s0)
20405f62:	abdff0ef          	jal	ra,20405a1e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405f66:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405f6a:	fbc42503          	lw	a0,-68(s0)
20405f6e:	a8bff0ef          	jal	ra,204059f8 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405f72:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405f76:	acfff0ef          	jal	ra,20405a44 <__metal_driver_sifive_fe310_g000_prci_base>
20405f7a:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405f7e:	fdc42703          	lw	a4,-36(s0)
20405f82:	fe442783          	lw	a5,-28(s0)
20405f86:	97ba                	add	a5,a5,a4
20405f88:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20405f8c:	fdc42703          	lw	a4,-36(s0)
20405f90:	fe042783          	lw	a5,-32(s0)
20405f94:	97ba                	add	a5,a5,a4
20405f96:	fcf42a23          	sw	a5,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20405f9a:	fd842783          	lw	a5,-40(s0)
20405f9e:	4398                	lw	a4,0(a5)
20405fa0:	67c1                	lui	a5,0x10
20405fa2:	8ff9                	and	a5,a5,a4
20405fa4:	cb91                	beqz	a5,20405fb8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405fa6:	fd842783          	lw	a5,-40(s0)
20405faa:	4398                	lw	a4,0(a5)
20405fac:	77c1                	lui	a5,0xffff0
20405fae:	17fd                	addi	a5,a5,-1
20405fb0:	8f7d                	and	a4,a4,a5
20405fb2:	fd842783          	lw	a5,-40(s0)
20405fb6:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20405fb8:	fd842783          	lw	a5,-40(s0)
20405fbc:	4398                	lw	a4,0(a5)
20405fbe:	000207b7          	lui	a5,0x20
20405fc2:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20405fc4:	c781                	beqz	a5,20405fcc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20405fc6:	fec42783          	lw	a5,-20(s0)
20405fca:	a019                	j	20405fd0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20405fcc:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20405fd0:	853e                	mv	a0,a5
20405fd2:	1a2010ef          	jal	ra,20407174 <metal_clock_get_rate_hz>
20405fd6:	fca42823          	sw	a0,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20405fda:	fd042703          	lw	a4,-48(s0)
20405fde:	87ba                	mv	a5,a4
20405fe0:	0786                	slli	a5,a5,0x1
20405fe2:	97ba                	add	a5,a5,a4
20405fe4:	41f7d713          	srai	a4,a5,0x1f
20405fe8:	8b0d                	andi	a4,a4,3
20405fea:	97ba                	add	a5,a5,a4
20405fec:	8789                	srai	a5,a5,0x2
20405fee:	873e                	mv	a4,a5
20405ff0:	fb842783          	lw	a5,-72(s0)
20405ff4:	02e7cb63          	blt	a5,a4,2040602a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20405ff8:	fd042703          	lw	a4,-48(s0)
20405ffc:	87ba                	mv	a5,a4
20405ffe:	078a                	slli	a5,a5,0x2
20406000:	97ba                	add	a5,a5,a4
20406002:	41f7d713          	srai	a4,a5,0x1f
20406006:	8b0d                	andi	a4,a4,3
20406008:	97ba                	add	a5,a5,a4
2040600a:	8789                	srai	a5,a5,0x2
2040600c:	873e                	mv	a4,a5
2040600e:	fb842783          	lw	a5,-72(s0)
20406012:	00f74c63          	blt	a4,a5,2040602a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20406016:	fd842783          	lw	a5,-40(s0)
2040601a:	4398                	lw	a4,0(a5)
2040601c:	000407b7          	lui	a5,0x40
20406020:	8f5d                	or	a4,a4,a5
20406022:	fd842783          	lw	a5,-40(s0)
20406026:	c398                	sw	a4,0(a5)
20406028:	a881                	j	20406078 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
2040602a:	fb842583          	lw	a1,-72(s0)
2040602e:	fd042503          	lw	a0,-48(s0)
20406032:	ca9ff0ef          	jal	ra,20405cda <find_closest_config>
20406036:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
2040603a:	fcc42703          	lw	a4,-52(s0)
2040603e:	57fd                	li	a5,-1
20406040:	02f70363          	beq	a4,a5,20406066 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20406044:	fcc42783          	lw	a5,-52(s0)
20406048:	00579713          	slli	a4,a5,0x5
2040604c:	204007b7          	lui	a5,0x20400
20406050:	68878793          	addi	a5,a5,1672 # 20400688 <pll_configs>
20406054:	97ba                	add	a5,a5,a4
20406056:	863e                	mv	a2,a5
20406058:	fd442583          	lw	a1,-44(s0)
2040605c:	fd842503          	lw	a0,-40(s0)
20406060:	d27ff0ef          	jal	ra,20405d86 <configure_pll>
20406064:	a811                	j	20406078 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20406066:	fd842783          	lw	a5,-40(s0)
2040606a:	4398                	lw	a4,0(a5)
2040606c:	000407b7          	lui	a5,0x40
20406070:	8f5d                	or	a4,a4,a5
20406072:	fd842783          	lw	a5,-40(s0)
20406076:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20406078:	fd842783          	lw	a5,-40(s0)
2040607c:	4398                	lw	a4,0(a5)
2040607e:	67c1                	lui	a5,0x10
20406080:	8f5d                	or	a4,a4,a5
20406082:	fd842783          	lw	a5,-40(s0)
20406086:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20406088:	fbc42503          	lw	a0,-68(s0)
2040608c:	ad3ff0ef          	jal	ra,20405b5e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20406090:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20406092:	853e                	mv	a0,a5
20406094:	40b6                	lw	ra,76(sp)
20406096:	4426                	lw	s0,72(sp)
20406098:	6161                	addi	sp,sp,80
2040609a:	8082                	ret

2040609c <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1159
{
2040609c:	1141                	addi	sp,sp,-16
2040609e:	c622                	sw	s0,12(sp)
204060a0:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
204060a2:	100087b7          	lui	a5,0x10008
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1161
}
204060a6:	853e                	mv	a0,a5
204060a8:	4432                	lw	s0,12(sp)
204060aa:	0141                	addi	sp,sp,16
204060ac:	8082                	ret

204060ae <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
204060ae:	7179                	addi	sp,sp,-48
204060b0:	d606                	sw	ra,44(sp)
204060b2:	d422                	sw	s0,40(sp)
204060b4:	1800                	addi	s0,sp,48
204060b6:	fca42e23          	sw	a0,-36(s0)
204060ba:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204060be:	3ff9                	jal	2040609c <__metal_driver_sifive_fe310_g000_prci_base>
204060c0:	87aa                	mv	a5,a0
204060c2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
204060c6:	fd842703          	lw	a4,-40(s0)
204060ca:	fec42783          	lw	a5,-20(s0)
204060ce:	97ba                	add	a5,a5,a4
204060d0:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
204060d2:	853e                	mv	a0,a5
204060d4:	50b2                	lw	ra,44(sp)
204060d6:	5422                	lw	s0,40(sp)
204060d8:	6145                	addi	sp,sp,48
204060da:	8082                	ret

204060dc <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
204060dc:	7179                	addi	sp,sp,-48
204060de:	d606                	sw	ra,44(sp)
204060e0:	d422                	sw	s0,40(sp)
204060e2:	1800                	addi	s0,sp,48
204060e4:	fca42e23          	sw	a0,-36(s0)
204060e8:	fcb42c23          	sw	a1,-40(s0)
204060ec:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204060f0:	3775                	jal	2040609c <__metal_driver_sifive_fe310_g000_prci_base>
204060f2:	87aa                	mv	a5,a0
204060f4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
204060f8:	fd842703          	lw	a4,-40(s0)
204060fc:	fec42783          	lw	a5,-20(s0)
20406100:	97ba                	add	a5,a5,a4
20406102:	873e                	mv	a4,a5
20406104:	fd442783          	lw	a5,-44(s0)
20406108:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
2040610a:	853e                	mv	a0,a5
2040610c:	50b2                	lw	ra,44(sp)
2040610e:	5422                	lw	s0,40(sp)
20406110:	6145                	addi	sp,sp,48
20406112:	8082                	ret

20406114 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:474
{
20406114:	1101                	addi	sp,sp,-32
20406116:	ce22                	sw	s0,28(sp)
20406118:	1000                	addi	s0,sp,32
2040611a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2040611e:	fec42703          	lw	a4,-20(s0)
20406122:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406126:	00f71563          	bne	a4,a5,20406130 <__metal_driver_sifive_gpio0_base+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
2040612a:	100127b7          	lui	a5,0x10012
2040612e:	a011                	j	20406132 <__metal_driver_sifive_gpio0_base+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:479
		return 0;
20406130:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:481
}
20406132:	853e                	mv	a0,a5
20406134:	4472                	lw	s0,28(sp)
20406136:	6105                	addi	sp,sp,32
20406138:	8082                	ret

2040613a <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:504
{
2040613a:	1101                	addi	sp,sp,-32
2040613c:	ce22                	sw	s0,28(sp)
2040613e:	1000                	addi	s0,sp,32
20406140:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20406144:	fec42703          	lw	a4,-20(s0)
20406148:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040614c:	00f71763          	bne	a4,a5,2040615a <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406150:	800007b7          	lui	a5,0x80000
20406154:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe988>
20406158:	a011                	j	2040615c <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:509
		return 0;
2040615a:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:511
}
2040615c:	853e                	mv	a0,a5
2040615e:	4472                	lw	s0,28(sp)
20406160:	6105                	addi	sp,sp,32
20406162:	8082                	ret

20406164 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:514
{
20406164:	1101                	addi	sp,sp,-32
20406166:	ce22                	sw	s0,28(sp)
20406168:	1000                	addi	s0,sp,32
2040616a:	fea42623          	sw	a0,-20(s0)
2040616e:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20406172:	fec42703          	lw	a4,-20(s0)
20406176:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040617a:	00f71763          	bne	a4,a5,20406188 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:515 (discriminator 1)
2040617e:	fe842783          	lw	a5,-24(s0)
20406182:	e399                	bnez	a5,20406188 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:516
		return 7;
20406184:	479d                	li	a5,7
20406186:	a269                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20406188:	fec42703          	lw	a4,-20(s0)
2040618c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406190:	00f71963          	bne	a4,a5,204061a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:518 (discriminator 1)
20406194:	fe842703          	lw	a4,-24(s0)
20406198:	4785                	li	a5,1
2040619a:	00f71463          	bne	a4,a5,204061a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:519
		return 8;
2040619e:	47a1                	li	a5,8
204061a0:	aa85                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
204061a2:	fec42703          	lw	a4,-20(s0)
204061a6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204061aa:	00f71963          	bne	a4,a5,204061bc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
204061ae:	fe842703          	lw	a4,-24(s0)
204061b2:	4789                	li	a5,2
204061b4:	00f71463          	bne	a4,a5,204061bc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:522
		return 9;
204061b8:	47a5                	li	a5,9
204061ba:	aa99                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
204061bc:	fec42703          	lw	a4,-20(s0)
204061c0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204061c4:	00f71963          	bne	a4,a5,204061d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
204061c8:	fe842703          	lw	a4,-24(s0)
204061cc:	478d                	li	a5,3
204061ce:	00f71463          	bne	a4,a5,204061d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:525
		return 10;
204061d2:	47a9                	li	a5,10
204061d4:	aa35                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
204061d6:	fec42703          	lw	a4,-20(s0)
204061da:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204061de:	00f71963          	bne	a4,a5,204061f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
204061e2:	fe842703          	lw	a4,-24(s0)
204061e6:	4791                	li	a5,4
204061e8:	00f71463          	bne	a4,a5,204061f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:528
		return 11;
204061ec:	47ad                	li	a5,11
204061ee:	a20d                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
204061f0:	fec42703          	lw	a4,-20(s0)
204061f4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204061f8:	00f71963          	bne	a4,a5,2040620a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
204061fc:	fe842703          	lw	a4,-24(s0)
20406200:	4795                	li	a5,5
20406202:	00f71463          	bne	a4,a5,2040620a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:531
		return 12;
20406206:	47b1                	li	a5,12
20406208:	a221                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2040620a:	fec42703          	lw	a4,-20(s0)
2040620e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406212:	00f71963          	bne	a4,a5,20406224 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
20406216:	fe842703          	lw	a4,-24(s0)
2040621a:	4799                	li	a5,6
2040621c:	00f71463          	bne	a4,a5,20406224 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:534
		return 13;
20406220:	47b5                	li	a5,13
20406222:	a0fd                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20406224:	fec42703          	lw	a4,-20(s0)
20406228:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040622c:	00f71963          	bne	a4,a5,2040623e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
20406230:	fe842703          	lw	a4,-24(s0)
20406234:	479d                	li	a5,7
20406236:	00f71463          	bne	a4,a5,2040623e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:537
		return 14;
2040623a:	47b9                	li	a5,14
2040623c:	a8d1                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
2040623e:	fec42703          	lw	a4,-20(s0)
20406242:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406246:	00f71963          	bne	a4,a5,20406258 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
2040624a:	fe842703          	lw	a4,-24(s0)
2040624e:	47a1                	li	a5,8
20406250:	00f71463          	bne	a4,a5,20406258 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:540
		return 15;
20406254:	47bd                	li	a5,15
20406256:	a86d                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20406258:	fec42703          	lw	a4,-20(s0)
2040625c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406260:	00f71963          	bne	a4,a5,20406272 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
20406264:	fe842703          	lw	a4,-24(s0)
20406268:	47a5                	li	a5,9
2040626a:	00f71463          	bne	a4,a5,20406272 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:543
		return 16;
2040626e:	47c1                	li	a5,16
20406270:	a045                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20406272:	fec42703          	lw	a4,-20(s0)
20406276:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040627a:	00f71963          	bne	a4,a5,2040628c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
2040627e:	fe842703          	lw	a4,-24(s0)
20406282:	47a9                	li	a5,10
20406284:	00f71463          	bne	a4,a5,2040628c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:546
		return 17;
20406288:	47c5                	li	a5,17
2040628a:	a059                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2040628c:	fec42703          	lw	a4,-20(s0)
20406290:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406294:	00f71963          	bne	a4,a5,204062a6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
20406298:	fe842703          	lw	a4,-24(s0)
2040629c:	47ad                	li	a5,11
2040629e:	00f71463          	bne	a4,a5,204062a6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:549
		return 18;
204062a2:	47c9                	li	a5,18
204062a4:	a0b5                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
204062a6:	fec42703          	lw	a4,-20(s0)
204062aa:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062ae:	00f71963          	bne	a4,a5,204062c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
204062b2:	fe842703          	lw	a4,-24(s0)
204062b6:	47b1                	li	a5,12
204062b8:	00f71463          	bne	a4,a5,204062c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:552
		return 19;
204062bc:	47cd                	li	a5,19
204062be:	a889                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
204062c0:	fec42703          	lw	a4,-20(s0)
204062c4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062c8:	00f71963          	bne	a4,a5,204062da <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
204062cc:	fe842703          	lw	a4,-24(s0)
204062d0:	47b5                	li	a5,13
204062d2:	00f71463          	bne	a4,a5,204062da <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:555
		return 20;
204062d6:	47d1                	li	a5,20
204062d8:	a825                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
204062da:	fec42703          	lw	a4,-20(s0)
204062de:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062e2:	00f71963          	bne	a4,a5,204062f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
204062e6:	fe842703          	lw	a4,-24(s0)
204062ea:	47b9                	li	a5,14
204062ec:	00f71463          	bne	a4,a5,204062f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:558
		return 21;
204062f0:	47d5                	li	a5,21
204062f2:	a839                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
204062f4:	fec42703          	lw	a4,-20(s0)
204062f8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062fc:	00f71963          	bne	a4,a5,2040630e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
20406300:	fe842703          	lw	a4,-24(s0)
20406304:	47bd                	li	a5,15
20406306:	00f71463          	bne	a4,a5,2040630e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:561
		return 22;
2040630a:	47d9                	li	a5,22
2040630c:	a011                	j	20406310 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:564
		return 0;
2040630e:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:566
}
20406310:	853e                	mv	a0,a5
20406312:	4472                	lw	s0,28(sp)
20406314:	6105                	addi	sp,sp,32
20406316:	8082                	ret

20406318 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20406318:	7179                	addi	sp,sp,-48
2040631a:	d606                	sw	ra,44(sp)
2040631c:	d422                	sw	s0,40(sp)
2040631e:	1800                	addi	s0,sp,48
20406320:	fca42e23          	sw	a0,-36(s0)
20406324:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406328:	fdc42503          	lw	a0,-36(s0)
2040632c:	de9ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
20406330:	87aa                	mv	a5,a0
20406332:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20406336:	fec42783          	lw	a5,-20(s0)
2040633a:	0791                	addi	a5,a5,4
2040633c:	4398                	lw	a4,0(a5)
2040633e:	fd842783          	lw	a5,-40(s0)
20406342:	fec42683          	lw	a3,-20(s0)
20406346:	0691                	addi	a3,a3,4
20406348:	8fd9                	or	a5,a5,a4
2040634a:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
2040634c:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:20
}
2040634e:	853e                	mv	a0,a5
20406350:	50b2                	lw	ra,44(sp)
20406352:	5422                	lw	s0,40(sp)
20406354:	6145                	addi	sp,sp,48
20406356:	8082                	ret

20406358 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20406358:	7179                	addi	sp,sp,-48
2040635a:	d606                	sw	ra,44(sp)
2040635c:	d422                	sw	s0,40(sp)
2040635e:	1800                	addi	s0,sp,48
20406360:	fca42e23          	sw	a0,-36(s0)
20406364:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406368:	fdc42503          	lw	a0,-36(s0)
2040636c:	da9ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
20406370:	87aa                	mv	a5,a0
20406372:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20406376:	fec42783          	lw	a5,-20(s0)
2040637a:	0791                	addi	a5,a5,4
2040637c:	439c                	lw	a5,0(a5)
2040637e:	fd842703          	lw	a4,-40(s0)
20406382:	fff74713          	not	a4,a4
20406386:	86ba                	mv	a3,a4
20406388:	fec42703          	lw	a4,-20(s0)
2040638c:	0711                	addi	a4,a4,4
2040638e:	8ff5                	and	a5,a5,a3
20406390:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20406392:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20406394:	853e                	mv	a0,a5
20406396:	50b2                	lw	ra,44(sp)
20406398:	5422                	lw	s0,40(sp)
2040639a:	6145                	addi	sp,sp,48
2040639c:	8082                	ret

2040639e <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
2040639e:	7179                	addi	sp,sp,-48
204063a0:	d606                	sw	ra,44(sp)
204063a2:	d422                	sw	s0,40(sp)
204063a4:	1800                	addi	s0,sp,48
204063a6:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204063aa:	fdc42503          	lw	a0,-36(s0)
204063ae:	d67ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
204063b2:	87aa                	mv	a5,a0
204063b4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
204063b8:	fec42783          	lw	a5,-20(s0)
204063bc:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
204063be:	853e                	mv	a0,a5
204063c0:	50b2                	lw	ra,44(sp)
204063c2:	5422                	lw	s0,40(sp)
204063c4:	6145                	addi	sp,sp,48
204063c6:	8082                	ret

204063c8 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
204063c8:	7179                	addi	sp,sp,-48
204063ca:	d606                	sw	ra,44(sp)
204063cc:	d422                	sw	s0,40(sp)
204063ce:	1800                	addi	s0,sp,48
204063d0:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204063d4:	fdc42503          	lw	a0,-36(s0)
204063d8:	d3dff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
204063dc:	87aa                	mv	a5,a0
204063de:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
204063e2:	fec42783          	lw	a5,-20(s0)
204063e6:	07b1                	addi	a5,a5,12
204063e8:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
204063ea:	853e                	mv	a0,a5
204063ec:	50b2                	lw	ra,44(sp)
204063ee:	5422                	lw	s0,40(sp)
204063f0:	6145                	addi	sp,sp,48
204063f2:	8082                	ret

204063f4 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
204063f4:	7179                	addi	sp,sp,-48
204063f6:	d606                	sw	ra,44(sp)
204063f8:	d422                	sw	s0,40(sp)
204063fa:	1800                	addi	s0,sp,48
204063fc:	fca42e23          	sw	a0,-36(s0)
20406400:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406404:	fdc42503          	lw	a0,-36(s0)
20406408:	d0dff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
2040640c:	87aa                	mv	a5,a0
2040640e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20406412:	fec42783          	lw	a5,-20(s0)
20406416:	07a1                	addi	a5,a5,8
20406418:	439c                	lw	a5,0(a5)
2040641a:	fd842703          	lw	a4,-40(s0)
2040641e:	fff74713          	not	a4,a4
20406422:	86ba                	mv	a3,a4
20406424:	fec42703          	lw	a4,-20(s0)
20406428:	0721                	addi	a4,a4,8
2040642a:	8ff5                	and	a5,a5,a3
2040642c:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
2040642e:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406430:	853e                	mv	a0,a5
20406432:	50b2                	lw	ra,44(sp)
20406434:	5422                	lw	s0,40(sp)
20406436:	6145                	addi	sp,sp,48
20406438:	8082                	ret

2040643a <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2040643a:	7179                	addi	sp,sp,-48
2040643c:	d606                	sw	ra,44(sp)
2040643e:	d422                	sw	s0,40(sp)
20406440:	1800                	addi	s0,sp,48
20406442:	fca42e23          	sw	a0,-36(s0)
20406446:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040644a:	fdc42503          	lw	a0,-36(s0)
2040644e:	cc7ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
20406452:	87aa                	mv	a5,a0
20406454:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20406458:	fec42783          	lw	a5,-20(s0)
2040645c:	07a1                	addi	a5,a5,8
2040645e:	4398                	lw	a4,0(a5)
20406460:	fd842783          	lw	a5,-40(s0)
20406464:	fec42683          	lw	a3,-20(s0)
20406468:	06a1                	addi	a3,a3,8
2040646a:	8fd9                	or	a5,a5,a4
2040646c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
2040646e:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20406470:	853e                	mv	a0,a5
20406472:	50b2                	lw	ra,44(sp)
20406474:	5422                	lw	s0,40(sp)
20406476:	6145                	addi	sp,sp,48
20406478:	8082                	ret

2040647a <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
2040647a:	7179                	addi	sp,sp,-48
2040647c:	d606                	sw	ra,44(sp)
2040647e:	d422                	sw	s0,40(sp)
20406480:	1800                	addi	s0,sp,48
20406482:	fca42e23          	sw	a0,-36(s0)
20406486:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040648a:	fdc42503          	lw	a0,-36(s0)
2040648e:	c87ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
20406492:	87aa                	mv	a5,a0
20406494:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20406498:	fec42783          	lw	a5,-20(s0)
2040649c:	07b1                	addi	a5,a5,12
2040649e:	4398                	lw	a4,0(a5)
204064a0:	fd842783          	lw	a5,-40(s0)
204064a4:	fec42683          	lw	a3,-20(s0)
204064a8:	06b1                	addi	a3,a3,12
204064aa:	8fd9                	or	a5,a5,a4
204064ac:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
204064ae:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:74
}
204064b0:	853e                	mv	a0,a5
204064b2:	50b2                	lw	ra,44(sp)
204064b4:	5422                	lw	s0,40(sp)
204064b6:	6145                	addi	sp,sp,48
204064b8:	8082                	ret

204064ba <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
204064ba:	7179                	addi	sp,sp,-48
204064bc:	d606                	sw	ra,44(sp)
204064be:	d422                	sw	s0,40(sp)
204064c0:	1800                	addi	s0,sp,48
204064c2:	fca42e23          	sw	a0,-36(s0)
204064c6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204064ca:	fdc42503          	lw	a0,-36(s0)
204064ce:	c47ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
204064d2:	87aa                	mv	a5,a0
204064d4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204064d8:	fec42783          	lw	a5,-20(s0)
204064dc:	07b1                	addi	a5,a5,12
204064de:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
204064e0:	fd842703          	lw	a4,-40(s0)
204064e4:	fff74713          	not	a4,a4
204064e8:	86ba                	mv	a3,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204064ea:	fec42703          	lw	a4,-20(s0)
204064ee:	0731                	addi	a4,a4,12
204064f0:	8ff5                	and	a5,a5,a3
204064f2:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
204064f4:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:84
}
204064f6:	853e                	mv	a0,a5
204064f8:	50b2                	lw	ra,44(sp)
204064fa:	5422                	lw	s0,40(sp)
204064fc:	6145                	addi	sp,sp,48
204064fe:	8082                	ret

20406500 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406500:	7179                	addi	sp,sp,-48
20406502:	d606                	sw	ra,44(sp)
20406504:	d422                	sw	s0,40(sp)
20406506:	1800                	addi	s0,sp,48
20406508:	fca42e23          	sw	a0,-36(s0)
2040650c:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406510:	fdc42503          	lw	a0,-36(s0)
20406514:	c01ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
20406518:	87aa                	mv	a5,a0
2040651a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
2040651e:	fec42783          	lw	a5,-20(s0)
20406522:	07b1                	addi	a5,a5,12
20406524:	4398                	lw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406526:	fd842783          	lw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040652a:	fec42683          	lw	a3,-20(s0)
2040652e:	06b1                	addi	a3,a3,12
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406530:	8fb9                	xor	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406532:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20406534:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20406536:	853e                	mv	a0,a5
20406538:	50b2                	lw	ra,44(sp)
2040653a:	5422                	lw	s0,40(sp)
2040653c:	6145                	addi	sp,sp,48
2040653e:	8082                	ret

20406540 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20406540:	7179                	addi	sp,sp,-48
20406542:	d606                	sw	ra,44(sp)
20406544:	d422                	sw	s0,40(sp)
20406546:	1800                	addi	s0,sp,48
20406548:	fca42e23          	sw	a0,-36(s0)
2040654c:	fcb42c23          	sw	a1,-40(s0)
20406550:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406554:	fdc42503          	lw	a0,-36(s0)
20406558:	bbdff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
2040655c:	87aa                	mv	a5,a0
2040655e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20406562:	fec42783          	lw	a5,-20(s0)
20406566:	03c78793          	addi	a5,a5,60
2040656a:	4398                	lw	a4,0(a5)
2040656c:	fd842783          	lw	a5,-40(s0)
20406570:	fec42683          	lw	a3,-20(s0)
20406574:	03c68693          	addi	a3,a3,60
20406578:	8fd9                	or	a5,a5,a4
2040657a:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
2040657c:	fec42783          	lw	a5,-20(s0)
20406580:	03878793          	addi	a5,a5,56
20406584:	4398                	lw	a4,0(a5)
20406586:	fd442783          	lw	a5,-44(s0)
2040658a:	fec42683          	lw	a3,-20(s0)
2040658e:	03868693          	addi	a3,a3,56
20406592:	8fd9                	or	a5,a5,a4
20406594:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20406596:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406598:	853e                	mv	a0,a5
2040659a:	50b2                	lw	ra,44(sp)
2040659c:	5422                	lw	s0,40(sp)
2040659e:	6145                	addi	sp,sp,48
204065a0:	8082                	ret

204065a2 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
204065a2:	7179                	addi	sp,sp,-48
204065a4:	d606                	sw	ra,44(sp)
204065a6:	d422                	sw	s0,40(sp)
204065a8:	1800                	addi	s0,sp,48
204065aa:	fca42e23          	sw	a0,-36(s0)
204065ae:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204065b2:	fdc42503          	lw	a0,-36(s0)
204065b6:	b5fff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
204065ba:	87aa                	mv	a5,a0
204065bc:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
204065c0:	fec42783          	lw	a5,-20(s0)
204065c4:	03878793          	addi	a5,a5,56
204065c8:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
204065ca:	fd842703          	lw	a4,-40(s0)
204065ce:	fff74713          	not	a4,a4
204065d2:	86ba                	mv	a3,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
204065d4:	fec42703          	lw	a4,-20(s0)
204065d8:	03870713          	addi	a4,a4,56
204065dc:	8ff5                	and	a5,a5,a3
204065de:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
204065e0:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:118
}
204065e2:	853e                	mv	a0,a5
204065e4:	50b2                	lw	ra,44(sp)
204065e6:	5422                	lw	s0,40(sp)
204065e8:	6145                	addi	sp,sp,48
204065ea:	8082                	ret

204065ec <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
204065ec:	7179                	addi	sp,sp,-48
204065ee:	d606                	sw	ra,44(sp)
204065f0:	d422                	sw	s0,40(sp)
204065f2:	1800                	addi	s0,sp,48
204065f4:	fca42e23          	sw	a0,-36(s0)
204065f8:	fcb42c23          	sw	a1,-40(s0)
204065fc:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406600:	fdc42503          	lw	a0,-36(s0)
20406604:	b11ff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
20406608:	87aa                	mv	a5,a0
2040660a:	fef42623          	sw	a5,-20(s0)
2040660e:	fd442703          	lw	a4,-44(s0)
20406612:	479d                	li	a5,7
20406614:	1ce7e963          	bltu	a5,a4,204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406618:	fd442783          	lw	a5,-44(s0)
2040661c:	00279713          	slli	a4,a5,0x2
20406620:	204017b7          	lui	a5,0x20401
20406624:	f1478793          	addi	a5,a5,-236 # 20400f14 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20406628:	97ba                	add	a5,a5,a4
2040662a:	439c                	lw	a5,0(a5)
2040662c:	8782                	jr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
2040662e:	fec42783          	lw	a5,-20(s0)
20406632:	07e1                	addi	a5,a5,24
20406634:	439c                	lw	a5,0(a5)
20406636:	fd842703          	lw	a4,-40(s0)
2040663a:	fff74713          	not	a4,a4
2040663e:	86ba                	mv	a3,a4
20406640:	fec42703          	lw	a4,-20(s0)
20406644:	0761                	addi	a4,a4,24
20406646:	8ff5                	and	a5,a5,a3
20406648:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
2040664a:	fec42783          	lw	a5,-20(s0)
2040664e:	02078793          	addi	a5,a5,32
20406652:	439c                	lw	a5,0(a5)
20406654:	fd842703          	lw	a4,-40(s0)
20406658:	fff74713          	not	a4,a4
2040665c:	86ba                	mv	a3,a4
2040665e:	fec42703          	lw	a4,-20(s0)
20406662:	02070713          	addi	a4,a4,32
20406666:	8ff5                	and	a5,a5,a3
20406668:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
2040666a:	fec42783          	lw	a5,-20(s0)
2040666e:	02878793          	addi	a5,a5,40
20406672:	439c                	lw	a5,0(a5)
20406674:	fd842703          	lw	a4,-40(s0)
20406678:	fff74713          	not	a4,a4
2040667c:	86ba                	mv	a3,a4
2040667e:	fec42703          	lw	a4,-20(s0)
20406682:	02870713          	addi	a4,a4,40
20406686:	8ff5                	and	a5,a5,a3
20406688:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
2040668a:	fec42783          	lw	a5,-20(s0)
2040668e:	03078793          	addi	a5,a5,48
20406692:	439c                	lw	a5,0(a5)
20406694:	fd842703          	lw	a4,-40(s0)
20406698:	fff74713          	not	a4,a4
2040669c:	86ba                	mv	a3,a4
2040669e:	fec42703          	lw	a4,-20(s0)
204066a2:	03070713          	addi	a4,a4,48
204066a6:	8ff5                	and	a5,a5,a3
204066a8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
204066aa:	aa35                	j	204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204066ac:	fec42783          	lw	a5,-20(s0)
204066b0:	07e1                	addi	a5,a5,24
204066b2:	4398                	lw	a4,0(a5)
204066b4:	fd842783          	lw	a5,-40(s0)
204066b8:	fec42683          	lw	a3,-20(s0)
204066bc:	06e1                	addi	a3,a3,24
204066be:	8fd9                	or	a5,a5,a4
204066c0:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
204066c2:	a215                	j	204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204066c4:	fec42783          	lw	a5,-20(s0)
204066c8:	02078793          	addi	a5,a5,32
204066cc:	4398                	lw	a4,0(a5)
204066ce:	fd842783          	lw	a5,-40(s0)
204066d2:	fec42683          	lw	a3,-20(s0)
204066d6:	02068693          	addi	a3,a3,32
204066da:	8fd9                	or	a5,a5,a4
204066dc:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
204066de:	a221                	j	204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204066e0:	fec42783          	lw	a5,-20(s0)
204066e4:	07e1                	addi	a5,a5,24
204066e6:	4398                	lw	a4,0(a5)
204066e8:	fd842783          	lw	a5,-40(s0)
204066ec:	fec42683          	lw	a3,-20(s0)
204066f0:	06e1                	addi	a3,a3,24
204066f2:	8fd9                	or	a5,a5,a4
204066f4:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204066f6:	fec42783          	lw	a5,-20(s0)
204066fa:	02078793          	addi	a5,a5,32
204066fe:	4398                	lw	a4,0(a5)
20406700:	fd842783          	lw	a5,-40(s0)
20406704:	fec42683          	lw	a3,-20(s0)
20406708:	02068693          	addi	a3,a3,32
2040670c:	8fd9                	or	a5,a5,a4
2040670e:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20406710:	a8d9                	j	204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406712:	fec42783          	lw	a5,-20(s0)
20406716:	02878793          	addi	a5,a5,40
2040671a:	4398                	lw	a4,0(a5)
2040671c:	fd842783          	lw	a5,-40(s0)
20406720:	fec42683          	lw	a3,-20(s0)
20406724:	02868693          	addi	a3,a3,40
20406728:	8fd9                	or	a5,a5,a4
2040672a:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
2040672c:	a86d                	j	204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2040672e:	fec42783          	lw	a5,-20(s0)
20406732:	03078793          	addi	a5,a5,48
20406736:	4398                	lw	a4,0(a5)
20406738:	fd842783          	lw	a5,-40(s0)
2040673c:	fec42683          	lw	a3,-20(s0)
20406740:	03068693          	addi	a3,a3,48
20406744:	8fd9                	or	a5,a5,a4
20406746:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20406748:	a879                	j	204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
2040674a:	fec42783          	lw	a5,-20(s0)
2040674e:	02878793          	addi	a5,a5,40
20406752:	4398                	lw	a4,0(a5)
20406754:	fd842783          	lw	a5,-40(s0)
20406758:	fec42683          	lw	a3,-20(s0)
2040675c:	02868693          	addi	a3,a3,40
20406760:	8fd9                	or	a5,a5,a4
20406762:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406764:	fec42783          	lw	a5,-20(s0)
20406768:	03078793          	addi	a5,a5,48
2040676c:	4398                	lw	a4,0(a5)
2040676e:	fd842783          	lw	a5,-40(s0)
20406772:	fec42683          	lw	a3,-20(s0)
20406776:	03068693          	addi	a3,a3,48
2040677a:	8fd9                	or	a5,a5,a4
2040677c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
2040677e:	a0a5                	j	204067e6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406780:	fec42783          	lw	a5,-20(s0)
20406784:	07e1                	addi	a5,a5,24
20406786:	4398                	lw	a4,0(a5)
20406788:	fd842783          	lw	a5,-40(s0)
2040678c:	fec42683          	lw	a3,-20(s0)
20406790:	06e1                	addi	a3,a3,24
20406792:	8fd9                	or	a5,a5,a4
20406794:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406796:	fec42783          	lw	a5,-20(s0)
2040679a:	02078793          	addi	a5,a5,32
2040679e:	4398                	lw	a4,0(a5)
204067a0:	fd842783          	lw	a5,-40(s0)
204067a4:	fec42683          	lw	a3,-20(s0)
204067a8:	02068693          	addi	a3,a3,32
204067ac:	8fd9                	or	a5,a5,a4
204067ae:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204067b0:	fec42783          	lw	a5,-20(s0)
204067b4:	02878793          	addi	a5,a5,40
204067b8:	4398                	lw	a4,0(a5)
204067ba:	fd842783          	lw	a5,-40(s0)
204067be:	fec42683          	lw	a3,-20(s0)
204067c2:	02868693          	addi	a3,a3,40
204067c6:	8fd9                	or	a5,a5,a4
204067c8:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204067ca:	fec42783          	lw	a5,-20(s0)
204067ce:	03078793          	addi	a5,a5,48
204067d2:	4398                	lw	a4,0(a5)
204067d4:	fd842783          	lw	a5,-40(s0)
204067d8:	fec42683          	lw	a3,-20(s0)
204067dc:	03068693          	addi	a3,a3,48
204067e0:	8fd9                	or	a5,a5,a4
204067e2:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
204067e4:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
204067e6:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:175
}
204067e8:	853e                	mv	a0,a5
204067ea:	50b2                	lw	ra,44(sp)
204067ec:	5422                	lw	s0,40(sp)
204067ee:	6145                	addi	sp,sp,48
204067f0:	8082                	ret

204067f2 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
204067f2:	7179                	addi	sp,sp,-48
204067f4:	d606                	sw	ra,44(sp)
204067f6:	d422                	sw	s0,40(sp)
204067f8:	1800                	addi	s0,sp,48
204067fa:	fca42e23          	sw	a0,-36(s0)
204067fe:	fcb42c23          	sw	a1,-40(s0)
20406802:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406806:	fdc42503          	lw	a0,-36(s0)
2040680a:	90bff0ef          	jal	ra,20406114 <__metal_driver_sifive_gpio0_base>
2040680e:	87aa                	mv	a5,a0
20406810:	fef42623          	sw	a5,-20(s0)
20406814:	fd442703          	lw	a4,-44(s0)
20406818:	479d                	li	a5,7
2040681a:	14e7ea63          	bltu	a5,a4,2040696e <__metal_driver_sifive_gpio0_clear_int+0x17c>
2040681e:	fd442783          	lw	a5,-44(s0)
20406822:	00279713          	slli	a4,a5,0x2
20406826:	204017b7          	lui	a5,0x20401
2040682a:	f3478793          	addi	a5,a5,-204 # 20400f34 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
2040682e:	97ba                	add	a5,a5,a4
20406830:	439c                	lw	a5,0(a5)
20406832:	8782                	jr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406834:	fec42783          	lw	a5,-20(s0)
20406838:	07f1                	addi	a5,a5,28
2040683a:	4398                	lw	a4,0(a5)
2040683c:	fd842783          	lw	a5,-40(s0)
20406840:	fec42683          	lw	a3,-20(s0)
20406844:	06f1                	addi	a3,a3,28
20406846:	8fd9                	or	a5,a5,a4
20406848:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
2040684a:	a215                	j	2040696e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2040684c:	fec42783          	lw	a5,-20(s0)
20406850:	02478793          	addi	a5,a5,36
20406854:	4398                	lw	a4,0(a5)
20406856:	fd842783          	lw	a5,-40(s0)
2040685a:	fec42683          	lw	a3,-20(s0)
2040685e:	02468693          	addi	a3,a3,36
20406862:	8fd9                	or	a5,a5,a4
20406864:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20406866:	a221                	j	2040696e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406868:	fec42783          	lw	a5,-20(s0)
2040686c:	07f1                	addi	a5,a5,28
2040686e:	4398                	lw	a4,0(a5)
20406870:	fd842783          	lw	a5,-40(s0)
20406874:	fec42683          	lw	a3,-20(s0)
20406878:	06f1                	addi	a3,a3,28
2040687a:	8fd9                	or	a5,a5,a4
2040687c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2040687e:	fec42783          	lw	a5,-20(s0)
20406882:	02478793          	addi	a5,a5,36
20406886:	4398                	lw	a4,0(a5)
20406888:	fd842783          	lw	a5,-40(s0)
2040688c:	fec42683          	lw	a3,-20(s0)
20406890:	02468693          	addi	a3,a3,36
20406894:	8fd9                	or	a5,a5,a4
20406896:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406898:	a8d9                	j	2040696e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2040689a:	fec42783          	lw	a5,-20(s0)
2040689e:	02c78793          	addi	a5,a5,44
204068a2:	4398                	lw	a4,0(a5)
204068a4:	fd842783          	lw	a5,-40(s0)
204068a8:	fec42683          	lw	a3,-20(s0)
204068ac:	02c68693          	addi	a3,a3,44
204068b0:	8fd9                	or	a5,a5,a4
204068b2:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
204068b4:	a86d                	j	2040696e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
204068b6:	fec42783          	lw	a5,-20(s0)
204068ba:	03478793          	addi	a5,a5,52
204068be:	4398                	lw	a4,0(a5)
204068c0:	fd842783          	lw	a5,-40(s0)
204068c4:	fec42683          	lw	a3,-20(s0)
204068c8:	03468693          	addi	a3,a3,52
204068cc:	8fd9                	or	a5,a5,a4
204068ce:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
204068d0:	a879                	j	2040696e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
204068d2:	fec42783          	lw	a5,-20(s0)
204068d6:	02c78793          	addi	a5,a5,44
204068da:	4398                	lw	a4,0(a5)
204068dc:	fd842783          	lw	a5,-40(s0)
204068e0:	fec42683          	lw	a3,-20(s0)
204068e4:	02c68693          	addi	a3,a3,44
204068e8:	8fd9                	or	a5,a5,a4
204068ea:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
204068ec:	fec42783          	lw	a5,-20(s0)
204068f0:	03478793          	addi	a5,a5,52
204068f4:	4398                	lw	a4,0(a5)
204068f6:	fd842783          	lw	a5,-40(s0)
204068fa:	fec42683          	lw	a3,-20(s0)
204068fe:	03468693          	addi	a3,a3,52
20406902:	8fd9                	or	a5,a5,a4
20406904:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20406906:	a0a5                	j	2040696e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406908:	fec42783          	lw	a5,-20(s0)
2040690c:	07f1                	addi	a5,a5,28
2040690e:	4398                	lw	a4,0(a5)
20406910:	fd842783          	lw	a5,-40(s0)
20406914:	fec42683          	lw	a3,-20(s0)
20406918:	06f1                	addi	a3,a3,28
2040691a:	8fd9                	or	a5,a5,a4
2040691c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
2040691e:	fec42783          	lw	a5,-20(s0)
20406922:	02478793          	addi	a5,a5,36
20406926:	4398                	lw	a4,0(a5)
20406928:	fd842783          	lw	a5,-40(s0)
2040692c:	fec42683          	lw	a3,-20(s0)
20406930:	02468693          	addi	a3,a3,36
20406934:	8fd9                	or	a5,a5,a4
20406936:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406938:	fec42783          	lw	a5,-20(s0)
2040693c:	02c78793          	addi	a5,a5,44
20406940:	4398                	lw	a4,0(a5)
20406942:	fd842783          	lw	a5,-40(s0)
20406946:	fec42683          	lw	a3,-20(s0)
2040694a:	02c68693          	addi	a3,a3,44
2040694e:	8fd9                	or	a5,a5,a4
20406950:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406952:	fec42783          	lw	a5,-20(s0)
20406956:	03478793          	addi	a5,a5,52
2040695a:	4398                	lw	a4,0(a5)
2040695c:	fd842783          	lw	a5,-40(s0)
20406960:	fec42683          	lw	a3,-20(s0)
20406964:	03468693          	addi	a3,a3,52
20406968:	8fd9                	or	a5,a5,a4
2040696a:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
2040696c:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
2040696e:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20406970:	853e                	mv	a0,a5
20406972:	50b2                	lw	ra,44(sp)
20406974:	5422                	lw	s0,40(sp)
20406976:	6145                	addi	sp,sp,48
20406978:	8082                	ret

2040697a <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
2040697a:	1101                	addi	sp,sp,-32
2040697c:	ce06                	sw	ra,28(sp)
2040697e:	cc22                	sw	s0,24(sp)
20406980:	1000                	addi	s0,sp,32
20406982:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20406986:	fec42503          	lw	a0,-20(s0)
2040698a:	fb0ff0ef          	jal	ra,2040613a <__metal_driver_sifive_gpio0_interrupt_parent>
2040698e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20406990:	853e                	mv	a0,a5
20406992:	40f2                	lw	ra,28(sp)
20406994:	4462                	lw	s0,24(sp)
20406996:	6105                	addi	sp,sp,32
20406998:	8082                	ret

2040699a <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
2040699a:	7179                	addi	sp,sp,-48
2040699c:	d606                	sw	ra,44(sp)
2040699e:	d422                	sw	s0,40(sp)
204069a0:	1800                	addi	s0,sp,48
204069a2:	fca42e23          	sw	a0,-36(s0)
204069a6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
204069aa:	fd842583          	lw	a1,-40(s0)
204069ae:	fdc42503          	lw	a0,-36(s0)
204069b2:	fb2ff0ef          	jal	ra,20406164 <__metal_driver_sifive_gpio0_interrupt_lines>
204069b6:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
204069ba:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:233
}
204069be:	853e                	mv	a0,a5
204069c0:	50b2                	lw	ra,44(sp)
204069c2:	5422                	lw	s0,40(sp)
204069c4:	6145                	addi	sp,sp,48
204069c6:	8082                	ret

204069c8 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:863
{
204069c8:	1101                	addi	sp,sp,-32
204069ca:	ce22                	sw	s0,28(sp)
204069cc:	1000                	addi	s0,sp,32
204069ce:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
204069d2:	fec42703          	lw	a4,-20(s0)
204069d6:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
204069da:	00f71563          	bne	a4,a5,204069e4 <__metal_driver_sifive_test0_base+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
204069de:	001007b7          	lui	a5,0x100
204069e2:	a011                	j	204069e6 <__metal_driver_sifive_test0_base+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:868
		return 0;
204069e4:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:870
}
204069e6:	853e                	mv	a0,a5
204069e8:	4472                	lw	s0,28(sp)
204069ea:	6105                	addi	sp,sp,32
204069ec:	8082                	ret

204069ee <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
204069ee:	7179                	addi	sp,sp,-48
204069f0:	d606                	sw	ra,44(sp)
204069f2:	d422                	sw	s0,40(sp)
204069f4:	1800                	addi	s0,sp,48
204069f6:	fca42e23          	sw	a0,-36(s0)
204069fa:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
204069fe:	fdc42503          	lw	a0,-36(s0)
20406a02:	37d9                	jal	204069c8 <__metal_driver_sifive_test0_base>
20406a04:	87aa                	mv	a5,a0
20406a06:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20406a0a:	fd842783          	lw	a5,-40(s0)
20406a0e:	01079713          	slli	a4,a5,0x10
20406a12:	fd842783          	lw	a5,-40(s0)
20406a16:	e789                	bnez	a5,20406a20 <__metal_driver_sifive_test0_exit+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20406a18:	6795                	lui	a5,0x5
20406a1a:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20406a1e:	a021                	j	20406a26 <__metal_driver_sifive_test0_exit+0x38>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20406a20:	678d                	lui	a5,0x3
20406a22:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20406a26:	97ba                	add	a5,a5,a4
20406a28:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406a2c:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20406a30:	fe842703          	lw	a4,-24(s0)
20406a34:	c398                	sw	a4,0(a5)
20406a36:	bfdd                	j	20406a2c <__metal_driver_sifive_test0_exit+0x3e>

20406a38 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:888
{
20406a38:	1101                	addi	sp,sp,-32
20406a3a:	ce22                	sw	s0,28(sp)
20406a3c:	1000                	addi	s0,sp,32
20406a3e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406a42:	fec42703          	lw	a4,-20(s0)
20406a46:	800007b7          	lui	a5,0x80000
20406a4a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20406a4e:	00f71563          	bne	a4,a5,20406a58 <__metal_driver_sifive_uart0_control_base+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20406a52:	100137b7          	lui	a5,0x10013
20406a56:	a011                	j	20406a5a <__metal_driver_sifive_uart0_control_base+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:893
		return 0;
20406a58:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:895
}
20406a5a:	853e                	mv	a0,a5
20406a5c:	4472                	lw	s0,28(sp)
20406a5e:	6105                	addi	sp,sp,32
20406a60:	8082                	ret

20406a62 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:918
{
20406a62:	1101                	addi	sp,sp,-32
20406a64:	ce22                	sw	s0,28(sp)
20406a66:	1000                	addi	s0,sp,32
20406a68:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406a6c:	fec42703          	lw	a4,-20(s0)
20406a70:	800007b7          	lui	a5,0x80000
20406a74:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20406a78:	00f71763          	bne	a4,a5,20406a86 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406a7c:	800007b7          	lui	a5,0x80000
20406a80:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe988>
20406a84:	a011                	j	20406a88 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:923
		return 0;
20406a86:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:925
}
20406a88:	853e                	mv	a0,a5
20406a8a:	4472                	lw	s0,28(sp)
20406a8c:	6105                	addi	sp,sp,32
20406a8e:	8082                	ret

20406a90 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:928
{
20406a90:	1101                	addi	sp,sp,-32
20406a92:	ce22                	sw	s0,28(sp)
20406a94:	1000                	addi	s0,sp,32
20406a96:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406a9a:	fec42703          	lw	a4,-20(s0)
20406a9e:	800007b7          	lui	a5,0x80000
20406aa2:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20406aa6:	00f71463          	bne	a4,a5,20406aae <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:930
		return 5;
20406aaa:	4795                	li	a5,5
20406aac:	a011                	j	20406ab0 <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:933
		return 0;
20406aae:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:935
}
20406ab0:	853e                	mv	a0,a5
20406ab2:	4472                	lw	s0,28(sp)
20406ab4:	6105                	addi	sp,sp,32
20406ab6:	8082                	ret

20406ab8 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:938
{
20406ab8:	1101                	addi	sp,sp,-32
20406aba:	ce22                	sw	s0,28(sp)
20406abc:	1000                	addi	s0,sp,32
20406abe:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406ac2:	fec42703          	lw	a4,-20(s0)
20406ac6:	800007b7          	lui	a5,0x80000
20406aca:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20406ace:	00f71763          	bne	a4,a5,20406adc <__metal_driver_sifive_uart0_clock+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20406ad2:	800007b7          	lui	a5,0x80000
20406ad6:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffecc0>
20406ada:	a011                	j	20406ade <__metal_driver_sifive_uart0_clock+0x26>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:943
		return 0;
20406adc:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:945
}
20406ade:	853e                	mv	a0,a5
20406ae0:	4472                	lw	s0,28(sp)
20406ae2:	6105                	addi	sp,sp,32
20406ae4:	8082                	ret

20406ae6 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:948
{
20406ae6:	1101                	addi	sp,sp,-32
20406ae8:	ce22                	sw	s0,28(sp)
20406aea:	1000                	addi	s0,sp,32
20406aec:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406af0:	fec42703          	lw	a4,-20(s0)
20406af4:	800007b7          	lui	a5,0x80000
20406af8:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20406afc:	00f71563          	bne	a4,a5,20406b06 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20406b00:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406b04:	a011                	j	20406b08 <__metal_driver_sifive_uart0_pinmux+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:953
		return 0;
20406b06:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:955
}
20406b08:	853e                	mv	a0,a5
20406b0a:	4472                	lw	s0,28(sp)
20406b0c:	6105                	addi	sp,sp,32
20406b0e:	8082                	ret

20406b10 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:958
{
20406b10:	1101                	addi	sp,sp,-32
20406b12:	ce22                	sw	s0,28(sp)
20406b14:	1000                	addi	s0,sp,32
20406b16:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406b1a:	fec42703          	lw	a4,-20(s0)
20406b1e:	800007b7          	lui	a5,0x80000
20406b22:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20406b26:	00f71463          	bne	a4,a5,20406b2e <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:960
		return 0;
20406b2a:	4781                	li	a5,0
20406b2c:	a011                	j	20406b30 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:963
		return 0;
20406b2e:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:965
}
20406b30:	853e                	mv	a0,a5
20406b32:	4472                	lw	s0,28(sp)
20406b34:	6105                	addi	sp,sp,32
20406b36:	8082                	ret

20406b38 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:968
{
20406b38:	1101                	addi	sp,sp,-32
20406b3a:	ce22                	sw	s0,28(sp)
20406b3c:	1000                	addi	s0,sp,32
20406b3e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406b42:	fec42703          	lw	a4,-20(s0)
20406b46:	800007b7          	lui	a5,0x80000
20406b4a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffec88>
20406b4e:	00f71563          	bne	a4,a5,20406b58 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:970
		return 196608;
20406b52:	000307b7          	lui	a5,0x30
20406b56:	a011                	j	20406b5a <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:973
		return 0;
20406b58:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:975
}
20406b5a:	853e                	mv	a0,a5
20406b5c:	4472                	lw	s0,28(sp)
20406b5e:	6105                	addi	sp,sp,32
20406b60:	8082                	ret

20406b62 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20406b62:	1101                	addi	sp,sp,-32
20406b64:	ce06                	sw	ra,28(sp)
20406b66:	cc22                	sw	s0,24(sp)
20406b68:	1000                	addi	s0,sp,32
20406b6a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20406b6e:	fec42503          	lw	a0,-20(s0)
20406b72:	ef1ff0ef          	jal	ra,20406a62 <__metal_driver_sifive_uart0_interrupt_parent>
20406b76:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406b78:	853e                	mv	a0,a5
20406b7a:	40f2                	lw	ra,28(sp)
20406b7c:	4462                	lw	s0,24(sp)
20406b7e:	6105                	addi	sp,sp,32
20406b80:	8082                	ret

20406b82 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20406b82:	1101                	addi	sp,sp,-32
20406b84:	ce06                	sw	ra,28(sp)
20406b86:	cc22                	sw	s0,24(sp)
20406b88:	1000                	addi	s0,sp,32
20406b8a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406b8e:	fec42503          	lw	a0,-20(s0)
20406b92:	effff0ef          	jal	ra,20406a90 <__metal_driver_sifive_uart0_interrupt_line>
20406b96:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406b98:	853e                	mv	a0,a5
20406b9a:	40f2                	lw	ra,28(sp)
20406b9c:	4462                	lw	s0,24(sp)
20406b9e:	6105                	addi	sp,sp,32
20406ba0:	8082                	ret

20406ba2 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20406ba2:	7179                	addi	sp,sp,-48
20406ba4:	d606                	sw	ra,44(sp)
20406ba6:	d422                	sw	s0,40(sp)
20406ba8:	1800                	addi	s0,sp,48
20406baa:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406bae:	fdc42503          	lw	a0,-36(s0)
20406bb2:	e87ff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406bb6:	87aa                	mv	a5,a0
20406bb8:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20406bbc:	fec42783          	lw	a5,-20(s0)
20406bc0:	07c1                	addi	a5,a5,16
20406bc2:	439c                	lw	a5,0(a5)
20406bc4:	fec42703          	lw	a4,-20(s0)
20406bc8:	0741                	addi	a4,a4,16
20406bca:	0017e793          	ori	a5,a5,1
20406bce:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20406bd0:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:50
}
20406bd2:	853e                	mv	a0,a5
20406bd4:	50b2                	lw	ra,44(sp)
20406bd6:	5422                	lw	s0,40(sp)
20406bd8:	6145                	addi	sp,sp,48
20406bda:	8082                	ret

20406bdc <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20406bdc:	7179                	addi	sp,sp,-48
20406bde:	d606                	sw	ra,44(sp)
20406be0:	d422                	sw	s0,40(sp)
20406be2:	1800                	addi	s0,sp,48
20406be4:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406be8:	fdc42503          	lw	a0,-36(s0)
20406bec:	e4dff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406bf0:	87aa                	mv	a5,a0
20406bf2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20406bf6:	fec42783          	lw	a5,-20(s0)
20406bfa:	07c1                	addi	a5,a5,16
20406bfc:	439c                	lw	a5,0(a5)
20406bfe:	fec42703          	lw	a4,-20(s0)
20406c02:	0741                	addi	a4,a4,16
20406c04:	9bf9                	andi	a5,a5,-2
20406c06:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20406c08:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:57
}
20406c0a:	853e                	mv	a0,a5
20406c0c:	50b2                	lw	ra,44(sp)
20406c0e:	5422                	lw	s0,40(sp)
20406c10:	6145                	addi	sp,sp,48
20406c12:	8082                	ret

20406c14 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20406c14:	7179                	addi	sp,sp,-48
20406c16:	d606                	sw	ra,44(sp)
20406c18:	d422                	sw	s0,40(sp)
20406c1a:	1800                	addi	s0,sp,48
20406c1c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406c20:	fdc42503          	lw	a0,-36(s0)
20406c24:	e15ff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406c28:	87aa                	mv	a5,a0
20406c2a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20406c2e:	fec42783          	lw	a5,-20(s0)
20406c32:	07c1                	addi	a5,a5,16
20406c34:	439c                	lw	a5,0(a5)
20406c36:	fec42703          	lw	a4,-20(s0)
20406c3a:	0741                	addi	a4,a4,16
20406c3c:	0027e793          	ori	a5,a5,2
20406c40:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20406c42:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:64
}
20406c44:	853e                	mv	a0,a5
20406c46:	50b2                	lw	ra,44(sp)
20406c48:	5422                	lw	s0,40(sp)
20406c4a:	6145                	addi	sp,sp,48
20406c4c:	8082                	ret

20406c4e <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20406c4e:	7179                	addi	sp,sp,-48
20406c50:	d606                	sw	ra,44(sp)
20406c52:	d422                	sw	s0,40(sp)
20406c54:	1800                	addi	s0,sp,48
20406c56:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406c5a:	fdc42503          	lw	a0,-36(s0)
20406c5e:	ddbff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406c62:	87aa                	mv	a5,a0
20406c64:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406c68:	fec42783          	lw	a5,-20(s0)
20406c6c:	07c1                	addi	a5,a5,16
20406c6e:	439c                	lw	a5,0(a5)
20406c70:	fec42703          	lw	a4,-20(s0)
20406c74:	0741                	addi	a4,a4,16
20406c76:	9bf5                	andi	a5,a5,-3
20406c78:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20406c7a:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:71
}
20406c7c:	853e                	mv	a0,a5
20406c7e:	50b2                	lw	ra,44(sp)
20406c80:	5422                	lw	s0,40(sp)
20406c82:	6145                	addi	sp,sp,48
20406c84:	8082                	ret

20406c86 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20406c86:	7179                	addi	sp,sp,-48
20406c88:	d606                	sw	ra,44(sp)
20406c8a:	d422                	sw	s0,40(sp)
20406c8c:	1800                	addi	s0,sp,48
20406c8e:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406c92:	fdc42503          	lw	a0,-36(s0)
20406c96:	da3ff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406c9a:	87aa                	mv	a5,a0
20406c9c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20406ca0:	fec42783          	lw	a5,-20(s0)
20406ca4:	439c                	lw	a5,0(a5)
20406ca6:	83fd                	srli	a5,a5,0x1f
20406ca8:	0ff7f793          	zext.b	a5,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:77
}
20406cac:	853e                	mv	a0,a5
20406cae:	50b2                	lw	ra,44(sp)
20406cb0:	5422                	lw	s0,40(sp)
20406cb2:	6145                	addi	sp,sp,48
20406cb4:	8082                	ret

20406cb6 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406cb6:	7179                	addi	sp,sp,-48
20406cb8:	d606                	sw	ra,44(sp)
20406cba:	d422                	sw	s0,40(sp)
20406cbc:	1800                	addi	s0,sp,48
20406cbe:	fca42e23          	sw	a0,-36(s0)
20406cc2:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406cc6:	fdc42503          	lw	a0,-36(s0)
20406cca:	d6fff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406cce:	87aa                	mv	a5,a0
20406cd0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20406cd4:	fec42783          	lw	a5,-20(s0)
20406cd8:	07a1                	addi	a5,a5,8
20406cda:	4398                	lw	a4,0(a5)
20406cdc:	fd842783          	lw	a5,-40(s0)
20406ce0:	01079693          	slli	a3,a5,0x10
20406ce4:	000707b7          	lui	a5,0x70
20406ce8:	8ff5                	and	a5,a5,a3
20406cea:	fec42683          	lw	a3,-20(s0)
20406cee:	06a1                	addi	a3,a3,8
20406cf0:	8fd9                	or	a5,a5,a4
20406cf2:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20406cf4:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:85
}
20406cf6:	853e                	mv	a0,a5
20406cf8:	50b2                	lw	ra,44(sp)
20406cfa:	5422                	lw	s0,40(sp)
20406cfc:	6145                	addi	sp,sp,48
20406cfe:	8082                	ret

20406d00 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20406d00:	7179                	addi	sp,sp,-48
20406d02:	d606                	sw	ra,44(sp)
20406d04:	d422                	sw	s0,40(sp)
20406d06:	1800                	addi	s0,sp,48
20406d08:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d0c:	fdc42503          	lw	a0,-36(s0)
20406d10:	d29ff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406d14:	87aa                	mv	a5,a0
20406d16:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20406d1a:	fec42783          	lw	a5,-20(s0)
20406d1e:	07a1                	addi	a5,a5,8
20406d20:	439c                	lw	a5,0(a5)
20406d22:	83c1                	srli	a5,a5,0x10
20406d24:	8b9d                	andi	a5,a5,7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:91
}
20406d26:	853e                	mv	a0,a5
20406d28:	50b2                	lw	ra,44(sp)
20406d2a:	5422                	lw	s0,40(sp)
20406d2c:	6145                	addi	sp,sp,48
20406d2e:	8082                	ret

20406d30 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406d30:	7179                	addi	sp,sp,-48
20406d32:	d606                	sw	ra,44(sp)
20406d34:	d422                	sw	s0,40(sp)
20406d36:	1800                	addi	s0,sp,48
20406d38:	fca42e23          	sw	a0,-36(s0)
20406d3c:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d40:	fdc42503          	lw	a0,-36(s0)
20406d44:	cf5ff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406d48:	87aa                	mv	a5,a0
20406d4a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20406d4e:	fec42783          	lw	a5,-20(s0)
20406d52:	07b1                	addi	a5,a5,12
20406d54:	4398                	lw	a4,0(a5)
20406d56:	fd842783          	lw	a5,-40(s0)
20406d5a:	01079693          	slli	a3,a5,0x10
20406d5e:	000707b7          	lui	a5,0x70
20406d62:	8ff5                	and	a5,a5,a3
20406d64:	fec42683          	lw	a3,-20(s0)
20406d68:	06b1                	addi	a3,a3,12
20406d6a:	8fd9                	or	a5,a5,a4
20406d6c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20406d6e:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:99
}
20406d70:	853e                	mv	a0,a5
20406d72:	50b2                	lw	ra,44(sp)
20406d74:	5422                	lw	s0,40(sp)
20406d76:	6145                	addi	sp,sp,48
20406d78:	8082                	ret

20406d7a <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20406d7a:	7179                	addi	sp,sp,-48
20406d7c:	d606                	sw	ra,44(sp)
20406d7e:	d422                	sw	s0,40(sp)
20406d80:	1800                	addi	s0,sp,48
20406d82:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d86:	fdc42503          	lw	a0,-36(s0)
20406d8a:	cafff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406d8e:	87aa                	mv	a5,a0
20406d90:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20406d94:	fec42783          	lw	a5,-20(s0)
20406d98:	07b1                	addi	a5,a5,12
20406d9a:	439c                	lw	a5,0(a5)
20406d9c:	83c1                	srli	a5,a5,0x10
20406d9e:	8b9d                	andi	a5,a5,7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:105
}
20406da0:	853e                	mv	a0,a5
20406da2:	50b2                	lw	ra,44(sp)
20406da4:	5422                	lw	s0,40(sp)
20406da6:	6145                	addi	sp,sp,48
20406da8:	8082                	ret

20406daa <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20406daa:	7179                	addi	sp,sp,-48
20406dac:	d606                	sw	ra,44(sp)
20406dae:	d422                	sw	s0,40(sp)
20406db0:	1800                	addi	s0,sp,48
20406db2:	fca42e23          	sw	a0,-36(s0)
20406db6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406dba:	fdc42503          	lw	a0,-36(s0)
20406dbe:	c7bff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406dc2:	87aa                	mv	a5,a0
20406dc4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20406dc8:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20406dca:	fdc42503          	lw	a0,-36(s0)
20406dce:	eb9ff0ef          	jal	ra,20406c86 <__metal_driver_sifive_uart0_txready>
20406dd2:	87aa                	mv	a5,a0
20406dd4:	fbfd                	bnez	a5,20406dca <__metal_driver_sifive_uart0_putc+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20406dd6:	fec42783          	lw	a5,-20(s0)
20406dda:	fd842703          	lw	a4,-40(s0)
20406dde:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20406de0:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:115
}
20406de2:	853e                	mv	a0,a5
20406de4:	50b2                	lw	ra,44(sp)
20406de6:	5422                	lw	s0,40(sp)
20406de8:	6145                	addi	sp,sp,48
20406dea:	8082                	ret

20406dec <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20406dec:	7179                	addi	sp,sp,-48
20406dee:	d606                	sw	ra,44(sp)
20406df0:	d422                	sw	s0,40(sp)
20406df2:	1800                	addi	s0,sp,48
20406df4:	fca42e23          	sw	a0,-36(s0)
20406df8:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406dfc:	fdc42503          	lw	a0,-36(s0)
20406e00:	c39ff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406e04:	87aa                	mv	a5,a0
20406e06:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20406e0a:	fec42783          	lw	a5,-20(s0)
20406e0e:	0791                	addi	a5,a5,4
20406e10:	439c                	lw	a5,0(a5)
20406e12:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20406e16:	fe842783          	lw	a5,-24(s0)
20406e1a:	0007d763          	bgez	a5,20406e28 <__metal_driver_sifive_uart0_getc+0x3c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20406e1e:	fd842783          	lw	a5,-40(s0)
20406e22:	577d                	li	a4,-1
20406e24:	c398                	sw	a4,0(a5)
20406e26:	a801                	j	20406e36 <__metal_driver_sifive_uart0_getc+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20406e28:	fe842783          	lw	a5,-24(s0)
20406e2c:	0ff7f713          	zext.b	a4,a5
20406e30:	fd842783          	lw	a5,-40(s0)
20406e34:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20406e36:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406e38:	853e                	mv	a0,a5
20406e3a:	50b2                	lw	ra,44(sp)
20406e3c:	5422                	lw	s0,40(sp)
20406e3e:	6145                	addi	sp,sp,48
20406e40:	8082                	ret

20406e42 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20406e42:	7179                	addi	sp,sp,-48
20406e44:	d622                	sw	s0,44(sp)
20406e46:	1800                	addi	s0,sp,48
20406e48:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406e4c:	fdc42783          	lw	a5,-36(s0)
20406e50:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20406e54:	fec42783          	lw	a5,-20(s0)
20406e58:	43dc                	lw	a5,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:134
}
20406e5a:	853e                	mv	a0,a5
20406e5c:	5432                	lw	s0,44(sp)
20406e5e:	6145                	addi	sp,sp,48
20406e60:	8082                	ret

20406e62 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20406e62:	7179                	addi	sp,sp,-48
20406e64:	d606                	sw	ra,44(sp)
20406e66:	d422                	sw	s0,40(sp)
20406e68:	1800                	addi	s0,sp,48
20406e6a:	fca42e23          	sw	a0,-36(s0)
20406e6e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406e72:	fdc42783          	lw	a5,-36(s0)
20406e76:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20406e7a:	fdc42503          	lw	a0,-36(s0)
20406e7e:	bbbff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406e82:	87aa                	mv	a5,a0
20406e84:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406e88:	fdc42503          	lw	a0,-36(s0)
20406e8c:	c2dff0ef          	jal	ra,20406ab8 <__metal_driver_sifive_uart0_clock>
20406e90:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20406e94:	fd842703          	lw	a4,-40(s0)
20406e98:	fec42783          	lw	a5,-20(s0)
20406e9c:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20406e9e:	fe442783          	lw	a5,-28(s0)
20406ea2:	cbb1                	beqz	a5,20406ef6 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20406ea4:	fe442783          	lw	a5,-28(s0)
20406ea8:	439c                	lw	a5,0(a5)
20406eaa:	439c                	lw	a5,0(a5)
20406eac:	fe442503          	lw	a0,-28(s0)
20406eb0:	9782                	jalr	a5
20406eb2:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20406eb6:	fe042703          	lw	a4,-32(s0)
20406eba:	fd842783          	lw	a5,-40(s0)
20406ebe:	02f747b3          	div	a5,a4,a5
20406ec2:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20406ec6:	fe842783          	lw	a5,-24(s0)
20406eca:	07e1                	addi	a5,a5,24
20406ecc:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20406ece:	fe842783          	lw	a5,-24(s0)
20406ed2:	07a1                	addi	a5,a5,8
20406ed4:	439c                	lw	a5,0(a5)
20406ed6:	fe842703          	lw	a4,-24(s0)
20406eda:	0721                	addi	a4,a4,8
20406edc:	0017e793          	ori	a5,a5,1
20406ee0:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20406ee2:	fe842783          	lw	a5,-24(s0)
20406ee6:	07b1                	addi	a5,a5,12
20406ee8:	439c                	lw	a5,0(a5)
20406eea:	fe842703          	lw	a4,-24(s0)
20406eee:	0731                	addi	a4,a4,12
20406ef0:	0017e793          	ori	a5,a5,1
20406ef4:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20406ef6:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:151
}
20406ef8:	853e                	mv	a0,a5
20406efa:	50b2                	lw	ra,44(sp)
20406efc:	5422                	lw	s0,40(sp)
20406efe:	6145                	addi	sp,sp,48
20406f00:	8082                	ret

20406f02 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20406f02:	7139                	addi	sp,sp,-64
20406f04:	de06                	sw	ra,60(sp)
20406f06:	dc22                	sw	s0,56(sp)
20406f08:	0080                	addi	s0,sp,64
20406f0a:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20406f0e:	fcc42783          	lw	a5,-52(s0)
20406f12:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20406f16:	fcc42503          	lw	a0,-52(s0)
20406f1a:	b1fff0ef          	jal	ra,20406a38 <__metal_driver_sifive_uart0_control_base>
20406f1e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20406f20:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20406f24:	fcc42503          	lw	a0,-52(s0)
20406f28:	b91ff0ef          	jal	ra,20406ab8 <__metal_driver_sifive_uart0_clock>
20406f2c:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20406f30:	fe842783          	lw	a5,-24(s0)
20406f34:	07a1                	addi	a5,a5,8
20406f36:	4398                	lw	a4,0(a5)
20406f38:	fe842783          	lw	a5,-24(s0)
20406f3c:	07a1                	addi	a5,a5,8
20406f3e:	86be                	mv	a3,a5
20406f40:	fff907b7          	lui	a5,0xfff90
20406f44:	17fd                	addi	a5,a5,-1
20406f46:	8ff9                	and	a5,a5,a4
20406f48:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20406f4a:	fe842783          	lw	a5,-24(s0)
20406f4e:	07a1                	addi	a5,a5,8
20406f50:	4398                	lw	a4,0(a5)
20406f52:	fe842783          	lw	a5,-24(s0)
20406f56:	07a1                	addi	a5,a5,8
20406f58:	86be                	mv	a3,a5
20406f5a:	67c1                	lui	a5,0x10
20406f5c:	8fd9                	or	a5,a5,a4
20406f5e:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20406f60:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20406f62:	fe842783          	lw	a5,-24(s0)
20406f66:	07d1                	addi	a5,a5,20
20406f68:	439c                	lw	a5,0(a5)
20406f6a:	8b85                	andi	a5,a5,1
20406f6c:	dbfd                	beqz	a5,20406f62 <pre_rate_change_callback_func+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20406f6e:	fe842783          	lw	a5,-24(s0)
20406f72:	07a1                	addi	a5,a5,8
20406f74:	439c                	lw	a5,0(a5)
20406f76:	8b89                	andi	a5,a5,2
20406f78:	c399                	beqz	a5,20406f7e <pre_rate_change_callback_func+0x7c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20406f7a:	47a5                	li	a5,9
20406f7c:	a011                	j	20406f80 <pre_rate_change_callback_func+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20406f7e:	47a9                	li	a5,10
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20406f80:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20406f84:	fe442783          	lw	a5,-28(s0)
20406f88:	439c                	lw	a5,0(a5)
20406f8a:	439c                	lw	a5,0(a5)
20406f8c:	fe442503          	lw	a0,-28(s0)
20406f90:	9782                	jalr	a5
20406f92:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20406f96:	fe042703          	lw	a4,-32(s0)
20406f9a:	fdc42783          	lw	a5,-36(s0)
20406f9e:	02f707b3          	mul	a5,a4,a5
20406fa2:	873e                	mv	a4,a5
20406fa4:	fec42783          	lw	a5,-20(s0)
20406fa8:	43dc                	lw	a5,4(a5)
20406faa:	02f757b3          	divu	a5,a4,a5
20406fae:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20406fb2:	fc042a23          	sw	zero,-44(s0)
20406fb6:	a039                	j	20406fc4 <pre_rate_change_callback_func+0xc2>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20406fb8:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20406fba:	fd442783          	lw	a5,-44(s0)
20406fbe:	0785                	addi	a5,a5,1
20406fc0:	fcf42a23          	sw	a5,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20406fc4:	fd442783          	lw	a5,-44(s0)
20406fc8:	fd842703          	lw	a4,-40(s0)
20406fcc:	fee7c6e3          	blt	a5,a4,20406fb8 <pre_rate_change_callback_func+0xb6>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:180
}
20406fd0:	0001                	nop
20406fd2:	0001                	nop
20406fd4:	50f2                	lw	ra,60(sp)
20406fd6:	5462                	lw	s0,56(sp)
20406fd8:	6121                	addi	sp,sp,64
20406fda:	8082                	ret

20406fdc <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20406fdc:	7179                	addi	sp,sp,-48
20406fde:	d606                	sw	ra,44(sp)
20406fe0:	d422                	sw	s0,40(sp)
20406fe2:	1800                	addi	s0,sp,48
20406fe4:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20406fe8:	fdc42783          	lw	a5,-36(s0)
20406fec:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20406ff0:	fec42703          	lw	a4,-20(s0)
20406ff4:	fec42783          	lw	a5,-20(s0)
20406ff8:	43dc                	lw	a5,4(a5)
20406ffa:	85be                	mv	a1,a5
20406ffc:	853a                	mv	a0,a4
20406ffe:	d91fb0ef          	jal	ra,20402d8e <metal_uart_set_baud_rate>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:185
}
20407002:	0001                	nop
20407004:	50b2                	lw	ra,44(sp)
20407006:	5422                	lw	s0,40(sp)
20407008:	6145                	addi	sp,sp,48
2040700a:	8082                	ret

2040700c <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2040700c:	7139                	addi	sp,sp,-64
2040700e:	de06                	sw	ra,60(sp)
20407010:	dc22                	sw	s0,56(sp)
20407012:	0080                	addi	s0,sp,64
20407014:	fca42623          	sw	a0,-52(s0)
20407018:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040701c:	fcc42783          	lw	a5,-52(s0)
20407020:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407024:	fcc42503          	lw	a0,-52(s0)
20407028:	a91ff0ef          	jal	ra,20406ab8 <__metal_driver_sifive_uart0_clock>
2040702c:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20407030:	fcc42503          	lw	a0,-52(s0)
20407034:	ab3ff0ef          	jal	ra,20406ae6 <__metal_driver_sifive_uart0_pinmux>
20407038:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2040703c:	fe842783          	lw	a5,-24(s0)
20407040:	c7b9                	beqz	a5,2040708e <__metal_driver_sifive_uart0_init+0x82>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20407042:	fec42783          	lw	a5,-20(s0)
20407046:	20407737          	lui	a4,0x20407
2040704a:	f0270713          	addi	a4,a4,-254 # 20406f02 <pre_rate_change_callback_func>
2040704e:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20407050:	fec42783          	lw	a5,-20(s0)
20407054:	fcc42703          	lw	a4,-52(s0)
20407058:	c7d8                	sw	a4,12(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2040705a:	fec42783          	lw	a5,-20(s0)
2040705e:	07a1                	addi	a5,a5,8
20407060:	85be                	mv	a1,a5
20407062:	fe842503          	lw	a0,-24(s0)
20407066:	2241                	jal	204071e6 <metal_clock_register_pre_rate_change_callback>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20407068:	fec42783          	lw	a5,-20(s0)
2040706c:	20407737          	lui	a4,0x20407
20407070:	fdc70713          	addi	a4,a4,-36 # 20406fdc <post_rate_change_callback_func>
20407074:	cbd8                	sw	a4,20(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20407076:	fec42783          	lw	a5,-20(s0)
2040707a:	fcc42703          	lw	a4,-52(s0)
2040707e:	cf98                	sw	a4,24(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20407080:	fec42783          	lw	a5,-20(s0)
20407084:	07d1                	addi	a5,a5,20
20407086:	85be                	mv	a1,a5
20407088:	fe842503          	lw	a0,-24(s0)
2040708c:	2271                	jal	20407218 <metal_clock_register_post_rate_change_callback>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040708e:	fec42783          	lw	a5,-20(s0)
20407092:	fc842583          	lw	a1,-56(s0)
20407096:	853e                	mv	a0,a5
20407098:	cf7fb0ef          	jal	ra,20402d8e <metal_uart_set_baud_rate>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2040709c:	fe442783          	lw	a5,-28(s0)
204070a0:	cb95                	beqz	a5,204070d4 <__metal_driver_sifive_uart0_init+0xc8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
204070a2:	fcc42503          	lw	a0,-52(s0)
204070a6:	a6bff0ef          	jal	ra,20406b10 <__metal_driver_sifive_uart0_pinmux_output_selector>
204070aa:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
204070ac:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
204070b0:	fcc42503          	lw	a0,-52(s0)
204070b4:	a85ff0ef          	jal	ra,20406b38 <__metal_driver_sifive_uart0_pinmux_source_selector>
204070b8:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
204070ba:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
204070be:	fe442783          	lw	a5,-28(s0)
204070c2:	439c                	lw	a5,0(a5)
204070c4:	53dc                	lw	a5,36(a5)
204070c6:	fdc42603          	lw	a2,-36(s0)
204070ca:	fe042583          	lw	a1,-32(s0)
204070ce:	fe442503          	lw	a0,-28(s0)
204070d2:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
204070d4:	0001                	nop
204070d6:	50f2                	lw	ra,60(sp)
204070d8:	5462                	lw	s0,56(sp)
204070da:	6121                	addi	sp,sp,64
204070dc:	8082                	ret

204070de <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
204070de:	7179                	addi	sp,sp,-48
204070e0:	d606                	sw	ra,44(sp)
204070e2:	d422                	sw	s0,40(sp)
204070e4:	1800                	addi	s0,sp,48
204070e6:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
204070ea:	fdc42783          	lw	a5,-36(s0)
204070ee:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:52
    while (current) {
204070f2:	a831                	j	2040710e <_metal_clock_call_all_callbacks+0x30>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
204070f4:	fec42783          	lw	a5,-20(s0)
204070f8:	4398                	lw	a4,0(a5)
204070fa:	fec42783          	lw	a5,-20(s0)
204070fe:	43dc                	lw	a5,4(a5)
20407100:	853e                	mv	a0,a5
20407102:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:54
        current = current->_next;
20407104:	fec42783          	lw	a5,-20(s0)
20407108:	479c                	lw	a5,8(a5)
2040710a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:52
    while (current) {
2040710e:	fec42783          	lw	a5,-20(s0)
20407112:	f3ed                	bnez	a5,204070f4 <_metal_clock_call_all_callbacks+0x16>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:56
    }
}
20407114:	0001                	nop
20407116:	0001                	nop
20407118:	50b2                	lw	ra,44(sp)
2040711a:	5422                	lw	s0,40(sp)
2040711c:	6145                	addi	sp,sp,48
2040711e:	8082                	ret

20407120 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20407120:	7179                	addi	sp,sp,-48
20407122:	d622                	sw	s0,44(sp)
20407124:	1800                	addi	s0,sp,48
20407126:	fca42e23          	sw	a0,-36(s0)
2040712a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2040712e:	fd842783          	lw	a5,-40(s0)
20407132:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:66

    if (!list) {
20407136:	fdc42783          	lw	a5,-36(s0)
2040713a:	e781                	bnez	a5,20407142 <_metal_clock_append_to_callbacks+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:67
        return cb;
2040713c:	fd842783          	lw	a5,-40(s0)
20407140:	a035                	j	2040716c <_metal_clock_append_to_callbacks+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20407142:	fdc42783          	lw	a5,-36(s0)
20407146:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
2040714a:	a031                	j	20407156 <_metal_clock_append_to_callbacks+0x36>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:73
        current = current->_next;
2040714c:	fec42783          	lw	a5,-20(s0)
20407150:	479c                	lw	a5,8(a5)
20407152:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20407156:	fec42783          	lw	a5,-20(s0)
2040715a:	479c                	lw	a5,8(a5)
2040715c:	fbe5                	bnez	a5,2040714c <_metal_clock_append_to_callbacks+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2040715e:	fec42783          	lw	a5,-20(s0)
20407162:	fd842703          	lw	a4,-40(s0)
20407166:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:78

    return list;
20407168:	fdc42783          	lw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:79
}
2040716c:	853e                	mv	a0,a5
2040716e:	5432                	lw	s0,44(sp)
20407170:	6145                	addi	sp,sp,48
20407172:	8082                	ret

20407174 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20407174:	1101                	addi	sp,sp,-32
20407176:	ce06                	sw	ra,28(sp)
20407178:	cc22                	sw	s0,24(sp)
2040717a:	1000                	addi	s0,sp,32
2040717c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20407180:	fec42783          	lw	a5,-20(s0)
20407184:	439c                	lw	a5,0(a5)
20407186:	439c                	lw	a5,0(a5)
20407188:	fec42503          	lw	a0,-20(s0)
2040718c:	9782                	jalr	a5
2040718e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:112
}
20407190:	853e                	mv	a0,a5
20407192:	40f2                	lw	ra,28(sp)
20407194:	4462                	lw	s0,24(sp)
20407196:	6105                	addi	sp,sp,32
20407198:	8082                	ret

2040719a <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
2040719a:	7179                	addi	sp,sp,-48
2040719c:	d606                	sw	ra,44(sp)
2040719e:	d422                	sw	s0,40(sp)
204071a0:	1800                	addi	s0,sp,48
204071a2:	fca42e23          	sw	a0,-36(s0)
204071a6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
204071aa:	fdc42783          	lw	a5,-36(s0)
204071ae:	43dc                	lw	a5,4(a5)
204071b0:	853e                	mv	a0,a5
204071b2:	f2dff0ef          	jal	ra,204070de <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
204071b6:	fdc42783          	lw	a5,-36(s0)
204071ba:	439c                	lw	a5,0(a5)
204071bc:	43dc                	lw	a5,4(a5)
204071be:	fd842583          	lw	a1,-40(s0)
204071c2:	fdc42503          	lw	a0,-36(s0)
204071c6:	9782                	jalr	a5
204071c8:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
204071cc:	fdc42783          	lw	a5,-36(s0)
204071d0:	479c                	lw	a5,8(a5)
204071d2:	853e                	mv	a0,a5
204071d4:	f0bff0ef          	jal	ra,204070de <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:135

    return out;
204071d8:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:136
}
204071dc:	853e                	mv	a0,a5
204071de:	50b2                	lw	ra,44(sp)
204071e0:	5422                	lw	s0,40(sp)
204071e2:	6145                	addi	sp,sp,48
204071e4:	8082                	ret

204071e6 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
204071e6:	1101                	addi	sp,sp,-32
204071e8:	ce06                	sw	ra,28(sp)
204071ea:	cc22                	sw	s0,24(sp)
204071ec:	1000                	addi	s0,sp,32
204071ee:	fea42623          	sw	a0,-20(s0)
204071f2:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
204071f6:	fec42783          	lw	a5,-20(s0)
204071fa:	43dc                	lw	a5,4(a5)
204071fc:	fe842583          	lw	a1,-24(s0)
20407200:	853e                	mv	a0,a5
20407202:	f1fff0ef          	jal	ra,20407120 <_metal_clock_append_to_callbacks>
20407206:	872a                	mv	a4,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20407208:	fec42783          	lw	a5,-20(s0)
2040720c:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:149
}
2040720e:	0001                	nop
20407210:	40f2                	lw	ra,28(sp)
20407212:	4462                	lw	s0,24(sp)
20407214:	6105                	addi	sp,sp,32
20407216:	8082                	ret

20407218 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20407218:	1101                	addi	sp,sp,-32
2040721a:	ce06                	sw	ra,28(sp)
2040721c:	cc22                	sw	s0,24(sp)
2040721e:	1000                	addi	s0,sp,32
20407220:	fea42623          	sw	a0,-20(s0)
20407224:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20407228:	fec42783          	lw	a5,-20(s0)
2040722c:	479c                	lw	a5,8(a5)
2040722e:	fe842583          	lw	a1,-24(s0)
20407232:	853e                	mv	a0,a5
20407234:	eedff0ef          	jal	ra,20407120 <_metal_clock_append_to_callbacks>
20407238:	872a                	mv	a4,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
2040723a:	fec42783          	lw	a5,-20(s0)
2040723e:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:162
}
20407240:	0001                	nop
20407242:	40f2                	lw	ra,28(sp)
20407244:	4462                	lw	s0,24(sp)
20407246:	6105                	addi	sp,sp,32
20407248:	8082                	ret

2040724a <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/wsFreedomStudio/kernel/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
2040724a:	1101                	addi	sp,sp,-32
2040724c:	ce06                	sw	ra,28(sp)
2040724e:	cc22                	sw	s0,24(sp)
20407250:	1000                	addi	s0,sp,32
20407252:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20407256:	fec42783          	lw	a5,-20(s0)
2040725a:	439c                	lw	a5,0(a5)
2040725c:	57dc                	lw	a5,44(a5)
2040725e:	fec42503          	lw	a0,-20(s0)
20407262:	9782                	jalr	a5
20407264:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/cpu.h:226
}
20407266:	853e                	mv	a0,a5
20407268:	40f2                	lw	ra,28(sp)
2040726a:	4462                	lw	s0,24(sp)
2040726c:	6105                	addi	sp,sp,32
2040726e:	8082                	ret

20407270 <metal_cpu_get>:
metal_cpu_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20407270:	1101                	addi	sp,sp,-32
20407272:	ce22                	sw	s0,28(sp)
20407274:	1000                	addi	s0,sp,32
20407276:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
2040727a:	fec42783          	lw	a5,-20(s0)
2040727e:	eb99                	bnez	a5,20407294 <metal_cpu_get+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20407280:	800007b7          	lui	a5,0x80000
20407284:	fec42703          	lw	a4,-20(s0)
20407288:	070a                	slli	a4,a4,0x2
2040728a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffecd8>
2040728e:	97ba                	add	a5,a5,a4
20407290:	439c                	lw	a5,0(a5)
20407292:	a011                	j	20407296 <metal_cpu_get+0x26>
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:11
    }
    return NULL;
20407294:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:12
}
20407296:	853e                	mv	a0,a5
20407298:	4472                	lw	s0,28(sp)
2040729a:	6105                	addi	sp,sp,32
2040729c:	8082                	ret

2040729e <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2040729e:	1101                	addi	sp,sp,-32
204072a0:	ce22                	sw	s0,28(sp)
204072a2:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
204072a4:	f14027f3          	csrr	a5,mhartid
204072a8:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:18
    return mhartid;
204072ac:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:20
#endif
}
204072b0:	853e                	mv	a0,a5
204072b2:	4472                	lw	s0,28(sp)
204072b4:	6105                	addi	sp,sp,32
204072b6:	8082                	ret

204072b8 <__metal_shutdown_exit>:
__metal_shutdown_exit():
C:/wsFreedomStudio/kernel/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
204072b8:	1101                	addi	sp,sp,-32
204072ba:	ce06                	sw	ra,28(sp)
204072bc:	cc22                	sw	s0,24(sp)
204072be:	1000                	addi	s0,sp,32
204072c0:	fea42623          	sw	a0,-20(s0)
204072c4:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
204072c8:	fec42783          	lw	a5,-20(s0)
204072cc:	439c                	lw	a5,0(a5)
204072ce:	439c                	lw	a5,0(a5)
204072d0:	fe842583          	lw	a1,-24(s0)
204072d4:	fec42503          	lw	a0,-20(s0)
204072d8:	9782                	jalr	a5

204072da <metal_shutdown>:
metal_shutdown():
C:/wsFreedomStudio/kernel/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
204072da:	1101                	addi	sp,sp,-32
204072dc:	ce06                	sw	ra,28(sp)
204072de:	cc22                	sw	s0,24(sp)
204072e0:	1000                	addi	s0,sp,32
204072e2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
204072e6:	fec42583          	lw	a1,-20(s0)
204072ea:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
204072ee:	fcbff0ef          	jal	ra,204072b8 <__metal_shutdown_exit>
	...

20407300 <__metal_vector_table>:
IRQ_0():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407300:	c2afc06f          	j	2040372a <metal_interrupt_vector_handler>

20407304 <IRQ_1>:
IRQ_1():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407304:	c26fc06f          	j	2040372a <metal_interrupt_vector_handler>

20407308 <IRQ_2>:
IRQ_2():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407308:	c22fc06f          	j	2040372a <metal_interrupt_vector_handler>

2040730c <IRQ_3>:
IRQ_3():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040730c:	c4cfc06f          	j	20403758 <metal_software_interrupt_vector_handler>

20407310 <IRQ_4>:
IRQ_4():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407310:	c1afc06f          	j	2040372a <metal_interrupt_vector_handler>

20407314 <IRQ_5>:
IRQ_5():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407314:	c16fc06f          	j	2040372a <metal_interrupt_vector_handler>

20407318 <IRQ_6>:
IRQ_6():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407318:	c12fc06f          	j	2040372a <metal_interrupt_vector_handler>

2040731c <IRQ_7>:
IRQ_7():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040731c:	d36fc06f          	j	20403852 <metal_timer_interrupt_vector_handler>

20407320 <IRQ_8>:
IRQ_8():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20407320:	c0afc06f          	j	2040372a <metal_interrupt_vector_handler>

20407324 <IRQ_9>:
IRQ_9():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20407324:	c06fc06f          	j	2040372a <metal_interrupt_vector_handler>

20407328 <IRQ_10>:
IRQ_10():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20407328:	c02fc06f          	j	2040372a <metal_interrupt_vector_handler>

2040732c <IRQ_11>:
IRQ_11():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2040732c:	bfefc06f          	j	2040372a <metal_interrupt_vector_handler>

20407330 <IRQ_12>:
IRQ_12():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20407330:	bfafc06f          	j	2040372a <metal_interrupt_vector_handler>

20407334 <IRQ_13>:
IRQ_13():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20407334:	bf6fc06f          	j	2040372a <metal_interrupt_vector_handler>

20407338 <IRQ_14>:
IRQ_14():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20407338:	bf2fc06f          	j	2040372a <metal_interrupt_vector_handler>

2040733c <IRQ_15>:
IRQ_15():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2040733c:	beefc06f          	j	2040372a <metal_interrupt_vector_handler>

20407340 <IRQ_LC0>:
IRQ_LC0():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20407340:	83bfc06f          	j	20403b7a <metal_lc0_interrupt_vector_handler>

20407344 <IRQ_LC1>:
IRQ_LC1():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20407344:	8cdfc06f          	j	20403c10 <metal_lc1_interrupt_vector_handler>

20407348 <IRQ_LC2>:
IRQ_LC2():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20407348:	95ffc06f          	j	20403ca6 <metal_lc2_interrupt_vector_handler>

2040734c <IRQ_LC3>:
IRQ_LC3():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2040734c:	9f1fc06f          	j	20403d3c <metal_lc3_interrupt_vector_handler>

20407350 <IRQ_LC4>:
IRQ_LC4():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20407350:	a83fc06f          	j	20403dd2 <metal_lc4_interrupt_vector_handler>

20407354 <IRQ_LC5>:
IRQ_LC5():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20407354:	b15fc06f          	j	20403e68 <metal_lc5_interrupt_vector_handler>

20407358 <IRQ_LC6>:
IRQ_LC6():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20407358:	ba7fc06f          	j	20403efe <metal_lc6_interrupt_vector_handler>

2040735c <IRQ_LC7>:
IRQ_LC7():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2040735c:	c39fc06f          	j	20403f94 <metal_lc7_interrupt_vector_handler>

20407360 <IRQ_LC8>:
IRQ_LC8():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20407360:	ccbfc06f          	j	2040402a <metal_lc8_interrupt_vector_handler>

20407364 <IRQ_LC9>:
IRQ_LC9():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20407364:	d5dfc06f          	j	204040c0 <metal_lc9_interrupt_vector_handler>

20407368 <IRQ_LC10>:
IRQ_LC10():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20407368:	deffc06f          	j	20404156 <metal_lc10_interrupt_vector_handler>

2040736c <IRQ_LC11>:
IRQ_LC11():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2040736c:	e81fc06f          	j	204041ec <metal_lc11_interrupt_vector_handler>

20407370 <IRQ_LC12>:
IRQ_LC12():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20407370:	f13fc06f          	j	20404282 <metal_lc12_interrupt_vector_handler>

20407374 <IRQ_LC13>:
IRQ_LC13():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20407374:	fa5fc06f          	j	20404318 <metal_lc13_interrupt_vector_handler>

20407378 <IRQ_LC14>:
IRQ_LC14():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20407378:	836fd06f          	j	204043ae <metal_lc14_interrupt_vector_handler>

2040737c <IRQ_LC15>:
IRQ_LC15():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2040737c:	8c8fd06f          	j	20404444 <metal_lc15_interrupt_vector_handler>

20407380 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:180
{
20407380:	1101                	addi	sp,sp,-32
20407382:	ce22                	sw	s0,28(sp)
20407384:	1000                	addi	s0,sp,32
20407386:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040738a:	fec42703          	lw	a4,-20(s0)
2040738e:	800007b7          	lui	a5,0x80000
20407392:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe590>
20407396:	00f71763          	bne	a4,a5,204073a4 <__metal_driver_fixed_clock_rate+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040739a:	00f427b7          	lui	a5,0xf42
2040739e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
204073a2:	a825                	j	204073da <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
204073a4:	fec42703          	lw	a4,-20(s0)
204073a8:	800007b7          	lui	a5,0x80000
204073ac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe59c>
204073b0:	00f71763          	bne	a4,a5,204073be <__metal_driver_fixed_clock_rate+0x3e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
204073b4:	044aa7b7          	lui	a5,0x44aa
204073b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
204073bc:	a839                	j	204073da <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
204073be:	fec42703          	lw	a4,-20(s0)
204073c2:	800007b7          	lui	a5,0x80000
204073c6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe5a8>
204073ca:	00f71763          	bne	a4,a5,204073d8 <__metal_driver_fixed_clock_rate+0x58>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
204073ce:	01e857b7          	lui	a5,0x1e85
204073d2:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
204073d6:	a011                	j	204073da <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:191
		return 0;
204073d8:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:193
}
204073da:	853e                	mv	a0,a5
204073dc:	4472                	lw	s0,28(sp)
204073de:	6105                	addi	sp,sp,32
204073e0:	8082                	ret

204073e2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
204073e2:	1101                	addi	sp,sp,-32
204073e4:	ce06                	sw	ra,28(sp)
204073e6:	cc22                	sw	s0,24(sp)
204073e8:	1000                	addi	s0,sp,32
204073ea:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
204073ee:	fec42503          	lw	a0,-20(s0)
204073f2:	f8fff0ef          	jal	ra,20407380 <__metal_driver_fixed_clock_rate>
204073f6:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:14
}
204073f8:	853e                	mv	a0,a5
204073fa:	40f2                	lw	ra,28(sp)
204073fc:	4462                	lw	s0,24(sp)
204073fe:	6105                	addi	sp,sp,32
20407400:	8082                	ret

20407402 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407402:	1101                	addi	sp,sp,-32
20407404:	ce06                	sw	ra,28(sp)
20407406:	cc22                	sw	s0,24(sp)
20407408:	1000                	addi	s0,sp,32
2040740a:	fea42623          	sw	a0,-20(s0)
2040740e:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407412:	fec42503          	lw	a0,-20(s0)
20407416:	fcdff0ef          	jal	ra,204073e2 <__metal_driver_fixed_clock_get_rate_hz>
2040741a:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:19
}
2040741c:	853e                	mv	a0,a5
2040741e:	40f2                	lw	ra,28(sp)
20407420:	4462                	lw	s0,24(sp)
20407422:	6105                	addi	sp,sp,32
20407424:	8082                	ret

20407426 <_exit>:
_exit():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20407426:	1101                	addi	sp,sp,-32
20407428:	ce06                	sw	ra,28(sp)
2040742a:	cc22                	sw	s0,24(sp)
2040742c:	1000                	addi	s0,sp,32
2040742e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20407432:	fec42503          	lw	a0,-20(s0)
20407436:	ea5ff0ef          	jal	ra,204072da <metal_shutdown>
