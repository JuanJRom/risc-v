
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/src/debug/empty.elf:     file format elf32-littleriscv
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00001018 memsz 0x00001018 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x20407640 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00001958 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002080 vaddr 0x20401080 paddr 0x20401080 align 2**12
         filesz 0x000065ba memsz 0x000065ba flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e0  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000cb0  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000065ba  20401080  20401080  00002080  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  20407640  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000d4c  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  80001520  80001520  000097c8  2**4  ALLOC
  8 .heap             00000800  80001920  80001920  000097c8  2**3  ALLOC
  9 .debug_info       0001fa7c  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     000030f1  00000000  00000000  00029244  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000d20  00000000  00000000  0002c338  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000ac0  00000000  00000000  0002d058  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000b71c  00000000  00000000  0002db18  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004f66  00000000  00000000  00039234  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003e19a  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003e1ca  2**0  CONTENTS, READONLY
 17 .debug_frame      00003318  00000000  00000000  0003e1fc  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401080 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80001520 l    d  .stack	00000000 .stack
80001920 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c4 l     F .init	00000000 __metal_memory_scrub
20400132 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400244 l       .init	00000000 _skip_init
204004a4 l       .rodata	00000000 argv
204004a8 l       .rodata	00000000 envp
204004ac l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20405ba2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20405bbc l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20405bd6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20405bec l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20405c00 l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20405c12 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20405c22 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20405c38 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20405c4a l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
204006a8 l     O .rodata	00000880 pll_configs
20405c60 l     F .text	0000004e get_pll_config_freq
20405ec2 l     F .text	000000ac find_closest_config
20405f6e l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 trap.c
00000000 l    df *ABS*	00000000 findfp.c
20401dc2 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
2040218e l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20402f94 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20402fbe l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20402fe6 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20403022 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20403182 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
204036c8 l     F .text	00000024 __metal_driver_cpu_hartid
204036ec l     F .text	0000002a __metal_driver_cpu_timebase
20403716 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20403740 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
204050f2 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040511c l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20405144 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2040516c l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20405194 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
204051b6 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
204062fc l     F .text	00000026 __metal_driver_sifive_gpio0_base
20406322 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
2040634c l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406c20 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20406c4a l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20406c78 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20406ca0 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20406cce l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20406cf8 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406d20 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
204070ea l     F .text	000000da pre_rate_change_callback_func
204071c4 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
204059b2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
204059cc l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
204059e2 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
204059f6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20405ab2 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20405acc l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20405ae2 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405af6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20406284 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20406bb0 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407580 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 kernel.c
20401080 l     F .text	0000001a r_mie
2040109a l     F .text	0000001a w_mie
204010b4 l     F .text	0000001a w_mtvec
204010ce l     F .text	0000002e intr_on
204010fc l     F .text	00000026 intr_off
800007c8 l     O .bss	00000004 i.0
00000000 l    df *ABS*	00000000 task.c
00000000 l    df *ABS*	00000000 semaphore.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007f8 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007f0 l     O .bss	00000004 init_done.1
800007f4 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20407500 l       .text	00000000 IRQ_0
20407504 l       .text	00000000 IRQ_1
20407508 l       .text	00000000 IRQ_2
2040750c l       .text	00000000 IRQ_3
20407510 l       .text	00000000 IRQ_4
20407514 l       .text	00000000 IRQ_5
20407518 l       .text	00000000 IRQ_6
2040751c l       .text	00000000 IRQ_7
20407520 l       .text	00000000 IRQ_8
20407524 l       .text	00000000 IRQ_9
20407528 l       .text	00000000 IRQ_10
2040752c l       .text	00000000 IRQ_11
20407530 l       .text	00000000 IRQ_12
20407534 l       .text	00000000 IRQ_13
20407538 l       .text	00000000 IRQ_14
2040753c l       .text	00000000 IRQ_15
20407540 l       .text	00000000 IRQ_LC0
20407544 l       .text	00000000 IRQ_LC1
20407548 l       .text	00000000 IRQ_LC2
2040754c l       .text	00000000 IRQ_LC3
20407550 l       .text	00000000 IRQ_LC4
20407554 l       .text	00000000 IRQ_LC5
20407558 l       .text	00000000 IRQ_LC6
2040755c l       .text	00000000 IRQ_LC7
20407560 l       .text	00000000 IRQ_LC8
20407564 l       .text	00000000 IRQ_LC9
20407568 l       .text	00000000 IRQ_LC10
2040756c l       .text	00000000 IRQ_LC11
20407570 l       .text	00000000 IRQ_LC12
20407574 l       .text	00000000 IRQ_LC13
20407578 l       .text	00000000 IRQ_LC14
2040757c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
20400fb0 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
204025d8 g     F .text	0000002e _isatty_r
20403fd2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401938 g     F .text	000000da _puts_r
20402606 g     F .text	00000032 _lseek_r
2040735c g     F .text	00000026 metal_clock_get_rate_hz
2040704a g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
2040335e g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20406e9e g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
20403f3c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
2040135c g     F .text	0000005a insertFirst
204047e4 g     F .text	00000058 __metal_valid_interrupt_id
2040140a g     F .text	00000090 delete
204018fa g     F .text	0000003e printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20404c62 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
20407308 g     F .text	00000054 _metal_clock_append_to_callbacks
20405210 g     F .text	00000046 __metal_plic0_complete_interrupt
20404a28 g     F .text	000001e2 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
2040250c g     F .text	00000036 __sseek
20401e7a g     F .text	0000006a __sinit
20401a4e g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
20401e34 g     F .text	00000046 __sfmoreglue
2040218c g     F .text	00000002 __malloc_unlock
20407458 g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
2040678a g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
204004b8 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80001514 g       .bss	00000000 metal_segment_bss_target_end
20403052 g     F .text	0000009a __metal_clint0_mtime_get
20405066 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20406f62 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20406540 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
800007d8 g     O .bss	00000004 count2
20406bd6 g     F .text	0000004a __metal_driver_sifive_test0_exit
20402bc2 g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20406e6e g     F .text	00000030 __metal_driver_sifive_uart0_txready
20406dfc g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
204011fe g     F .text	00000020 task_end
20400146 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
204030ec g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
204025a8 g     F .text	00000030 _fstat_r
204069da g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
8000150c g     O .bss	00000008 semaphore
800007e8 g     O .bss	00000004 errno
20405d52 g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
204073ce g     F .text	00000032 metal_clock_register_pre_rate_change_callback
204042c0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000d0  w    F .init	00000000 __metal_before_start
20402ebe  w    F .text	00000014 metal_init_run
20400644 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400600 g     O .rodata	00000044 __metal_driver_vtable_cpu
20402f66 g     F .text	0000002e metal_uart_set_baud_rate
204071f4 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20404cee g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400f28 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80001920 g       .heap	00000000 metal_segment_heap_target_start
20401e2a g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
2040422a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
2040611e g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405916 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20401a12 g     F .text	0000000c puts
20404518  w    F .text	00000096 metal_lc13_interrupt_vector_handler
204038d2 g     F .text	00000018 __metal_default_exception_handler
2040176a g     F .text	0000000c malloc
20402a22 g     F .text	00000026 _fstat
20403694 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20404c7e g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
204015b8 g     F .text	00000042 handle_trap
20403764 g     F .text	00000030 __metal_driver_cpu_get
2040059c g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
204037c6 g     F .text	00000018 __metal_interrupt_global_disable
2040598a g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20404194  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20404356  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20401a1e g     F .text	00000030 _sbrk_r
20405736 g     F .text	00000050 __metal_driver_riscv_plic0_disable
204048f8 g     F .text	0000004e __metal_exception_register
20402dce g     F .text	00000078 metal_init
204029ce g     F .text	00000032 _read_r
20404e80 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20406622 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
2040149a g     F .text	0000007c handle_interrupt
80000000 g       .rodata	00000000 metal_segment_lim_target_end
204039c2 g     F .text	00000068 __metal_default_sw_handler
20407400 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20406d4a g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20402a48 g     F .text	00000020 _isatty
204066e8 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20406d8a g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20401010 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20400ff0 g     O .rodata	00000004 _global_impure_ptr
20403a2a  w    F .text	00000092 metal_timer_interrupt_vector_handler
20402c2c g     F .text	0000005e __libc_init_array
20406662 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
204043ec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20405b80 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20404c0a g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20402abc g     F .text	0000008e _sbrk
204065dc g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
204072c6 g     F .text	00000042 _metal_clock_call_all_callbacks
204016c8 g     F .text	00000000 switch_to
204002be g     F .init	00000002 _init
20403828 g     F .text	0000001a __metal_interrupt_timer_disable
204067d4 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20404f3e g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400f74 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20406dc4 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20406728 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402bf6 g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
20406b62 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20402e46 g     F .text	00000078 metal_fini
20404ec8 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
204050d2 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
2040387a g     F .text	0000002c __metal_interrupt_local_enable
20403660 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20402ee6 g     F .text	00000026 metal_tty_putc
20401240 g     F .text	0000004a timer_init
2040540e g     F .text	00000018 __metal_plic0_default_handler
20402b4a  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20401692 g     F .text	00000020 semaphore_init
20405786 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403abc g     F .text	00000016 __metal_default_beu_handler
204003b0 g     O .rodata	00000020 __sf_fake_stderr
2040385e g     F .text	0000001c __metal_interrupt_external_disable
20406d6a g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20404cd2 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
800007cc g     O .bss	00000004 head
20404946 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
204021b8 g     F .text	00000042 __sfputs_r
20405020 g     F .text	00000046 __metal_driver_cpu_exception_register
204037de g     F .text	00000018 __metal_interrupt_software_enable
20403e10  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20402638 g     F .text	0000001a memchr
2040163e g     F .text	0000001c task1
20401776 g     F .text	000000a6 _free_r
800007ec g     O .bss	00000004 _global_atexit
204052d6 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
204046da g     F .text	00000058 __metal_controller_interrupt_vector_mode
20402d06 g     F .text	000000c8 __call_exitprocs
80001920 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400154 g     F .init	00000000 _start
2040165a g     F .text	0000001c task2
204012fe g     F .text	0000005e printList
20405a0c g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20402a68 g     F .text	0000002a _lseek
20405000 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20405094 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20403842 g     F .text	0000001c __metal_interrupt_external_enable
20402c8a g     F .text	0000007c __register_exitproc
20406f92 g     F .text	00000042 __metal_driver_sifive_uart0_putc
80000884 g     O .bss	00000004 current_ptr
204054cc g     F .text	00000158 __metal_driver_riscv_plic0_init
204056e6 g     F .text	00000050 __metal_driver_riscv_plic0_enable
204065b0 g     F .text	0000002c __metal_driver_sifive_gpio0_output
204040fe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20403794 g     F .text	0000001a __metal_myhart_id
20406b82 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
204013b6 g     F .text	00000054 find
20403930  w    F .text	00000092 metal_software_interrupt_vector_handler
20404c36 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
2040257a g     F .text	0000002e _close_r
2040702a g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
204015fa g     F .text	00000044 task
20401154 g     F .text	000000aa task_create
20403240 g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401b0e g     F .text	0000010a __swsetup_r
20401ee4 g     F .text	0000009c __sfp
20407382 g     F .text	0000004c metal_clock_set_rate_hz
2040248e g     F .text	00000030 __sread
800007dc g     O .bss	00000004 count3
20406500 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002c0  w    F .init	00000000 secondary_main
20403902  w    F .text	0000002e metal_interrupt_vector_handler
2040218a g     F .text	00000002 __malloc_lock
20406e36 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401d5e g     F .text	00000064 _fflush_r
2040529c g     F .text	0000003a __metal_plic0_get_threshold
20406296 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204003d0 g     O .rodata	00000020 __sf_fake_stdin
2040483c g     F .text	000000bc __metal_local_interrupt_enable
20403520 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
204020e2 g     F .text	000000a8 memset
20404068  w    F .text	00000096 metal_lc5_interrupt_vector_handler
204012ca g     F .text	00000034 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20406f18 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20400ff4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20404edc g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20404fa0 g     F .text	00000060 __metal_driver_cpu_get_msip
204074c2 g     F .text	00000016 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
204050b2 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
204051d4 g     F .text	0000003c __metal_plic0_claim_interrupt
20406ee8 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20402542 g     F .text	00000006 __sclose
20404482  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008e g     F .init	00000000 metal_mem_scrub
204016b4 g     F .text	00000000 osSchedulerLaunch
2040181c g     F .text	000000de _malloc_r
20403342 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000888 g     O .bss	00000004 temp_ptr
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20404d5e g     F .text	00000046 __metal_driver_cpu_timebase_get
2040587a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20407486 g     F .text	0000001a metal_cpu_get_current_hartid
20405b0c g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407500 g       .text	00000000 __metal_vector_table
20401018 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
800007d0 g     O .bss	00000004 count
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002be g     F .init	00000002 _fini
204018fa g     F .text	0000003e iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
2040128a g     F .text	00000040 scheduler_RoundRobin
20405338 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
204037ae g     F .text	00000018 __metal_interrupt_global_enable
20402bb8 g     F .text	0000000a atexit
20402548 g     F .text	00000032 _write_r
800007d4 g     O .bss	00000004 count1
2040380e g     F .text	0000001a __metal_interrupt_timer_enable
20406fd4 g     F .text	00000056 __metal_driver_sifive_uart0_getc
20403468 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
20402652 g     F .text	0000010c _printf_common
800007a0 g     O .data	00000004 _impure_ptr
20404e0a g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401c18 g     F .text	00000146 __sflush_r
8000088c g     O .bss	00000c80 PCB_STACK
204074a0 g     F .text	00000022 __metal_shutdown_exit
204057b6 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20405cae g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
204062c4 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
204075e2 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
204033b6 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
2040100c g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
20401516 g     F .text	000000a2 handle_exception
20407640 g       *ABS*	00000000 metal_segment_data_source_start
20400138 g       .init	00000000 early_trap_vector
80002120 g       .heap	00000000 metal_segment_heap_target_end
20404732 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20401fea g     F .text	0000005a __swhatbuf_r
204066a2 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20403ad2 g     F .text	00000066 __metal_default_timer_handler
20402b4a g     F .text	0000006e _write
20401122 g     F .text	00000032 stack_init
20405426 g     F .text	000000a6 __metal_plic0_handler
20403ea6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20404644  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20407432 g     F .text	00000026 metal_cpu_interrupt_controller
800007c0 g     O .data	00000004 __metal_dt_test_100000
204024be g     F .text	0000004e __swrite
20402bcc g     F .text	0000002a exit
204021fa g     F .text	00000294 _vfiprintf_r
20401f80 g     F .text	0000006a _fwalk_reent
20407602 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20401018 g       *ABS*	00000000 metal_segment_lim_source_start
204003f0 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
204038ea g     F .text	00000018 __metal_default_interrupt_handler
20402f38 g     F .text	0000002e metal_uart_putc
20402a92 g     F .text	0000002a _read
20402ed2  w    F .text	00000014 metal_fini_run
20406586 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403b80 g     F .text	00000180 __metal_exception_handler
20403d7a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20407626 g     F .text	00000014 _exit
20404da4 g     F .text	00000066 __metal_driver_cpu_mtime_get
20402044 g     F .text	0000009e __smakebuf_r
2040331a g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
2040275e g     F .text	00000270 _printf_i
800007e4 g     O .bss	00000004 __malloc_sbrk_start
204045ae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20400ffc g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
204031b8 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007e0 g     O .bss	00000004 __malloc_free_list
20401676 g     F .text	0000001c task3
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
204021fa g     F .text	00000294 _vfprintf_r
20404e9a g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2040536c g     F .text	000000a2 __metal_plic0_enable
2040008c  w      .init	00000000 __register_frame_info
20405a90 g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20404eae g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
204038a6 g     F .text	0000002c __metal_interrupt_local_disable
204037f6 g     F .text	00000018 __metal_interrupt_software_disable
20402f0c g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
20405256 g     F .text	00000046 __metal_plic0_set_threshold
204057de g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20402a00 g     F .text	00000022 _close
20401004 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
2040121e g     F .text	00000022 kernel_launch
20405624 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11828293          	addi	t0,t0,280 # 20400138 <early_trap_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011663          	bnez	sp,2040003c <_enter+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	5fc02117          	auipc	sp,0x5fc02
20400038:	8ec10113          	addi	sp,sp,-1812 # 80001920 <_sp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2040003c:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:60
    li t0, 0
20400040:	4281                	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400042:	40000313          	li	t1,1024
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400046:	ff017113          	andi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2040004a:	00a28563          	beq	t0,a0,20400054 <_enter+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004e:	911a                	add	sp,sp,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400050:	0285                	addi	t0,t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:67
    j 1b
20400052:	bfd5                	j	20400046 <_enter+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400054:	00000097          	auipc	ra,0x0
20400058:	07c08093          	addi	ra,ra,124 # 204000d0 <__metal_before_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:77
    beqz ra, 1f
2040005c:	00008363          	beqz	ra,20400062 <_enter+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:78
    jalr ra
20400060:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400062:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:85
    li a1, 0
20400066:	4581                	li	a1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:86
    li a2, 0
20400068:	4601                	li	a2,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:87
    call _start
2040006a:	20ed                	jal	20400154 <_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2040006c:	00000093          	li	ra,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:93
    beqz ra, 1f
20400070:	00008363          	beqz	ra,20400076 <_enter+0x76>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:94
    jalr ra
20400074:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400076:	00000297          	auipc	t0,0x0
2040007a:	00c28293          	addi	t0,t0,12 # 20400082 <_enter+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007e:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20400082:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:103
     j 1b
20400086:	bff5                	j	20400082 <_enter+0x82>
20400088:	0000                	unimp
	...

2040008c <__register_frame_info>:
__register_frame_info():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040008c:	8082                	ret

2040008e <metal_mem_scrub>:
metal_mem_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008e:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20400090:	3006b373          	csrrc	t1,mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400094:	4291                	li	t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400096:	0055c563          	blt	a1,t0,204000a0 <metal_mem_scrub+0x12>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
2040009a:	00357613          	andi	a2,a0,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009e:	ca11                	beqz	a2,204000b2 <metal_mem_scrub+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
204000a0:	00050023          	sb	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a4:	0505                	addi	a0,a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a6:	15fd                	addi	a1,a1,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a8:	feb047e3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000ac:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:39
    ret
204000b0:	8082                	ret
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000b2:	00052023          	sw	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b6:	0511                	addi	a0,a0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b8:	15f1                	addi	a1,a1,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000ba:	fcb04ee3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000be:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:46
    ret
204000c2:	8082                	ret

204000c4 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c4:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c8:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000ca:	fe734de3          	blt	t1,t2,204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ce:	8082                	ret

204000d0 <__metal_before_start>:
__metal_before_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000d0:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000d2:	dfc00297          	auipc	t0,0xdfc00
204000d6:	f2e28293          	addi	t0,t0,-210 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000da:	04028c63          	beqz	t0,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000de:	dfc00297          	auipc	t0,0xdfc00
204000e2:	f2228293          	addi	t0,t0,-222 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e6:	f14027f3          	csrr	a5,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000ea:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000ec:	3006b073          	csrc	mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000f0:	830a                	mv	t1,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000f2:	dfc00397          	auipc	t2,0xdfc00
204000f6:	30e38393          	addi	t2,t2,782 # 400 <__stack_size>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000fa:	938a                	add	t2,t2,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000fc:	00730363          	beq	t1,t2,20400102 <__metal_before_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20400100:	37d1                	jal	204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20400102:	02579863          	bne	a5,t0,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400106:	5fc00317          	auipc	t1,0x5fc00
2040010a:	efa30313          	addi	t1,t1,-262 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010e:	5fc00397          	auipc	t2,0x5fc00
20400112:	6ba38393          	addi	t2,t2,1722 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400116:	00730363          	beq	t1,t2,2040011c <__metal_before_start+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
2040011a:	376d                	jal	204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
2040011c:	5fc00317          	auipc	t1,0x5fc00
20400120:	ee430313          	addi	t1,t1,-284 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400124:	5fc00397          	auipc	t2,0x5fc00
20400128:	edc38393          	addi	t2,t2,-292 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
2040012c:	00730363          	beq	t1,t2,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20400130:	3f51                	jal	204000c4 <__metal_memory_scrub>

20400132 <skip_scrub>:
skip_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400132:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:130
    ret
20400134:	8082                	ret
	...

20400138 <early_trap_vector>:
early_trap_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400138:	342022f3          	csrr	t0,mcause
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:65
    csrr t1, mepc
2040013c:	34102373          	csrr	t1,mepc
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:66
    csrr t2, mtval
20400140:	343023f3          	csrr	t2,mtval
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:67
    j early_trap_vector
20400144:	bfd5                	j	20400138 <early_trap_vector>

20400146 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400146:	1141                	addi	sp,sp,-16
20400148:	c622                	sw	s0,12(sp)
2040014a:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
2040014c:	0001                	nop
2040014e:	4432                	lw	s0,12(sp)
20400150:	0141                	addi	sp,sp,16
20400152:	8082                	ret

20400154 <_start>:
_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400154:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400156:	5fc01197          	auipc	gp,0x5fc01
2040015a:	e4a18193          	addi	gp,gp,-438 # 80000fa0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015e:	00000293          	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20400162:	0e551163          	bne	a0,t0,20400244 <_skip_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400166:	00007297          	auipc	t0,0x7
2040016a:	4da28293          	addi	t0,t0,1242 # 20407640 <metal_segment_data_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016e:	5fc00317          	auipc	t1,0x5fc00
20400172:	e9230313          	addi	t1,t1,-366 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400176:	5fc00397          	auipc	t2,0x5fc00
2040017a:	65238393          	addi	t2,t2,1618 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017e:	00628c63          	beq	t0,t1,20400196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20400182:	00735a63          	bge	t1,t2,20400196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400186:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2040018a:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
2040018c:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20400190:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20400192:	fe734ae3          	blt	t1,t2,20400186 <_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400196:	00001297          	auipc	t0,0x1
2040019a:	e8228293          	addi	t0,t0,-382 # 20401018 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019e:	5fc00317          	auipc	t1,0x5fc00
204001a2:	e6230313          	addi	t1,t1,-414 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a6:	5fc00397          	auipc	t2,0x5fc00
204001aa:	e5a38393          	addi	t2,t2,-422 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001ae:	00628c63          	beq	t0,t1,204001c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001b2:	00735a63          	bge	t1,t2,204001c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b6:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001ba:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001bc:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001c0:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001c2:	fe734ae3          	blt	t1,t2,204001b6 <_start+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c6:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001ca:	00001297          	auipc	t0,0x1
204001ce:	e4e28293          	addi	t0,t0,-434 # 20401018 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001d2:	5fc00317          	auipc	t1,0x5fc00
204001d6:	e2e30313          	addi	t1,t1,-466 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001da:	5fc00397          	auipc	t2,0x5fc00
204001de:	e2638393          	addi	t2,t2,-474 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001e2:	00628c63          	beq	t0,t1,204001fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e6:	00735a63          	bge	t1,t2,204001fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ea:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ee:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001f0:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f4:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f6:	fe734ae3          	blt	t1,t2,204001ea <_start+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001fa:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fe:	5fc00317          	auipc	t1,0x5fc00
20400202:	5ca30313          	addi	t1,t1,1482 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400206:	57418393          	addi	t2,gp,1396 # 80001514 <metal_segment_bss_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2040020a:	00735763          	bge	t1,t2,20400218 <_start+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020e:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20400212:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400214:	fe734de3          	blt	t1,t2,2040020e <_start+0xba>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400218:	5fc00217          	auipc	tp,0x5fc00
2040021c:	5b020213          	addi	tp,tp,1456 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400220:	c211                	beqz	a2,20400224 <_start+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:167
  jalr a2
20400222:	9602                	jalr	a2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400224:	00003517          	auipc	a0,0x3
20400228:	9d250513          	addi	a0,a0,-1582 # 20402bf6 <__libc_fini_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:172
  call atexit
2040022c:	18d020ef          	jal	ra,20402bb8 <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20400230:	1fd020ef          	jal	ra,20402c2c <__libc_init_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400234:	00003517          	auipc	a0,0x3
20400238:	c9e50513          	addi	a0,a0,-866 # 20402ed2 <metal_fini_run>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:178
  call atexit
2040023c:	17d020ef          	jal	ra,20402bb8 <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20400240:	47f020ef          	jal	ra,20402ebe <metal_init_run>

20400244 <_skip_init>:
_skip_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400244:	3709                	jal	20400146 <__metal_synchronize_harts>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400246:	56fd                	li	a3,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400248:	3046b073          	csrc	mie,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
2040024c:	3446b073          	csrc	mip,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20400250:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400254:	00042737          	lui	a4,0x42
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400258:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2040025a:	c709                	beqz	a4,20400264 <_skip_init+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
2040025c:	3036b073          	csrc	mideleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20400260:	3026b073          	csrc	medeleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400264:	00040737          	lui	a4,0x40
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400268:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2040026a:	c319                	beqz	a4,20400270 <_skip_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
2040026c:	1806b073          	csrc	satp,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20400270:	6741                	lui	a4,0x10
20400272:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400276:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400278:	cb89                	beqz	a5,2040028a <_skip_init+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
2040027a:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027e:	6709                	lui	a4,0x2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20400280:	8fd9                	or	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20400282:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400286:	00305073          	csrwi	fcsr,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
2040028a:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028e:	00200737          	lui	a4,0x200
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20400292:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400294:	c799                	beqz	a5,204002a2 <_skip_init+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400296:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
2040029a:	2007e793          	ori	a5,a5,512
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029e:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
204002a2:	4505                	li	a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a4:	00000597          	auipc	a1,0x0
204002a8:	20058593          	addi	a1,a1,512 # 204004a4 <argv>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002ac:	00000617          	auipc	a2,0x0
204002b0:	1fc60613          	addi	a2,a2,508 # 204004a8 <envp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b4:	2031                	jal	204002c0 <secondary_main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b6:	117020ef          	jal	ra,20402bcc <exit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002ba:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:248
  ret
204002bc:	8082                	ret

204002be <_fini>:
_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002be:	8082                	ret

204002c0 <secondary_main>:
secondary_main():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002c0:	1141                	addi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002c2:	c206                	sw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c4:	f14022f3          	csrr	t0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c8:	00000313          	li	t1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002cc:	00628563          	beq	t0,t1,204002d6 <secondary_main+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002d0:	10500073          	wfi
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:282
  j 1b
204002d4:	bff5                	j	204002d0 <secondary_main+0x10>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d6:	7f5000ef          	jal	ra,204012ca <main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002da:	4092                	lw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002dc:	0141                	addi	sp,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:291
  ret
204002de:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20400302:	40b020ef          	jal	ra,20402f0c <metal_uart_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	10b050ef          	jal	ra,20405c22 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe670>
2040032e:	181050ef          	jal	ra,20405cae <__metal_driver_sifive_fe310_g000_pll_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	0df050ef          	jal	ra,20405c22 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe670>
20400358:	02a070ef          	jal	ra,20407382 <metal_clock_set_rate_hz>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401080 <r_mie>:
r_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:99

// Machine-mode Interrupt Enable
#define MIE_MEIE (1L << 11)  // external
#define MIE_MTIE (1L << 7)   // timer
#define MIE_MSIE (1L << 3)   // software
static inline uint32_t r_mie() {
20401080:	1101                	addi	sp,sp,-32
20401082:	ce22                	sw	s0,28(sp)
20401084:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:101
    uint32_t x;
    asm volatile("csrr %0, mie" : "=r"(x));
20401086:	304027f3          	csrr	a5,mie
2040108a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:102
    return x;
2040108e:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:103
}
20401092:	853e                	mv	a0,a5
20401094:	4472                	lw	s0,28(sp)
20401096:	6105                	addi	sp,sp,32
20401098:	8082                	ret

2040109a <w_mie>:
w_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:105

static inline void w_mie(uint32_t x) {
2040109a:	1101                	addi	sp,sp,-32
2040109c:	ce22                	sw	s0,28(sp)
2040109e:	1000                	addi	s0,sp,32
204010a0:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
204010a4:	fec42783          	lw	a5,-20(s0)
204010a8:	30479073          	csrw	mie,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:107
}
204010ac:	0001                	nop
204010ae:	4472                	lw	s0,28(sp)
204010b0:	6105                	addi	sp,sp,32
204010b2:	8082                	ret

204010b4 <w_mtvec>:
w_mtvec():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:157
    asm volatile("csrr %0, stvec" : "=r"(x));
    return x;
}

// Machine-mode interrupt vector
static inline void w_mtvec(uint32_t x) {
204010b4:	1101                	addi	sp,sp,-32
204010b6:	ce22                	sw	s0,28(sp)
204010b8:	1000                	addi	s0,sp,32
204010ba:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:158
    asm volatile("csrw mtvec, %0" : : "r"(x));
204010be:	fec42783          	lw	a5,-20(s0)
204010c2:	30579073          	csrw	mtvec,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:159
}
204010c6:	0001                	nop
204010c8:	4472                	lw	s0,28(sp)
204010ca:	6105                	addi	sp,sp,32
204010cc:	8082                	ret

204010ce <intr_on>:
intr_on():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:224
//Interrupts on and off by JJRH
#define INTERRUPT_ON (1 << 7)
#define INTERRUPT_OFF (0 << 7)

// enable device interrupts by JJRH
static inline void intr_on() {
204010ce:	1101                	addi	sp,sp,-32
204010d0:	ce06                	sw	ra,28(sp)
204010d2:	cc22                	sw	s0,24(sp)
204010d4:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:225
	uint32_t mie = r_mie();
204010d6:	376d                	jal	20401080 <r_mie>
204010d8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:226
	mie |= INTERRUPT_ON;
204010dc:	fec42783          	lw	a5,-20(s0)
204010e0:	0807e793          	ori	a5,a5,128
204010e4:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
204010e8:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:228
	w_mie(mie);
204010ec:	fec42503          	lw	a0,-20(s0)
204010f0:	376d                	jal	2040109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:229
}
204010f2:	0001                	nop
204010f4:	40f2                	lw	ra,28(sp)
204010f6:	4462                	lw	s0,24(sp)
204010f8:	6105                	addi	sp,sp,32
204010fa:	8082                	ret

204010fc <intr_off>:
intr_off():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:240

// disable device interrupts
//static inline void intr_off() { w_sstatus(r_sstatus() & ~SSTATUS_SIE); }

// disable device interrupts  by JJRH
static inline void intr_off() {
204010fc:	1101                	addi	sp,sp,-32
204010fe:	ce06                	sw	ra,28(sp)
20401100:	cc22                	sw	s0,24(sp)
20401102:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:241
	uint32_t mie = r_mie();
20401104:	3fb5                	jal	20401080 <r_mie>
20401106:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:242
	mie &= INTERRUPT_OFF;
2040110a:	fe042623          	sw	zero,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
2040110e:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:244
	w_mie(mie);
20401112:	fec42503          	lw	a0,-20(s0)
20401116:	3751                	jal	2040109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:245
}
20401118:	0001                	nop
2040111a:	40f2                	lw	ra,28(sp)
2040111c:	4462                	lw	s0,24(sp)
2040111e:	6105                	addi	sp,sp,32
20401120:	8082                	ret

20401122 <stack_init>:
stack_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:22
extern void switch_to(void);
extern void osSchedulerLaunch(void);

int32_t PCB_STACK[NUM_OF_THREADS][STACKSIZE];

void stack_init(int i){
20401122:	1101                	addi	sp,sp,-32
20401124:	ce22                	sw	s0,28(sp)
20401126:	1000                	addi	s0,sp,32
20401128:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:23
	temp_ptr->stackPt = &PCB_STACK[i][STACKSIZE];
2040112c:	8e81a783          	lw	a5,-1816(gp) # 80000888 <temp_ptr>
20401130:	fec42703          	lw	a4,-20(s0)
20401134:	00170693          	addi	a3,a4,1 # 200001 <__heap_size+0x1ff801>
20401138:	32000713          	li	a4,800
2040113c:	02e686b3          	mul	a3,a3,a4
20401140:	80001737          	lui	a4,0x80001
20401144:	88c70713          	addi	a4,a4,-1908 # 8000088c <metal_segment_heap_target_end+0xffffe76c>
20401148:	9736                	add	a4,a4,a3
2040114a:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:25
	//PCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;
}
2040114c:	0001                	nop
2040114e:	4472                	lw	s0,28(sp)
20401150:	6105                	addi	sp,sp,32
20401152:	8082                	ret

20401154 <task_create>:
task_create():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:27

int task_create(void(*task)(void)/*, void(*task1)(void), void(*task2)(void), void(*task3)(void)*/){
20401154:	1101                	addi	sp,sp,-32
20401156:	ce06                	sw	ra,28(sp)
20401158:	cc22                	sw	s0,24(sp)
2040115a:	1000                	addi	s0,sp,32
2040115c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:28
	intr_off();
20401160:	3f71                	jal	204010fc <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:30
	static uint32_t i=0;
	temp_ptr = insertFirst(i, ready);
20401162:	800007b7          	lui	a5,0x80000
20401166:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
2040116a:	4581                	li	a1,0
2040116c:	853e                	mv	a0,a5
2040116e:	22fd                	jal	2040135c <insertFirst>
20401170:	872a                	mv	a4,a0
20401172:	8ee1a423          	sw	a4,-1816(gp) # 80000888 <temp_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:31
	if(temp_ptr->id==0) current_ptr = temp_ptr;
20401176:	8e81a783          	lw	a5,-1816(gp) # 80000888 <temp_ptr>
2040117a:	479c                	lw	a5,8(a5)
2040117c:	e789                	bnez	a5,20401186 <task_create+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:31 (discriminator 1)
2040117e:	8e81a703          	lw	a4,-1816(gp) # 80000888 <temp_ptr>
20401182:	8ee1a223          	sw	a4,-1820(gp) # 80000884 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:32
	stack_init(temp_ptr->id);
20401186:	8e81a783          	lw	a5,-1816(gp) # 80000888 <temp_ptr>
2040118a:	479c                	lw	a5,8(a5)
2040118c:	853e                	mv	a0,a5
2040118e:	3f51                	jal	20401122 <stack_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:33
	PCB_STACK[i][STACKSIZE] = (int32_t)(task);
20401190:	800007b7          	lui	a5,0x80000
20401194:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
20401198:	fec42703          	lw	a4,-20(s0)
2040119c:	800016b7          	lui	a3,0x80001
204011a0:	88c68693          	addi	a3,a3,-1908 # 8000088c <metal_segment_heap_target_end+0xffffe76c>
204011a4:	00178613          	addi	a2,a5,1
204011a8:	32000793          	li	a5,800
204011ac:	02f607b3          	mul	a5,a2,a5
204011b0:	97b6                	add	a5,a5,a3
204011b2:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:34
	PCB_STACK[i][STACKSIZE-1] = (int32_t)(task);
204011b4:	800007b7          	lui	a5,0x80000
204011b8:	7c87a603          	lw	a2,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
204011bc:	fec42703          	lw	a4,-20(s0)
204011c0:	800017b7          	lui	a5,0x80001
204011c4:	88c78693          	addi	a3,a5,-1908 # 8000088c <metal_segment_heap_target_end+0xffffe76c>
204011c8:	32000793          	li	a5,800
204011cc:	02f607b3          	mul	a5,a2,a5
204011d0:	97b6                	add	a5,a5,a3
204011d2:	30e7ae23          	sw	a4,796(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:35
	i++;
204011d6:	800007b7          	lui	a5,0x80000
204011da:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
204011de:	00178713          	addi	a4,a5,1
204011e2:	800007b7          	lui	a5,0x80000
204011e6:	7ce7a423          	sw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:36
	intr_on();
204011ea:	35d5                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:37
	return i;
204011ec:	800007b7          	lui	a5,0x80000
204011f0:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:38
}
204011f4:	853e                	mv	a0,a5
204011f6:	40f2                	lw	ra,28(sp)
204011f8:	4462                	lw	s0,24(sp)
204011fa:	6105                	addi	sp,sp,32
204011fc:	8082                	ret

204011fe <task_end>:
task_end():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:40

void task_end(void){
204011fe:	1141                	addi	sp,sp,-16
20401200:	c606                	sw	ra,12(sp)
20401202:	c422                	sw	s0,8(sp)
20401204:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:41
	intr_off();
20401206:	3ddd                	jal	204010fc <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:42
	delete(current_ptr->id);
20401208:	8e41a783          	lw	a5,-1820(gp) # 80000884 <current_ptr>
2040120c:	479c                	lw	a5,8(a5)
2040120e:	853e                	mv	a0,a5
20401210:	2aed                	jal	2040140a <delete>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:43
	intr_on();
20401212:	3d75                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:44
}
20401214:	0001                	nop
20401216:	40b2                	lw	ra,12(sp)
20401218:	4422                	lw	s0,8(sp)
2040121a:	0141                	addi	sp,sp,16
2040121c:	8082                	ret

2040121e <kernel_launch>:
kernel_launch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:60
void task_unlock(){
	temp_ptr = queue_deleteFirst();
	insertFirst(temp_ptr->id, ready);
}

void kernel_launch(void){
2040121e:	1141                	addi	sp,sp,-16
20401220:	c606                	sw	ra,12(sp)
20401222:	c422                	sw	s0,8(sp)
20401224:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:61
	w_mtvec((uint32_t)switch_to);
20401226:	204017b7          	lui	a5,0x20401
2040122a:	6c878793          	addi	a5,a5,1736 # 204016c8 <switch_to>
2040122e:	853e                	mv	a0,a5
20401230:	3551                	jal	204010b4 <w_mtvec>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:62
	timer_init();
20401232:	2039                	jal	20401240 <timer_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:63
	osSchedulerLaunch();
20401234:	2141                	jal	204016b4 <osSchedulerLaunch>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:64
}
20401236:	0001                	nop
20401238:	40b2                	lw	ra,12(sp)
2040123a:	4422                	lw	s0,8(sp)
2040123c:	0141                	addi	sp,sp,16
2040123e:	8082                	ret

20401240 <timer_init>:
timer_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:66

void timer_init(void) {
20401240:	1141                	addi	sp,sp,-16
20401242:	c606                	sw	ra,12(sp)
20401244:	c422                	sw	s0,8(sp)
20401246:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:67
	*MTIMECMP = *MTIME + 0xfffff * 5;
20401248:	0200c7b7          	lui	a5,0x200c
2040124c:	17e1                	addi	a5,a5,-8
2040124e:	4398                	lw	a4,0(a5)
20401250:	43dc                	lw	a5,4(a5)
20401252:	02004837          	lui	a6,0x2004
20401256:	00500537          	lui	a0,0x500
2040125a:	156d                	addi	a0,a0,-5
2040125c:	4581                	li	a1,0
2040125e:	00a70633          	add	a2,a4,a0
20401262:	88b2                	mv	a7,a2
20401264:	00e8b8b3          	sltu	a7,a7,a4
20401268:	00b786b3          	add	a3,a5,a1
2040126c:	00d887b3          	add	a5,a7,a3
20401270:	86be                	mv	a3,a5
20401272:	8732                	mv	a4,a2
20401274:	87b6                	mv	a5,a3
20401276:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
2040127a:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:68
	intr_on();
2040127e:	3d81                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:69
}
20401280:	0001                	nop
20401282:	40b2                	lw	ra,12(sp)
20401284:	4422                	lw	s0,8(sp)
20401286:	0141                	addi	sp,sp,16
20401288:	8082                	ret

2040128a <scheduler_RoundRobin>:
scheduler_RoundRobin():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:71

void scheduler_RoundRobin(void){
2040128a:	1141                	addi	sp,sp,-16
2040128c:	c606                	sw	ra,12(sp)
2040128e:	c422                	sw	s0,8(sp)
20401290:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:72
	current_ptr->Current_state = ready;
20401292:	8e41a783          	lw	a5,-1820(gp) # 80000884 <current_ptr>
20401296:	0007a623          	sw	zero,12(a5) # 200c00c <__heap_size+0x200b80c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:73
	if(current_ptr->nextPt == NULL)
2040129a:	8e41a783          	lw	a5,-1820(gp) # 80000884 <current_ptr>
2040129e:	43dc                	lw	a5,4(a5)
204012a0:	e799                	bnez	a5,204012ae <scheduler_RoundRobin+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:74
		current_ptr = find(3);
204012a2:	450d                	li	a0,3
204012a4:	2a09                	jal	204013b6 <find>
204012a6:	872a                	mv	a4,a0
204012a8:	8ee1a223          	sw	a4,-1820(gp) # 80000884 <current_ptr>
204012ac:	a031                	j	204012b8 <scheduler_RoundRobin+0x2e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:76
	else
		current_ptr = current_ptr->nextPt;
204012ae:	8e41a783          	lw	a5,-1820(gp) # 80000884 <current_ptr>
204012b2:	43d8                	lw	a4,4(a5)
204012b4:	8ee1a223          	sw	a4,-1820(gp) # 80000884 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:77
		current_ptr->Current_state = running;
204012b8:	8e41a783          	lw	a5,-1820(gp) # 80000884 <current_ptr>
204012bc:	4705                	li	a4,1
204012be:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:78
}
204012c0:	0001                	nop
204012c2:	40b2                	lw	ra,12(sp)
204012c4:	4422                	lw	s0,8(sp)
204012c6:	0141                	addi	sp,sp,16
204012c8:	8082                	ret

204012ca <main>:
main():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:13
#include "list.h"
#include "task.h"



int main() {
204012ca:	1141                	addi	sp,sp,-16
204012cc:	c606                	sw	ra,12(sp)
204012ce:	c422                	sw	s0,8(sp)
204012d0:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:14
	semaphore_init(&semaphore, 1);
204012d2:	4585                	li	a1,1
204012d4:	56c18513          	addi	a0,gp,1388 # 8000150c <semaphore>
204012d8:	2e6d                	jal	20401692 <semaphore_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:15
	printf("RISC-V Kernel\n");
204012da:	204007b7          	lui	a5,0x20400
204012de:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
204012e2:	730000ef          	jal	ra,20401a12 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:16
	task_create(&task);
204012e6:	204017b7          	lui	a5,0x20401
204012ea:	5fa78513          	addi	a0,a5,1530 # 204015fa <task>
204012ee:	359d                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:17
	kernel_launch();
204012f0:	373d                	jal	2040121e <kernel_launch>
204012f2:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:19
	//asm volatile("wfi");
}
204012f4:	853e                	mv	a0,a5
204012f6:	40b2                	lw	ra,12(sp)
204012f8:	4422                	lw	s0,8(sp)
204012fa:	0141                	addi	sp,sp,16
204012fc:	8082                	ret

204012fe <printList>:
printList():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:14

struct pcb *head = NULL;
struct pcb *current = NULL;

//display the list
void printList() {
204012fe:	1101                	addi	sp,sp,-32
20401300:	ce06                	sw	ra,28(sp)
20401302:	cc22                	sw	s0,24(sp)
20401304:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:15
   struct pcb *ptr = head;
20401306:	800007b7          	lui	a5,0x80000
2040130a:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
2040130e:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:16
   printf("\n[ ");
20401312:	204007b7          	lui	a5,0x20400
20401316:	37878513          	addi	a0,a5,888 # 20400378 <use_hfxosc+0x3c>
2040131a:	23c5                	jal	204018fa <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:19

   //start from the beginning
   while(ptr != NULL) {
2040131c:	a01d                	j	20401342 <printList+0x44>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:20
      printf("(ID: %d, State: %d) ", ptr->id ,ptr->Current_state);
2040131e:	fec42783          	lw	a5,-20(s0)
20401322:	4798                	lw	a4,8(a5)
20401324:	fec42783          	lw	a5,-20(s0)
20401328:	47dc                	lw	a5,12(a5)
2040132a:	863e                	mv	a2,a5
2040132c:	85ba                	mv	a1,a4
2040132e:	204007b7          	lui	a5,0x20400
20401332:	37c78513          	addi	a0,a5,892 # 2040037c <use_hfxosc+0x40>
20401336:	23d1                	jal	204018fa <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:21
      ptr = ptr->nextPt;
20401338:	fec42783          	lw	a5,-20(s0)
2040133c:	43dc                	lw	a5,4(a5)
2040133e:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:19
   while(ptr != NULL) {
20401342:	fec42783          	lw	a5,-20(s0)
20401346:	ffe1                	bnez	a5,2040131e <printList+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:24
   }

   printf(" ]");
20401348:	204007b7          	lui	a5,0x20400
2040134c:	39478513          	addi	a0,a5,916 # 20400394 <use_hfxosc+0x58>
20401350:	236d                	jal	204018fa <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:25
}
20401352:	0001                	nop
20401354:	40f2                	lw	ra,28(sp)
20401356:	4462                	lw	s0,24(sp)
20401358:	6105                	addi	sp,sp,32
2040135a:	8082                	ret

2040135c <insertFirst>:
insertFirst():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:28

//insert link at the first location
struct pcb* insertFirst(int id, int Current_state) {
2040135c:	7179                	addi	sp,sp,-48
2040135e:	d606                	sw	ra,44(sp)
20401360:	d422                	sw	s0,40(sp)
20401362:	1800                	addi	s0,sp,48
20401364:	fca42e23          	sw	a0,-36(s0)
20401368:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:30
   //create a link
   struct pcb *link = (struct pcb*) malloc(sizeof(struct pcb));
2040136c:	4541                	li	a0,16
2040136e:	2ef5                	jal	2040176a <malloc>
20401370:	87aa                	mv	a5,a0
20401372:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:32

   link->id = id;
20401376:	fec42783          	lw	a5,-20(s0)
2040137a:	fdc42703          	lw	a4,-36(s0)
2040137e:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:33
   link->Current_state = Current_state;
20401380:	fd842703          	lw	a4,-40(s0)
20401384:	fec42783          	lw	a5,-20(s0)
20401388:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:36

   //point it to old first pcb
   link->nextPt = head;
2040138a:	800007b7          	lui	a5,0x80000
2040138e:	7cc7a703          	lw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401392:	fec42783          	lw	a5,-20(s0)
20401396:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:39

   //point first to new first pcb
   head = link;
20401398:	800007b7          	lui	a5,0x80000
2040139c:	fec42703          	lw	a4,-20(s0)
204013a0:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:41

   return head;
204013a4:	800007b7          	lui	a5,0x80000
204013a8:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:42
}
204013ac:	853e                	mv	a0,a5
204013ae:	50b2                	lw	ra,44(sp)
204013b0:	5422                	lw	s0,40(sp)
204013b2:	6145                	addi	sp,sp,48
204013b4:	8082                	ret

204013b6 <find>:
find():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:80

   return length;
}

//find a link with given id
struct pcb* find(int id) {
204013b6:	7179                	addi	sp,sp,-48
204013b8:	d622                	sw	s0,44(sp)
204013ba:	1800                	addi	s0,sp,48
204013bc:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:83

   //start from the first link
   struct pcb* current = head;
204013c0:	800007b7          	lui	a5,0x80000
204013c4:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
204013c8:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:86

   //if list is empty
   if(head == NULL) {
204013cc:	800007b7          	lui	a5,0x80000
204013d0:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
204013d4:	ef91                	bnez	a5,204013f0 <find+0x3a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:87
      return NULL;
204013d6:	4781                	li	a5,0
204013d8:	a02d                	j	20401402 <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:94

   //navigate through list
   while(current->id != id) {

      //if it is last pcb
      if(current->nextPt == NULL) {
204013da:	fec42783          	lw	a5,-20(s0)
204013de:	43dc                	lw	a5,4(a5)
204013e0:	e399                	bnez	a5,204013e6 <find+0x30>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:95
         return NULL;
204013e2:	4781                	li	a5,0
204013e4:	a839                	j	20401402 <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:98
      } else {
         //go to next link
         current = current->nextPt;
204013e6:	fec42783          	lw	a5,-20(s0)
204013ea:	43dc                	lw	a5,4(a5)
204013ec:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:91
   while(current->id != id) {
204013f0:	fec42783          	lw	a5,-20(s0)
204013f4:	479c                	lw	a5,8(a5)
204013f6:	fdc42703          	lw	a4,-36(s0)
204013fa:	fef710e3          	bne	a4,a5,204013da <find+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:103
      }
   }

   //if Current_state found, return the current Link
   return current;
204013fe:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:104
}
20401402:	853e                	mv	a0,a5
20401404:	5432                	lw	s0,44(sp)
20401406:	6145                	addi	sp,sp,48
20401408:	8082                	ret

2040140a <delete>:
delete():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:107

//delete a link with given id
struct pcb* delete(int id) {
2040140a:	7179                	addi	sp,sp,-48
2040140c:	d622                	sw	s0,44(sp)
2040140e:	1800                	addi	s0,sp,48
20401410:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:110

   //start from the first link
   struct pcb* current = head;
20401414:	800007b7          	lui	a5,0x80000
20401418:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
2040141c:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:111
   struct pcb* previous = NULL;
20401420:	fe042423          	sw	zero,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:114

   //if list is empty
   if(head == NULL) {
20401424:	800007b7          	lui	a5,0x80000
20401428:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
2040142c:	e395                	bnez	a5,20401450 <delete+0x46>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:115
      return NULL;
2040142e:	4781                	li	a5,0
20401430:	a08d                	j	20401492 <delete+0x88>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:122

   //navigate through list
   while(current->id != id) {

      //if it is last pcb
      if(current->nextPt == NULL) {
20401432:	fec42783          	lw	a5,-20(s0)
20401436:	43dc                	lw	a5,4(a5)
20401438:	e399                	bnez	a5,2040143e <delete+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:123
         return NULL;
2040143a:	4781                	li	a5,0
2040143c:	a899                	j	20401492 <delete+0x88>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:126
      } else {
         //store reference to current link
         previous = current;
2040143e:	fec42783          	lw	a5,-20(s0)
20401442:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:128
         //move to next link
         current = current->nextPt;
20401446:	fec42783          	lw	a5,-20(s0)
2040144a:	43dc                	lw	a5,4(a5)
2040144c:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:119
   while(current->id != id) {
20401450:	fec42783          	lw	a5,-20(s0)
20401454:	479c                	lw	a5,8(a5)
20401456:	fdc42703          	lw	a4,-36(s0)
2040145a:	fcf71ce3          	bne	a4,a5,20401432 <delete+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:133
      }
   }

   //found a match, update the link
   if(current == head) {
2040145e:	800007b7          	lui	a5,0x80000
20401462:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401466:	fec42703          	lw	a4,-20(s0)
2040146a:	00f71c63          	bne	a4,a5,20401482 <delete+0x78>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:135
      //change first to point to next link
      head = head->nextPt;
2040146e:	800007b7          	lui	a5,0x80000
20401472:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401476:	43d8                	lw	a4,4(a5)
20401478:	800007b7          	lui	a5,0x80000
2040147c:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401480:	a039                	j	2040148e <delete+0x84>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:138
   } else {
      //bypass the current link
      previous->nextPt = current->nextPt;
20401482:	fec42783          	lw	a5,-20(s0)
20401486:	43d8                	lw	a4,4(a5)
20401488:	fe842783          	lw	a5,-24(s0)
2040148c:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:141
   }

   return current;
2040148e:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:142
}
20401492:	853e                	mv	a0,a5
20401494:	5432                	lw	s0,44(sp)
20401496:	6145                	addi	sp,sp,48
20401498:	8082                	ret

2040149a <handle_interrupt>:
handle_interrupt():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:14

#define CLINT_BASE 0x2000000
#define MTIME (volatile unsigned long long int *)(CLINT_BASE + 0xbff8)
#define MTIMECMP (volatile unsigned long long int *)(CLINT_BASE + 0x4000)

void handle_interrupt(uint32_t mcause) {
2040149a:	1101                	addi	sp,sp,-32
2040149c:	ce06                	sw	ra,28(sp)
2040149e:	cc22                	sw	s0,24(sp)
204014a0:	1000                	addi	s0,sp,32
204014a2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:15
    if ((mcause << 1 >> 1) == 0x7) {
204014a6:	fec42703          	lw	a4,-20(s0)
204014aa:	800007b7          	lui	a5,0x80000
204014ae:	fff7c793          	not	a5,a5
204014b2:	8f7d                	and	a4,a4,a5
204014b4:	479d                	li	a5,7
204014b6:	02f71e63          	bne	a4,a5,204014f2 <handle_interrupt+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:17
        //printf("  Switch context \n");
        *MTIMECMP = *MTIME + 0xfffff * 5;
204014ba:	0200c7b7          	lui	a5,0x200c
204014be:	17e1                	addi	a5,a5,-8
204014c0:	4398                	lw	a4,0(a5)
204014c2:	43dc                	lw	a5,4(a5)
204014c4:	02004837          	lui	a6,0x2004
204014c8:	00500537          	lui	a0,0x500
204014cc:	156d                	addi	a0,a0,-5
204014ce:	4581                	li	a1,0
204014d0:	00a70633          	add	a2,a4,a0
204014d4:	88b2                	mv	a7,a2
204014d6:	00e8b8b3          	sltu	a7,a7,a4
204014da:	00b786b3          	add	a3,a5,a1
204014de:	00d887b3          	add	a5,a7,a3
204014e2:	86be                	mv	a3,a5
204014e4:	8732                	mv	a4,a2
204014e6:	87b6                	mv	a5,a3
204014e8:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
204014ec:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:24
    } else {
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1)
            ;
    }
}
204014f0:	a839                	j	2040150e <handle_interrupt+0x74>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:20
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
204014f2:	fec42703          	lw	a4,-20(s0)
204014f6:	800007b7          	lui	a5,0x80000
204014fa:	fff7c793          	not	a5,a5
204014fe:	8ff9                	and	a5,a5,a4
20401500:	85be                	mv	a1,a5
20401502:	204007b7          	lui	a5,0x20400
20401506:	39878513          	addi	a0,a5,920 # 20400398 <use_hfxosc+0x5c>
2040150a:	2ec5                	jal	204018fa <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:21 (discriminator 1)
        while (1)
2040150c:	a001                	j	2040150c <handle_interrupt+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:24
}
2040150e:	40f2                	lw	ra,28(sp)
20401510:	4462                	lw	s0,24(sp)
20401512:	6105                	addi	sp,sp,32
20401514:	8082                	ret

20401516 <handle_exception>:
handle_exception():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:26

void handle_exception(uint32_t mcause) {
20401516:	7179                	addi	sp,sp,-48
20401518:	d606                	sw	ra,44(sp)
2040151a:	d422                	sw	s0,40(sp)
2040151c:	1800                	addi	s0,sp,48
2040151e:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:29
    unsigned long long int mie;

    if (mcause == 0x8) {
20401522:	fdc42703          	lw	a4,-36(s0)
20401526:	47a1                	li	a5,8
20401528:	06f71663          	bne	a4,a5,20401594 <handle_exception+0x7e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:30
        *MTIMECMP = *MTIME + 0xfffff * 25;
2040152c:	0200c7b7          	lui	a5,0x200c
20401530:	17e1                	addi	a5,a5,-8
20401532:	4398                	lw	a4,0(a5)
20401534:	43dc                	lw	a5,4(a5)
20401536:	02004837          	lui	a6,0x2004
2040153a:	01900537          	lui	a0,0x1900
2040153e:	151d                	addi	a0,a0,-25
20401540:	4581                	li	a1,0
20401542:	00a70633          	add	a2,a4,a0
20401546:	88b2                	mv	a7,a2
20401548:	00e8b8b3          	sltu	a7,a7,a4
2040154c:	00b786b3          	add	a3,a5,a1
20401550:	00d887b3          	add	a5,a7,a3
20401554:	86be                	mv	a3,a5
20401556:	8732                	mv	a4,a2
20401558:	87b6                	mv	a5,a3
2040155a:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
2040155e:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:32

        asm volatile("csrr %0, mie" : "=r"(mie));
20401562:	30402773          	csrr	a4,mie
20401566:	fee42423          	sw	a4,-24(s0)
2040156a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:33
        mie |= (1 << 7);
2040156e:	fe842783          	lw	a5,-24(s0)
20401572:	0807e793          	ori	a5,a5,128
20401576:	fef42423          	sw	a5,-24(s0)
2040157a:	fec42783          	lw	a5,-20(s0)
2040157e:	0007e793          	ori	a5,a5,0
20401582:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:34
        asm volatile("csrw mie, %0" : "=r"(mie));
20401586:	30471073          	csrw	mie,a4
2040158a:	fee42423          	sw	a4,-24(s0)
2040158e:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:40
    } else {
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1){
        };
    }
}
20401592:	a839                	j	204015b0 <handle_exception+0x9a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:36
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
20401594:	fdc42703          	lw	a4,-36(s0)
20401598:	800007b7          	lui	a5,0x80000
2040159c:	fff7c793          	not	a5,a5
204015a0:	8ff9                	and	a5,a5,a4
204015a2:	85be                	mv	a1,a5
204015a4:	204007b7          	lui	a5,0x20400
204015a8:	39878513          	addi	a0,a5,920 # 20400398 <use_hfxosc+0x5c>
204015ac:	26b9                	jal	204018fa <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:37 (discriminator 1)
        while (1){
204015ae:	a001                	j	204015ae <handle_exception+0x98>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:40
}
204015b0:	50b2                	lw	ra,44(sp)
204015b2:	5422                	lw	s0,40(sp)
204015b4:	6145                	addi	sp,sp,48
204015b6:	8082                	ret

204015b8 <handle_trap>:
handle_trap():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:42

void handle_trap() {
204015b8:	1101                	addi	sp,sp,-32
204015ba:	ce06                	sw	ra,28(sp)
204015bc:	cc22                	sw	s0,24(sp)
204015be:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:44
    uint32_t mcause, mepc;
    asm volatile("csrr %0, mcause" : "=r"(mcause));
204015c0:	342027f3          	csrr	a5,mcause
204015c4:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:45
    asm volatile("csrr %0, mepc" : "=r"(mepc));
204015c8:	341027f3          	csrr	a5,mepc
204015cc:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:47

    if (mcause >> 31) {
204015d0:	fec42783          	lw	a5,-20(s0)
204015d4:	0007d663          	bgez	a5,204015e0 <handle_trap+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:48
        handle_interrupt(mcause);
204015d8:	fec42503          	lw	a0,-20(s0)
204015dc:	3d7d                	jal	2040149a <handle_interrupt>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:55
        handle_exception(mcause);
        asm volatile("csrr t0, mepc");
        asm volatile("addi t0, t0, 0x4");
        asm volatile("csrw mepc, t0");
    }
}
204015de:	a809                	j	204015f0 <handle_trap+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:50
        handle_exception(mcause);
204015e0:	fec42503          	lw	a0,-20(s0)
204015e4:	3f0d                	jal	20401516 <handle_exception>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:51
        asm volatile("csrr t0, mepc");
204015e6:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:52
        asm volatile("addi t0, t0, 0x4");
204015ea:	0291                	addi	t0,t0,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:53
        asm volatile("csrw mepc, t0");
204015ec:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:55
}
204015f0:	0001                	nop
204015f2:	40f2                	lw	ra,28(sp)
204015f4:	4462                	lw	s0,24(sp)
204015f6:	6105                	addi	sp,sp,32
204015f8:	8082                	ret

204015fa <task>:
task():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:12

#include "task.h"

int32_t count = 0, count1= 0, count2= 0, count3= 0;

void task(void){
204015fa:	1141                	addi	sp,sp,-16
204015fc:	c606                	sw	ra,12(sp)
204015fe:	c422                	sw	s0,8(sp)
20401600:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:14 (discriminator 1)
	while(1){
		count++;
20401602:	800007b7          	lui	a5,0x80000
20401606:	7d07a783          	lw	a5,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
2040160a:	00178713          	addi	a4,a5,1
2040160e:	800007b7          	lui	a5,0x80000
20401612:	7ce7a823          	sw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:15 (discriminator 1)
		task_create(&task1);
20401616:	204017b7          	lui	a5,0x20401
2040161a:	63e78513          	addi	a0,a5,1598 # 2040163e <task1>
2040161e:	3e1d                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:16 (discriminator 1)
		task_create(&task2);
20401620:	204017b7          	lui	a5,0x20401
20401624:	65a78513          	addi	a0,a5,1626 # 2040165a <task2>
20401628:	3635                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:17 (discriminator 1)
		task_create(&task3);
2040162a:	204017b7          	lui	a5,0x20401
2040162e:	67678513          	addi	a0,a5,1654 # 20401676 <task3>
20401632:	360d                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:18 (discriminator 1)
		printList();
20401634:	31e9                	jal	204012fe <printList>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:19 (discriminator 1)
		task_end();
20401636:	36e1                	jal	204011fe <task_end>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:20 (discriminator 1)
		asm volatile("wfi");
20401638:	10500073          	wfi
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:14 (discriminator 1)
		count++;
2040163c:	b7d9                	j	20401602 <task+0x8>

2040163e <task1>:
task1():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:26
		//printf("task 0 counter: %d\n", count);
	}
}


void task1(void){
2040163e:	1141                	addi	sp,sp,-16
20401640:	c622                	sw	s0,12(sp)
20401642:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:28 (discriminator 1)
	while(1){
		count1++;
20401644:	800007b7          	lui	a5,0x80000
20401648:	7d47a783          	lw	a5,2004(a5) # 800007d4 <metal_segment_heap_target_end+0xffffe6b4>
2040164c:	00178713          	addi	a4,a5,1
20401650:	800007b7          	lui	a5,0x80000
20401654:	7ce7aa23          	sw	a4,2004(a5) # 800007d4 <metal_segment_heap_target_end+0xffffe6b4>
20401658:	b7f5                	j	20401644 <task1+0x6>

2040165a <task2>:
task2():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:36
//		}
		//printf("task 1 counter: %d\n", count1);
	}
}

void task2(void){
2040165a:	1141                	addi	sp,sp,-16
2040165c:	c622                	sw	s0,12(sp)
2040165e:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:39 (discriminator 1)
	while(1){
		//semaphore_wait(&semaphore);
		count2++;
20401660:	800007b7          	lui	a5,0x80000
20401664:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6b8>
20401668:	00178713          	addi	a4,a5,1
2040166c:	800007b7          	lui	a5,0x80000
20401670:	7ce7ac23          	sw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6b8>
20401674:	b7f5                	j	20401660 <task2+0x6>

20401676 <task3>:
task3():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:46
		//printf("task 2 counter: %d\n", count2);
	//	semaphore_signal(&semaphore);
	}
}

void task3(void){
20401676:	1141                	addi	sp,sp,-16
20401678:	c622                	sw	s0,12(sp)
2040167a:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:49 (discriminator 1)
	while(1){
		//semaphore_wait(&semaphore);
		count3++;
2040167c:	800007b7          	lui	a5,0x80000
20401680:	7dc7a783          	lw	a5,2012(a5) # 800007dc <metal_segment_heap_target_end+0xffffe6bc>
20401684:	00178713          	addi	a4,a5,1
20401688:	800007b7          	lui	a5,0x80000
2040168c:	7ce7ae23          	sw	a4,2012(a5) # 800007dc <metal_segment_heap_target_end+0xffffe6bc>
20401690:	b7f5                	j	2040167c <task3+0x6>

20401692 <semaphore_init>:
semaphore_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:12

#include "semaphore.h"

extern void switch_to(void);

void semaphore_init(semaphore_t *semaphore, int32_t value){
20401692:	1101                	addi	sp,sp,-32
20401694:	ce22                	sw	s0,28(sp)
20401696:	1000                	addi	s0,sp,32
20401698:	fea42623          	sw	a0,-20(s0)
2040169c:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:13
	semaphore->value = value;
204016a0:	fec42783          	lw	a5,-20(s0)
204016a4:	fe842703          	lw	a4,-24(s0)
204016a8:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:14
}
204016aa:	0001                	nop
204016ac:	4472                	lw	s0,28(sp)
204016ae:	6105                	addi	sp,sp,32
204016b0:	8082                	ret
	...

204016b4 <osSchedulerLaunch>:
osSchedulerLaunch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:6
.section .text
.global osSchedulerLaunch
.type osSchedulerLaunch, @function
.extern current_ptr
osSchedulerLaunch:
    lw t0, current_ptr   # Load currentPt into T0
204016b4:	8e41a283          	lw	t0,-1820(gp) # 80000884 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:7
    lw t1, (t0)
204016b8:	0002a303          	lw	t1,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:8
    lw sp, (t0)        # t1 = &t0
204016bc:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:9
    lw ra, (sp)
204016c0:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:10
    addi sp, sp, -132   # make a stack frame
204016c2:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:11
    ret
204016c6:	8082                	ret

204016c8 <switch_to>:
switch_to():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:20
.global switch_to
.type switch_to, @function
.align 2
switch_to:

    call handle_trap
204016c8:	3dc5                	jal	204015b8 <handle_trap>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:21
    mv tp, sp
204016ca:	820a                	mv	tp,sp
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:22
    mv sp, fp
204016cc:	8122                	mv	sp,s0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:24
    #Push register
    sw ra, (sp)
204016ce:	c006                	sw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:25
    sw sp, 4(sp)
204016d0:	c20a                	sw	sp,4(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:26
    sw gp, 8(sp)
204016d2:	c40e                	sw	gp,8(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:27
    sw tp, 12(sp)
204016d4:	c612                	sw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:28
    sw t0, 16(sp)
204016d6:	c816                	sw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:29
    sw t1, 20(sp)
204016d8:	ca1a                	sw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:30
    sw t2, 24(sp)
204016da:	cc1e                	sw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:31
    sw t3, 28(sp)
204016dc:	ce72                	sw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:32
    sw s0, 32(sp)
204016de:	d022                	sw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:33
    sw s1, 36(sp)
204016e0:	d226                	sw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:34
    sw a0, 40(sp)
204016e2:	d42a                	sw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:35
    sw a1, 44(sp)
204016e4:	d62e                	sw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:36
    sw a2, 48(sp)
204016e6:	d832                	sw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:37
    sw a3, 52(sp)
204016e8:	da36                	sw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:38
    sw a4, 56(sp)
204016ea:	dc3a                	sw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:39
    sw a5, 60(sp)
204016ec:	de3e                	sw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:40
    sw a6, 64(sp)
204016ee:	c0c2                	sw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:41
    sw a7, 68(sp)
204016f0:	c2c6                	sw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:42
    sw s2, 72(sp)
204016f2:	c4ca                	sw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:43
    sw s3, 76(sp)
204016f4:	c6ce                	sw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:44
    sw s4, 80(sp)
204016f6:	c8d2                	sw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:45
    sw s5, 84(sp)
204016f8:	cad6                	sw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:46
    sw s6, 88(sp)
204016fa:	ccda                	sw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:47
    sw s7, 92(sp)
204016fc:	cede                	sw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:48
    sw s8, 96(sp)
204016fe:	d0e2                	sw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:49
    sw s9, 100(sp)
20401700:	d2e6                	sw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:50
    sw s10,104(sp)
20401702:	d4ea                	sw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:51
    sw s11,108(sp)
20401704:	d6ee                	sw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:52
    sw t3, 112(sp)
20401706:	d8f2                	sw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:53
    sw t4, 116(sp)
20401708:	daf6                	sw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:54
    sw t5, 120(sp)
2040170a:	dcfa                	sw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:55
    sw t6, 124(sp)
2040170c:	defe                	sw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:56
    csrr t0, mepc
2040170e:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:57
    sw t0, 132(sp)
20401712:	c316                	sw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:72
    #addi sp, sp, -132  # make a stack frame
    #lw t0, 132(sp)     # load mepc
    #csrw mepc, t0

    #Switch context in c
    call scheduler_RoundRobin
20401714:	3e9d                	jal	2040128a <scheduler_RoundRobin>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:73
    lw t0, current_ptr   # Load currentPt into T0
20401716:	8e41a283          	lw	t0,-1820(gp) # 80000884 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:74
    lw sp, (t0)
2040171a:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:75
    addi sp, sp, -132    # make a stack frame
2040171e:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:76
    lw t0, 132(sp)       # load mepc
20401722:	429a                	lw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:77
    csrw mepc, t0
20401724:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:81


    #Pop register
    lw ra, (sp)
20401728:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:84
    #lw sp, 4(sp)
    #lw gp, 8(sp)
    lw tp, 12(sp)
2040172a:	4232                	lw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:85
    lw t0, 16(sp)
2040172c:	42c2                	lw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:86
    lw t1, 20(sp)
2040172e:	4352                	lw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:87
    lw t2, 24(sp)
20401730:	43e2                	lw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:88
    lw t3, 28(sp)
20401732:	4e72                	lw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:89
    lw s0, 32(sp)
20401734:	5402                	lw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:90
    lw s1, 36(sp)
20401736:	5492                	lw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:91
    lw a0, 40(sp)
20401738:	5522                	lw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:92
    lw a1, 44(sp)
2040173a:	55b2                	lw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:93
    lw a2, 48(sp)
2040173c:	5642                	lw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:94
    lw a3, 52(sp)
2040173e:	56d2                	lw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:95
    lw a4, 56(sp)
20401740:	5762                	lw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:96
    lw a5, 60(sp)
20401742:	57f2                	lw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:97
    lw a6, 64(sp)
20401744:	4806                	lw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:98
    lw a7, 68(sp)
20401746:	4896                	lw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:99
    lw s2, 72(sp)
20401748:	4926                	lw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:100
    lw s3, 76(sp)
2040174a:	49b6                	lw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:101
    lw s4, 80(sp)
2040174c:	4a46                	lw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:102
    lw s5, 84(sp)
2040174e:	4ad6                	lw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:103
    lw s6, 88(sp)
20401750:	4b66                	lw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:104
    lw s7, 92(sp)
20401752:	4bf6                	lw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:105
    lw s8, 96(sp)
20401754:	5c06                	lw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:106
    lw s9, 100(sp)
20401756:	5c96                	lw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:107
    lw s10,104(sp)
20401758:	5d26                	lw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:108
    lw s11,108(sp)
2040175a:	5db6                	lw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:109
    lw t3, 112(sp)
2040175c:	5e46                	lw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:110
    lw t4, 116(sp)
2040175e:	5ed6                	lw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:111
    lw t5, 120(sp)
20401760:	5f66                	lw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:112
    lw t6, 124(sp)
20401762:	5ff6                	lw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:114

    mret
20401764:	30200073          	mret
	...

2040176a <malloc>:
malloc():
2040176a:	85aa                	mv	a1,a0
2040176c:	5fbff517          	auipc	a0,0x5fbff
20401770:	03452503          	lw	a0,52(a0) # 800007a0 <_impure_ptr>
20401774:	a065                	j	2040181c <_malloc_r>

20401776 <_free_r>:
_free_r():
20401776:	c1d5                	beqz	a1,2040181a <_free_r+0xa4>
20401778:	ffc5a783          	lw	a5,-4(a1)
2040177c:	1101                	addi	sp,sp,-32
2040177e:	cc22                	sw	s0,24(sp)
20401780:	ce06                	sw	ra,28(sp)
20401782:	ffc58413          	addi	s0,a1,-4
20401786:	0007d363          	bgez	a5,2040178c <_free_r+0x16>
2040178a:	943e                	add	s0,s0,a5
2040178c:	c62a                	sw	a0,12(sp)
2040178e:	1fd000ef          	jal	ra,2040218a <__malloc_lock>
20401792:	5fbff717          	auipc	a4,0x5fbff
20401796:	04e70713          	addi	a4,a4,78 # 800007e0 <__malloc_free_list>
2040179a:	431c                	lw	a5,0(a4)
2040179c:	4532                	lw	a0,12(sp)
2040179e:	eb89                	bnez	a5,204017b0 <_free_r+0x3a>
204017a0:	00042223          	sw	zero,4(s0)
204017a4:	c300                	sw	s0,0(a4)
204017a6:	4462                	lw	s0,24(sp)
204017a8:	40f2                	lw	ra,28(sp)
204017aa:	6105                	addi	sp,sp,32
204017ac:	1e10006f          	j	2040218c <__malloc_unlock>
204017b0:	00f47d63          	bgeu	s0,a5,204017ca <_free_r+0x54>
204017b4:	4010                	lw	a2,0(s0)
204017b6:	00c406b3          	add	a3,s0,a2
204017ba:	00d79663          	bne	a5,a3,204017c6 <_free_r+0x50>
204017be:	4394                	lw	a3,0(a5)
204017c0:	43dc                	lw	a5,4(a5)
204017c2:	96b2                	add	a3,a3,a2
204017c4:	c014                	sw	a3,0(s0)
204017c6:	c05c                	sw	a5,4(s0)
204017c8:	bff1                	j	204017a4 <_free_r+0x2e>
204017ca:	873e                	mv	a4,a5
204017cc:	43dc                	lw	a5,4(a5)
204017ce:	c399                	beqz	a5,204017d4 <_free_r+0x5e>
204017d0:	fef47de3          	bgeu	s0,a5,204017ca <_free_r+0x54>
204017d4:	4314                	lw	a3,0(a4)
204017d6:	00d70633          	add	a2,a4,a3
204017da:	00861f63          	bne	a2,s0,204017f8 <_free_r+0x82>
204017de:	4010                	lw	a2,0(s0)
204017e0:	96b2                	add	a3,a3,a2
204017e2:	c314                	sw	a3,0(a4)
204017e4:	00d70633          	add	a2,a4,a3
204017e8:	fac79fe3          	bne	a5,a2,204017a6 <_free_r+0x30>
204017ec:	4390                	lw	a2,0(a5)
204017ee:	43dc                	lw	a5,4(a5)
204017f0:	96b2                	add	a3,a3,a2
204017f2:	c314                	sw	a3,0(a4)
204017f4:	c35c                	sw	a5,4(a4)
204017f6:	bf45                	j	204017a6 <_free_r+0x30>
204017f8:	00c47563          	bgeu	s0,a2,20401802 <_free_r+0x8c>
204017fc:	47b1                	li	a5,12
204017fe:	c11c                	sw	a5,0(a0)
20401800:	b75d                	j	204017a6 <_free_r+0x30>
20401802:	4010                	lw	a2,0(s0)
20401804:	00c406b3          	add	a3,s0,a2
20401808:	00d79663          	bne	a5,a3,20401814 <_free_r+0x9e>
2040180c:	4394                	lw	a3,0(a5)
2040180e:	43dc                	lw	a5,4(a5)
20401810:	96b2                	add	a3,a3,a2
20401812:	c014                	sw	a3,0(s0)
20401814:	c05c                	sw	a5,4(s0)
20401816:	c340                	sw	s0,4(a4)
20401818:	b779                	j	204017a6 <_free_r+0x30>
2040181a:	8082                	ret

2040181c <_malloc_r>:
_malloc_r():
2040181c:	1101                	addi	sp,sp,-32
2040181e:	ca26                	sw	s1,20(sp)
20401820:	00358493          	addi	s1,a1,3
20401824:	98f1                	andi	s1,s1,-4
20401826:	c84a                	sw	s2,16(sp)
20401828:	ce06                	sw	ra,28(sp)
2040182a:	cc22                	sw	s0,24(sp)
2040182c:	c64e                	sw	s3,12(sp)
2040182e:	04a1                	addi	s1,s1,8
20401830:	47b1                	li	a5,12
20401832:	892a                	mv	s2,a0
20401834:	04f4f663          	bgeu	s1,a5,20401880 <_malloc_r+0x64>
20401838:	44b1                	li	s1,12
2040183a:	04b4e563          	bltu	s1,a1,20401884 <_malloc_r+0x68>
2040183e:	854a                	mv	a0,s2
20401840:	14b000ef          	jal	ra,2040218a <__malloc_lock>
20401844:	5fbff697          	auipc	a3,0x5fbff
20401848:	f9c68693          	addi	a3,a3,-100 # 800007e0 <__malloc_free_list>
2040184c:	4298                	lw	a4,0(a3)
2040184e:	843a                	mv	s0,a4
20401850:	e429                	bnez	s0,2040189a <_malloc_r+0x7e>
20401852:	5fbff417          	auipc	s0,0x5fbff
20401856:	f9240413          	addi	s0,s0,-110 # 800007e4 <__malloc_sbrk_start>
2040185a:	401c                	lw	a5,0(s0)
2040185c:	e789                	bnez	a5,20401866 <_malloc_r+0x4a>
2040185e:	4581                	li	a1,0
20401860:	854a                	mv	a0,s2
20401862:	2a75                	jal	20401a1e <_sbrk_r>
20401864:	c008                	sw	a0,0(s0)
20401866:	85a6                	mv	a1,s1
20401868:	854a                	mv	a0,s2
2040186a:	2a55                	jal	20401a1e <_sbrk_r>
2040186c:	59fd                	li	s3,-1
2040186e:	07351a63          	bne	a0,s3,204018e2 <_malloc_r+0xc6>
20401872:	47b1                	li	a5,12
20401874:	00f92023          	sw	a5,0(s2)
20401878:	854a                	mv	a0,s2
2040187a:	113000ef          	jal	ra,2040218c <__malloc_unlock>
2040187e:	a031                	j	2040188a <_malloc_r+0x6e>
20401880:	fa04dde3          	bgez	s1,2040183a <_malloc_r+0x1e>
20401884:	47b1                	li	a5,12
20401886:	00f92023          	sw	a5,0(s2)
2040188a:	4501                	li	a0,0
2040188c:	40f2                	lw	ra,28(sp)
2040188e:	4462                	lw	s0,24(sp)
20401890:	44d2                	lw	s1,20(sp)
20401892:	4942                	lw	s2,16(sp)
20401894:	49b2                	lw	s3,12(sp)
20401896:	6105                	addi	sp,sp,32
20401898:	8082                	ret
2040189a:	401c                	lw	a5,0(s0)
2040189c:	8f85                	sub	a5,a5,s1
2040189e:	0207cf63          	bltz	a5,204018dc <_malloc_r+0xc0>
204018a2:	462d                	li	a2,11
204018a4:	00f67663          	bgeu	a2,a5,204018b0 <_malloc_r+0x94>
204018a8:	c01c                	sw	a5,0(s0)
204018aa:	943e                	add	s0,s0,a5
204018ac:	c004                	sw	s1,0(s0)
204018ae:	a029                	j	204018b8 <_malloc_r+0x9c>
204018b0:	405c                	lw	a5,4(s0)
204018b2:	02871363          	bne	a4,s0,204018d8 <_malloc_r+0xbc>
204018b6:	c29c                	sw	a5,0(a3)
204018b8:	854a                	mv	a0,s2
204018ba:	0d3000ef          	jal	ra,2040218c <__malloc_unlock>
204018be:	00b40513          	addi	a0,s0,11
204018c2:	00440793          	addi	a5,s0,4
204018c6:	9961                	andi	a0,a0,-8
204018c8:	40f50733          	sub	a4,a0,a5
204018cc:	fcf500e3          	beq	a0,a5,2040188c <_malloc_r+0x70>
204018d0:	943a                	add	s0,s0,a4
204018d2:	8f89                	sub	a5,a5,a0
204018d4:	c01c                	sw	a5,0(s0)
204018d6:	bf5d                	j	2040188c <_malloc_r+0x70>
204018d8:	c35c                	sw	a5,4(a4)
204018da:	bff9                	j	204018b8 <_malloc_r+0x9c>
204018dc:	8722                	mv	a4,s0
204018de:	4040                	lw	s0,4(s0)
204018e0:	bf85                	j	20401850 <_malloc_r+0x34>
204018e2:	00350413          	addi	s0,a0,3
204018e6:	9871                	andi	s0,s0,-4
204018e8:	fc8502e3          	beq	a0,s0,204018ac <_malloc_r+0x90>
204018ec:	40a405b3          	sub	a1,s0,a0
204018f0:	854a                	mv	a0,s2
204018f2:	2235                	jal	20401a1e <_sbrk_r>
204018f4:	fb351ce3          	bne	a0,s3,204018ac <_malloc_r+0x90>
204018f8:	bfad                	j	20401872 <_malloc_r+0x56>

204018fa <iprintf>:
printf():
204018fa:	715d                	addi	sp,sp,-80
204018fc:	d422                	sw	s0,40(sp)
204018fe:	d606                	sw	ra,44(sp)
20401900:	842a                	mv	s0,a0
20401902:	da2e                	sw	a1,52(sp)
20401904:	dc32                	sw	a2,56(sp)
20401906:	de36                	sw	a3,60(sp)
20401908:	c0ba                	sw	a4,64(sp)
2040190a:	c2be                	sw	a5,68(sp)
2040190c:	c4c2                	sw	a6,72(sp)
2040190e:	c6c6                	sw	a7,76(sp)
20401910:	5fbff517          	auipc	a0,0x5fbff
20401914:	e9052503          	lw	a0,-368(a0) # 800007a0 <_impure_ptr>
20401918:	c511                	beqz	a0,20401924 <iprintf+0x2a>
2040191a:	4d1c                	lw	a5,24(a0)
2040191c:	e781                	bnez	a5,20401924 <iprintf+0x2a>
2040191e:	c62a                	sw	a0,12(sp)
20401920:	2ba9                	jal	20401e7a <__sinit>
20401922:	4532                	lw	a0,12(sp)
20401924:	450c                	lw	a1,8(a0)
20401926:	1854                	addi	a3,sp,52
20401928:	8622                	mv	a2,s0
2040192a:	ce36                	sw	a3,28(sp)
2040192c:	0cf000ef          	jal	ra,204021fa <_vfiprintf_r>
20401930:	50b2                	lw	ra,44(sp)
20401932:	5422                	lw	s0,40(sp)
20401934:	6161                	addi	sp,sp,80
20401936:	8082                	ret

20401938 <_puts_r>:
_puts_r():
20401938:	1101                	addi	sp,sp,-32
2040193a:	ca26                	sw	s1,20(sp)
2040193c:	c84a                	sw	s2,16(sp)
2040193e:	ce06                	sw	ra,28(sp)
20401940:	cc22                	sw	s0,24(sp)
20401942:	c64e                	sw	s3,12(sp)
20401944:	c452                	sw	s4,8(sp)
20401946:	84aa                	mv	s1,a0
20401948:	892e                	mv	s2,a1
2040194a:	c501                	beqz	a0,20401952 <_puts_r+0x1a>
2040194c:	4d1c                	lw	a5,24(a0)
2040194e:	e391                	bnez	a5,20401952 <_puts_r+0x1a>
20401950:	232d                	jal	20401e7a <__sinit>
20401952:	4c9c                	lw	a5,24(s1)
20401954:	4480                	lw	s0,8(s1)
20401956:	e399                	bnez	a5,2040195c <_puts_r+0x24>
20401958:	8526                	mv	a0,s1
2040195a:	2305                	jal	20401e7a <__sinit>
2040195c:	fffff797          	auipc	a5,0xfffff
20401960:	a7478793          	addi	a5,a5,-1420 # 204003d0 <__sf_fake_stdin>
20401964:	02f41c63          	bne	s0,a5,2040199c <_puts_r+0x64>
20401968:	40c0                	lw	s0,4(s1)
2040196a:	00c45783          	lhu	a5,12(s0)
2040196e:	8ba1                	andi	a5,a5,8
20401970:	c7b1                	beqz	a5,204019bc <_puts_r+0x84>
20401972:	481c                	lw	a5,16(s0)
20401974:	c7a1                	beqz	a5,204019bc <_puts_r+0x84>
20401976:	59fd                	li	s3,-1
20401978:	4a29                	li	s4,10
2040197a:	441c                	lw	a5,8(s0)
2040197c:	00094583          	lbu	a1,0(s2)
20401980:	17fd                	addi	a5,a5,-1
20401982:	e9b1                	bnez	a1,204019d6 <_puts_r+0x9e>
20401984:	c41c                	sw	a5,8(s0)
20401986:	0607de63          	bgez	a5,20401a02 <_puts_r+0xca>
2040198a:	8622                	mv	a2,s0
2040198c:	45a9                	li	a1,10
2040198e:	8526                	mv	a0,s1
20401990:	287d                	jal	20401a4e <__swbuf_r>
20401992:	57fd                	li	a5,-1
20401994:	02f50863          	beq	a0,a5,204019c4 <_puts_r+0x8c>
20401998:	4529                	li	a0,10
2040199a:	a035                	j	204019c6 <_puts_r+0x8e>
2040199c:	fffff797          	auipc	a5,0xfffff
204019a0:	a5478793          	addi	a5,a5,-1452 # 204003f0 <__sf_fake_stdout>
204019a4:	00f41463          	bne	s0,a5,204019ac <_puts_r+0x74>
204019a8:	4480                	lw	s0,8(s1)
204019aa:	b7c1                	j	2040196a <_puts_r+0x32>
204019ac:	fffff797          	auipc	a5,0xfffff
204019b0:	a0478793          	addi	a5,a5,-1532 # 204003b0 <__sf_fake_stderr>
204019b4:	faf41be3          	bne	s0,a5,2040196a <_puts_r+0x32>
204019b8:	44c0                	lw	s0,12(s1)
204019ba:	bf45                	j	2040196a <_puts_r+0x32>
204019bc:	85a2                	mv	a1,s0
204019be:	8526                	mv	a0,s1
204019c0:	22b9                	jal	20401b0e <__swsetup_r>
204019c2:	d955                	beqz	a0,20401976 <_puts_r+0x3e>
204019c4:	557d                	li	a0,-1
204019c6:	40f2                	lw	ra,28(sp)
204019c8:	4462                	lw	s0,24(sp)
204019ca:	44d2                	lw	s1,20(sp)
204019cc:	4942                	lw	s2,16(sp)
204019ce:	49b2                	lw	s3,12(sp)
204019d0:	4a22                	lw	s4,8(sp)
204019d2:	6105                	addi	sp,sp,32
204019d4:	8082                	ret
204019d6:	c41c                	sw	a5,8(s0)
204019d8:	0905                	addi	s2,s2,1
204019da:	0007d763          	bgez	a5,204019e8 <_puts_r+0xb0>
204019de:	4c18                	lw	a4,24(s0)
204019e0:	00e7cb63          	blt	a5,a4,204019f6 <_puts_r+0xbe>
204019e4:	01458963          	beq	a1,s4,204019f6 <_puts_r+0xbe>
204019e8:	401c                	lw	a5,0(s0)
204019ea:	00178713          	addi	a4,a5,1
204019ee:	c018                	sw	a4,0(s0)
204019f0:	00b78023          	sb	a1,0(a5)
204019f4:	b759                	j	2040197a <_puts_r+0x42>
204019f6:	8622                	mv	a2,s0
204019f8:	8526                	mv	a0,s1
204019fa:	2891                	jal	20401a4e <__swbuf_r>
204019fc:	f7351fe3          	bne	a0,s3,2040197a <_puts_r+0x42>
20401a00:	b7d1                	j	204019c4 <_puts_r+0x8c>
20401a02:	401c                	lw	a5,0(s0)
20401a04:	00178713          	addi	a4,a5,1
20401a08:	c018                	sw	a4,0(s0)
20401a0a:	4729                	li	a4,10
20401a0c:	00e78023          	sb	a4,0(a5)
20401a10:	b761                	j	20401998 <_puts_r+0x60>

20401a12 <puts>:
puts():
20401a12:	85aa                	mv	a1,a0
20401a14:	5fbff517          	auipc	a0,0x5fbff
20401a18:	d8c52503          	lw	a0,-628(a0) # 800007a0 <_impure_ptr>
20401a1c:	bf31                	j	20401938 <_puts_r>

20401a1e <_sbrk_r>:
_sbrk_r():
20401a1e:	1141                	addi	sp,sp,-16
20401a20:	c422                	sw	s0,8(sp)
20401a22:	842a                	mv	s0,a0
20401a24:	852e                	mv	a0,a1
20401a26:	5fbff797          	auipc	a5,0x5fbff
20401a2a:	dc07a123          	sw	zero,-574(a5) # 800007e8 <errno>
20401a2e:	c606                	sw	ra,12(sp)
20401a30:	08c010ef          	jal	ra,20402abc <_sbrk>
20401a34:	57fd                	li	a5,-1
20401a36:	00f51863          	bne	a0,a5,20401a46 <_sbrk_r+0x28>
20401a3a:	5fbff797          	auipc	a5,0x5fbff
20401a3e:	dae7a783          	lw	a5,-594(a5) # 800007e8 <errno>
20401a42:	c391                	beqz	a5,20401a46 <_sbrk_r+0x28>
20401a44:	c01c                	sw	a5,0(s0)
20401a46:	40b2                	lw	ra,12(sp)
20401a48:	4422                	lw	s0,8(sp)
20401a4a:	0141                	addi	sp,sp,16
20401a4c:	8082                	ret

20401a4e <__swbuf_r>:
__swbuf_r():
20401a4e:	1101                	addi	sp,sp,-32
20401a50:	cc22                	sw	s0,24(sp)
20401a52:	ca26                	sw	s1,20(sp)
20401a54:	c84a                	sw	s2,16(sp)
20401a56:	ce06                	sw	ra,28(sp)
20401a58:	c64e                	sw	s3,12(sp)
20401a5a:	84aa                	mv	s1,a0
20401a5c:	892e                	mv	s2,a1
20401a5e:	8432                	mv	s0,a2
20401a60:	c501                	beqz	a0,20401a68 <__swbuf_r+0x1a>
20401a62:	4d1c                	lw	a5,24(a0)
20401a64:	e391                	bnez	a5,20401a68 <__swbuf_r+0x1a>
20401a66:	2911                	jal	20401e7a <__sinit>
20401a68:	fffff797          	auipc	a5,0xfffff
20401a6c:	96878793          	addi	a5,a5,-1688 # 204003d0 <__sf_fake_stdin>
20401a70:	06f41963          	bne	s0,a5,20401ae2 <__swbuf_r+0x94>
20401a74:	40c0                	lw	s0,4(s1)
20401a76:	4c1c                	lw	a5,24(s0)
20401a78:	c41c                	sw	a5,8(s0)
20401a7a:	00c45783          	lhu	a5,12(s0)
20401a7e:	8ba1                	andi	a5,a5,8
20401a80:	c3c9                	beqz	a5,20401b02 <__swbuf_r+0xb4>
20401a82:	481c                	lw	a5,16(s0)
20401a84:	cfbd                	beqz	a5,20401b02 <__swbuf_r+0xb4>
20401a86:	481c                	lw	a5,16(s0)
20401a88:	4008                	lw	a0,0(s0)
20401a8a:	0ff97993          	zext.b	s3,s2
20401a8e:	0ff97913          	zext.b	s2,s2
20401a92:	8d1d                	sub	a0,a0,a5
20401a94:	485c                	lw	a5,20(s0)
20401a96:	00f54663          	blt	a0,a5,20401aa2 <__swbuf_r+0x54>
20401a9a:	85a2                	mv	a1,s0
20401a9c:	8526                	mv	a0,s1
20401a9e:	24c1                	jal	20401d5e <_fflush_r>
20401aa0:	e52d                	bnez	a0,20401b0a <__swbuf_r+0xbc>
20401aa2:	441c                	lw	a5,8(s0)
20401aa4:	0505                	addi	a0,a0,1
20401aa6:	17fd                	addi	a5,a5,-1
20401aa8:	c41c                	sw	a5,8(s0)
20401aaa:	401c                	lw	a5,0(s0)
20401aac:	00178713          	addi	a4,a5,1
20401ab0:	c018                	sw	a4,0(s0)
20401ab2:	01378023          	sb	s3,0(a5)
20401ab6:	485c                	lw	a5,20(s0)
20401ab8:	00a78963          	beq	a5,a0,20401aca <__swbuf_r+0x7c>
20401abc:	00c45783          	lhu	a5,12(s0)
20401ac0:	8b85                	andi	a5,a5,1
20401ac2:	cb81                	beqz	a5,20401ad2 <__swbuf_r+0x84>
20401ac4:	47a9                	li	a5,10
20401ac6:	00f91663          	bne	s2,a5,20401ad2 <__swbuf_r+0x84>
20401aca:	85a2                	mv	a1,s0
20401acc:	8526                	mv	a0,s1
20401ace:	2c41                	jal	20401d5e <_fflush_r>
20401ad0:	ed0d                	bnez	a0,20401b0a <__swbuf_r+0xbc>
20401ad2:	40f2                	lw	ra,28(sp)
20401ad4:	4462                	lw	s0,24(sp)
20401ad6:	44d2                	lw	s1,20(sp)
20401ad8:	49b2                	lw	s3,12(sp)
20401ada:	854a                	mv	a0,s2
20401adc:	4942                	lw	s2,16(sp)
20401ade:	6105                	addi	sp,sp,32
20401ae0:	8082                	ret
20401ae2:	fffff797          	auipc	a5,0xfffff
20401ae6:	90e78793          	addi	a5,a5,-1778 # 204003f0 <__sf_fake_stdout>
20401aea:	00f41463          	bne	s0,a5,20401af2 <__swbuf_r+0xa4>
20401aee:	4480                	lw	s0,8(s1)
20401af0:	b759                	j	20401a76 <__swbuf_r+0x28>
20401af2:	fffff797          	auipc	a5,0xfffff
20401af6:	8be78793          	addi	a5,a5,-1858 # 204003b0 <__sf_fake_stderr>
20401afa:	f6f41ee3          	bne	s0,a5,20401a76 <__swbuf_r+0x28>
20401afe:	44c0                	lw	s0,12(s1)
20401b00:	bf9d                	j	20401a76 <__swbuf_r+0x28>
20401b02:	85a2                	mv	a1,s0
20401b04:	8526                	mv	a0,s1
20401b06:	2021                	jal	20401b0e <__swsetup_r>
20401b08:	dd3d                	beqz	a0,20401a86 <__swbuf_r+0x38>
20401b0a:	597d                	li	s2,-1
20401b0c:	b7d9                	j	20401ad2 <__swbuf_r+0x84>

20401b0e <__swsetup_r>:
__swsetup_r():
20401b0e:	1141                	addi	sp,sp,-16
20401b10:	c422                	sw	s0,8(sp)
20401b12:	c226                	sw	s1,4(sp)
20401b14:	c04a                	sw	s2,0(sp)
20401b16:	c606                	sw	ra,12(sp)
20401b18:	5fbff497          	auipc	s1,0x5fbff
20401b1c:	c884a483          	lw	s1,-888(s1) # 800007a0 <_impure_ptr>
20401b20:	892a                	mv	s2,a0
20401b22:	842e                	mv	s0,a1
20401b24:	c489                	beqz	s1,20401b2e <__swsetup_r+0x20>
20401b26:	4c9c                	lw	a5,24(s1)
20401b28:	e399                	bnez	a5,20401b2e <__swsetup_r+0x20>
20401b2a:	8526                	mv	a0,s1
20401b2c:	26b9                	jal	20401e7a <__sinit>
20401b2e:	fffff797          	auipc	a5,0xfffff
20401b32:	8a278793          	addi	a5,a5,-1886 # 204003d0 <__sf_fake_stdin>
20401b36:	02f41763          	bne	s0,a5,20401b64 <__swsetup_r+0x56>
20401b3a:	40c0                	lw	s0,4(s1)
20401b3c:	00c41783          	lh	a5,12(s0)
20401b40:	01079713          	slli	a4,a5,0x10
20401b44:	0087f693          	andi	a3,a5,8
20401b48:	8341                	srli	a4,a4,0x10
20401b4a:	eaad                	bnez	a3,20401bbc <__swsetup_r+0xae>
20401b4c:	01077693          	andi	a3,a4,16
20401b50:	ea95                	bnez	a3,20401b84 <__swsetup_r+0x76>
20401b52:	4725                	li	a4,9
20401b54:	00e92023          	sw	a4,0(s2)
20401b58:	0407e793          	ori	a5,a5,64
20401b5c:	00f41623          	sh	a5,12(s0)
20401b60:	557d                	li	a0,-1
20401b62:	a871                	j	20401bfe <__swsetup_r+0xf0>
20401b64:	fffff797          	auipc	a5,0xfffff
20401b68:	88c78793          	addi	a5,a5,-1908 # 204003f0 <__sf_fake_stdout>
20401b6c:	00f41463          	bne	s0,a5,20401b74 <__swsetup_r+0x66>
20401b70:	4480                	lw	s0,8(s1)
20401b72:	b7e9                	j	20401b3c <__swsetup_r+0x2e>
20401b74:	fffff797          	auipc	a5,0xfffff
20401b78:	83c78793          	addi	a5,a5,-1988 # 204003b0 <__sf_fake_stderr>
20401b7c:	fcf410e3          	bne	s0,a5,20401b3c <__swsetup_r+0x2e>
20401b80:	44c0                	lw	s0,12(s1)
20401b82:	bf6d                	j	20401b3c <__swsetup_r+0x2e>
20401b84:	8b11                	andi	a4,a4,4
20401b86:	c70d                	beqz	a4,20401bb0 <__swsetup_r+0xa2>
20401b88:	584c                	lw	a1,52(s0)
20401b8a:	c989                	beqz	a1,20401b9c <__swsetup_r+0x8e>
20401b8c:	04440793          	addi	a5,s0,68
20401b90:	00f58463          	beq	a1,a5,20401b98 <__swsetup_r+0x8a>
20401b94:	854a                	mv	a0,s2
20401b96:	36c5                	jal	20401776 <_free_r>
20401b98:	02042a23          	sw	zero,52(s0)
20401b9c:	00c45783          	lhu	a5,12(s0)
20401ba0:	00042223          	sw	zero,4(s0)
20401ba4:	fdb7f793          	andi	a5,a5,-37
20401ba8:	00f41623          	sh	a5,12(s0)
20401bac:	481c                	lw	a5,16(s0)
20401bae:	c01c                	sw	a5,0(s0)
20401bb0:	00c45783          	lhu	a5,12(s0)
20401bb4:	0087e793          	ori	a5,a5,8
20401bb8:	00f41623          	sh	a5,12(s0)
20401bbc:	481c                	lw	a5,16(s0)
20401bbe:	ef81                	bnez	a5,20401bd6 <__swsetup_r+0xc8>
20401bc0:	00c45783          	lhu	a5,12(s0)
20401bc4:	20000713          	li	a4,512
20401bc8:	2807f793          	andi	a5,a5,640
20401bcc:	00e78563          	beq	a5,a4,20401bd6 <__swsetup_r+0xc8>
20401bd0:	85a2                	mv	a1,s0
20401bd2:	854a                	mv	a0,s2
20401bd4:	2985                	jal	20402044 <__smakebuf_r>
20401bd6:	00c41783          	lh	a5,12(s0)
20401bda:	01079713          	slli	a4,a5,0x10
20401bde:	0017f693          	andi	a3,a5,1
20401be2:	8341                	srli	a4,a4,0x10
20401be4:	c29d                	beqz	a3,20401c0a <__swsetup_r+0xfc>
20401be6:	4854                	lw	a3,20(s0)
20401be8:	00042423          	sw	zero,8(s0)
20401bec:	40d006b3          	neg	a3,a3
20401bf0:	cc14                	sw	a3,24(s0)
20401bf2:	4814                	lw	a3,16(s0)
20401bf4:	4501                	li	a0,0
20401bf6:	e681                	bnez	a3,20401bfe <__swsetup_r+0xf0>
20401bf8:	08077713          	andi	a4,a4,128
20401bfc:	ff31                	bnez	a4,20401b58 <__swsetup_r+0x4a>
20401bfe:	40b2                	lw	ra,12(sp)
20401c00:	4422                	lw	s0,8(sp)
20401c02:	4492                	lw	s1,4(sp)
20401c04:	4902                	lw	s2,0(sp)
20401c06:	0141                	addi	sp,sp,16
20401c08:	8082                	ret
20401c0a:	00277693          	andi	a3,a4,2
20401c0e:	4601                	li	a2,0
20401c10:	e291                	bnez	a3,20401c14 <__swsetup_r+0x106>
20401c12:	4850                	lw	a2,20(s0)
20401c14:	c410                	sw	a2,8(s0)
20401c16:	bff1                	j	20401bf2 <__swsetup_r+0xe4>

20401c18 <__sflush_r>:
__sflush_r():
20401c18:	00c5d783          	lhu	a5,12(a1)
20401c1c:	1101                	addi	sp,sp,-32
20401c1e:	cc22                	sw	s0,24(sp)
20401c20:	ca26                	sw	s1,20(sp)
20401c22:	ce06                	sw	ra,28(sp)
20401c24:	c84a                	sw	s2,16(sp)
20401c26:	c64e                	sw	s3,12(sp)
20401c28:	0087f713          	andi	a4,a5,8
20401c2c:	84aa                	mv	s1,a0
20401c2e:	842e                	mv	s0,a1
20401c30:	e375                	bnez	a4,20401d14 <__sflush_r+0xfc>
20401c32:	41d8                	lw	a4,4(a1)
20401c34:	00e04763          	bgtz	a4,20401c42 <__sflush_r+0x2a>
20401c38:	41b8                	lw	a4,64(a1)
20401c3a:	00e04463          	bgtz	a4,20401c42 <__sflush_r+0x2a>
20401c3e:	4501                	li	a0,0
20401c40:	a875                	j	20401cfc <__sflush_r+0xe4>
20401c42:	5458                	lw	a4,44(s0)
20401c44:	df6d                	beqz	a4,20401c3e <__sflush_r+0x26>
20401c46:	6685                	lui	a3,0x1
20401c48:	0004a903          	lw	s2,0(s1)
20401c4c:	8ff5                	and	a5,a5,a3
20401c4e:	0004a023          	sw	zero,0(s1)
20401c52:	cfa5                	beqz	a5,20401cca <__sflush_r+0xb2>
20401c54:	4868                	lw	a0,84(s0)
20401c56:	00c45783          	lhu	a5,12(s0)
20401c5a:	8b91                	andi	a5,a5,4
20401c5c:	c799                	beqz	a5,20401c6a <__sflush_r+0x52>
20401c5e:	405c                	lw	a5,4(s0)
20401c60:	8d1d                	sub	a0,a0,a5
20401c62:	585c                	lw	a5,52(s0)
20401c64:	c399                	beqz	a5,20401c6a <__sflush_r+0x52>
20401c66:	403c                	lw	a5,64(s0)
20401c68:	8d1d                	sub	a0,a0,a5
20401c6a:	545c                	lw	a5,44(s0)
20401c6c:	500c                	lw	a1,32(s0)
20401c6e:	862a                	mv	a2,a0
20401c70:	4681                	li	a3,0
20401c72:	8526                	mv	a0,s1
20401c74:	9782                	jalr	a5
20401c76:	57fd                	li	a5,-1
20401c78:	00c45703          	lhu	a4,12(s0)
20401c7c:	00f51d63          	bne	a0,a5,20401c96 <__sflush_r+0x7e>
20401c80:	4094                	lw	a3,0(s1)
20401c82:	47f5                	li	a5,29
20401c84:	08d7e363          	bltu	a5,a3,20401d0a <__sflush_r+0xf2>
20401c88:	204007b7          	lui	a5,0x20400
20401c8c:	0785                	addi	a5,a5,1
20401c8e:	00d7d7b3          	srl	a5,a5,a3
20401c92:	8b85                	andi	a5,a5,1
20401c94:	cbbd                	beqz	a5,20401d0a <__sflush_r+0xf2>
20401c96:	481c                	lw	a5,16(s0)
20401c98:	00042223          	sw	zero,4(s0)
20401c9c:	c01c                	sw	a5,0(s0)
20401c9e:	6785                	lui	a5,0x1
20401ca0:	8f7d                	and	a4,a4,a5
20401ca2:	c719                	beqz	a4,20401cb0 <__sflush_r+0x98>
20401ca4:	57fd                	li	a5,-1
20401ca6:	00f51463          	bne	a0,a5,20401cae <__sflush_r+0x96>
20401caa:	409c                	lw	a5,0(s1)
20401cac:	e391                	bnez	a5,20401cb0 <__sflush_r+0x98>
20401cae:	c868                	sw	a0,84(s0)
20401cb0:	584c                	lw	a1,52(s0)
20401cb2:	0124a023          	sw	s2,0(s1)
20401cb6:	d5c1                	beqz	a1,20401c3e <__sflush_r+0x26>
20401cb8:	04440793          	addi	a5,s0,68
20401cbc:	00f58463          	beq	a1,a5,20401cc4 <__sflush_r+0xac>
20401cc0:	8526                	mv	a0,s1
20401cc2:	3c55                	jal	20401776 <_free_r>
20401cc4:	02042a23          	sw	zero,52(s0)
20401cc8:	bf9d                	j	20401c3e <__sflush_r+0x26>
20401cca:	500c                	lw	a1,32(s0)
20401ccc:	4685                	li	a3,1
20401cce:	4601                	li	a2,0
20401cd0:	8526                	mv	a0,s1
20401cd2:	9702                	jalr	a4
20401cd4:	57fd                	li	a5,-1
20401cd6:	f8f510e3          	bne	a0,a5,20401c56 <__sflush_r+0x3e>
20401cda:	409c                	lw	a5,0(s1)
20401cdc:	dfad                	beqz	a5,20401c56 <__sflush_r+0x3e>
20401cde:	4775                	li	a4,29
20401ce0:	00e78563          	beq	a5,a4,20401cea <__sflush_r+0xd2>
20401ce4:	4759                	li	a4,22
20401ce6:	00e79563          	bne	a5,a4,20401cf0 <__sflush_r+0xd8>
20401cea:	0124a023          	sw	s2,0(s1)
20401cee:	bf81                	j	20401c3e <__sflush_r+0x26>
20401cf0:	00c45783          	lhu	a5,12(s0)
20401cf4:	0407e793          	ori	a5,a5,64
20401cf8:	00f41623          	sh	a5,12(s0)
20401cfc:	40f2                	lw	ra,28(sp)
20401cfe:	4462                	lw	s0,24(sp)
20401d00:	44d2                	lw	s1,20(sp)
20401d02:	4942                	lw	s2,16(sp)
20401d04:	49b2                	lw	s3,12(sp)
20401d06:	6105                	addi	sp,sp,32
20401d08:	8082                	ret
20401d0a:	04076713          	ori	a4,a4,64
20401d0e:	00e41623          	sh	a4,12(s0)
20401d12:	b7ed                	j	20401cfc <__sflush_r+0xe4>
20401d14:	0105a983          	lw	s3,16(a1)
20401d18:	f20983e3          	beqz	s3,20401c3e <__sflush_r+0x26>
20401d1c:	0005a903          	lw	s2,0(a1)
20401d20:	8b8d                	andi	a5,a5,3
20401d22:	0135a023          	sw	s3,0(a1)
20401d26:	41390933          	sub	s2,s2,s3
20401d2a:	4701                	li	a4,0
20401d2c:	e391                	bnez	a5,20401d30 <__sflush_r+0x118>
20401d2e:	49d8                	lw	a4,20(a1)
20401d30:	c418                	sw	a4,8(s0)
20401d32:	f12056e3          	blez	s2,20401c3e <__sflush_r+0x26>
20401d36:	541c                	lw	a5,40(s0)
20401d38:	500c                	lw	a1,32(s0)
20401d3a:	86ca                	mv	a3,s2
20401d3c:	864e                	mv	a2,s3
20401d3e:	8526                	mv	a0,s1
20401d40:	9782                	jalr	a5
20401d42:	00a04a63          	bgtz	a0,20401d56 <__sflush_r+0x13e>
20401d46:	00c45783          	lhu	a5,12(s0)
20401d4a:	557d                	li	a0,-1
20401d4c:	0407e793          	ori	a5,a5,64
20401d50:	00f41623          	sh	a5,12(s0)
20401d54:	b765                	j	20401cfc <__sflush_r+0xe4>
20401d56:	99aa                	add	s3,s3,a0
20401d58:	40a90933          	sub	s2,s2,a0
20401d5c:	bfd9                	j	20401d32 <__sflush_r+0x11a>

20401d5e <_fflush_r>:
_fflush_r():
20401d5e:	499c                	lw	a5,16(a1)
20401d60:	cfb9                	beqz	a5,20401dbe <_fflush_r+0x60>
20401d62:	1101                	addi	sp,sp,-32
20401d64:	cc22                	sw	s0,24(sp)
20401d66:	ce06                	sw	ra,28(sp)
20401d68:	842a                	mv	s0,a0
20401d6a:	c511                	beqz	a0,20401d76 <_fflush_r+0x18>
20401d6c:	4d1c                	lw	a5,24(a0)
20401d6e:	e781                	bnez	a5,20401d76 <_fflush_r+0x18>
20401d70:	c62e                	sw	a1,12(sp)
20401d72:	2221                	jal	20401e7a <__sinit>
20401d74:	45b2                	lw	a1,12(sp)
20401d76:	ffffe797          	auipc	a5,0xffffe
20401d7a:	65a78793          	addi	a5,a5,1626 # 204003d0 <__sf_fake_stdin>
20401d7e:	00f59b63          	bne	a1,a5,20401d94 <_fflush_r+0x36>
20401d82:	404c                	lw	a1,4(s0)
20401d84:	00c59783          	lh	a5,12(a1)
20401d88:	c795                	beqz	a5,20401db4 <_fflush_r+0x56>
20401d8a:	8522                	mv	a0,s0
20401d8c:	4462                	lw	s0,24(sp)
20401d8e:	40f2                	lw	ra,28(sp)
20401d90:	6105                	addi	sp,sp,32
20401d92:	b559                	j	20401c18 <__sflush_r>
20401d94:	ffffe797          	auipc	a5,0xffffe
20401d98:	65c78793          	addi	a5,a5,1628 # 204003f0 <__sf_fake_stdout>
20401d9c:	00f59463          	bne	a1,a5,20401da4 <_fflush_r+0x46>
20401da0:	440c                	lw	a1,8(s0)
20401da2:	b7cd                	j	20401d84 <_fflush_r+0x26>
20401da4:	ffffe797          	auipc	a5,0xffffe
20401da8:	60c78793          	addi	a5,a5,1548 # 204003b0 <__sf_fake_stderr>
20401dac:	fcf59ce3          	bne	a1,a5,20401d84 <_fflush_r+0x26>
20401db0:	444c                	lw	a1,12(s0)
20401db2:	bfc9                	j	20401d84 <_fflush_r+0x26>
20401db4:	40f2                	lw	ra,28(sp)
20401db6:	4462                	lw	s0,24(sp)
20401db8:	4501                	li	a0,0
20401dba:	6105                	addi	sp,sp,32
20401dbc:	8082                	ret
20401dbe:	4501                	li	a0,0
20401dc0:	8082                	ret

20401dc2 <std>:
std():
20401dc2:	1141                	addi	sp,sp,-16
20401dc4:	c422                	sw	s0,8(sp)
20401dc6:	c606                	sw	ra,12(sp)
20401dc8:	842a                	mv	s0,a0
20401dca:	00b51623          	sh	a1,12(a0)
20401dce:	00c51723          	sh	a2,14(a0)
20401dd2:	00052023          	sw	zero,0(a0)
20401dd6:	00052223          	sw	zero,4(a0)
20401dda:	00052423          	sw	zero,8(a0)
20401dde:	06052223          	sw	zero,100(a0)
20401de2:	00052823          	sw	zero,16(a0)
20401de6:	00052a23          	sw	zero,20(a0)
20401dea:	00052c23          	sw	zero,24(a0)
20401dee:	4621                	li	a2,8
20401df0:	4581                	li	a1,0
20401df2:	05c50513          	addi	a0,a0,92
20401df6:	24f5                	jal	204020e2 <memset>
20401df8:	00000797          	auipc	a5,0x0
20401dfc:	69678793          	addi	a5,a5,1686 # 2040248e <__sread>
20401e00:	d05c                	sw	a5,36(s0)
20401e02:	00000797          	auipc	a5,0x0
20401e06:	6bc78793          	addi	a5,a5,1724 # 204024be <__swrite>
20401e0a:	d41c                	sw	a5,40(s0)
20401e0c:	00000797          	auipc	a5,0x0
20401e10:	70078793          	addi	a5,a5,1792 # 2040250c <__sseek>
20401e14:	d45c                	sw	a5,44(s0)
20401e16:	00000797          	auipc	a5,0x0
20401e1a:	72c78793          	addi	a5,a5,1836 # 20402542 <__sclose>
20401e1e:	40b2                	lw	ra,12(sp)
20401e20:	d000                	sw	s0,32(s0)
20401e22:	d81c                	sw	a5,48(s0)
20401e24:	4422                	lw	s0,8(sp)
20401e26:	0141                	addi	sp,sp,16
20401e28:	8082                	ret

20401e2a <_cleanup_r>:
_cleanup_r():
20401e2a:	00000597          	auipc	a1,0x0
20401e2e:	f3458593          	addi	a1,a1,-204 # 20401d5e <_fflush_r>
20401e32:	a2b9                	j	20401f80 <_fwalk_reent>

20401e34 <__sfmoreglue>:
__sfmoreglue():
20401e34:	1141                	addi	sp,sp,-16
20401e36:	c226                	sw	s1,4(sp)
20401e38:	06800613          	li	a2,104
20401e3c:	fff58493          	addi	s1,a1,-1
20401e40:	02c484b3          	mul	s1,s1,a2
20401e44:	c04a                	sw	s2,0(sp)
20401e46:	892e                	mv	s2,a1
20401e48:	c422                	sw	s0,8(sp)
20401e4a:	c606                	sw	ra,12(sp)
20401e4c:	07448593          	addi	a1,s1,116
20401e50:	9cdff0ef          	jal	ra,2040181c <_malloc_r>
20401e54:	842a                	mv	s0,a0
20401e56:	c919                	beqz	a0,20401e6c <__sfmoreglue+0x38>
20401e58:	00052023          	sw	zero,0(a0)
20401e5c:	01252223          	sw	s2,4(a0)
20401e60:	0531                	addi	a0,a0,12
20401e62:	c408                	sw	a0,8(s0)
20401e64:	06848613          	addi	a2,s1,104
20401e68:	4581                	li	a1,0
20401e6a:	2ca5                	jal	204020e2 <memset>
20401e6c:	40b2                	lw	ra,12(sp)
20401e6e:	8522                	mv	a0,s0
20401e70:	4422                	lw	s0,8(sp)
20401e72:	4492                	lw	s1,4(sp)
20401e74:	4902                	lw	s2,0(sp)
20401e76:	0141                	addi	sp,sp,16
20401e78:	8082                	ret

20401e7a <__sinit>:
__sinit():
20401e7a:	4d1c                	lw	a5,24(a0)
20401e7c:	e3bd                	bnez	a5,20401ee2 <__sinit+0x68>
20401e7e:	1141                	addi	sp,sp,-16
20401e80:	c422                	sw	s0,8(sp)
20401e82:	c606                	sw	ra,12(sp)
20401e84:	00000797          	auipc	a5,0x0
20401e88:	fa678793          	addi	a5,a5,-90 # 20401e2a <_cleanup_r>
20401e8c:	d51c                	sw	a5,40(a0)
20401e8e:	04052423          	sw	zero,72(a0)
20401e92:	04052623          	sw	zero,76(a0)
20401e96:	04052823          	sw	zero,80(a0)
20401e9a:	fffff797          	auipc	a5,0xfffff
20401e9e:	1567a783          	lw	a5,342(a5) # 20400ff0 <_global_impure_ptr>
20401ea2:	842a                	mv	s0,a0
20401ea4:	00f51463          	bne	a0,a5,20401eac <__sinit+0x32>
20401ea8:	4785                	li	a5,1
20401eaa:	cd1c                	sw	a5,24(a0)
20401eac:	8522                	mv	a0,s0
20401eae:	281d                	jal	20401ee4 <__sfp>
20401eb0:	c048                	sw	a0,4(s0)
20401eb2:	8522                	mv	a0,s0
20401eb4:	2805                	jal	20401ee4 <__sfp>
20401eb6:	c408                	sw	a0,8(s0)
20401eb8:	8522                	mv	a0,s0
20401eba:	202d                	jal	20401ee4 <__sfp>
20401ebc:	c448                	sw	a0,12(s0)
20401ebe:	4048                	lw	a0,4(s0)
20401ec0:	4601                	li	a2,0
20401ec2:	4591                	li	a1,4
20401ec4:	3dfd                	jal	20401dc2 <std>
20401ec6:	4408                	lw	a0,8(s0)
20401ec8:	4605                	li	a2,1
20401eca:	45a5                	li	a1,9
20401ecc:	3ddd                	jal	20401dc2 <std>
20401ece:	4448                	lw	a0,12(s0)
20401ed0:	4609                	li	a2,2
20401ed2:	45c9                	li	a1,18
20401ed4:	35fd                	jal	20401dc2 <std>
20401ed6:	4785                	li	a5,1
20401ed8:	40b2                	lw	ra,12(sp)
20401eda:	cc1c                	sw	a5,24(s0)
20401edc:	4422                	lw	s0,8(sp)
20401ede:	0141                	addi	sp,sp,16
20401ee0:	8082                	ret
20401ee2:	8082                	ret

20401ee4 <__sfp>:
__sfp():
20401ee4:	1141                	addi	sp,sp,-16
20401ee6:	c226                	sw	s1,4(sp)
20401ee8:	fffff497          	auipc	s1,0xfffff
20401eec:	1084a483          	lw	s1,264(s1) # 20400ff0 <_global_impure_ptr>
20401ef0:	4c9c                	lw	a5,24(s1)
20401ef2:	c04a                	sw	s2,0(sp)
20401ef4:	c606                	sw	ra,12(sp)
20401ef6:	c422                	sw	s0,8(sp)
20401ef8:	892a                	mv	s2,a0
20401efa:	e399                	bnez	a5,20401f00 <__sfp+0x1c>
20401efc:	8526                	mv	a0,s1
20401efe:	3fb5                	jal	20401e7a <__sinit>
20401f00:	04848493          	addi	s1,s1,72
20401f04:	4480                	lw	s0,8(s1)
20401f06:	40dc                	lw	a5,4(s1)
20401f08:	17fd                	addi	a5,a5,-1
20401f0a:	0007d663          	bgez	a5,20401f16 <__sfp+0x32>
20401f0e:	409c                	lw	a5,0(s1)
20401f10:	cfb1                	beqz	a5,20401f6c <__sfp+0x88>
20401f12:	4084                	lw	s1,0(s1)
20401f14:	bfc5                	j	20401f04 <__sfp+0x20>
20401f16:	00c41703          	lh	a4,12(s0)
20401f1a:	e731                	bnez	a4,20401f66 <__sfp+0x82>
20401f1c:	77c1                	lui	a5,0xffff0
20401f1e:	0785                	addi	a5,a5,1
20401f20:	06042223          	sw	zero,100(s0)
20401f24:	00042023          	sw	zero,0(s0)
20401f28:	00042223          	sw	zero,4(s0)
20401f2c:	00042423          	sw	zero,8(s0)
20401f30:	c45c                	sw	a5,12(s0)
20401f32:	00042823          	sw	zero,16(s0)
20401f36:	00042a23          	sw	zero,20(s0)
20401f3a:	00042c23          	sw	zero,24(s0)
20401f3e:	4621                	li	a2,8
20401f40:	4581                	li	a1,0
20401f42:	05c40513          	addi	a0,s0,92
20401f46:	2a71                	jal	204020e2 <memset>
20401f48:	02042a23          	sw	zero,52(s0)
20401f4c:	02042c23          	sw	zero,56(s0)
20401f50:	04042423          	sw	zero,72(s0)
20401f54:	04042623          	sw	zero,76(s0)
20401f58:	40b2                	lw	ra,12(sp)
20401f5a:	8522                	mv	a0,s0
20401f5c:	4422                	lw	s0,8(sp)
20401f5e:	4492                	lw	s1,4(sp)
20401f60:	4902                	lw	s2,0(sp)
20401f62:	0141                	addi	sp,sp,16
20401f64:	8082                	ret
20401f66:	06840413          	addi	s0,s0,104
20401f6a:	bf79                	j	20401f08 <__sfp+0x24>
20401f6c:	4591                	li	a1,4
20401f6e:	854a                	mv	a0,s2
20401f70:	35d1                	jal	20401e34 <__sfmoreglue>
20401f72:	c088                	sw	a0,0(s1)
20401f74:	842a                	mv	s0,a0
20401f76:	fd51                	bnez	a0,20401f12 <__sfp+0x2e>
20401f78:	47b1                	li	a5,12
20401f7a:	00f92023          	sw	a5,0(s2)
20401f7e:	bfe9                	j	20401f58 <__sfp+0x74>

20401f80 <_fwalk_reent>:
_fwalk_reent():
20401f80:	7179                	addi	sp,sp,-48
20401f82:	d422                	sw	s0,40(sp)
20401f84:	d04a                	sw	s2,32(sp)
20401f86:	ce4e                	sw	s3,28(sp)
20401f88:	cc52                	sw	s4,24(sp)
20401f8a:	c85a                	sw	s6,16(sp)
20401f8c:	c65e                	sw	s7,12(sp)
20401f8e:	d606                	sw	ra,44(sp)
20401f90:	d226                	sw	s1,36(sp)
20401f92:	ca56                	sw	s5,20(sp)
20401f94:	892a                	mv	s2,a0
20401f96:	8a2e                	mv	s4,a1
20401f98:	04850413          	addi	s0,a0,72
20401f9c:	4981                	li	s3,0
20401f9e:	4b05                	li	s6,1
20401fa0:	5bfd                	li	s7,-1
20401fa2:	4404                	lw	s1,8(s0)
20401fa4:	00442a83          	lw	s5,4(s0)
20401fa8:	1afd                	addi	s5,s5,-1
20401faa:	020ad063          	bgez	s5,20401fca <_fwalk_reent+0x4a>
20401fae:	4000                	lw	s0,0(s0)
20401fb0:	f86d                	bnez	s0,20401fa2 <_fwalk_reent+0x22>
20401fb2:	50b2                	lw	ra,44(sp)
20401fb4:	5422                	lw	s0,40(sp)
20401fb6:	5492                	lw	s1,36(sp)
20401fb8:	5902                	lw	s2,32(sp)
20401fba:	4a62                	lw	s4,24(sp)
20401fbc:	4ad2                	lw	s5,20(sp)
20401fbe:	4b42                	lw	s6,16(sp)
20401fc0:	4bb2                	lw	s7,12(sp)
20401fc2:	854e                	mv	a0,s3
20401fc4:	49f2                	lw	s3,28(sp)
20401fc6:	6145                	addi	sp,sp,48
20401fc8:	8082                	ret
20401fca:	00c4d783          	lhu	a5,12(s1)
20401fce:	00fb7b63          	bgeu	s6,a5,20401fe4 <_fwalk_reent+0x64>
20401fd2:	00e49783          	lh	a5,14(s1)
20401fd6:	01778763          	beq	a5,s7,20401fe4 <_fwalk_reent+0x64>
20401fda:	85a6                	mv	a1,s1
20401fdc:	854a                	mv	a0,s2
20401fde:	9a02                	jalr	s4
20401fe0:	00a9e9b3          	or	s3,s3,a0
20401fe4:	06848493          	addi	s1,s1,104
20401fe8:	b7c1                	j	20401fa8 <_fwalk_reent+0x28>

20401fea <__swhatbuf_r>:
__swhatbuf_r():
20401fea:	7159                	addi	sp,sp,-112
20401fec:	d0ca                	sw	s2,96(sp)
20401fee:	892e                	mv	s2,a1
20401ff0:	00e59583          	lh	a1,14(a1)
20401ff4:	d4a2                	sw	s0,104(sp)
20401ff6:	d2a6                	sw	s1,100(sp)
20401ff8:	d686                	sw	ra,108(sp)
20401ffa:	8432                	mv	s0,a2
20401ffc:	84b6                	mv	s1,a3
20401ffe:	0005dc63          	bgez	a1,20402016 <__swhatbuf_r+0x2c>
20402002:	00c91783          	lh	a5,12(s2)
20402006:	0004a023          	sw	zero,0(s1)
2040200a:	0807f793          	andi	a5,a5,128
2040200e:	e38d                	bnez	a5,20402030 <__swhatbuf_r+0x46>
20402010:	40000793          	li	a5,1024
20402014:	a005                	j	20402034 <__swhatbuf_r+0x4a>
20402016:	0030                	addi	a2,sp,8
20402018:	2b41                	jal	204025a8 <_fstat_r>
2040201a:	fe0544e3          	bltz	a0,20402002 <__swhatbuf_r+0x18>
2040201e:	4732                	lw	a4,12(sp)
20402020:	67bd                	lui	a5,0xf
20402022:	8ff9                	and	a5,a5,a4
20402024:	7779                	lui	a4,0xffffe
20402026:	97ba                	add	a5,a5,a4
20402028:	0017b793          	seqz	a5,a5
2040202c:	c09c                	sw	a5,0(s1)
2040202e:	b7cd                	j	20402010 <__swhatbuf_r+0x26>
20402030:	04000793          	li	a5,64
20402034:	50b6                	lw	ra,108(sp)
20402036:	c01c                	sw	a5,0(s0)
20402038:	5426                	lw	s0,104(sp)
2040203a:	5496                	lw	s1,100(sp)
2040203c:	5906                	lw	s2,96(sp)
2040203e:	4501                	li	a0,0
20402040:	6165                	addi	sp,sp,112
20402042:	8082                	ret

20402044 <__smakebuf_r>:
__smakebuf_r():
20402044:	00c5d783          	lhu	a5,12(a1)
20402048:	1101                	addi	sp,sp,-32
2040204a:	cc22                	sw	s0,24(sp)
2040204c:	ce06                	sw	ra,28(sp)
2040204e:	ca26                	sw	s1,20(sp)
20402050:	c84a                	sw	s2,16(sp)
20402052:	8b89                	andi	a5,a5,2
20402054:	842e                	mv	s0,a1
20402056:	cf89                	beqz	a5,20402070 <__smakebuf_r+0x2c>
20402058:	04740793          	addi	a5,s0,71
2040205c:	c01c                	sw	a5,0(s0)
2040205e:	c81c                	sw	a5,16(s0)
20402060:	4785                	li	a5,1
20402062:	c85c                	sw	a5,20(s0)
20402064:	40f2                	lw	ra,28(sp)
20402066:	4462                	lw	s0,24(sp)
20402068:	44d2                	lw	s1,20(sp)
2040206a:	4942                	lw	s2,16(sp)
2040206c:	6105                	addi	sp,sp,32
2040206e:	8082                	ret
20402070:	0074                	addi	a3,sp,12
20402072:	0030                	addi	a2,sp,8
20402074:	892a                	mv	s2,a0
20402076:	3f95                	jal	20401fea <__swhatbuf_r>
20402078:	45a2                	lw	a1,8(sp)
2040207a:	84aa                	mv	s1,a0
2040207c:	854a                	mv	a0,s2
2040207e:	f9eff0ef          	jal	ra,2040181c <_malloc_r>
20402082:	ed01                	bnez	a0,2040209a <__smakebuf_r+0x56>
20402084:	00c41783          	lh	a5,12(s0)
20402088:	2007f713          	andi	a4,a5,512
2040208c:	ff61                	bnez	a4,20402064 <__smakebuf_r+0x20>
2040208e:	9bf1                	andi	a5,a5,-4
20402090:	0027e793          	ori	a5,a5,2
20402094:	00f41623          	sh	a5,12(s0)
20402098:	b7c1                	j	20402058 <__smakebuf_r+0x14>
2040209a:	00000797          	auipc	a5,0x0
2040209e:	d9078793          	addi	a5,a5,-624 # 20401e2a <_cleanup_r>
204020a2:	02f92423          	sw	a5,40(s2)
204020a6:	00c45783          	lhu	a5,12(s0)
204020aa:	c008                	sw	a0,0(s0)
204020ac:	c808                	sw	a0,16(s0)
204020ae:	0807e793          	ori	a5,a5,128
204020b2:	00f41623          	sh	a5,12(s0)
204020b6:	47a2                	lw	a5,8(sp)
204020b8:	c85c                	sw	a5,20(s0)
204020ba:	47b2                	lw	a5,12(sp)
204020bc:	cf89                	beqz	a5,204020d6 <__smakebuf_r+0x92>
204020be:	00e41583          	lh	a1,14(s0)
204020c2:	854a                	mv	a0,s2
204020c4:	2b11                	jal	204025d8 <_isatty_r>
204020c6:	c901                	beqz	a0,204020d6 <__smakebuf_r+0x92>
204020c8:	00c45783          	lhu	a5,12(s0)
204020cc:	9bf1                	andi	a5,a5,-4
204020ce:	0017e793          	ori	a5,a5,1
204020d2:	00f41623          	sh	a5,12(s0)
204020d6:	00c45503          	lhu	a0,12(s0)
204020da:	8cc9                	or	s1,s1,a0
204020dc:	00941623          	sh	s1,12(s0)
204020e0:	b751                	j	20402064 <__smakebuf_r+0x20>

204020e2 <memset>:
memset():
204020e2:	433d                	li	t1,15
204020e4:	872a                	mv	a4,a0
204020e6:	02c37363          	bgeu	t1,a2,2040210c <memset+0x2a>
204020ea:	00f77793          	andi	a5,a4,15
204020ee:	efbd                	bnez	a5,2040216c <memset+0x8a>
204020f0:	e5ad                	bnez	a1,2040215a <memset+0x78>
204020f2:	ff067693          	andi	a3,a2,-16
204020f6:	8a3d                	andi	a2,a2,15
204020f8:	96ba                	add	a3,a3,a4
204020fa:	c30c                	sw	a1,0(a4)
204020fc:	c34c                	sw	a1,4(a4)
204020fe:	c70c                	sw	a1,8(a4)
20402100:	c74c                	sw	a1,12(a4)
20402102:	0741                	addi	a4,a4,16
20402104:	fed76be3          	bltu	a4,a3,204020fa <memset+0x18>
20402108:	e211                	bnez	a2,2040210c <memset+0x2a>
2040210a:	8082                	ret
2040210c:	40c306b3          	sub	a3,t1,a2
20402110:	068a                	slli	a3,a3,0x2
20402112:	00000297          	auipc	t0,0x0
20402116:	9696                	add	a3,a3,t0
20402118:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
2040211c:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffbeee>
20402120:	00b706a3          	sb	a1,13(a4)
20402124:	00b70623          	sb	a1,12(a4)
20402128:	00b705a3          	sb	a1,11(a4)
2040212c:	00b70523          	sb	a1,10(a4)
20402130:	00b704a3          	sb	a1,9(a4)
20402134:	00b70423          	sb	a1,8(a4)
20402138:	00b703a3          	sb	a1,7(a4)
2040213c:	00b70323          	sb	a1,6(a4)
20402140:	00b702a3          	sb	a1,5(a4)
20402144:	00b70223          	sb	a1,4(a4)
20402148:	00b701a3          	sb	a1,3(a4)
2040214c:	00b70123          	sb	a1,2(a4)
20402150:	00b700a3          	sb	a1,1(a4)
20402154:	00b70023          	sb	a1,0(a4)
20402158:	8082                	ret
2040215a:	0ff5f593          	zext.b	a1,a1
2040215e:	00859693          	slli	a3,a1,0x8
20402162:	8dd5                	or	a1,a1,a3
20402164:	01059693          	slli	a3,a1,0x10
20402168:	8dd5                	or	a1,a1,a3
2040216a:	b761                	j	204020f2 <memset+0x10>
2040216c:	00279693          	slli	a3,a5,0x2
20402170:	00000297          	auipc	t0,0x0
20402174:	9696                	add	a3,a3,t0
20402176:	8286                	mv	t0,ra
20402178:	fa8680e7          	jalr	-88(a3)
2040217c:	8096                	mv	ra,t0
2040217e:	17c1                	addi	a5,a5,-16
20402180:	8f1d                	sub	a4,a4,a5
20402182:	963e                	add	a2,a2,a5
20402184:	f8c374e3          	bgeu	t1,a2,2040210c <memset+0x2a>
20402188:	b7a5                	j	204020f0 <memset+0xe>

2040218a <__malloc_lock>:
__malloc_lock():
2040218a:	8082                	ret

2040218c <__malloc_unlock>:
__malloc_unlock():
2040218c:	8082                	ret

2040218e <__sfputc_r>:
__sfputc_r():
2040218e:	461c                	lw	a5,8(a2)
20402190:	17fd                	addi	a5,a5,-1
20402192:	c61c                	sw	a5,8(a2)
20402194:	0007da63          	bgez	a5,204021a8 <__sfputc_r+0x1a>
20402198:	4e18                	lw	a4,24(a2)
2040219a:	00e7c563          	blt	a5,a4,204021a4 <__sfputc_r+0x16>
2040219e:	47a9                	li	a5,10
204021a0:	00f59463          	bne	a1,a5,204021a8 <__sfputc_r+0x1a>
204021a4:	8abff06f          	j	20401a4e <__swbuf_r>
204021a8:	421c                	lw	a5,0(a2)
204021aa:	852e                	mv	a0,a1
204021ac:	00178713          	addi	a4,a5,1
204021b0:	c218                	sw	a4,0(a2)
204021b2:	00b78023          	sb	a1,0(a5)
204021b6:	8082                	ret

204021b8 <__sfputs_r>:
__sfputs_r():
204021b8:	1101                	addi	sp,sp,-32
204021ba:	cc22                	sw	s0,24(sp)
204021bc:	ca26                	sw	s1,20(sp)
204021be:	c84a                	sw	s2,16(sp)
204021c0:	c64e                	sw	s3,12(sp)
204021c2:	c452                	sw	s4,8(sp)
204021c4:	ce06                	sw	ra,28(sp)
204021c6:	892a                	mv	s2,a0
204021c8:	89ae                	mv	s3,a1
204021ca:	8432                	mv	s0,a2
204021cc:	00d604b3          	add	s1,a2,a3
204021d0:	5a7d                	li	s4,-1
204021d2:	00941463          	bne	s0,s1,204021da <__sfputs_r+0x22>
204021d6:	4501                	li	a0,0
204021d8:	a809                	j	204021ea <__sfputs_r+0x32>
204021da:	00044583          	lbu	a1,0(s0)
204021de:	864e                	mv	a2,s3
204021e0:	854a                	mv	a0,s2
204021e2:	3775                	jal	2040218e <__sfputc_r>
204021e4:	0405                	addi	s0,s0,1
204021e6:	ff4516e3          	bne	a0,s4,204021d2 <__sfputs_r+0x1a>
204021ea:	40f2                	lw	ra,28(sp)
204021ec:	4462                	lw	s0,24(sp)
204021ee:	44d2                	lw	s1,20(sp)
204021f0:	4942                	lw	s2,16(sp)
204021f2:	49b2                	lw	s3,12(sp)
204021f4:	4a22                	lw	s4,8(sp)
204021f6:	6105                	addi	sp,sp,32
204021f8:	8082                	ret

204021fa <_vfiprintf_r>:
_vfiprintf_r():
204021fa:	7135                	addi	sp,sp,-160
204021fc:	cd22                	sw	s0,152(sp)
204021fe:	cb26                	sw	s1,148(sp)
20402200:	c94a                	sw	s2,144(sp)
20402202:	c74e                	sw	s3,140(sp)
20402204:	cf06                	sw	ra,156(sp)
20402206:	c552                	sw	s4,136(sp)
20402208:	c356                	sw	s5,132(sp)
2040220a:	c15a                	sw	s6,128(sp)
2040220c:	dede                	sw	s7,124(sp)
2040220e:	dce2                	sw	s8,120(sp)
20402210:	dae6                	sw	s9,116(sp)
20402212:	89aa                	mv	s3,a0
20402214:	84ae                	mv	s1,a1
20402216:	8932                	mv	s2,a2
20402218:	8436                	mv	s0,a3
2040221a:	c501                	beqz	a0,20402222 <_vfiprintf_r+0x28>
2040221c:	4d1c                	lw	a5,24(a0)
2040221e:	e391                	bnez	a5,20402222 <_vfiprintf_r+0x28>
20402220:	39a9                	jal	20401e7a <__sinit>
20402222:	ffffe797          	auipc	a5,0xffffe
20402226:	1ae78793          	addi	a5,a5,430 # 204003d0 <__sf_fake_stdin>
2040222a:	0cf49b63          	bne	s1,a5,20402300 <_vfiprintf_r+0x106>
2040222e:	0049a483          	lw	s1,4(s3)
20402232:	00c4d783          	lhu	a5,12(s1)
20402236:	8ba1                	andi	a5,a5,8
20402238:	c7f5                	beqz	a5,20402324 <_vfiprintf_r+0x12a>
2040223a:	489c                	lw	a5,16(s1)
2040223c:	c7e5                	beqz	a5,20402324 <_vfiprintf_r+0x12a>
2040223e:	02000793          	li	a5,32
20402242:	02f104a3          	sb	a5,41(sp)
20402246:	03000793          	li	a5,48
2040224a:	d202                	sw	zero,36(sp)
2040224c:	02f10523          	sb	a5,42(sp)
20402250:	c622                	sw	s0,12(sp)
20402252:	02500b93          	li	s7,37
20402256:	ffffea97          	auipc	s5,0xffffe
2040225a:	1baa8a93          	addi	s5,s5,442 # 20400410 <__sf_fake_stdout+0x20>
2040225e:	4c05                	li	s8,1
20402260:	4b29                	li	s6,10
20402262:	844a                	mv	s0,s2
20402264:	00044783          	lbu	a5,0(s0)
20402268:	c399                	beqz	a5,2040226e <_vfiprintf_r+0x74>
2040226a:	0f779063          	bne	a5,s7,2040234a <_vfiprintf_r+0x150>
2040226e:	41240cb3          	sub	s9,s0,s2
20402272:	01240d63          	beq	s0,s2,2040228c <_vfiprintf_r+0x92>
20402276:	86e6                	mv	a3,s9
20402278:	864a                	mv	a2,s2
2040227a:	85a6                	mv	a1,s1
2040227c:	854e                	mv	a0,s3
2040227e:	3f2d                	jal	204021b8 <__sfputs_r>
20402280:	57fd                	li	a5,-1
20402282:	1ef50463          	beq	a0,a5,2040246a <_vfiprintf_r+0x270>
20402286:	5792                	lw	a5,36(sp)
20402288:	97e6                	add	a5,a5,s9
2040228a:	d23e                	sw	a5,36(sp)
2040228c:	00044783          	lbu	a5,0(s0)
20402290:	1c078d63          	beqz	a5,2040246a <_vfiprintf_r+0x270>
20402294:	57fd                	li	a5,-1
20402296:	00140913          	addi	s2,s0,1
2040229a:	c802                	sw	zero,16(sp)
2040229c:	ce02                	sw	zero,28(sp)
2040229e:	ca3e                	sw	a5,20(sp)
204022a0:	cc02                	sw	zero,24(sp)
204022a2:	040109a3          	sb	zero,83(sp)
204022a6:	d482                	sw	zero,104(sp)
204022a8:	00094583          	lbu	a1,0(s2)
204022ac:	4615                	li	a2,5
204022ae:	8556                	mv	a0,s5
204022b0:	2661                	jal	20402638 <memchr>
204022b2:	47c2                	lw	a5,16(sp)
204022b4:	00190413          	addi	s0,s2,1
204022b8:	e959                	bnez	a0,2040234e <_vfiprintf_r+0x154>
204022ba:	0107f713          	andi	a4,a5,16
204022be:	c709                	beqz	a4,204022c8 <_vfiprintf_r+0xce>
204022c0:	02000713          	li	a4,32
204022c4:	04e109a3          	sb	a4,83(sp)
204022c8:	0087f713          	andi	a4,a5,8
204022cc:	c709                	beqz	a4,204022d6 <_vfiprintf_r+0xdc>
204022ce:	02b00713          	li	a4,43
204022d2:	04e109a3          	sb	a4,83(sp)
204022d6:	00094683          	lbu	a3,0(s2)
204022da:	02a00713          	li	a4,42
204022de:	08e68063          	beq	a3,a4,2040235e <_vfiprintf_r+0x164>
204022e2:	47f2                	lw	a5,28(sp)
204022e4:	844a                	mv	s0,s2
204022e6:	4681                	li	a3,0
204022e8:	4625                	li	a2,9
204022ea:	00044703          	lbu	a4,0(s0)
204022ee:	00140593          	addi	a1,s0,1
204022f2:	fd070713          	addi	a4,a4,-48
204022f6:	0ae67963          	bgeu	a2,a4,204023a8 <_vfiprintf_r+0x1ae>
204022fa:	cab5                	beqz	a3,2040236e <_vfiprintf_r+0x174>
204022fc:	ce3e                	sw	a5,28(sp)
204022fe:	a885                	j	2040236e <_vfiprintf_r+0x174>
20402300:	ffffe797          	auipc	a5,0xffffe
20402304:	0f078793          	addi	a5,a5,240 # 204003f0 <__sf_fake_stdout>
20402308:	00f49563          	bne	s1,a5,20402312 <_vfiprintf_r+0x118>
2040230c:	0089a483          	lw	s1,8(s3)
20402310:	b70d                	j	20402232 <_vfiprintf_r+0x38>
20402312:	ffffe797          	auipc	a5,0xffffe
20402316:	09e78793          	addi	a5,a5,158 # 204003b0 <__sf_fake_stderr>
2040231a:	f0f49ce3          	bne	s1,a5,20402232 <_vfiprintf_r+0x38>
2040231e:	00c9a483          	lw	s1,12(s3)
20402322:	bf01                	j	20402232 <_vfiprintf_r+0x38>
20402324:	85a6                	mv	a1,s1
20402326:	854e                	mv	a0,s3
20402328:	fe6ff0ef          	jal	ra,20401b0e <__swsetup_r>
2040232c:	d909                	beqz	a0,2040223e <_vfiprintf_r+0x44>
2040232e:	557d                	li	a0,-1
20402330:	40fa                	lw	ra,156(sp)
20402332:	446a                	lw	s0,152(sp)
20402334:	44da                	lw	s1,148(sp)
20402336:	494a                	lw	s2,144(sp)
20402338:	49ba                	lw	s3,140(sp)
2040233a:	4a2a                	lw	s4,136(sp)
2040233c:	4a9a                	lw	s5,132(sp)
2040233e:	4b0a                	lw	s6,128(sp)
20402340:	5bf6                	lw	s7,124(sp)
20402342:	5c66                	lw	s8,120(sp)
20402344:	5cd6                	lw	s9,116(sp)
20402346:	610d                	addi	sp,sp,160
20402348:	8082                	ret
2040234a:	0405                	addi	s0,s0,1
2040234c:	bf21                	j	20402264 <_vfiprintf_r+0x6a>
2040234e:	41550533          	sub	a0,a0,s5
20402352:	00ac1533          	sll	a0,s8,a0
20402356:	8fc9                	or	a5,a5,a0
20402358:	c83e                	sw	a5,16(sp)
2040235a:	8922                	mv	s2,s0
2040235c:	b7b1                	j	204022a8 <_vfiprintf_r+0xae>
2040235e:	4732                	lw	a4,12(sp)
20402360:	00470693          	addi	a3,a4,4
20402364:	4318                	lw	a4,0(a4)
20402366:	c636                	sw	a3,12(sp)
20402368:	02074963          	bltz	a4,2040239a <_vfiprintf_r+0x1a0>
2040236c:	ce3a                	sw	a4,28(sp)
2040236e:	00044703          	lbu	a4,0(s0)
20402372:	02e00793          	li	a5,46
20402376:	04f71f63          	bne	a4,a5,204023d4 <_vfiprintf_r+0x1da>
2040237a:	00144703          	lbu	a4,1(s0)
2040237e:	02a00793          	li	a5,42
20402382:	02f71b63          	bne	a4,a5,204023b8 <_vfiprintf_r+0x1be>
20402386:	47b2                	lw	a5,12(sp)
20402388:	0409                	addi	s0,s0,2
2040238a:	00478713          	addi	a4,a5,4
2040238e:	439c                	lw	a5,0(a5)
20402390:	c63a                	sw	a4,12(sp)
20402392:	0207c163          	bltz	a5,204023b4 <_vfiprintf_r+0x1ba>
20402396:	ca3e                	sw	a5,20(sp)
20402398:	a835                	j	204023d4 <_vfiprintf_r+0x1da>
2040239a:	40e00733          	neg	a4,a4
2040239e:	0027e793          	ori	a5,a5,2
204023a2:	ce3a                	sw	a4,28(sp)
204023a4:	c83e                	sw	a5,16(sp)
204023a6:	b7e1                	j	2040236e <_vfiprintf_r+0x174>
204023a8:	036787b3          	mul	a5,a5,s6
204023ac:	842e                	mv	s0,a1
204023ae:	4685                	li	a3,1
204023b0:	97ba                	add	a5,a5,a4
204023b2:	bf25                	j	204022ea <_vfiprintf_r+0xf0>
204023b4:	57fd                	li	a5,-1
204023b6:	b7c5                	j	20402396 <_vfiprintf_r+0x19c>
204023b8:	0405                	addi	s0,s0,1
204023ba:	ca02                	sw	zero,20(sp)
204023bc:	4681                	li	a3,0
204023be:	4781                	li	a5,0
204023c0:	4625                	li	a2,9
204023c2:	00044703          	lbu	a4,0(s0)
204023c6:	00140593          	addi	a1,s0,1
204023ca:	fd070713          	addi	a4,a4,-48
204023ce:	06e67463          	bgeu	a2,a4,20402436 <_vfiprintf_r+0x23c>
204023d2:	f2f1                	bnez	a3,20402396 <_vfiprintf_r+0x19c>
204023d4:	00044583          	lbu	a1,0(s0)
204023d8:	460d                	li	a2,3
204023da:	ffffe517          	auipc	a0,0xffffe
204023de:	03e50513          	addi	a0,a0,62 # 20400418 <__sf_fake_stdout+0x28>
204023e2:	2c99                	jal	20402638 <memchr>
204023e4:	cd11                	beqz	a0,20402400 <_vfiprintf_r+0x206>
204023e6:	ffffe797          	auipc	a5,0xffffe
204023ea:	03278793          	addi	a5,a5,50 # 20400418 <__sf_fake_stdout+0x28>
204023ee:	8d1d                	sub	a0,a0,a5
204023f0:	04000793          	li	a5,64
204023f4:	00a797b3          	sll	a5,a5,a0
204023f8:	4542                	lw	a0,16(sp)
204023fa:	0405                	addi	s0,s0,1
204023fc:	8d5d                	or	a0,a0,a5
204023fe:	c82a                	sw	a0,16(sp)
20402400:	00044583          	lbu	a1,0(s0)
20402404:	4619                	li	a2,6
20402406:	ffffe517          	auipc	a0,0xffffe
2040240a:	01650513          	addi	a0,a0,22 # 2040041c <__sf_fake_stdout+0x2c>
2040240e:	00140913          	addi	s2,s0,1
20402412:	02b10423          	sb	a1,40(sp)
20402416:	240d                	jal	20402638 <memchr>
20402418:	c12d                	beqz	a0,2040247a <_vfiprintf_r+0x280>
2040241a:	00000793          	li	a5,0
2040241e:	e795                	bnez	a5,2040244a <_vfiprintf_r+0x250>
20402420:	4742                	lw	a4,16(sp)
20402422:	47b2                	lw	a5,12(sp)
20402424:	10077713          	andi	a4,a4,256
20402428:	cf09                	beqz	a4,20402442 <_vfiprintf_r+0x248>
2040242a:	0791                	addi	a5,a5,4
2040242c:	c63e                	sw	a5,12(sp)
2040242e:	5792                	lw	a5,36(sp)
20402430:	97d2                	add	a5,a5,s4
20402432:	d23e                	sw	a5,36(sp)
20402434:	b53d                	j	20402262 <_vfiprintf_r+0x68>
20402436:	036787b3          	mul	a5,a5,s6
2040243a:	842e                	mv	s0,a1
2040243c:	4685                	li	a3,1
2040243e:	97ba                	add	a5,a5,a4
20402440:	b749                	j	204023c2 <_vfiprintf_r+0x1c8>
20402442:	079d                	addi	a5,a5,7
20402444:	9be1                	andi	a5,a5,-8
20402446:	07a1                	addi	a5,a5,8
20402448:	b7d5                	j	2040242c <_vfiprintf_r+0x232>
2040244a:	0078                	addi	a4,sp,12
2040244c:	00000697          	auipc	a3,0x0
20402450:	d6c68693          	addi	a3,a3,-660 # 204021b8 <__sfputs_r>
20402454:	8626                	mv	a2,s1
20402456:	080c                	addi	a1,sp,16
20402458:	854e                	mv	a0,s3
2040245a:	00000097          	auipc	ra,0x0
2040245e:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20402462:	57fd                	li	a5,-1
20402464:	8a2a                	mv	s4,a0
20402466:	fcf514e3          	bne	a0,a5,2040242e <_vfiprintf_r+0x234>
2040246a:	00c4d783          	lhu	a5,12(s1)
2040246e:	0407f793          	andi	a5,a5,64
20402472:	ea079ee3          	bnez	a5,2040232e <_vfiprintf_r+0x134>
20402476:	5512                	lw	a0,36(sp)
20402478:	bd65                	j	20402330 <_vfiprintf_r+0x136>
2040247a:	0078                	addi	a4,sp,12
2040247c:	00000697          	auipc	a3,0x0
20402480:	d3c68693          	addi	a3,a3,-708 # 204021b8 <__sfputs_r>
20402484:	8626                	mv	a2,s1
20402486:	080c                	addi	a1,sp,16
20402488:	854e                	mv	a0,s3
2040248a:	2cd1                	jal	2040275e <_printf_i>
2040248c:	bfd9                	j	20402462 <_vfiprintf_r+0x268>

2040248e <__sread>:
__sread():
2040248e:	1141                	addi	sp,sp,-16
20402490:	c422                	sw	s0,8(sp)
20402492:	842e                	mv	s0,a1
20402494:	00e59583          	lh	a1,14(a1)
20402498:	c606                	sw	ra,12(sp)
2040249a:	2b15                	jal	204029ce <_read_r>
2040249c:	00054963          	bltz	a0,204024ae <__sread+0x20>
204024a0:	487c                	lw	a5,84(s0)
204024a2:	97aa                	add	a5,a5,a0
204024a4:	c87c                	sw	a5,84(s0)
204024a6:	40b2                	lw	ra,12(sp)
204024a8:	4422                	lw	s0,8(sp)
204024aa:	0141                	addi	sp,sp,16
204024ac:	8082                	ret
204024ae:	00c45783          	lhu	a5,12(s0)
204024b2:	777d                	lui	a4,0xfffff
204024b4:	177d                	addi	a4,a4,-1
204024b6:	8ff9                	and	a5,a5,a4
204024b8:	00f41623          	sh	a5,12(s0)
204024bc:	b7ed                	j	204024a6 <__sread+0x18>

204024be <__swrite>:
__swrite():
204024be:	00c5d783          	lhu	a5,12(a1)
204024c2:	1101                	addi	sp,sp,-32
204024c4:	cc22                	sw	s0,24(sp)
204024c6:	ca26                	sw	s1,20(sp)
204024c8:	c84a                	sw	s2,16(sp)
204024ca:	c64e                	sw	s3,12(sp)
204024cc:	ce06                	sw	ra,28(sp)
204024ce:	1007f793          	andi	a5,a5,256
204024d2:	84aa                	mv	s1,a0
204024d4:	842e                	mv	s0,a1
204024d6:	8932                	mv	s2,a2
204024d8:	89b6                	mv	s3,a3
204024da:	c791                	beqz	a5,204024e6 <__swrite+0x28>
204024dc:	00e59583          	lh	a1,14(a1)
204024e0:	4689                	li	a3,2
204024e2:	4601                	li	a2,0
204024e4:	220d                	jal	20402606 <_lseek_r>
204024e6:	00c45783          	lhu	a5,12(s0)
204024ea:	777d                	lui	a4,0xfffff
204024ec:	177d                	addi	a4,a4,-1
204024ee:	8ff9                	and	a5,a5,a4
204024f0:	00e41583          	lh	a1,14(s0)
204024f4:	00f41623          	sh	a5,12(s0)
204024f8:	4462                	lw	s0,24(sp)
204024fa:	40f2                	lw	ra,28(sp)
204024fc:	86ce                	mv	a3,s3
204024fe:	864a                	mv	a2,s2
20402500:	49b2                	lw	s3,12(sp)
20402502:	4942                	lw	s2,16(sp)
20402504:	8526                	mv	a0,s1
20402506:	44d2                	lw	s1,20(sp)
20402508:	6105                	addi	sp,sp,32
2040250a:	a83d                	j	20402548 <_write_r>

2040250c <__sseek>:
__sseek():
2040250c:	1141                	addi	sp,sp,-16
2040250e:	c422                	sw	s0,8(sp)
20402510:	842e                	mv	s0,a1
20402512:	00e59583          	lh	a1,14(a1)
20402516:	c606                	sw	ra,12(sp)
20402518:	20fd                	jal	20402606 <_lseek_r>
2040251a:	57fd                	li	a5,-1
2040251c:	00c45703          	lhu	a4,12(s0)
20402520:	00f51b63          	bne	a0,a5,20402536 <__sseek+0x2a>
20402524:	77fd                	lui	a5,0xfffff
20402526:	17fd                	addi	a5,a5,-1
20402528:	8ff9                	and	a5,a5,a4
2040252a:	00f41623          	sh	a5,12(s0)
2040252e:	40b2                	lw	ra,12(sp)
20402530:	4422                	lw	s0,8(sp)
20402532:	0141                	addi	sp,sp,16
20402534:	8082                	ret
20402536:	6785                	lui	a5,0x1
20402538:	8fd9                	or	a5,a5,a4
2040253a:	00f41623          	sh	a5,12(s0)
2040253e:	c868                	sw	a0,84(s0)
20402540:	b7fd                	j	2040252e <__sseek+0x22>

20402542 <__sclose>:
__sclose():
20402542:	00e59583          	lh	a1,14(a1)
20402546:	a815                	j	2040257a <_close_r>

20402548 <_write_r>:
_write_r():
20402548:	1141                	addi	sp,sp,-16
2040254a:	c422                	sw	s0,8(sp)
2040254c:	842a                	mv	s0,a0
2040254e:	852e                	mv	a0,a1
20402550:	85b2                	mv	a1,a2
20402552:	8636                	mv	a2,a3
20402554:	5fbfe797          	auipc	a5,0x5fbfe
20402558:	2807aa23          	sw	zero,660(a5) # 800007e8 <errno>
2040255c:	c606                	sw	ra,12(sp)
2040255e:	23f5                	jal	20402b4a <_write>
20402560:	57fd                	li	a5,-1
20402562:	00f51863          	bne	a0,a5,20402572 <_write_r+0x2a>
20402566:	5fbfe797          	auipc	a5,0x5fbfe
2040256a:	2827a783          	lw	a5,642(a5) # 800007e8 <errno>
2040256e:	c391                	beqz	a5,20402572 <_write_r+0x2a>
20402570:	c01c                	sw	a5,0(s0)
20402572:	40b2                	lw	ra,12(sp)
20402574:	4422                	lw	s0,8(sp)
20402576:	0141                	addi	sp,sp,16
20402578:	8082                	ret

2040257a <_close_r>:
_close_r():
2040257a:	1141                	addi	sp,sp,-16
2040257c:	c422                	sw	s0,8(sp)
2040257e:	842a                	mv	s0,a0
20402580:	852e                	mv	a0,a1
20402582:	5fbfe797          	auipc	a5,0x5fbfe
20402586:	2607a323          	sw	zero,614(a5) # 800007e8 <errno>
2040258a:	c606                	sw	ra,12(sp)
2040258c:	2995                	jal	20402a00 <_close>
2040258e:	57fd                	li	a5,-1
20402590:	00f51863          	bne	a0,a5,204025a0 <_close_r+0x26>
20402594:	5fbfe797          	auipc	a5,0x5fbfe
20402598:	2547a783          	lw	a5,596(a5) # 800007e8 <errno>
2040259c:	c391                	beqz	a5,204025a0 <_close_r+0x26>
2040259e:	c01c                	sw	a5,0(s0)
204025a0:	40b2                	lw	ra,12(sp)
204025a2:	4422                	lw	s0,8(sp)
204025a4:	0141                	addi	sp,sp,16
204025a6:	8082                	ret

204025a8 <_fstat_r>:
_fstat_r():
204025a8:	1141                	addi	sp,sp,-16
204025aa:	c422                	sw	s0,8(sp)
204025ac:	842a                	mv	s0,a0
204025ae:	852e                	mv	a0,a1
204025b0:	85b2                	mv	a1,a2
204025b2:	5fbfe797          	auipc	a5,0x5fbfe
204025b6:	2207ab23          	sw	zero,566(a5) # 800007e8 <errno>
204025ba:	c606                	sw	ra,12(sp)
204025bc:	219d                	jal	20402a22 <_fstat>
204025be:	57fd                	li	a5,-1
204025c0:	00f51863          	bne	a0,a5,204025d0 <_fstat_r+0x28>
204025c4:	5fbfe797          	auipc	a5,0x5fbfe
204025c8:	2247a783          	lw	a5,548(a5) # 800007e8 <errno>
204025cc:	c391                	beqz	a5,204025d0 <_fstat_r+0x28>
204025ce:	c01c                	sw	a5,0(s0)
204025d0:	40b2                	lw	ra,12(sp)
204025d2:	4422                	lw	s0,8(sp)
204025d4:	0141                	addi	sp,sp,16
204025d6:	8082                	ret

204025d8 <_isatty_r>:
_isatty_r():
204025d8:	1141                	addi	sp,sp,-16
204025da:	c422                	sw	s0,8(sp)
204025dc:	842a                	mv	s0,a0
204025de:	852e                	mv	a0,a1
204025e0:	5fbfe797          	auipc	a5,0x5fbfe
204025e4:	2007a423          	sw	zero,520(a5) # 800007e8 <errno>
204025e8:	c606                	sw	ra,12(sp)
204025ea:	29b9                	jal	20402a48 <_isatty>
204025ec:	57fd                	li	a5,-1
204025ee:	00f51863          	bne	a0,a5,204025fe <_isatty_r+0x26>
204025f2:	5fbfe797          	auipc	a5,0x5fbfe
204025f6:	1f67a783          	lw	a5,502(a5) # 800007e8 <errno>
204025fa:	c391                	beqz	a5,204025fe <_isatty_r+0x26>
204025fc:	c01c                	sw	a5,0(s0)
204025fe:	40b2                	lw	ra,12(sp)
20402600:	4422                	lw	s0,8(sp)
20402602:	0141                	addi	sp,sp,16
20402604:	8082                	ret

20402606 <_lseek_r>:
_lseek_r():
20402606:	1141                	addi	sp,sp,-16
20402608:	c422                	sw	s0,8(sp)
2040260a:	842a                	mv	s0,a0
2040260c:	852e                	mv	a0,a1
2040260e:	85b2                	mv	a1,a2
20402610:	8636                	mv	a2,a3
20402612:	5fbfe797          	auipc	a5,0x5fbfe
20402616:	1c07ab23          	sw	zero,470(a5) # 800007e8 <errno>
2040261a:	c606                	sw	ra,12(sp)
2040261c:	21b1                	jal	20402a68 <_lseek>
2040261e:	57fd                	li	a5,-1
20402620:	00f51863          	bne	a0,a5,20402630 <_lseek_r+0x2a>
20402624:	5fbfe797          	auipc	a5,0x5fbfe
20402628:	1c47a783          	lw	a5,452(a5) # 800007e8 <errno>
2040262c:	c391                	beqz	a5,20402630 <_lseek_r+0x2a>
2040262e:	c01c                	sw	a5,0(s0)
20402630:	40b2                	lw	ra,12(sp)
20402632:	4422                	lw	s0,8(sp)
20402634:	0141                	addi	sp,sp,16
20402636:	8082                	ret

20402638 <memchr>:
memchr():
20402638:	0ff5f593          	zext.b	a1,a1
2040263c:	962a                	add	a2,a2,a0
2040263e:	00c51463          	bne	a0,a2,20402646 <memchr+0xe>
20402642:	4501                	li	a0,0
20402644:	8082                	ret
20402646:	00054783          	lbu	a5,0(a0)
2040264a:	feb78de3          	beq	a5,a1,20402644 <memchr+0xc>
2040264e:	0505                	addi	a0,a0,1
20402650:	b7fd                	j	2040263e <memchr+0x6>

20402652 <_printf_common>:
_printf_common():
20402652:	7179                	addi	sp,sp,-48
20402654:	cc52                	sw	s4,24(sp)
20402656:	499c                	lw	a5,16(a1)
20402658:	8a3a                	mv	s4,a4
2040265a:	4598                	lw	a4,8(a1)
2040265c:	d422                	sw	s0,40(sp)
2040265e:	d226                	sw	s1,36(sp)
20402660:	ce4e                	sw	s3,28(sp)
20402662:	ca56                	sw	s5,20(sp)
20402664:	d606                	sw	ra,44(sp)
20402666:	d04a                	sw	s2,32(sp)
20402668:	c85a                	sw	s6,16(sp)
2040266a:	c65e                	sw	s7,12(sp)
2040266c:	89aa                	mv	s3,a0
2040266e:	842e                	mv	s0,a1
20402670:	84b2                	mv	s1,a2
20402672:	8ab6                	mv	s5,a3
20402674:	00e7d363          	bge	a5,a4,2040267a <_printf_common+0x28>
20402678:	87ba                	mv	a5,a4
2040267a:	c09c                	sw	a5,0(s1)
2040267c:	04344703          	lbu	a4,67(s0)
20402680:	c319                	beqz	a4,20402686 <_printf_common+0x34>
20402682:	0785                	addi	a5,a5,1
20402684:	c09c                	sw	a5,0(s1)
20402686:	401c                	lw	a5,0(s0)
20402688:	0207f793          	andi	a5,a5,32
2040268c:	c781                	beqz	a5,20402694 <_printf_common+0x42>
2040268e:	409c                	lw	a5,0(s1)
20402690:	0789                	addi	a5,a5,2
20402692:	c09c                	sw	a5,0(s1)
20402694:	00042903          	lw	s2,0(s0)
20402698:	00697913          	andi	s2,s2,6
2040269c:	00091a63          	bnez	s2,204026b0 <_printf_common+0x5e>
204026a0:	01940b13          	addi	s6,s0,25
204026a4:	5bfd                	li	s7,-1
204026a6:	445c                	lw	a5,12(s0)
204026a8:	4098                	lw	a4,0(s1)
204026aa:	8f99                	sub	a5,a5,a4
204026ac:	04f94c63          	blt	s2,a5,20402704 <_printf_common+0xb2>
204026b0:	04344783          	lbu	a5,67(s0)
204026b4:	00f036b3          	snez	a3,a5
204026b8:	401c                	lw	a5,0(s0)
204026ba:	0207f793          	andi	a5,a5,32
204026be:	eba5                	bnez	a5,2040272e <_printf_common+0xdc>
204026c0:	04340613          	addi	a2,s0,67
204026c4:	85d6                	mv	a1,s5
204026c6:	854e                	mv	a0,s3
204026c8:	9a02                	jalr	s4
204026ca:	57fd                	li	a5,-1
204026cc:	04f50363          	beq	a0,a5,20402712 <_printf_common+0xc0>
204026d0:	401c                	lw	a5,0(s0)
204026d2:	4611                	li	a2,4
204026d4:	4098                	lw	a4,0(s1)
204026d6:	8b99                	andi	a5,a5,6
204026d8:	4454                	lw	a3,12(s0)
204026da:	4481                	li	s1,0
204026dc:	00c79763          	bne	a5,a2,204026ea <_printf_common+0x98>
204026e0:	40e684b3          	sub	s1,a3,a4
204026e4:	0004d363          	bgez	s1,204026ea <_printf_common+0x98>
204026e8:	4481                	li	s1,0
204026ea:	441c                	lw	a5,8(s0)
204026ec:	4818                	lw	a4,16(s0)
204026ee:	00f75463          	bge	a4,a5,204026f6 <_printf_common+0xa4>
204026f2:	8f99                	sub	a5,a5,a4
204026f4:	94be                	add	s1,s1,a5
204026f6:	4901                	li	s2,0
204026f8:	0469                	addi	s0,s0,26
204026fa:	5b7d                	li	s6,-1
204026fc:	05249863          	bne	s1,s2,2040274c <_printf_common+0xfa>
20402700:	4501                	li	a0,0
20402702:	a809                	j	20402714 <_printf_common+0xc2>
20402704:	4685                	li	a3,1
20402706:	865a                	mv	a2,s6
20402708:	85d6                	mv	a1,s5
2040270a:	854e                	mv	a0,s3
2040270c:	9a02                	jalr	s4
2040270e:	01751e63          	bne	a0,s7,2040272a <_printf_common+0xd8>
20402712:	557d                	li	a0,-1
20402714:	50b2                	lw	ra,44(sp)
20402716:	5422                	lw	s0,40(sp)
20402718:	5492                	lw	s1,36(sp)
2040271a:	5902                	lw	s2,32(sp)
2040271c:	49f2                	lw	s3,28(sp)
2040271e:	4a62                	lw	s4,24(sp)
20402720:	4ad2                	lw	s5,20(sp)
20402722:	4b42                	lw	s6,16(sp)
20402724:	4bb2                	lw	s7,12(sp)
20402726:	6145                	addi	sp,sp,48
20402728:	8082                	ret
2040272a:	0905                	addi	s2,s2,1
2040272c:	bfad                	j	204026a6 <_printf_common+0x54>
2040272e:	00d40733          	add	a4,s0,a3
20402732:	03000613          	li	a2,48
20402736:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffcf23>
2040273a:	04544703          	lbu	a4,69(s0)
2040273e:	00168793          	addi	a5,a3,1
20402742:	97a2                	add	a5,a5,s0
20402744:	0689                	addi	a3,a3,2
20402746:	04e781a3          	sb	a4,67(a5)
2040274a:	bf9d                	j	204026c0 <_printf_common+0x6e>
2040274c:	4685                	li	a3,1
2040274e:	8622                	mv	a2,s0
20402750:	85d6                	mv	a1,s5
20402752:	854e                	mv	a0,s3
20402754:	9a02                	jalr	s4
20402756:	fb650ee3          	beq	a0,s6,20402712 <_printf_common+0xc0>
2040275a:	0905                	addi	s2,s2,1
2040275c:	b745                	j	204026fc <_printf_common+0xaa>

2040275e <_printf_i>:
_printf_i():
2040275e:	7179                	addi	sp,sp,-48
20402760:	d422                	sw	s0,40(sp)
20402762:	d226                	sw	s1,36(sp)
20402764:	d04a                	sw	s2,32(sp)
20402766:	ce4e                	sw	s3,28(sp)
20402768:	d606                	sw	ra,44(sp)
2040276a:	cc52                	sw	s4,24(sp)
2040276c:	ca56                	sw	s5,20(sp)
2040276e:	c85a                	sw	s6,16(sp)
20402770:	0185c803          	lbu	a6,24(a1)
20402774:	07800793          	li	a5,120
20402778:	84aa                	mv	s1,a0
2040277a:	842e                	mv	s0,a1
2040277c:	8932                	mv	s2,a2
2040277e:	89b6                	mv	s3,a3
20402780:	0107ee63          	bltu	a5,a6,2040279c <_printf_i+0x3e>
20402784:	06200793          	li	a5,98
20402788:	04358693          	addi	a3,a1,67
2040278c:	0107ed63          	bltu	a5,a6,204027a6 <_printf_i+0x48>
20402790:	1c080563          	beqz	a6,2040295a <_printf_i+0x1fc>
20402794:	05800793          	li	a5,88
20402798:	12f80a63          	beq	a6,a5,204028cc <_printf_i+0x16e>
2040279c:	04240a93          	addi	s5,s0,66
204027a0:	05040123          	sb	a6,66(s0)
204027a4:	a815                	j	204027d8 <_printf_i+0x7a>
204027a6:	f9d80793          	addi	a5,a6,-99
204027aa:	0ff7f793          	zext.b	a5,a5
204027ae:	4655                	li	a2,21
204027b0:	fef666e3          	bltu	a2,a5,2040279c <_printf_i+0x3e>
204027b4:	ffffe617          	auipc	a2,0xffffe
204027b8:	c9860613          	addi	a2,a2,-872 # 2040044c <__sf_fake_stdout+0x5c>
204027bc:	078a                	slli	a5,a5,0x2
204027be:	97b2                	add	a5,a5,a2
204027c0:	439c                	lw	a5,0(a5)
204027c2:	97b2                	add	a5,a5,a2
204027c4:	8782                	jr	a5
204027c6:	431c                	lw	a5,0(a4)
204027c8:	04258a93          	addi	s5,a1,66
204027cc:	00478693          	addi	a3,a5,4
204027d0:	439c                	lw	a5,0(a5)
204027d2:	c314                	sw	a3,0(a4)
204027d4:	04f58123          	sb	a5,66(a1)
204027d8:	4785                	li	a5,1
204027da:	a25d                	j	20402980 <_printf_i+0x222>
204027dc:	419c                	lw	a5,0(a1)
204027de:	4308                	lw	a0,0(a4)
204027e0:	0807f613          	andi	a2,a5,128
204027e4:	00450593          	addi	a1,a0,4
204027e8:	c20d                	beqz	a2,2040280a <_printf_i+0xac>
204027ea:	411c                	lw	a5,0(a0)
204027ec:	c30c                	sw	a1,0(a4)
204027ee:	0007d863          	bgez	a5,204027fe <_printf_i+0xa0>
204027f2:	02d00713          	li	a4,45
204027f6:	40f007b3          	neg	a5,a5
204027fa:	04e401a3          	sb	a4,67(s0)
204027fe:	ffffe617          	auipc	a2,0xffffe
20402802:	c2660613          	addi	a2,a2,-986 # 20400424 <__sf_fake_stdout+0x34>
20402806:	4829                	li	a6,10
20402808:	a0a1                	j	20402850 <_printf_i+0xf2>
2040280a:	0407f613          	andi	a2,a5,64
2040280e:	411c                	lw	a5,0(a0)
20402810:	c30c                	sw	a1,0(a4)
20402812:	de71                	beqz	a2,204027ee <_printf_i+0x90>
20402814:	07c2                	slli	a5,a5,0x10
20402816:	87c1                	srai	a5,a5,0x10
20402818:	bfd9                	j	204027ee <_printf_i+0x90>
2040281a:	4190                	lw	a2,0(a1)
2040281c:	431c                	lw	a5,0(a4)
2040281e:	08067513          	andi	a0,a2,128
20402822:	00478593          	addi	a1,a5,4
20402826:	c501                	beqz	a0,2040282e <_printf_i+0xd0>
20402828:	c30c                	sw	a1,0(a4)
2040282a:	439c                	lw	a5,0(a5)
2040282c:	a039                	j	2040283a <_printf_i+0xdc>
2040282e:	04067613          	andi	a2,a2,64
20402832:	c30c                	sw	a1,0(a4)
20402834:	da7d                	beqz	a2,2040282a <_printf_i+0xcc>
20402836:	0007d783          	lhu	a5,0(a5)
2040283a:	06f00713          	li	a4,111
2040283e:	ffffe617          	auipc	a2,0xffffe
20402842:	be660613          	addi	a2,a2,-1050 # 20400424 <__sf_fake_stdout+0x34>
20402846:	0ee80463          	beq	a6,a4,2040292e <_printf_i+0x1d0>
2040284a:	4829                	li	a6,10
2040284c:	040401a3          	sb	zero,67(s0)
20402850:	4058                	lw	a4,4(s0)
20402852:	c418                	sw	a4,8(s0)
20402854:	00074563          	bltz	a4,2040285e <_printf_i+0x100>
20402858:	400c                	lw	a1,0(s0)
2040285a:	99ed                	andi	a1,a1,-5
2040285c:	c00c                	sw	a1,0(s0)
2040285e:	e399                	bnez	a5,20402864 <_printf_i+0x106>
20402860:	8ab6                	mv	s5,a3
20402862:	cf19                	beqz	a4,20402880 <_printf_i+0x122>
20402864:	8ab6                	mv	s5,a3
20402866:	0307f733          	remu	a4,a5,a6
2040286a:	1afd                	addi	s5,s5,-1
2040286c:	9732                	add	a4,a4,a2
2040286e:	00074703          	lbu	a4,0(a4)
20402872:	00ea8023          	sb	a4,0(s5)
20402876:	873e                	mv	a4,a5
20402878:	0307d7b3          	divu	a5,a5,a6
2040287c:	ff0775e3          	bgeu	a4,a6,20402866 <_printf_i+0x108>
20402880:	47a1                	li	a5,8
20402882:	00f81e63          	bne	a6,a5,2040289e <_printf_i+0x140>
20402886:	401c                	lw	a5,0(s0)
20402888:	8b85                	andi	a5,a5,1
2040288a:	cb91                	beqz	a5,2040289e <_printf_i+0x140>
2040288c:	4058                	lw	a4,4(s0)
2040288e:	481c                	lw	a5,16(s0)
20402890:	00e7c763          	blt	a5,a4,2040289e <_printf_i+0x140>
20402894:	03000793          	li	a5,48
20402898:	fefa8fa3          	sb	a5,-1(s5)
2040289c:	1afd                	addi	s5,s5,-1
2040289e:	415686b3          	sub	a3,a3,s5
204028a2:	c814                	sw	a3,16(s0)
204028a4:	874e                	mv	a4,s3
204028a6:	86ca                	mv	a3,s2
204028a8:	0070                	addi	a2,sp,12
204028aa:	85a2                	mv	a1,s0
204028ac:	8526                	mv	a0,s1
204028ae:	3355                	jal	20402652 <_printf_common>
204028b0:	5a7d                	li	s4,-1
204028b2:	0d451b63          	bne	a0,s4,20402988 <_printf_i+0x22a>
204028b6:	557d                	li	a0,-1
204028b8:	50b2                	lw	ra,44(sp)
204028ba:	5422                	lw	s0,40(sp)
204028bc:	5492                	lw	s1,36(sp)
204028be:	5902                	lw	s2,32(sp)
204028c0:	49f2                	lw	s3,28(sp)
204028c2:	4a62                	lw	s4,24(sp)
204028c4:	4ad2                	lw	s5,20(sp)
204028c6:	4b42                	lw	s6,16(sp)
204028c8:	6145                	addi	sp,sp,48
204028ca:	8082                	ret
204028cc:	050582a3          	sb	a6,69(a1)
204028d0:	ffffe617          	auipc	a2,0xffffe
204028d4:	b5460613          	addi	a2,a2,-1196 # 20400424 <__sf_fake_stdout+0x34>
204028d8:	400c                	lw	a1,0(s0)
204028da:	4308                	lw	a0,0(a4)
204028dc:	0805f813          	andi	a6,a1,128
204028e0:	411c                	lw	a5,0(a0)
204028e2:	0511                	addi	a0,a0,4
204028e4:	02080d63          	beqz	a6,2040291e <_printf_i+0x1c0>
204028e8:	c308                	sw	a0,0(a4)
204028ea:	0015f713          	andi	a4,a1,1
204028ee:	c701                	beqz	a4,204028f6 <_printf_i+0x198>
204028f0:	0205e593          	ori	a1,a1,32
204028f4:	c00c                	sw	a1,0(s0)
204028f6:	4841                	li	a6,16
204028f8:	fbb1                	bnez	a5,2040284c <_printf_i+0xee>
204028fa:	4018                	lw	a4,0(s0)
204028fc:	fdf77713          	andi	a4,a4,-33
20402900:	c018                	sw	a4,0(s0)
20402902:	b7a9                	j	2040284c <_printf_i+0xee>
20402904:	419c                	lw	a5,0(a1)
20402906:	0207e793          	ori	a5,a5,32
2040290a:	c19c                	sw	a5,0(a1)
2040290c:	07800793          	li	a5,120
20402910:	04f402a3          	sb	a5,69(s0)
20402914:	ffffe617          	auipc	a2,0xffffe
20402918:	b2460613          	addi	a2,a2,-1244 # 20400438 <__sf_fake_stdout+0x48>
2040291c:	bf75                	j	204028d8 <_printf_i+0x17a>
2040291e:	0405f813          	andi	a6,a1,64
20402922:	c308                	sw	a0,0(a4)
20402924:	fc0803e3          	beqz	a6,204028ea <_printf_i+0x18c>
20402928:	07c2                	slli	a5,a5,0x10
2040292a:	83c1                	srli	a5,a5,0x10
2040292c:	bf7d                	j	204028ea <_printf_i+0x18c>
2040292e:	4821                	li	a6,8
20402930:	bf31                	j	2040284c <_printf_i+0xee>
20402932:	4190                	lw	a2,0(a1)
20402934:	431c                	lw	a5,0(a4)
20402936:	49cc                	lw	a1,20(a1)
20402938:	08067813          	andi	a6,a2,128
2040293c:	00478513          	addi	a0,a5,4
20402940:	00080663          	beqz	a6,2040294c <_printf_i+0x1ee>
20402944:	c308                	sw	a0,0(a4)
20402946:	439c                	lw	a5,0(a5)
20402948:	c38c                	sw	a1,0(a5)
2040294a:	a801                	j	2040295a <_printf_i+0x1fc>
2040294c:	c308                	sw	a0,0(a4)
2040294e:	04067613          	andi	a2,a2,64
20402952:	439c                	lw	a5,0(a5)
20402954:	da75                	beqz	a2,20402948 <_printf_i+0x1ea>
20402956:	00b79023          	sh	a1,0(a5)
2040295a:	00042823          	sw	zero,16(s0)
2040295e:	8ab6                	mv	s5,a3
20402960:	b791                	j	204028a4 <_printf_i+0x146>
20402962:	431c                	lw	a5,0(a4)
20402964:	41d0                	lw	a2,4(a1)
20402966:	4581                	li	a1,0
20402968:	00478693          	addi	a3,a5,4
2040296c:	c314                	sw	a3,0(a4)
2040296e:	0007aa83          	lw	s5,0(a5)
20402972:	8556                	mv	a0,s5
20402974:	31d1                	jal	20402638 <memchr>
20402976:	c501                	beqz	a0,2040297e <_printf_i+0x220>
20402978:	41550533          	sub	a0,a0,s5
2040297c:	c048                	sw	a0,4(s0)
2040297e:	405c                	lw	a5,4(s0)
20402980:	c81c                	sw	a5,16(s0)
20402982:	040401a3          	sb	zero,67(s0)
20402986:	bf39                	j	204028a4 <_printf_i+0x146>
20402988:	4814                	lw	a3,16(s0)
2040298a:	8656                	mv	a2,s5
2040298c:	85ca                	mv	a1,s2
2040298e:	8526                	mv	a0,s1
20402990:	9982                	jalr	s3
20402992:	f34502e3          	beq	a0,s4,204028b6 <_printf_i+0x158>
20402996:	401c                	lw	a5,0(s0)
20402998:	8b89                	andi	a5,a5,2
2040299a:	e78d                	bnez	a5,204029c4 <_printf_i+0x266>
2040299c:	47b2                	lw	a5,12(sp)
2040299e:	4448                	lw	a0,12(s0)
204029a0:	f0f55ce3          	bge	a0,a5,204028b8 <_printf_i+0x15a>
204029a4:	853e                	mv	a0,a5
204029a6:	bf09                	j	204028b8 <_printf_i+0x15a>
204029a8:	4685                	li	a3,1
204029aa:	8656                	mv	a2,s5
204029ac:	85ca                	mv	a1,s2
204029ae:	8526                	mv	a0,s1
204029b0:	9982                	jalr	s3
204029b2:	f16502e3          	beq	a0,s6,204028b6 <_printf_i+0x158>
204029b6:	0a05                	addi	s4,s4,1
204029b8:	445c                	lw	a5,12(s0)
204029ba:	4732                	lw	a4,12(sp)
204029bc:	8f99                	sub	a5,a5,a4
204029be:	fefa45e3          	blt	s4,a5,204029a8 <_printf_i+0x24a>
204029c2:	bfe9                	j	2040299c <_printf_i+0x23e>
204029c4:	4a01                	li	s4,0
204029c6:	01940a93          	addi	s5,s0,25
204029ca:	5b7d                	li	s6,-1
204029cc:	b7f5                	j	204029b8 <_printf_i+0x25a>

204029ce <_read_r>:
_read_r():
204029ce:	1141                	addi	sp,sp,-16
204029d0:	c422                	sw	s0,8(sp)
204029d2:	842a                	mv	s0,a0
204029d4:	852e                	mv	a0,a1
204029d6:	85b2                	mv	a1,a2
204029d8:	8636                	mv	a2,a3
204029da:	5fbfe797          	auipc	a5,0x5fbfe
204029de:	e007a723          	sw	zero,-498(a5) # 800007e8 <errno>
204029e2:	c606                	sw	ra,12(sp)
204029e4:	207d                	jal	20402a92 <_read>
204029e6:	57fd                	li	a5,-1
204029e8:	00f51863          	bne	a0,a5,204029f8 <_read_r+0x2a>
204029ec:	5fbfe797          	auipc	a5,0x5fbfe
204029f0:	dfc7a783          	lw	a5,-516(a5) # 800007e8 <errno>
204029f4:	c391                	beqz	a5,204029f8 <_read_r+0x2a>
204029f6:	c01c                	sw	a5,0(s0)
204029f8:	40b2                	lw	ra,12(sp)
204029fa:	4422                	lw	s0,8(sp)
204029fc:	0141                	addi	sp,sp,16
204029fe:	8082                	ret

20402a00 <_close>:
_close():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20402a00:	1101                	addi	sp,sp,-32
20402a02:	ce06                	sw	ra,28(sp)
20402a04:	cc22                	sw	s0,24(sp)
20402a06:	1000                	addi	s0,sp,32
20402a08:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20402a0c:	2a5d                	jal	20402bc2 <__errno>
20402a0e:	872a                	mv	a4,a0
20402a10:	05800793          	li	a5,88
20402a14:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:5
    return -1;
20402a16:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:6
}
20402a18:	853e                	mv	a0,a5
20402a1a:	40f2                	lw	ra,28(sp)
20402a1c:	4462                	lw	s0,24(sp)
20402a1e:	6105                	addi	sp,sp,32
20402a20:	8082                	ret

20402a22 <_fstat>:
_fstat():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20402a22:	1101                	addi	sp,sp,-32
20402a24:	ce06                	sw	ra,28(sp)
20402a26:	cc22                	sw	s0,24(sp)
20402a28:	1000                	addi	s0,sp,32
20402a2a:	fea42623          	sw	a0,-20(s0)
20402a2e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20402a32:	2a41                	jal	20402bc2 <__errno>
20402a34:	872a                	mv	a4,a0
20402a36:	fa800793          	li	a5,-88
20402a3a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20402a3c:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:7
}
20402a3e:	853e                	mv	a0,a5
20402a40:	40f2                	lw	ra,28(sp)
20402a42:	4462                	lw	s0,24(sp)
20402a44:	6105                	addi	sp,sp,32
20402a46:	8082                	ret

20402a48 <_isatty>:
_isatty():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20402a48:	1101                	addi	sp,sp,-32
20402a4a:	ce22                	sw	s0,28(sp)
20402a4c:	1000                	addi	s0,sp,32
20402a4e:	fea42623          	sw	a0,-20(s0)
20402a52:	fec42783          	lw	a5,-20(s0)
20402a56:	17fd                	addi	a5,a5,-1
20402a58:	0017b793          	seqz	a5,a5
20402a5c:	0ff7f793          	zext.b	a5,a5
20402a60:	853e                	mv	a0,a5
20402a62:	4472                	lw	s0,28(sp)
20402a64:	6105                	addi	sp,sp,32
20402a66:	8082                	ret

20402a68 <_lseek>:
_lseek():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20402a68:	1101                	addi	sp,sp,-32
20402a6a:	ce06                	sw	ra,28(sp)
20402a6c:	cc22                	sw	s0,24(sp)
20402a6e:	1000                	addi	s0,sp,32
20402a70:	fea42623          	sw	a0,-20(s0)
20402a74:	feb42423          	sw	a1,-24(s0)
20402a78:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20402a7c:	2299                	jal	20402bc2 <__errno>
20402a7e:	872a                	mv	a4,a0
20402a80:	05800793          	li	a5,88
20402a84:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20402a86:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:7
}
20402a88:	853e                	mv	a0,a5
20402a8a:	40f2                	lw	ra,28(sp)
20402a8c:	4462                	lw	s0,24(sp)
20402a8e:	6105                	addi	sp,sp,32
20402a90:	8082                	ret

20402a92 <_read>:
_read():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20402a92:	1101                	addi	sp,sp,-32
20402a94:	ce06                	sw	ra,28(sp)
20402a96:	cc22                	sw	s0,24(sp)
20402a98:	1000                	addi	s0,sp,32
20402a9a:	fea42623          	sw	a0,-20(s0)
20402a9e:	feb42423          	sw	a1,-24(s0)
20402aa2:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20402aa6:	2a31                	jal	20402bc2 <__errno>
20402aa8:	872a                	mv	a4,a0
20402aaa:	05800793          	li	a5,88
20402aae:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:6
    return -1;
20402ab0:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:7
}
20402ab2:	853e                	mv	a0,a5
20402ab4:	40f2                	lw	ra,28(sp)
20402ab6:	4462                	lw	s0,24(sp)
20402ab8:	6105                	addi	sp,sp,32
20402aba:	8082                	ret

20402abc <_sbrk>:
_sbrk():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20402abc:	7179                	addi	sp,sp,-48
20402abe:	d606                	sw	ra,44(sp)
20402ac0:	d422                	sw	s0,40(sp)
20402ac2:	1800                	addi	s0,sp,48
20402ac4:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20402ac8:	800007b7          	lui	a5,0x80000
20402acc:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
20402ad0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20402ad4:	800027b7          	lui	a5,0x80002
20402ad8:	92078713          	addi	a4,a5,-1760 # 80001920 <metal_segment_heap_target_end+0xfffff800>
20402adc:	800027b7          	lui	a5,0x80002
20402ae0:	12078793          	addi	a5,a5,288 # 80002120 <metal_segment_heap_target_end+0x0>
20402ae4:	00f71463          	bne	a4,a5,20402aec <_sbrk+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402ae8:	57fd                	li	a5,-1
20402aea:	a899                	j	20402b40 <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20402aec:	800007b7          	lui	a5,0x80000
20402af0:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
20402af4:	fdc42783          	lw	a5,-36(s0)
20402af8:	973e                	add	a4,a4,a5
20402afa:	800027b7          	lui	a5,0x80002
20402afe:	12078793          	addi	a5,a5,288 # 80002120 <metal_segment_heap_target_end+0x0>
20402b02:	02f77663          	bgeu	a4,a5,20402b2e <_sbrk+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20402b06:	800007b7          	lui	a5,0x80000
20402b0a:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
20402b0e:	fdc42783          	lw	a5,-36(s0)
20402b12:	973e                	add	a4,a4,a5
20402b14:	800007b7          	lui	a5,0x80000
20402b18:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20402b1c:	fdc42583          	lw	a1,-36(s0)
20402b20:	fec42503          	lw	a0,-20(s0)
20402b24:	d6afd0ef          	jal	ra,2040008e <metal_mem_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20402b28:	fec42783          	lw	a5,-20(s0)
20402b2c:	a811                	j	20402b40 <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20402b2e:	800007b7          	lui	a5,0x80000
20402b32:	80002737          	lui	a4,0x80002
20402b36:	12070713          	addi	a4,a4,288 # 80002120 <metal_segment_heap_target_end+0x0>
20402b3a:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20402b3e:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:43
}
20402b40:	853e                	mv	a0,a5
20402b42:	50b2                	lw	ra,44(sp)
20402b44:	5422                	lw	s0,40(sp)
20402b46:	6145                	addi	sp,sp,48
20402b48:	8082                	ret

20402b4a <_write>:
_write():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20402b4a:	7179                	addi	sp,sp,-48
20402b4c:	d606                	sw	ra,44(sp)
20402b4e:	d422                	sw	s0,40(sp)
20402b50:	1800                	addi	s0,sp,48
20402b52:	fca42e23          	sw	a0,-36(s0)
20402b56:	fcb42c23          	sw	a1,-40(s0)
20402b5a:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20402b5e:	fdc42703          	lw	a4,-36(s0)
20402b62:	4785                	li	a5,1
20402b64:	00f70963          	beq	a4,a5,20402b76 <_write+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20402b68:	28a9                	jal	20402bc2 <__errno>
20402b6a:	872a                	mv	a4,a0
20402b6c:	05800793          	li	a5,88
20402b70:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:10
        return -1;
20402b72:	57fd                	li	a5,-1
20402b74:	a82d                	j	20402bae <_write+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20402b76:	fd842783          	lw	a5,-40(s0)
20402b7a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20402b7e:	fe042623          	sw	zero,-20(s0)
20402b82:	a839                	j	20402ba0 <_write+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20402b84:	fe842703          	lw	a4,-24(s0)
20402b88:	fec42783          	lw	a5,-20(s0)
20402b8c:	97ba                	add	a5,a5,a4
20402b8e:	0007c783          	lbu	a5,0(a5)
20402b92:	853e                	mv	a0,a5
20402b94:	2e89                	jal	20402ee6 <metal_tty_putc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20402b96:	fec42783          	lw	a5,-20(s0)
20402b9a:	0785                	addi	a5,a5,1
20402b9c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20402ba0:	fec42703          	lw	a4,-20(s0)
20402ba4:	fd442783          	lw	a5,-44(s0)
20402ba8:	fcf76ee3          	bltu	a4,a5,20402b84 <_write+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:16
    return 0;
20402bac:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:17
}
20402bae:	853e                	mv	a0,a5
20402bb0:	50b2                	lw	ra,44(sp)
20402bb2:	5422                	lw	s0,40(sp)
20402bb4:	6145                	addi	sp,sp,48
20402bb6:	8082                	ret

20402bb8 <atexit>:
atexit():
20402bb8:	85aa                	mv	a1,a0
20402bba:	4681                	li	a3,0
20402bbc:	4601                	li	a2,0
20402bbe:	4501                	li	a0,0
20402bc0:	a0e9                	j	20402c8a <__register_exitproc>

20402bc2 <__errno>:
__errno():
20402bc2:	5fbfe517          	auipc	a0,0x5fbfe
20402bc6:	bde52503          	lw	a0,-1058(a0) # 800007a0 <_impure_ptr>
20402bca:	8082                	ret

20402bcc <exit>:
exit():
20402bcc:	1141                	addi	sp,sp,-16
20402bce:	c422                	sw	s0,8(sp)
20402bd0:	c606                	sw	ra,12(sp)
20402bd2:	00000797          	auipc	a5,0x0
20402bd6:	13478793          	addi	a5,a5,308 # 20402d06 <__call_exitprocs>
20402bda:	842a                	mv	s0,a0
20402bdc:	c399                	beqz	a5,20402be2 <exit+0x16>
20402bde:	4581                	li	a1,0
20402be0:	221d                	jal	20402d06 <__call_exitprocs>
20402be2:	ffffe517          	auipc	a0,0xffffe
20402be6:	40e52503          	lw	a0,1038(a0) # 20400ff0 <_global_impure_ptr>
20402bea:	551c                	lw	a5,40(a0)
20402bec:	c391                	beqz	a5,20402bf0 <exit+0x24>
20402bee:	9782                	jalr	a5
20402bf0:	8522                	mv	a0,s0
20402bf2:	235040ef          	jal	ra,20407626 <_exit>

20402bf6 <__libc_fini_array>:
__libc_fini_array():
20402bf6:	1141                	addi	sp,sp,-16
20402bf8:	c422                	sw	s0,8(sp)
20402bfa:	c226                	sw	s1,4(sp)
20402bfc:	ffffd417          	auipc	s0,0xffffd
20402c00:	6f440413          	addi	s0,s0,1780 # 204002f0 <__fini_array_end>
20402c04:	ffffd497          	auipc	s1,0xffffd
20402c08:	6ec48493          	addi	s1,s1,1772 # 204002f0 <__fini_array_end>
20402c0c:	8c05                	sub	s0,s0,s1
20402c0e:	c606                	sw	ra,12(sp)
20402c10:	8409                	srai	s0,s0,0x2
20402c12:	e411                	bnez	s0,20402c1e <__libc_fini_array+0x28>
20402c14:	40b2                	lw	ra,12(sp)
20402c16:	4422                	lw	s0,8(sp)
20402c18:	4492                	lw	s1,4(sp)
20402c1a:	0141                	addi	sp,sp,16
20402c1c:	8082                	ret
20402c1e:	147d                	addi	s0,s0,-1
20402c20:	00241793          	slli	a5,s0,0x2
20402c24:	97a6                	add	a5,a5,s1
20402c26:	439c                	lw	a5,0(a5)
20402c28:	9782                	jalr	a5
20402c2a:	b7e5                	j	20402c12 <__libc_fini_array+0x1c>

20402c2c <__libc_init_array>:
__libc_init_array():
20402c2c:	1141                	addi	sp,sp,-16
20402c2e:	c422                	sw	s0,8(sp)
20402c30:	c226                	sw	s1,4(sp)
20402c32:	ffffd417          	auipc	s0,0xffffd
20402c36:	6ae40413          	addi	s0,s0,1710 # 204002e0 <_metal_tty_init_ptr>
20402c3a:	ffffd497          	auipc	s1,0xffffd
20402c3e:	6a648493          	addi	s1,s1,1702 # 204002e0 <_metal_tty_init_ptr>
20402c42:	8c81                	sub	s1,s1,s0
20402c44:	c04a                	sw	s2,0(sp)
20402c46:	c606                	sw	ra,12(sp)
20402c48:	8489                	srai	s1,s1,0x2
20402c4a:	4901                	li	s2,0
20402c4c:	02991563          	bne	s2,s1,20402c76 <__libc_init_array+0x4a>
20402c50:	ffffd417          	auipc	s0,0xffffd
20402c54:	69040413          	addi	s0,s0,1680 # 204002e0 <_metal_tty_init_ptr>
20402c58:	ffffd497          	auipc	s1,0xffffd
20402c5c:	68848493          	addi	s1,s1,1672 # 204002e0 <_metal_tty_init_ptr>
20402c60:	8c81                	sub	s1,s1,s0
20402c62:	8489                	srai	s1,s1,0x2
20402c64:	4901                	li	s2,0
20402c66:	00991d63          	bne	s2,s1,20402c80 <__libc_init_array+0x54>
20402c6a:	40b2                	lw	ra,12(sp)
20402c6c:	4422                	lw	s0,8(sp)
20402c6e:	4492                	lw	s1,4(sp)
20402c70:	4902                	lw	s2,0(sp)
20402c72:	0141                	addi	sp,sp,16
20402c74:	8082                	ret
20402c76:	401c                	lw	a5,0(s0)
20402c78:	0905                	addi	s2,s2,1
20402c7a:	0411                	addi	s0,s0,4
20402c7c:	9782                	jalr	a5
20402c7e:	b7f9                	j	20402c4c <__libc_init_array+0x20>
20402c80:	401c                	lw	a5,0(s0)
20402c82:	0905                	addi	s2,s2,1
20402c84:	0411                	addi	s0,s0,4
20402c86:	9782                	jalr	a5
20402c88:	bff9                	j	20402c66 <__libc_init_array+0x3a>

20402c8a <__register_exitproc>:
__register_exitproc():
20402c8a:	88aa                	mv	a7,a0
20402c8c:	5fbfe517          	auipc	a0,0x5fbfe
20402c90:	b6050513          	addi	a0,a0,-1184 # 800007ec <_global_atexit>
20402c94:	411c                	lw	a5,0(a0)
20402c96:	ef91                	bnez	a5,20402cb2 <__register_exitproc+0x28>
20402c98:	5fbfe717          	auipc	a4,0x5fbfe
20402c9c:	b6070713          	addi	a4,a4,-1184 # 800007f8 <_global_atexit0>
20402ca0:	c118                	sw	a4,0(a0)
20402ca2:	00000513          	li	a0,0
20402ca6:	87ba                	mv	a5,a4
20402ca8:	c509                	beqz	a0,20402cb2 <__register_exitproc+0x28>
20402caa:	411c                	lw	a5,0(a0)
20402cac:	08f72423          	sw	a5,136(a4)
20402cb0:	87ba                	mv	a5,a4
20402cb2:	43d8                	lw	a4,4(a5)
20402cb4:	487d                	li	a6,31
20402cb6:	557d                	li	a0,-1
20402cb8:	04e84663          	blt	a6,a4,20402d04 <__register_exitproc+0x7a>
20402cbc:	02088d63          	beqz	a7,20402cf6 <__register_exitproc+0x6c>
20402cc0:	0887a803          	lw	a6,136(a5)
20402cc4:	04080063          	beqz	a6,20402d04 <__register_exitproc+0x7a>
20402cc8:	00271513          	slli	a0,a4,0x2
20402ccc:	9542                	add	a0,a0,a6
20402cce:	c110                	sw	a2,0(a0)
20402cd0:	10082303          	lw	t1,256(a6)
20402cd4:	4605                	li	a2,1
20402cd6:	00e61633          	sll	a2,a2,a4
20402cda:	00c36333          	or	t1,t1,a2
20402cde:	10682023          	sw	t1,256(a6)
20402ce2:	08d52023          	sw	a3,128(a0)
20402ce6:	4689                	li	a3,2
20402ce8:	00d89763          	bne	a7,a3,20402cf6 <__register_exitproc+0x6c>
20402cec:	10482683          	lw	a3,260(a6)
20402cf0:	8e55                	or	a2,a2,a3
20402cf2:	10c82223          	sw	a2,260(a6)
20402cf6:	00170693          	addi	a3,a4,1
20402cfa:	070a                	slli	a4,a4,0x2
20402cfc:	c3d4                	sw	a3,4(a5)
20402cfe:	97ba                	add	a5,a5,a4
20402d00:	c78c                	sw	a1,8(a5)
20402d02:	4501                	li	a0,0
20402d04:	8082                	ret

20402d06 <__call_exitprocs>:
__call_exitprocs():
20402d06:	7179                	addi	sp,sp,-48
20402d08:	ca56                	sw	s5,20(sp)
20402d0a:	c85a                	sw	s6,16(sp)
20402d0c:	c65e                	sw	s7,12(sp)
20402d0e:	c462                	sw	s8,8(sp)
20402d10:	d606                	sw	ra,44(sp)
20402d12:	d422                	sw	s0,40(sp)
20402d14:	d226                	sw	s1,36(sp)
20402d16:	d04a                	sw	s2,32(sp)
20402d18:	ce4e                	sw	s3,28(sp)
20402d1a:	cc52                	sw	s4,24(sp)
20402d1c:	c266                	sw	s9,4(sp)
20402d1e:	8b2a                	mv	s6,a0
20402d20:	8aae                	mv	s5,a1
20402d22:	5fbfeb97          	auipc	s7,0x5fbfe
20402d26:	acab8b93          	addi	s7,s7,-1334 # 800007ec <_global_atexit>
20402d2a:	4c05                	li	s8,1
20402d2c:	000ba483          	lw	s1,0(s7)
20402d30:	cc81                	beqz	s1,20402d48 <__call_exitprocs+0x42>
20402d32:	40c0                	lw	s0,4(s1)
20402d34:	0884a983          	lw	s3,136(s1)
20402d38:	fff40913          	addi	s2,s0,-1
20402d3c:	040a                	slli	s0,s0,0x2
20402d3e:	00898a33          	add	s4,s3,s0
20402d42:	9426                	add	s0,s0,s1
20402d44:	00095f63          	bgez	s2,20402d62 <__call_exitprocs+0x5c>
20402d48:	50b2                	lw	ra,44(sp)
20402d4a:	5422                	lw	s0,40(sp)
20402d4c:	5492                	lw	s1,36(sp)
20402d4e:	5902                	lw	s2,32(sp)
20402d50:	49f2                	lw	s3,28(sp)
20402d52:	4a62                	lw	s4,24(sp)
20402d54:	4ad2                	lw	s5,20(sp)
20402d56:	4b42                	lw	s6,16(sp)
20402d58:	4bb2                	lw	s7,12(sp)
20402d5a:	4c22                	lw	s8,8(sp)
20402d5c:	4c92                	lw	s9,4(sp)
20402d5e:	6145                	addi	sp,sp,48
20402d60:	8082                	ret
20402d62:	000a8c63          	beqz	s5,20402d7a <__call_exitprocs+0x74>
20402d66:	00099663          	bnez	s3,20402d72 <__call_exitprocs+0x6c>
20402d6a:	197d                	addi	s2,s2,-1
20402d6c:	1a71                	addi	s4,s4,-4
20402d6e:	1471                	addi	s0,s0,-4
20402d70:	bfd1                	j	20402d44 <__call_exitprocs+0x3e>
20402d72:	07ca2783          	lw	a5,124(s4)
20402d76:	ff579ae3          	bne	a5,s5,20402d6a <__call_exitprocs+0x64>
20402d7a:	40d8                	lw	a4,4(s1)
20402d7c:	405c                	lw	a5,4(s0)
20402d7e:	177d                	addi	a4,a4,-1
20402d80:	03271863          	bne	a4,s2,20402db0 <__call_exitprocs+0xaa>
20402d84:	0124a223          	sw	s2,4(s1)
20402d88:	d3ed                	beqz	a5,20402d6a <__call_exitprocs+0x64>
20402d8a:	0044ac83          	lw	s9,4(s1)
20402d8e:	00098863          	beqz	s3,20402d9e <__call_exitprocs+0x98>
20402d92:	1009a683          	lw	a3,256(s3)
20402d96:	012c1733          	sll	a4,s8,s2
20402d9a:	8ef9                	and	a3,a3,a4
20402d9c:	ee89                	bnez	a3,20402db6 <__call_exitprocs+0xb0>
20402d9e:	9782                	jalr	a5
20402da0:	40d8                	lw	a4,4(s1)
20402da2:	000ba783          	lw	a5,0(s7)
20402da6:	f99713e3          	bne	a4,s9,20402d2c <__call_exitprocs+0x26>
20402daa:	fcf480e3          	beq	s1,a5,20402d6a <__call_exitprocs+0x64>
20402dae:	bfbd                	j	20402d2c <__call_exitprocs+0x26>
20402db0:	00042223          	sw	zero,4(s0)
20402db4:	bfd1                	j	20402d88 <__call_exitprocs+0x82>
20402db6:	1049a683          	lw	a3,260(s3)
20402dba:	ffca2583          	lw	a1,-4(s4)
20402dbe:	8f75                	and	a4,a4,a3
20402dc0:	e701                	bnez	a4,20402dc8 <__call_exitprocs+0xc2>
20402dc2:	855a                	mv	a0,s6
20402dc4:	9782                	jalr	a5
20402dc6:	bfe9                	j	20402da0 <__call_exitprocs+0x9a>
20402dc8:	852e                	mv	a0,a1
20402dca:	9782                	jalr	a5
20402dcc:	bfd1                	j	20402da0 <__call_exitprocs+0x9a>

20402dce <metal_init>:
metal_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402dce:	1101                	addi	sp,sp,-32
20402dd0:	ce06                	sw	ra,28(sp)
20402dd2:	cc22                	sw	s0,24(sp)
20402dd4:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402dd6:	800007b7          	lui	a5,0x80000
20402dda:	7f07a783          	lw	a5,2032(a5) # 800007f0 <metal_segment_heap_target_end+0xffffe6d0>
20402dde:	efa9                	bnez	a5,20402e38 <metal_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20402de0:	800007b7          	lui	a5,0x80000
20402de4:	4705                	li	a4,1
20402de6:	7ee7a823          	sw	a4,2032(a5) # 800007f0 <metal_segment_heap_target_end+0xffffe6d0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402dea:	204007b7          	lui	a5,0x20400
20402dee:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20402df2:	204007b7          	lui	a5,0x20400
20402df6:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402dfa:	04e7f163          	bgeu	a5,a4,20402e3c <metal_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402dfe:	204007b7          	lui	a5,0x20400
20402e02:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402e06:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402e0a:	a831                	j	20402e26 <metal_init+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402e0c:	fec42783          	lw	a5,-20(s0)
20402e10:	439c                	lw	a5,0(a5)
20402e12:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:33

        func();
20402e16:	fe842783          	lw	a5,-24(s0)
20402e1a:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:35

        funcptr += 1;
20402e1c:	fec42783          	lw	a5,-20(s0)
20402e20:	0791                	addi	a5,a5,4
20402e22:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402e26:	fec42703          	lw	a4,-20(s0)
20402e2a:	204007b7          	lui	a5,0x20400
20402e2e:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
20402e32:	fcf71de3          	bne	a4,a5,20402e0c <metal_init+0x3e>
20402e36:	a021                	j	20402e3e <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:21
        return;
20402e38:	0001                	nop
20402e3a:	a011                	j	20402e3e <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:26
        return;
20402e3c:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:37
    }
}
20402e3e:	40f2                	lw	ra,28(sp)
20402e40:	4462                	lw	s0,24(sp)
20402e42:	6105                	addi	sp,sp,32
20402e44:	8082                	ret

20402e46 <metal_fini>:
metal_fini():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:39

void metal_fini(void) {
20402e46:	1101                	addi	sp,sp,-32
20402e48:	ce06                	sw	ra,28(sp)
20402e4a:	cc22                	sw	s0,24(sp)
20402e4c:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20402e4e:	800007b7          	lui	a5,0x80000
20402e52:	7f47a783          	lw	a5,2036(a5) # 800007f4 <metal_segment_heap_target_end+0xffffe6d4>
20402e56:	efa9                	bnez	a5,20402eb0 <metal_fini+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20402e58:	800007b7          	lui	a5,0x80000
20402e5c:	4705                	li	a4,1
20402e5e:	7ee7aa23          	sw	a4,2036(a5) # 800007f4 <metal_segment_heap_target_end+0xffffe6d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20402e62:	204007b7          	lui	a5,0x20400
20402e66:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20402e6a:	204007b7          	lui	a5,0x20400
20402e6e:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402e72:	04e7f163          	bgeu	a5,a4,20402eb4 <metal_fini+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20402e76:	204007b7          	lui	a5,0x20400
20402e7a:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402e7e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402e82:	a831                	j	20402e9e <metal_fini+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20402e84:	fec42783          	lw	a5,-20(s0)
20402e88:	439c                	lw	a5,0(a5)
20402e8a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:55

        func();
20402e8e:	fe842783          	lw	a5,-24(s0)
20402e92:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:57

        funcptr += 1;
20402e94:	fec42783          	lw	a5,-20(s0)
20402e98:	0791                	addi	a5,a5,4
20402e9a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402e9e:	fec42703          	lw	a4,-20(s0)
20402ea2:	204007b7          	lui	a5,0x20400
20402ea6:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402eaa:	fcf71de3          	bne	a4,a5,20402e84 <metal_fini+0x3e>
20402eae:	a021                	j	20402eb6 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:43
        return;
20402eb0:	0001                	nop
20402eb2:	a011                	j	20402eb6 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:48
        return;
20402eb4:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:59
    }
}
20402eb6:	40f2                	lw	ra,28(sp)
20402eb8:	4462                	lw	s0,24(sp)
20402eba:	6105                	addi	sp,sp,32
20402ebc:	8082                	ret

20402ebe <metal_init_run>:
metal_init_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402ebe:	1141                	addi	sp,sp,-16
20402ec0:	c606                	sw	ra,12(sp)
20402ec2:	c422                	sw	s0,8(sp)
20402ec4:	0800                	addi	s0,sp,16
20402ec6:	3721                	jal	20402dce <metal_init>
20402ec8:	0001                	nop
20402eca:	40b2                	lw	ra,12(sp)
20402ecc:	4422                	lw	s0,8(sp)
20402ece:	0141                	addi	sp,sp,16
20402ed0:	8082                	ret

20402ed2 <metal_fini_run>:
metal_fini_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20402ed2:	1141                	addi	sp,sp,-16
20402ed4:	c606                	sw	ra,12(sp)
20402ed6:	c422                	sw	s0,8(sp)
20402ed8:	0800                	addi	s0,sp,16
20402eda:	37b5                	jal	20402e46 <metal_fini>
20402edc:	0001                	nop
20402ede:	40b2                	lw	ra,12(sp)
20402ee0:	4422                	lw	s0,8(sp)
20402ee2:	0141                	addi	sp,sp,16
20402ee4:	8082                	ret

20402ee6 <metal_tty_putc>:
metal_tty_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20402ee6:	1101                	addi	sp,sp,-32
20402ee8:	ce06                	sw	ra,28(sp)
20402eea:	cc22                	sw	s0,24(sp)
20402eec:	1000                	addi	s0,sp,32
20402eee:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20402ef2:	fec42583          	lw	a1,-20(s0)
20402ef6:	800007b7          	lui	a5,0x80000
20402efa:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20402efe:	282d                	jal	20402f38 <metal_uart_putc>
20402f00:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:14
}
20402f02:	853e                	mv	a0,a5
20402f04:	40f2                	lw	ra,28(sp)
20402f06:	4462                	lw	s0,24(sp)
20402f08:	6105                	addi	sp,sp,32
20402f0a:	8082                	ret

20402f0c <metal_uart_init>:
metal_uart_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20402f0c:	1101                	addi	sp,sp,-32
20402f0e:	ce06                	sw	ra,28(sp)
20402f10:	cc22                	sw	s0,24(sp)
20402f12:	1000                	addi	s0,sp,32
20402f14:	fea42623          	sw	a0,-20(s0)
20402f18:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20402f1c:	fec42783          	lw	a5,-20(s0)
20402f20:	439c                	lw	a5,0(a5)
20402f22:	439c                	lw	a5,0(a5)
20402f24:	fe842583          	lw	a1,-24(s0)
20402f28:	fec42503          	lw	a0,-20(s0)
20402f2c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:61
}
20402f2e:	0001                	nop
20402f30:	40f2                	lw	ra,28(sp)
20402f32:	4462                	lw	s0,24(sp)
20402f34:	6105                	addi	sp,sp,32
20402f36:	8082                	ret

20402f38 <metal_uart_putc>:
metal_uart_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20402f38:	1101                	addi	sp,sp,-32
20402f3a:	ce06                	sw	ra,28(sp)
20402f3c:	cc22                	sw	s0,24(sp)
20402f3e:	1000                	addi	s0,sp,32
20402f40:	fea42623          	sw	a0,-20(s0)
20402f44:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20402f48:	fec42783          	lw	a5,-20(s0)
20402f4c:	439c                	lw	a5,0(a5)
20402f4e:	43dc                	lw	a5,4(a5)
20402f50:	fe842583          	lw	a1,-24(s0)
20402f54:	fec42503          	lw	a0,-20(s0)
20402f58:	9782                	jalr	a5
20402f5a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:71
}
20402f5c:	853e                	mv	a0,a5
20402f5e:	40f2                	lw	ra,28(sp)
20402f60:	4462                	lw	s0,24(sp)
20402f62:	6105                	addi	sp,sp,32
20402f64:	8082                	ret

20402f66 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20402f66:	1101                	addi	sp,sp,-32
20402f68:	ce06                	sw	ra,28(sp)
20402f6a:	cc22                	sw	s0,24(sp)
20402f6c:	1000                	addi	s0,sp,32
20402f6e:	fea42623          	sw	a0,-20(s0)
20402f72:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20402f76:	fec42783          	lw	a5,-20(s0)
20402f7a:	439c                	lw	a5,0(a5)
20402f7c:	4bdc                	lw	a5,20(a5)
20402f7e:	fe842583          	lw	a1,-24(s0)
20402f82:	fec42503          	lw	a0,-20(s0)
20402f86:	9782                	jalr	a5
20402f88:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:113
}
20402f8a:	853e                	mv	a0,a5
20402f8c:	40f2                	lw	ra,28(sp)
20402f8e:	4462                	lw	s0,24(sp)
20402f90:	6105                	addi	sp,sp,32
20402f92:	8082                	ret

20402f94 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20402f94:	1101                	addi	sp,sp,-32
20402f96:	ce22                	sw	s0,28(sp)
20402f98:	1000                	addi	s0,sp,32
20402f9a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402f9e:	fec42703          	lw	a4,-20(s0)
20402fa2:	800007b7          	lui	a5,0x80000
20402fa6:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
20402faa:	00f71563          	bne	a4,a5,20402fb4 <__metal_driver_sifive_clint0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20402fae:	020007b7          	lui	a5,0x2000
20402fb2:	a011                	j	20402fb6 <__metal_driver_sifive_clint0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:207
	}
	else {
		return 0;
20402fb4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:209
	}
}
20402fb6:	853e                	mv	a0,a5
20402fb8:	4472                	lw	s0,28(sp)
20402fba:	6105                	addi	sp,sp,32
20402fbc:	8082                	ret

20402fbe <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20402fbe:	1101                	addi	sp,sp,-32
20402fc0:	ce22                	sw	s0,28(sp)
20402fc2:	1000                	addi	s0,sp,32
20402fc4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402fc8:	fec42703          	lw	a4,-20(s0)
20402fcc:	800007b7          	lui	a5,0x80000
20402fd0:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
20402fd4:	00f71463          	bne	a4,a5,20402fdc <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
20402fd8:	4789                	li	a5,2
20402fda:	a011                	j	20402fde <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:227
	}
	else {
		return 0;
20402fdc:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:229
	}
}
20402fde:	853e                	mv	a0,a5
20402fe0:	4472                	lw	s0,28(sp)
20402fe2:	6105                	addi	sp,sp,32
20402fe4:	8082                	ret

20402fe6 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20402fe6:	1101                	addi	sp,sp,-32
20402fe8:	ce22                	sw	s0,28(sp)
20402fea:	1000                	addi	s0,sp,32
20402fec:	fea42623          	sw	a0,-20(s0)
20402ff0:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:233
	if (idx == 0) {
20402ff4:	fe842783          	lw	a5,-24(s0)
20402ff8:	e791                	bnez	a5,20403004 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402ffa:	800007b7          	lui	a5,0x80000
20402ffe:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
20403002:	a821                	j	2040301a <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:236
	}
	else if (idx == 1) {
20403004:	fe842703          	lw	a4,-24(s0)
20403008:	4785                	li	a5,1
2040300a:	00f71763          	bne	a4,a5,20403018 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2040300e:	800007b7          	lui	a5,0x80000
20403012:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
20403016:	a011                	j	2040301a <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:240
	}
	else {
		return NULL;
20403018:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:242
	}
}
2040301a:	853e                	mv	a0,a5
2040301c:	4472                	lw	s0,28(sp)
2040301e:	6105                	addi	sp,sp,32
20403020:	8082                	ret

20403022 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20403022:	1101                	addi	sp,sp,-32
20403024:	ce22                	sw	s0,28(sp)
20403026:	1000                	addi	s0,sp,32
20403028:	fea42623          	sw	a0,-20(s0)
2040302c:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:246
	if (idx == 0) {
20403030:	fe842783          	lw	a5,-24(s0)
20403034:	e399                	bnez	a5,2040303a <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:247
		return 3;
20403036:	478d                	li	a5,3
20403038:	a809                	j	2040304a <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:249
	}
	else if (idx == 1) {
2040303a:	fe842703          	lw	a4,-24(s0)
2040303e:	4785                	li	a5,1
20403040:	00f71463          	bne	a4,a5,20403048 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:250
		return 7;
20403044:	479d                	li	a5,7
20403046:	a011                	j	2040304a <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:253
	}
	else {
		return 0;
20403048:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:255
	}
}
2040304a:	853e                	mv	a0,a5
2040304c:	4472                	lw	s0,28(sp)
2040304e:	6105                	addi	sp,sp,32
20403050:	8082                	ret

20403052 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20403052:	715d                	addi	sp,sp,-80
20403054:	c686                	sw	ra,76(sp)
20403056:	c4a2                	sw	s0,72(sp)
20403058:	c2ca                	sw	s2,68(sp)
2040305a:	c0ce                	sw	s3,64(sp)
2040305c:	de52                	sw	s4,60(sp)
2040305e:	dc56                	sw	s5,56(sp)
20403060:	da5a                	sw	s6,52(sp)
20403062:	d85e                	sw	s7,48(sp)
20403064:	d662                	sw	s8,44(sp)
20403066:	d466                	sw	s9,40(sp)
20403068:	0880                	addi	s0,sp,80
2040306a:	faa42e23          	sw	a0,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2040306e:	fbc42783          	lw	a5,-68(s0)
20403072:	853e                	mv	a0,a5
20403074:	3705                	jal	20402f94 <__metal_driver_sifive_clint0_control_base>
20403076:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
2040307a:	fcc42703          	lw	a4,-52(s0)
2040307e:	67b1                	lui	a5,0xc
20403080:	17f1                	addi	a5,a5,-4
20403082:	97ba                	add	a5,a5,a4
20403084:	439c                	lw	a5,0(a5)
20403086:	fcf42423          	sw	a5,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
2040308a:	fcc42703          	lw	a4,-52(s0)
2040308e:	67b1                	lui	a5,0xc
20403090:	17e1                	addi	a5,a5,-8
20403092:	97ba                	add	a5,a5,a4
20403094:	439c                	lw	a5,0(a5)
20403096:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040309a:	fcc42703          	lw	a4,-52(s0)
2040309e:	67b1                	lui	a5,0xc
204030a0:	17f1                	addi	a5,a5,-4
204030a2:	97ba                	add	a5,a5,a4
204030a4:	439c                	lw	a5,0(a5)
204030a6:	fc842703          	lw	a4,-56(s0)
204030aa:	fcf718e3          	bne	a4,a5,2040307a <__metal_clint0_mtime_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
204030ae:	fc842783          	lw	a5,-56(s0)
204030b2:	8c3e                	mv	s8,a5
204030b4:	4c81                	li	s9,0
204030b6:	000c1993          	slli	s3,s8,0x0
204030ba:	4901                	li	s2,0
204030bc:	fc442783          	lw	a5,-60(s0)
204030c0:	8a3e                	mv	s4,a5
204030c2:	4a81                	li	s5,0
204030c4:	01496b33          	or	s6,s2,s4
204030c8:	0159ebb3          	or	s7,s3,s5
204030cc:	875a                	mv	a4,s6
204030ce:	87de                	mv	a5,s7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:30
}
204030d0:	853a                	mv	a0,a4
204030d2:	85be                	mv	a1,a5
204030d4:	40b6                	lw	ra,76(sp)
204030d6:	4426                	lw	s0,72(sp)
204030d8:	4916                	lw	s2,68(sp)
204030da:	4986                	lw	s3,64(sp)
204030dc:	5a72                	lw	s4,60(sp)
204030de:	5ae2                	lw	s5,56(sp)
204030e0:	5b52                	lw	s6,52(sp)
204030e2:	5bc2                	lw	s7,48(sp)
204030e4:	5c32                	lw	s8,44(sp)
204030e6:	5ca2                	lw	s9,40(sp)
204030e8:	6161                	addi	sp,sp,80
204030ea:	8082                	ret

204030ec <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
204030ec:	7179                	addi	sp,sp,-48
204030ee:	d606                	sw	ra,44(sp)
204030f0:	d422                	sw	s0,40(sp)
204030f2:	d24a                	sw	s2,36(sp)
204030f4:	d04e                	sw	s3,32(sp)
204030f6:	1800                	addi	s0,sp,48
204030f8:	fca42e23          	sw	a0,-36(s0)
204030fc:	fcb42c23          	sw	a1,-40(s0)
20403100:	fcc42823          	sw	a2,-48(s0)
20403104:	fcd42a23          	sw	a3,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20403108:	fdc42783          	lw	a5,-36(s0)
2040310c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20403110:	fec42783          	lw	a5,-20(s0)
20403114:	853e                	mv	a0,a5
20403116:	3dbd                	jal	20402f94 <__metal_driver_sifive_clint0_control_base>
20403118:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040311c:	fd842783          	lw	a5,-40(s0)
20403120:	078e                	slli	a5,a5,0x3
20403122:	873e                	mv	a4,a5
20403124:	fe842783          	lw	a5,-24(s0)
20403128:	973e                	add	a4,a4,a5
2040312a:	6791                	lui	a5,0x4
2040312c:	0791                	addi	a5,a5,4
2040312e:	97ba                	add	a5,a5,a4
20403130:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20403132:	57fd                	li	a5,-1
20403134:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20403136:	fd842783          	lw	a5,-40(s0)
2040313a:	078e                	slli	a5,a5,0x3
2040313c:	873e                	mv	a4,a5
2040313e:	fe842783          	lw	a5,-24(s0)
20403142:	973e                	add	a4,a4,a5
20403144:	6791                	lui	a5,0x4
20403146:	97ba                	add	a5,a5,a4
20403148:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
2040314a:	fd042783          	lw	a5,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2040314e:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20403150:	fd442783          	lw	a5,-44(s0)
20403154:	0007d913          	srli	s2,a5,0x0
20403158:	4981                	li	s3,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
2040315a:	fd842783          	lw	a5,-40(s0)
2040315e:	078e                	slli	a5,a5,0x3
20403160:	873e                	mv	a4,a5
20403162:	fe842783          	lw	a5,-24(s0)
20403166:	973e                	add	a4,a4,a5
20403168:	6791                	lui	a5,0x4
2040316a:	0791                	addi	a5,a5,4
2040316c:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2040316e:	874a                	mv	a4,s2
20403170:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20403172:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:55
}
20403174:	853e                	mv	a0,a5
20403176:	50b2                	lw	ra,44(sp)
20403178:	5422                	lw	s0,40(sp)
2040317a:	5912                	lw	s2,36(sp)
2040317c:	5982                	lw	s3,32(sp)
2040317e:	6145                	addi	sp,sp,48
20403180:	8082                	ret

20403182 <_get_cpu_intc>:
_get_cpu_intc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20403182:	1101                	addi	sp,sp,-32
20403184:	ce06                	sw	ra,28(sp)
20403186:	cc22                	sw	s0,24(sp)
20403188:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
2040318a:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2040318e:	f14027f3          	csrr	a5,mhartid
20403192:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20403196:	fec42783          	lw	a5,-20(s0)
2040319a:	853e                	mv	a0,a5
2040319c:	2bc040ef          	jal	ra,20407458 <metal_cpu_get>
204031a0:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
204031a4:	fe842503          	lw	a0,-24(s0)
204031a8:	28a040ef          	jal	ra,20407432 <metal_cpu_interrupt_controller>
204031ac:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:65
}
204031ae:	853e                	mv	a0,a5
204031b0:	40f2                	lw	ra,28(sp)
204031b2:	4462                	lw	s0,24(sp)
204031b4:	6105                	addi	sp,sp,32
204031b6:	8082                	ret

204031b8 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
204031b8:	7139                	addi	sp,sp,-64
204031ba:	de06                	sw	ra,60(sp)
204031bc:	dc22                	sw	s0,56(sp)
204031be:	0080                	addi	s0,sp,64
204031c0:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
204031c4:	fcc42503          	lw	a0,-52(s0)
204031c8:	3bdd                	jal	20402fbe <__metal_driver_sifive_clint0_num_interrupts>
204031ca:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
204031ce:	fcc42783          	lw	a5,-52(s0)
204031d2:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
204031d6:	fe442783          	lw	a5,-28(s0)
204031da:	43dc                	lw	a5,4(a5)
204031dc:	efa9                	bnez	a5,20403236 <__metal_driver_riscv_clint0_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
204031de:	fe042623          	sw	zero,-20(s0)
204031e2:	a081                	j	20403222 <__metal_driver_riscv_clint0_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204031e4:	fec42583          	lw	a1,-20(s0)
204031e8:	fcc42503          	lw	a0,-52(s0)
204031ec:	3bed                	jal	20402fe6 <__metal_driver_sifive_clint0_interrupt_parents>
204031ee:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204031f2:	fec42583          	lw	a1,-20(s0)
204031f6:	fcc42503          	lw	a0,-52(s0)
204031fa:	3525                	jal	20403022 <__metal_driver_sifive_clint0_interrupt_lines>
204031fc:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20403200:	fe042783          	lw	a5,-32(s0)
20403204:	439c                	lw	a5,0(a5)
20403206:	4fdc                	lw	a5,28(a5)
20403208:	fcc42683          	lw	a3,-52(s0)
2040320c:	4601                	li	a2,0
2040320e:	fdc42583          	lw	a1,-36(s0)
20403212:	fe042503          	lw	a0,-32(s0)
20403216:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20403218:	fec42783          	lw	a5,-20(s0)
2040321c:	0785                	addi	a5,a5,1
2040321e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20403222:	fec42703          	lw	a4,-20(s0)
20403226:	fe842783          	lw	a5,-24(s0)
2040322a:	faf74de3          	blt	a4,a5,204031e4 <__metal_driver_riscv_clint0_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
2040322e:	fe442783          	lw	a5,-28(s0)
20403232:	4705                	li	a4,1
20403234:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20403236:	0001                	nop
20403238:	50f2                	lw	ra,60(sp)
2040323a:	5462                	lw	s0,56(sp)
2040323c:	6121                	addi	sp,sp,64
2040323e:	8082                	ret

20403240 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20403240:	7139                	addi	sp,sp,-64
20403242:	de06                	sw	ra,60(sp)
20403244:	dc22                	sw	s0,56(sp)
20403246:	0080                	addi	s0,sp,64
20403248:	fca42623          	sw	a0,-52(s0)
2040324c:	fcb42423          	sw	a1,-56(s0)
20403250:	fcc42223          	sw	a2,-60(s0)
20403254:	fcd42023          	sw	a3,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20403258:	57fd                	li	a5,-1
2040325a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2040325e:	47c010ef          	jal	ra,204046da <__metal_controller_interrupt_vector_mode>
20403262:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20403266:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040326a:	3f21                	jal	20403182 <_get_cpu_intc>
2040326c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403270:	fcc42503          	lw	a0,-52(s0)
20403274:	33a9                	jal	20402fbe <__metal_driver_sifive_clint0_num_interrupts>
20403276:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
2040327a:	fe042703          	lw	a4,-32(s0)
2040327e:	4785                	li	a5,1
20403280:	00f70863          	beq	a4,a5,20403290 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20403284:	fe042783          	lw	a5,-32(s0)
20403288:	c781                	beqz	a5,20403290 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
2040328a:	fec42783          	lw	a5,-20(s0)
2040328e:	a049                	j	20403310 <__metal_driver_riscv_clint0_register+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20403290:	fe042223          	sw	zero,-28(s0)
20403294:	a091                	j	204032d8 <__metal_driver_riscv_clint0_register+0x98>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403296:	fe442583          	lw	a1,-28(s0)
2040329a:	fcc42503          	lw	a0,-52(s0)
2040329e:	3351                	jal	20403022 <__metal_driver_sifive_clint0_interrupt_lines>
204032a0:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204032a4:	fe442583          	lw	a1,-28(s0)
204032a8:	fcc42503          	lw	a0,-52(s0)
204032ac:	3b2d                	jal	20402fe6 <__metal_driver_sifive_clint0_interrupt_parents>
204032ae:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
204032b2:	fdc42703          	lw	a4,-36(s0)
204032b6:	fe842783          	lw	a5,-24(s0)
204032ba:	00f71863          	bne	a4,a5,204032ca <__metal_driver_riscv_clint0_register+0x8a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
204032be:	fc842703          	lw	a4,-56(s0)
204032c2:	fd442783          	lw	a5,-44(s0)
204032c6:	02f70063          	beq	a4,a5,204032e6 <__metal_driver_riscv_clint0_register+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
204032ca:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
204032ce:	fe442783          	lw	a5,-28(s0)
204032d2:	0785                	addi	a5,a5,1
204032d4:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
204032d8:	fe442703          	lw	a4,-28(s0)
204032dc:	fd842783          	lw	a5,-40(s0)
204032e0:	faf74be3          	blt	a4,a5,20403296 <__metal_driver_riscv_clint0_register+0x56>
204032e4:	a011                	j	204032e8 <__metal_driver_riscv_clint0_register+0xa8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
204032e6:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204032e8:	fe842783          	lw	a5,-24(s0)
204032ec:	c385                	beqz	a5,2040330c <__metal_driver_riscv_clint0_register+0xcc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204032ee:	fe842783          	lw	a5,-24(s0)
204032f2:	439c                	lw	a5,0(a5)
204032f4:	4fdc                	lw	a5,28(a5)
204032f6:	fc042683          	lw	a3,-64(s0)
204032fa:	fc442603          	lw	a2,-60(s0)
204032fe:	fc842583          	lw	a1,-56(s0)
20403302:	fe842503          	lw	a0,-24(s0)
20403306:	9782                	jalr	a5
20403308:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
2040330c:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:115
}
20403310:	853e                	mv	a0,a5
20403312:	50f2                	lw	ra,60(sp)
20403314:	5462                	lw	s0,56(sp)
20403316:	6121                	addi	sp,sp,64
20403318:	8082                	ret

2040331a <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
2040331a:	7179                	addi	sp,sp,-48
2040331c:	d622                	sw	s0,44(sp)
2040331e:	1800                	addi	s0,sp,48
20403320:	fca42e23          	sw	a0,-36(s0)
20403324:	fcb42c23          	sw	a1,-40(s0)
20403328:	fcc42a23          	sw	a2,-44(s0)
2040332c:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20403330:	57fd                	li	a5,-1
20403332:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20403336:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:123
}
2040333a:	853e                	mv	a0,a5
2040333c:	5432                	lw	s0,44(sp)
2040333e:	6145                	addi	sp,sp,48
20403340:	8082                	ret

20403342 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20403342:	1101                	addi	sp,sp,-32
20403344:	ce06                	sw	ra,28(sp)
20403346:	cc22                	sw	s0,24(sp)
20403348:	1000                	addi	s0,sp,32
2040334a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
2040334e:	38c010ef          	jal	ra,204046da <__metal_controller_interrupt_vector_mode>
20403352:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:128
}
20403354:	853e                	mv	a0,a5
20403356:	40f2                	lw	ra,28(sp)
20403358:	4462                	lw	s0,24(sp)
2040335a:	6105                	addi	sp,sp,32
2040335c:	8082                	ret

2040335e <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2040335e:	7179                	addi	sp,sp,-48
20403360:	d606                	sw	ra,44(sp)
20403362:	d422                	sw	s0,40(sp)
20403364:	1800                	addi	s0,sp,48
20403366:	fca42e23          	sw	a0,-36(s0)
2040336a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2040336e:	57fd                	li	a5,-1
20403370:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20403374:	3539                	jal	20403182 <_get_cpu_intc>
20403376:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
2040337a:	fe842783          	lw	a5,-24(s0)
2040337e:	c395                	beqz	a5,204033a2 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20403380:	fd842703          	lw	a4,-40(s0)
20403384:	4785                	li	a5,1
20403386:	02e7e063          	bltu	a5,a4,204033a6 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
2040338a:	fe842783          	lw	a5,-24(s0)
2040338e:	439c                	lw	a5,0(a5)
20403390:	43dc                	lw	a5,4(a5)
20403392:	fd842583          	lw	a1,-40(s0)
20403396:	fe842503          	lw	a0,-24(s0)
2040339a:	9782                	jalr	a5
2040339c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
204033a0:	a021                	j	204033a8 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
204033a2:	0001                	nop
204033a4:	a011                	j	204033a8 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
204033a6:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
204033a8:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:148
}
204033ac:	853e                	mv	a0,a5
204033ae:	50b2                	lw	ra,44(sp)
204033b0:	5422                	lw	s0,40(sp)
204033b2:	6145                	addi	sp,sp,48
204033b4:	8082                	ret

204033b6 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
204033b6:	7139                	addi	sp,sp,-64
204033b8:	de06                	sw	ra,60(sp)
204033ba:	dc22                	sw	s0,56(sp)
204033bc:	0080                	addi	s0,sp,64
204033be:	fca42623          	sw	a0,-52(s0)
204033c2:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
204033c6:	57fd                	li	a5,-1
204033c8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
204033cc:	fc842783          	lw	a5,-56(s0)
204033d0:	c7c9                	beqz	a5,2040345a <__metal_driver_riscv_clint0_enable+0xa4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
204033d2:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204033d6:	3375                	jal	20403182 <_get_cpu_intc>
204033d8:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
204033dc:	fcc42503          	lw	a0,-52(s0)
204033e0:	3ef9                	jal	20402fbe <__metal_driver_sifive_clint0_num_interrupts>
204033e2:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
204033e6:	fe042223          	sw	zero,-28(s0)
204033ea:	a091                	j	2040342e <__metal_driver_riscv_clint0_enable+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204033ec:	fe442583          	lw	a1,-28(s0)
204033f0:	fcc42503          	lw	a0,-52(s0)
204033f4:	313d                	jal	20403022 <__metal_driver_sifive_clint0_interrupt_lines>
204033f6:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204033fa:	fe442583          	lw	a1,-28(s0)
204033fe:	fcc42503          	lw	a0,-52(s0)
20403402:	36d5                	jal	20402fe6 <__metal_driver_sifive_clint0_interrupt_parents>
20403404:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20403408:	fe042703          	lw	a4,-32(s0)
2040340c:	fe842783          	lw	a5,-24(s0)
20403410:	00f71863          	bne	a4,a5,20403420 <__metal_driver_riscv_clint0_enable+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20403414:	fc842703          	lw	a4,-56(s0)
20403418:	fd842783          	lw	a5,-40(s0)
2040341c:	02f70063          	beq	a4,a5,2040343c <__metal_driver_riscv_clint0_enable+0x86>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20403420:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403424:	fe442783          	lw	a5,-28(s0)
20403428:	0785                	addi	a5,a5,1
2040342a:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
2040342e:	fe442703          	lw	a4,-28(s0)
20403432:	fdc42783          	lw	a5,-36(s0)
20403436:	faf74be3          	blt	a4,a5,204033ec <__metal_driver_riscv_clint0_enable+0x36>
2040343a:	a011                	j	2040343e <__metal_driver_riscv_clint0_enable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
2040343c:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
2040343e:	fe842783          	lw	a5,-24(s0)
20403442:	cf81                	beqz	a5,2040345a <__metal_driver_riscv_clint0_enable+0xa4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20403444:	fe842783          	lw	a5,-24(s0)
20403448:	439c                	lw	a5,0(a5)
2040344a:	53dc                	lw	a5,36(a5)
2040344c:	fc842583          	lw	a1,-56(s0)
20403450:	fe842503          	lw	a0,-24(s0)
20403454:	9782                	jalr	a5
20403456:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
2040345a:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:178
}
2040345e:	853e                	mv	a0,a5
20403460:	50f2                	lw	ra,60(sp)
20403462:	5462                	lw	s0,56(sp)
20403464:	6121                	addi	sp,sp,64
20403466:	8082                	ret

20403468 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20403468:	7139                	addi	sp,sp,-64
2040346a:	de06                	sw	ra,60(sp)
2040346c:	dc22                	sw	s0,56(sp)
2040346e:	0080                	addi	s0,sp,64
20403470:	fca42623          	sw	a0,-52(s0)
20403474:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20403478:	57fd                	li	a5,-1
2040347a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
2040347e:	fc842783          	lw	a5,-56(s0)
20403482:	cbc1                	beqz	a5,20403512 <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20403484:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403488:	39ed                	jal	20403182 <_get_cpu_intc>
2040348a:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2040348e:	fcc42503          	lw	a0,-52(s0)
20403492:	b2dff0ef          	jal	ra,20402fbe <__metal_driver_sifive_clint0_num_interrupts>
20403496:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
2040349a:	fe042223          	sw	zero,-28(s0)
2040349e:	a0a1                	j	204034e6 <__metal_driver_riscv_clint0_disable+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204034a0:	fe442583          	lw	a1,-28(s0)
204034a4:	fcc42503          	lw	a0,-52(s0)
204034a8:	b7bff0ef          	jal	ra,20403022 <__metal_driver_sifive_clint0_interrupt_lines>
204034ac:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204034b0:	fe442583          	lw	a1,-28(s0)
204034b4:	fcc42503          	lw	a0,-52(s0)
204034b8:	b2fff0ef          	jal	ra,20402fe6 <__metal_driver_sifive_clint0_interrupt_parents>
204034bc:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
204034c0:	fe042703          	lw	a4,-32(s0)
204034c4:	fe842783          	lw	a5,-24(s0)
204034c8:	00f71863          	bne	a4,a5,204034d8 <__metal_driver_riscv_clint0_disable+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
204034cc:	fc842703          	lw	a4,-56(s0)
204034d0:	fd842783          	lw	a5,-40(s0)
204034d4:	02f70063          	beq	a4,a5,204034f4 <__metal_driver_riscv_clint0_disable+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
204034d8:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204034dc:	fe442783          	lw	a5,-28(s0)
204034e0:	0785                	addi	a5,a5,1
204034e2:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
204034e6:	fe442703          	lw	a4,-28(s0)
204034ea:	fdc42783          	lw	a5,-36(s0)
204034ee:	faf749e3          	blt	a4,a5,204034a0 <__metal_driver_riscv_clint0_disable+0x38>
204034f2:	a011                	j	204034f6 <__metal_driver_riscv_clint0_disable+0x8e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
204034f4:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
204034f6:	fe842783          	lw	a5,-24(s0)
204034fa:	cf81                	beqz	a5,20403512 <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
204034fc:	fe842783          	lw	a5,-24(s0)
20403500:	439c                	lw	a5,0(a5)
20403502:	579c                	lw	a5,40(a5)
20403504:	fc842583          	lw	a1,-56(s0)
20403508:	fe842503          	lw	a0,-24(s0)
2040350c:	9782                	jalr	a5
2040350e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20403512:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:208
}
20403516:	853e                	mv	a0,a5
20403518:	50f2                	lw	ra,60(sp)
2040351a:	5462                	lw	s0,56(sp)
2040351c:	6121                	addi	sp,sp,64
2040351e:	8082                	ret

20403520 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20403520:	7179                	addi	sp,sp,-48
20403522:	d606                	sw	ra,44(sp)
20403524:	d422                	sw	s0,40(sp)
20403526:	1800                	addi	s0,sp,48
20403528:	fca42e23          	sw	a0,-36(s0)
2040352c:	fcb42c23          	sw	a1,-40(s0)
20403530:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20403534:	57fd                	li	a5,-1
20403536:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
2040353a:	fdc42783          	lw	a5,-36(s0)
2040353e:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20403542:	fdc42503          	lw	a0,-36(s0)
20403546:	a4fff0ef          	jal	ra,20402f94 <__metal_driver_sifive_clint0_control_base>
2040354a:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
2040354e:	fd842703          	lw	a4,-40(s0)
20403552:	4791                	li	a5,4
20403554:	0cf70163          	beq	a4,a5,20403616 <__metal_driver_riscv_clint0_command_request+0xf6>
20403558:	fd842703          	lw	a4,-40(s0)
2040355c:	4791                	li	a5,4
2040355e:	0ee7c163          	blt	a5,a4,20403640 <__metal_driver_riscv_clint0_command_request+0x120>
20403562:	fd842703          	lw	a4,-40(s0)
20403566:	478d                	li	a5,3
20403568:	06f70663          	beq	a4,a5,204035d4 <__metal_driver_riscv_clint0_command_request+0xb4>
2040356c:	fd842703          	lw	a4,-40(s0)
20403570:	478d                	li	a5,3
20403572:	0ce7c763          	blt	a5,a4,20403640 <__metal_driver_riscv_clint0_command_request+0x120>
20403576:	fd842703          	lw	a4,-40(s0)
2040357a:	4785                	li	a5,1
2040357c:	00f70863          	beq	a4,a5,2040358c <__metal_driver_riscv_clint0_command_request+0x6c>
20403580:	fd842703          	lw	a4,-40(s0)
20403584:	4789                	li	a5,2
20403586:	02f70363          	beq	a4,a5,204035ac <__metal_driver_riscv_clint0_command_request+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
2040358a:	a85d                	j	20403640 <__metal_driver_riscv_clint0_command_request+0x120>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
2040358c:	fd442783          	lw	a5,-44(s0)
20403590:	cbd5                	beqz	a5,20403644 <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20403592:	fe842503          	lw	a0,-24(s0)
20403596:	abdff0ef          	jal	ra,20403052 <__metal_clint0_mtime_get>
2040359a:	872a                	mv	a4,a0
2040359c:	87ae                	mv	a5,a1
2040359e:	fd442683          	lw	a3,-44(s0)
204035a2:	c298                	sw	a4,0(a3)
204035a4:	c2dc                	sw	a5,4(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
204035a6:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
204035aa:	a869                	j	20403644 <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
204035ac:	fd442783          	lw	a5,-44(s0)
204035b0:	cfc1                	beqz	a5,20403648 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
204035b2:	fd442783          	lw	a5,-44(s0)
204035b6:	439c                	lw	a5,0(a5)
204035b8:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
204035bc:	fe042783          	lw	a5,-32(s0)
204035c0:	078a                	slli	a5,a5,0x2
204035c2:	873e                	mv	a4,a5
204035c4:	fe442783          	lw	a5,-28(s0)
204035c8:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
204035ca:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
204035ce:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204035d2:	a89d                	j	20403648 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
204035d4:	fd442783          	lw	a5,-44(s0)
204035d8:	cbb5                	beqz	a5,2040364c <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
204035da:	fd442783          	lw	a5,-44(s0)
204035de:	439c                	lw	a5,0(a5)
204035e0:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
204035e4:	fe042783          	lw	a5,-32(s0)
204035e8:	078a                	slli	a5,a5,0x2
204035ea:	873e                	mv	a4,a5
204035ec:	fe442783          	lw	a5,-28(s0)
204035f0:	97ba                	add	a5,a5,a4
204035f2:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
204035f4:	4785                	li	a5,1
204035f6:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
204035f8:	0480000f          	fence	o,i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
204035fc:	fe042783          	lw	a5,-32(s0)
20403600:	078a                	slli	a5,a5,0x2
20403602:	873e                	mv	a4,a5
20403604:	fe442783          	lw	a5,-28(s0)
20403608:	97ba                	add	a5,a5,a4
2040360a:	439c                	lw	a5,0(a5)
2040360c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20403610:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403614:	a825                	j	2040364c <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20403616:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
2040361a:	fd442783          	lw	a5,-44(s0)
2040361e:	cb8d                	beqz	a5,20403650 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20403620:	fd442783          	lw	a5,-44(s0)
20403624:	439c                	lw	a5,0(a5)
20403626:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
2040362a:	fe042783          	lw	a5,-32(s0)
2040362e:	078a                	slli	a5,a5,0x2
20403630:	873e                	mv	a4,a5
20403632:	fe442783          	lw	a5,-28(s0)
20403636:	97ba                	add	a5,a5,a4
20403638:	439c                	lw	a5,0(a5)
2040363a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2040363e:	a809                	j	20403650 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20403640:	0001                	nop
20403642:	a801                	j	20403652 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403644:	0001                	nop
20403646:	a031                	j	20403652 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403648:	0001                	nop
2040364a:	a021                	j	20403652 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2040364c:	0001                	nop
2040364e:	a011                	j	20403652 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403650:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20403652:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:267
}
20403656:	853e                	mv	a0,a5
20403658:	50b2                	lw	ra,44(sp)
2040365a:	5422                	lw	s0,40(sp)
2040365c:	6145                	addi	sp,sp,48
2040365e:	8082                	ret

20403660 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20403660:	7179                	addi	sp,sp,-48
20403662:	d606                	sw	ra,44(sp)
20403664:	d422                	sw	s0,40(sp)
20403666:	1800                	addi	s0,sp,48
20403668:	fca42e23          	sw	a0,-36(s0)
2040366c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20403670:	617030ef          	jal	ra,20407486 <metal_cpu_get_current_hartid>
20403674:	87aa                	mv	a5,a0
20403676:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
2040367a:	fec40793          	addi	a5,s0,-20
2040367e:	863e                	mv	a2,a5
20403680:	4589                	li	a1,2
20403682:	fdc42503          	lw	a0,-36(s0)
20403686:	3d69                	jal	20403520 <__metal_driver_riscv_clint0_command_request>
20403688:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
2040368a:	853e                	mv	a0,a5
2040368c:	50b2                	lw	ra,44(sp)
2040368e:	5422                	lw	s0,40(sp)
20403690:	6145                	addi	sp,sp,48
20403692:	8082                	ret

20403694 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20403694:	7179                	addi	sp,sp,-48
20403696:	d606                	sw	ra,44(sp)
20403698:	d422                	sw	s0,40(sp)
2040369a:	1800                	addi	s0,sp,48
2040369c:	fca42e23          	sw	a0,-36(s0)
204036a0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
204036a4:	5e3030ef          	jal	ra,20407486 <metal_cpu_get_current_hartid>
204036a8:	87aa                	mv	a5,a0
204036aa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
204036ae:	fec40793          	addi	a5,s0,-20
204036b2:	863e                	mv	a2,a5
204036b4:	458d                	li	a1,3
204036b6:	fdc42503          	lw	a0,-36(s0)
204036ba:	359d                	jal	20403520 <__metal_driver_riscv_clint0_command_request>
204036bc:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
204036be:	853e                	mv	a0,a5
204036c0:	50b2                	lw	ra,44(sp)
204036c2:	5422                	lw	s0,40(sp)
204036c4:	6145                	addi	sp,sp,48
204036c6:	8082                	ret

204036c8 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
204036c8:	1101                	addi	sp,sp,-32
204036ca:	ce22                	sw	s0,28(sp)
204036cc:	1000                	addi	s0,sp,32
204036ce:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204036d2:	fec42703          	lw	a4,-20(s0)
204036d6:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204036da:	00f71463          	bne	a4,a5,204036e2 <__metal_driver_cpu_hartid+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:263
		return 0;
204036de:	4781                	li	a5,0
204036e0:	a011                	j	204036e4 <__metal_driver_cpu_hartid+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:266
	}
	else {
		return -1;
204036e2:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:268
	}
}
204036e4:	853e                	mv	a0,a5
204036e6:	4472                	lw	s0,28(sp)
204036e8:	6105                	addi	sp,sp,32
204036ea:	8082                	ret

204036ec <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
204036ec:	1101                	addi	sp,sp,-32
204036ee:	ce22                	sw	s0,28(sp)
204036f0:	1000                	addi	s0,sp,32
204036f2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204036f6:	fec42703          	lw	a4,-20(s0)
204036fa:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204036fe:	00f71763          	bne	a4,a5,2040370c <__metal_driver_cpu_timebase+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:273
		return 1000000;
20403702:	000f47b7          	lui	a5,0xf4
20403706:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
2040370a:	a011                	j	2040370e <__metal_driver_cpu_timebase+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:276
	}
	else {
		return 0;
2040370c:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:278
	}
}
2040370e:	853e                	mv	a0,a5
20403710:	4472                	lw	s0,28(sp)
20403712:	6105                	addi	sp,sp,32
20403714:	8082                	ret

20403716 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20403716:	1101                	addi	sp,sp,-32
20403718:	ce22                	sw	s0,28(sp)
2040371a:	1000                	addi	s0,sp,32
2040371c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403720:	fec42703          	lw	a4,-20(s0)
20403724:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403728:	00f71763          	bne	a4,a5,20403736 <__metal_driver_cpu_interrupt_controller+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
2040372c:	800007b7          	lui	a5,0x80000
20403730:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
20403734:	a011                	j	20403738 <__metal_driver_cpu_interrupt_controller+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:286
	}
	else {
		return NULL;
20403736:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:288
	}
}
20403738:	853e                	mv	a0,a5
2040373a:	4472                	lw	s0,28(sp)
2040373c:	6105                	addi	sp,sp,32
2040373e:	8082                	ret

20403740 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20403740:	1101                	addi	sp,sp,-32
20403742:	ce22                	sw	s0,28(sp)
20403744:	1000                	addi	s0,sp,32
20403746:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040374a:	fec42703          	lw	a4,-20(s0)
2040374e:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403752:	00f71463          	bne	a4,a5,2040375a <__metal_driver_cpu_buserror+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:303
		return NULL;
20403756:	4781                	li	a5,0
20403758:	a011                	j	2040375c <__metal_driver_cpu_buserror+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:306
	}
	else {
		return NULL;
2040375a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:308
	}
}
2040375c:	853e                	mv	a0,a5
2040375e:	4472                	lw	s0,28(sp)
20403760:	6105                	addi	sp,sp,32
20403762:	8082                	ret

20403764 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20403764:	1101                	addi	sp,sp,-32
20403766:	ce22                	sw	s0,28(sp)
20403768:	1000                	addi	s0,sp,32
2040376a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
2040376e:	fec42783          	lw	a5,-20(s0)
20403772:	00f04c63          	bgtz	a5,2040378a <__metal_driver_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20403776:	800007b7          	lui	a5,0x80000
2040377a:	fec42703          	lw	a4,-20(s0)
2040377e:	070a                	slli	a4,a4,0x2
20403780:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403784:	97ba                	add	a5,a5,a4
20403786:	439c                	lw	a5,0(a5)
20403788:	a011                	j	2040378c <__metal_driver_cpu_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
2040378a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:30
}
2040378c:	853e                	mv	a0,a5
2040378e:	4472                	lw	s0,28(sp)
20403790:	6105                	addi	sp,sp,32
20403792:	8082                	ret

20403794 <__metal_myhart_id>:
__metal_myhart_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20403794:	1101                	addi	sp,sp,-32
20403796:	ce22                	sw	s0,28(sp)
20403798:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
2040379a:	f14027f3          	csrr	a5,mhartid
2040379e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
204037a2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:36
}
204037a6:	853e                	mv	a0,a5
204037a8:	4472                	lw	s0,28(sp)
204037aa:	6105                	addi	sp,sp,32
204037ac:	8082                	ret

204037ae <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
204037ae:	1101                	addi	sp,sp,-32
204037b0:	ce22                	sw	s0,28(sp)
204037b2:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
204037b4:	47a1                	li	a5,8
204037b6:	3007a7f3          	csrrs	a5,mstatus,a5
204037ba:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204037be:	0001                	nop
204037c0:	4472                	lw	s0,28(sp)
204037c2:	6105                	addi	sp,sp,32
204037c4:	8082                	ret

204037c6 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
204037c6:	1101                	addi	sp,sp,-32
204037c8:	ce22                	sw	s0,28(sp)
204037ca:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
204037cc:	47a1                	li	a5,8
204037ce:	3007b7f3          	csrrc	a5,mstatus,a5
204037d2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204037d6:	0001                	nop
204037d8:	4472                	lw	s0,28(sp)
204037da:	6105                	addi	sp,sp,32
204037dc:	8082                	ret

204037de <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
204037de:	1101                	addi	sp,sp,-32
204037e0:	ce22                	sw	s0,28(sp)
204037e2:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204037e4:	47a1                	li	a5,8
204037e6:	3047a7f3          	csrrs	a5,mie,a5
204037ea:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204037ee:	0001                	nop
204037f0:	4472                	lw	s0,28(sp)
204037f2:	6105                	addi	sp,sp,32
204037f4:	8082                	ret

204037f6 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
204037f6:	1101                	addi	sp,sp,-32
204037f8:	ce22                	sw	s0,28(sp)
204037fa:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204037fc:	47a1                	li	a5,8
204037fe:	3047b7f3          	csrrc	a5,mie,a5
20403802:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403806:	0001                	nop
20403808:	4472                	lw	s0,28(sp)
2040380a:	6105                	addi	sp,sp,32
2040380c:	8082                	ret

2040380e <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
2040380e:	1101                	addi	sp,sp,-32
20403810:	ce22                	sw	s0,28(sp)
20403812:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403814:	08000793          	li	a5,128
20403818:	3047a7f3          	csrrs	a5,mie,a5
2040381c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403820:	0001                	nop
20403822:	4472                	lw	s0,28(sp)
20403824:	6105                	addi	sp,sp,32
20403826:	8082                	ret

20403828 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20403828:	1101                	addi	sp,sp,-32
2040382a:	ce22                	sw	s0,28(sp)
2040382c:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
2040382e:	08000793          	li	a5,128
20403832:	3047b7f3          	csrrc	a5,mie,a5
20403836:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
2040383a:	0001                	nop
2040383c:	4472                	lw	s0,28(sp)
2040383e:	6105                	addi	sp,sp,32
20403840:	8082                	ret

20403842 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20403842:	1101                	addi	sp,sp,-32
20403844:	ce22                	sw	s0,28(sp)
20403846:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403848:	6785                	lui	a5,0x1
2040384a:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
2040384e:	3047a7f3          	csrrs	a5,mie,a5
20403852:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20403856:	0001                	nop
20403858:	4472                	lw	s0,28(sp)
2040385a:	6105                	addi	sp,sp,32
2040385c:	8082                	ret

2040385e <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
2040385e:	1101                	addi	sp,sp,-32
20403860:	ce22                	sw	s0,28(sp)
20403862:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20403864:	6785                	lui	a5,0x1
20403866:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
2040386a:	3047b7f3          	csrrc	a5,mie,a5
2040386e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20403872:	0001                	nop
20403874:	4472                	lw	s0,28(sp)
20403876:	6105                	addi	sp,sp,32
20403878:	8082                	ret

2040387a <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
2040387a:	7179                	addi	sp,sp,-48
2040387c:	d622                	sw	s0,44(sp)
2040387e:	1800                	addi	s0,sp,48
20403880:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20403884:	fdc42783          	lw	a5,-36(s0)
20403888:	4705                	li	a4,1
2040388a:	00f717b3          	sll	a5,a4,a5
2040388e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20403892:	fec42783          	lw	a5,-20(s0)
20403896:	3047a7f3          	csrrs	a5,mie,a5
2040389a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:105
}
2040389e:	0001                	nop
204038a0:	5432                	lw	s0,44(sp)
204038a2:	6145                	addi	sp,sp,48
204038a4:	8082                	ret

204038a6 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
204038a6:	7179                	addi	sp,sp,-48
204038a8:	d622                	sw	s0,44(sp)
204038aa:	1800                	addi	s0,sp,48
204038ac:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
204038b0:	fdc42783          	lw	a5,-36(s0)
204038b4:	4705                	li	a4,1
204038b6:	00f717b3          	sll	a5,a4,a5
204038ba:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
204038be:	fec42783          	lw	a5,-20(s0)
204038c2:	3047b7f3          	csrrc	a5,mie,a5
204038c6:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:111
}
204038ca:	0001                	nop
204038cc:	5432                	lw	s0,44(sp)
204038ce:	6145                	addi	sp,sp,48
204038d0:	8082                	ret

204038d2 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
204038d2:	1101                	addi	sp,sp,-32
204038d4:	ce06                	sw	ra,28(sp)
204038d6:	cc22                	sw	s0,24(sp)
204038d8:	1000                	addi	s0,sp,32
204038da:	fea42623          	sw	a0,-20(s0)
204038de:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
204038e2:	06400513          	li	a0,100
204038e6:	3dd030ef          	jal	ra,204074c2 <metal_shutdown>

204038ea <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
204038ea:	1101                	addi	sp,sp,-32
204038ec:	ce06                	sw	ra,28(sp)
204038ee:	cc22                	sw	s0,24(sp)
204038f0:	1000                	addi	s0,sp,32
204038f2:	fea42623          	sw	a0,-20(s0)
204038f6:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
204038fa:	0c800513          	li	a0,200
204038fe:	3c5030ef          	jal	ra,204074c2 <metal_shutdown>

20403902 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20403902:	715d                	addi	sp,sp,-80
20403904:	c686                	sw	ra,76(sp)
20403906:	c496                	sw	t0,72(sp)
20403908:	c29a                	sw	t1,68(sp)
2040390a:	c09e                	sw	t2,64(sp)
2040390c:	de22                	sw	s0,60(sp)
2040390e:	dc2a                	sw	a0,56(sp)
20403910:	da2e                	sw	a1,52(sp)
20403912:	d832                	sw	a2,48(sp)
20403914:	d636                	sw	a3,44(sp)
20403916:	d43a                	sw	a4,40(sp)
20403918:	d23e                	sw	a5,36(sp)
2040391a:	d042                	sw	a6,32(sp)
2040391c:	ce46                	sw	a7,28(sp)
2040391e:	cc72                	sw	t3,24(sp)
20403920:	ca76                	sw	t4,20(sp)
20403922:	c87a                	sw	t5,16(sp)
20403924:	c67e                	sw	t6,12(sp)
20403926:	0880                	addi	s0,sp,80
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20403928:	12c00513          	li	a0,300
2040392c:	397030ef          	jal	ra,204074c2 <metal_shutdown>

20403930 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20403930:	711d                	addi	sp,sp,-96
20403932:	ce86                	sw	ra,92(sp)
20403934:	cc96                	sw	t0,88(sp)
20403936:	ca9a                	sw	t1,84(sp)
20403938:	c89e                	sw	t2,80(sp)
2040393a:	c6a2                	sw	s0,76(sp)
2040393c:	c4aa                	sw	a0,72(sp)
2040393e:	c2ae                	sw	a1,68(sp)
20403940:	c0b2                	sw	a2,64(sp)
20403942:	de36                	sw	a3,60(sp)
20403944:	dc3a                	sw	a4,56(sp)
20403946:	da3e                	sw	a5,52(sp)
20403948:	d842                	sw	a6,48(sp)
2040394a:	d646                	sw	a7,44(sp)
2040394c:	d472                	sw	t3,40(sp)
2040394e:	d276                	sw	t4,36(sp)
20403950:	d07a                	sw	t5,32(sp)
20403952:	ce7e                	sw	t6,28(sp)
20403954:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20403956:	3d3d                	jal	20403794 <__metal_myhart_id>
20403958:	872a                	mv	a4,a0
2040395a:	800007b7          	lui	a5,0x80000
2040395e:	070a                	slli	a4,a4,0x2
20403960:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403964:	97ba                	add	a5,a5,a4
20403966:	439c                	lw	a5,0(a5)
20403968:	faf42623          	sw	a5,-84(s0)
2040396c:	fac42783          	lw	a5,-84(s0)
20403970:	c785                	beqz	a5,20403998 <metal_software_interrupt_vector_handler+0x68>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20403972:	fac42503          	lw	a0,-84(s0)
20403976:	3345                	jal	20403716 <__metal_driver_cpu_interrupt_controller>
20403978:	faa42423          	sw	a0,-88(s0)
2040397c:	fa842783          	lw	a5,-88(s0)
20403980:	0e07a783          	lw	a5,224(a5)
20403984:	faf42223          	sw	a5,-92(s0)
20403988:	fa842783          	lw	a5,-88(s0)
2040398c:	0d87a783          	lw	a5,216(a5)
20403990:	fa442583          	lw	a1,-92(s0)
20403994:	450d                	li	a0,3
20403996:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:130
}
20403998:	0001                	nop
2040399a:	40f6                	lw	ra,92(sp)
2040399c:	42e6                	lw	t0,88(sp)
2040399e:	4356                	lw	t1,84(sp)
204039a0:	43c6                	lw	t2,80(sp)
204039a2:	4436                	lw	s0,76(sp)
204039a4:	4526                	lw	a0,72(sp)
204039a6:	4596                	lw	a1,68(sp)
204039a8:	4606                	lw	a2,64(sp)
204039aa:	56f2                	lw	a3,60(sp)
204039ac:	5762                	lw	a4,56(sp)
204039ae:	57d2                	lw	a5,52(sp)
204039b0:	5842                	lw	a6,48(sp)
204039b2:	58b2                	lw	a7,44(sp)
204039b4:	5e22                	lw	t3,40(sp)
204039b6:	5e92                	lw	t4,36(sp)
204039b8:	5f02                	lw	t5,32(sp)
204039ba:	4ff2                	lw	t6,28(sp)
204039bc:	6125                	addi	sp,sp,96
204039be:	30200073          	mret

204039c2 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
204039c2:	7179                	addi	sp,sp,-48
204039c4:	d606                	sw	ra,44(sp)
204039c6:	d422                	sw	s0,40(sp)
204039c8:	1800                	addi	s0,sp,48
204039ca:	fca42e23          	sw	a0,-36(s0)
204039ce:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
204039d2:	33c9                	jal	20403794 <__metal_myhart_id>
204039d4:	872a                	mv	a4,a0
204039d6:	800007b7          	lui	a5,0x80000
204039da:	070a                	slli	a4,a4,0x2
204039dc:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204039e0:	97ba                	add	a5,a5,a4
204039e2:	439c                	lw	a5,0(a5)
204039e4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
204039e8:	342027f3          	csrr	a5,mcause
204039ec:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
204039f0:	fec42783          	lw	a5,-20(s0)
204039f4:	c795                	beqz	a5,20403a20 <__metal_default_sw_handler+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
204039f6:	fec42503          	lw	a0,-20(s0)
204039fa:	3b31                	jal	20403716 <__metal_driver_cpu_interrupt_controller>
204039fc:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20403a00:	fe842783          	lw	a5,-24(s0)
20403a04:	3ff7f793          	andi	a5,a5,1023
20403a08:	fe442703          	lw	a4,-28(s0)
20403a0c:	0e878793          	addi	a5,a5,232
20403a10:	078a                	slli	a5,a5,0x2
20403a12:	97ba                	add	a5,a5,a4
20403a14:	439c                	lw	a5,0(a5)
20403a16:	fdc42583          	lw	a1,-36(s0)
20403a1a:	fec42503          	lw	a0,-20(s0)
20403a1e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20403a20:	0001                	nop
20403a22:	50b2                	lw	ra,44(sp)
20403a24:	5422                	lw	s0,40(sp)
20403a26:	6145                	addi	sp,sp,48
20403a28:	8082                	ret

20403a2a <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20403a2a:	711d                	addi	sp,sp,-96
20403a2c:	ce86                	sw	ra,92(sp)
20403a2e:	cc96                	sw	t0,88(sp)
20403a30:	ca9a                	sw	t1,84(sp)
20403a32:	c89e                	sw	t2,80(sp)
20403a34:	c6a2                	sw	s0,76(sp)
20403a36:	c4aa                	sw	a0,72(sp)
20403a38:	c2ae                	sw	a1,68(sp)
20403a3a:	c0b2                	sw	a2,64(sp)
20403a3c:	de36                	sw	a3,60(sp)
20403a3e:	dc3a                	sw	a4,56(sp)
20403a40:	da3e                	sw	a5,52(sp)
20403a42:	d842                	sw	a6,48(sp)
20403a44:	d646                	sw	a7,44(sp)
20403a46:	d472                	sw	t3,40(sp)
20403a48:	d276                	sw	t4,36(sp)
20403a4a:	d07a                	sw	t5,32(sp)
20403a4c:	ce7e                	sw	t6,28(sp)
20403a4e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20403a50:	3391                	jal	20403794 <__metal_myhart_id>
20403a52:	872a                	mv	a4,a0
20403a54:	800007b7          	lui	a5,0x80000
20403a58:	070a                	slli	a4,a4,0x2
20403a5a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403a5e:	97ba                	add	a5,a5,a4
20403a60:	439c                	lw	a5,0(a5)
20403a62:	faf42623          	sw	a5,-84(s0)
20403a66:	fac42783          	lw	a5,-84(s0)
20403a6a:	c785                	beqz	a5,20403a92 <metal_timer_interrupt_vector_handler+0x68>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20403a6c:	fac42503          	lw	a0,-84(s0)
20403a70:	315d                	jal	20403716 <__metal_driver_cpu_interrupt_controller>
20403a72:	faa42423          	sw	a0,-88(s0)
20403a76:	fa842783          	lw	a5,-88(s0)
20403a7a:	1407a783          	lw	a5,320(a5)
20403a7e:	faf42223          	sw	a5,-92(s0)
20403a82:	fa842783          	lw	a5,-88(s0)
20403a86:	1387a783          	lw	a5,312(a5)
20403a8a:	fa442583          	lw	a1,-92(s0)
20403a8e:	451d                	li	a0,7
20403a90:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:150
}
20403a92:	0001                	nop
20403a94:	40f6                	lw	ra,92(sp)
20403a96:	42e6                	lw	t0,88(sp)
20403a98:	4356                	lw	t1,84(sp)
20403a9a:	43c6                	lw	t2,80(sp)
20403a9c:	4436                	lw	s0,76(sp)
20403a9e:	4526                	lw	a0,72(sp)
20403aa0:	4596                	lw	a1,68(sp)
20403aa2:	4606                	lw	a2,64(sp)
20403aa4:	56f2                	lw	a3,60(sp)
20403aa6:	5762                	lw	a4,56(sp)
20403aa8:	57d2                	lw	a5,52(sp)
20403aaa:	5842                	lw	a6,48(sp)
20403aac:	58b2                	lw	a7,44(sp)
20403aae:	5e22                	lw	t3,40(sp)
20403ab0:	5e92                	lw	t4,36(sp)
20403ab2:	5f02                	lw	t5,32(sp)
20403ab4:	4ff2                	lw	t6,28(sp)
20403ab6:	6125                	addi	sp,sp,96
20403ab8:	30200073          	mret

20403abc <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403abc:	1101                	addi	sp,sp,-32
20403abe:	ce22                	sw	s0,28(sp)
20403ac0:	1000                	addi	s0,sp,32
20403ac2:	fea42623          	sw	a0,-20(s0)
20403ac6:	feb42423          	sw	a1,-24(s0)
20403aca:	0001                	nop
20403acc:	4472                	lw	s0,28(sp)
20403ace:	6105                	addi	sp,sp,32
20403ad0:	8082                	ret

20403ad2 <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20403ad2:	7179                	addi	sp,sp,-48
20403ad4:	d606                	sw	ra,44(sp)
20403ad6:	d422                	sw	s0,40(sp)
20403ad8:	1800                	addi	s0,sp,48
20403ada:	fca42e23          	sw	a0,-36(s0)
20403ade:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20403ae2:	394d                	jal	20403794 <__metal_myhart_id>
20403ae4:	87aa                	mv	a5,a0
20403ae6:	853e                	mv	a0,a5
20403ae8:	39b5                	jal	20403764 <__metal_driver_cpu_get>
20403aea:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403aee:	fec42503          	lw	a0,-20(s0)
20403af2:	2b2010ef          	jal	ra,20404da4 <__metal_driver_cpu_mtime_get>
20403af6:	fea42023          	sw	a0,-32(s0)
20403afa:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403afe:	fe042703          	lw	a4,-32(s0)
20403b02:	fe442783          	lw	a5,-28(s0)
20403b06:	4529                	li	a0,10
20403b08:	4581                	li	a1,0
20403b0a:	00a70633          	add	a2,a4,a0
20403b0e:	8832                	mv	a6,a2
20403b10:	00e83833          	sltu	a6,a6,a4
20403b14:	00b786b3          	add	a3,a5,a1
20403b18:	00d807b3          	add	a5,a6,a3
20403b1c:	86be                	mv	a3,a5
20403b1e:	8732                	mv	a4,a2
20403b20:	87b6                	mv	a5,a3
20403b22:	85ba                	mv	a1,a4
20403b24:	863e                	mv	a2,a5
20403b26:	fec42503          	lw	a0,-20(s0)
20403b2a:	2e0010ef          	jal	ra,20404e0a <__metal_driver_cpu_mtimecmp_set>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403b2e:	0001                	nop
20403b30:	50b2                	lw	ra,44(sp)
20403b32:	5422                	lw	s0,40(sp)
20403b34:	6145                	addi	sp,sp,48
20403b36:	8082                	ret
	...

20403b80 <__metal_exception_handler>:
__metal_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403b80:	7119                	addi	sp,sp,-128
20403b82:	de86                	sw	ra,124(sp)
20403b84:	dc96                	sw	t0,120(sp)
20403b86:	da9a                	sw	t1,116(sp)
20403b88:	d89e                	sw	t2,112(sp)
20403b8a:	d6a2                	sw	s0,108(sp)
20403b8c:	d4aa                	sw	a0,104(sp)
20403b8e:	d2ae                	sw	a1,100(sp)
20403b90:	d0b2                	sw	a2,96(sp)
20403b92:	ceb6                	sw	a3,92(sp)
20403b94:	ccba                	sw	a4,88(sp)
20403b96:	cabe                	sw	a5,84(sp)
20403b98:	c8c2                	sw	a6,80(sp)
20403b9a:	c6c6                	sw	a7,76(sp)
20403b9c:	c4f2                	sw	t3,72(sp)
20403b9e:	c2f6                	sw	t4,68(sp)
20403ba0:	c0fa                	sw	t5,64(sp)
20403ba2:	de7e                	sw	t6,60(sp)
20403ba4:	0100                	addi	s0,sp,128
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403ba6:	befff0ef          	jal	ra,20403794 <__metal_myhart_id>
20403baa:	872a                	mv	a4,a0
20403bac:	800007b7          	lui	a5,0x80000
20403bb0:	070a                	slli	a4,a4,0x2
20403bb2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403bb6:	97ba                	add	a5,a5,a4
20403bb8:	439c                	lw	a5,0(a5)
20403bba:	faf42623          	sw	a5,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403bbe:	342027f3          	csrr	a5,mcause
20403bc2:	faf42423          	sw	a5,-88(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403bc6:	341027f3          	csrr	a5,mepc
20403bca:	faf42223          	sw	a5,-92(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20403bce:	343027f3          	csrr	a5,mtval
20403bd2:	faf42023          	sw	a5,-96(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403bd6:	305027f3          	csrr	a5,mtvec
20403bda:	f8f42e23          	sw	a5,-100(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20403bde:	fac42783          	lw	a5,-84(s0)
20403be2:	cbfd                	beqz	a5,20403cd8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403be4:	fac42503          	lw	a0,-84(s0)
20403be8:	b2fff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20403bec:	f8a42c23          	sw	a0,-104(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20403bf0:	fa842783          	lw	a5,-88(s0)
20403bf4:	3ff7f793          	andi	a5,a5,1023
20403bf8:	f8f42a23          	sw	a5,-108(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20403bfc:	fa842783          	lw	a5,-88(s0)
20403c00:	0a07de63          	bgez	a5,20403cbc <__metal_exception_handler+0x13c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403c04:	f9442703          	lw	a4,-108(s0)
20403c08:	08000793          	li	a5,128
20403c0c:	02f71263          	bne	a4,a5,20403c30 <__metal_exception_handler+0xb0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403c10:	f9842783          	lw	a5,-104(s0)
20403c14:	3987a783          	lw	a5,920(a5)
20403c18:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20403c1c:	f9842783          	lw	a5,-104(s0)
20403c20:	3907a783          	lw	a5,912(a5)
20403c24:	f8c42583          	lw	a1,-116(s0)
20403c28:	f9442503          	lw	a0,-108(s0)
20403c2c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20403c2e:	a06d                	j	20403cd8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403c30:	f9442703          	lw	a4,-108(s0)
20403c34:	47ad                	li	a5,11
20403c36:	00e7d763          	bge	a5,a4,20403c44 <__metal_exception_handler+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20403c3a:	f9c42783          	lw	a5,-100(s0)
20403c3e:	03f7f793          	andi	a5,a5,63
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403c42:	ef9d                	bnez	a5,20403c80 <__metal_exception_handler+0x100>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20403c44:	f9842683          	lw	a3,-104(s0)
20403c48:	f9442703          	lw	a4,-108(s0)
20403c4c:	87ba                	mv	a5,a4
20403c4e:	0786                	slli	a5,a5,0x1
20403c50:	97ba                	add	a5,a5,a4
20403c52:	078e                	slli	a5,a5,0x3
20403c54:	97b6                	add	a5,a5,a3
20403c56:	0987a783          	lw	a5,152(a5)
20403c5a:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20403c5e:	f9842683          	lw	a3,-104(s0)
20403c62:	f9442703          	lw	a4,-108(s0)
20403c66:	87ba                	mv	a5,a4
20403c68:	0786                	slli	a5,a5,0x1
20403c6a:	97ba                	add	a5,a5,a4
20403c6c:	078e                	slli	a5,a5,0x3
20403c6e:	97b6                	add	a5,a5,a3
20403c70:	0907a783          	lw	a5,144(a5)
20403c74:	f8c42583          	lw	a1,-116(s0)
20403c78:	f9442503          	lw	a0,-108(s0)
20403c7c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20403c7e:	a8a9                	j	20403cd8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403c80:	f9c42783          	lw	a5,-100(s0)
20403c84:	03f7f713          	andi	a4,a5,63
20403c88:	4789                	li	a5,2
20403c8a:	04f71763          	bne	a4,a5,20403cd8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20403c8e:	307027f3          	csrr	a5,mtvt
20403c92:	f8f42823          	sw	a5,-112(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403c96:	f9842783          	lw	a5,-104(s0)
20403c9a:	0dc7a783          	lw	a5,220(a5)
20403c9e:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403ca2:	f9042783          	lw	a5,-112(s0)
20403ca6:	439c                	lw	a5,0(a5)
20403ca8:	f8f42423          	sw	a5,-120(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20403cac:	f8842783          	lw	a5,-120(s0)
20403cb0:	f8c42583          	lw	a1,-116(s0)
20403cb4:	f9442503          	lw	a0,-108(s0)
20403cb8:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20403cba:	a839                	j	20403cd8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20403cbc:	f9842703          	lw	a4,-104(s0)
20403cc0:	f9442783          	lw	a5,-108(s0)
20403cc4:	0e878793          	addi	a5,a5,232
20403cc8:	078a                	slli	a5,a5,0x2
20403cca:	97ba                	add	a5,a5,a4
20403ccc:	439c                	lw	a5,0(a5)
20403cce:	f9442583          	lw	a1,-108(s0)
20403cd2:	fac42503          	lw	a0,-84(s0)
20403cd6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403cd8:	50f6                	lw	ra,124(sp)
20403cda:	52e6                	lw	t0,120(sp)
20403cdc:	5356                	lw	t1,116(sp)
20403cde:	53c6                	lw	t2,112(sp)
20403ce0:	5436                	lw	s0,108(sp)
20403ce2:	5526                	lw	a0,104(sp)
20403ce4:	5596                	lw	a1,100(sp)
20403ce6:	5606                	lw	a2,96(sp)
20403ce8:	46f6                	lw	a3,92(sp)
20403cea:	4766                	lw	a4,88(sp)
20403cec:	47d6                	lw	a5,84(sp)
20403cee:	4846                	lw	a6,80(sp)
20403cf0:	48b6                	lw	a7,76(sp)
20403cf2:	4e26                	lw	t3,72(sp)
20403cf4:	4e96                	lw	t4,68(sp)
20403cf6:	4f06                	lw	t5,64(sp)
20403cf8:	5ff2                	lw	t6,60(sp)
20403cfa:	6109                	addi	sp,sp,128
20403cfc:	30200073          	mret
	...

20403d7a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20403d7a:	711d                	addi	sp,sp,-96
20403d7c:	ce86                	sw	ra,92(sp)
20403d7e:	cc96                	sw	t0,88(sp)
20403d80:	ca9a                	sw	t1,84(sp)
20403d82:	c89e                	sw	t2,80(sp)
20403d84:	c6a2                	sw	s0,76(sp)
20403d86:	c4aa                	sw	a0,72(sp)
20403d88:	c2ae                	sw	a1,68(sp)
20403d8a:	c0b2                	sw	a2,64(sp)
20403d8c:	de36                	sw	a3,60(sp)
20403d8e:	dc3a                	sw	a4,56(sp)
20403d90:	da3e                	sw	a5,52(sp)
20403d92:	d842                	sw	a6,48(sp)
20403d94:	d646                	sw	a7,44(sp)
20403d96:	d472                	sw	t3,40(sp)
20403d98:	d276                	sw	t4,36(sp)
20403d9a:	d07a                	sw	t5,32(sp)
20403d9c:	ce7e                	sw	t6,28(sp)
20403d9e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403da0:	9f5ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20403da4:	872a                	mv	a4,a0
20403da6:	800007b7          	lui	a5,0x80000
20403daa:	070a                	slli	a4,a4,0x2
20403dac:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403db0:	97ba                	add	a5,a5,a4
20403db2:	439c                	lw	a5,0(a5)
20403db4:	faf42623          	sw	a5,-84(s0)
20403db8:	fac42783          	lw	a5,-84(s0)
20403dbc:	c78d                	beqz	a5,20403de6 <metal_lc0_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20403dbe:	fac42503          	lw	a0,-84(s0)
20403dc2:	955ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20403dc6:	faa42423          	sw	a0,-88(s0)
20403dca:	fa842783          	lw	a5,-88(s0)
20403dce:	2187a783          	lw	a5,536(a5)
20403dd2:	faf42223          	sw	a5,-92(s0)
20403dd6:	fa842783          	lw	a5,-88(s0)
20403dda:	2107a783          	lw	a5,528(a5)
20403dde:	fa442583          	lw	a1,-92(s0)
20403de2:	4541                	li	a0,16
20403de4:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403de6:	0001                	nop
20403de8:	40f6                	lw	ra,92(sp)
20403dea:	42e6                	lw	t0,88(sp)
20403dec:	4356                	lw	t1,84(sp)
20403dee:	43c6                	lw	t2,80(sp)
20403df0:	4436                	lw	s0,76(sp)
20403df2:	4526                	lw	a0,72(sp)
20403df4:	4596                	lw	a1,68(sp)
20403df6:	4606                	lw	a2,64(sp)
20403df8:	56f2                	lw	a3,60(sp)
20403dfa:	5762                	lw	a4,56(sp)
20403dfc:	57d2                	lw	a5,52(sp)
20403dfe:	5842                	lw	a6,48(sp)
20403e00:	58b2                	lw	a7,44(sp)
20403e02:	5e22                	lw	t3,40(sp)
20403e04:	5e92                	lw	t4,36(sp)
20403e06:	5f02                	lw	t5,32(sp)
20403e08:	4ff2                	lw	t6,28(sp)
20403e0a:	6125                	addi	sp,sp,96
20403e0c:	30200073          	mret

20403e10 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403e10:	711d                	addi	sp,sp,-96
20403e12:	ce86                	sw	ra,92(sp)
20403e14:	cc96                	sw	t0,88(sp)
20403e16:	ca9a                	sw	t1,84(sp)
20403e18:	c89e                	sw	t2,80(sp)
20403e1a:	c6a2                	sw	s0,76(sp)
20403e1c:	c4aa                	sw	a0,72(sp)
20403e1e:	c2ae                	sw	a1,68(sp)
20403e20:	c0b2                	sw	a2,64(sp)
20403e22:	de36                	sw	a3,60(sp)
20403e24:	dc3a                	sw	a4,56(sp)
20403e26:	da3e                	sw	a5,52(sp)
20403e28:	d842                	sw	a6,48(sp)
20403e2a:	d646                	sw	a7,44(sp)
20403e2c:	d472                	sw	t3,40(sp)
20403e2e:	d276                	sw	t4,36(sp)
20403e30:	d07a                	sw	t5,32(sp)
20403e32:	ce7e                	sw	t6,28(sp)
20403e34:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20403e36:	95fff0ef          	jal	ra,20403794 <__metal_myhart_id>
20403e3a:	872a                	mv	a4,a0
20403e3c:	800007b7          	lui	a5,0x80000
20403e40:	070a                	slli	a4,a4,0x2
20403e42:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403e46:	97ba                	add	a5,a5,a4
20403e48:	439c                	lw	a5,0(a5)
20403e4a:	faf42623          	sw	a5,-84(s0)
20403e4e:	fac42783          	lw	a5,-84(s0)
20403e52:	c78d                	beqz	a5,20403e7c <metal_lc1_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20403e54:	fac42503          	lw	a0,-84(s0)
20403e58:	8bfff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20403e5c:	faa42423          	sw	a0,-88(s0)
20403e60:	fa842783          	lw	a5,-88(s0)
20403e64:	2307a783          	lw	a5,560(a5)
20403e68:	faf42223          	sw	a5,-92(s0)
20403e6c:	fa842783          	lw	a5,-88(s0)
20403e70:	2287a783          	lw	a5,552(a5)
20403e74:	fa442583          	lw	a1,-92(s0)
20403e78:	4545                	li	a0,17
20403e7a:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:221
}
20403e7c:	0001                	nop
20403e7e:	40f6                	lw	ra,92(sp)
20403e80:	42e6                	lw	t0,88(sp)
20403e82:	4356                	lw	t1,84(sp)
20403e84:	43c6                	lw	t2,80(sp)
20403e86:	4436                	lw	s0,76(sp)
20403e88:	4526                	lw	a0,72(sp)
20403e8a:	4596                	lw	a1,68(sp)
20403e8c:	4606                	lw	a2,64(sp)
20403e8e:	56f2                	lw	a3,60(sp)
20403e90:	5762                	lw	a4,56(sp)
20403e92:	57d2                	lw	a5,52(sp)
20403e94:	5842                	lw	a6,48(sp)
20403e96:	58b2                	lw	a7,44(sp)
20403e98:	5e22                	lw	t3,40(sp)
20403e9a:	5e92                	lw	t4,36(sp)
20403e9c:	5f02                	lw	t5,32(sp)
20403e9e:	4ff2                	lw	t6,28(sp)
20403ea0:	6125                	addi	sp,sp,96
20403ea2:	30200073          	mret

20403ea6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403ea6:	711d                	addi	sp,sp,-96
20403ea8:	ce86                	sw	ra,92(sp)
20403eaa:	cc96                	sw	t0,88(sp)
20403eac:	ca9a                	sw	t1,84(sp)
20403eae:	c89e                	sw	t2,80(sp)
20403eb0:	c6a2                	sw	s0,76(sp)
20403eb2:	c4aa                	sw	a0,72(sp)
20403eb4:	c2ae                	sw	a1,68(sp)
20403eb6:	c0b2                	sw	a2,64(sp)
20403eb8:	de36                	sw	a3,60(sp)
20403eba:	dc3a                	sw	a4,56(sp)
20403ebc:	da3e                	sw	a5,52(sp)
20403ebe:	d842                	sw	a6,48(sp)
20403ec0:	d646                	sw	a7,44(sp)
20403ec2:	d472                	sw	t3,40(sp)
20403ec4:	d276                	sw	t4,36(sp)
20403ec6:	d07a                	sw	t5,32(sp)
20403ec8:	ce7e                	sw	t6,28(sp)
20403eca:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20403ecc:	8c9ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20403ed0:	872a                	mv	a4,a0
20403ed2:	800007b7          	lui	a5,0x80000
20403ed6:	070a                	slli	a4,a4,0x2
20403ed8:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403edc:	97ba                	add	a5,a5,a4
20403ede:	439c                	lw	a5,0(a5)
20403ee0:	faf42623          	sw	a5,-84(s0)
20403ee4:	fac42783          	lw	a5,-84(s0)
20403ee8:	c78d                	beqz	a5,20403f12 <metal_lc2_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20403eea:	fac42503          	lw	a0,-84(s0)
20403eee:	829ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20403ef2:	faa42423          	sw	a0,-88(s0)
20403ef6:	fa842783          	lw	a5,-88(s0)
20403efa:	2487a783          	lw	a5,584(a5)
20403efe:	faf42223          	sw	a5,-92(s0)
20403f02:	fa842783          	lw	a5,-88(s0)
20403f06:	2407a783          	lw	a5,576(a5)
20403f0a:	fa442583          	lw	a1,-92(s0)
20403f0e:	4549                	li	a0,18
20403f10:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403f12:	0001                	nop
20403f14:	40f6                	lw	ra,92(sp)
20403f16:	42e6                	lw	t0,88(sp)
20403f18:	4356                	lw	t1,84(sp)
20403f1a:	43c6                	lw	t2,80(sp)
20403f1c:	4436                	lw	s0,76(sp)
20403f1e:	4526                	lw	a0,72(sp)
20403f20:	4596                	lw	a1,68(sp)
20403f22:	4606                	lw	a2,64(sp)
20403f24:	56f2                	lw	a3,60(sp)
20403f26:	5762                	lw	a4,56(sp)
20403f28:	57d2                	lw	a5,52(sp)
20403f2a:	5842                	lw	a6,48(sp)
20403f2c:	58b2                	lw	a7,44(sp)
20403f2e:	5e22                	lw	t3,40(sp)
20403f30:	5e92                	lw	t4,36(sp)
20403f32:	5f02                	lw	t5,32(sp)
20403f34:	4ff2                	lw	t6,28(sp)
20403f36:	6125                	addi	sp,sp,96
20403f38:	30200073          	mret

20403f3c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20403f3c:	711d                	addi	sp,sp,-96
20403f3e:	ce86                	sw	ra,92(sp)
20403f40:	cc96                	sw	t0,88(sp)
20403f42:	ca9a                	sw	t1,84(sp)
20403f44:	c89e                	sw	t2,80(sp)
20403f46:	c6a2                	sw	s0,76(sp)
20403f48:	c4aa                	sw	a0,72(sp)
20403f4a:	c2ae                	sw	a1,68(sp)
20403f4c:	c0b2                	sw	a2,64(sp)
20403f4e:	de36                	sw	a3,60(sp)
20403f50:	dc3a                	sw	a4,56(sp)
20403f52:	da3e                	sw	a5,52(sp)
20403f54:	d842                	sw	a6,48(sp)
20403f56:	d646                	sw	a7,44(sp)
20403f58:	d472                	sw	t3,40(sp)
20403f5a:	d276                	sw	t4,36(sp)
20403f5c:	d07a                	sw	t5,32(sp)
20403f5e:	ce7e                	sw	t6,28(sp)
20403f60:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20403f62:	833ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20403f66:	872a                	mv	a4,a0
20403f68:	800007b7          	lui	a5,0x80000
20403f6c:	070a                	slli	a4,a4,0x2
20403f6e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403f72:	97ba                	add	a5,a5,a4
20403f74:	439c                	lw	a5,0(a5)
20403f76:	faf42623          	sw	a5,-84(s0)
20403f7a:	fac42783          	lw	a5,-84(s0)
20403f7e:	c78d                	beqz	a5,20403fa8 <metal_lc3_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20403f80:	fac42503          	lw	a0,-84(s0)
20403f84:	f92ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20403f88:	faa42423          	sw	a0,-88(s0)
20403f8c:	fa842783          	lw	a5,-88(s0)
20403f90:	2607a783          	lw	a5,608(a5)
20403f94:	faf42223          	sw	a5,-92(s0)
20403f98:	fa842783          	lw	a5,-88(s0)
20403f9c:	2587a783          	lw	a5,600(a5)
20403fa0:	fa442583          	lw	a1,-92(s0)
20403fa4:	454d                	li	a0,19
20403fa6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403fa8:	0001                	nop
20403faa:	40f6                	lw	ra,92(sp)
20403fac:	42e6                	lw	t0,88(sp)
20403fae:	4356                	lw	t1,84(sp)
20403fb0:	43c6                	lw	t2,80(sp)
20403fb2:	4436                	lw	s0,76(sp)
20403fb4:	4526                	lw	a0,72(sp)
20403fb6:	4596                	lw	a1,68(sp)
20403fb8:	4606                	lw	a2,64(sp)
20403fba:	56f2                	lw	a3,60(sp)
20403fbc:	5762                	lw	a4,56(sp)
20403fbe:	57d2                	lw	a5,52(sp)
20403fc0:	5842                	lw	a6,48(sp)
20403fc2:	58b2                	lw	a7,44(sp)
20403fc4:	5e22                	lw	t3,40(sp)
20403fc6:	5e92                	lw	t4,36(sp)
20403fc8:	5f02                	lw	t5,32(sp)
20403fca:	4ff2                	lw	t6,28(sp)
20403fcc:	6125                	addi	sp,sp,96
20403fce:	30200073          	mret

20403fd2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20403fd2:	711d                	addi	sp,sp,-96
20403fd4:	ce86                	sw	ra,92(sp)
20403fd6:	cc96                	sw	t0,88(sp)
20403fd8:	ca9a                	sw	t1,84(sp)
20403fda:	c89e                	sw	t2,80(sp)
20403fdc:	c6a2                	sw	s0,76(sp)
20403fde:	c4aa                	sw	a0,72(sp)
20403fe0:	c2ae                	sw	a1,68(sp)
20403fe2:	c0b2                	sw	a2,64(sp)
20403fe4:	de36                	sw	a3,60(sp)
20403fe6:	dc3a                	sw	a4,56(sp)
20403fe8:	da3e                	sw	a5,52(sp)
20403fea:	d842                	sw	a6,48(sp)
20403fec:	d646                	sw	a7,44(sp)
20403fee:	d472                	sw	t3,40(sp)
20403ff0:	d276                	sw	t4,36(sp)
20403ff2:	d07a                	sw	t5,32(sp)
20403ff4:	ce7e                	sw	t6,28(sp)
20403ff6:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403ff8:	f9cff0ef          	jal	ra,20403794 <__metal_myhart_id>
20403ffc:	872a                	mv	a4,a0
20403ffe:	800007b7          	lui	a5,0x80000
20404002:	070a                	slli	a4,a4,0x2
20404004:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404008:	97ba                	add	a5,a5,a4
2040400a:	439c                	lw	a5,0(a5)
2040400c:	faf42623          	sw	a5,-84(s0)
20404010:	fac42783          	lw	a5,-84(s0)
20404014:	c78d                	beqz	a5,2040403e <metal_lc4_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20404016:	fac42503          	lw	a0,-84(s0)
2040401a:	efcff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
2040401e:	faa42423          	sw	a0,-88(s0)
20404022:	fa842783          	lw	a5,-88(s0)
20404026:	2787a783          	lw	a5,632(a5)
2040402a:	faf42223          	sw	a5,-92(s0)
2040402e:	fa842783          	lw	a5,-88(s0)
20404032:	2707a783          	lw	a5,624(a5)
20404036:	fa442583          	lw	a1,-92(s0)
2040403a:	4551                	li	a0,20
2040403c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:236
}
2040403e:	0001                	nop
20404040:	40f6                	lw	ra,92(sp)
20404042:	42e6                	lw	t0,88(sp)
20404044:	4356                	lw	t1,84(sp)
20404046:	43c6                	lw	t2,80(sp)
20404048:	4436                	lw	s0,76(sp)
2040404a:	4526                	lw	a0,72(sp)
2040404c:	4596                	lw	a1,68(sp)
2040404e:	4606                	lw	a2,64(sp)
20404050:	56f2                	lw	a3,60(sp)
20404052:	5762                	lw	a4,56(sp)
20404054:	57d2                	lw	a5,52(sp)
20404056:	5842                	lw	a6,48(sp)
20404058:	58b2                	lw	a7,44(sp)
2040405a:	5e22                	lw	t3,40(sp)
2040405c:	5e92                	lw	t4,36(sp)
2040405e:	5f02                	lw	t5,32(sp)
20404060:	4ff2                	lw	t6,28(sp)
20404062:	6125                	addi	sp,sp,96
20404064:	30200073          	mret

20404068 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20404068:	711d                	addi	sp,sp,-96
2040406a:	ce86                	sw	ra,92(sp)
2040406c:	cc96                	sw	t0,88(sp)
2040406e:	ca9a                	sw	t1,84(sp)
20404070:	c89e                	sw	t2,80(sp)
20404072:	c6a2                	sw	s0,76(sp)
20404074:	c4aa                	sw	a0,72(sp)
20404076:	c2ae                	sw	a1,68(sp)
20404078:	c0b2                	sw	a2,64(sp)
2040407a:	de36                	sw	a3,60(sp)
2040407c:	dc3a                	sw	a4,56(sp)
2040407e:	da3e                	sw	a5,52(sp)
20404080:	d842                	sw	a6,48(sp)
20404082:	d646                	sw	a7,44(sp)
20404084:	d472                	sw	t3,40(sp)
20404086:	d276                	sw	t4,36(sp)
20404088:	d07a                	sw	t5,32(sp)
2040408a:	ce7e                	sw	t6,28(sp)
2040408c:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040408e:	f06ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20404092:	872a                	mv	a4,a0
20404094:	800007b7          	lui	a5,0x80000
20404098:	070a                	slli	a4,a4,0x2
2040409a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040409e:	97ba                	add	a5,a5,a4
204040a0:	439c                	lw	a5,0(a5)
204040a2:	faf42623          	sw	a5,-84(s0)
204040a6:	fac42783          	lw	a5,-84(s0)
204040aa:	c78d                	beqz	a5,204040d4 <metal_lc5_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
204040ac:	fac42503          	lw	a0,-84(s0)
204040b0:	e66ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
204040b4:	faa42423          	sw	a0,-88(s0)
204040b8:	fa842783          	lw	a5,-88(s0)
204040bc:	2907a783          	lw	a5,656(a5)
204040c0:	faf42223          	sw	a5,-92(s0)
204040c4:	fa842783          	lw	a5,-88(s0)
204040c8:	2887a783          	lw	a5,648(a5)
204040cc:	fa442583          	lw	a1,-92(s0)
204040d0:	4555                	li	a0,21
204040d2:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:241
}
204040d4:	0001                	nop
204040d6:	40f6                	lw	ra,92(sp)
204040d8:	42e6                	lw	t0,88(sp)
204040da:	4356                	lw	t1,84(sp)
204040dc:	43c6                	lw	t2,80(sp)
204040de:	4436                	lw	s0,76(sp)
204040e0:	4526                	lw	a0,72(sp)
204040e2:	4596                	lw	a1,68(sp)
204040e4:	4606                	lw	a2,64(sp)
204040e6:	56f2                	lw	a3,60(sp)
204040e8:	5762                	lw	a4,56(sp)
204040ea:	57d2                	lw	a5,52(sp)
204040ec:	5842                	lw	a6,48(sp)
204040ee:	58b2                	lw	a7,44(sp)
204040f0:	5e22                	lw	t3,40(sp)
204040f2:	5e92                	lw	t4,36(sp)
204040f4:	5f02                	lw	t5,32(sp)
204040f6:	4ff2                	lw	t6,28(sp)
204040f8:	6125                	addi	sp,sp,96
204040fa:	30200073          	mret

204040fe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
204040fe:	711d                	addi	sp,sp,-96
20404100:	ce86                	sw	ra,92(sp)
20404102:	cc96                	sw	t0,88(sp)
20404104:	ca9a                	sw	t1,84(sp)
20404106:	c89e                	sw	t2,80(sp)
20404108:	c6a2                	sw	s0,76(sp)
2040410a:	c4aa                	sw	a0,72(sp)
2040410c:	c2ae                	sw	a1,68(sp)
2040410e:	c0b2                	sw	a2,64(sp)
20404110:	de36                	sw	a3,60(sp)
20404112:	dc3a                	sw	a4,56(sp)
20404114:	da3e                	sw	a5,52(sp)
20404116:	d842                	sw	a6,48(sp)
20404118:	d646                	sw	a7,44(sp)
2040411a:	d472                	sw	t3,40(sp)
2040411c:	d276                	sw	t4,36(sp)
2040411e:	d07a                	sw	t5,32(sp)
20404120:	ce7e                	sw	t6,28(sp)
20404122:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20404124:	e70ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20404128:	872a                	mv	a4,a0
2040412a:	800007b7          	lui	a5,0x80000
2040412e:	070a                	slli	a4,a4,0x2
20404130:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404134:	97ba                	add	a5,a5,a4
20404136:	439c                	lw	a5,0(a5)
20404138:	faf42623          	sw	a5,-84(s0)
2040413c:	fac42783          	lw	a5,-84(s0)
20404140:	c78d                	beqz	a5,2040416a <metal_lc6_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20404142:	fac42503          	lw	a0,-84(s0)
20404146:	dd0ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
2040414a:	faa42423          	sw	a0,-88(s0)
2040414e:	fa842783          	lw	a5,-88(s0)
20404152:	2a87a783          	lw	a5,680(a5)
20404156:	faf42223          	sw	a5,-92(s0)
2040415a:	fa842783          	lw	a5,-88(s0)
2040415e:	2a07a783          	lw	a5,672(a5)
20404162:	fa442583          	lw	a1,-92(s0)
20404166:	4559                	li	a0,22
20404168:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:246
}
2040416a:	0001                	nop
2040416c:	40f6                	lw	ra,92(sp)
2040416e:	42e6                	lw	t0,88(sp)
20404170:	4356                	lw	t1,84(sp)
20404172:	43c6                	lw	t2,80(sp)
20404174:	4436                	lw	s0,76(sp)
20404176:	4526                	lw	a0,72(sp)
20404178:	4596                	lw	a1,68(sp)
2040417a:	4606                	lw	a2,64(sp)
2040417c:	56f2                	lw	a3,60(sp)
2040417e:	5762                	lw	a4,56(sp)
20404180:	57d2                	lw	a5,52(sp)
20404182:	5842                	lw	a6,48(sp)
20404184:	58b2                	lw	a7,44(sp)
20404186:	5e22                	lw	t3,40(sp)
20404188:	5e92                	lw	t4,36(sp)
2040418a:	5f02                	lw	t5,32(sp)
2040418c:	4ff2                	lw	t6,28(sp)
2040418e:	6125                	addi	sp,sp,96
20404190:	30200073          	mret

20404194 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20404194:	711d                	addi	sp,sp,-96
20404196:	ce86                	sw	ra,92(sp)
20404198:	cc96                	sw	t0,88(sp)
2040419a:	ca9a                	sw	t1,84(sp)
2040419c:	c89e                	sw	t2,80(sp)
2040419e:	c6a2                	sw	s0,76(sp)
204041a0:	c4aa                	sw	a0,72(sp)
204041a2:	c2ae                	sw	a1,68(sp)
204041a4:	c0b2                	sw	a2,64(sp)
204041a6:	de36                	sw	a3,60(sp)
204041a8:	dc3a                	sw	a4,56(sp)
204041aa:	da3e                	sw	a5,52(sp)
204041ac:	d842                	sw	a6,48(sp)
204041ae:	d646                	sw	a7,44(sp)
204041b0:	d472                	sw	t3,40(sp)
204041b2:	d276                	sw	t4,36(sp)
204041b4:	d07a                	sw	t5,32(sp)
204041b6:	ce7e                	sw	t6,28(sp)
204041b8:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
204041ba:	ddaff0ef          	jal	ra,20403794 <__metal_myhart_id>
204041be:	872a                	mv	a4,a0
204041c0:	800007b7          	lui	a5,0x80000
204041c4:	070a                	slli	a4,a4,0x2
204041c6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204041ca:	97ba                	add	a5,a5,a4
204041cc:	439c                	lw	a5,0(a5)
204041ce:	faf42623          	sw	a5,-84(s0)
204041d2:	fac42783          	lw	a5,-84(s0)
204041d6:	c78d                	beqz	a5,20404200 <metal_lc7_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
204041d8:	fac42503          	lw	a0,-84(s0)
204041dc:	d3aff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
204041e0:	faa42423          	sw	a0,-88(s0)
204041e4:	fa842783          	lw	a5,-88(s0)
204041e8:	2c07a783          	lw	a5,704(a5)
204041ec:	faf42223          	sw	a5,-92(s0)
204041f0:	fa842783          	lw	a5,-88(s0)
204041f4:	2b87a783          	lw	a5,696(a5)
204041f8:	fa442583          	lw	a1,-92(s0)
204041fc:	455d                	li	a0,23
204041fe:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:251
}
20404200:	0001                	nop
20404202:	40f6                	lw	ra,92(sp)
20404204:	42e6                	lw	t0,88(sp)
20404206:	4356                	lw	t1,84(sp)
20404208:	43c6                	lw	t2,80(sp)
2040420a:	4436                	lw	s0,76(sp)
2040420c:	4526                	lw	a0,72(sp)
2040420e:	4596                	lw	a1,68(sp)
20404210:	4606                	lw	a2,64(sp)
20404212:	56f2                	lw	a3,60(sp)
20404214:	5762                	lw	a4,56(sp)
20404216:	57d2                	lw	a5,52(sp)
20404218:	5842                	lw	a6,48(sp)
2040421a:	58b2                	lw	a7,44(sp)
2040421c:	5e22                	lw	t3,40(sp)
2040421e:	5e92                	lw	t4,36(sp)
20404220:	5f02                	lw	t5,32(sp)
20404222:	4ff2                	lw	t6,28(sp)
20404224:	6125                	addi	sp,sp,96
20404226:	30200073          	mret

2040422a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
2040422a:	711d                	addi	sp,sp,-96
2040422c:	ce86                	sw	ra,92(sp)
2040422e:	cc96                	sw	t0,88(sp)
20404230:	ca9a                	sw	t1,84(sp)
20404232:	c89e                	sw	t2,80(sp)
20404234:	c6a2                	sw	s0,76(sp)
20404236:	c4aa                	sw	a0,72(sp)
20404238:	c2ae                	sw	a1,68(sp)
2040423a:	c0b2                	sw	a2,64(sp)
2040423c:	de36                	sw	a3,60(sp)
2040423e:	dc3a                	sw	a4,56(sp)
20404240:	da3e                	sw	a5,52(sp)
20404242:	d842                	sw	a6,48(sp)
20404244:	d646                	sw	a7,44(sp)
20404246:	d472                	sw	t3,40(sp)
20404248:	d276                	sw	t4,36(sp)
2040424a:	d07a                	sw	t5,32(sp)
2040424c:	ce7e                	sw	t6,28(sp)
2040424e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20404250:	d44ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20404254:	872a                	mv	a4,a0
20404256:	800007b7          	lui	a5,0x80000
2040425a:	070a                	slli	a4,a4,0x2
2040425c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404260:	97ba                	add	a5,a5,a4
20404262:	439c                	lw	a5,0(a5)
20404264:	faf42623          	sw	a5,-84(s0)
20404268:	fac42783          	lw	a5,-84(s0)
2040426c:	c78d                	beqz	a5,20404296 <metal_lc8_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
2040426e:	fac42503          	lw	a0,-84(s0)
20404272:	ca4ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404276:	faa42423          	sw	a0,-88(s0)
2040427a:	fa842783          	lw	a5,-88(s0)
2040427e:	2d87a783          	lw	a5,728(a5)
20404282:	faf42223          	sw	a5,-92(s0)
20404286:	fa842783          	lw	a5,-88(s0)
2040428a:	2d07a783          	lw	a5,720(a5)
2040428e:	fa442583          	lw	a1,-92(s0)
20404292:	4561                	li	a0,24
20404294:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404296:	0001                	nop
20404298:	40f6                	lw	ra,92(sp)
2040429a:	42e6                	lw	t0,88(sp)
2040429c:	4356                	lw	t1,84(sp)
2040429e:	43c6                	lw	t2,80(sp)
204042a0:	4436                	lw	s0,76(sp)
204042a2:	4526                	lw	a0,72(sp)
204042a4:	4596                	lw	a1,68(sp)
204042a6:	4606                	lw	a2,64(sp)
204042a8:	56f2                	lw	a3,60(sp)
204042aa:	5762                	lw	a4,56(sp)
204042ac:	57d2                	lw	a5,52(sp)
204042ae:	5842                	lw	a6,48(sp)
204042b0:	58b2                	lw	a7,44(sp)
204042b2:	5e22                	lw	t3,40(sp)
204042b4:	5e92                	lw	t4,36(sp)
204042b6:	5f02                	lw	t5,32(sp)
204042b8:	4ff2                	lw	t6,28(sp)
204042ba:	6125                	addi	sp,sp,96
204042bc:	30200073          	mret

204042c0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
204042c0:	711d                	addi	sp,sp,-96
204042c2:	ce86                	sw	ra,92(sp)
204042c4:	cc96                	sw	t0,88(sp)
204042c6:	ca9a                	sw	t1,84(sp)
204042c8:	c89e                	sw	t2,80(sp)
204042ca:	c6a2                	sw	s0,76(sp)
204042cc:	c4aa                	sw	a0,72(sp)
204042ce:	c2ae                	sw	a1,68(sp)
204042d0:	c0b2                	sw	a2,64(sp)
204042d2:	de36                	sw	a3,60(sp)
204042d4:	dc3a                	sw	a4,56(sp)
204042d6:	da3e                	sw	a5,52(sp)
204042d8:	d842                	sw	a6,48(sp)
204042da:	d646                	sw	a7,44(sp)
204042dc:	d472                	sw	t3,40(sp)
204042de:	d276                	sw	t4,36(sp)
204042e0:	d07a                	sw	t5,32(sp)
204042e2:	ce7e                	sw	t6,28(sp)
204042e4:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
204042e6:	caeff0ef          	jal	ra,20403794 <__metal_myhart_id>
204042ea:	872a                	mv	a4,a0
204042ec:	800007b7          	lui	a5,0x80000
204042f0:	070a                	slli	a4,a4,0x2
204042f2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204042f6:	97ba                	add	a5,a5,a4
204042f8:	439c                	lw	a5,0(a5)
204042fa:	faf42623          	sw	a5,-84(s0)
204042fe:	fac42783          	lw	a5,-84(s0)
20404302:	c78d                	beqz	a5,2040432c <metal_lc9_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404304:	fac42503          	lw	a0,-84(s0)
20404308:	c0eff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
2040430c:	faa42423          	sw	a0,-88(s0)
20404310:	fa842783          	lw	a5,-88(s0)
20404314:	2f07a783          	lw	a5,752(a5)
20404318:	faf42223          	sw	a5,-92(s0)
2040431c:	fa842783          	lw	a5,-88(s0)
20404320:	2e87a783          	lw	a5,744(a5)
20404324:	fa442583          	lw	a1,-92(s0)
20404328:	4565                	li	a0,25
2040432a:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:261
}
2040432c:	0001                	nop
2040432e:	40f6                	lw	ra,92(sp)
20404330:	42e6                	lw	t0,88(sp)
20404332:	4356                	lw	t1,84(sp)
20404334:	43c6                	lw	t2,80(sp)
20404336:	4436                	lw	s0,76(sp)
20404338:	4526                	lw	a0,72(sp)
2040433a:	4596                	lw	a1,68(sp)
2040433c:	4606                	lw	a2,64(sp)
2040433e:	56f2                	lw	a3,60(sp)
20404340:	5762                	lw	a4,56(sp)
20404342:	57d2                	lw	a5,52(sp)
20404344:	5842                	lw	a6,48(sp)
20404346:	58b2                	lw	a7,44(sp)
20404348:	5e22                	lw	t3,40(sp)
2040434a:	5e92                	lw	t4,36(sp)
2040434c:	5f02                	lw	t5,32(sp)
2040434e:	4ff2                	lw	t6,28(sp)
20404350:	6125                	addi	sp,sp,96
20404352:	30200073          	mret

20404356 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20404356:	711d                	addi	sp,sp,-96
20404358:	ce86                	sw	ra,92(sp)
2040435a:	cc96                	sw	t0,88(sp)
2040435c:	ca9a                	sw	t1,84(sp)
2040435e:	c89e                	sw	t2,80(sp)
20404360:	c6a2                	sw	s0,76(sp)
20404362:	c4aa                	sw	a0,72(sp)
20404364:	c2ae                	sw	a1,68(sp)
20404366:	c0b2                	sw	a2,64(sp)
20404368:	de36                	sw	a3,60(sp)
2040436a:	dc3a                	sw	a4,56(sp)
2040436c:	da3e                	sw	a5,52(sp)
2040436e:	d842                	sw	a6,48(sp)
20404370:	d646                	sw	a7,44(sp)
20404372:	d472                	sw	t3,40(sp)
20404374:	d276                	sw	t4,36(sp)
20404376:	d07a                	sw	t5,32(sp)
20404378:	ce7e                	sw	t6,28(sp)
2040437a:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
2040437c:	c18ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20404380:	872a                	mv	a4,a0
20404382:	800007b7          	lui	a5,0x80000
20404386:	070a                	slli	a4,a4,0x2
20404388:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040438c:	97ba                	add	a5,a5,a4
2040438e:	439c                	lw	a5,0(a5)
20404390:	faf42623          	sw	a5,-84(s0)
20404394:	fac42783          	lw	a5,-84(s0)
20404398:	c78d                	beqz	a5,204043c2 <metal_lc10_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040439a:	fac42503          	lw	a0,-84(s0)
2040439e:	b78ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
204043a2:	faa42423          	sw	a0,-88(s0)
204043a6:	fa842783          	lw	a5,-88(s0)
204043aa:	3087a783          	lw	a5,776(a5)
204043ae:	faf42223          	sw	a5,-92(s0)
204043b2:	fa842783          	lw	a5,-88(s0)
204043b6:	3007a783          	lw	a5,768(a5)
204043ba:	fa442583          	lw	a1,-92(s0)
204043be:	4569                	li	a0,26
204043c0:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:267
}
204043c2:	0001                	nop
204043c4:	40f6                	lw	ra,92(sp)
204043c6:	42e6                	lw	t0,88(sp)
204043c8:	4356                	lw	t1,84(sp)
204043ca:	43c6                	lw	t2,80(sp)
204043cc:	4436                	lw	s0,76(sp)
204043ce:	4526                	lw	a0,72(sp)
204043d0:	4596                	lw	a1,68(sp)
204043d2:	4606                	lw	a2,64(sp)
204043d4:	56f2                	lw	a3,60(sp)
204043d6:	5762                	lw	a4,56(sp)
204043d8:	57d2                	lw	a5,52(sp)
204043da:	5842                	lw	a6,48(sp)
204043dc:	58b2                	lw	a7,44(sp)
204043de:	5e22                	lw	t3,40(sp)
204043e0:	5e92                	lw	t4,36(sp)
204043e2:	5f02                	lw	t5,32(sp)
204043e4:	4ff2                	lw	t6,28(sp)
204043e6:	6125                	addi	sp,sp,96
204043e8:	30200073          	mret

204043ec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
204043ec:	711d                	addi	sp,sp,-96
204043ee:	ce86                	sw	ra,92(sp)
204043f0:	cc96                	sw	t0,88(sp)
204043f2:	ca9a                	sw	t1,84(sp)
204043f4:	c89e                	sw	t2,80(sp)
204043f6:	c6a2                	sw	s0,76(sp)
204043f8:	c4aa                	sw	a0,72(sp)
204043fa:	c2ae                	sw	a1,68(sp)
204043fc:	c0b2                	sw	a2,64(sp)
204043fe:	de36                	sw	a3,60(sp)
20404400:	dc3a                	sw	a4,56(sp)
20404402:	da3e                	sw	a5,52(sp)
20404404:	d842                	sw	a6,48(sp)
20404406:	d646                	sw	a7,44(sp)
20404408:	d472                	sw	t3,40(sp)
2040440a:	d276                	sw	t4,36(sp)
2040440c:	d07a                	sw	t5,32(sp)
2040440e:	ce7e                	sw	t6,28(sp)
20404410:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404412:	b82ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20404416:	872a                	mv	a4,a0
20404418:	800007b7          	lui	a5,0x80000
2040441c:	070a                	slli	a4,a4,0x2
2040441e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404422:	97ba                	add	a5,a5,a4
20404424:	439c                	lw	a5,0(a5)
20404426:	faf42623          	sw	a5,-84(s0)
2040442a:	fac42783          	lw	a5,-84(s0)
2040442e:	c78d                	beqz	a5,20404458 <metal_lc11_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20404430:	fac42503          	lw	a0,-84(s0)
20404434:	ae2ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404438:	faa42423          	sw	a0,-88(s0)
2040443c:	fa842783          	lw	a5,-88(s0)
20404440:	3207a783          	lw	a5,800(a5)
20404444:	faf42223          	sw	a5,-92(s0)
20404448:	fa842783          	lw	a5,-88(s0)
2040444c:	3187a783          	lw	a5,792(a5)
20404450:	fa442583          	lw	a1,-92(s0)
20404454:	456d                	li	a0,27
20404456:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:273
}
20404458:	0001                	nop
2040445a:	40f6                	lw	ra,92(sp)
2040445c:	42e6                	lw	t0,88(sp)
2040445e:	4356                	lw	t1,84(sp)
20404460:	43c6                	lw	t2,80(sp)
20404462:	4436                	lw	s0,76(sp)
20404464:	4526                	lw	a0,72(sp)
20404466:	4596                	lw	a1,68(sp)
20404468:	4606                	lw	a2,64(sp)
2040446a:	56f2                	lw	a3,60(sp)
2040446c:	5762                	lw	a4,56(sp)
2040446e:	57d2                	lw	a5,52(sp)
20404470:	5842                	lw	a6,48(sp)
20404472:	58b2                	lw	a7,44(sp)
20404474:	5e22                	lw	t3,40(sp)
20404476:	5e92                	lw	t4,36(sp)
20404478:	5f02                	lw	t5,32(sp)
2040447a:	4ff2                	lw	t6,28(sp)
2040447c:	6125                	addi	sp,sp,96
2040447e:	30200073          	mret

20404482 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404482:	711d                	addi	sp,sp,-96
20404484:	ce86                	sw	ra,92(sp)
20404486:	cc96                	sw	t0,88(sp)
20404488:	ca9a                	sw	t1,84(sp)
2040448a:	c89e                	sw	t2,80(sp)
2040448c:	c6a2                	sw	s0,76(sp)
2040448e:	c4aa                	sw	a0,72(sp)
20404490:	c2ae                	sw	a1,68(sp)
20404492:	c0b2                	sw	a2,64(sp)
20404494:	de36                	sw	a3,60(sp)
20404496:	dc3a                	sw	a4,56(sp)
20404498:	da3e                	sw	a5,52(sp)
2040449a:	d842                	sw	a6,48(sp)
2040449c:	d646                	sw	a7,44(sp)
2040449e:	d472                	sw	t3,40(sp)
204044a0:	d276                	sw	t4,36(sp)
204044a2:	d07a                	sw	t5,32(sp)
204044a4:	ce7e                	sw	t6,28(sp)
204044a6:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
204044a8:	aecff0ef          	jal	ra,20403794 <__metal_myhart_id>
204044ac:	872a                	mv	a4,a0
204044ae:	800007b7          	lui	a5,0x80000
204044b2:	070a                	slli	a4,a4,0x2
204044b4:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204044b8:	97ba                	add	a5,a5,a4
204044ba:	439c                	lw	a5,0(a5)
204044bc:	faf42623          	sw	a5,-84(s0)
204044c0:	fac42783          	lw	a5,-84(s0)
204044c4:	c78d                	beqz	a5,204044ee <metal_lc12_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
204044c6:	fac42503          	lw	a0,-84(s0)
204044ca:	a4cff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
204044ce:	faa42423          	sw	a0,-88(s0)
204044d2:	fa842783          	lw	a5,-88(s0)
204044d6:	3387a783          	lw	a5,824(a5)
204044da:	faf42223          	sw	a5,-92(s0)
204044de:	fa842783          	lw	a5,-88(s0)
204044e2:	3307a783          	lw	a5,816(a5)
204044e6:	fa442583          	lw	a1,-92(s0)
204044ea:	4571                	li	a0,28
204044ec:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:279
}
204044ee:	0001                	nop
204044f0:	40f6                	lw	ra,92(sp)
204044f2:	42e6                	lw	t0,88(sp)
204044f4:	4356                	lw	t1,84(sp)
204044f6:	43c6                	lw	t2,80(sp)
204044f8:	4436                	lw	s0,76(sp)
204044fa:	4526                	lw	a0,72(sp)
204044fc:	4596                	lw	a1,68(sp)
204044fe:	4606                	lw	a2,64(sp)
20404500:	56f2                	lw	a3,60(sp)
20404502:	5762                	lw	a4,56(sp)
20404504:	57d2                	lw	a5,52(sp)
20404506:	5842                	lw	a6,48(sp)
20404508:	58b2                	lw	a7,44(sp)
2040450a:	5e22                	lw	t3,40(sp)
2040450c:	5e92                	lw	t4,36(sp)
2040450e:	5f02                	lw	t5,32(sp)
20404510:	4ff2                	lw	t6,28(sp)
20404512:	6125                	addi	sp,sp,96
20404514:	30200073          	mret

20404518 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404518:	711d                	addi	sp,sp,-96
2040451a:	ce86                	sw	ra,92(sp)
2040451c:	cc96                	sw	t0,88(sp)
2040451e:	ca9a                	sw	t1,84(sp)
20404520:	c89e                	sw	t2,80(sp)
20404522:	c6a2                	sw	s0,76(sp)
20404524:	c4aa                	sw	a0,72(sp)
20404526:	c2ae                	sw	a1,68(sp)
20404528:	c0b2                	sw	a2,64(sp)
2040452a:	de36                	sw	a3,60(sp)
2040452c:	dc3a                	sw	a4,56(sp)
2040452e:	da3e                	sw	a5,52(sp)
20404530:	d842                	sw	a6,48(sp)
20404532:	d646                	sw	a7,44(sp)
20404534:	d472                	sw	t3,40(sp)
20404536:	d276                	sw	t4,36(sp)
20404538:	d07a                	sw	t5,32(sp)
2040453a:	ce7e                	sw	t6,28(sp)
2040453c:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
2040453e:	a56ff0ef          	jal	ra,20403794 <__metal_myhart_id>
20404542:	872a                	mv	a4,a0
20404544:	800007b7          	lui	a5,0x80000
20404548:	070a                	slli	a4,a4,0x2
2040454a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040454e:	97ba                	add	a5,a5,a4
20404550:	439c                	lw	a5,0(a5)
20404552:	faf42623          	sw	a5,-84(s0)
20404556:	fac42783          	lw	a5,-84(s0)
2040455a:	c78d                	beqz	a5,20404584 <metal_lc13_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
2040455c:	fac42503          	lw	a0,-84(s0)
20404560:	9b6ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404564:	faa42423          	sw	a0,-88(s0)
20404568:	fa842783          	lw	a5,-88(s0)
2040456c:	3507a783          	lw	a5,848(a5)
20404570:	faf42223          	sw	a5,-92(s0)
20404574:	fa842783          	lw	a5,-88(s0)
20404578:	3487a783          	lw	a5,840(a5)
2040457c:	fa442583          	lw	a1,-92(s0)
20404580:	4575                	li	a0,29
20404582:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404584:	0001                	nop
20404586:	40f6                	lw	ra,92(sp)
20404588:	42e6                	lw	t0,88(sp)
2040458a:	4356                	lw	t1,84(sp)
2040458c:	43c6                	lw	t2,80(sp)
2040458e:	4436                	lw	s0,76(sp)
20404590:	4526                	lw	a0,72(sp)
20404592:	4596                	lw	a1,68(sp)
20404594:	4606                	lw	a2,64(sp)
20404596:	56f2                	lw	a3,60(sp)
20404598:	5762                	lw	a4,56(sp)
2040459a:	57d2                	lw	a5,52(sp)
2040459c:	5842                	lw	a6,48(sp)
2040459e:	58b2                	lw	a7,44(sp)
204045a0:	5e22                	lw	t3,40(sp)
204045a2:	5e92                	lw	t4,36(sp)
204045a4:	5f02                	lw	t5,32(sp)
204045a6:	4ff2                	lw	t6,28(sp)
204045a8:	6125                	addi	sp,sp,96
204045aa:	30200073          	mret

204045ae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
204045ae:	711d                	addi	sp,sp,-96
204045b0:	ce86                	sw	ra,92(sp)
204045b2:	cc96                	sw	t0,88(sp)
204045b4:	ca9a                	sw	t1,84(sp)
204045b6:	c89e                	sw	t2,80(sp)
204045b8:	c6a2                	sw	s0,76(sp)
204045ba:	c4aa                	sw	a0,72(sp)
204045bc:	c2ae                	sw	a1,68(sp)
204045be:	c0b2                	sw	a2,64(sp)
204045c0:	de36                	sw	a3,60(sp)
204045c2:	dc3a                	sw	a4,56(sp)
204045c4:	da3e                	sw	a5,52(sp)
204045c6:	d842                	sw	a6,48(sp)
204045c8:	d646                	sw	a7,44(sp)
204045ca:	d472                	sw	t3,40(sp)
204045cc:	d276                	sw	t4,36(sp)
204045ce:	d07a                	sw	t5,32(sp)
204045d0:	ce7e                	sw	t6,28(sp)
204045d2:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
204045d4:	9c0ff0ef          	jal	ra,20403794 <__metal_myhart_id>
204045d8:	872a                	mv	a4,a0
204045da:	800007b7          	lui	a5,0x80000
204045de:	070a                	slli	a4,a4,0x2
204045e0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204045e4:	97ba                	add	a5,a5,a4
204045e6:	439c                	lw	a5,0(a5)
204045e8:	faf42623          	sw	a5,-84(s0)
204045ec:	fac42783          	lw	a5,-84(s0)
204045f0:	c78d                	beqz	a5,2040461a <metal_lc14_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
204045f2:	fac42503          	lw	a0,-84(s0)
204045f6:	920ff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
204045fa:	faa42423          	sw	a0,-88(s0)
204045fe:	fa842783          	lw	a5,-88(s0)
20404602:	3687a783          	lw	a5,872(a5)
20404606:	faf42223          	sw	a5,-92(s0)
2040460a:	fa842783          	lw	a5,-88(s0)
2040460e:	3607a783          	lw	a5,864(a5)
20404612:	fa442583          	lw	a1,-92(s0)
20404616:	4579                	li	a0,30
20404618:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:291
}
2040461a:	0001                	nop
2040461c:	40f6                	lw	ra,92(sp)
2040461e:	42e6                	lw	t0,88(sp)
20404620:	4356                	lw	t1,84(sp)
20404622:	43c6                	lw	t2,80(sp)
20404624:	4436                	lw	s0,76(sp)
20404626:	4526                	lw	a0,72(sp)
20404628:	4596                	lw	a1,68(sp)
2040462a:	4606                	lw	a2,64(sp)
2040462c:	56f2                	lw	a3,60(sp)
2040462e:	5762                	lw	a4,56(sp)
20404630:	57d2                	lw	a5,52(sp)
20404632:	5842                	lw	a6,48(sp)
20404634:	58b2                	lw	a7,44(sp)
20404636:	5e22                	lw	t3,40(sp)
20404638:	5e92                	lw	t4,36(sp)
2040463a:	5f02                	lw	t5,32(sp)
2040463c:	4ff2                	lw	t6,28(sp)
2040463e:	6125                	addi	sp,sp,96
20404640:	30200073          	mret

20404644 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20404644:	711d                	addi	sp,sp,-96
20404646:	ce86                	sw	ra,92(sp)
20404648:	cc96                	sw	t0,88(sp)
2040464a:	ca9a                	sw	t1,84(sp)
2040464c:	c89e                	sw	t2,80(sp)
2040464e:	c6a2                	sw	s0,76(sp)
20404650:	c4aa                	sw	a0,72(sp)
20404652:	c2ae                	sw	a1,68(sp)
20404654:	c0b2                	sw	a2,64(sp)
20404656:	de36                	sw	a3,60(sp)
20404658:	dc3a                	sw	a4,56(sp)
2040465a:	da3e                	sw	a5,52(sp)
2040465c:	d842                	sw	a6,48(sp)
2040465e:	d646                	sw	a7,44(sp)
20404660:	d472                	sw	t3,40(sp)
20404662:	d276                	sw	t4,36(sp)
20404664:	d07a                	sw	t5,32(sp)
20404666:	ce7e                	sw	t6,28(sp)
20404668:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
2040466a:	92aff0ef          	jal	ra,20403794 <__metal_myhart_id>
2040466e:	872a                	mv	a4,a0
20404670:	800007b7          	lui	a5,0x80000
20404674:	070a                	slli	a4,a4,0x2
20404676:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040467a:	97ba                	add	a5,a5,a4
2040467c:	439c                	lw	a5,0(a5)
2040467e:	faf42623          	sw	a5,-84(s0)
20404682:	fac42783          	lw	a5,-84(s0)
20404686:	c78d                	beqz	a5,204046b0 <metal_lc15_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404688:	fac42503          	lw	a0,-84(s0)
2040468c:	88aff0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404690:	faa42423          	sw	a0,-88(s0)
20404694:	fa842783          	lw	a5,-88(s0)
20404698:	3807a783          	lw	a5,896(a5)
2040469c:	faf42223          	sw	a5,-92(s0)
204046a0:	fa842783          	lw	a5,-88(s0)
204046a4:	3787a783          	lw	a5,888(a5)
204046a8:	fa442583          	lw	a1,-92(s0)
204046ac:	457d                	li	a0,31
204046ae:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:297
}
204046b0:	0001                	nop
204046b2:	40f6                	lw	ra,92(sp)
204046b4:	42e6                	lw	t0,88(sp)
204046b6:	4356                	lw	t1,84(sp)
204046b8:	43c6                	lw	t2,80(sp)
204046ba:	4436                	lw	s0,76(sp)
204046bc:	4526                	lw	a0,72(sp)
204046be:	4596                	lw	a1,68(sp)
204046c0:	4606                	lw	a2,64(sp)
204046c2:	56f2                	lw	a3,60(sp)
204046c4:	5762                	lw	a4,56(sp)
204046c6:	57d2                	lw	a5,52(sp)
204046c8:	5842                	lw	a6,48(sp)
204046ca:	58b2                	lw	a7,44(sp)
204046cc:	5e22                	lw	t3,40(sp)
204046ce:	5e92                	lw	t4,36(sp)
204046d0:	5f02                	lw	t5,32(sp)
204046d2:	4ff2                	lw	t6,28(sp)
204046d4:	6125                	addi	sp,sp,96
204046d6:	30200073          	mret

204046da <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
204046da:	1101                	addi	sp,sp,-32
204046dc:	ce22                	sw	s0,28(sp)
204046de:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204046e0:	305027f3          	csrr	a5,mtvec
204046e4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
204046e8:	fec42783          	lw	a5,-20(s0)
204046ec:	03f7f793          	andi	a5,a5,63
204046f0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
204046f4:	fec42703          	lw	a4,-20(s0)
204046f8:	478d                	li	a5,3
204046fa:	02f70363          	beq	a4,a5,20404720 <__metal_controller_interrupt_vector_mode+0x46>
204046fe:	fec42703          	lw	a4,-20(s0)
20404702:	478d                	li	a5,3
20404704:	02e7e263          	bltu	a5,a4,20404728 <__metal_controller_interrupt_vector_mode+0x4e>
20404708:	fec42703          	lw	a4,-20(s0)
2040470c:	4785                	li	a5,1
2040470e:	00f70b63          	beq	a4,a5,20404724 <__metal_controller_interrupt_vector_mode+0x4a>
20404712:	fec42703          	lw	a4,-20(s0)
20404716:	4789                	li	a5,2
20404718:	00f71863          	bne	a4,a5,20404728 <__metal_controller_interrupt_vector_mode+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040471c:	478d                	li	a5,3
2040471e:	a031                	j	2040472a <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20404720:	4791                	li	a5,4
20404722:	a021                	j	2040472a <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20404724:	4785                	li	a5,1
20404726:	a011                	j	2040472a <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20404728:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:314
}
2040472a:	853e                	mv	a0,a5
2040472c:	4472                	lw	s0,28(sp)
2040472e:	6105                	addi	sp,sp,32
20404730:	8082                	ret

20404732 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20404732:	7179                	addi	sp,sp,-48
20404734:	d622                	sw	s0,44(sp)
20404736:	1800                	addi	s0,sp,48
20404738:	fca42e23          	sw	a0,-36(s0)
2040473c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404740:	305027f3          	csrr	a5,mtvec
20404744:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20404748:	fec42783          	lw	a5,-20(s0)
2040474c:	fc07f793          	andi	a5,a5,-64
20404750:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20404754:	fd842783          	lw	a5,-40(s0)
20404758:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
2040475c:	fdc42703          	lw	a4,-36(s0)
20404760:	4791                	li	a5,4
20404762:	04f70563          	beq	a4,a5,204047ac <__metal_controller_interrupt_vector+0x7a>
20404766:	fdc42703          	lw	a4,-36(s0)
2040476a:	4791                	li	a5,4
2040476c:	06e7e863          	bltu	a5,a4,204047dc <__metal_controller_interrupt_vector+0xaa>
20404770:	fdc42703          	lw	a4,-36(s0)
20404774:	478d                	li	a5,3
20404776:	06e7e363          	bltu	a5,a4,204047dc <__metal_controller_interrupt_vector+0xaa>
2040477a:	fdc42703          	lw	a4,-36(s0)
2040477e:	4789                	li	a5,2
20404780:	00f77b63          	bgeu	a4,a5,20404796 <__metal_controller_interrupt_vector+0x64>
20404784:	fdc42783          	lw	a5,-36(s0)
20404788:	c7a1                	beqz	a5,204047d0 <__metal_controller_interrupt_vector+0x9e>
2040478a:	fdc42703          	lw	a4,-36(s0)
2040478e:	4785                	li	a5,1
20404790:	02f70963          	beq	a4,a5,204047c2 <__metal_controller_interrupt_vector+0x90>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404794:	a0a1                	j	204047dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404796:	fe842783          	lw	a5,-24(s0)
2040479a:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040479e:	fec42783          	lw	a5,-20(s0)
204047a2:	0027e793          	ori	a5,a5,2
204047a6:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
204047aa:	a80d                	j	204047dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
204047ac:	fe842783          	lw	a5,-24(s0)
204047b0:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
204047b4:	fec42783          	lw	a5,-20(s0)
204047b8:	0037e793          	ori	a5,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
204047bc:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
204047c0:	a831                	j	204047dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
204047c2:	fe842783          	lw	a5,-24(s0)
204047c6:	0017e793          	ori	a5,a5,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
204047ca:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
204047ce:	a039                	j	204047dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
204047d0:	fe842783          	lw	a5,-24(s0)
204047d4:	9bf1                	andi	a5,a5,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
204047d6:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
204047da:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:344
}
204047dc:	0001                	nop
204047de:	5432                	lw	s0,44(sp)
204047e0:	6145                	addi	sp,sp,48
204047e2:	8082                	ret

204047e4 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
204047e4:	1101                	addi	sp,sp,-32
204047e6:	ce22                	sw	s0,28(sp)
204047e8:	1000                	addi	s0,sp,32
204047ea:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204047ee:	fec42703          	lw	a4,-20(s0)
204047f2:	47fd                	li	a5,31
204047f4:	02e7c663          	blt	a5,a4,20404820 <__metal_valid_interrupt_id+0x3c>
204047f8:	fec42703          	lw	a4,-20(s0)
204047fc:	478d                	li	a5,3
204047fe:	02f74963          	blt	a4,a5,20404830 <__metal_valid_interrupt_id+0x4c>
20404802:	fec42783          	lw	a5,-20(s0)
20404806:	4705                	li	a4,1
20404808:	00f71733          	sll	a4,a4,a5
2040480c:	77c5                	lui	a5,0xffff1
2040480e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffee768>
20404812:	8ff9                	and	a5,a5,a4
20404814:	00f037b3          	snez	a5,a5
20404818:	0ff7f793          	zext.b	a5,a5
2040481c:	eb81                	bnez	a5,2040482c <__metal_valid_interrupt_id+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040481e:	a809                	j	20404830 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404820:	fec42703          	lw	a4,-20(s0)
20404824:	08000793          	li	a5,128
20404828:	00f71463          	bne	a4,a5,20404830 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
2040482c:	4785                	li	a5,1
2040482e:	a019                	j	20404834 <__metal_valid_interrupt_id+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20404830:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20404832:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:374
}
20404834:	853e                	mv	a0,a5
20404836:	4472                	lw	s0,28(sp)
20404838:	6105                	addi	sp,sp,32
2040483a:	8082                	ret

2040483c <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
2040483c:	7179                	addi	sp,sp,-48
2040483e:	d606                	sw	ra,44(sp)
20404840:	d422                	sw	s0,40(sp)
20404842:	1800                	addi	s0,sp,48
20404844:	fca42e23          	sw	a0,-36(s0)
20404848:	fcb42c23          	sw	a1,-40(s0)
2040484c:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20404850:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20404854:	fdc42783          	lw	a5,-36(s0)
20404858:	e399                	bnez	a5,2040485e <__metal_local_interrupt_enable+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
2040485a:	57fd                	li	a5,-1
2040485c:	a849                	j	204048ee <__metal_local_interrupt_enable+0xb2>
2040485e:	fd842703          	lw	a4,-40(s0)
20404862:	47fd                	li	a5,31
20404864:	08e7e063          	bltu	a5,a4,204048e4 <__metal_local_interrupt_enable+0xa8>
20404868:	fd842783          	lw	a5,-40(s0)
2040486c:	00279713          	slli	a4,a5,0x2
20404870:	204007b7          	lui	a5,0x20400
20404874:	51c78793          	addi	a5,a5,1308 # 2040051c <__metal_driver_vtable_riscv_clint0+0x64>
20404878:	97ba                	add	a5,a5,a4
2040487a:	439c                	lw	a5,0(a5)
2040487c:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
2040487e:	fd442783          	lw	a5,-44(s0)
20404882:	c781                	beqz	a5,2040488a <__metal_local_interrupt_enable+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404884:	f2bfe0ef          	jal	ra,204037ae <__metal_interrupt_global_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404888:	a08d                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
2040488a:	f3dfe0ef          	jal	ra,204037c6 <__metal_interrupt_global_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2040488e:	a8b1                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404890:	fd442783          	lw	a5,-44(s0)
20404894:	c781                	beqz	a5,2040489c <__metal_local_interrupt_enable+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404896:	f49fe0ef          	jal	ra,204037de <__metal_interrupt_software_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
2040489a:	a881                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2040489c:	f5bfe0ef          	jal	ra,204037f6 <__metal_interrupt_software_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
204048a0:	a0a9                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
204048a2:	fd442783          	lw	a5,-44(s0)
204048a6:	c781                	beqz	a5,204048ae <__metal_local_interrupt_enable+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
204048a8:	f67fe0ef          	jal	ra,2040380e <__metal_interrupt_timer_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
204048ac:	a83d                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
204048ae:	f7bfe0ef          	jal	ra,20403828 <__metal_interrupt_timer_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
204048b2:	a825                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
204048b4:	fd442783          	lw	a5,-44(s0)
204048b8:	c781                	beqz	a5,204048c0 <__metal_local_interrupt_enable+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
204048ba:	f89fe0ef          	jal	ra,20403842 <__metal_interrupt_external_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
204048be:	a035                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
204048c0:	f9ffe0ef          	jal	ra,2040385e <__metal_interrupt_external_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
204048c4:	a01d                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
204048c6:	fd442783          	lw	a5,-44(s0)
204048ca:	c799                	beqz	a5,204048d8 <__metal_local_interrupt_enable+0x9c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
204048cc:	fd842783          	lw	a5,-40(s0)
204048d0:	853e                	mv	a0,a5
204048d2:	fa9fe0ef          	jal	ra,2040387a <__metal_interrupt_local_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
204048d6:	a811                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
204048d8:	fd842783          	lw	a5,-40(s0)
204048dc:	853e                	mv	a0,a5
204048de:	fc9fe0ef          	jal	ra,204038a6 <__metal_interrupt_local_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
204048e2:	a021                	j	204048ea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
204048e4:	57fd                	li	a5,-1
204048e6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
204048ea:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:439
}
204048ee:	853e                	mv	a0,a5
204048f0:	50b2                	lw	ra,44(sp)
204048f2:	5422                	lw	s0,40(sp)
204048f4:	6145                	addi	sp,sp,48
204048f6:	8082                	ret

204048f8 <__metal_exception_register>:
__metal_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
204048f8:	7179                	addi	sp,sp,-48
204048fa:	d622                	sw	s0,44(sp)
204048fc:	1800                	addi	s0,sp,48
204048fe:	fca42e23          	sw	a0,-36(s0)
20404902:	fcb42c23          	sw	a1,-40(s0)
20404906:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2040490a:	fdc42783          	lw	a5,-36(s0)
2040490e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404912:	fd842703          	lw	a4,-40(s0)
20404916:	47ad                	li	a5,11
20404918:	02e7c263          	blt	a5,a4,2040493c <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2040491c:	fd442783          	lw	a5,-44(s0)
20404920:	cf91                	beqz	a5,2040493c <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20404922:	fec42703          	lw	a4,-20(s0)
20404926:	fd842783          	lw	a5,-40(s0)
2040492a:	0e878793          	addi	a5,a5,232
2040492e:	078a                	slli	a5,a5,0x2
20404930:	97ba                	add	a5,a5,a4
20404932:	fd442703          	lw	a4,-44(s0)
20404936:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20404938:	4781                	li	a5,0
2040493a:	a011                	j	2040493e <__metal_exception_register+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
2040493c:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:450
}
2040493e:	853e                	mv	a0,a5
20404940:	5432                	lw	s0,44(sp)
20404942:	6145                	addi	sp,sp,48
20404944:	8082                	ret

20404946 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20404946:	7179                	addi	sp,sp,-48
20404948:	d606                	sw	ra,44(sp)
2040494a:	d422                	sw	s0,40(sp)
2040494c:	1800                	addi	s0,sp,48
2040494e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404952:	fdc42783          	lw	a5,-36(s0)
20404956:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
2040495a:	fe442783          	lw	a5,-28(s0)
2040495e:	43dc                	lw	a5,4(a5)
20404960:	efdd                	bnez	a5,20404a1e <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404962:	fe042623          	sw	zero,-20(s0)
20404966:	a0b9                	j	204049b4 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20404968:	fe442683          	lw	a3,-28(s0)
2040496c:	fec42703          	lw	a4,-20(s0)
20404970:	87ba                	mv	a5,a4
20404972:	0786                	slli	a5,a5,0x1
20404974:	97ba                	add	a5,a5,a4
20404976:	078e                	slli	a5,a5,0x3
20404978:	97b6                	add	a5,a5,a3
2040497a:	0807a823          	sw	zero,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
2040497e:	fe442683          	lw	a3,-28(s0)
20404982:	fec42703          	lw	a4,-20(s0)
20404986:	87ba                	mv	a5,a4
20404988:	0786                	slli	a5,a5,0x1
2040498a:	97ba                	add	a5,a5,a4
2040498c:	078e                	slli	a5,a5,0x3
2040498e:	97b6                	add	a5,a5,a3
20404990:	0807aa23          	sw	zero,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404994:	fe442683          	lw	a3,-28(s0)
20404998:	fec42703          	lw	a4,-20(s0)
2040499c:	87ba                	mv	a5,a4
2040499e:	0786                	slli	a5,a5,0x1
204049a0:	97ba                	add	a5,a5,a4
204049a2:	078e                	slli	a5,a5,0x3
204049a4:	97b6                	add	a5,a5,a3
204049a6:	0807ac23          	sw	zero,152(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
204049aa:	fec42783          	lw	a5,-20(s0)
204049ae:	0785                	addi	a5,a5,1
204049b0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
204049b4:	fec42703          	lw	a4,-20(s0)
204049b8:	47fd                	li	a5,31
204049ba:	fae7d7e3          	bge	a5,a4,20404968 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
204049be:	fe042423          	sw	zero,-24(s0)
204049c2:	a01d                	j	204049e8 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
204049c4:	fe442703          	lw	a4,-28(s0)
204049c8:	fe842783          	lw	a5,-24(s0)
204049cc:	0e878793          	addi	a5,a5,232
204049d0:	078a                	slli	a5,a5,0x2
204049d2:	97ba                	add	a5,a5,a4
204049d4:	20404737          	lui	a4,0x20404
204049d8:	8d270713          	addi	a4,a4,-1838 # 204038d2 <__metal_default_exception_handler>
204049dc:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
204049de:	fe842783          	lw	a5,-24(s0)
204049e2:	0785                	addi	a5,a5,1
204049e4:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
204049e8:	fe842703          	lw	a4,-24(s0)
204049ec:	47ad                	li	a5,11
204049ee:	fce7dbe3          	bge	a5,a4,204049c4 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
204049f2:	305027f3          	csrr	a5,mtvec
204049f6:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
204049fa:	204007b7          	lui	a5,0x20400
204049fe:	13878793          	addi	a5,a5,312 # 20400138 <early_trap_vector>
20404a02:	fe042703          	lw	a4,-32(s0)
20404a06:	00f71863          	bne	a4,a5,20404a16 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20404a0a:	204047b7          	lui	a5,0x20404
20404a0e:	b8078593          	addi	a1,a5,-1152 # 20403b80 <__metal_exception_handler>
20404a12:	4501                	li	a0,0
20404a14:	3b39                	jal	20404732 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404a16:	fe442783          	lw	a5,-28(s0)
20404a1a:	4705                	li	a4,1
20404a1c:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20404a1e:	0001                	nop
20404a20:	50b2                	lw	ra,44(sp)
20404a22:	5422                	lw	s0,40(sp)
20404a24:	6145                	addi	sp,sp,48
20404a26:	8082                	ret

20404a28 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20404a28:	7179                	addi	sp,sp,-48
20404a2a:	d606                	sw	ra,44(sp)
20404a2c:	d422                	sw	s0,40(sp)
20404a2e:	1800                	addi	s0,sp,48
20404a30:	fca42e23          	sw	a0,-36(s0)
20404a34:	fcb42c23          	sw	a1,-40(s0)
20404a38:	fcc42a23          	sw	a2,-44(s0)
20404a3c:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20404a40:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404a44:	fdc42783          	lw	a5,-36(s0)
20404a48:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20404a4c:	fd842503          	lw	a0,-40(s0)
20404a50:	3b51                	jal	204047e4 <__metal_valid_interrupt_id>
20404a52:	87aa                	mv	a5,a0
20404a54:	e399                	bnez	a5,20404a5a <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20404a56:	57d5                	li	a5,-11
20404a58:	a265                	j	20404c00 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404a5a:	fd842703          	lw	a4,-40(s0)
20404a5e:	08000793          	li	a5,128
20404a62:	00f71863          	bne	a4,a5,20404a72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20404a66:	c75ff0ef          	jal	ra,204046da <__metal_controller_interrupt_vector_mode>
20404a6a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404a6c:	c399                	beqz	a5,20404a72 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20404a6e:	57cd                	li	a5,-13
20404a70:	aa41                	j	20404c00 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20404a72:	fd442783          	lw	a5,-44(s0)
20404a76:	cfb9                	beqz	a5,20404ad4 <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20404a78:	fd842703          	lw	a4,-40(s0)
20404a7c:	08000793          	li	a5,128
20404a80:	00f71f63          	bne	a4,a5,20404a9e <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404a84:	fe842783          	lw	a5,-24(s0)
20404a88:	fd442703          	lw	a4,-44(s0)
20404a8c:	38e7a823          	sw	a4,912(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20404a90:	fe842783          	lw	a5,-24(s0)
20404a94:	fd042703          	lw	a4,-48(s0)
20404a98:	38e7ac23          	sw	a4,920(a5)
20404a9c:	a285                	j	20404bfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20404a9e:	fe842683          	lw	a3,-24(s0)
20404aa2:	fd842703          	lw	a4,-40(s0)
20404aa6:	87ba                	mv	a5,a4
20404aa8:	0786                	slli	a5,a5,0x1
20404aaa:	97ba                	add	a5,a5,a4
20404aac:	078e                	slli	a5,a5,0x3
20404aae:	97b6                	add	a5,a5,a3
20404ab0:	fd442703          	lw	a4,-44(s0)
20404ab4:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404ab8:	fe842683          	lw	a3,-24(s0)
20404abc:	fd842703          	lw	a4,-40(s0)
20404ac0:	87ba                	mv	a5,a4
20404ac2:	0786                	slli	a5,a5,0x1
20404ac4:	97ba                	add	a5,a5,a4
20404ac6:	078e                	slli	a5,a5,0x3
20404ac8:	97b6                	add	a5,a5,a3
20404aca:	fd042703          	lw	a4,-48(s0)
20404ace:	08e7ac23          	sw	a4,152(a5)
20404ad2:	a22d                	j	20404bfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20404ad4:	fd842703          	lw	a4,-40(s0)
20404ad8:	08000793          	li	a5,128
20404adc:	0cf70163          	beq	a4,a5,20404b9e <__metal_driver_riscv_cpu_controller_interrupt_register+0x176>
20404ae0:	fd842703          	lw	a4,-40(s0)
20404ae4:	08000793          	li	a5,128
20404ae8:	10e7c763          	blt	a5,a4,20404bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404aec:	fd842703          	lw	a4,-40(s0)
20404af0:	47fd                	li	a5,31
20404af2:	10e7c263          	blt	a5,a4,20404bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404af6:	fd842703          	lw	a4,-40(s0)
20404afa:	47c1                	li	a5,16
20404afc:	0cf75063          	bge	a4,a5,20404bbc <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404b00:	fd842703          	lw	a4,-40(s0)
20404b04:	47ad                	li	a5,11
20404b06:	0af70b63          	beq	a4,a5,20404bbc <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404b0a:	fd842703          	lw	a4,-40(s0)
20404b0e:	47ad                	li	a5,11
20404b10:	0ee7c363          	blt	a5,a4,20404bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404b14:	fd842703          	lw	a4,-40(s0)
20404b18:	478d                	li	a5,3
20404b1a:	00f70863          	beq	a4,a5,20404b2a <__metal_driver_riscv_cpu_controller_interrupt_register+0x102>
20404b1e:	fd842703          	lw	a4,-40(s0)
20404b22:	479d                	li	a5,7
20404b24:	04f70063          	beq	a4,a5,20404b64 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13c>
20404b28:	a0f9                	j	20404bf6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20404b2a:	fe842683          	lw	a3,-24(s0)
20404b2e:	fd842703          	lw	a4,-40(s0)
20404b32:	87ba                	mv	a5,a4
20404b34:	0786                	slli	a5,a5,0x1
20404b36:	97ba                	add	a5,a5,a4
20404b38:	078e                	slli	a5,a5,0x3
20404b3a:	97b6                	add	a5,a5,a3
20404b3c:	20404737          	lui	a4,0x20404
20404b40:	9c270713          	addi	a4,a4,-1598 # 204039c2 <__metal_default_sw_handler>
20404b44:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20404b48:	fe842683          	lw	a3,-24(s0)
20404b4c:	fd842703          	lw	a4,-40(s0)
20404b50:	87ba                	mv	a5,a4
20404b52:	0786                	slli	a5,a5,0x1
20404b54:	97ba                	add	a5,a5,a4
20404b56:	078e                	slli	a5,a5,0x3
20404b58:	97b6                	add	a5,a5,a3
20404b5a:	fd042703          	lw	a4,-48(s0)
20404b5e:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20404b62:	a869                	j	20404bfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20404b64:	fe842683          	lw	a3,-24(s0)
20404b68:	fd842703          	lw	a4,-40(s0)
20404b6c:	87ba                	mv	a5,a4
20404b6e:	0786                	slli	a5,a5,0x1
20404b70:	97ba                	add	a5,a5,a4
20404b72:	078e                	slli	a5,a5,0x3
20404b74:	97b6                	add	a5,a5,a3
20404b76:	20404737          	lui	a4,0x20404
20404b7a:	ad270713          	addi	a4,a4,-1326 # 20403ad2 <__metal_default_timer_handler>
20404b7e:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20404b82:	fe842683          	lw	a3,-24(s0)
20404b86:	fd842703          	lw	a4,-40(s0)
20404b8a:	87ba                	mv	a5,a4
20404b8c:	0786                	slli	a5,a5,0x1
20404b8e:	97ba                	add	a5,a5,a4
20404b90:	078e                	slli	a5,a5,0x3
20404b92:	97b6                	add	a5,a5,a3
20404b94:	fd042703          	lw	a4,-48(s0)
20404b98:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20404b9c:	a085                	j	20404bfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20404b9e:	fe842783          	lw	a5,-24(s0)
20404ba2:	20404737          	lui	a4,0x20404
20404ba6:	abc70713          	addi	a4,a4,-1348 # 20403abc <__metal_default_beu_handler>
20404baa:	38e7a823          	sw	a4,912(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20404bae:	fe842783          	lw	a5,-24(s0)
20404bb2:	fd042703          	lw	a4,-48(s0)
20404bb6:	38e7ac23          	sw	a4,920(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20404bba:	a089                	j	20404bfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20404bbc:	fe842683          	lw	a3,-24(s0)
20404bc0:	fd842703          	lw	a4,-40(s0)
20404bc4:	87ba                	mv	a5,a4
20404bc6:	0786                	slli	a5,a5,0x1
20404bc8:	97ba                	add	a5,a5,a4
20404bca:	078e                	slli	a5,a5,0x3
20404bcc:	97b6                	add	a5,a5,a3
20404bce:	20404737          	lui	a4,0x20404
20404bd2:	8ea70713          	addi	a4,a4,-1814 # 204038ea <__metal_default_interrupt_handler>
20404bd6:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20404bda:	fe842683          	lw	a3,-24(s0)
20404bde:	fd842703          	lw	a4,-40(s0)
20404be2:	87ba                	mv	a5,a4
20404be4:	0786                	slli	a5,a5,0x1
20404be6:	97ba                	add	a5,a5,a4
20404be8:	078e                	slli	a5,a5,0x3
20404bea:	97b6                	add	a5,a5,a3
20404bec:	fd042703          	lw	a4,-48(s0)
20404bf0:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20404bf4:	a021                	j	20404bfc <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20404bf6:	57d1                	li	a5,-12
20404bf8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20404bfc:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404c00:	853e                	mv	a0,a5
20404c02:	50b2                	lw	ra,44(sp)
20404c04:	5422                	lw	s0,40(sp)
20404c06:	6145                	addi	sp,sp,48
20404c08:	8082                	ret

20404c0a <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404c0a:	1101                	addi	sp,sp,-32
20404c0c:	ce06                	sw	ra,28(sp)
20404c0e:	cc22                	sw	s0,24(sp)
20404c10:	1000                	addi	s0,sp,32
20404c12:	fea42623          	sw	a0,-20(s0)
20404c16:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404c1a:	fe842783          	lw	a5,-24(s0)
20404c1e:	4605                	li	a2,1
20404c20:	85be                	mv	a1,a5
20404c22:	fec42503          	lw	a0,-20(s0)
20404c26:	c17ff0ef          	jal	ra,2040483c <__metal_local_interrupt_enable>
20404c2a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:554
}
20404c2c:	853e                	mv	a0,a5
20404c2e:	40f2                	lw	ra,28(sp)
20404c30:	4462                	lw	s0,24(sp)
20404c32:	6105                	addi	sp,sp,32
20404c34:	8082                	ret

20404c36 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20404c36:	1101                	addi	sp,sp,-32
20404c38:	ce06                	sw	ra,28(sp)
20404c3a:	cc22                	sw	s0,24(sp)
20404c3c:	1000                	addi	s0,sp,32
20404c3e:	fea42623          	sw	a0,-20(s0)
20404c42:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20404c46:	fe842783          	lw	a5,-24(s0)
20404c4a:	4601                	li	a2,0
20404c4c:	85be                	mv	a1,a5
20404c4e:	fec42503          	lw	a0,-20(s0)
20404c52:	bebff0ef          	jal	ra,2040483c <__metal_local_interrupt_enable>
20404c56:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:559
}
20404c58:	853e                	mv	a0,a5
20404c5a:	40f2                	lw	ra,28(sp)
20404c5c:	4462                	lw	s0,24(sp)
20404c5e:	6105                	addi	sp,sp,32
20404c60:	8082                	ret

20404c62 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20404c62:	1101                	addi	sp,sp,-32
20404c64:	ce06                	sw	ra,28(sp)
20404c66:	cc22                	sw	s0,24(sp)
20404c68:	1000                	addi	s0,sp,32
20404c6a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20404c6e:	a6dff0ef          	jal	ra,204046da <__metal_controller_interrupt_vector_mode>
20404c72:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:593
}
20404c74:	853e                	mv	a0,a5
20404c76:	40f2                	lw	ra,28(sp)
20404c78:	4462                	lw	s0,24(sp)
20404c7a:	6105                	addi	sp,sp,32
20404c7c:	8082                	ret

20404c7e <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20404c7e:	1101                	addi	sp,sp,-32
20404c80:	ce06                	sw	ra,28(sp)
20404c82:	cc22                	sw	s0,24(sp)
20404c84:	1000                	addi	s0,sp,32
20404c86:	fea42623          	sw	a0,-20(s0)
20404c8a:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20404c8e:	fe842783          	lw	a5,-24(s0)
20404c92:	eb99                	bnez	a5,20404ca8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20404c94:	204047b7          	lui	a5,0x20404
20404c98:	b8078593          	addi	a1,a5,-1152 # 20403b80 <__metal_exception_handler>
20404c9c:	fe842503          	lw	a0,-24(s0)
20404ca0:	a93ff0ef          	jal	ra,20404732 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404ca4:	4781                	li	a5,0
20404ca6:	a00d                	j	20404cc8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404ca8:	fe842703          	lw	a4,-24(s0)
20404cac:	4785                	li	a5,1
20404cae:	00f71c63          	bne	a4,a5,20404cc6 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404cb2:	204077b7          	lui	a5,0x20407
20404cb6:	50078593          	addi	a1,a5,1280 # 20407500 <__metal_vector_table>
20404cba:	fe842503          	lw	a0,-24(s0)
20404cbe:	a75ff0ef          	jal	ra,20404732 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404cc2:	4781                	li	a5,0
20404cc4:	a011                	j	20404cc8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404cc6:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404cc8:	853e                	mv	a0,a5
20404cca:	40f2                	lw	ra,28(sp)
20404ccc:	4462                	lw	s0,24(sp)
20404cce:	6105                	addi	sp,sp,32
20404cd0:	8082                	ret

20404cd2 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404cd2:	1101                	addi	sp,sp,-32
20404cd4:	ce22                	sw	s0,28(sp)
20404cd6:	1000                	addi	s0,sp,32
20404cd8:	fea42623          	sw	a0,-20(s0)
20404cdc:	feb42423          	sw	a1,-24(s0)
20404ce0:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404ce4:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404ce6:	853e                	mv	a0,a5
20404ce8:	4472                	lw	s0,28(sp)
20404cea:	6105                	addi	sp,sp,32
20404cec:	8082                	ret

20404cee <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20404cee:	7139                	addi	sp,sp,-64
20404cf0:	de22                	sw	s0,60(sp)
20404cf2:	0080                	addi	s0,sp,64
20404cf4:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404cf8:	4501                	li	a0,0
20404cfa:	4581                	li	a1,0
20404cfc:	fea42423          	sw	a0,-24(s0)
20404d00:	feb42623          	sw	a1,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404d04:	b80025f3          	csrr	a1,mcycleh
20404d08:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20404d0c:	b00025f3          	csrr	a1,mcycle
20404d10:	feb42023          	sw	a1,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404d14:	b80025f3          	csrr	a1,mcycleh
20404d18:	fcb42e23          	sw	a1,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20404d1c:	fe442503          	lw	a0,-28(s0)
20404d20:	fdc42583          	lw	a1,-36(s0)
20404d24:	feb510e3          	bne	a0,a1,20404d04 <__metal_driver_cpu_mcycle_get+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20404d28:	fe442583          	lw	a1,-28(s0)
20404d2c:	882e                	mv	a6,a1
20404d2e:	4881                	li	a7,0
20404d30:	00081793          	slli	a5,a6,0x0
20404d34:	4701                	li	a4,0
20404d36:	fe042583          	lw	a1,-32(s0)
20404d3a:	862e                	mv	a2,a1
20404d3c:	4681                	li	a3,0
20404d3e:	00c765b3          	or	a1,a4,a2
20404d42:	feb42423          	sw	a1,-24(s0)
20404d46:	8fd5                	or	a5,a5,a3
20404d48:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20404d4c:	fe842703          	lw	a4,-24(s0)
20404d50:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:640
}
20404d54:	853a                	mv	a0,a4
20404d56:	85be                	mv	a1,a5
20404d58:	5472                	lw	s0,60(sp)
20404d5a:	6121                	addi	sp,sp,64
20404d5c:	8082                	ret

20404d5e <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20404d5e:	7179                	addi	sp,sp,-48
20404d60:	d606                	sw	ra,44(sp)
20404d62:	d422                	sw	s0,40(sp)
20404d64:	d24a                	sw	s2,36(sp)
20404d66:	d04e                	sw	s3,32(sp)
20404d68:	1800                	addi	s0,sp,48
20404d6a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20404d6e:	fdc42783          	lw	a5,-36(s0)
20404d72:	e781                	bnez	a5,20404d7a <__metal_driver_cpu_timebase_get+0x1c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20404d74:	4901                	li	s2,0
20404d76:	4981                	li	s3,0
20404d78:	a821                	j	20404d90 <__metal_driver_cpu_timebase_get+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20404d7a:	fdc42503          	lw	a0,-36(s0)
20404d7e:	96ffe0ef          	jal	ra,204036ec <__metal_driver_cpu_timebase>
20404d82:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20404d86:	fec42783          	lw	a5,-20(s0)
20404d8a:	893e                	mv	s2,a5
20404d8c:	87fd                	srai	a5,a5,0x1f
20404d8e:	89be                	mv	s3,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:650
}
20404d90:	874a                	mv	a4,s2
20404d92:	87ce                	mv	a5,s3
20404d94:	853a                	mv	a0,a4
20404d96:	85be                	mv	a1,a5
20404d98:	50b2                	lw	ra,44(sp)
20404d9a:	5422                	lw	s0,40(sp)
20404d9c:	5912                	lw	s2,36(sp)
20404d9e:	5982                	lw	s3,32(sp)
20404da0:	6145                	addi	sp,sp,48
20404da2:	8082                	ret

20404da4 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404da4:	7179                	addi	sp,sp,-48
20404da6:	d606                	sw	ra,44(sp)
20404da8:	d422                	sw	s0,40(sp)
20404daa:	1800                	addi	s0,sp,48
20404dac:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20404db0:	4781                	li	a5,0
20404db2:	4801                	li	a6,0
20404db4:	fef42023          	sw	a5,-32(s0)
20404db8:	ff042223          	sw	a6,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404dbc:	fdc42503          	lw	a0,-36(s0)
20404dc0:	957fe0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404dc4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20404dc8:	fec42783          	lw	a5,-20(s0)
20404dcc:	c78d                	beqz	a5,20404df6 <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404dce:	fec42783          	lw	a5,-20(s0)
20404dd2:	13c7a783          	lw	a5,316(a5)
20404dd6:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20404dda:	fe842783          	lw	a5,-24(s0)
20404dde:	cf81                	beqz	a5,20404df6 <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20404de0:	fe842783          	lw	a5,-24(s0)
20404de4:	439c                	lw	a5,0(a5)
20404de6:	47f8                	lw	a4,76(a5)
20404de8:	fe040793          	addi	a5,s0,-32
20404dec:	863e                	mv	a2,a5
20404dee:	4585                	li	a1,1
20404df0:	fe842503          	lw	a0,-24(s0)
20404df4:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404df6:	fe042703          	lw	a4,-32(s0)
20404dfa:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:667
}
20404dfe:	853a                	mv	a0,a4
20404e00:	85be                	mv	a1,a5
20404e02:	50b2                	lw	ra,44(sp)
20404e04:	5422                	lw	s0,40(sp)
20404e06:	6145                	addi	sp,sp,48
20404e08:	8082                	ret

20404e0a <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404e0a:	7179                	addi	sp,sp,-48
20404e0c:	d606                	sw	ra,44(sp)
20404e0e:	d422                	sw	s0,40(sp)
20404e10:	d226                	sw	s1,36(sp)
20404e12:	1800                	addi	s0,sp,48
20404e14:	fca42e23          	sw	a0,-36(s0)
20404e18:	fcb42823          	sw	a1,-48(s0)
20404e1c:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404e20:	57fd                	li	a5,-1
20404e22:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404e26:	fdc42503          	lw	a0,-36(s0)
20404e2a:	8edfe0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404e2e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20404e32:	fe842783          	lw	a5,-24(s0)
20404e36:	cf8d                	beqz	a5,20404e70 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404e38:	fe842783          	lw	a5,-24(s0)
20404e3c:	13c7a783          	lw	a5,316(a5)
20404e40:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20404e44:	fe442783          	lw	a5,-28(s0)
20404e48:	c785                	beqz	a5,20404e70 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20404e4a:	fe442783          	lw	a5,-28(s0)
20404e4e:	439c                	lw	a5,0(a5)
20404e50:	4ba4                	lw	s1,80(a5)
20404e52:	fdc42503          	lw	a0,-36(s0)
20404e56:	873fe0ef          	jal	ra,204036c8 <__metal_driver_cpu_hartid>
20404e5a:	87aa                	mv	a5,a0
20404e5c:	fd042603          	lw	a2,-48(s0)
20404e60:	fd442683          	lw	a3,-44(s0)
20404e64:	85be                	mv	a1,a5
20404e66:	fe442503          	lw	a0,-28(s0)
20404e6a:	9482                	jalr	s1
20404e6c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20404e70:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:685
}
20404e74:	853e                	mv	a0,a5
20404e76:	50b2                	lw	ra,44(sp)
20404e78:	5422                	lw	s0,40(sp)
20404e7a:	5492                	lw	s1,36(sp)
20404e7c:	6145                	addi	sp,sp,48
20404e7e:	8082                	ret

20404e80 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20404e80:	1101                	addi	sp,sp,-32
20404e82:	ce22                	sw	s0,28(sp)
20404e84:	1000                	addi	s0,sp,32
20404e86:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404e8a:	800007b7          	lui	a5,0x80000
20404e8e:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20404e92:	853e                	mv	a0,a5
20404e94:	4472                	lw	s0,28(sp)
20404e96:	6105                	addi	sp,sp,32
20404e98:	8082                	ret

20404e9a <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20404e9a:	1101                	addi	sp,sp,-32
20404e9c:	ce22                	sw	s0,28(sp)
20404e9e:	1000                	addi	s0,sp,32
20404ea0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20404ea4:	479d                	li	a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:703
}
20404ea6:	853e                	mv	a0,a5
20404ea8:	4472                	lw	s0,28(sp)
20404eaa:	6105                	addi	sp,sp,32
20404eac:	8082                	ret

20404eae <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20404eae:	1101                	addi	sp,sp,-32
20404eb0:	ce22                	sw	s0,28(sp)
20404eb2:	1000                	addi	s0,sp,32
20404eb4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404eb8:	800007b7          	lui	a5,0x80000
20404ebc:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20404ec0:	853e                	mv	a0,a5
20404ec2:	4472                	lw	s0,28(sp)
20404ec4:	6105                	addi	sp,sp,32
20404ec6:	8082                	ret

20404ec8 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20404ec8:	1101                	addi	sp,sp,-32
20404eca:	ce22                	sw	s0,28(sp)
20404ecc:	1000                	addi	s0,sp,32
20404ece:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20404ed2:	478d                	li	a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:721
}
20404ed4:	853e                	mv	a0,a5
20404ed6:	4472                	lw	s0,28(sp)
20404ed8:	6105                	addi	sp,sp,32
20404eda:	8082                	ret

20404edc <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404edc:	7179                	addi	sp,sp,-48
20404ede:	d606                	sw	ra,44(sp)
20404ee0:	d422                	sw	s0,40(sp)
20404ee2:	1800                	addi	s0,sp,48
20404ee4:	fca42e23          	sw	a0,-36(s0)
20404ee8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20404eec:	57fd                	li	a5,-1
20404eee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404ef2:	fdc42503          	lw	a0,-36(s0)
20404ef6:	821fe0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404efa:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20404efe:	fe842783          	lw	a5,-24(s0)
20404f02:	c79d                	beqz	a5,20404f30 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404f04:	fe842783          	lw	a5,-24(s0)
20404f08:	0dc7a783          	lw	a5,220(a5)
20404f0c:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20404f10:	fe442783          	lw	a5,-28(s0)
20404f14:	cf91                	beqz	a5,20404f30 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404f16:	fe442783          	lw	a5,-28(s0)
20404f1a:	439c                	lw	a5,0(a5)
20404f1c:	47f8                	lw	a4,76(a5)
20404f1e:	fd840793          	addi	a5,s0,-40
20404f22:	863e                	mv	a2,a5
20404f24:	458d                	li	a1,3
20404f26:	fe442503          	lw	a0,-28(s0)
20404f2a:	9702                	jalr	a4
20404f2c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20404f30:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:738
}
20404f34:	853e                	mv	a0,a5
20404f36:	50b2                	lw	ra,44(sp)
20404f38:	5422                	lw	s0,40(sp)
20404f3a:	6145                	addi	sp,sp,48
20404f3c:	8082                	ret

20404f3e <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404f3e:	7179                	addi	sp,sp,-48
20404f40:	d606                	sw	ra,44(sp)
20404f42:	d422                	sw	s0,40(sp)
20404f44:	1800                	addi	s0,sp,48
20404f46:	fca42e23          	sw	a0,-36(s0)
20404f4a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20404f4e:	57fd                	li	a5,-1
20404f50:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404f54:	fdc42503          	lw	a0,-36(s0)
20404f58:	fbefe0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404f5c:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20404f60:	fe842783          	lw	a5,-24(s0)
20404f64:	c79d                	beqz	a5,20404f92 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404f66:	fe842783          	lw	a5,-24(s0)
20404f6a:	0dc7a783          	lw	a5,220(a5)
20404f6e:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20404f72:	fe442783          	lw	a5,-28(s0)
20404f76:	cf91                	beqz	a5,20404f92 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20404f78:	fe442783          	lw	a5,-28(s0)
20404f7c:	439c                	lw	a5,0(a5)
20404f7e:	47f8                	lw	a4,76(a5)
20404f80:	fd840793          	addi	a5,s0,-40
20404f84:	863e                	mv	a2,a5
20404f86:	4589                	li	a1,2
20404f88:	fe442503          	lw	a0,-28(s0)
20404f8c:	9702                	jalr	a4
20404f8e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20404f92:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:755
}
20404f96:	853e                	mv	a0,a5
20404f98:	50b2                	lw	ra,44(sp)
20404f9a:	5422                	lw	s0,40(sp)
20404f9c:	6145                	addi	sp,sp,48
20404f9e:	8082                	ret

20404fa0 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20404fa0:	7179                	addi	sp,sp,-48
20404fa2:	d606                	sw	ra,44(sp)
20404fa4:	d422                	sw	s0,40(sp)
20404fa6:	1800                	addi	s0,sp,48
20404fa8:	fca42e23          	sw	a0,-36(s0)
20404fac:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20404fb0:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404fb4:	fdc42503          	lw	a0,-36(s0)
20404fb8:	f5efe0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20404fbc:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20404fc0:	fe842783          	lw	a5,-24(s0)
20404fc4:	c79d                	beqz	a5,20404ff2 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404fc6:	fe842783          	lw	a5,-24(s0)
20404fca:	0dc7a783          	lw	a5,220(a5)
20404fce:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20404fd2:	fe442783          	lw	a5,-28(s0)
20404fd6:	cf91                	beqz	a5,20404ff2 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20404fd8:	fe442783          	lw	a5,-28(s0)
20404fdc:	439c                	lw	a5,0(a5)
20404fde:	47f8                	lw	a4,76(a5)
20404fe0:	fd840793          	addi	a5,s0,-40
20404fe4:	863e                	mv	a2,a5
20404fe6:	4591                	li	a1,4
20404fe8:	fe442503          	lw	a0,-28(s0)
20404fec:	9702                	jalr	a4
20404fee:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20404ff2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404ff6:	853e                	mv	a0,a5
20404ff8:	50b2                	lw	ra,44(sp)
20404ffa:	5422                	lw	s0,40(sp)
20404ffc:	6145                	addi	sp,sp,48
20404ffe:	8082                	ret

20405000 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20405000:	1101                	addi	sp,sp,-32
20405002:	ce06                	sw	ra,28(sp)
20405004:	cc22                	sw	s0,24(sp)
20405006:	1000                	addi	s0,sp,32
20405008:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2040500c:	fec42503          	lw	a0,-20(s0)
20405010:	f06fe0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
20405014:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:777
}
20405016:	853e                	mv	a0,a5
20405018:	40f2                	lw	ra,28(sp)
2040501a:	4462                	lw	s0,24(sp)
2040501c:	6105                	addi	sp,sp,32
2040501e:	8082                	ret

20405020 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20405020:	7179                	addi	sp,sp,-48
20405022:	d606                	sw	ra,44(sp)
20405024:	d422                	sw	s0,40(sp)
20405026:	1800                	addi	s0,sp,48
20405028:	fca42e23          	sw	a0,-36(s0)
2040502c:	fcb42c23          	sw	a1,-40(s0)
20405030:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405034:	fdc42503          	lw	a0,-36(s0)
20405038:	edefe0ef          	jal	ra,20403716 <__metal_driver_cpu_interrupt_controller>
2040503c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20405040:	fec42783          	lw	a5,-20(s0)
20405044:	cb99                	beqz	a5,2040505a <__metal_driver_cpu_exception_register+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20405046:	fd442603          	lw	a2,-44(s0)
2040504a:	fd842583          	lw	a1,-40(s0)
2040504e:	fec42503          	lw	a0,-20(s0)
20405052:	8a7ff0ef          	jal	ra,204048f8 <__metal_exception_register>
20405056:	87aa                	mv	a5,a0
20405058:	a011                	j	2040505c <__metal_driver_cpu_exception_register+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
2040505a:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:808
}
2040505c:	853e                	mv	a0,a5
2040505e:	50b2                	lw	ra,44(sp)
20405060:	5422                	lw	s0,40(sp)
20405062:	6145                	addi	sp,sp,48
20405064:	8082                	ret

20405066 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20405066:	1101                	addi	sp,sp,-32
20405068:	ce22                	sw	s0,28(sp)
2040506a:	1000                	addi	s0,sp,32
2040506c:	fea42623          	sw	a0,-20(s0)
20405070:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20405074:	fe842783          	lw	a5,-24(s0)
20405078:	0007d783          	lhu	a5,0(a5)
2040507c:	0037f713          	andi	a4,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20405080:	478d                	li	a5,3
20405082:	00f71463          	bne	a4,a5,2040508a <__metal_driver_cpu_get_instruction_length+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20405086:	4791                	li	a5,4
20405088:	a011                	j	2040508c <__metal_driver_cpu_get_instruction_length+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2040508a:	4789                	li	a5,2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2040508c:	853e                	mv	a0,a5
2040508e:	4472                	lw	s0,28(sp)
20405090:	6105                	addi	sp,sp,32
20405092:	8082                	ret

20405094 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20405094:	7179                	addi	sp,sp,-48
20405096:	d622                	sw	s0,44(sp)
20405098:	1800                	addi	s0,sp,48
2040509a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
2040509e:	341027f3          	csrr	a5,mepc
204050a2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
204050a6:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:827
}
204050aa:	853e                	mv	a0,a5
204050ac:	5432                	lw	s0,44(sp)
204050ae:	6145                	addi	sp,sp,48
204050b0:	8082                	ret

204050b2 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
204050b2:	1101                	addi	sp,sp,-32
204050b4:	ce22                	sw	s0,28(sp)
204050b6:	1000                	addi	s0,sp,32
204050b8:	fea42623          	sw	a0,-20(s0)
204050bc:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
204050c0:	fe842783          	lw	a5,-24(s0)
204050c4:	34179073          	csrw	mepc,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
204050c8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:832
}
204050ca:	853e                	mv	a0,a5
204050cc:	4472                	lw	s0,28(sp)
204050ce:	6105                	addi	sp,sp,32
204050d0:	8082                	ret

204050d2 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
204050d2:	1101                	addi	sp,sp,-32
204050d4:	ce06                	sw	ra,28(sp)
204050d6:	cc22                	sw	s0,24(sp)
204050d8:	1000                	addi	s0,sp,32
204050da:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
204050de:	fec42503          	lw	a0,-20(s0)
204050e2:	e5efe0ef          	jal	ra,20403740 <__metal_driver_cpu_buserror>
204050e6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:836
}
204050e8:	853e                	mv	a0,a5
204050ea:	40f2                	lw	ra,28(sp)
204050ec:	4462                	lw	s0,24(sp)
204050ee:	6105                	addi	sp,sp,32
204050f0:	8082                	ret

204050f2 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
204050f2:	1101                	addi	sp,sp,-32
204050f4:	ce22                	sw	s0,28(sp)
204050f6:	1000                	addi	s0,sp,32
204050f8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204050fc:	fec42703          	lw	a4,-20(s0)
20405100:	800007b7          	lui	a5,0x80000
20405104:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
20405108:	00f71563          	bne	a4,a5,20405112 <__metal_driver_sifive_plic0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040510c:	0c0007b7          	lui	a5,0xc000
20405110:	a011                	j	20405114 <__metal_driver_sifive_plic0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:319
	}
	else {
		return 0;
20405112:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:321
	}
}
20405114:	853e                	mv	a0,a5
20405116:	4472                	lw	s0,28(sp)
20405118:	6105                	addi	sp,sp,32
2040511a:	8082                	ret

2040511c <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040511c:	1101                	addi	sp,sp,-32
2040511e:	ce22                	sw	s0,28(sp)
20405120:	1000                	addi	s0,sp,32
20405122:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20405126:	fec42703          	lw	a4,-20(s0)
2040512a:	800007b7          	lui	a5,0x80000
2040512e:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
20405132:	00f71463          	bne	a4,a5,2040513a <__metal_driver_sifive_plic0_num_interrupts+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20405136:	47ed                	li	a5,27
20405138:	a011                	j	2040513c <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:339
	}
	else {
		return 0;
2040513a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:341
	}
}
2040513c:	853e                	mv	a0,a5
2040513e:	4472                	lw	s0,28(sp)
20405140:	6105                	addi	sp,sp,32
20405142:	8082                	ret

20405144 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20405144:	1101                	addi	sp,sp,-32
20405146:	ce22                	sw	s0,28(sp)
20405148:	1000                	addi	s0,sp,32
2040514a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040514e:	fec42703          	lw	a4,-20(s0)
20405152:	800007b7          	lui	a5,0x80000
20405156:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
2040515a:	00f71463          	bne	a4,a5,20405162 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
2040515e:	479d                	li	a5,7
20405160:	a011                	j	20405164 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:349
	}
	else {
		return 0;
20405162:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:351
	}
}
20405164:	853e                	mv	a0,a5
20405166:	4472                	lw	s0,28(sp)
20405168:	6105                	addi	sp,sp,32
2040516a:	8082                	ret

2040516c <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2040516c:	1101                	addi	sp,sp,-32
2040516e:	ce22                	sw	s0,28(sp)
20405170:	1000                	addi	s0,sp,32
20405172:	fea42623          	sw	a0,-20(s0)
20405176:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:355
	if (idx == 0) {
2040517a:	fe842783          	lw	a5,-24(s0)
2040517e:	e791                	bnez	a5,2040518a <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405180:	800007b7          	lui	a5,0x80000
20405184:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
20405188:	a011                	j	2040518c <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:359
	}
	else {
		return NULL;
2040518a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:361
	}
}
2040518c:	853e                	mv	a0,a5
2040518e:	4472                	lw	s0,28(sp)
20405190:	6105                	addi	sp,sp,32
20405192:	8082                	ret

20405194 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20405194:	1101                	addi	sp,sp,-32
20405196:	ce22                	sw	s0,28(sp)
20405198:	1000                	addi	s0,sp,32
2040519a:	fea42623          	sw	a0,-20(s0)
2040519e:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:365
	if (idx == 0) {
204051a2:	fe842783          	lw	a5,-24(s0)
204051a6:	e399                	bnez	a5,204051ac <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:366
		return 11;
204051a8:	47ad                	li	a5,11
204051aa:	a011                	j	204051ae <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:369
	}
	else {
		return 0;
204051ac:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:371
	}
}
204051ae:	853e                	mv	a0,a5
204051b0:	4472                	lw	s0,28(sp)
204051b2:	6105                	addi	sp,sp,32
204051b4:	8082                	ret

204051b6 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
204051b6:	1101                	addi	sp,sp,-32
204051b8:	ce22                	sw	s0,28(sp)
204051ba:	1000                	addi	s0,sp,32
204051bc:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:375
	if (hartid == 0) {
204051c0:	fec42783          	lw	a5,-20(s0)
204051c4:	e399                	bnez	a5,204051ca <__metal_driver_sifive_plic0_context_ids+0x14>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:376
		return 0;
204051c6:	4781                	li	a5,0
204051c8:	a011                	j	204051cc <__metal_driver_sifive_plic0_context_ids+0x16>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:379
	}
	else {
		return -1;
204051ca:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:381
	}
}
204051cc:	853e                	mv	a0,a5
204051ce:	4472                	lw	s0,28(sp)
204051d0:	6105                	addi	sp,sp,32
204051d2:	8082                	ret

204051d4 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
204051d4:	7179                	addi	sp,sp,-48
204051d6:	d606                	sw	ra,44(sp)
204051d8:	d422                	sw	s0,40(sp)
204051da:	1800                	addi	s0,sp,48
204051dc:	fca42e23          	sw	a0,-36(s0)
204051e0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204051e4:	fdc42503          	lw	a0,-36(s0)
204051e8:	3729                	jal	204050f2 <__metal_driver_sifive_plic0_control_base>
204051ea:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
204051ee:	fd842783          	lw	a5,-40(s0)
204051f2:	00c79713          	slli	a4,a5,0xc
204051f6:	fec42783          	lw	a5,-20(s0)
204051fa:	973e                	add	a4,a4,a5
204051fc:	002007b7          	lui	a5,0x200
20405200:	0791                	addi	a5,a5,4
20405202:	97ba                	add	a5,a5,a4
20405204:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20405206:	853e                	mv	a0,a5
20405208:	50b2                	lw	ra,44(sp)
2040520a:	5422                	lw	s0,40(sp)
2040520c:	6145                	addi	sp,sp,48
2040520e:	8082                	ret

20405210 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20405210:	7179                	addi	sp,sp,-48
20405212:	d606                	sw	ra,44(sp)
20405214:	d422                	sw	s0,40(sp)
20405216:	1800                	addi	s0,sp,48
20405218:	fca42e23          	sw	a0,-36(s0)
2040521c:	fcb42c23          	sw	a1,-40(s0)
20405220:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405224:	fdc42503          	lw	a0,-36(s0)
20405228:	35e9                	jal	204050f2 <__metal_driver_sifive_plic0_control_base>
2040522a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
2040522e:	fd842783          	lw	a5,-40(s0)
20405232:	00c79713          	slli	a4,a5,0xc
20405236:	fec42783          	lw	a5,-20(s0)
2040523a:	973e                	add	a4,a4,a5
2040523c:	002007b7          	lui	a5,0x200
20405240:	0791                	addi	a5,a5,4
20405242:	97ba                	add	a5,a5,a4
20405244:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20405246:	fd442783          	lw	a5,-44(s0)
2040524a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:35
}
2040524c:	0001                	nop
2040524e:	50b2                	lw	ra,44(sp)
20405250:	5422                	lw	s0,40(sp)
20405252:	6145                	addi	sp,sp,48
20405254:	8082                	ret

20405256 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20405256:	7179                	addi	sp,sp,-48
20405258:	d606                	sw	ra,44(sp)
2040525a:	d422                	sw	s0,40(sp)
2040525c:	1800                	addi	s0,sp,48
2040525e:	fca42e23          	sw	a0,-36(s0)
20405262:	fcb42c23          	sw	a1,-40(s0)
20405266:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040526a:	fdc42503          	lw	a0,-36(s0)
2040526e:	3551                	jal	204050f2 <__metal_driver_sifive_plic0_control_base>
20405270:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20405274:	fd842783          	lw	a5,-40(s0)
20405278:	00c79713          	slli	a4,a5,0xc
2040527c:	fec42783          	lw	a5,-20(s0)
20405280:	973e                	add	a4,a4,a5
20405282:	002007b7          	lui	a5,0x200
20405286:	97ba                	add	a5,a5,a4
20405288:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2040528a:	fd442783          	lw	a5,-44(s0)
2040528e:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20405290:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405292:	853e                	mv	a0,a5
20405294:	50b2                	lw	ra,44(sp)
20405296:	5422                	lw	s0,40(sp)
20405298:	6145                	addi	sp,sp,48
2040529a:	8082                	ret

2040529c <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2040529c:	7179                	addi	sp,sp,-48
2040529e:	d606                	sw	ra,44(sp)
204052a0:	d422                	sw	s0,40(sp)
204052a2:	1800                	addi	s0,sp,48
204052a4:	fca42e23          	sw	a0,-36(s0)
204052a8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204052ac:	fdc42503          	lw	a0,-36(s0)
204052b0:	3589                	jal	204050f2 <__metal_driver_sifive_plic0_control_base>
204052b2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
204052b6:	fd842783          	lw	a5,-40(s0)
204052ba:	00c79713          	slli	a4,a5,0xc
204052be:	fec42783          	lw	a5,-20(s0)
204052c2:	973e                	add	a4,a4,a5
204052c4:	002007b7          	lui	a5,0x200
204052c8:	97ba                	add	a5,a5,a4
204052ca:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
204052cc:	853e                	mv	a0,a5
204052ce:	50b2                	lw	ra,44(sp)
204052d0:	5422                	lw	s0,40(sp)
204052d2:	6145                	addi	sp,sp,48
204052d4:	8082                	ret

204052d6 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
204052d6:	7179                	addi	sp,sp,-48
204052d8:	d606                	sw	ra,44(sp)
204052da:	d422                	sw	s0,40(sp)
204052dc:	1800                	addi	s0,sp,48
204052de:	fca42e23          	sw	a0,-36(s0)
204052e2:	fcb42c23          	sw	a1,-40(s0)
204052e6:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204052ea:	fdc42503          	lw	a0,-36(s0)
204052ee:	3511                	jal	204050f2 <__metal_driver_sifive_plic0_control_base>
204052f0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
204052f4:	fdc42503          	lw	a0,-36(s0)
204052f8:	35b1                	jal	20405144 <__metal_driver_sifive_plic0_max_priority>
204052fa:	87aa                	mv	a5,a0
204052fc:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20405300:	fe842783          	lw	a5,-24(s0)
20405304:	c785                	beqz	a5,2040532c <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405306:	fd442703          	lw	a4,-44(s0)
2040530a:	fe842783          	lw	a5,-24(s0)
2040530e:	00f77f63          	bgeu	a4,a5,2040532c <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20405312:	fd842783          	lw	a5,-40(s0)
20405316:	078a                	slli	a5,a5,0x2
20405318:	873e                	mv	a4,a5
2040531a:	fec42783          	lw	a5,-20(s0)
2040531e:	97ba                	add	a5,a5,a4
20405320:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20405322:	fd442783          	lw	a5,-44(s0)
20405326:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20405328:	4781                	li	a5,0
2040532a:	a011                	j	2040532e <__metal_driver_riscv_plic0_set_priority+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
2040532c:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:72
}
2040532e:	853e                	mv	a0,a5
20405330:	50b2                	lw	ra,44(sp)
20405332:	5422                	lw	s0,40(sp)
20405334:	6145                	addi	sp,sp,48
20405336:	8082                	ret

20405338 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20405338:	7179                	addi	sp,sp,-48
2040533a:	d606                	sw	ra,44(sp)
2040533c:	d422                	sw	s0,40(sp)
2040533e:	1800                	addi	s0,sp,48
20405340:	fca42e23          	sw	a0,-36(s0)
20405344:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20405348:	fdc42503          	lw	a0,-36(s0)
2040534c:	335d                	jal	204050f2 <__metal_driver_sifive_plic0_control_base>
2040534e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20405352:	fd842783          	lw	a5,-40(s0)
20405356:	078a                	slli	a5,a5,0x2
20405358:	873e                	mv	a4,a5
2040535a:	fec42783          	lw	a5,-20(s0)
2040535e:	97ba                	add	a5,a5,a4
20405360:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20405362:	853e                	mv	a0,a5
20405364:	50b2                	lw	ra,44(sp)
20405366:	5422                	lw	s0,40(sp)
20405368:	6145                	addi	sp,sp,48
2040536a:	8082                	ret

2040536c <__metal_plic0_enable>:
__metal_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2040536c:	7179                	addi	sp,sp,-48
2040536e:	d606                	sw	ra,44(sp)
20405370:	d422                	sw	s0,40(sp)
20405372:	1800                	addi	s0,sp,48
20405374:	fca42e23          	sw	a0,-36(s0)
20405378:	fcb42c23          	sw	a1,-40(s0)
2040537c:	fcc42a23          	sw	a2,-44(s0)
20405380:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405384:	fdc42503          	lw	a0,-36(s0)
20405388:	33ad                	jal	204050f2 <__metal_driver_sifive_plic0_control_base>
2040538a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
2040538e:	fd842783          	lw	a5,-40(s0)
20405392:	00779713          	slli	a4,a5,0x7
20405396:	fec42783          	lw	a5,-20(s0)
2040539a:	97ba                	add	a5,a5,a4
2040539c:	fd442703          	lw	a4,-44(s0)
204053a0:	8715                	srai	a4,a4,0x5
204053a2:	070a                	slli	a4,a4,0x2
204053a4:	973e                	add	a4,a4,a5
204053a6:	6789                	lui	a5,0x2
204053a8:	97ba                	add	a5,a5,a4
204053aa:	439c                	lw	a5,0(a5)
204053ac:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204053b0:	fd042783          	lw	a5,-48(s0)
204053b4:	cf81                	beqz	a5,204053cc <__metal_plic0_enable+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
204053b6:	fd442783          	lw	a5,-44(s0)
204053ba:	8bfd                	andi	a5,a5,31
204053bc:	4705                	li	a4,1
204053be:	00f717b3          	sll	a5,a4,a5
204053c2:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204053c4:	fe842783          	lw	a5,-24(s0)
204053c8:	8fd9                	or	a5,a5,a4
204053ca:	a829                	j	204053e4 <__metal_plic0_enable+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
204053cc:	fd442783          	lw	a5,-44(s0)
204053d0:	8bfd                	andi	a5,a5,31
204053d2:	4705                	li	a4,1
204053d4:	00f717b3          	sll	a5,a4,a5
204053d8:	fff7c793          	not	a5,a5
204053dc:	873e                	mv	a4,a5
204053de:	fe842783          	lw	a5,-24(s0)
204053e2:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
204053e4:	fd842703          	lw	a4,-40(s0)
204053e8:	00771693          	slli	a3,a4,0x7
204053ec:	fec42703          	lw	a4,-20(s0)
204053f0:	9736                	add	a4,a4,a3
204053f2:	fd442683          	lw	a3,-44(s0)
204053f6:	8695                	srai	a3,a3,0x5
204053f8:	068a                	slli	a3,a3,0x2
204053fa:	96ba                	add	a3,a3,a4
204053fc:	6709                	lui	a4,0x2
204053fe:	9736                	add	a4,a4,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20405400:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405402:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405404:	853e                	mv	a0,a5
20405406:	50b2                	lw	ra,44(sp)
20405408:	5422                	lw	s0,40(sp)
2040540a:	6145                	addi	sp,sp,48
2040540c:	8082                	ret

2040540e <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
2040540e:	1101                	addi	sp,sp,-32
20405410:	ce06                	sw	ra,28(sp)
20405412:	cc22                	sw	s0,24(sp)
20405414:	1000                	addi	s0,sp,32
20405416:	fea42623          	sw	a0,-20(s0)
2040541a:	feb42423          	sw	a1,-24(s0)
2040541e:	12c00513          	li	a0,300
20405422:	0a0020ef          	jal	ra,204074c2 <metal_shutdown>

20405426 <__metal_plic0_handler>:
__metal_plic0_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20405426:	7179                	addi	sp,sp,-48
20405428:	d606                	sw	ra,44(sp)
2040542a:	d422                	sw	s0,40(sp)
2040542c:	1800                	addi	s0,sp,48
2040542e:	fca42e23          	sw	a0,-36(s0)
20405432:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20405436:	fd842783          	lw	a5,-40(s0)
2040543a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
2040543e:	b56fe0ef          	jal	ra,20403794 <__metal_myhart_id>
20405442:	87aa                	mv	a5,a0
20405444:	853e                	mv	a0,a5
20405446:	3b85                	jal	204051b6 <__metal_driver_sifive_plic0_context_ids>
20405448:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
2040544c:	fe842583          	lw	a1,-24(s0)
20405450:	fec42503          	lw	a0,-20(s0)
20405454:	3341                	jal	204051d4 <__metal_plic0_claim_interrupt>
20405456:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
2040545a:	fec42503          	lw	a0,-20(s0)
2040545e:	cbfff0ef          	jal	ra,2040511c <__metal_driver_sifive_plic0_num_interrupts>
20405462:	87aa                	mv	a5,a0
20405464:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20405468:	fe442703          	lw	a4,-28(s0)
2040546c:	fe042783          	lw	a5,-32(s0)
20405470:	04f77263          	bgeu	a4,a5,204054b4 <__metal_plic0_handler+0x8e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20405474:	fec42703          	lw	a4,-20(s0)
20405478:	fe442783          	lw	a5,-28(s0)
2040547c:	078a                	slli	a5,a5,0x2
2040547e:	97ba                	add	a5,a5,a4
20405480:	479c                	lw	a5,8(a5)
20405482:	cb8d                	beqz	a5,204054b4 <__metal_plic0_handler+0x8e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20405484:	fec42703          	lw	a4,-20(s0)
20405488:	fe442783          	lw	a5,-28(s0)
2040548c:	078a                	slli	a5,a5,0x2
2040548e:	97ba                	add	a5,a5,a4
20405490:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20405494:	fe442603          	lw	a2,-28(s0)
20405498:	fec42683          	lw	a3,-20(s0)
2040549c:	fe442703          	lw	a4,-28(s0)
204054a0:	87ba                	mv	a5,a4
204054a2:	0786                	slli	a5,a5,0x1
204054a4:	97ba                	add	a5,a5,a4
204054a6:	078e                	slli	a5,a5,0x3
204054a8:	97b6                	add	a5,a5,a3
204054aa:	0887a783          	lw	a5,136(a5)
204054ae:	85be                	mv	a1,a5
204054b0:	8532                	mv	a0,a2
204054b2:	9802                	jalr	a6
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
204054b4:	fe442603          	lw	a2,-28(s0)
204054b8:	fe842583          	lw	a1,-24(s0)
204054bc:	fec42503          	lw	a0,-20(s0)
204054c0:	3b81                	jal	20405210 <__metal_plic0_complete_interrupt>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:121
}
204054c2:	0001                	nop
204054c4:	50b2                	lw	ra,44(sp)
204054c6:	5422                	lw	s0,40(sp)
204054c8:	6145                	addi	sp,sp,48
204054ca:	8082                	ret

204054cc <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
204054cc:	7139                	addi	sp,sp,-64
204054ce:	de06                	sw	ra,60(sp)
204054d0:	dc22                	sw	s0,56(sp)
204054d2:	0080                	addi	s0,sp,64
204054d4:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204054d8:	fcc42783          	lw	a5,-52(s0)
204054dc:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
204054e0:	fe442783          	lw	a5,-28(s0)
204054e4:	43dc                	lw	a5,4(a5)
204054e6:	12079a63          	bnez	a5,2040561a <__metal_driver_riscv_plic0_init+0x14e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204054ea:	fe042623          	sw	zero,-20(s0)
204054ee:	aa31                	j	2040560a <__metal_driver_riscv_plic0_init+0x13e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
204054f0:	fcc42503          	lw	a0,-52(s0)
204054f4:	c29ff0ef          	jal	ra,2040511c <__metal_driver_sifive_plic0_num_interrupts>
204054f8:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
204054fc:	fec42583          	lw	a1,-20(s0)
20405500:	fcc42503          	lw	a0,-52(s0)
20405504:	c69ff0ef          	jal	ra,2040516c <__metal_driver_sifive_plic0_interrupt_parents>
20405508:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
2040550c:	fec42583          	lw	a1,-20(s0)
20405510:	fcc42503          	lw	a0,-52(s0)
20405514:	c81ff0ef          	jal	ra,20405194 <__metal_driver_sifive_plic0_interrupt_lines>
20405518:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
2040551c:	fdc42783          	lw	a5,-36(s0)
20405520:	439c                	lw	a5,0(a5)
20405522:	439c                	lw	a5,0(a5)
20405524:	fdc42503          	lw	a0,-36(s0)
20405528:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
2040552a:	fe042423          	sw	zero,-24(s0)
2040552e:	a885                	j	2040559e <__metal_driver_riscv_plic0_init+0xd2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20405530:	4681                	li	a3,0
20405532:	fe842603          	lw	a2,-24(s0)
20405536:	fec42583          	lw	a1,-20(s0)
2040553a:	fe442503          	lw	a0,-28(s0)
2040553e:	353d                	jal	2040536c <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20405540:	fe842703          	lw	a4,-24(s0)
20405544:	fe042783          	lw	a5,-32(s0)
20405548:	04f75663          	bge	a4,a5,20405594 <__metal_driver_riscv_plic0_init+0xc8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
2040554c:	4601                	li	a2,0
2040554e:	fe842583          	lw	a1,-24(s0)
20405552:	fcc42503          	lw	a0,-52(s0)
20405556:	3341                	jal	204052d6 <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20405558:	fe442703          	lw	a4,-28(s0)
2040555c:	fe842783          	lw	a5,-24(s0)
20405560:	078a                	slli	a5,a5,0x2
20405562:	97ba                	add	a5,a5,a4
20405564:	0007a423          	sw	zero,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20405568:	fe442683          	lw	a3,-28(s0)
2040556c:	fe842703          	lw	a4,-24(s0)
20405570:	87ba                	mv	a5,a4
20405572:	0786                	slli	a5,a5,0x1
20405574:	97ba                	add	a5,a5,a4
20405576:	078e                	slli	a5,a5,0x3
20405578:	97b6                	add	a5,a5,a3
2040557a:	0807a223          	sw	zero,132(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
2040557e:	fe442683          	lw	a3,-28(s0)
20405582:	fe842703          	lw	a4,-24(s0)
20405586:	87ba                	mv	a5,a4
20405588:	0786                	slli	a5,a5,0x1
2040558a:	97ba                	add	a5,a5,a4
2040558c:	078e                	slli	a5,a5,0x3
2040558e:	97b6                	add	a5,a5,a3
20405590:	0807a423          	sw	zero,136(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405594:	fe842783          	lw	a5,-24(s0)
20405598:	0785                	addi	a5,a5,1
2040559a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2040559e:	fe842703          	lw	a4,-24(s0)
204055a2:	3ff00793          	li	a5,1023
204055a6:	f8e7d5e3          	bge	a5,a4,20405530 <__metal_driver_riscv_plic0_init+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
204055aa:	4601                	li	a2,0
204055ac:	fec42583          	lw	a1,-20(s0)
204055b0:	fcc42503          	lw	a0,-52(s0)
204055b4:	ca3ff0ef          	jal	ra,20405256 <__metal_plic0_set_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
204055b8:	fdc42783          	lw	a5,-36(s0)
204055bc:	439c                	lw	a5,0(a5)
204055be:	4fdc                	lw	a5,28(a5)
204055c0:	fe442683          	lw	a3,-28(s0)
204055c4:	4601                	li	a2,0
204055c6:	fd842583          	lw	a1,-40(s0)
204055ca:	fdc42503          	lw	a0,-36(s0)
204055ce:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
204055d0:	fdc42783          	lw	a5,-36(s0)
204055d4:	439c                	lw	a5,0(a5)
204055d6:	4fd8                	lw	a4,28(a5)
204055d8:	fe442683          	lw	a3,-28(s0)
204055dc:	204057b7          	lui	a5,0x20405
204055e0:	42678613          	addi	a2,a5,1062 # 20405426 <__metal_plic0_handler>
204055e4:	fd842583          	lw	a1,-40(s0)
204055e8:	fdc42503          	lw	a0,-36(s0)
204055ec:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
204055ee:	fdc42783          	lw	a5,-36(s0)
204055f2:	439c                	lw	a5,0(a5)
204055f4:	53dc                	lw	a5,36(a5)
204055f6:	fd842583          	lw	a1,-40(s0)
204055fa:	fdc42503          	lw	a0,-36(s0)
204055fe:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405600:	fec42783          	lw	a5,-20(s0)
20405604:	0785                	addi	a5,a5,1
20405606:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
2040560a:	fec42783          	lw	a5,-20(s0)
2040560e:	eef051e3          	blez	a5,204054f0 <__metal_driver_riscv_plic0_init+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20405612:	fe442783          	lw	a5,-28(s0)
20405616:	4705                	li	a4,1
20405618:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
2040561a:	0001                	nop
2040561c:	50f2                	lw	ra,60(sp)
2040561e:	5462                	lw	s0,56(sp)
20405620:	6121                	addi	sp,sp,64
20405622:	8082                	ret

20405624 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20405624:	7179                	addi	sp,sp,-48
20405626:	d606                	sw	ra,44(sp)
20405628:	d422                	sw	s0,40(sp)
2040562a:	1800                	addi	s0,sp,48
2040562c:	fca42e23          	sw	a0,-36(s0)
20405630:	fcb42c23          	sw	a1,-40(s0)
20405634:	fcc42a23          	sw	a2,-44(s0)
20405638:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040563c:	fdc42783          	lw	a5,-36(s0)
20405640:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405644:	fdc42503          	lw	a0,-36(s0)
20405648:	ad5ff0ef          	jal	ra,2040511c <__metal_driver_sifive_plic0_num_interrupts>
2040564c:	872a                	mv	a4,a0
2040564e:	fd842783          	lw	a5,-40(s0)
20405652:	00e7c463          	blt	a5,a4,2040565a <__metal_driver_riscv_plic0_register+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20405656:	57fd                	li	a5,-1
20405658:	a051                	j	204056dc <__metal_driver_riscv_plic0_register+0xb8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
2040565a:	fd442783          	lw	a5,-44(s0)
2040565e:	cf9d                	beqz	a5,2040569c <__metal_driver_riscv_plic0_register+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20405660:	4609                	li	a2,2
20405662:	fd842583          	lw	a1,-40(s0)
20405666:	fdc42503          	lw	a0,-36(s0)
2040566a:	c6dff0ef          	jal	ra,204052d6 <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
2040566e:	fec42703          	lw	a4,-20(s0)
20405672:	fd842783          	lw	a5,-40(s0)
20405676:	078a                	slli	a5,a5,0x2
20405678:	97ba                	add	a5,a5,a4
2040567a:	fd442703          	lw	a4,-44(s0)
2040567e:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20405680:	fec42683          	lw	a3,-20(s0)
20405684:	fd842703          	lw	a4,-40(s0)
20405688:	87ba                	mv	a5,a4
2040568a:	0786                	slli	a5,a5,0x1
2040568c:	97ba                	add	a5,a5,a4
2040568e:	078e                	slli	a5,a5,0x3
20405690:	97b6                	add	a5,a5,a3
20405692:	fd042703          	lw	a4,-48(s0)
20405696:	08e7a423          	sw	a4,136(a5)
2040569a:	a081                	j	204056da <__metal_driver_riscv_plic0_register+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
2040569c:	4605                	li	a2,1
2040569e:	fd842583          	lw	a1,-40(s0)
204056a2:	fdc42503          	lw	a0,-36(s0)
204056a6:	c31ff0ef          	jal	ra,204052d6 <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
204056aa:	fec42703          	lw	a4,-20(s0)
204056ae:	fd842783          	lw	a5,-40(s0)
204056b2:	078a                	slli	a5,a5,0x2
204056b4:	97ba                	add	a5,a5,a4
204056b6:	20405737          	lui	a4,0x20405
204056ba:	40e70713          	addi	a4,a4,1038 # 2040540e <__metal_plic0_default_handler>
204056be:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
204056c0:	fec42683          	lw	a3,-20(s0)
204056c4:	fd842703          	lw	a4,-40(s0)
204056c8:	87ba                	mv	a5,a4
204056ca:	0786                	slli	a5,a5,0x1
204056cc:	97ba                	add	a5,a5,a4
204056ce:	078e                	slli	a5,a5,0x3
204056d0:	97b6                	add	a5,a5,a3
204056d2:	fd042703          	lw	a4,-48(s0)
204056d6:	08e7a223          	sw	a4,132(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
204056da:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:185
}
204056dc:	853e                	mv	a0,a5
204056de:	50b2                	lw	ra,44(sp)
204056e0:	5422                	lw	s0,40(sp)
204056e2:	6145                	addi	sp,sp,48
204056e4:	8082                	ret

204056e6 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
204056e6:	7179                	addi	sp,sp,-48
204056e8:	d606                	sw	ra,44(sp)
204056ea:	d422                	sw	s0,40(sp)
204056ec:	1800                	addi	s0,sp,48
204056ee:	fca42e23          	sw	a0,-36(s0)
204056f2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204056f6:	fdc42783          	lw	a5,-36(s0)
204056fa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204056fe:	fdc42503          	lw	a0,-36(s0)
20405702:	a1bff0ef          	jal	ra,2040511c <__metal_driver_sifive_plic0_num_interrupts>
20405706:	872a                	mv	a4,a0
20405708:	fd842783          	lw	a5,-40(s0)
2040570c:	00e7c463          	blt	a5,a4,20405714 <__metal_driver_riscv_plic0_enable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20405710:	57fd                	li	a5,-1
20405712:	a829                	j	2040572c <__metal_driver_riscv_plic0_enable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405714:	880fe0ef          	jal	ra,20403794 <__metal_myhart_id>
20405718:	87aa                	mv	a5,a0
2040571a:	4685                	li	a3,1
2040571c:	fd842603          	lw	a2,-40(s0)
20405720:	85be                	mv	a1,a5
20405722:	fec42503          	lw	a0,-20(s0)
20405726:	c47ff0ef          	jal	ra,2040536c <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
2040572a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:197
}
2040572c:	853e                	mv	a0,a5
2040572e:	50b2                	lw	ra,44(sp)
20405730:	5422                	lw	s0,40(sp)
20405732:	6145                	addi	sp,sp,48
20405734:	8082                	ret

20405736 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20405736:	7179                	addi	sp,sp,-48
20405738:	d606                	sw	ra,44(sp)
2040573a:	d422                	sw	s0,40(sp)
2040573c:	1800                	addi	s0,sp,48
2040573e:	fca42e23          	sw	a0,-36(s0)
20405742:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405746:	fdc42783          	lw	a5,-36(s0)
2040574a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040574e:	fdc42503          	lw	a0,-36(s0)
20405752:	9cbff0ef          	jal	ra,2040511c <__metal_driver_sifive_plic0_num_interrupts>
20405756:	872a                	mv	a4,a0
20405758:	fd842783          	lw	a5,-40(s0)
2040575c:	00e7c463          	blt	a5,a4,20405764 <__metal_driver_riscv_plic0_disable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20405760:	57fd                	li	a5,-1
20405762:	a829                	j	2040577c <__metal_driver_riscv_plic0_disable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20405764:	830fe0ef          	jal	ra,20403794 <__metal_myhart_id>
20405768:	87aa                	mv	a5,a0
2040576a:	4681                	li	a3,0
2040576c:	fd842603          	lw	a2,-40(s0)
20405770:	85be                	mv	a1,a5
20405772:	fec42503          	lw	a0,-20(s0)
20405776:	bf7ff0ef          	jal	ra,2040536c <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
2040577a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:208
}
2040577c:	853e                	mv	a0,a5
2040577e:	50b2                	lw	ra,44(sp)
20405780:	5422                	lw	s0,40(sp)
20405782:	6145                	addi	sp,sp,48
20405784:	8082                	ret

20405786 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405786:	1101                	addi	sp,sp,-32
20405788:	ce06                	sw	ra,28(sp)
2040578a:	cc22                	sw	s0,24(sp)
2040578c:	1000                	addi	s0,sp,32
2040578e:	fea42623          	sw	a0,-20(s0)
20405792:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20405796:	ffffd0ef          	jal	ra,20403794 <__metal_myhart_id>
2040579a:	87aa                	mv	a5,a0
2040579c:	fe842603          	lw	a2,-24(s0)
204057a0:	85be                	mv	a1,a5
204057a2:	fec42503          	lw	a0,-20(s0)
204057a6:	ab1ff0ef          	jal	ra,20405256 <__metal_plic0_set_threshold>
204057aa:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
204057ac:	853e                	mv	a0,a5
204057ae:	40f2                	lw	ra,28(sp)
204057b0:	4462                	lw	s0,24(sp)
204057b2:	6105                	addi	sp,sp,32
204057b4:	8082                	ret

204057b6 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
204057b6:	1101                	addi	sp,sp,-32
204057b8:	ce06                	sw	ra,28(sp)
204057ba:	cc22                	sw	s0,24(sp)
204057bc:	1000                	addi	s0,sp,32
204057be:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
204057c2:	fd3fd0ef          	jal	ra,20403794 <__metal_myhart_id>
204057c6:	87aa                	mv	a5,a0
204057c8:	85be                	mv	a1,a5
204057ca:	fec42503          	lw	a0,-20(s0)
204057ce:	acfff0ef          	jal	ra,2040529c <__metal_plic0_get_threshold>
204057d2:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:219
}
204057d4:	853e                	mv	a0,a5
204057d6:	40f2                	lw	ra,28(sp)
204057d8:	4462                	lw	s0,24(sp)
204057da:	6105                	addi	sp,sp,32
204057dc:	8082                	ret

204057de <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
204057de:	7179                	addi	sp,sp,-48
204057e0:	d606                	sw	ra,44(sp)
204057e2:	d422                	sw	s0,40(sp)
204057e4:	1800                	addi	s0,sp,48
204057e6:	fca42e23          	sw	a0,-36(s0)
204057ea:	fcb42c23          	sw	a1,-40(s0)
204057ee:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
204057f2:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204057f6:	fdc42783          	lw	a5,-36(s0)
204057fa:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204057fe:	fdc42503          	lw	a0,-36(s0)
20405802:	91bff0ef          	jal	ra,2040511c <__metal_driver_sifive_plic0_num_interrupts>
20405806:	872a                	mv	a4,a0
20405808:	fd442783          	lw	a5,-44(s0)
2040580c:	00e7c863          	blt	a5,a4,2040581c <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20405810:	57fd                	li	a5,-1
20405812:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405816:	fe442783          	lw	a5,-28(s0)
2040581a:	a899                	j	20405870 <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
2040581c:	fe042623          	sw	zero,-20(s0)
20405820:	a099                	j	20405866 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20405822:	fec42783          	lw	a5,-20(s0)
20405826:	c795                	beqz	a5,20405852 <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20405828:	4685                	li	a3,1
2040582a:	fd442603          	lw	a2,-44(s0)
2040582e:	fec42583          	lw	a1,-20(s0)
20405832:	fe842503          	lw	a0,-24(s0)
20405836:	b37ff0ef          	jal	ra,2040536c <__metal_plic0_enable>
2040583a:	87aa                	mv	a5,a0
2040583c:	0017f713          	andi	a4,a5,1
20405840:	fec42783          	lw	a5,-20(s0)
20405844:	00f71733          	sll	a4,a4,a5
20405848:	fe442783          	lw	a5,-28(s0)
2040584c:	8fd9                	or	a5,a5,a4
2040584e:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405852:	fec42783          	lw	a5,-20(s0)
20405856:	0785                	addi	a5,a5,1
20405858:	fef42623          	sw	a5,-20(s0)
2040585c:	fd842783          	lw	a5,-40(s0)
20405860:	8385                	srli	a5,a5,0x1
20405862:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20405866:	fd842783          	lw	a5,-40(s0)
2040586a:	ffc5                	bnez	a5,20405822 <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
2040586c:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20405870:	853e                	mv	a0,a5
20405872:	50b2                	lw	ra,44(sp)
20405874:	5422                	lw	s0,40(sp)
20405876:	6145                	addi	sp,sp,48
20405878:	8082                	ret

2040587a <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
2040587a:	7179                	addi	sp,sp,-48
2040587c:	d606                	sw	ra,44(sp)
2040587e:	d422                	sw	s0,40(sp)
20405880:	1800                	addi	s0,sp,48
20405882:	fca42e23          	sw	a0,-36(s0)
20405886:	fcb42c23          	sw	a1,-40(s0)
2040588a:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2040588e:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405892:	fdc42783          	lw	a5,-36(s0)
20405896:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040589a:	fdc42503          	lw	a0,-36(s0)
2040589e:	87fff0ef          	jal	ra,2040511c <__metal_driver_sifive_plic0_num_interrupts>
204058a2:	872a                	mv	a4,a0
204058a4:	fd442783          	lw	a5,-44(s0)
204058a8:	00e7c863          	blt	a5,a4,204058b8 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
204058ac:	57fd                	li	a5,-1
204058ae:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
204058b2:	fe442783          	lw	a5,-28(s0)
204058b6:	a899                	j	2040590c <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
204058b8:	fe042623          	sw	zero,-20(s0)
204058bc:	a099                	j	20405902 <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
204058be:	fec42783          	lw	a5,-20(s0)
204058c2:	c795                	beqz	a5,204058ee <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
204058c4:	4681                	li	a3,0
204058c6:	fd442603          	lw	a2,-44(s0)
204058ca:	fec42583          	lw	a1,-20(s0)
204058ce:	fe842503          	lw	a0,-24(s0)
204058d2:	a9bff0ef          	jal	ra,2040536c <__metal_plic0_enable>
204058d6:	87aa                	mv	a5,a0
204058d8:	0017f713          	andi	a4,a5,1
204058dc:	fec42783          	lw	a5,-20(s0)
204058e0:	00f71733          	sll	a4,a4,a5
204058e4:	fe442783          	lw	a5,-28(s0)
204058e8:	8fd9                	or	a5,a5,a4
204058ea:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204058ee:	fec42783          	lw	a5,-20(s0)
204058f2:	0785                	addi	a5,a5,1
204058f4:	fef42623          	sw	a5,-20(s0)
204058f8:	fd842783          	lw	a5,-40(s0)
204058fc:	8385                	srli	a5,a5,0x1
204058fe:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20405902:	fd842783          	lw	a5,-40(s0)
20405906:	ffc5                	bnez	a5,204058be <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405908:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
2040590c:	853e                	mv	a0,a5
2040590e:	50b2                	lw	ra,44(sp)
20405910:	5422                	lw	s0,40(sp)
20405912:	6145                	addi	sp,sp,48
20405914:	8082                	ret

20405916 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405916:	7179                	addi	sp,sp,-48
20405918:	d606                	sw	ra,44(sp)
2040591a:	d422                	sw	s0,40(sp)
2040591c:	1800                	addi	s0,sp,48
2040591e:	fca42e23          	sw	a0,-36(s0)
20405922:	fcb42c23          	sw	a1,-40(s0)
20405926:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
2040592a:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
2040592e:	fe042623          	sw	zero,-20(s0)
20405932:	a091                	j	20405976 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20405934:	fec42783          	lw	a5,-20(s0)
20405938:	c78d                	beqz	a5,20405962 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
2040593a:	fd442603          	lw	a2,-44(s0)
2040593e:	fec42583          	lw	a1,-20(s0)
20405942:	fdc42503          	lw	a0,-36(s0)
20405946:	911ff0ef          	jal	ra,20405256 <__metal_plic0_set_threshold>
2040594a:	87aa                	mv	a5,a0
2040594c:	0017f713          	andi	a4,a5,1
20405950:	fec42783          	lw	a5,-20(s0)
20405954:	00f71733          	sll	a4,a4,a5
20405958:	fe842783          	lw	a5,-24(s0)
2040595c:	8fd9                	or	a5,a5,a4
2040595e:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405962:	fec42783          	lw	a5,-20(s0)
20405966:	0785                	addi	a5,a5,1
20405968:	fef42623          	sw	a5,-20(s0)
2040596c:	fd842783          	lw	a5,-40(s0)
20405970:	8385                	srli	a5,a5,0x1
20405972:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20405976:	fd842783          	lw	a5,-40(s0)
2040597a:	ffcd                	bnez	a5,20405934 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
2040597c:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:281
}
20405980:	853e                	mv	a0,a5
20405982:	50b2                	lw	ra,44(sp)
20405984:	5422                	lw	s0,40(sp)
20405986:	6145                	addi	sp,sp,48
20405988:	8082                	ret

2040598a <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
2040598a:	1101                	addi	sp,sp,-32
2040598c:	ce06                	sw	ra,28(sp)
2040598e:	cc22                	sw	s0,24(sp)
20405990:	1000                	addi	s0,sp,32
20405992:	fea42623          	sw	a0,-20(s0)
20405996:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
2040599a:	fe842583          	lw	a1,-24(s0)
2040599e:	fec42503          	lw	a0,-20(s0)
204059a2:	8fbff0ef          	jal	ra,2040529c <__metal_plic0_get_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
204059a6:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:287
}
204059a8:	853e                	mv	a0,a5
204059aa:	40f2                	lw	ra,28(sp)
204059ac:	4462                	lw	s0,24(sp)
204059ae:	6105                	addi	sp,sp,32
204059b0:	8082                	ret

204059b2 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
204059b2:	1101                	addi	sp,sp,-32
204059b4:	ce22                	sw	s0,28(sp)
204059b6:	1000                	addi	s0,sp,32
204059b8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
204059bc:	800007b7          	lui	a5,0x80000
204059c0:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdf4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1039
}
204059c4:	853e                	mv	a0,a5
204059c6:	4472                	lw	s0,28(sp)
204059c8:	6105                	addi	sp,sp,32
204059ca:	8082                	ret

204059cc <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
204059cc:	1101                	addi	sp,sp,-32
204059ce:	ce22                	sw	s0,28(sp)
204059d0:	1000                	addi	s0,sp,32
204059d2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204059d6:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1044
}
204059da:	853e                	mv	a0,a5
204059dc:	4472                	lw	s0,28(sp)
204059de:	6105                	addi	sp,sp,32
204059e0:	8082                	ret

204059e2 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
204059e2:	1101                	addi	sp,sp,-32
204059e4:	ce22                	sw	s0,28(sp)
204059e6:	1000                	addi	s0,sp,32
204059e8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
204059ec:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1054
}
204059ee:	853e                	mv	a0,a5
204059f0:	4472                	lw	s0,28(sp)
204059f2:	6105                	addi	sp,sp,32
204059f4:	8082                	ret

204059f6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
204059f6:	1141                	addi	sp,sp,-16
204059f8:	c622                	sw	s0,12(sp)
204059fa:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
204059fc:	204017b7          	lui	a5,0x20401
20405a00:	00478793          	addi	a5,a5,4 # 20401004 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405a04:	853e                	mv	a0,a5
20405a06:	4432                	lw	s0,12(sp)
20405a08:	0141                	addi	sp,sp,16
20405a0a:	8082                	ret

20405a0c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405a0c:	7139                	addi	sp,sp,-64
20405a0e:	de06                	sw	ra,60(sp)
20405a10:	dc22                	sw	s0,56(sp)
20405a12:	0080                	addi	s0,sp,64
20405a14:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405a18:	fcc42503          	lw	a0,-52(s0)
20405a1c:	3f59                	jal	204059b2 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20405a1e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20405a22:	fcc42503          	lw	a0,-52(s0)
20405a26:	3f75                	jal	204059e2 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20405a28:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20405a2c:	fcc42503          	lw	a0,-52(s0)
20405a30:	3f71                	jal	204059cc <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20405a32:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405a36:	37c1                	jal	204059f6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405a38:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20405a3c:	fe042783          	lw	a5,-32(s0)
20405a40:	439c                	lw	a5,0(a5)
20405a42:	fe842583          	lw	a1,-24(s0)
20405a46:	fe442503          	lw	a0,-28(s0)
20405a4a:	9782                	jalr	a5
20405a4c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20405a50:	fdc42703          	lw	a4,-36(s0)
20405a54:	400007b7          	lui	a5,0x40000
20405a58:	8ff9                	and	a5,a5,a4
20405a5a:	e399                	bnez	a5,20405a60 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20405a5c:	57fd                	li	a5,-1
20405a5e:	a025                	j	20405a86 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20405a60:	fdc42783          	lw	a5,-36(s0)
20405a64:	0007c463          	bltz	a5,20405a6c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20405a68:	57fd                	li	a5,-1
20405a6a:	a831                	j	20405a86 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20405a6c:	fec42503          	lw	a0,-20(s0)
20405a70:	0ed010ef          	jal	ra,2040735c <metal_clock_get_rate_hz>
20405a74:	87aa                	mv	a5,a0
20405a76:	873e                	mv	a4,a5
20405a78:	fdc42783          	lw	a5,-36(s0)
20405a7c:	03f7f793          	andi	a5,a5,63
20405a80:	0785                	addi	a5,a5,1
20405a82:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405a86:	853e                	mv	a0,a5
20405a88:	50f2                	lw	ra,60(sp)
20405a8a:	5462                	lw	s0,56(sp)
20405a8c:	6121                	addi	sp,sp,64
20405a8e:	8082                	ret

20405a90 <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405a90:	1101                	addi	sp,sp,-32
20405a92:	ce06                	sw	ra,28(sp)
20405a94:	cc22                	sw	s0,24(sp)
20405a96:	1000                	addi	s0,sp,32
20405a98:	fea42623          	sw	a0,-20(s0)
20405a9c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20405aa0:	fec42503          	lw	a0,-20(s0)
20405aa4:	37a5                	jal	20405a0c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405aa6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405aa8:	853e                	mv	a0,a5
20405aaa:	40f2                	lw	ra,28(sp)
20405aac:	4462                	lw	s0,24(sp)
20405aae:	6105                	addi	sp,sp,32
20405ab0:	8082                	ret

20405ab2 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1060
{
20405ab2:	1101                	addi	sp,sp,-32
20405ab4:	ce22                	sw	s0,28(sp)
20405ab6:	1000                	addi	s0,sp,32
20405ab8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20405abc:	800007b7          	lui	a5,0x80000
20405ac0:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdf40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1062
}
20405ac4:	853e                	mv	a0,a5
20405ac6:	4472                	lw	s0,28(sp)
20405ac8:	6105                	addi	sp,sp,32
20405aca:	8082                	ret

20405acc <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1065
{
20405acc:	1101                	addi	sp,sp,-32
20405ace:	ce22                	sw	s0,28(sp)
20405ad0:	1000                	addi	s0,sp,32
20405ad2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405ad6:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1067
}
20405ada:	853e                	mv	a0,a5
20405adc:	4472                	lw	s0,28(sp)
20405ade:	6105                	addi	sp,sp,32
20405ae0:	8082                	ret

20405ae2 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1070
{
20405ae2:	1101                	addi	sp,sp,-32
20405ae4:	ce22                	sw	s0,28(sp)
20405ae6:	1000                	addi	s0,sp,32
20405ae8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20405aec:	4791                	li	a5,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1072
}
20405aee:	853e                	mv	a0,a5
20405af0:	4472                	lw	s0,28(sp)
20405af2:	6105                	addi	sp,sp,32
20405af4:	8082                	ret

20405af6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
20405af6:	1141                	addi	sp,sp,-16
20405af8:	c622                	sw	s0,12(sp)
20405afa:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405afc:	204017b7          	lui	a5,0x20401
20405b00:	00478793          	addi	a5,a5,4 # 20401004 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405b04:	853e                	mv	a0,a5
20405b06:	4432                	lw	s0,12(sp)
20405b08:	0141                	addi	sp,sp,16
20405b0a:	8082                	ret

20405b0c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405b0c:	7139                	addi	sp,sp,-64
20405b0e:	de06                	sw	ra,60(sp)
20405b10:	dc22                	sw	s0,56(sp)
20405b12:	0080                	addi	s0,sp,64
20405b14:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405b18:	fcc42503          	lw	a0,-52(s0)
20405b1c:	3f59                	jal	20405ab2 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20405b1e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20405b22:	fcc42503          	lw	a0,-52(s0)
20405b26:	3f75                	jal	20405ae2 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20405b28:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405b2c:	fcc42503          	lw	a0,-52(s0)
20405b30:	3f71                	jal	20405acc <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20405b32:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405b36:	37c1                	jal	20405af6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405b38:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405b3c:	fe042783          	lw	a5,-32(s0)
20405b40:	439c                	lw	a5,0(a5)
20405b42:	fe842583          	lw	a1,-24(s0)
20405b46:	fe442503          	lw	a0,-28(s0)
20405b4a:	9782                	jalr	a5
20405b4c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20405b50:	fdc42703          	lw	a4,-36(s0)
20405b54:	400007b7          	lui	a5,0x40000
20405b58:	8ff9                	and	a5,a5,a4
20405b5a:	e399                	bnez	a5,20405b60 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20405b5c:	57fd                	li	a5,-1
20405b5e:	a821                	j	20405b76 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20405b60:	fdc42783          	lw	a5,-36(s0)
20405b64:	0007c463          	bltz	a5,20405b6c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20405b68:	57fd                	li	a5,-1
20405b6a:	a031                	j	20405b76 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20405b6c:	fec42503          	lw	a0,-20(s0)
20405b70:	7ec010ef          	jal	ra,2040735c <metal_clock_get_rate_hz>
20405b74:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20405b76:	853e                	mv	a0,a5
20405b78:	50f2                	lw	ra,60(sp)
20405b7a:	5462                	lw	s0,56(sp)
20405b7c:	6121                	addi	sp,sp,64
20405b7e:	8082                	ret

20405b80 <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405b80:	1101                	addi	sp,sp,-32
20405b82:	ce06                	sw	ra,28(sp)
20405b84:	cc22                	sw	s0,24(sp)
20405b86:	1000                	addi	s0,sp,32
20405b88:	fea42623          	sw	a0,-20(s0)
20405b8c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20405b90:	fec42503          	lw	a0,-20(s0)
20405b94:	3fa5                	jal	20405b0c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20405b96:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20405b98:	853e                	mv	a0,a5
20405b9a:	40f2                	lw	ra,28(sp)
20405b9c:	4462                	lw	s0,24(sp)
20405b9e:	6105                	addi	sp,sp,32
20405ba0:	8082                	ret

20405ba2 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1121
{
20405ba2:	1101                	addi	sp,sp,-32
20405ba4:	ce22                	sw	s0,28(sp)
20405ba6:	1000                	addi	s0,sp,32
20405ba8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20405bac:	800007b7          	lui	a5,0x80000
20405bb0:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xffffe658>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1123
}
20405bb4:	853e                	mv	a0,a5
20405bb6:	4472                	lw	s0,28(sp)
20405bb8:	6105                	addi	sp,sp,32
20405bba:	8082                	ret

20405bbc <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1126
{
20405bbc:	1101                	addi	sp,sp,-32
20405bbe:	ce22                	sw	s0,28(sp)
20405bc0:	1000                	addi	s0,sp,32
20405bc2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20405bc6:	800007b7          	lui	a5,0x80000
20405bca:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xffffe664>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1128
}
20405bce:	853e                	mv	a0,a5
20405bd0:	4472                	lw	s0,28(sp)
20405bd2:	6105                	addi	sp,sp,32
20405bd4:	8082                	ret

20405bd6 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1131
{
20405bd6:	1101                	addi	sp,sp,-32
20405bd8:	ce22                	sw	s0,28(sp)
20405bda:	1000                	addi	s0,sp,32
20405bdc:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405be0:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1133
}
20405be4:	853e                	mv	a0,a5
20405be6:	4472                	lw	s0,28(sp)
20405be8:	6105                	addi	sp,sp,32
20405bea:	8082                	ret

20405bec <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1136
{
20405bec:	1101                	addi	sp,sp,-32
20405bee:	ce22                	sw	s0,28(sp)
20405bf0:	1000                	addi	s0,sp,32
20405bf2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405bf6:	47b1                	li	a5,12
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1138
}
20405bf8:	853e                	mv	a0,a5
20405bfa:	4472                	lw	s0,28(sp)
20405bfc:	6105                	addi	sp,sp,32
20405bfe:	8082                	ret

20405c00 <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1141
{
20405c00:	1141                	addi	sp,sp,-16
20405c02:	c622                	sw	s0,12(sp)
20405c04:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405c06:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1143
}
20405c0a:	853e                	mv	a0,a5
20405c0c:	4432                	lw	s0,12(sp)
20405c0e:	0141                	addi	sp,sp,16
20405c10:	8082                	ret

20405c12 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1146
{
20405c12:	1141                	addi	sp,sp,-16
20405c14:	c622                	sw	s0,12(sp)
20405c16:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405c18:	47a1                	li	a5,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1148
}
20405c1a:	853e                	mv	a0,a5
20405c1c:	4432                	lw	s0,12(sp)
20405c1e:	0141                	addi	sp,sp,16
20405c20:	8082                	ret

20405c22 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1151
{
20405c22:	1141                	addi	sp,sp,-16
20405c24:	c622                	sw	s0,12(sp)
20405c26:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1152
		return 16000000;
20405c28:	00f427b7          	lui	a5,0xf42
20405c2c:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1153
}
20405c30:	853e                	mv	a0,a5
20405c32:	4432                	lw	s0,12(sp)
20405c34:	0141                	addi	sp,sp,16
20405c36:	8082                	ret

20405c38 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1159
{
20405c38:	1141                	addi	sp,sp,-16
20405c3a:	c622                	sw	s0,12(sp)
20405c3c:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405c3e:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1161
}
20405c42:	853e                	mv	a0,a5
20405c44:	4432                	lw	s0,12(sp)
20405c46:	0141                	addi	sp,sp,16
20405c48:	8082                	ret

20405c4a <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
20405c4a:	1141                	addi	sp,sp,-16
20405c4c:	c622                	sw	s0,12(sp)
20405c4e:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405c50:	204017b7          	lui	a5,0x20401
20405c54:	00478793          	addi	a5,a5,4 # 20401004 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405c58:	853e                	mv	a0,a5
20405c5a:	4432                	lw	s0,12(sp)
20405c5c:	0141                	addi	sp,sp,16
20405c5e:	8082                	ret

20405c60 <get_pll_config_freq>:
get_pll_config_freq():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20405c60:	1101                	addi	sp,sp,-32
20405c62:	ce22                	sw	s0,28(sp)
20405c64:	1000                	addi	s0,sp,32
20405c66:	fea42623          	sw	a0,-20(s0)
20405c6a:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20405c6e:	fe842783          	lw	a5,-24(s0)
20405c72:	479c                	lw	a5,8(a5)
20405c74:	fec42703          	lw	a4,-20(s0)
20405c78:	00f76963          	bltu	a4,a5,20405c8a <get_pll_config_freq+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20405c7c:	fe842783          	lw	a5,-24(s0)
20405c80:	47dc                	lw	a5,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20405c82:	fec42703          	lw	a4,-20(s0)
20405c86:	00e7f463          	bgeu	a5,a4,20405c8e <get_pll_config_freq+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20405c8a:	57fd                	li	a5,-1
20405c8c:	a829                	j	20405ca6 <get_pll_config_freq+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20405c8e:	fe842783          	lw	a5,-24(s0)
20405c92:	4398                	lw	a4,0(a5)
20405c94:	fec42783          	lw	a5,-20(s0)
20405c98:	02f70733          	mul	a4,a4,a5
20405c9c:	fe842783          	lw	a5,-24(s0)
20405ca0:	43dc                	lw	a5,4(a5)
20405ca2:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20405ca6:	853e                	mv	a0,a5
20405ca8:	4472                	lw	s0,28(sp)
20405caa:	6105                	addi	sp,sp,32
20405cac:	8082                	ret

20405cae <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20405cae:	7139                	addi	sp,sp,-64
20405cb0:	de06                	sw	ra,60(sp)
20405cb2:	dc22                	sw	s0,56(sp)
20405cb4:	0080                	addi	s0,sp,64
20405cb6:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405cba:	fcc42783          	lw	a5,-52(s0)
20405cbe:	853e                	mv	a0,a5
20405cc0:	3df5                	jal	20405bbc <__metal_driver_sifive_fe310_g000_pll_pllref>
20405cc2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20405cc6:	3fb1                	jal	20405c22 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405cc8:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405ccc:	3799                	jal	20405c12 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405cce:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405cd2:	379d                	jal	20405c38 <__metal_driver_sifive_fe310_g000_prci_base>
20405cd4:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405cd8:	fe042703          	lw	a4,-32(s0)
20405cdc:	fe442783          	lw	a5,-28(s0)
20405ce0:	97ba                	add	a5,a5,a4
20405ce2:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20405ce6:	fcc42783          	lw	a5,-52(s0)
20405cea:	43dc                	lw	a5,4(a5)
20405cec:	853e                	mv	a0,a5
20405cee:	5d8010ef          	jal	ra,204072c6 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20405cf2:	fdc42783          	lw	a5,-36(s0)
20405cf6:	4398                	lw	a4,0(a5)
20405cf8:	67c1                	lui	a5,0x10
20405cfa:	8ff9                	and	a5,a5,a4
20405cfc:	cb91                	beqz	a5,20405d10 <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405cfe:	fdc42783          	lw	a5,-36(s0)
20405d02:	4398                	lw	a4,0(a5)
20405d04:	77c1                	lui	a5,0xffff0
20405d06:	17fd                	addi	a5,a5,-1
20405d08:	8f7d                	and	a4,a4,a5
20405d0a:	fdc42783          	lw	a5,-36(s0)
20405d0e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405d10:	fec42783          	lw	a5,-20(s0)
20405d14:	cb91                	beqz	a5,20405d28 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405d16:	fdc42783          	lw	a5,-36(s0)
20405d1a:	4398                	lw	a4,0(a5)
20405d1c:	000207b7          	lui	a5,0x20
20405d20:	8f5d                	or	a4,a4,a5
20405d22:	fdc42783          	lw	a5,-36(s0)
20405d26:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405d28:	fcc42783          	lw	a5,-52(s0)
20405d2c:	439c                	lw	a5,0(a5)
20405d2e:	43d8                	lw	a4,4(a5)
20405d30:	fcc42783          	lw	a5,-52(s0)
20405d34:	fe842583          	lw	a1,-24(s0)
20405d38:	853e                	mv	a0,a5
20405d3a:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20405d3c:	fcc42783          	lw	a5,-52(s0)
20405d40:	479c                	lw	a5,8(a5)
20405d42:	853e                	mv	a0,a5
20405d44:	582010ef          	jal	ra,204072c6 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20405d48:	0001                	nop
20405d4a:	50f2                	lw	ra,60(sp)
20405d4c:	5462                	lw	s0,56(sp)
20405d4e:	6121                	addi	sp,sp,64
20405d50:	8082                	ret

20405d52 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20405d52:	711d                	addi	sp,sp,-96
20405d54:	ce86                	sw	ra,92(sp)
20405d56:	cca2                	sw	s0,88(sp)
20405d58:	1080                	addi	s0,sp,96
20405d5a:	faa42623          	sw	a0,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405d5e:	fac42503          	lw	a0,-84(s0)
20405d62:	3da9                	jal	20405bbc <__metal_driver_sifive_fe310_g000_pll_pllref>
20405d64:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405d68:	fac42503          	lw	a0,-84(s0)
20405d6c:	3d1d                	jal	20405ba2 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405d6e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405d72:	fac42503          	lw	a0,-84(s0)
20405d76:	3d71                	jal	20405c12 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405d78:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20405d7c:	fac42503          	lw	a0,-84(s0)
20405d80:	3541                	jal	20405c00 <__metal_driver_sifive_fe310_g000_pll_config_base>
20405d82:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405d86:	fac42503          	lw	a0,-84(s0)
20405d8a:	358d                	jal	20405bec <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405d8c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20405d90:	fac42503          	lw	a0,-84(s0)
20405d94:	3589                	jal	20405bd6 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405d96:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405d9a:	3d45                	jal	20405c4a <__metal_driver_sifive_fe310_g000_prci_vtable>
20405d9c:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20405da0:	fd442783          	lw	a5,-44(s0)
20405da4:	439c                	lw	a5,0(a5)
20405da6:	fe442583          	lw	a1,-28(s0)
20405daa:	fe042503          	lw	a0,-32(s0)
20405dae:	9782                	jalr	a5
20405db0:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20405db4:	fd442783          	lw	a5,-44(s0)
20405db8:	439c                	lw	a5,0(a5)
20405dba:	fdc42583          	lw	a1,-36(s0)
20405dbe:	fd842503          	lw	a0,-40(s0)
20405dc2:	9782                	jalr	a5
20405dc4:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405dc8:	fd042703          	lw	a4,-48(s0)
20405dcc:	67c1                	lui	a5,0x10
20405dce:	8f7d                	and	a4,a4,a5
20405dd0:	67c1                	lui	a5,0x10
20405dd2:	00f77863          	bgeu	a4,a5,20405de2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20405dd6:	fe842503          	lw	a0,-24(s0)
20405dda:	582010ef          	jal	ra,2040735c <metal_clock_get_rate_hz>
20405dde:	87aa                	mv	a5,a0
20405de0:	a8e1                	j	20405eb8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20405de2:	fd042703          	lw	a4,-48(s0)
20405de6:	000207b7          	lui	a5,0x20
20405dea:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20405dec:	000207b7          	lui	a5,0x20
20405df0:	00f76563          	bltu	a4,a5,20405dfa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20405df4:	fec42783          	lw	a5,-20(s0)
20405df8:	a019                	j	20405dfe <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20405dfa:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20405dfe:	853e                	mv	a0,a5
20405e00:	55c010ef          	jal	ra,2040735c <metal_clock_get_rate_hz>
20405e04:	fca42423          	sw	a0,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405e08:	fd042703          	lw	a4,-48(s0)
20405e0c:	000407b7          	lui	a5,0x40
20405e10:	8f7d                	and	a4,a4,a5
20405e12:	000407b7          	lui	a5,0x40
20405e16:	00f76563          	bltu	a4,a5,20405e20 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20405e1a:	fc842783          	lw	a5,-56(s0)
20405e1e:	a869                	j	20405eb8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405e20:	fd042783          	lw	a5,-48(s0)
20405e24:	8b9d                	andi	a5,a5,7
20405e26:	0785                	addi	a5,a5,1
20405e28:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20405e2c:	fd042783          	lw	a5,-48(s0)
20405e30:	3f07f793          	andi	a5,a5,1008
20405e34:	8391                	srli	a5,a5,0x4
20405e36:	0785                	addi	a5,a5,1
20405e38:	0786                	slli	a5,a5,0x1
20405e3a:	fcf42023          	sw	a5,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20405e3e:	fd042703          	lw	a4,-48(s0)
20405e42:	6785                	lui	a5,0x1
20405e44:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405e48:	8f7d                	and	a4,a4,a5
20405e4a:	3ff00793          	li	a5,1023
20405e4e:	00e7e463          	bltu	a5,a4,20405e56 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20405e52:	57fd                	li	a5,-1
20405e54:	a095                	j	20405eb8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20405e56:	fd042703          	lw	a4,-48(s0)
20405e5a:	6785                	lui	a5,0x1
20405e5c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405e60:	8ff9                	and	a5,a5,a4
20405e62:	83a9                	srli	a5,a5,0xa
20405e64:	4705                	li	a4,1
20405e66:	00f717b3          	sll	a5,a4,a5
20405e6a:	faf42e23          	sw	a5,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20405e6e:	fc842703          	lw	a4,-56(s0)
20405e72:	fc442783          	lw	a5,-60(s0)
20405e76:	02f74733          	div	a4,a4,a5
20405e7a:	fc042783          	lw	a5,-64(s0)
20405e7e:	02f70733          	mul	a4,a4,a5
20405e82:	fbc42783          	lw	a5,-68(s0)
20405e86:	02f747b3          	div	a5,a4,a5
20405e8a:	faf42c23          	sw	a5,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20405e8e:	fcc42783          	lw	a5,-52(s0)
20405e92:	1007f713          	andi	a4,a5,256
20405e96:	0ff00793          	li	a5,255
20405e9a:	00e7f563          	bgeu	a5,a4,20405ea4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20405e9e:	fb842783          	lw	a5,-72(s0)
20405ea2:	a819                	j	20405eb8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20405ea4:	fb842703          	lw	a4,-72(s0)
20405ea8:	fcc42783          	lw	a5,-52(s0)
20405eac:	03f7f793          	andi	a5,a5,63
20405eb0:	0785                	addi	a5,a5,1
20405eb2:	0786                	slli	a5,a5,0x1
20405eb4:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20405eb8:	853e                	mv	a0,a5
20405eba:	40f6                	lw	ra,92(sp)
20405ebc:	4466                	lw	s0,88(sp)
20405ebe:	6125                	addi	sp,sp,96
20405ec0:	8082                	ret

20405ec2 <find_closest_config>:
find_closest_config():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20405ec2:	7139                	addi	sp,sp,-64
20405ec4:	de06                	sw	ra,60(sp)
20405ec6:	dc22                	sw	s0,56(sp)
20405ec8:	0080                	addi	s0,sp,64
20405eca:	fca42623          	sw	a0,-52(s0)
20405ece:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20405ed2:	57fd                	li	a5,-1
20405ed4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20405ed8:	800007b7          	lui	a5,0x80000
20405edc:	fff7c793          	not	a5,a5
20405ee0:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405ee4:	04300793          	li	a5,67
20405ee8:	fef42223          	sw	a5,-28(s0)
20405eec:	a0b5                	j	20405f58 <find_closest_config+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20405eee:	fcc42683          	lw	a3,-52(s0)
20405ef2:	fe442783          	lw	a5,-28(s0)
20405ef6:	00579713          	slli	a4,a5,0x5
20405efa:	204007b7          	lui	a5,0x20400
20405efe:	6a878793          	addi	a5,a5,1704 # 204006a8 <pll_configs>
20405f02:	97ba                	add	a5,a5,a4
20405f04:	85be                	mv	a1,a5
20405f06:	8536                	mv	a0,a3
20405f08:	d59ff0ef          	jal	ra,20405c60 <get_pll_config_freq>
20405f0c:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20405f10:	fe042703          	lw	a4,-32(s0)
20405f14:	57fd                	li	a5,-1
20405f16:	02f70c63          	beq	a4,a5,20405f4e <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20405f1a:	fe042703          	lw	a4,-32(s0)
20405f1e:	fc842783          	lw	a5,-56(s0)
20405f22:	8f1d                	sub	a4,a4,a5
20405f24:	41f75793          	srai	a5,a4,0x1f
20405f28:	8f3d                	xor	a4,a4,a5
20405f2a:	40f707b3          	sub	a5,a4,a5
20405f2e:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20405f32:	fdc42703          	lw	a4,-36(s0)
20405f36:	fe842783          	lw	a5,-24(s0)
20405f3a:	00f75a63          	bge	a4,a5,20405f4e <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20405f3e:	fe442783          	lw	a5,-28(s0)
20405f42:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20405f46:	fdc42783          	lw	a5,-36(s0)
20405f4a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20405f4e:	fe442783          	lw	a5,-28(s0)
20405f52:	17fd                	addi	a5,a5,-1
20405f54:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405f58:	fe442783          	lw	a5,-28(s0)
20405f5c:	f807d9e3          	bgez	a5,20405eee <find_closest_config+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20405f60:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20405f64:	853e                	mv	a0,a5
20405f66:	50f2                	lw	ra,60(sp)
20405f68:	5462                	lw	s0,56(sp)
20405f6a:	6121                	addi	sp,sp,64
20405f6c:	8082                	ret

20405f6e <configure_pll>:
configure_pll():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20405f6e:	7179                	addi	sp,sp,-48
20405f70:	d606                	sw	ra,44(sp)
20405f72:	d422                	sw	s0,40(sp)
20405f74:	1800                	addi	s0,sp,48
20405f76:	fca42e23          	sw	a0,-36(s0)
20405f7a:	fcb42c23          	sw	a1,-40(s0)
20405f7e:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20405f82:	fdc42783          	lw	a5,-36(s0)
20405f86:	439c                	lw	a5,0(a5)
20405f88:	ff87f713          	andi	a4,a5,-8
20405f8c:	fdc42783          	lw	a5,-36(s0)
20405f90:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20405f92:	fdc42783          	lw	a5,-36(s0)
20405f96:	4398                	lw	a4,0(a5)
20405f98:	fd442783          	lw	a5,-44(s0)
20405f9c:	4b9c                	lw	a5,16(a5)
20405f9e:	8b9d                	andi	a5,a5,7
20405fa0:	8f5d                	or	a4,a4,a5
20405fa2:	fdc42783          	lw	a5,-36(s0)
20405fa6:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405fa8:	fdc42783          	lw	a5,-36(s0)
20405fac:	439c                	lw	a5,0(a5)
20405fae:	c0f7f713          	andi	a4,a5,-1009
20405fb2:	fdc42783          	lw	a5,-36(s0)
20405fb6:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20405fb8:	fdc42783          	lw	a5,-36(s0)
20405fbc:	4398                	lw	a4,0(a5)
20405fbe:	fd442783          	lw	a5,-44(s0)
20405fc2:	4bdc                	lw	a5,20(a5)
20405fc4:	0792                	slli	a5,a5,0x4
20405fc6:	3f07f793          	andi	a5,a5,1008
20405fca:	8f5d                	or	a4,a4,a5
20405fcc:	fdc42783          	lw	a5,-36(s0)
20405fd0:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20405fd2:	fdc42783          	lw	a5,-36(s0)
20405fd6:	4398                	lw	a4,0(a5)
20405fd8:	77fd                	lui	a5,0xfffff
20405fda:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd2df>
20405fde:	8f7d                	and	a4,a4,a5
20405fe0:	fdc42783          	lw	a5,-36(s0)
20405fe4:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20405fe6:	fdc42783          	lw	a5,-36(s0)
20405fea:	4398                	lw	a4,0(a5)
20405fec:	fd442783          	lw	a5,-44(s0)
20405ff0:	4f9c                	lw	a5,24(a5)
20405ff2:	00a79693          	slli	a3,a5,0xa
20405ff6:	6785                	lui	a5,0x1
20405ff8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405ffc:	8ff5                	and	a5,a5,a3
20405ffe:	8f5d                	or	a4,a4,a5
20406000:	fdc42783          	lw	a5,-36(s0)
20406004:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20406006:	fd442783          	lw	a5,-44(s0)
2040600a:	4fdc                	lw	a5,28(a5)
2040600c:	0207db63          	bgez	a5,20406042 <configure_pll+0xd4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20406010:	fd842783          	lw	a5,-40(s0)
20406014:	439c                	lw	a5,0(a5)
20406016:	1007e713          	ori	a4,a5,256
2040601a:	fd842783          	lw	a5,-40(s0)
2040601e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20406020:	fd842783          	lw	a5,-40(s0)
20406024:	439c                	lw	a5,0(a5)
20406026:	fc07f713          	andi	a4,a5,-64
2040602a:	fd842783          	lw	a5,-40(s0)
2040602e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20406030:	fd842783          	lw	a5,-40(s0)
20406034:	439c                	lw	a5,0(a5)
20406036:	0017e713          	ori	a4,a5,1
2040603a:	fd842783          	lw	a5,-40(s0)
2040603e:	c398                	sw	a4,0(a5)
20406040:	a82d                	j	2040607a <configure_pll+0x10c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20406042:	fd842783          	lw	a5,-40(s0)
20406046:	439c                	lw	a5,0(a5)
20406048:	eff7f713          	andi	a4,a5,-257
2040604c:	fd842783          	lw	a5,-40(s0)
20406050:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20406052:	fd842783          	lw	a5,-40(s0)
20406056:	439c                	lw	a5,0(a5)
20406058:	fc07f713          	andi	a4,a5,-64
2040605c:	fd842783          	lw	a5,-40(s0)
20406060:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20406062:	fd842783          	lw	a5,-40(s0)
20406066:	4398                	lw	a4,0(a5)
20406068:	fd442783          	lw	a5,-44(s0)
2040606c:	4fdc                	lw	a5,28(a5)
2040606e:	03f7f793          	andi	a5,a5,63
20406072:	8f5d                	or	a4,a4,a5
20406074:	fd842783          	lw	a5,-40(s0)
20406078:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2040607a:	fdc42783          	lw	a5,-36(s0)
2040607e:	4398                	lw	a4,0(a5)
20406080:	fffc07b7          	lui	a5,0xfffc0
20406084:	17fd                	addi	a5,a5,-1
20406086:	8f7d                	and	a4,a4,a5
20406088:	fdc42783          	lw	a5,-36(s0)
2040608c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2040608e:	fe040793          	addi	a5,s0,-32
20406092:	863e                	mv	a2,a5
20406094:	4585                	li	a1,1
20406096:	800007b7          	lui	a5,0x80000
2040609a:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
2040609e:	c82fd0ef          	jal	ra,20403520 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
204060a2:	fe042603          	lw	a2,-32(s0)
204060a6:	fe442683          	lw	a3,-28(s0)
204060aa:	4511                	li	a0,4
204060ac:	4581                	li	a1,0
204060ae:	00a60733          	add	a4,a2,a0
204060b2:	883a                	mv	a6,a4
204060b4:	00c83833          	sltu	a6,a6,a2
204060b8:	00b687b3          	add	a5,a3,a1
204060bc:	00f806b3          	add	a3,a6,a5
204060c0:	87b6                	mv	a5,a3
204060c2:	fee42423          	sw	a4,-24(s0)
204060c6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
204060ca:	a819                	j	204060e0 <configure_pll+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
204060cc:	fe040793          	addi	a5,s0,-32
204060d0:	863e                	mv	a2,a5
204060d2:	4585                	li	a1,1
204060d4:	800007b7          	lui	a5,0x80000
204060d8:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
204060dc:	c44fd0ef          	jal	ra,20403520 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
204060e0:	fe042703          	lw	a4,-32(s0)
204060e4:	fe442783          	lw	a5,-28(s0)
204060e8:	fec42683          	lw	a3,-20(s0)
204060ec:	863e                	mv	a2,a5
204060ee:	00c6ec63          	bltu	a3,a2,20406106 <configure_pll+0x198>
204060f2:	fec42683          	lw	a3,-20(s0)
204060f6:	863e                	mv	a2,a5
204060f8:	fcc69ae3          	bne	a3,a2,204060cc <configure_pll+0x15e>
204060fc:	fe842683          	lw	a3,-24(s0)
20406100:	87ba                	mv	a5,a4
20406102:	fcf6f5e3          	bgeu	a3,a5,204060cc <configure_pll+0x15e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20406106:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20406108:	fdc42783          	lw	a5,-36(s0)
2040610c:	439c                	lw	a5,0(a5)
2040610e:	fe07dde3          	bgez	a5,20406108 <configure_pll+0x19a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20406112:	0001                	nop
20406114:	0001                	nop
20406116:	50b2                	lw	ra,44(sp)
20406118:	5422                	lw	s0,40(sp)
2040611a:	6145                	addi	sp,sp,48
2040611c:	8082                	ret

2040611e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
2040611e:	715d                	addi	sp,sp,-80
20406120:	c686                	sw	ra,76(sp)
20406122:	c4a2                	sw	s0,72(sp)
20406124:	0880                	addi	s0,sp,80
20406126:	faa42e23          	sw	a0,-68(s0)
2040612a:	fab42c23          	sw	a1,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
2040612e:	fbc42503          	lw	a0,-68(s0)
20406132:	a8bff0ef          	jal	ra,20405bbc <__metal_driver_sifive_fe310_g000_pll_pllref>
20406136:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2040613a:	fbc42503          	lw	a0,-68(s0)
2040613e:	a65ff0ef          	jal	ra,20405ba2 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20406142:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20406146:	fbc42503          	lw	a0,-68(s0)
2040614a:	ac9ff0ef          	jal	ra,20405c12 <__metal_driver_sifive_fe310_g000_pll_config_offset>
2040614e:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20406152:	fbc42503          	lw	a0,-68(s0)
20406156:	a97ff0ef          	jal	ra,20405bec <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2040615a:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2040615e:	adbff0ef          	jal	ra,20405c38 <__metal_driver_sifive_fe310_g000_prci_base>
20406162:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20406166:	fdc42703          	lw	a4,-36(s0)
2040616a:	fe442783          	lw	a5,-28(s0)
2040616e:	97ba                	add	a5,a5,a4
20406170:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20406174:	fdc42703          	lw	a4,-36(s0)
20406178:	fe042783          	lw	a5,-32(s0)
2040617c:	97ba                	add	a5,a5,a4
2040617e:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20406182:	fd842783          	lw	a5,-40(s0)
20406186:	4398                	lw	a4,0(a5)
20406188:	67c1                	lui	a5,0x10
2040618a:	8ff9                	and	a5,a5,a4
2040618c:	cb91                	beqz	a5,204061a0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040618e:	fd842783          	lw	a5,-40(s0)
20406192:	4398                	lw	a4,0(a5)
20406194:	77c1                	lui	a5,0xffff0
20406196:	17fd                	addi	a5,a5,-1
20406198:	8f7d                	and	a4,a4,a5
2040619a:	fd842783          	lw	a5,-40(s0)
2040619e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
204061a0:	fd842783          	lw	a5,-40(s0)
204061a4:	4398                	lw	a4,0(a5)
204061a6:	000207b7          	lui	a5,0x20
204061aa:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
204061ac:	c781                	beqz	a5,204061b4 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
204061ae:	fec42783          	lw	a5,-20(s0)
204061b2:	a019                	j	204061b8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
204061b4:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
204061b8:	853e                	mv	a0,a5
204061ba:	1a2010ef          	jal	ra,2040735c <metal_clock_get_rate_hz>
204061be:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
204061c2:	fd042703          	lw	a4,-48(s0)
204061c6:	87ba                	mv	a5,a4
204061c8:	0786                	slli	a5,a5,0x1
204061ca:	97ba                	add	a5,a5,a4
204061cc:	41f7d713          	srai	a4,a5,0x1f
204061d0:	8b0d                	andi	a4,a4,3
204061d2:	97ba                	add	a5,a5,a4
204061d4:	8789                	srai	a5,a5,0x2
204061d6:	873e                	mv	a4,a5
204061d8:	fb842783          	lw	a5,-72(s0)
204061dc:	02e7cb63          	blt	a5,a4,20406212 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
204061e0:	fd042703          	lw	a4,-48(s0)
204061e4:	87ba                	mv	a5,a4
204061e6:	078a                	slli	a5,a5,0x2
204061e8:	97ba                	add	a5,a5,a4
204061ea:	41f7d713          	srai	a4,a5,0x1f
204061ee:	8b0d                	andi	a4,a4,3
204061f0:	97ba                	add	a5,a5,a4
204061f2:	8789                	srai	a5,a5,0x2
204061f4:	873e                	mv	a4,a5
204061f6:	fb842783          	lw	a5,-72(s0)
204061fa:	00f74c63          	blt	a4,a5,20406212 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204061fe:	fd842783          	lw	a5,-40(s0)
20406202:	4398                	lw	a4,0(a5)
20406204:	000407b7          	lui	a5,0x40
20406208:	8f5d                	or	a4,a4,a5
2040620a:	fd842783          	lw	a5,-40(s0)
2040620e:	c398                	sw	a4,0(a5)
20406210:	a881                	j	20406260 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20406212:	fb842583          	lw	a1,-72(s0)
20406216:	fd042503          	lw	a0,-48(s0)
2040621a:	ca9ff0ef          	jal	ra,20405ec2 <find_closest_config>
2040621e:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20406222:	fcc42703          	lw	a4,-52(s0)
20406226:	57fd                	li	a5,-1
20406228:	02f70363          	beq	a4,a5,2040624e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
2040622c:	fcc42783          	lw	a5,-52(s0)
20406230:	00579713          	slli	a4,a5,0x5
20406234:	204007b7          	lui	a5,0x20400
20406238:	6a878793          	addi	a5,a5,1704 # 204006a8 <pll_configs>
2040623c:	97ba                	add	a5,a5,a4
2040623e:	863e                	mv	a2,a5
20406240:	fd442583          	lw	a1,-44(s0)
20406244:	fd842503          	lw	a0,-40(s0)
20406248:	d27ff0ef          	jal	ra,20405f6e <configure_pll>
2040624c:	a811                	j	20406260 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
2040624e:	fd842783          	lw	a5,-40(s0)
20406252:	4398                	lw	a4,0(a5)
20406254:	000407b7          	lui	a5,0x40
20406258:	8f5d                	or	a4,a4,a5
2040625a:	fd842783          	lw	a5,-40(s0)
2040625e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20406260:	fd842783          	lw	a5,-40(s0)
20406264:	4398                	lw	a4,0(a5)
20406266:	67c1                	lui	a5,0x10
20406268:	8f5d                	or	a4,a4,a5
2040626a:	fd842783          	lw	a5,-40(s0)
2040626e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20406270:	fbc42503          	lw	a0,-68(s0)
20406274:	adfff0ef          	jal	ra,20405d52 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20406278:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2040627a:	853e                	mv	a0,a5
2040627c:	40b6                	lw	ra,76(sp)
2040627e:	4426                	lw	s0,72(sp)
20406280:	6161                	addi	sp,sp,80
20406282:	8082                	ret

20406284 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1159
{
20406284:	1141                	addi	sp,sp,-16
20406286:	c622                	sw	s0,12(sp)
20406288:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2040628a:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1161
}
2040628e:	853e                	mv	a0,a5
20406290:	4432                	lw	s0,12(sp)
20406292:	0141                	addi	sp,sp,16
20406294:	8082                	ret

20406296 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20406296:	7179                	addi	sp,sp,-48
20406298:	d606                	sw	ra,44(sp)
2040629a:	d422                	sw	s0,40(sp)
2040629c:	1800                	addi	s0,sp,48
2040629e:	fca42e23          	sw	a0,-36(s0)
204062a2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204062a6:	3ff9                	jal	20406284 <__metal_driver_sifive_fe310_g000_prci_base>
204062a8:	87aa                	mv	a5,a0
204062aa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
204062ae:	fd842703          	lw	a4,-40(s0)
204062b2:	fec42783          	lw	a5,-20(s0)
204062b6:	97ba                	add	a5,a5,a4
204062b8:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
204062ba:	853e                	mv	a0,a5
204062bc:	50b2                	lw	ra,44(sp)
204062be:	5422                	lw	s0,40(sp)
204062c0:	6145                	addi	sp,sp,48
204062c2:	8082                	ret

204062c4 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
204062c4:	7179                	addi	sp,sp,-48
204062c6:	d606                	sw	ra,44(sp)
204062c8:	d422                	sw	s0,40(sp)
204062ca:	1800                	addi	s0,sp,48
204062cc:	fca42e23          	sw	a0,-36(s0)
204062d0:	fcb42c23          	sw	a1,-40(s0)
204062d4:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204062d8:	3775                	jal	20406284 <__metal_driver_sifive_fe310_g000_prci_base>
204062da:	87aa                	mv	a5,a0
204062dc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
204062e0:	fd842703          	lw	a4,-40(s0)
204062e4:	fec42783          	lw	a5,-20(s0)
204062e8:	97ba                	add	a5,a5,a4
204062ea:	873e                	mv	a4,a5
204062ec:	fd442783          	lw	a5,-44(s0)
204062f0:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
204062f2:	853e                	mv	a0,a5
204062f4:	50b2                	lw	ra,44(sp)
204062f6:	5422                	lw	s0,40(sp)
204062f8:	6145                	addi	sp,sp,48
204062fa:	8082                	ret

204062fc <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:474
{
204062fc:	1101                	addi	sp,sp,-32
204062fe:	ce22                	sw	s0,28(sp)
20406300:	1000                	addi	s0,sp,32
20406302:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20406306:	fec42703          	lw	a4,-20(s0)
2040630a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040630e:	00f71563          	bne	a4,a5,20406318 <__metal_driver_sifive_gpio0_base+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20406312:	100127b7          	lui	a5,0x10012
20406316:	a011                	j	2040631a <__metal_driver_sifive_gpio0_base+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:479
		return 0;
20406318:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:481
}
2040631a:	853e                	mv	a0,a5
2040631c:	4472                	lw	s0,28(sp)
2040631e:	6105                	addi	sp,sp,32
20406320:	8082                	ret

20406322 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:504
{
20406322:	1101                	addi	sp,sp,-32
20406324:	ce22                	sw	s0,28(sp)
20406326:	1000                	addi	s0,sp,32
20406328:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2040632c:	fec42703          	lw	a4,-20(s0)
20406330:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406334:	00f71763          	bne	a4,a5,20406342 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406338:	800007b7          	lui	a5,0x80000
2040633c:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
20406340:	a011                	j	20406344 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:509
		return 0;
20406342:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:511
}
20406344:	853e                	mv	a0,a5
20406346:	4472                	lw	s0,28(sp)
20406348:	6105                	addi	sp,sp,32
2040634a:	8082                	ret

2040634c <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:514
{
2040634c:	1101                	addi	sp,sp,-32
2040634e:	ce22                	sw	s0,28(sp)
20406350:	1000                	addi	s0,sp,32
20406352:	fea42623          	sw	a0,-20(s0)
20406356:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2040635a:	fec42703          	lw	a4,-20(s0)
2040635e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406362:	00f71763          	bne	a4,a5,20406370 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:515 (discriminator 1)
20406366:	fe842783          	lw	a5,-24(s0)
2040636a:	e399                	bnez	a5,20406370 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:516
		return 7;
2040636c:	479d                	li	a5,7
2040636e:	a269                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20406370:	fec42703          	lw	a4,-20(s0)
20406374:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406378:	00f71963          	bne	a4,a5,2040638a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:518 (discriminator 1)
2040637c:	fe842703          	lw	a4,-24(s0)
20406380:	4785                	li	a5,1
20406382:	00f71463          	bne	a4,a5,2040638a <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:519
		return 8;
20406386:	47a1                	li	a5,8
20406388:	aa85                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2040638a:	fec42703          	lw	a4,-20(s0)
2040638e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406392:	00f71963          	bne	a4,a5,204063a4 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
20406396:	fe842703          	lw	a4,-24(s0)
2040639a:	4789                	li	a5,2
2040639c:	00f71463          	bne	a4,a5,204063a4 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:522
		return 9;
204063a0:	47a5                	li	a5,9
204063a2:	aa99                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
204063a4:	fec42703          	lw	a4,-20(s0)
204063a8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063ac:	00f71963          	bne	a4,a5,204063be <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
204063b0:	fe842703          	lw	a4,-24(s0)
204063b4:	478d                	li	a5,3
204063b6:	00f71463          	bne	a4,a5,204063be <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:525
		return 10;
204063ba:	47a9                	li	a5,10
204063bc:	aa35                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
204063be:	fec42703          	lw	a4,-20(s0)
204063c2:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063c6:	00f71963          	bne	a4,a5,204063d8 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
204063ca:	fe842703          	lw	a4,-24(s0)
204063ce:	4791                	li	a5,4
204063d0:	00f71463          	bne	a4,a5,204063d8 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:528
		return 11;
204063d4:	47ad                	li	a5,11
204063d6:	a20d                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
204063d8:	fec42703          	lw	a4,-20(s0)
204063dc:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063e0:	00f71963          	bne	a4,a5,204063f2 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
204063e4:	fe842703          	lw	a4,-24(s0)
204063e8:	4795                	li	a5,5
204063ea:	00f71463          	bne	a4,a5,204063f2 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:531
		return 12;
204063ee:	47b1                	li	a5,12
204063f0:	a221                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
204063f2:	fec42703          	lw	a4,-20(s0)
204063f6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063fa:	00f71963          	bne	a4,a5,2040640c <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
204063fe:	fe842703          	lw	a4,-24(s0)
20406402:	4799                	li	a5,6
20406404:	00f71463          	bne	a4,a5,2040640c <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:534
		return 13;
20406408:	47b5                	li	a5,13
2040640a:	a0fd                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
2040640c:	fec42703          	lw	a4,-20(s0)
20406410:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406414:	00f71963          	bne	a4,a5,20406426 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
20406418:	fe842703          	lw	a4,-24(s0)
2040641c:	479d                	li	a5,7
2040641e:	00f71463          	bne	a4,a5,20406426 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:537
		return 14;
20406422:	47b9                	li	a5,14
20406424:	a8d1                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20406426:	fec42703          	lw	a4,-20(s0)
2040642a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040642e:	00f71963          	bne	a4,a5,20406440 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
20406432:	fe842703          	lw	a4,-24(s0)
20406436:	47a1                	li	a5,8
20406438:	00f71463          	bne	a4,a5,20406440 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:540
		return 15;
2040643c:	47bd                	li	a5,15
2040643e:	a86d                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20406440:	fec42703          	lw	a4,-20(s0)
20406444:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406448:	00f71963          	bne	a4,a5,2040645a <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
2040644c:	fe842703          	lw	a4,-24(s0)
20406450:	47a5                	li	a5,9
20406452:	00f71463          	bne	a4,a5,2040645a <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:543
		return 16;
20406456:	47c1                	li	a5,16
20406458:	a045                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2040645a:	fec42703          	lw	a4,-20(s0)
2040645e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406462:	00f71963          	bne	a4,a5,20406474 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
20406466:	fe842703          	lw	a4,-24(s0)
2040646a:	47a9                	li	a5,10
2040646c:	00f71463          	bne	a4,a5,20406474 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:546
		return 17;
20406470:	47c5                	li	a5,17
20406472:	a059                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20406474:	fec42703          	lw	a4,-20(s0)
20406478:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040647c:	00f71963          	bne	a4,a5,2040648e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
20406480:	fe842703          	lw	a4,-24(s0)
20406484:	47ad                	li	a5,11
20406486:	00f71463          	bne	a4,a5,2040648e <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:549
		return 18;
2040648a:	47c9                	li	a5,18
2040648c:	a0b5                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
2040648e:	fec42703          	lw	a4,-20(s0)
20406492:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406496:	00f71963          	bne	a4,a5,204064a8 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
2040649a:	fe842703          	lw	a4,-24(s0)
2040649e:	47b1                	li	a5,12
204064a0:	00f71463          	bne	a4,a5,204064a8 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:552
		return 19;
204064a4:	47cd                	li	a5,19
204064a6:	a889                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
204064a8:	fec42703          	lw	a4,-20(s0)
204064ac:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204064b0:	00f71963          	bne	a4,a5,204064c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
204064b4:	fe842703          	lw	a4,-24(s0)
204064b8:	47b5                	li	a5,13
204064ba:	00f71463          	bne	a4,a5,204064c2 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:555
		return 20;
204064be:	47d1                	li	a5,20
204064c0:	a825                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
204064c2:	fec42703          	lw	a4,-20(s0)
204064c6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204064ca:	00f71963          	bne	a4,a5,204064dc <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
204064ce:	fe842703          	lw	a4,-24(s0)
204064d2:	47b9                	li	a5,14
204064d4:	00f71463          	bne	a4,a5,204064dc <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:558
		return 21;
204064d8:	47d5                	li	a5,21
204064da:	a839                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
204064dc:	fec42703          	lw	a4,-20(s0)
204064e0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204064e4:	00f71963          	bne	a4,a5,204064f6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
204064e8:	fe842703          	lw	a4,-24(s0)
204064ec:	47bd                	li	a5,15
204064ee:	00f71463          	bne	a4,a5,204064f6 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:561
		return 22;
204064f2:	47d9                	li	a5,22
204064f4:	a011                	j	204064f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:564
		return 0;
204064f6:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:566
}
204064f8:	853e                	mv	a0,a5
204064fa:	4472                	lw	s0,28(sp)
204064fc:	6105                	addi	sp,sp,32
204064fe:	8082                	ret

20406500 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20406500:	7179                	addi	sp,sp,-48
20406502:	d606                	sw	ra,44(sp)
20406504:	d422                	sw	s0,40(sp)
20406506:	1800                	addi	s0,sp,48
20406508:	fca42e23          	sw	a0,-36(s0)
2040650c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406510:	fdc42503          	lw	a0,-36(s0)
20406514:	de9ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
20406518:	87aa                	mv	a5,a0
2040651a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
2040651e:	fec42783          	lw	a5,-20(s0)
20406522:	0791                	addi	a5,a5,4
20406524:	4398                	lw	a4,0(a5)
20406526:	fd842783          	lw	a5,-40(s0)
2040652a:	fec42683          	lw	a3,-20(s0)
2040652e:	0691                	addi	a3,a3,4
20406530:	8fd9                	or	a5,a5,a4
20406532:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20406534:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20406536:	853e                	mv	a0,a5
20406538:	50b2                	lw	ra,44(sp)
2040653a:	5422                	lw	s0,40(sp)
2040653c:	6145                	addi	sp,sp,48
2040653e:	8082                	ret

20406540 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20406540:	7179                	addi	sp,sp,-48
20406542:	d606                	sw	ra,44(sp)
20406544:	d422                	sw	s0,40(sp)
20406546:	1800                	addi	s0,sp,48
20406548:	fca42e23          	sw	a0,-36(s0)
2040654c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406550:	fdc42503          	lw	a0,-36(s0)
20406554:	da9ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
20406558:	87aa                	mv	a5,a0
2040655a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
2040655e:	fec42783          	lw	a5,-20(s0)
20406562:	0791                	addi	a5,a5,4
20406564:	439c                	lw	a5,0(a5)
20406566:	fd842703          	lw	a4,-40(s0)
2040656a:	fff74713          	not	a4,a4
2040656e:	86ba                	mv	a3,a4
20406570:	fec42703          	lw	a4,-20(s0)
20406574:	0711                	addi	a4,a4,4
20406576:	8ff5                	and	a5,a5,a3
20406578:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
2040657a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:30
}
2040657c:	853e                	mv	a0,a5
2040657e:	50b2                	lw	ra,44(sp)
20406580:	5422                	lw	s0,40(sp)
20406582:	6145                	addi	sp,sp,48
20406584:	8082                	ret

20406586 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20406586:	7179                	addi	sp,sp,-48
20406588:	d606                	sw	ra,44(sp)
2040658a:	d422                	sw	s0,40(sp)
2040658c:	1800                	addi	s0,sp,48
2040658e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406592:	fdc42503          	lw	a0,-36(s0)
20406596:	d67ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
2040659a:	87aa                	mv	a5,a0
2040659c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
204065a0:	fec42783          	lw	a5,-20(s0)
204065a4:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
204065a6:	853e                	mv	a0,a5
204065a8:	50b2                	lw	ra,44(sp)
204065aa:	5422                	lw	s0,40(sp)
204065ac:	6145                	addi	sp,sp,48
204065ae:	8082                	ret

204065b0 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
204065b0:	7179                	addi	sp,sp,-48
204065b2:	d606                	sw	ra,44(sp)
204065b4:	d422                	sw	s0,40(sp)
204065b6:	1800                	addi	s0,sp,48
204065b8:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204065bc:	fdc42503          	lw	a0,-36(s0)
204065c0:	d3dff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
204065c4:	87aa                	mv	a5,a0
204065c6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
204065ca:	fec42783          	lw	a5,-20(s0)
204065ce:	07b1                	addi	a5,a5,12
204065d0:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
204065d2:	853e                	mv	a0,a5
204065d4:	50b2                	lw	ra,44(sp)
204065d6:	5422                	lw	s0,40(sp)
204065d8:	6145                	addi	sp,sp,48
204065da:	8082                	ret

204065dc <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
204065dc:	7179                	addi	sp,sp,-48
204065de:	d606                	sw	ra,44(sp)
204065e0:	d422                	sw	s0,40(sp)
204065e2:	1800                	addi	s0,sp,48
204065e4:	fca42e23          	sw	a0,-36(s0)
204065e8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204065ec:	fdc42503          	lw	a0,-36(s0)
204065f0:	d0dff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
204065f4:	87aa                	mv	a5,a0
204065f6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
204065fa:	fec42783          	lw	a5,-20(s0)
204065fe:	07a1                	addi	a5,a5,8
20406600:	439c                	lw	a5,0(a5)
20406602:	fd842703          	lw	a4,-40(s0)
20406606:	fff74713          	not	a4,a4
2040660a:	86ba                	mv	a3,a4
2040660c:	fec42703          	lw	a4,-20(s0)
20406610:	0721                	addi	a4,a4,8
20406612:	8ff5                	and	a5,a5,a3
20406614:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20406616:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406618:	853e                	mv	a0,a5
2040661a:	50b2                	lw	ra,44(sp)
2040661c:	5422                	lw	s0,40(sp)
2040661e:	6145                	addi	sp,sp,48
20406620:	8082                	ret

20406622 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20406622:	7179                	addi	sp,sp,-48
20406624:	d606                	sw	ra,44(sp)
20406626:	d422                	sw	s0,40(sp)
20406628:	1800                	addi	s0,sp,48
2040662a:	fca42e23          	sw	a0,-36(s0)
2040662e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406632:	fdc42503          	lw	a0,-36(s0)
20406636:	cc7ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
2040663a:	87aa                	mv	a5,a0
2040663c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20406640:	fec42783          	lw	a5,-20(s0)
20406644:	07a1                	addi	a5,a5,8
20406646:	4398                	lw	a4,0(a5)
20406648:	fd842783          	lw	a5,-40(s0)
2040664c:	fec42683          	lw	a3,-20(s0)
20406650:	06a1                	addi	a3,a3,8
20406652:	8fd9                	or	a5,a5,a4
20406654:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20406656:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20406658:	853e                	mv	a0,a5
2040665a:	50b2                	lw	ra,44(sp)
2040665c:	5422                	lw	s0,40(sp)
2040665e:	6145                	addi	sp,sp,48
20406660:	8082                	ret

20406662 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20406662:	7179                	addi	sp,sp,-48
20406664:	d606                	sw	ra,44(sp)
20406666:	d422                	sw	s0,40(sp)
20406668:	1800                	addi	s0,sp,48
2040666a:	fca42e23          	sw	a0,-36(s0)
2040666e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406672:	fdc42503          	lw	a0,-36(s0)
20406676:	c87ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
2040667a:	87aa                	mv	a5,a0
2040667c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20406680:	fec42783          	lw	a5,-20(s0)
20406684:	07b1                	addi	a5,a5,12
20406686:	4398                	lw	a4,0(a5)
20406688:	fd842783          	lw	a5,-40(s0)
2040668c:	fec42683          	lw	a3,-20(s0)
20406690:	06b1                	addi	a3,a3,12
20406692:	8fd9                	or	a5,a5,a4
20406694:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20406696:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20406698:	853e                	mv	a0,a5
2040669a:	50b2                	lw	ra,44(sp)
2040669c:	5422                	lw	s0,40(sp)
2040669e:	6145                	addi	sp,sp,48
204066a0:	8082                	ret

204066a2 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
204066a2:	7179                	addi	sp,sp,-48
204066a4:	d606                	sw	ra,44(sp)
204066a6:	d422                	sw	s0,40(sp)
204066a8:	1800                	addi	s0,sp,48
204066aa:	fca42e23          	sw	a0,-36(s0)
204066ae:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204066b2:	fdc42503          	lw	a0,-36(s0)
204066b6:	c47ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
204066ba:	87aa                	mv	a5,a0
204066bc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204066c0:	fec42783          	lw	a5,-20(s0)
204066c4:	07b1                	addi	a5,a5,12
204066c6:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
204066c8:	fd842703          	lw	a4,-40(s0)
204066cc:	fff74713          	not	a4,a4
204066d0:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204066d2:	fec42703          	lw	a4,-20(s0)
204066d6:	0731                	addi	a4,a4,12
204066d8:	8ff5                	and	a5,a5,a3
204066da:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
204066dc:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:84
}
204066de:	853e                	mv	a0,a5
204066e0:	50b2                	lw	ra,44(sp)
204066e2:	5422                	lw	s0,40(sp)
204066e4:	6145                	addi	sp,sp,48
204066e6:	8082                	ret

204066e8 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
204066e8:	7179                	addi	sp,sp,-48
204066ea:	d606                	sw	ra,44(sp)
204066ec:	d422                	sw	s0,40(sp)
204066ee:	1800                	addi	s0,sp,48
204066f0:	fca42e23          	sw	a0,-36(s0)
204066f4:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204066f8:	fdc42503          	lw	a0,-36(s0)
204066fc:	c01ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
20406700:	87aa                	mv	a5,a0
20406702:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20406706:	fec42783          	lw	a5,-20(s0)
2040670a:	07b1                	addi	a5,a5,12
2040670c:	4398                	lw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2040670e:	fd842783          	lw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406712:	fec42683          	lw	a3,-20(s0)
20406716:	06b1                	addi	a3,a3,12
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406718:	8fb9                	xor	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040671a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
2040671c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2040671e:	853e                	mv	a0,a5
20406720:	50b2                	lw	ra,44(sp)
20406722:	5422                	lw	s0,40(sp)
20406724:	6145                	addi	sp,sp,48
20406726:	8082                	ret

20406728 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20406728:	7179                	addi	sp,sp,-48
2040672a:	d606                	sw	ra,44(sp)
2040672c:	d422                	sw	s0,40(sp)
2040672e:	1800                	addi	s0,sp,48
20406730:	fca42e23          	sw	a0,-36(s0)
20406734:	fcb42c23          	sw	a1,-40(s0)
20406738:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040673c:	fdc42503          	lw	a0,-36(s0)
20406740:	bbdff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
20406744:	87aa                	mv	a5,a0
20406746:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
2040674a:	fec42783          	lw	a5,-20(s0)
2040674e:	03c78793          	addi	a5,a5,60
20406752:	4398                	lw	a4,0(a5)
20406754:	fd842783          	lw	a5,-40(s0)
20406758:	fec42683          	lw	a3,-20(s0)
2040675c:	03c68693          	addi	a3,a3,60
20406760:	8fd9                	or	a5,a5,a4
20406762:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20406764:	fec42783          	lw	a5,-20(s0)
20406768:	03878793          	addi	a5,a5,56
2040676c:	4398                	lw	a4,0(a5)
2040676e:	fd442783          	lw	a5,-44(s0)
20406772:	fec42683          	lw	a3,-20(s0)
20406776:	03868693          	addi	a3,a3,56
2040677a:	8fd9                	or	a5,a5,a4
2040677c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
2040677e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406780:	853e                	mv	a0,a5
20406782:	50b2                	lw	ra,44(sp)
20406784:	5422                	lw	s0,40(sp)
20406786:	6145                	addi	sp,sp,48
20406788:	8082                	ret

2040678a <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
2040678a:	7179                	addi	sp,sp,-48
2040678c:	d606                	sw	ra,44(sp)
2040678e:	d422                	sw	s0,40(sp)
20406790:	1800                	addi	s0,sp,48
20406792:	fca42e23          	sw	a0,-36(s0)
20406796:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040679a:	fdc42503          	lw	a0,-36(s0)
2040679e:	b5fff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
204067a2:	87aa                	mv	a5,a0
204067a4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
204067a8:	fec42783          	lw	a5,-20(s0)
204067ac:	03878793          	addi	a5,a5,56
204067b0:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
204067b2:	fd842703          	lw	a4,-40(s0)
204067b6:	fff74713          	not	a4,a4
204067ba:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
204067bc:	fec42703          	lw	a4,-20(s0)
204067c0:	03870713          	addi	a4,a4,56
204067c4:	8ff5                	and	a5,a5,a3
204067c6:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
204067c8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:118
}
204067ca:	853e                	mv	a0,a5
204067cc:	50b2                	lw	ra,44(sp)
204067ce:	5422                	lw	s0,40(sp)
204067d0:	6145                	addi	sp,sp,48
204067d2:	8082                	ret

204067d4 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
204067d4:	7179                	addi	sp,sp,-48
204067d6:	d606                	sw	ra,44(sp)
204067d8:	d422                	sw	s0,40(sp)
204067da:	1800                	addi	s0,sp,48
204067dc:	fca42e23          	sw	a0,-36(s0)
204067e0:	fcb42c23          	sw	a1,-40(s0)
204067e4:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204067e8:	fdc42503          	lw	a0,-36(s0)
204067ec:	b11ff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
204067f0:	87aa                	mv	a5,a0
204067f2:	fef42623          	sw	a5,-20(s0)
204067f6:	fd442703          	lw	a4,-44(s0)
204067fa:	479d                	li	a5,7
204067fc:	1ce7e963          	bltu	a5,a4,204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406800:	fd442783          	lw	a5,-44(s0)
20406804:	00279713          	slli	a4,a5,0x2
20406808:	204017b7          	lui	a5,0x20401
2040680c:	f3478793          	addi	a5,a5,-204 # 20400f34 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20406810:	97ba                	add	a5,a5,a4
20406812:	439c                	lw	a5,0(a5)
20406814:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406816:	fec42783          	lw	a5,-20(s0)
2040681a:	07e1                	addi	a5,a5,24
2040681c:	439c                	lw	a5,0(a5)
2040681e:	fd842703          	lw	a4,-40(s0)
20406822:	fff74713          	not	a4,a4
20406826:	86ba                	mv	a3,a4
20406828:	fec42703          	lw	a4,-20(s0)
2040682c:	0761                	addi	a4,a4,24
2040682e:	8ff5                	and	a5,a5,a3
20406830:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20406832:	fec42783          	lw	a5,-20(s0)
20406836:	02078793          	addi	a5,a5,32
2040683a:	439c                	lw	a5,0(a5)
2040683c:	fd842703          	lw	a4,-40(s0)
20406840:	fff74713          	not	a4,a4
20406844:	86ba                	mv	a3,a4
20406846:	fec42703          	lw	a4,-20(s0)
2040684a:	02070713          	addi	a4,a4,32
2040684e:	8ff5                	and	a5,a5,a3
20406850:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20406852:	fec42783          	lw	a5,-20(s0)
20406856:	02878793          	addi	a5,a5,40
2040685a:	439c                	lw	a5,0(a5)
2040685c:	fd842703          	lw	a4,-40(s0)
20406860:	fff74713          	not	a4,a4
20406864:	86ba                	mv	a3,a4
20406866:	fec42703          	lw	a4,-20(s0)
2040686a:	02870713          	addi	a4,a4,40
2040686e:	8ff5                	and	a5,a5,a3
20406870:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20406872:	fec42783          	lw	a5,-20(s0)
20406876:	03078793          	addi	a5,a5,48
2040687a:	439c                	lw	a5,0(a5)
2040687c:	fd842703          	lw	a4,-40(s0)
20406880:	fff74713          	not	a4,a4
20406884:	86ba                	mv	a3,a4
20406886:	fec42703          	lw	a4,-20(s0)
2040688a:	03070713          	addi	a4,a4,48
2040688e:	8ff5                	and	a5,a5,a3
20406890:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20406892:	aa35                	j	204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406894:	fec42783          	lw	a5,-20(s0)
20406898:	07e1                	addi	a5,a5,24
2040689a:	4398                	lw	a4,0(a5)
2040689c:	fd842783          	lw	a5,-40(s0)
204068a0:	fec42683          	lw	a3,-20(s0)
204068a4:	06e1                	addi	a3,a3,24
204068a6:	8fd9                	or	a5,a5,a4
204068a8:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
204068aa:	a215                	j	204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204068ac:	fec42783          	lw	a5,-20(s0)
204068b0:	02078793          	addi	a5,a5,32
204068b4:	4398                	lw	a4,0(a5)
204068b6:	fd842783          	lw	a5,-40(s0)
204068ba:	fec42683          	lw	a3,-20(s0)
204068be:	02068693          	addi	a3,a3,32
204068c2:	8fd9                	or	a5,a5,a4
204068c4:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
204068c6:	a221                	j	204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204068c8:	fec42783          	lw	a5,-20(s0)
204068cc:	07e1                	addi	a5,a5,24
204068ce:	4398                	lw	a4,0(a5)
204068d0:	fd842783          	lw	a5,-40(s0)
204068d4:	fec42683          	lw	a3,-20(s0)
204068d8:	06e1                	addi	a3,a3,24
204068da:	8fd9                	or	a5,a5,a4
204068dc:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204068de:	fec42783          	lw	a5,-20(s0)
204068e2:	02078793          	addi	a5,a5,32
204068e6:	4398                	lw	a4,0(a5)
204068e8:	fd842783          	lw	a5,-40(s0)
204068ec:	fec42683          	lw	a3,-20(s0)
204068f0:	02068693          	addi	a3,a3,32
204068f4:	8fd9                	or	a5,a5,a4
204068f6:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
204068f8:	a8d9                	j	204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204068fa:	fec42783          	lw	a5,-20(s0)
204068fe:	02878793          	addi	a5,a5,40
20406902:	4398                	lw	a4,0(a5)
20406904:	fd842783          	lw	a5,-40(s0)
20406908:	fec42683          	lw	a3,-20(s0)
2040690c:	02868693          	addi	a3,a3,40
20406910:	8fd9                	or	a5,a5,a4
20406912:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406914:	a86d                	j	204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406916:	fec42783          	lw	a5,-20(s0)
2040691a:	03078793          	addi	a5,a5,48
2040691e:	4398                	lw	a4,0(a5)
20406920:	fd842783          	lw	a5,-40(s0)
20406924:	fec42683          	lw	a3,-20(s0)
20406928:	03068693          	addi	a3,a3,48
2040692c:	8fd9                	or	a5,a5,a4
2040692e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20406930:	a879                	j	204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406932:	fec42783          	lw	a5,-20(s0)
20406936:	02878793          	addi	a5,a5,40
2040693a:	4398                	lw	a4,0(a5)
2040693c:	fd842783          	lw	a5,-40(s0)
20406940:	fec42683          	lw	a3,-20(s0)
20406944:	02868693          	addi	a3,a3,40
20406948:	8fd9                	or	a5,a5,a4
2040694a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2040694c:	fec42783          	lw	a5,-20(s0)
20406950:	03078793          	addi	a5,a5,48
20406954:	4398                	lw	a4,0(a5)
20406956:	fd842783          	lw	a5,-40(s0)
2040695a:	fec42683          	lw	a3,-20(s0)
2040695e:	03068693          	addi	a3,a3,48
20406962:	8fd9                	or	a5,a5,a4
20406964:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20406966:	a0a5                	j	204069ce <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406968:	fec42783          	lw	a5,-20(s0)
2040696c:	07e1                	addi	a5,a5,24
2040696e:	4398                	lw	a4,0(a5)
20406970:	fd842783          	lw	a5,-40(s0)
20406974:	fec42683          	lw	a3,-20(s0)
20406978:	06e1                	addi	a3,a3,24
2040697a:	8fd9                	or	a5,a5,a4
2040697c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2040697e:	fec42783          	lw	a5,-20(s0)
20406982:	02078793          	addi	a5,a5,32
20406986:	4398                	lw	a4,0(a5)
20406988:	fd842783          	lw	a5,-40(s0)
2040698c:	fec42683          	lw	a3,-20(s0)
20406990:	02068693          	addi	a3,a3,32
20406994:	8fd9                	or	a5,a5,a4
20406996:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406998:	fec42783          	lw	a5,-20(s0)
2040699c:	02878793          	addi	a5,a5,40
204069a0:	4398                	lw	a4,0(a5)
204069a2:	fd842783          	lw	a5,-40(s0)
204069a6:	fec42683          	lw	a3,-20(s0)
204069aa:	02868693          	addi	a3,a3,40
204069ae:	8fd9                	or	a5,a5,a4
204069b0:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204069b2:	fec42783          	lw	a5,-20(s0)
204069b6:	03078793          	addi	a5,a5,48
204069ba:	4398                	lw	a4,0(a5)
204069bc:	fd842783          	lw	a5,-40(s0)
204069c0:	fec42683          	lw	a3,-20(s0)
204069c4:	03068693          	addi	a3,a3,48
204069c8:	8fd9                	or	a5,a5,a4
204069ca:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
204069cc:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
204069ce:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:175
}
204069d0:	853e                	mv	a0,a5
204069d2:	50b2                	lw	ra,44(sp)
204069d4:	5422                	lw	s0,40(sp)
204069d6:	6145                	addi	sp,sp,48
204069d8:	8082                	ret

204069da <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
204069da:	7179                	addi	sp,sp,-48
204069dc:	d606                	sw	ra,44(sp)
204069de:	d422                	sw	s0,40(sp)
204069e0:	1800                	addi	s0,sp,48
204069e2:	fca42e23          	sw	a0,-36(s0)
204069e6:	fcb42c23          	sw	a1,-40(s0)
204069ea:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204069ee:	fdc42503          	lw	a0,-36(s0)
204069f2:	90bff0ef          	jal	ra,204062fc <__metal_driver_sifive_gpio0_base>
204069f6:	87aa                	mv	a5,a0
204069f8:	fef42623          	sw	a5,-20(s0)
204069fc:	fd442703          	lw	a4,-44(s0)
20406a00:	479d                	li	a5,7
20406a02:	14e7ea63          	bltu	a5,a4,20406b56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20406a06:	fd442783          	lw	a5,-44(s0)
20406a0a:	00279713          	slli	a4,a5,0x2
20406a0e:	204017b7          	lui	a5,0x20401
20406a12:	f5478793          	addi	a5,a5,-172 # 20400f54 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20406a16:	97ba                	add	a5,a5,a4
20406a18:	439c                	lw	a5,0(a5)
20406a1a:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406a1c:	fec42783          	lw	a5,-20(s0)
20406a20:	07f1                	addi	a5,a5,28
20406a22:	4398                	lw	a4,0(a5)
20406a24:	fd842783          	lw	a5,-40(s0)
20406a28:	fec42683          	lw	a3,-20(s0)
20406a2c:	06f1                	addi	a3,a3,28
20406a2e:	8fd9                	or	a5,a5,a4
20406a30:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20406a32:	a215                	j	20406b56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406a34:	fec42783          	lw	a5,-20(s0)
20406a38:	02478793          	addi	a5,a5,36
20406a3c:	4398                	lw	a4,0(a5)
20406a3e:	fd842783          	lw	a5,-40(s0)
20406a42:	fec42683          	lw	a3,-20(s0)
20406a46:	02468693          	addi	a3,a3,36
20406a4a:	8fd9                	or	a5,a5,a4
20406a4c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20406a4e:	a221                	j	20406b56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406a50:	fec42783          	lw	a5,-20(s0)
20406a54:	07f1                	addi	a5,a5,28
20406a56:	4398                	lw	a4,0(a5)
20406a58:	fd842783          	lw	a5,-40(s0)
20406a5c:	fec42683          	lw	a3,-20(s0)
20406a60:	06f1                	addi	a3,a3,28
20406a62:	8fd9                	or	a5,a5,a4
20406a64:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406a66:	fec42783          	lw	a5,-20(s0)
20406a6a:	02478793          	addi	a5,a5,36
20406a6e:	4398                	lw	a4,0(a5)
20406a70:	fd842783          	lw	a5,-40(s0)
20406a74:	fec42683          	lw	a3,-20(s0)
20406a78:	02468693          	addi	a3,a3,36
20406a7c:	8fd9                	or	a5,a5,a4
20406a7e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406a80:	a8d9                	j	20406b56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406a82:	fec42783          	lw	a5,-20(s0)
20406a86:	02c78793          	addi	a5,a5,44
20406a8a:	4398                	lw	a4,0(a5)
20406a8c:	fd842783          	lw	a5,-40(s0)
20406a90:	fec42683          	lw	a3,-20(s0)
20406a94:	02c68693          	addi	a3,a3,44
20406a98:	8fd9                	or	a5,a5,a4
20406a9a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20406a9c:	a86d                	j	20406b56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406a9e:	fec42783          	lw	a5,-20(s0)
20406aa2:	03478793          	addi	a5,a5,52
20406aa6:	4398                	lw	a4,0(a5)
20406aa8:	fd842783          	lw	a5,-40(s0)
20406aac:	fec42683          	lw	a3,-20(s0)
20406ab0:	03468693          	addi	a3,a3,52
20406ab4:	8fd9                	or	a5,a5,a4
20406ab6:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20406ab8:	a879                	j	20406b56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406aba:	fec42783          	lw	a5,-20(s0)
20406abe:	02c78793          	addi	a5,a5,44
20406ac2:	4398                	lw	a4,0(a5)
20406ac4:	fd842783          	lw	a5,-40(s0)
20406ac8:	fec42683          	lw	a3,-20(s0)
20406acc:	02c68693          	addi	a3,a3,44
20406ad0:	8fd9                	or	a5,a5,a4
20406ad2:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406ad4:	fec42783          	lw	a5,-20(s0)
20406ad8:	03478793          	addi	a5,a5,52
20406adc:	4398                	lw	a4,0(a5)
20406ade:	fd842783          	lw	a5,-40(s0)
20406ae2:	fec42683          	lw	a3,-20(s0)
20406ae6:	03468693          	addi	a3,a3,52
20406aea:	8fd9                	or	a5,a5,a4
20406aec:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20406aee:	a0a5                	j	20406b56 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406af0:	fec42783          	lw	a5,-20(s0)
20406af4:	07f1                	addi	a5,a5,28
20406af6:	4398                	lw	a4,0(a5)
20406af8:	fd842783          	lw	a5,-40(s0)
20406afc:	fec42683          	lw	a3,-20(s0)
20406b00:	06f1                	addi	a3,a3,28
20406b02:	8fd9                	or	a5,a5,a4
20406b04:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406b06:	fec42783          	lw	a5,-20(s0)
20406b0a:	02478793          	addi	a5,a5,36
20406b0e:	4398                	lw	a4,0(a5)
20406b10:	fd842783          	lw	a5,-40(s0)
20406b14:	fec42683          	lw	a3,-20(s0)
20406b18:	02468693          	addi	a3,a3,36
20406b1c:	8fd9                	or	a5,a5,a4
20406b1e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406b20:	fec42783          	lw	a5,-20(s0)
20406b24:	02c78793          	addi	a5,a5,44
20406b28:	4398                	lw	a4,0(a5)
20406b2a:	fd842783          	lw	a5,-40(s0)
20406b2e:	fec42683          	lw	a3,-20(s0)
20406b32:	02c68693          	addi	a3,a3,44
20406b36:	8fd9                	or	a5,a5,a4
20406b38:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406b3a:	fec42783          	lw	a5,-20(s0)
20406b3e:	03478793          	addi	a5,a5,52
20406b42:	4398                	lw	a4,0(a5)
20406b44:	fd842783          	lw	a5,-40(s0)
20406b48:	fec42683          	lw	a3,-20(s0)
20406b4c:	03468693          	addi	a3,a3,52
20406b50:	8fd9                	or	a5,a5,a4
20406b52:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20406b54:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20406b56:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20406b58:	853e                	mv	a0,a5
20406b5a:	50b2                	lw	ra,44(sp)
20406b5c:	5422                	lw	s0,40(sp)
20406b5e:	6145                	addi	sp,sp,48
20406b60:	8082                	ret

20406b62 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20406b62:	1101                	addi	sp,sp,-32
20406b64:	ce06                	sw	ra,28(sp)
20406b66:	cc22                	sw	s0,24(sp)
20406b68:	1000                	addi	s0,sp,32
20406b6a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20406b6e:	fec42503          	lw	a0,-20(s0)
20406b72:	fb0ff0ef          	jal	ra,20406322 <__metal_driver_sifive_gpio0_interrupt_parent>
20406b76:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20406b78:	853e                	mv	a0,a5
20406b7a:	40f2                	lw	ra,28(sp)
20406b7c:	4462                	lw	s0,24(sp)
20406b7e:	6105                	addi	sp,sp,32
20406b80:	8082                	ret

20406b82 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20406b82:	7179                	addi	sp,sp,-48
20406b84:	d606                	sw	ra,44(sp)
20406b86:	d422                	sw	s0,40(sp)
20406b88:	1800                	addi	s0,sp,48
20406b8a:	fca42e23          	sw	a0,-36(s0)
20406b8e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20406b92:	fd842583          	lw	a1,-40(s0)
20406b96:	fdc42503          	lw	a0,-36(s0)
20406b9a:	fb2ff0ef          	jal	ra,2040634c <__metal_driver_sifive_gpio0_interrupt_lines>
20406b9e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20406ba2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20406ba6:	853e                	mv	a0,a5
20406ba8:	50b2                	lw	ra,44(sp)
20406baa:	5422                	lw	s0,40(sp)
20406bac:	6145                	addi	sp,sp,48
20406bae:	8082                	ret

20406bb0 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:863
{
20406bb0:	1101                	addi	sp,sp,-32
20406bb2:	ce22                	sw	s0,28(sp)
20406bb4:	1000                	addi	s0,sp,32
20406bb6:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20406bba:	fec42703          	lw	a4,-20(s0)
20406bbe:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20406bc2:	00f71563          	bne	a4,a5,20406bcc <__metal_driver_sifive_test0_base+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20406bc6:	001007b7          	lui	a5,0x100
20406bca:	a011                	j	20406bce <__metal_driver_sifive_test0_base+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:868
		return 0;
20406bcc:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:870
}
20406bce:	853e                	mv	a0,a5
20406bd0:	4472                	lw	s0,28(sp)
20406bd2:	6105                	addi	sp,sp,32
20406bd4:	8082                	ret

20406bd6 <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406bd6:	7179                	addi	sp,sp,-48
20406bd8:	d606                	sw	ra,44(sp)
20406bda:	d422                	sw	s0,40(sp)
20406bdc:	1800                	addi	s0,sp,48
20406bde:	fca42e23          	sw	a0,-36(s0)
20406be2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20406be6:	fdc42503          	lw	a0,-36(s0)
20406bea:	37d9                	jal	20406bb0 <__metal_driver_sifive_test0_base>
20406bec:	87aa                	mv	a5,a0
20406bee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20406bf2:	fd842783          	lw	a5,-40(s0)
20406bf6:	01079713          	slli	a4,a5,0x10
20406bfa:	fd842783          	lw	a5,-40(s0)
20406bfe:	e789                	bnez	a5,20406c08 <__metal_driver_sifive_test0_exit+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20406c00:	6795                	lui	a5,0x5
20406c02:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20406c06:	a021                	j	20406c0e <__metal_driver_sifive_test0_exit+0x38>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20406c08:	678d                	lui	a5,0x3
20406c0a:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20406c0e:	97ba                	add	a5,a5,a4
20406c10:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406c14:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20406c18:	fe842703          	lw	a4,-24(s0)
20406c1c:	c398                	sw	a4,0(a5)
20406c1e:	bfdd                	j	20406c14 <__metal_driver_sifive_test0_exit+0x3e>

20406c20 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:888
{
20406c20:	1101                	addi	sp,sp,-32
20406c22:	ce22                	sw	s0,28(sp)
20406c24:	1000                	addi	s0,sp,32
20406c26:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406c2a:	fec42703          	lw	a4,-20(s0)
20406c2e:	800007b7          	lui	a5,0x80000
20406c32:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406c36:	00f71563          	bne	a4,a5,20406c40 <__metal_driver_sifive_uart0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20406c3a:	100137b7          	lui	a5,0x10013
20406c3e:	a011                	j	20406c42 <__metal_driver_sifive_uart0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:893
		return 0;
20406c40:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:895
}
20406c42:	853e                	mv	a0,a5
20406c44:	4472                	lw	s0,28(sp)
20406c46:	6105                	addi	sp,sp,32
20406c48:	8082                	ret

20406c4a <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:918
{
20406c4a:	1101                	addi	sp,sp,-32
20406c4c:	ce22                	sw	s0,28(sp)
20406c4e:	1000                	addi	s0,sp,32
20406c50:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406c54:	fec42703          	lw	a4,-20(s0)
20406c58:	800007b7          	lui	a5,0x80000
20406c5c:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406c60:	00f71763          	bne	a4,a5,20406c6e <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406c64:	800007b7          	lui	a5,0x80000
20406c68:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
20406c6c:	a011                	j	20406c70 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:923
		return 0;
20406c6e:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:925
}
20406c70:	853e                	mv	a0,a5
20406c72:	4472                	lw	s0,28(sp)
20406c74:	6105                	addi	sp,sp,32
20406c76:	8082                	ret

20406c78 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:928
{
20406c78:	1101                	addi	sp,sp,-32
20406c7a:	ce22                	sw	s0,28(sp)
20406c7c:	1000                	addi	s0,sp,32
20406c7e:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406c82:	fec42703          	lw	a4,-20(s0)
20406c86:	800007b7          	lui	a5,0x80000
20406c8a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406c8e:	00f71463          	bne	a4,a5,20406c96 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:930
		return 5;
20406c92:	4795                	li	a5,5
20406c94:	a011                	j	20406c98 <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:933
		return 0;
20406c96:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:935
}
20406c98:	853e                	mv	a0,a5
20406c9a:	4472                	lw	s0,28(sp)
20406c9c:	6105                	addi	sp,sp,32
20406c9e:	8082                	ret

20406ca0 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:938
{
20406ca0:	1101                	addi	sp,sp,-32
20406ca2:	ce22                	sw	s0,28(sp)
20406ca4:	1000                	addi	s0,sp,32
20406ca6:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406caa:	fec42703          	lw	a4,-20(s0)
20406cae:	800007b7          	lui	a5,0x80000
20406cb2:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406cb6:	00f71763          	bne	a4,a5,20406cc4 <__metal_driver_sifive_uart0_clock+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20406cba:	800007b7          	lui	a5,0x80000
20406cbe:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe670>
20406cc2:	a011                	j	20406cc6 <__metal_driver_sifive_uart0_clock+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:943
		return 0;
20406cc4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:945
}
20406cc6:	853e                	mv	a0,a5
20406cc8:	4472                	lw	s0,28(sp)
20406cca:	6105                	addi	sp,sp,32
20406ccc:	8082                	ret

20406cce <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:948
{
20406cce:	1101                	addi	sp,sp,-32
20406cd0:	ce22                	sw	s0,28(sp)
20406cd2:	1000                	addi	s0,sp,32
20406cd4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406cd8:	fec42703          	lw	a4,-20(s0)
20406cdc:	800007b7          	lui	a5,0x80000
20406ce0:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406ce4:	00f71563          	bne	a4,a5,20406cee <__metal_driver_sifive_uart0_pinmux+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20406ce8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406cec:	a011                	j	20406cf0 <__metal_driver_sifive_uart0_pinmux+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:953
		return 0;
20406cee:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:955
}
20406cf0:	853e                	mv	a0,a5
20406cf2:	4472                	lw	s0,28(sp)
20406cf4:	6105                	addi	sp,sp,32
20406cf6:	8082                	ret

20406cf8 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:958
{
20406cf8:	1101                	addi	sp,sp,-32
20406cfa:	ce22                	sw	s0,28(sp)
20406cfc:	1000                	addi	s0,sp,32
20406cfe:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406d02:	fec42703          	lw	a4,-20(s0)
20406d06:	800007b7          	lui	a5,0x80000
20406d0a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406d0e:	00f71463          	bne	a4,a5,20406d16 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:960
		return 0;
20406d12:	4781                	li	a5,0
20406d14:	a011                	j	20406d18 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:963
		return 0;
20406d16:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:965
}
20406d18:	853e                	mv	a0,a5
20406d1a:	4472                	lw	s0,28(sp)
20406d1c:	6105                	addi	sp,sp,32
20406d1e:	8082                	ret

20406d20 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:968
{
20406d20:	1101                	addi	sp,sp,-32
20406d22:	ce22                	sw	s0,28(sp)
20406d24:	1000                	addi	s0,sp,32
20406d26:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406d2a:	fec42703          	lw	a4,-20(s0)
20406d2e:	800007b7          	lui	a5,0x80000
20406d32:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406d36:	00f71563          	bne	a4,a5,20406d40 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:970
		return 196608;
20406d3a:	000307b7          	lui	a5,0x30
20406d3e:	a011                	j	20406d42 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:973
		return 0;
20406d40:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:975
}
20406d42:	853e                	mv	a0,a5
20406d44:	4472                	lw	s0,28(sp)
20406d46:	6105                	addi	sp,sp,32
20406d48:	8082                	ret

20406d4a <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20406d4a:	1101                	addi	sp,sp,-32
20406d4c:	ce06                	sw	ra,28(sp)
20406d4e:	cc22                	sw	s0,24(sp)
20406d50:	1000                	addi	s0,sp,32
20406d52:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20406d56:	fec42503          	lw	a0,-20(s0)
20406d5a:	ef1ff0ef          	jal	ra,20406c4a <__metal_driver_sifive_uart0_interrupt_parent>
20406d5e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406d60:	853e                	mv	a0,a5
20406d62:	40f2                	lw	ra,28(sp)
20406d64:	4462                	lw	s0,24(sp)
20406d66:	6105                	addi	sp,sp,32
20406d68:	8082                	ret

20406d6a <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20406d6a:	1101                	addi	sp,sp,-32
20406d6c:	ce06                	sw	ra,28(sp)
20406d6e:	cc22                	sw	s0,24(sp)
20406d70:	1000                	addi	s0,sp,32
20406d72:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406d76:	fec42503          	lw	a0,-20(s0)
20406d7a:	effff0ef          	jal	ra,20406c78 <__metal_driver_sifive_uart0_interrupt_line>
20406d7e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406d80:	853e                	mv	a0,a5
20406d82:	40f2                	lw	ra,28(sp)
20406d84:	4462                	lw	s0,24(sp)
20406d86:	6105                	addi	sp,sp,32
20406d88:	8082                	ret

20406d8a <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20406d8a:	7179                	addi	sp,sp,-48
20406d8c:	d606                	sw	ra,44(sp)
20406d8e:	d422                	sw	s0,40(sp)
20406d90:	1800                	addi	s0,sp,48
20406d92:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d96:	fdc42503          	lw	a0,-36(s0)
20406d9a:	e87ff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406d9e:	87aa                	mv	a5,a0
20406da0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20406da4:	fec42783          	lw	a5,-20(s0)
20406da8:	07c1                	addi	a5,a5,16
20406daa:	439c                	lw	a5,0(a5)
20406dac:	fec42703          	lw	a4,-20(s0)
20406db0:	0741                	addi	a4,a4,16
20406db2:	0017e793          	ori	a5,a5,1
20406db6:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20406db8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:50
}
20406dba:	853e                	mv	a0,a5
20406dbc:	50b2                	lw	ra,44(sp)
20406dbe:	5422                	lw	s0,40(sp)
20406dc0:	6145                	addi	sp,sp,48
20406dc2:	8082                	ret

20406dc4 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20406dc4:	7179                	addi	sp,sp,-48
20406dc6:	d606                	sw	ra,44(sp)
20406dc8:	d422                	sw	s0,40(sp)
20406dca:	1800                	addi	s0,sp,48
20406dcc:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406dd0:	fdc42503          	lw	a0,-36(s0)
20406dd4:	e4dff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406dd8:	87aa                	mv	a5,a0
20406dda:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20406dde:	fec42783          	lw	a5,-20(s0)
20406de2:	07c1                	addi	a5,a5,16
20406de4:	439c                	lw	a5,0(a5)
20406de6:	fec42703          	lw	a4,-20(s0)
20406dea:	0741                	addi	a4,a4,16
20406dec:	9bf9                	andi	a5,a5,-2
20406dee:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20406df0:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:57
}
20406df2:	853e                	mv	a0,a5
20406df4:	50b2                	lw	ra,44(sp)
20406df6:	5422                	lw	s0,40(sp)
20406df8:	6145                	addi	sp,sp,48
20406dfa:	8082                	ret

20406dfc <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20406dfc:	7179                	addi	sp,sp,-48
20406dfe:	d606                	sw	ra,44(sp)
20406e00:	d422                	sw	s0,40(sp)
20406e02:	1800                	addi	s0,sp,48
20406e04:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e08:	fdc42503          	lw	a0,-36(s0)
20406e0c:	e15ff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406e10:	87aa                	mv	a5,a0
20406e12:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20406e16:	fec42783          	lw	a5,-20(s0)
20406e1a:	07c1                	addi	a5,a5,16
20406e1c:	439c                	lw	a5,0(a5)
20406e1e:	fec42703          	lw	a4,-20(s0)
20406e22:	0741                	addi	a4,a4,16
20406e24:	0027e793          	ori	a5,a5,2
20406e28:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20406e2a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:64
}
20406e2c:	853e                	mv	a0,a5
20406e2e:	50b2                	lw	ra,44(sp)
20406e30:	5422                	lw	s0,40(sp)
20406e32:	6145                	addi	sp,sp,48
20406e34:	8082                	ret

20406e36 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20406e36:	7179                	addi	sp,sp,-48
20406e38:	d606                	sw	ra,44(sp)
20406e3a:	d422                	sw	s0,40(sp)
20406e3c:	1800                	addi	s0,sp,48
20406e3e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e42:	fdc42503          	lw	a0,-36(s0)
20406e46:	ddbff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406e4a:	87aa                	mv	a5,a0
20406e4c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406e50:	fec42783          	lw	a5,-20(s0)
20406e54:	07c1                	addi	a5,a5,16
20406e56:	439c                	lw	a5,0(a5)
20406e58:	fec42703          	lw	a4,-20(s0)
20406e5c:	0741                	addi	a4,a4,16
20406e5e:	9bf5                	andi	a5,a5,-3
20406e60:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20406e62:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:71
}
20406e64:	853e                	mv	a0,a5
20406e66:	50b2                	lw	ra,44(sp)
20406e68:	5422                	lw	s0,40(sp)
20406e6a:	6145                	addi	sp,sp,48
20406e6c:	8082                	ret

20406e6e <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20406e6e:	7179                	addi	sp,sp,-48
20406e70:	d606                	sw	ra,44(sp)
20406e72:	d422                	sw	s0,40(sp)
20406e74:	1800                	addi	s0,sp,48
20406e76:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e7a:	fdc42503          	lw	a0,-36(s0)
20406e7e:	da3ff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406e82:	87aa                	mv	a5,a0
20406e84:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20406e88:	fec42783          	lw	a5,-20(s0)
20406e8c:	439c                	lw	a5,0(a5)
20406e8e:	83fd                	srli	a5,a5,0x1f
20406e90:	0ff7f793          	zext.b	a5,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:77
}
20406e94:	853e                	mv	a0,a5
20406e96:	50b2                	lw	ra,44(sp)
20406e98:	5422                	lw	s0,40(sp)
20406e9a:	6145                	addi	sp,sp,48
20406e9c:	8082                	ret

20406e9e <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406e9e:	7179                	addi	sp,sp,-48
20406ea0:	d606                	sw	ra,44(sp)
20406ea2:	d422                	sw	s0,40(sp)
20406ea4:	1800                	addi	s0,sp,48
20406ea6:	fca42e23          	sw	a0,-36(s0)
20406eaa:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406eae:	fdc42503          	lw	a0,-36(s0)
20406eb2:	d6fff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406eb6:	87aa                	mv	a5,a0
20406eb8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20406ebc:	fec42783          	lw	a5,-20(s0)
20406ec0:	07a1                	addi	a5,a5,8
20406ec2:	4398                	lw	a4,0(a5)
20406ec4:	fd842783          	lw	a5,-40(s0)
20406ec8:	01079693          	slli	a3,a5,0x10
20406ecc:	000707b7          	lui	a5,0x70
20406ed0:	8ff5                	and	a5,a5,a3
20406ed2:	fec42683          	lw	a3,-20(s0)
20406ed6:	06a1                	addi	a3,a3,8
20406ed8:	8fd9                	or	a5,a5,a4
20406eda:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20406edc:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:85
}
20406ede:	853e                	mv	a0,a5
20406ee0:	50b2                	lw	ra,44(sp)
20406ee2:	5422                	lw	s0,40(sp)
20406ee4:	6145                	addi	sp,sp,48
20406ee6:	8082                	ret

20406ee8 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20406ee8:	7179                	addi	sp,sp,-48
20406eea:	d606                	sw	ra,44(sp)
20406eec:	d422                	sw	s0,40(sp)
20406eee:	1800                	addi	s0,sp,48
20406ef0:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406ef4:	fdc42503          	lw	a0,-36(s0)
20406ef8:	d29ff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406efc:	87aa                	mv	a5,a0
20406efe:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20406f02:	fec42783          	lw	a5,-20(s0)
20406f06:	07a1                	addi	a5,a5,8
20406f08:	439c                	lw	a5,0(a5)
20406f0a:	83c1                	srli	a5,a5,0x10
20406f0c:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:91
}
20406f0e:	853e                	mv	a0,a5
20406f10:	50b2                	lw	ra,44(sp)
20406f12:	5422                	lw	s0,40(sp)
20406f14:	6145                	addi	sp,sp,48
20406f16:	8082                	ret

20406f18 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406f18:	7179                	addi	sp,sp,-48
20406f1a:	d606                	sw	ra,44(sp)
20406f1c:	d422                	sw	s0,40(sp)
20406f1e:	1800                	addi	s0,sp,48
20406f20:	fca42e23          	sw	a0,-36(s0)
20406f24:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f28:	fdc42503          	lw	a0,-36(s0)
20406f2c:	cf5ff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406f30:	87aa                	mv	a5,a0
20406f32:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20406f36:	fec42783          	lw	a5,-20(s0)
20406f3a:	07b1                	addi	a5,a5,12
20406f3c:	4398                	lw	a4,0(a5)
20406f3e:	fd842783          	lw	a5,-40(s0)
20406f42:	01079693          	slli	a3,a5,0x10
20406f46:	000707b7          	lui	a5,0x70
20406f4a:	8ff5                	and	a5,a5,a3
20406f4c:	fec42683          	lw	a3,-20(s0)
20406f50:	06b1                	addi	a3,a3,12
20406f52:	8fd9                	or	a5,a5,a4
20406f54:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20406f56:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:99
}
20406f58:	853e                	mv	a0,a5
20406f5a:	50b2                	lw	ra,44(sp)
20406f5c:	5422                	lw	s0,40(sp)
20406f5e:	6145                	addi	sp,sp,48
20406f60:	8082                	ret

20406f62 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20406f62:	7179                	addi	sp,sp,-48
20406f64:	d606                	sw	ra,44(sp)
20406f66:	d422                	sw	s0,40(sp)
20406f68:	1800                	addi	s0,sp,48
20406f6a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f6e:	fdc42503          	lw	a0,-36(s0)
20406f72:	cafff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406f76:	87aa                	mv	a5,a0
20406f78:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20406f7c:	fec42783          	lw	a5,-20(s0)
20406f80:	07b1                	addi	a5,a5,12
20406f82:	439c                	lw	a5,0(a5)
20406f84:	83c1                	srli	a5,a5,0x10
20406f86:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:105
}
20406f88:	853e                	mv	a0,a5
20406f8a:	50b2                	lw	ra,44(sp)
20406f8c:	5422                	lw	s0,40(sp)
20406f8e:	6145                	addi	sp,sp,48
20406f90:	8082                	ret

20406f92 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20406f92:	7179                	addi	sp,sp,-48
20406f94:	d606                	sw	ra,44(sp)
20406f96:	d422                	sw	s0,40(sp)
20406f98:	1800                	addi	s0,sp,48
20406f9a:	fca42e23          	sw	a0,-36(s0)
20406f9e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406fa2:	fdc42503          	lw	a0,-36(s0)
20406fa6:	c7bff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406faa:	87aa                	mv	a5,a0
20406fac:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20406fb0:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20406fb2:	fdc42503          	lw	a0,-36(s0)
20406fb6:	eb9ff0ef          	jal	ra,20406e6e <__metal_driver_sifive_uart0_txready>
20406fba:	87aa                	mv	a5,a0
20406fbc:	fbfd                	bnez	a5,20406fb2 <__metal_driver_sifive_uart0_putc+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20406fbe:	fec42783          	lw	a5,-20(s0)
20406fc2:	fd842703          	lw	a4,-40(s0)
20406fc6:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20406fc8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:115
}
20406fca:	853e                	mv	a0,a5
20406fcc:	50b2                	lw	ra,44(sp)
20406fce:	5422                	lw	s0,40(sp)
20406fd0:	6145                	addi	sp,sp,48
20406fd2:	8082                	ret

20406fd4 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20406fd4:	7179                	addi	sp,sp,-48
20406fd6:	d606                	sw	ra,44(sp)
20406fd8:	d422                	sw	s0,40(sp)
20406fda:	1800                	addi	s0,sp,48
20406fdc:	fca42e23          	sw	a0,-36(s0)
20406fe0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406fe4:	fdc42503          	lw	a0,-36(s0)
20406fe8:	c39ff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20406fec:	87aa                	mv	a5,a0
20406fee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20406ff2:	fec42783          	lw	a5,-20(s0)
20406ff6:	0791                	addi	a5,a5,4
20406ff8:	439c                	lw	a5,0(a5)
20406ffa:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20406ffe:	fe842783          	lw	a5,-24(s0)
20407002:	0007d763          	bgez	a5,20407010 <__metal_driver_sifive_uart0_getc+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20407006:	fd842783          	lw	a5,-40(s0)
2040700a:	577d                	li	a4,-1
2040700c:	c398                	sw	a4,0(a5)
2040700e:	a801                	j	2040701e <__metal_driver_sifive_uart0_getc+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20407010:	fe842783          	lw	a5,-24(s0)
20407014:	0ff7f713          	zext.b	a4,a5
20407018:	fd842783          	lw	a5,-40(s0)
2040701c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
2040701e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:129
}
20407020:	853e                	mv	a0,a5
20407022:	50b2                	lw	ra,44(sp)
20407024:	5422                	lw	s0,40(sp)
20407026:	6145                	addi	sp,sp,48
20407028:	8082                	ret

2040702a <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
2040702a:	7179                	addi	sp,sp,-48
2040702c:	d622                	sw	s0,44(sp)
2040702e:	1800                	addi	s0,sp,48
20407030:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20407034:	fdc42783          	lw	a5,-36(s0)
20407038:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
2040703c:	fec42783          	lw	a5,-20(s0)
20407040:	43dc                	lw	a5,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:134
}
20407042:	853e                	mv	a0,a5
20407044:	5432                	lw	s0,44(sp)
20407046:	6145                	addi	sp,sp,48
20407048:	8082                	ret

2040704a <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
2040704a:	7179                	addi	sp,sp,-48
2040704c:	d606                	sw	ra,44(sp)
2040704e:	d422                	sw	s0,40(sp)
20407050:	1800                	addi	s0,sp,48
20407052:	fca42e23          	sw	a0,-36(s0)
20407056:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040705a:	fdc42783          	lw	a5,-36(s0)
2040705e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20407062:	fdc42503          	lw	a0,-36(s0)
20407066:	bbbff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
2040706a:	87aa                	mv	a5,a0
2040706c:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407070:	fdc42503          	lw	a0,-36(s0)
20407074:	c2dff0ef          	jal	ra,20406ca0 <__metal_driver_sifive_uart0_clock>
20407078:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
2040707c:	fd842703          	lw	a4,-40(s0)
20407080:	fec42783          	lw	a5,-20(s0)
20407084:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20407086:	fe442783          	lw	a5,-28(s0)
2040708a:	cbb1                	beqz	a5,204070de <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
2040708c:	fe442783          	lw	a5,-28(s0)
20407090:	439c                	lw	a5,0(a5)
20407092:	439c                	lw	a5,0(a5)
20407094:	fe442503          	lw	a0,-28(s0)
20407098:	9782                	jalr	a5
2040709a:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
2040709e:	fe042703          	lw	a4,-32(s0)
204070a2:	fd842783          	lw	a5,-40(s0)
204070a6:	02f747b3          	div	a5,a4,a5
204070aa:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
204070ae:	fe842783          	lw	a5,-24(s0)
204070b2:	07e1                	addi	a5,a5,24
204070b4:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
204070b6:	fe842783          	lw	a5,-24(s0)
204070ba:	07a1                	addi	a5,a5,8
204070bc:	439c                	lw	a5,0(a5)
204070be:	fe842703          	lw	a4,-24(s0)
204070c2:	0721                	addi	a4,a4,8
204070c4:	0017e793          	ori	a5,a5,1
204070c8:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204070ca:	fe842783          	lw	a5,-24(s0)
204070ce:	07b1                	addi	a5,a5,12
204070d0:	439c                	lw	a5,0(a5)
204070d2:	fe842703          	lw	a4,-24(s0)
204070d6:	0731                	addi	a4,a4,12
204070d8:	0017e793          	ori	a5,a5,1
204070dc:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
204070de:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:151
}
204070e0:	853e                	mv	a0,a5
204070e2:	50b2                	lw	ra,44(sp)
204070e4:	5422                	lw	s0,40(sp)
204070e6:	6145                	addi	sp,sp,48
204070e8:	8082                	ret

204070ea <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
204070ea:	7139                	addi	sp,sp,-64
204070ec:	de06                	sw	ra,60(sp)
204070ee:	dc22                	sw	s0,56(sp)
204070f0:	0080                	addi	s0,sp,64
204070f2:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
204070f6:	fcc42783          	lw	a5,-52(s0)
204070fa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
204070fe:	fcc42503          	lw	a0,-52(s0)
20407102:	b1fff0ef          	jal	ra,20406c20 <__metal_driver_sifive_uart0_control_base>
20407106:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20407108:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2040710c:	fcc42503          	lw	a0,-52(s0)
20407110:	b91ff0ef          	jal	ra,20406ca0 <__metal_driver_sifive_uart0_clock>
20407114:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20407118:	fe842783          	lw	a5,-24(s0)
2040711c:	07a1                	addi	a5,a5,8
2040711e:	4398                	lw	a4,0(a5)
20407120:	fe842783          	lw	a5,-24(s0)
20407124:	07a1                	addi	a5,a5,8
20407126:	86be                	mv	a3,a5
20407128:	fff907b7          	lui	a5,0xfff90
2040712c:	17fd                	addi	a5,a5,-1
2040712e:	8ff9                	and	a5,a5,a4
20407130:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20407132:	fe842783          	lw	a5,-24(s0)
20407136:	07a1                	addi	a5,a5,8
20407138:	4398                	lw	a4,0(a5)
2040713a:	fe842783          	lw	a5,-24(s0)
2040713e:	07a1                	addi	a5,a5,8
20407140:	86be                	mv	a3,a5
20407142:	67c1                	lui	a5,0x10
20407144:	8fd9                	or	a5,a5,a4
20407146:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20407148:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
2040714a:	fe842783          	lw	a5,-24(s0)
2040714e:	07d1                	addi	a5,a5,20
20407150:	439c                	lw	a5,0(a5)
20407152:	8b85                	andi	a5,a5,1
20407154:	dbfd                	beqz	a5,2040714a <pre_rate_change_callback_func+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20407156:	fe842783          	lw	a5,-24(s0)
2040715a:	07a1                	addi	a5,a5,8
2040715c:	439c                	lw	a5,0(a5)
2040715e:	8b89                	andi	a5,a5,2
20407160:	c399                	beqz	a5,20407166 <pre_rate_change_callback_func+0x7c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20407162:	47a5                	li	a5,9
20407164:	a011                	j	20407168 <pre_rate_change_callback_func+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20407166:	47a9                	li	a5,10
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20407168:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
2040716c:	fe442783          	lw	a5,-28(s0)
20407170:	439c                	lw	a5,0(a5)
20407172:	439c                	lw	a5,0(a5)
20407174:	fe442503          	lw	a0,-28(s0)
20407178:	9782                	jalr	a5
2040717a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
2040717e:	fe042703          	lw	a4,-32(s0)
20407182:	fdc42783          	lw	a5,-36(s0)
20407186:	02f707b3          	mul	a5,a4,a5
2040718a:	873e                	mv	a4,a5
2040718c:	fec42783          	lw	a5,-20(s0)
20407190:	43dc                	lw	a5,4(a5)
20407192:	02f757b3          	divu	a5,a4,a5
20407196:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2040719a:	fc042a23          	sw	zero,-44(s0)
2040719e:	a039                	j	204071ac <pre_rate_change_callback_func+0xc2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
204071a0:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
204071a2:	fd442783          	lw	a5,-44(s0)
204071a6:	0785                	addi	a5,a5,1
204071a8:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
204071ac:	fd442783          	lw	a5,-44(s0)
204071b0:	fd842703          	lw	a4,-40(s0)
204071b4:	fee7c6e3          	blt	a5,a4,204071a0 <pre_rate_change_callback_func+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:180
}
204071b8:	0001                	nop
204071ba:	0001                	nop
204071bc:	50f2                	lw	ra,60(sp)
204071be:	5462                	lw	s0,56(sp)
204071c0:	6121                	addi	sp,sp,64
204071c2:	8082                	ret

204071c4 <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
204071c4:	7179                	addi	sp,sp,-48
204071c6:	d606                	sw	ra,44(sp)
204071c8:	d422                	sw	s0,40(sp)
204071ca:	1800                	addi	s0,sp,48
204071cc:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
204071d0:	fdc42783          	lw	a5,-36(s0)
204071d4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204071d8:	fec42703          	lw	a4,-20(s0)
204071dc:	fec42783          	lw	a5,-20(s0)
204071e0:	43dc                	lw	a5,4(a5)
204071e2:	85be                	mv	a1,a5
204071e4:	853a                	mv	a0,a4
204071e6:	d81fb0ef          	jal	ra,20402f66 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:185
}
204071ea:	0001                	nop
204071ec:	50b2                	lw	ra,44(sp)
204071ee:	5422                	lw	s0,40(sp)
204071f0:	6145                	addi	sp,sp,48
204071f2:	8082                	ret

204071f4 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
204071f4:	7139                	addi	sp,sp,-64
204071f6:	de06                	sw	ra,60(sp)
204071f8:	dc22                	sw	s0,56(sp)
204071fa:	0080                	addi	s0,sp,64
204071fc:	fca42623          	sw	a0,-52(s0)
20407200:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20407204:	fcc42783          	lw	a5,-52(s0)
20407208:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2040720c:	fcc42503          	lw	a0,-52(s0)
20407210:	a91ff0ef          	jal	ra,20406ca0 <__metal_driver_sifive_uart0_clock>
20407214:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20407218:	fcc42503          	lw	a0,-52(s0)
2040721c:	ab3ff0ef          	jal	ra,20406cce <__metal_driver_sifive_uart0_pinmux>
20407220:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20407224:	fe842783          	lw	a5,-24(s0)
20407228:	c7b9                	beqz	a5,20407276 <__metal_driver_sifive_uart0_init+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
2040722a:	fec42783          	lw	a5,-20(s0)
2040722e:	20407737          	lui	a4,0x20407
20407232:	0ea70713          	addi	a4,a4,234 # 204070ea <pre_rate_change_callback_func>
20407236:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20407238:	fec42783          	lw	a5,-20(s0)
2040723c:	fcc42703          	lw	a4,-52(s0)
20407240:	c7d8                	sw	a4,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20407242:	fec42783          	lw	a5,-20(s0)
20407246:	07a1                	addi	a5,a5,8
20407248:	85be                	mv	a1,a5
2040724a:	fe842503          	lw	a0,-24(s0)
2040724e:	2241                	jal	204073ce <metal_clock_register_pre_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20407250:	fec42783          	lw	a5,-20(s0)
20407254:	20407737          	lui	a4,0x20407
20407258:	1c470713          	addi	a4,a4,452 # 204071c4 <post_rate_change_callback_func>
2040725c:	cbd8                	sw	a4,20(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
2040725e:	fec42783          	lw	a5,-20(s0)
20407262:	fcc42703          	lw	a4,-52(s0)
20407266:	cf98                	sw	a4,24(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20407268:	fec42783          	lw	a5,-20(s0)
2040726c:	07d1                	addi	a5,a5,20
2040726e:	85be                	mv	a1,a5
20407270:	fe842503          	lw	a0,-24(s0)
20407274:	2271                	jal	20407400 <metal_clock_register_post_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20407276:	fec42783          	lw	a5,-20(s0)
2040727a:	fc842583          	lw	a1,-56(s0)
2040727e:	853e                	mv	a0,a5
20407280:	ce7fb0ef          	jal	ra,20402f66 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20407284:	fe442783          	lw	a5,-28(s0)
20407288:	cb95                	beqz	a5,204072bc <__metal_driver_sifive_uart0_init+0xc8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
2040728a:	fcc42503          	lw	a0,-52(s0)
2040728e:	a6bff0ef          	jal	ra,20406cf8 <__metal_driver_sifive_uart0_pinmux_output_selector>
20407292:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20407294:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20407298:	fcc42503          	lw	a0,-52(s0)
2040729c:	a85ff0ef          	jal	ra,20406d20 <__metal_driver_sifive_uart0_pinmux_source_selector>
204072a0:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
204072a2:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
204072a6:	fe442783          	lw	a5,-28(s0)
204072aa:	439c                	lw	a5,0(a5)
204072ac:	53dc                	lw	a5,36(a5)
204072ae:	fdc42603          	lw	a2,-36(s0)
204072b2:	fe042583          	lw	a1,-32(s0)
204072b6:	fe442503          	lw	a0,-28(s0)
204072ba:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
204072bc:	0001                	nop
204072be:	50f2                	lw	ra,60(sp)
204072c0:	5462                	lw	s0,56(sp)
204072c2:	6121                	addi	sp,sp,64
204072c4:	8082                	ret

204072c6 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
204072c6:	7179                	addi	sp,sp,-48
204072c8:	d606                	sw	ra,44(sp)
204072ca:	d422                	sw	s0,40(sp)
204072cc:	1800                	addi	s0,sp,48
204072ce:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
204072d2:	fdc42783          	lw	a5,-36(s0)
204072d6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:52
    while (current) {
204072da:	a831                	j	204072f6 <_metal_clock_call_all_callbacks+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
204072dc:	fec42783          	lw	a5,-20(s0)
204072e0:	4398                	lw	a4,0(a5)
204072e2:	fec42783          	lw	a5,-20(s0)
204072e6:	43dc                	lw	a5,4(a5)
204072e8:	853e                	mv	a0,a5
204072ea:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:54
        current = current->_next;
204072ec:	fec42783          	lw	a5,-20(s0)
204072f0:	479c                	lw	a5,8(a5)
204072f2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:52
    while (current) {
204072f6:	fec42783          	lw	a5,-20(s0)
204072fa:	f3ed                	bnez	a5,204072dc <_metal_clock_call_all_callbacks+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:56
    }
}
204072fc:	0001                	nop
204072fe:	0001                	nop
20407300:	50b2                	lw	ra,44(sp)
20407302:	5422                	lw	s0,40(sp)
20407304:	6145                	addi	sp,sp,48
20407306:	8082                	ret

20407308 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20407308:	7179                	addi	sp,sp,-48
2040730a:	d622                	sw	s0,44(sp)
2040730c:	1800                	addi	s0,sp,48
2040730e:	fca42e23          	sw	a0,-36(s0)
20407312:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20407316:	fd842783          	lw	a5,-40(s0)
2040731a:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:66

    if (!list) {
2040731e:	fdc42783          	lw	a5,-36(s0)
20407322:	e781                	bnez	a5,2040732a <_metal_clock_append_to_callbacks+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:67
        return cb;
20407324:	fd842783          	lw	a5,-40(s0)
20407328:	a035                	j	20407354 <_metal_clock_append_to_callbacks+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
2040732a:	fdc42783          	lw	a5,-36(s0)
2040732e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20407332:	a031                	j	2040733e <_metal_clock_append_to_callbacks+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:73
        current = current->_next;
20407334:	fec42783          	lw	a5,-20(s0)
20407338:	479c                	lw	a5,8(a5)
2040733a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
2040733e:	fec42783          	lw	a5,-20(s0)
20407342:	479c                	lw	a5,8(a5)
20407344:	fbe5                	bnez	a5,20407334 <_metal_clock_append_to_callbacks+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20407346:	fec42783          	lw	a5,-20(s0)
2040734a:	fd842703          	lw	a4,-40(s0)
2040734e:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:78

    return list;
20407350:	fdc42783          	lw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:79
}
20407354:	853e                	mv	a0,a5
20407356:	5432                	lw	s0,44(sp)
20407358:	6145                	addi	sp,sp,48
2040735a:	8082                	ret

2040735c <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
2040735c:	1101                	addi	sp,sp,-32
2040735e:	ce06                	sw	ra,28(sp)
20407360:	cc22                	sw	s0,24(sp)
20407362:	1000                	addi	s0,sp,32
20407364:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20407368:	fec42783          	lw	a5,-20(s0)
2040736c:	439c                	lw	a5,0(a5)
2040736e:	439c                	lw	a5,0(a5)
20407370:	fec42503          	lw	a0,-20(s0)
20407374:	9782                	jalr	a5
20407376:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:112
}
20407378:	853e                	mv	a0,a5
2040737a:	40f2                	lw	ra,28(sp)
2040737c:	4462                	lw	s0,24(sp)
2040737e:	6105                	addi	sp,sp,32
20407380:	8082                	ret

20407382 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20407382:	7179                	addi	sp,sp,-48
20407384:	d606                	sw	ra,44(sp)
20407386:	d422                	sw	s0,40(sp)
20407388:	1800                	addi	s0,sp,48
2040738a:	fca42e23          	sw	a0,-36(s0)
2040738e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20407392:	fdc42783          	lw	a5,-36(s0)
20407396:	43dc                	lw	a5,4(a5)
20407398:	853e                	mv	a0,a5
2040739a:	f2dff0ef          	jal	ra,204072c6 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
2040739e:	fdc42783          	lw	a5,-36(s0)
204073a2:	439c                	lw	a5,0(a5)
204073a4:	43dc                	lw	a5,4(a5)
204073a6:	fd842583          	lw	a1,-40(s0)
204073aa:	fdc42503          	lw	a0,-36(s0)
204073ae:	9782                	jalr	a5
204073b0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
204073b4:	fdc42783          	lw	a5,-36(s0)
204073b8:	479c                	lw	a5,8(a5)
204073ba:	853e                	mv	a0,a5
204073bc:	f0bff0ef          	jal	ra,204072c6 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:135

    return out;
204073c0:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:136
}
204073c4:	853e                	mv	a0,a5
204073c6:	50b2                	lw	ra,44(sp)
204073c8:	5422                	lw	s0,40(sp)
204073ca:	6145                	addi	sp,sp,48
204073cc:	8082                	ret

204073ce <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
204073ce:	1101                	addi	sp,sp,-32
204073d0:	ce06                	sw	ra,28(sp)
204073d2:	cc22                	sw	s0,24(sp)
204073d4:	1000                	addi	s0,sp,32
204073d6:	fea42623          	sw	a0,-20(s0)
204073da:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
204073de:	fec42783          	lw	a5,-20(s0)
204073e2:	43dc                	lw	a5,4(a5)
204073e4:	fe842583          	lw	a1,-24(s0)
204073e8:	853e                	mv	a0,a5
204073ea:	f1fff0ef          	jal	ra,20407308 <_metal_clock_append_to_callbacks>
204073ee:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
204073f0:	fec42783          	lw	a5,-20(s0)
204073f4:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:149
}
204073f6:	0001                	nop
204073f8:	40f2                	lw	ra,28(sp)
204073fa:	4462                	lw	s0,24(sp)
204073fc:	6105                	addi	sp,sp,32
204073fe:	8082                	ret

20407400 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20407400:	1101                	addi	sp,sp,-32
20407402:	ce06                	sw	ra,28(sp)
20407404:	cc22                	sw	s0,24(sp)
20407406:	1000                	addi	s0,sp,32
20407408:	fea42623          	sw	a0,-20(s0)
2040740c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20407410:	fec42783          	lw	a5,-20(s0)
20407414:	479c                	lw	a5,8(a5)
20407416:	fe842583          	lw	a1,-24(s0)
2040741a:	853e                	mv	a0,a5
2040741c:	eedff0ef          	jal	ra,20407308 <_metal_clock_append_to_callbacks>
20407420:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20407422:	fec42783          	lw	a5,-20(s0)
20407426:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:162
}
20407428:	0001                	nop
2040742a:	40f2                	lw	ra,28(sp)
2040742c:	4462                	lw	s0,24(sp)
2040742e:	6105                	addi	sp,sp,32
20407430:	8082                	ret

20407432 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20407432:	1101                	addi	sp,sp,-32
20407434:	ce06                	sw	ra,28(sp)
20407436:	cc22                	sw	s0,24(sp)
20407438:	1000                	addi	s0,sp,32
2040743a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
2040743e:	fec42783          	lw	a5,-20(s0)
20407442:	439c                	lw	a5,0(a5)
20407444:	57dc                	lw	a5,44(a5)
20407446:	fec42503          	lw	a0,-20(s0)
2040744a:	9782                	jalr	a5
2040744c:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:226
}
2040744e:	853e                	mv	a0,a5
20407450:	40f2                	lw	ra,28(sp)
20407452:	4462                	lw	s0,24(sp)
20407454:	6105                	addi	sp,sp,32
20407456:	8082                	ret

20407458 <metal_cpu_get>:
metal_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20407458:	1101                	addi	sp,sp,-32
2040745a:	ce22                	sw	s0,28(sp)
2040745c:	1000                	addi	s0,sp,32
2040745e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20407462:	fec42783          	lw	a5,-20(s0)
20407466:	eb99                	bnez	a5,2040747c <metal_cpu_get+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20407468:	800007b7          	lui	a5,0x80000
2040746c:	fec42703          	lw	a4,-20(s0)
20407470:	070a                	slli	a4,a4,0x2
20407472:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20407476:	97ba                	add	a5,a5,a4
20407478:	439c                	lw	a5,0(a5)
2040747a:	a011                	j	2040747e <metal_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:11
    }
    return NULL;
2040747c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:12
}
2040747e:	853e                	mv	a0,a5
20407480:	4472                	lw	s0,28(sp)
20407482:	6105                	addi	sp,sp,32
20407484:	8082                	ret

20407486 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20407486:	1101                	addi	sp,sp,-32
20407488:	ce22                	sw	s0,28(sp)
2040748a:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
2040748c:	f14027f3          	csrr	a5,mhartid
20407490:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:18
    return mhartid;
20407494:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:20
#endif
}
20407498:	853e                	mv	a0,a5
2040749a:	4472                	lw	s0,28(sp)
2040749c:	6105                	addi	sp,sp,32
2040749e:	8082                	ret

204074a0 <__metal_shutdown_exit>:
__metal_shutdown_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
204074a0:	1101                	addi	sp,sp,-32
204074a2:	ce06                	sw	ra,28(sp)
204074a4:	cc22                	sw	s0,24(sp)
204074a6:	1000                	addi	s0,sp,32
204074a8:	fea42623          	sw	a0,-20(s0)
204074ac:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
204074b0:	fec42783          	lw	a5,-20(s0)
204074b4:	439c                	lw	a5,0(a5)
204074b6:	439c                	lw	a5,0(a5)
204074b8:	fe842583          	lw	a1,-24(s0)
204074bc:	fec42503          	lw	a0,-20(s0)
204074c0:	9782                	jalr	a5

204074c2 <metal_shutdown>:
metal_shutdown():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
204074c2:	1101                	addi	sp,sp,-32
204074c4:	ce06                	sw	ra,28(sp)
204074c6:	cc22                	sw	s0,24(sp)
204074c8:	1000                	addi	s0,sp,32
204074ca:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
204074ce:	fec42583          	lw	a1,-20(s0)
204074d2:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
204074d6:	37e9                	jal	204074a0 <__metal_shutdown_exit>
	...

20407500 <__metal_vector_table>:
IRQ_0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407500:	c02fc06f          	j	20403902 <metal_interrupt_vector_handler>

20407504 <IRQ_1>:
IRQ_1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407504:	bfefc06f          	j	20403902 <metal_interrupt_vector_handler>

20407508 <IRQ_2>:
IRQ_2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407508:	bfafc06f          	j	20403902 <metal_interrupt_vector_handler>

2040750c <IRQ_3>:
IRQ_3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040750c:	c24fc06f          	j	20403930 <metal_software_interrupt_vector_handler>

20407510 <IRQ_4>:
IRQ_4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407510:	bf2fc06f          	j	20403902 <metal_interrupt_vector_handler>

20407514 <IRQ_5>:
IRQ_5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407514:	beefc06f          	j	20403902 <metal_interrupt_vector_handler>

20407518 <IRQ_6>:
IRQ_6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407518:	beafc06f          	j	20403902 <metal_interrupt_vector_handler>

2040751c <IRQ_7>:
IRQ_7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040751c:	d0efc06f          	j	20403a2a <metal_timer_interrupt_vector_handler>

20407520 <IRQ_8>:
IRQ_8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20407520:	be2fc06f          	j	20403902 <metal_interrupt_vector_handler>

20407524 <IRQ_9>:
IRQ_9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20407524:	bdefc06f          	j	20403902 <metal_interrupt_vector_handler>

20407528 <IRQ_10>:
IRQ_10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20407528:	bdafc06f          	j	20403902 <metal_interrupt_vector_handler>

2040752c <IRQ_11>:
IRQ_11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2040752c:	bd6fc06f          	j	20403902 <metal_interrupt_vector_handler>

20407530 <IRQ_12>:
IRQ_12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20407530:	bd2fc06f          	j	20403902 <metal_interrupt_vector_handler>

20407534 <IRQ_13>:
IRQ_13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20407534:	bcefc06f          	j	20403902 <metal_interrupt_vector_handler>

20407538 <IRQ_14>:
IRQ_14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20407538:	bcafc06f          	j	20403902 <metal_interrupt_vector_handler>

2040753c <IRQ_15>:
IRQ_15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2040753c:	bc6fc06f          	j	20403902 <metal_interrupt_vector_handler>

20407540 <IRQ_LC0>:
IRQ_LC0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20407540:	83bfc06f          	j	20403d7a <metal_lc0_interrupt_vector_handler>

20407544 <IRQ_LC1>:
IRQ_LC1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20407544:	8cdfc06f          	j	20403e10 <metal_lc1_interrupt_vector_handler>

20407548 <IRQ_LC2>:
IRQ_LC2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20407548:	95ffc06f          	j	20403ea6 <metal_lc2_interrupt_vector_handler>

2040754c <IRQ_LC3>:
IRQ_LC3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2040754c:	9f1fc06f          	j	20403f3c <metal_lc3_interrupt_vector_handler>

20407550 <IRQ_LC4>:
IRQ_LC4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20407550:	a83fc06f          	j	20403fd2 <metal_lc4_interrupt_vector_handler>

20407554 <IRQ_LC5>:
IRQ_LC5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20407554:	b15fc06f          	j	20404068 <metal_lc5_interrupt_vector_handler>

20407558 <IRQ_LC6>:
IRQ_LC6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20407558:	ba7fc06f          	j	204040fe <metal_lc6_interrupt_vector_handler>

2040755c <IRQ_LC7>:
IRQ_LC7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2040755c:	c39fc06f          	j	20404194 <metal_lc7_interrupt_vector_handler>

20407560 <IRQ_LC8>:
IRQ_LC8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20407560:	ccbfc06f          	j	2040422a <metal_lc8_interrupt_vector_handler>

20407564 <IRQ_LC9>:
IRQ_LC9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20407564:	d5dfc06f          	j	204042c0 <metal_lc9_interrupt_vector_handler>

20407568 <IRQ_LC10>:
IRQ_LC10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20407568:	deffc06f          	j	20404356 <metal_lc10_interrupt_vector_handler>

2040756c <IRQ_LC11>:
IRQ_LC11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2040756c:	e81fc06f          	j	204043ec <metal_lc11_interrupt_vector_handler>

20407570 <IRQ_LC12>:
IRQ_LC12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20407570:	f13fc06f          	j	20404482 <metal_lc12_interrupt_vector_handler>

20407574 <IRQ_LC13>:
IRQ_LC13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20407574:	fa5fc06f          	j	20404518 <metal_lc13_interrupt_vector_handler>

20407578 <IRQ_LC14>:
IRQ_LC14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20407578:	836fd06f          	j	204045ae <metal_lc14_interrupt_vector_handler>

2040757c <IRQ_LC15>:
IRQ_LC15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2040757c:	8c8fd06f          	j	20404644 <metal_lc15_interrupt_vector_handler>

20407580 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:180
{
20407580:	1101                	addi	sp,sp,-32
20407582:	ce22                	sw	s0,28(sp)
20407584:	1000                	addi	s0,sp,32
20407586:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040758a:	fec42703          	lw	a4,-20(s0)
2040758e:	800007b7          	lui	a5,0x80000
20407592:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdf40>
20407596:	00f71763          	bne	a4,a5,204075a4 <__metal_driver_fixed_clock_rate+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040759a:	00f427b7          	lui	a5,0xf42
2040759e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
204075a2:	a825                	j	204075da <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
204075a4:	fec42703          	lw	a4,-20(s0)
204075a8:	800007b7          	lui	a5,0x80000
204075ac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdf4c>
204075b0:	00f71763          	bne	a4,a5,204075be <__metal_driver_fixed_clock_rate+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
204075b4:	044aa7b7          	lui	a5,0x44aa
204075b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
204075bc:	a839                	j	204075da <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
204075be:	fec42703          	lw	a4,-20(s0)
204075c2:	800007b7          	lui	a5,0x80000
204075c6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffdf58>
204075ca:	00f71763          	bne	a4,a5,204075d8 <__metal_driver_fixed_clock_rate+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
204075ce:	01e857b7          	lui	a5,0x1e85
204075d2:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
204075d6:	a011                	j	204075da <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:191
		return 0;
204075d8:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:193
}
204075da:	853e                	mv	a0,a5
204075dc:	4472                	lw	s0,28(sp)
204075de:	6105                	addi	sp,sp,32
204075e0:	8082                	ret

204075e2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
204075e2:	1101                	addi	sp,sp,-32
204075e4:	ce06                	sw	ra,28(sp)
204075e6:	cc22                	sw	s0,24(sp)
204075e8:	1000                	addi	s0,sp,32
204075ea:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
204075ee:	fec42503          	lw	a0,-20(s0)
204075f2:	f8fff0ef          	jal	ra,20407580 <__metal_driver_fixed_clock_rate>
204075f6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:14
}
204075f8:	853e                	mv	a0,a5
204075fa:	40f2                	lw	ra,28(sp)
204075fc:	4462                	lw	s0,24(sp)
204075fe:	6105                	addi	sp,sp,32
20407600:	8082                	ret

20407602 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407602:	1101                	addi	sp,sp,-32
20407604:	ce06                	sw	ra,28(sp)
20407606:	cc22                	sw	s0,24(sp)
20407608:	1000                	addi	s0,sp,32
2040760a:	fea42623          	sw	a0,-20(s0)
2040760e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407612:	fec42503          	lw	a0,-20(s0)
20407616:	fcdff0ef          	jal	ra,204075e2 <__metal_driver_fixed_clock_get_rate_hz>
2040761a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:19
}
2040761c:	853e                	mv	a0,a5
2040761e:	40f2                	lw	ra,28(sp)
20407620:	4462                	lw	s0,24(sp)
20407622:	6105                	addi	sp,sp,32
20407624:	8082                	ret

20407626 <_exit>:
_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20407626:	1101                	addi	sp,sp,-32
20407628:	ce06                	sw	ra,28(sp)
2040762a:	cc22                	sw	s0,24(sp)
2040762c:	1000                	addi	s0,sp,32
2040762e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20407632:	fec42503          	lw	a0,-20(s0)
20407636:	e8dff0ef          	jal	ra,204074c2 <metal_shutdown>
