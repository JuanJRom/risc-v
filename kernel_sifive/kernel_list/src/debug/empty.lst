
C:/wsFreedomStudio/kernel_list/src/debug/empty.elf:     file format elf32-littleriscv
C:/wsFreedomStudio/kernel_list/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00001018 memsz 0x00001018 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x204075c0 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00001948 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002080 vaddr 0x20401080 paddr 0x20401080 align 2**12
         filesz 0x0000653a memsz 0x0000653a flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e0  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000cb0  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             0000653a  20401080  20401080  00002080  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  204075c0  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000d40  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  80001510  80001510  000097c8  2**4  ALLOC
  8 .heap             00000800  80001910  80001910  000097c8  2**3  ALLOC
  9 .debug_info       0001f56c  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002e1e  00000000  00000000  00028d34  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000ca8  00000000  00000000  0002bb58  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000a68  00000000  00000000  0002c800  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000a5c7  00000000  00000000  0002d268  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004957  00000000  00000000  0003782f  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003c186  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003c1b6  2**0  CONTENTS, READONLY
 17 .debug_frame      0000319c  00000000  00000000  0003c1e8  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401080 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80001510 l    d  .stack	00000000 .stack
80001910 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c4 l     F .init	00000000 __metal_memory_scrub
20400132 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400244 l       .init	00000000 _skip_init
204004a4 l       .rodata	00000000 argv
204004a8 l       .rodata	00000000 envp
204004ac l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20405b2e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20405b48 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20405b62 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20405b78 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20405b8c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20405b9e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20405bae l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20405bc4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20405bd6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
204006a8 l     O .rodata	00000880 pll_configs
20405bec l     F .text	0000004e get_pll_config_freq
20405e5a l     F .text	000000ac find_closest_config
20405f06 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 trap.c
00000000 l    df *ABS*	00000000 findfp.c
20401d4e l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
2040211a l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20402f20 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20402f4a l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20402f72 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20402fae l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2040310e l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20403654 l     F .text	00000024 __metal_driver_cpu_hartid
20403678 l     F .text	0000002a __metal_driver_cpu_timebase
204036a2 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
204036cc l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20405074 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040509e l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
204050c6 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
204050ee l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20405116 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20405138 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20406294 l     F .text	00000026 __metal_driver_sifive_gpio0_base
204062ba l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
204062e4 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406bb8 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20406be2 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20406c10 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20406c38 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20406c66 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20406c90 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406cb8 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20407082 l     F .text	000000da pre_rate_change_callback_func
2040715c l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
2040593e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20405958 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
2040596e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405982 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20405a3e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20405a58 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20405a6e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405a82 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2040621c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20406b48 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407500 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 kernel.c
20401080 l     F .text	0000001a r_mie
2040109a l     F .text	0000001a w_mie
204010b4 l     F .text	0000001a w_mtvec
204010ce l     F .text	0000002e intr_on
204010fc l     F .text	00000026 intr_off
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007f4 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007ec l     O .bss	00000004 init_done.1
800007f0 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20407480 l       .text	00000000 IRQ_0
20407484 l       .text	00000000 IRQ_1
20407488 l       .text	00000000 IRQ_2
2040748c l       .text	00000000 IRQ_3
20407490 l       .text	00000000 IRQ_4
20407494 l       .text	00000000 IRQ_5
20407498 l       .text	00000000 IRQ_6
2040749c l       .text	00000000 IRQ_7
204074a0 l       .text	00000000 IRQ_8
204074a4 l       .text	00000000 IRQ_9
204074a8 l       .text	00000000 IRQ_10
204074ac l       .text	00000000 IRQ_11
204074b0 l       .text	00000000 IRQ_12
204074b4 l       .text	00000000 IRQ_13
204074b8 l       .text	00000000 IRQ_14
204074bc l       .text	00000000 IRQ_15
204074c0 l       .text	00000000 IRQ_LC0
204074c4 l       .text	00000000 IRQ_LC1
204074c8 l       .text	00000000 IRQ_LC2
204074cc l       .text	00000000 IRQ_LC3
204074d0 l       .text	00000000 IRQ_LC4
204074d4 l       .text	00000000 IRQ_LC5
204074d8 l       .text	00000000 IRQ_LC6
204074dc l       .text	00000000 IRQ_LC7
204074e0 l       .text	00000000 IRQ_LC8
204074e4 l       .text	00000000 IRQ_LC9
204074e8 l       .text	00000000 IRQ_LC10
204074ec l       .text	00000000 IRQ_LC11
204074f0 l       .text	00000000 IRQ_LC12
204074f4 l       .text	00000000 IRQ_LC13
204074f8 l       .text	00000000 IRQ_LC14
204074fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
20400fb0 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20402564 g     F .text	0000002e _isatty_r
20403f52  w    F .text	00000096 metal_lc4_interrupt_vector_handler
204018c4 g     F .text	000000da _puts_r
20402592 g     F .text	00000032 _lseek_r
204072f4 g     F .text	00000026 metal_clock_get_rate_hz
20406fe2 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
204032ea g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20406e36 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
20403ebc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20401432 g     F .text	0000005a insertFirst
20404764 g     F .text	00000058 __metal_valid_interrupt_id
20401886 g     F .text	0000003e printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20404be4 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
204072a0 g     F .text	00000054 _metal_clock_append_to_callbacks
20405192 g     F .text	00000046 __metal_plic0_complete_interrupt
204049aa g     F .text	000001e2 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20402498 g     F .text	00000036 __sseek
20401e06 g     F .text	0000006a __sinit
204019da g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
20401dc0 g     F .text	00000046 __sfmoreglue
20402118 g     F .text	00000002 __malloc_unlock
204073f0 g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
20406722 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
204004b8 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80001508 g       .bss	00000000 metal_segment_bss_target_end
20402fde g     F .text	0000009a __metal_clint0_mtime_get
20404fe8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20401270 g     F .text	00000020 system_init
20406efa g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
204064d8 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
800007d0 g     O .bss	00000004 count2
20406b6e g     F .text	0000004a __metal_driver_sifive_test0_exit
20402b4e g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20406e06 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20406d94 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400146 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
20403078 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20402534 g     F .text	00000030 _fstat_r
20406972 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800007e4 g     O .bss	00000004 errno
20405cde g     F .text	0000017c __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20407366 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20404240  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000d0  w    F .init	00000000 __metal_before_start
20402e4a  w    F .text	00000014 metal_init_run
20400644 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400600 g     O .rodata	00000044 __metal_driver_vtable_cpu
20402ef2 g     F .text	0000002e metal_uart_set_baud_rate
2040718c g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20404c70 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400f28 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80001910 g       .heap	00000000 metal_segment_heap_target_start
20401db6 g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
204041aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
204060b6 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
204058a2 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
2040199e g     F .text	0000000c puts
20404498  w    F .text	00000096 metal_lc13_interrupt_vector_handler
2040385e g     F .text	00000018 __metal_default_exception_handler
204016f6 g     F .text	0000000c malloc
204029ae g     F .text	00000026 _fstat
20403620 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20404c00 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
204015fe g     F .text	00000042 handle_trap
204036f0 g     F .text	00000030 __metal_driver_cpu_get
2040059c g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20403752 g     F .text	00000018 __metal_interrupt_global_disable
20405916 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20404114  w    F .text	00000096 metal_lc7_interrupt_vector_handler
204042d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
204019aa g     F .text	00000030 _sbrk_r
204056c2 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20404878 g     F .text	0000004e __metal_exception_register
2040125a g     F .text	00000016 osKernelLaunch
20402d5a g     F .text	00000078 metal_init
2040295a g     F .text	00000032 _read_r
20404e02 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
204065ba g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
204014e0 g     F .text	0000007c handle_interrupt
80000000 g       .rodata	00000000 metal_segment_lim_target_end
2040394e g     F .text	00000068 __metal_default_sw_handler
20407398 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20406ce2 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
204029d4 g     F .text	00000020 _isatty
20406680 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20406d22 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20401010 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20400ff0 g     O .rodata	00000004 _global_impure_ptr
204012da g     F .text	00000040 osSchedulerRoundRobin
204039b6  w    F .text	00000092 metal_timer_interrupt_vector_handler
20402bb8 g     F .text	0000005e __libc_init_array
204065fa g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2040436c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20405b0c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20404b8c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20402a48 g     F .text	0000008e _sbrk
20406574 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2040725e g     F .text	00000042 _metal_clock_call_all_callbacks
20401654 g     F .text	00000000 switch_to
204002be g     F .init	00000002 _init
204037b4 g     F .text	0000001a __metal_interrupt_timer_disable
2040676c g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20404ec0 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400f74 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20406d5c g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
204066c0 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402b82 g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
20406afa g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20402dd2 g     F .text	00000078 metal_fini
20404e4a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20405054 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20403806 g     F .text	0000002c __metal_interrupt_local_enable
204035ec g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20402e72 g     F .text	00000026 metal_tty_putc
20401290 g     F .text	0000004a timer_init
20405392 g     F .text	00000018 __metal_plic0_default_handler
20402ad6  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20405712 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403a48 g     F .text	00000016 __metal_default_beu_handler
204003b0 g     O .rodata	00000020 __sf_fake_stderr
204037ea g     F .text	0000001c __metal_interrupt_external_disable
20406d02 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20404c54 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
800007d8 g     O .bss	00000004 head
204048c6 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
20402144 g     F .text	00000042 __sfputs_r
20404fa2 g     F .text	00000046 __metal_driver_cpu_exception_register
2040376a g     F .text	00000018 __metal_interrupt_software_enable
20403d90  w    F .text	00000096 metal_lc1_interrupt_vector_handler
204025c4 g     F .text	0000001a memchr
2040133e g     F .text	0000001c task1
20401702 g     F .text	000000a6 _free_r
800007e8 g     O .bss	00000004 _global_atexit
20405258 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
2040465a g     F .text	00000058 __metal_controller_interrupt_vector_mode
20402c92 g     F .text	000000c8 __call_exitprocs
80001910 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400154 g     F .init	00000000 _start
2040135a g     F .text	0000001c task2
204013d4 g     F .text	0000005e printList
20405998 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
204029f4 g     F .text	0000002a _lseek
20404f82 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20405016 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
204037ce g     F .text	0000001c __metal_interrupt_external_enable
20402c16 g     F .text	0000007c __register_exitproc
20406f2a g     F .text	00000042 __metal_driver_sifive_uart0_putc
80000880 g     O .bss	00000004 current_ptr
20405456 g     F .text	0000015a __metal_driver_riscv_plic0_init
20405672 g     F .text	00000050 __metal_driver_riscv_plic0_enable
20406548 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2040407e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20403720 g     F .text	0000001a __metal_myhart_id
20406b1a g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
2040148c g     F .text	00000054 find
204038bc  w    F .text	00000092 metal_software_interrupt_vector_handler
20404bb8 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20402506 g     F .text	0000002e _close_r
20406fc2 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
2040131a g     F .text	00000024 task
204031cc g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401a9a g     F .text	0000010a __swsetup_r
20401e70 g     F .text	0000009c __sfp
2040731a g     F .text	0000004c metal_clock_set_rate_hz
2040241a g     F .text	00000030 __sread
800007d4 g     O .bss	00000004 count3
20406498 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002c0  w    F .init	00000000 secondary_main
2040388e  w    F .text	0000002e metal_interrupt_vector_handler
20402116 g     F .text	00000002 __malloc_lock
20406dce g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401cea g     F .text	00000064 _fflush_r
2040521e g     F .text	0000003a __metal_plic0_get_threshold
2040622e g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204003d0 g     O .rodata	00000020 __sf_fake_stdin
204047bc g     F .text	000000bc __metal_local_interrupt_enable
204034ac g     F .text	00000140 __metal_driver_riscv_clint0_command_request
2040206e g     F .text	000000a8 memset
20403fe8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20401392 g     F .text	00000042 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20406eb0 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20400ff4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20404e5e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20404f22 g     F .text	00000060 __metal_driver_cpu_get_msip
2040745a g     F .text	00000018 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20405034 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20405156 g     F .text	0000003c __metal_plic0_claim_interrupt
20406e80 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
204024ce g     F .text	00000006 __sclose
20404402  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008e g     F .init	00000000 metal_mem_scrub
20401640 g     F .text	00000000 osSchedulerLaunch
204017a8 g     F .text	000000de _malloc_r
204032ce g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000884 g     O .bss	00000004 temp_ptr
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20404ce0 g     F .text	00000046 __metal_driver_cpu_timebase_get
20405806 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
2040741e g     F .text	0000001a metal_cpu_get_current_hartid
20405a98 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407480 g       .text	00000000 __metal_vector_table
20401018 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
800007c8 g     O .bss	00000004 count
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002be g     F .init	00000002 _fini
20401886 g     F .text	0000003e iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
204052ba g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
2040373a g     F .text	00000018 __metal_interrupt_global_enable
20402b44 g     F .text	0000000a atexit
204024d4 g     F .text	00000032 _write_r
800007cc g     O .bss	00000004 count1
2040379a g     F .text	0000001a __metal_interrupt_timer_enable
20406f6c g     F .text	00000056 __metal_driver_sifive_uart0_getc
204033f4 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
204025de g     F .text	0000010c _printf_common
800007a0 g     O .data	00000004 _impure_ptr
20404d8c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401ba4 g     F .text	00000146 __sflush_r
80000888 g     O .bss	00000c80 PCB_STACK
20407438 g     F .text	00000022 __metal_shutdown_exit
20405742 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20405c3a g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20401154 g     F .text	00000106 osKernelAddTask
2040625c g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20407562 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20403342 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
2040100c g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
2040155c g     F .text	000000a2 handle_exception
204075c0 g       *ABS*	00000000 metal_segment_data_source_start
20400138 g       .init	00000000 early_trap_vector
80002110 g       .heap	00000000 metal_segment_heap_target_end
204046b2 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20401f76 g     F .text	0000005a __swhatbuf_r
2040663a g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20403a5e g     F .text	00000066 __metal_default_timer_handler
20402ad6 g     F .text	0000006e _write
204053aa g     F .text	000000ac __metal_plic0_handler
20403e26  w    F .text	00000096 metal_lc2_interrupt_vector_handler
204045c4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
204073ca g     F .text	00000026 metal_cpu_interrupt_controller
20401122 g     F .text	00000032 osKernelStackInit
800007c0 g     O .data	00000004 __metal_dt_test_100000
2040244a g     F .text	0000004e __swrite
20402b58 g     F .text	0000002a exit
20402186 g     F .text	00000294 _vfiprintf_r
20401f0c g     F .text	0000006a _fwalk_reent
20407582 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20401018 g       *ABS*	00000000 metal_segment_lim_source_start
204003f0 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
20403876 g     F .text	00000018 __metal_default_interrupt_handler
20402ec4 g     F .text	0000002e metal_uart_putc
20402a1e g     F .text	0000002a _read
20402e5e  w    F .text	00000014 metal_fini_run
2040651e g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403b00 g     F .text	00000180 __metal_exception_handler
20403cfa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
204075a6 g     F .text	00000014 _exit
20404d26 g     F .text	00000066 __metal_driver_cpu_mtime_get
20401fd0 g     F .text	0000009e __smakebuf_r
204032a6 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
204026ea g     F .text	00000270 _printf_i
800007e0 g     O .bss	00000004 __malloc_sbrk_start
2040452e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20400ffc g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20403144 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007dc g     O .bss	00000004 __malloc_free_list
20401376 g     F .text	0000001c task3
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20402186 g     F .text	00000294 _vfprintf_r
20404e1c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
204052ee g     F .text	000000a4 __metal_plic0_enable
2040008c  w      .init	00000000 __register_frame_info
20405a1c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20404e30 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20403832 g     F .text	0000002c __metal_interrupt_local_disable
20403782 g     F .text	00000018 __metal_interrupt_software_disable
20402e98 g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
204051d8 g     F .text	00000046 __metal_plic0_set_threshold
2040576a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2040298c g     F .text	00000022 _close
20401004 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
204055b0 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11828293          	addi	t0,t0,280 # 20400138 <early_trap_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011663          	bnez	sp,2040003c <_enter+0x3c>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	5fc02117          	auipc	sp,0x5fc02
20400038:	8dc10113          	addi	sp,sp,-1828 # 80001910 <_sp>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2040003c:	f1402573          	csrr	a0,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:60
    li t0, 0
20400040:	4281                	li	t0,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400042:	40000313          	li	t1,1024
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400046:	ff017113          	andi	sp,sp,-16
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2040004a:	00a28563          	beq	t0,a0,20400054 <_enter+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004e:	911a                	add	sp,sp,t1
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400050:	0285                	addi	t0,t0,1
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:67
    j 1b
20400052:	bfd5                	j	20400046 <_enter+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400054:	00000097          	auipc	ra,0x0
20400058:	07c08093          	addi	ra,ra,124 # 204000d0 <__metal_before_start>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:77
    beqz ra, 1f
2040005c:	00008363          	beqz	ra,20400062 <_enter+0x62>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:78
    jalr ra
20400060:	9082                	jalr	ra
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400062:	f1402573          	csrr	a0,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:85
    li a1, 0
20400066:	4581                	li	a1,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:86
    li a2, 0
20400068:	4601                	li	a2,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:87
    call _start
2040006a:	20ed                	jal	20400154 <_start>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2040006c:	00000093          	li	ra,0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:93
    beqz ra, 1f
20400070:	00008363          	beqz	ra,20400076 <_enter+0x76>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:94
    jalr ra
20400074:	9082                	jalr	ra
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400076:	00000297          	auipc	t0,0x0
2040007a:	00c28293          	addi	t0,t0,12 # 20400082 <_enter+0x82>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007e:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20400082:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:103
     j 1b
20400086:	bff5                	j	20400082 <_enter+0x82>
20400088:	0000                	unimp
	...

2040008c <__register_frame_info>:
__register_frame_info():
C:/wsFreedomStudio/kernel/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040008c:	8082                	ret

2040008e <metal_mem_scrub>:
metal_mem_scrub():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008e:	46a1                	li	a3,8
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20400090:	3006b373          	csrrc	t1,mstatus,a3
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400094:	4291                	li	t0,4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400096:	0055c563          	blt	a1,t0,204000a0 <metal_mem_scrub+0x12>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
2040009a:	00357613          	andi	a2,a0,3
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009e:	ca11                	beqz	a2,204000b2 <metal_mem_scrub+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
204000a0:	00050023          	sb	zero,0(a0)
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a4:	0505                	addi	a0,a0,1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a6:	15fd                	addi	a1,a1,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a8:	feb047e3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000ac:	30031073          	csrw	mstatus,t1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:39
    ret
204000b0:	8082                	ret
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000b2:	00052023          	sw	zero,0(a0)
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b6:	0511                	addi	a0,a0,4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b8:	15f1                	addi	a1,a1,-4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000ba:	fcb04ee3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000be:	30031073          	csrw	mstatus,t1
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:46
    ret
204000c2:	8082                	ret

204000c4 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c4:	00032023          	sw	zero,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c8:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000ca:	fe734de3          	blt	t1,t2,204000c4 <__metal_memory_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ce:	8082                	ret

204000d0 <__metal_before_start>:
__metal_before_start():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000d0:	8406                	mv	s0,ra
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000d2:	dfc00297          	auipc	t0,0xdfc00
204000d6:	f2e28293          	addi	t0,t0,-210 # 0 <__metal_boot_hart>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000da:	04028c63          	beqz	t0,20400132 <skip_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000de:	dfc00297          	auipc	t0,0xdfc00
204000e2:	f2228293          	addi	t0,t0,-222 # 0 <__metal_boot_hart>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e6:	f14027f3          	csrr	a5,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000ea:	46a1                	li	a3,8
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000ec:	3006b073          	csrc	mstatus,a3
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000f0:	830a                	mv	t1,sp
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000f2:	dfc00397          	auipc	t2,0xdfc00
204000f6:	30e38393          	addi	t2,t2,782 # 400 <__stack_size>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000fa:	938a                	add	t2,t2,sp
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000fc:	00730363          	beq	t1,t2,20400102 <__metal_before_start+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20400100:	37d1                	jal	204000c4 <__metal_memory_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20400102:	02579863          	bne	a5,t0,20400132 <skip_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400106:	5fc00317          	auipc	t1,0x5fc00
2040010a:	efa30313          	addi	t1,t1,-262 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010e:	5fc00397          	auipc	t2,0x5fc00
20400112:	6ba38393          	addi	t2,t2,1722 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400116:	00730363          	beq	t1,t2,2040011c <__metal_before_start+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
2040011a:	376d                	jal	204000c4 <__metal_memory_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
2040011c:	5fc00317          	auipc	t1,0x5fc00
20400120:	ee430313          	addi	t1,t1,-284 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400124:	5fc00397          	auipc	t2,0x5fc00
20400128:	edc38393          	addi	t2,t2,-292 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
2040012c:	00730363          	beq	t1,t2,20400132 <skip_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20400130:	3f51                	jal	204000c4 <__metal_memory_scrub>

20400132 <skip_scrub>:
skip_scrub():
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400132:	80a2                	mv	ra,s0
C:/wsFreedomStudio/kernel/freedom-metal/src/scrub.S:130
    ret
20400134:	8082                	ret
	...

20400138 <early_trap_vector>:
early_trap_vector():
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400138:	342022f3          	csrr	t0,mcause
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:65
    csrr t1, mepc
2040013c:	34102373          	csrr	t1,mepc
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:66
    csrr t2, mtval
20400140:	343023f3          	csrr	t2,mtval
C:/wsFreedomStudio/kernel/freedom-metal/src/trap.S:67
    j early_trap_vector
20400144:	bfd5                	j	20400138 <early_trap_vector>

20400146 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/wsFreedomStudio/kernel/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400146:	1141                	addi	sp,sp,-16
20400148:	c622                	sw	s0,12(sp)
2040014a:	0800                	addi	s0,sp,16
C:/wsFreedomStudio/kernel/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
2040014c:	0001                	nop
2040014e:	4432                	lw	s0,12(sp)
20400150:	0141                	addi	sp,sp,16
20400152:	8082                	ret

20400154 <_start>:
_start():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400154:	8406                	mv	s0,ra
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400156:	5fc01197          	auipc	gp,0x5fc01
2040015a:	e4a18193          	addi	gp,gp,-438 # 80000fa0 <__global_pointer$>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015e:	00000293          	li	t0,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20400162:	0e551163          	bne	a0,t0,20400244 <_skip_init>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400166:	00007297          	auipc	t0,0x7
2040016a:	45a28293          	addi	t0,t0,1114 # 204075c0 <metal_segment_data_source_start>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016e:	5fc00317          	auipc	t1,0x5fc00
20400172:	e9230313          	addi	t1,t1,-366 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400176:	5fc00397          	auipc	t2,0x5fc00
2040017a:	65238393          	addi	t2,t2,1618 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017e:	00628c63          	beq	t0,t1,20400196 <_start+0x42>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20400182:	00735a63          	bge	t1,t2,20400196 <_start+0x42>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400186:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2040018a:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
2040018c:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20400190:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20400192:	fe734ae3          	blt	t1,t2,20400186 <_start+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400196:	00001297          	auipc	t0,0x1
2040019a:	e8228293          	addi	t0,t0,-382 # 20401018 <metal_segment_itim_source_start>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019e:	5fc00317          	auipc	t1,0x5fc00
204001a2:	e6230313          	addi	t1,t1,-414 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a6:	5fc00397          	auipc	t2,0x5fc00
204001aa:	e5a38393          	addi	t2,t2,-422 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001ae:	00628c63          	beq	t0,t1,204001c6 <_start+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001b2:	00735a63          	bge	t1,t2,204001c6 <_start+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b6:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001ba:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001bc:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001c0:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001c2:	fe734ae3          	blt	t1,t2,204001b6 <_start+0x62>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c6:	0000100f          	fence.i
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001ca:	00001297          	auipc	t0,0x1
204001ce:	e4e28293          	addi	t0,t0,-434 # 20401018 <metal_segment_itim_source_start>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001d2:	5fc00317          	auipc	t1,0x5fc00
204001d6:	e2e30313          	addi	t1,t1,-466 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001da:	5fc00397          	auipc	t2,0x5fc00
204001de:	e2638393          	addi	t2,t2,-474 # 80000000 <impure_data>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001e2:	00628c63          	beq	t0,t1,204001fa <_start+0xa6>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e6:	00735a63          	bge	t1,t2,204001fa <_start+0xa6>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ea:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ee:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001f0:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f4:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f6:	fe734ae3          	blt	t1,t2,204001ea <_start+0x96>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001fa:	0000100f          	fence.i
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fe:	5fc00317          	auipc	t1,0x5fc00
20400202:	5ca30313          	addi	t1,t1,1482 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400206:	56818393          	addi	t2,gp,1384 # 80001508 <metal_segment_bss_target_end>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2040020a:	00735763          	bge	t1,t2,20400218 <_start+0xc4>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020e:	00032023          	sw	zero,0(t1)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20400212:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400214:	fe734de3          	blt	t1,t2,2040020e <_start+0xba>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400218:	5fc00217          	auipc	tp,0x5fc00
2040021c:	5b020213          	addi	tp,tp,1456 # 800007c8 <count>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400220:	c211                	beqz	a2,20400224 <_start+0xd0>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:167
  jalr a2
20400222:	9602                	jalr	a2
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400224:	00003517          	auipc	a0,0x3
20400228:	95e50513          	addi	a0,a0,-1698 # 20402b82 <__libc_fini_array>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:172
  call atexit
2040022c:	119020ef          	jal	ra,20402b44 <atexit>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20400230:	189020ef          	jal	ra,20402bb8 <__libc_init_array>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400234:	00003517          	auipc	a0,0x3
20400238:	c2a50513          	addi	a0,a0,-982 # 20402e5e <metal_fini_run>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:178
  call atexit
2040023c:	109020ef          	jal	ra,20402b44 <atexit>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20400240:	40b020ef          	jal	ra,20402e4a <metal_init_run>

20400244 <_skip_init>:
_skip_init():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400244:	3709                	jal	20400146 <__metal_synchronize_harts>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400246:	56fd                	li	a3,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400248:	3046b073          	csrc	mie,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
2040024c:	3446b073          	csrc	mip,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20400250:	301027f3          	csrr	a5,misa
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400254:	00042737          	lui	a4,0x42
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400258:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2040025a:	c709                	beqz	a4,20400264 <_skip_init+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
2040025c:	3036b073          	csrc	mideleg,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20400260:	3026b073          	csrc	medeleg,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400264:	00040737          	lui	a4,0x40
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400268:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2040026a:	c319                	beqz	a4,20400270 <_skip_init+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
2040026c:	1806b073          	csrc	satp,a3
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20400270:	6741                	lui	a4,0x10
20400272:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400276:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400278:	cb89                	beqz	a5,2040028a <_skip_init+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
2040027a:	300027f3          	csrr	a5,mstatus
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027e:	6709                	lui	a4,0x2
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20400280:	8fd9                	or	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20400282:	30079073          	csrw	mstatus,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400286:	00305073          	csrwi	fcsr,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
2040028a:	301027f3          	csrr	a5,misa
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028e:	00200737          	lui	a4,0x200
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20400292:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400294:	c799                	beqz	a5,204002a2 <_skip_init+0x5e>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400296:	300027f3          	csrr	a5,mstatus
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
2040029a:	2007e793          	ori	a5,a5,512
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029e:	30079073          	csrw	mstatus,a5
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
204002a2:	4505                	li	a0,1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a4:	00000597          	auipc	a1,0x0
204002a8:	20058593          	addi	a1,a1,512 # 204004a4 <argv>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002ac:	00000617          	auipc	a2,0x0
204002b0:	1fc60613          	addi	a2,a2,508 # 204004a8 <envp>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b4:	2031                	jal	204002c0 <secondary_main>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b6:	0a3020ef          	jal	ra,20402b58 <exit>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002ba:	80a2                	mv	ra,s0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:248
  ret
204002bc:	8082                	ret

204002be <_fini>:
_init():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002be:	8082                	ret

204002c0 <secondary_main>:
secondary_main():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002c0:	1141                	addi	sp,sp,-16
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002c2:	c206                	sw	ra,4(sp)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c4:	f14022f3          	csrr	t0,mhartid
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c8:	00000313          	li	t1,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002cc:	00628563          	beq	t0,t1,204002d6 <secondary_main+0x16>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002d0:	10500073          	wfi
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:282
  j 1b
204002d4:	bff5                	j	204002d0 <secondary_main+0x10>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d6:	0bc010ef          	jal	ra,20401392 <main>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002da:	4092                	lw	ra,4(sp)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002dc:	0141                	addi	sp,sp,16
C:/wsFreedomStudio/kernel/freedom-metal/gloss/crt0.S:291
  ret
204002de:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20400302:	397020ef          	jal	ra,20402e98 <metal_uart_init>
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	097050ef          	jal	ra,20405bae <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe680>
2040032e:	10d050ef          	jal	ra,20405c3a <__metal_driver_sifive_fe310_g000_pll_init>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	06b050ef          	jal	ra,20405bae <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe680>
20400358:	7c3060ef          	jal	ra,2040731a <metal_clock_set_rate_hz>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401080 <r_mie>:
r_mie():
C:\wsFreedomStudio\kernel_list\src/riscv.h:99

// Machine-mode Interrupt Enable
#define MIE_MEIE (1L << 11)  // external
#define MIE_MTIE (1L << 7)   // timer
#define MIE_MSIE (1L << 3)   // software
static inline uint32_t r_mie() {
20401080:	1101                	addi	sp,sp,-32
20401082:	ce22                	sw	s0,28(sp)
20401084:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_list\src/riscv.h:101
    uint32_t x;
    asm volatile("csrr %0, mie" : "=r"(x));
20401086:	304027f3          	csrr	a5,mie
2040108a:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:102
    return x;
2040108e:	fec42783          	lw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:103
}
20401092:	853e                	mv	a0,a5
20401094:	4472                	lw	s0,28(sp)
20401096:	6105                	addi	sp,sp,32
20401098:	8082                	ret

2040109a <w_mie>:
w_mie():
C:\wsFreedomStudio\kernel_list\src/riscv.h:105

static inline void w_mie(uint32_t x) {
2040109a:	1101                	addi	sp,sp,-32
2040109c:	ce22                	sw	s0,28(sp)
2040109e:	1000                	addi	s0,sp,32
204010a0:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
204010a4:	fec42783          	lw	a5,-20(s0)
204010a8:	30479073          	csrw	mie,a5
C:\wsFreedomStudio\kernel_list\src/riscv.h:107
}
204010ac:	0001                	nop
204010ae:	4472                	lw	s0,28(sp)
204010b0:	6105                	addi	sp,sp,32
204010b2:	8082                	ret

204010b4 <w_mtvec>:
w_mtvec():
C:\wsFreedomStudio\kernel_list\src/riscv.h:157
    asm volatile("csrr %0, stvec" : "=r"(x));
    return x;
}

// Machine-mode interrupt vector
static inline void w_mtvec(uint32_t x) {
204010b4:	1101                	addi	sp,sp,-32
204010b6:	ce22                	sw	s0,28(sp)
204010b8:	1000                	addi	s0,sp,32
204010ba:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:158
    asm volatile("csrw mtvec, %0" : : "r"(x));
204010be:	fec42783          	lw	a5,-20(s0)
204010c2:	30579073          	csrw	mtvec,a5
C:\wsFreedomStudio\kernel_list\src/riscv.h:159
}
204010c6:	0001                	nop
204010c8:	4472                	lw	s0,28(sp)
204010ca:	6105                	addi	sp,sp,32
204010cc:	8082                	ret

204010ce <intr_on>:
intr_on():
C:\wsFreedomStudio\kernel_list\src/riscv.h:224
//Interrupts on and off by JJRH
#define INTERRUPT_ON (1 << 7)
#define INTERRUPT_OFF (0 << 7)

// enable device interrupts by JJRH
static inline void intr_on() {
204010ce:	1101                	addi	sp,sp,-32
204010d0:	ce06                	sw	ra,28(sp)
204010d2:	cc22                	sw	s0,24(sp)
204010d4:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_list\src/riscv.h:225
	uint32_t mie = r_mie();
204010d6:	376d                	jal	20401080 <r_mie>
204010d8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:226
	mie |= INTERRUPT_ON;
204010dc:	fec42783          	lw	a5,-20(s0)
204010e0:	0807e793          	ori	a5,a5,128
204010e4:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
204010e8:	30046073          	csrsi	mstatus,8
C:\wsFreedomStudio\kernel_list\src/riscv.h:228
	w_mie(mie);
204010ec:	fec42503          	lw	a0,-20(s0)
204010f0:	376d                	jal	2040109a <w_mie>
C:\wsFreedomStudio\kernel_list\src/riscv.h:229
}
204010f2:	0001                	nop
204010f4:	40f2                	lw	ra,28(sp)
204010f6:	4462                	lw	s0,24(sp)
204010f8:	6105                	addi	sp,sp,32
204010fa:	8082                	ret

204010fc <intr_off>:
intr_off():
C:\wsFreedomStudio\kernel_list\src/riscv.h:240

// disable device interrupts
//static inline void intr_off() { w_sstatus(r_sstatus() & ~SSTATUS_SIE); }

// disable device interrupts  by JJRH
static inline void intr_off() {
204010fc:	1101                	addi	sp,sp,-32
204010fe:	ce06                	sw	ra,28(sp)
20401100:	cc22                	sw	s0,24(sp)
20401102:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_list\src/riscv.h:241
	uint32_t mie = r_mie();
20401104:	3fb5                	jal	20401080 <r_mie>
20401106:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:242
	mie &= INTERRUPT_OFF;
2040110a:	fe042623          	sw	zero,-20(s0)
C:\wsFreedomStudio\kernel_list\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
2040110e:	30046073          	csrsi	mstatus,8
C:\wsFreedomStudio\kernel_list\src/riscv.h:244
	w_mie(mie);
20401112:	fec42503          	lw	a0,-20(s0)
20401116:	3751                	jal	2040109a <w_mie>
C:\wsFreedomStudio\kernel_list\src/riscv.h:245
}
20401118:	0001                	nop
2040111a:	40f2                	lw	ra,28(sp)
2040111c:	4462                	lw	s0,24(sp)
2040111e:	6105                	addi	sp,sp,32
20401120:	8082                	ret

20401122 <osKernelStackInit>:
osKernelStackInit():
C:\wsFreedomStudio\kernel_list\src/kernel.c:25
struct pcb *temp_ptr;
struct pcb *current_ptr;

int32_t PCB_STACK[NUM_OF_THREADS][STACKSIZE];

void osKernelStackInit(int i){
20401122:	1101                	addi	sp,sp,-32
20401124:	ce22                	sw	s0,28(sp)
20401126:	1000                	addi	s0,sp,32
20401128:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_list\src/kernel.c:26
	temp_ptr->stackPt = &PCB_STACK[i][STACKSIZE];
2040112c:	8e41a783          	lw	a5,-1820(gp) # 80000884 <temp_ptr>
20401130:	fec42703          	lw	a4,-20(s0)
20401134:	00170693          	addi	a3,a4,1 # 200001 <__heap_size+0x1ff801>
20401138:	32000713          	li	a4,800
2040113c:	02e686b3          	mul	a3,a3,a4
20401140:	80001737          	lui	a4,0x80001
20401144:	88870713          	addi	a4,a4,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
20401148:	9736                	add	a4,a4,a3
2040114a:	c398                	sw	a4,0(a5)
C:\wsFreedomStudio\kernel_list\src/kernel.c:28
	//PCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;
}
2040114c:	0001                	nop
2040114e:	4472                	lw	s0,28(sp)
20401150:	6105                	addi	sp,sp,32
20401152:	8082                	ret

20401154 <osKernelAddTask>:
osKernelAddTask():
C:\wsFreedomStudio\kernel_list\src/kernel.c:30

void osKernelAddTask(void(*task0)(void), void(*task1)(void), void(*task2)(void), void(*task3)(void)){
20401154:	1101                	addi	sp,sp,-32
20401156:	ce06                	sw	ra,28(sp)
20401158:	cc22                	sw	s0,24(sp)
2040115a:	1000                	addi	s0,sp,32
2040115c:	fea42623          	sw	a0,-20(s0)
20401160:	feb42423          	sw	a1,-24(s0)
20401164:	fec42223          	sw	a2,-28(s0)
20401168:	fed42023          	sw	a3,-32(s0)
C:\wsFreedomStudio\kernel_list\src/kernel.c:31
	intr_off();
2040116c:	3f41                	jal	204010fc <intr_off>
C:\wsFreedomStudio\kernel_list\src/kernel.c:32
	temp_ptr = insertFirst(0, 0);
2040116e:	4581                	li	a1,0
20401170:	4501                	li	a0,0
20401172:	24c1                	jal	20401432 <insertFirst>
20401174:	872a                	mv	a4,a0
20401176:	8ee1a223          	sw	a4,-1820(gp) # 80000884 <temp_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.c:33
	current_ptr = temp_ptr;
2040117a:	8e41a703          	lw	a4,-1820(gp) # 80000884 <temp_ptr>
2040117e:	8ee1a023          	sw	a4,-1824(gp) # 80000880 <current_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.c:34
	osKernelStackInit(temp_ptr->id);
20401182:	8e41a783          	lw	a5,-1820(gp) # 80000884 <temp_ptr>
20401186:	479c                	lw	a5,8(a5)
20401188:	853e                	mv	a0,a5
2040118a:	3f61                	jal	20401122 <osKernelStackInit>
C:\wsFreedomStudio\kernel_list\src/kernel.c:35
	PCB_STACK[0][STACKSIZE] = (int32_t)(task0);
2040118c:	fec42703          	lw	a4,-20(s0)
20401190:	800017b7          	lui	a5,0x80001
20401194:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
20401198:	32e7a023          	sw	a4,800(a5)
C:\wsFreedomStudio\kernel_list\src/kernel.c:36
	temp_ptr = insertFirst(1, 0);
2040119c:	4581                	li	a1,0
2040119e:	4505                	li	a0,1
204011a0:	2c49                	jal	20401432 <insertFirst>
204011a2:	872a                	mv	a4,a0
204011a4:	8ee1a223          	sw	a4,-1820(gp) # 80000884 <temp_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.c:37
	osKernelStackInit(temp_ptr->id);
204011a8:	8e41a783          	lw	a5,-1820(gp) # 80000884 <temp_ptr>
204011ac:	479c                	lw	a5,8(a5)
204011ae:	853e                	mv	a0,a5
204011b0:	3f8d                	jal	20401122 <osKernelStackInit>
C:\wsFreedomStudio\kernel_list\src/kernel.c:38
	PCB_STACK[1][STACKSIZE] = (int32_t)(task1);
204011b2:	fe842703          	lw	a4,-24(s0)
204011b6:	800017b7          	lui	a5,0x80001
204011ba:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
204011be:	64e7a023          	sw	a4,1600(a5)
C:\wsFreedomStudio\kernel_list\src/kernel.c:39
	PCB_STACK[1][STACKSIZE-1] = (int32_t)(task1);
204011c2:	fe842703          	lw	a4,-24(s0)
204011c6:	800017b7          	lui	a5,0x80001
204011ca:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
204011ce:	62e7ae23          	sw	a4,1596(a5)
C:\wsFreedomStudio\kernel_list\src/kernel.c:40
	temp_ptr = insertFirst(2, 0);
204011d2:	4581                	li	a1,0
204011d4:	4509                	li	a0,2
204011d6:	2cb1                	jal	20401432 <insertFirst>
204011d8:	872a                	mv	a4,a0
204011da:	8ee1a223          	sw	a4,-1820(gp) # 80000884 <temp_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.c:41
	osKernelStackInit(temp_ptr->id);
204011de:	8e41a783          	lw	a5,-1820(gp) # 80000884 <temp_ptr>
204011e2:	479c                	lw	a5,8(a5)
204011e4:	853e                	mv	a0,a5
204011e6:	3f35                	jal	20401122 <osKernelStackInit>
C:\wsFreedomStudio\kernel_list\src/kernel.c:42
	PCB_STACK[2][STACKSIZE] = (int32_t)(task2);
204011e8:	fe442703          	lw	a4,-28(s0)
204011ec:	800017b7          	lui	a5,0x80001
204011f0:	88878693          	addi	a3,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
204011f4:	6785                	lui	a5,0x1
204011f6:	97b6                	add	a5,a5,a3
204011f8:	96e7a023          	sw	a4,-1696(a5) # 960 <__heap_size+0x160>
C:\wsFreedomStudio\kernel_list\src/kernel.c:43
	PCB_STACK[2][STACKSIZE-1] = (int32_t)(task2);
204011fc:	fe442703          	lw	a4,-28(s0)
20401200:	800017b7          	lui	a5,0x80001
20401204:	88878693          	addi	a3,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
20401208:	6785                	lui	a5,0x1
2040120a:	97b6                	add	a5,a5,a3
2040120c:	94e7ae23          	sw	a4,-1700(a5) # 95c <__heap_size+0x15c>
C:\wsFreedomStudio\kernel_list\src/kernel.c:44
	temp_ptr = insertFirst(3, 0);
20401210:	4581                	li	a1,0
20401212:	450d                	li	a0,3
20401214:	2c39                	jal	20401432 <insertFirst>
20401216:	872a                	mv	a4,a0
20401218:	8ee1a223          	sw	a4,-1820(gp) # 80000884 <temp_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.c:45
	osKernelStackInit(temp_ptr->id);
2040121c:	8e41a783          	lw	a5,-1820(gp) # 80000884 <temp_ptr>
20401220:	479c                	lw	a5,8(a5)
20401222:	853e                	mv	a0,a5
20401224:	3dfd                	jal	20401122 <osKernelStackInit>
C:\wsFreedomStudio\kernel_list\src/kernel.c:46
	PCB_STACK[3][STACKSIZE] = (int32_t)(task3);
20401226:	fe042703          	lw	a4,-32(s0)
2040122a:	800017b7          	lui	a5,0x80001
2040122e:	88878693          	addi	a3,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
20401232:	6785                	lui	a5,0x1
20401234:	97b6                	add	a5,a5,a3
20401236:	c8e7a023          	sw	a4,-896(a5) # c80 <__heap_size+0x480>
C:\wsFreedomStudio\kernel_list\src/kernel.c:47
	PCB_STACK[3][STACKSIZE-1] = (int32_t)(task3);
2040123a:	fe042703          	lw	a4,-32(s0)
2040123e:	800017b7          	lui	a5,0x80001
20401242:	88878693          	addi	a3,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xffffe778>
20401246:	6785                	lui	a5,0x1
20401248:	97b6                	add	a5,a5,a3
2040124a:	c6e7ae23          	sw	a4,-900(a5) # c7c <__heap_size+0x47c>
C:\wsFreedomStudio\kernel_list\src/kernel.c:49

	intr_on();
2040124e:	3541                	jal	204010ce <intr_on>
C:\wsFreedomStudio\kernel_list\src/kernel.c:50
}
20401250:	0001                	nop
20401252:	40f2                	lw	ra,28(sp)
20401254:	4462                	lw	s0,24(sp)
20401256:	6105                	addi	sp,sp,32
20401258:	8082                	ret

2040125a <osKernelLaunch>:
osKernelLaunch():
C:\wsFreedomStudio\kernel_list\src/kernel.c:61
	pcbs[2].nextPt = &pcbs[3];
	pcbs[3].nextPt = &pcbs[0];
	intr_on();
}*/

void osKernelLaunch(void){
2040125a:	1141                	addi	sp,sp,-16
2040125c:	c606                	sw	ra,12(sp)
2040125e:	c422                	sw	s0,8(sp)
20401260:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/kernel.c:62
	system_init();
20401262:	2039                	jal	20401270 <system_init>
C:\wsFreedomStudio\kernel_list\src/kernel.c:63
	osSchedulerLaunch();
20401264:	2ef1                	jal	20401640 <osSchedulerLaunch>
C:\wsFreedomStudio\kernel_list\src/kernel.c:64
}
20401266:	0001                	nop
20401268:	40b2                	lw	ra,12(sp)
2040126a:	4422                	lw	s0,8(sp)
2040126c:	0141                	addi	sp,sp,16
2040126e:	8082                	ret

20401270 <system_init>:
system_init():
C:\wsFreedomStudio\kernel_list\src/kernel.c:66

void system_init(){
20401270:	1141                	addi	sp,sp,-16
20401272:	c606                	sw	ra,12(sp)
20401274:	c422                	sw	s0,8(sp)
20401276:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/kernel.c:68
	//w_mepc((uint32_t)main);
	w_mtvec((uint32_t)switch_to);
20401278:	204017b7          	lui	a5,0x20401
2040127c:	65478793          	addi	a5,a5,1620 # 20401654 <switch_to>
20401280:	853e                	mv	a0,a5
20401282:	3d0d                	jal	204010b4 <w_mtvec>
C:\wsFreedomStudio\kernel_list\src/kernel.c:69
	timer_init();
20401284:	2031                	jal	20401290 <timer_init>
C:\wsFreedomStudio\kernel_list\src/kernel.c:70
}
20401286:	0001                	nop
20401288:	40b2                	lw	ra,12(sp)
2040128a:	4422                	lw	s0,8(sp)
2040128c:	0141                	addi	sp,sp,16
2040128e:	8082                	ret

20401290 <timer_init>:
timer_init():
C:\wsFreedomStudio\kernel_list\src/kernel.c:73


void timer_init(void) {
20401290:	1141                	addi	sp,sp,-16
20401292:	c606                	sw	ra,12(sp)
20401294:	c422                	sw	s0,8(sp)
20401296:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/kernel.c:74
	*MTIMECMP = *MTIME + 0xfffff * 5;
20401298:	0200c7b7          	lui	a5,0x200c
2040129c:	17e1                	addi	a5,a5,-8
2040129e:	4398                	lw	a4,0(a5)
204012a0:	43dc                	lw	a5,4(a5)
204012a2:	02004837          	lui	a6,0x2004
204012a6:	00500537          	lui	a0,0x500
204012aa:	156d                	addi	a0,a0,-5
204012ac:	4581                	li	a1,0
204012ae:	00a70633          	add	a2,a4,a0
204012b2:	88b2                	mv	a7,a2
204012b4:	00e8b8b3          	sltu	a7,a7,a4
204012b8:	00b786b3          	add	a3,a5,a1
204012bc:	00d887b3          	add	a5,a7,a3
204012c0:	86be                	mv	a3,a5
204012c2:	8732                	mv	a4,a2
204012c4:	87b6                	mv	a5,a3
204012c6:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
204012ca:	00f82223          	sw	a5,4(a6)
C:\wsFreedomStudio\kernel_list\src/kernel.c:75
	intr_on();
204012ce:	3501                	jal	204010ce <intr_on>
C:\wsFreedomStudio\kernel_list\src/kernel.c:76
}
204012d0:	0001                	nop
204012d2:	40b2                	lw	ra,12(sp)
204012d4:	4422                	lw	s0,8(sp)
204012d6:	0141                	addi	sp,sp,16
204012d8:	8082                	ret

204012da <osSchedulerRoundRobin>:
osSchedulerRoundRobin():
C:\wsFreedomStudio\kernel_list\src/kernel.c:78

void osSchedulerRoundRobin(void){
204012da:	1141                	addi	sp,sp,-16
204012dc:	c606                	sw	ra,12(sp)
204012de:	c422                	sw	s0,8(sp)
204012e0:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/kernel.c:79
	current_ptr->Current_state = ready;
204012e2:	8e01a783          	lw	a5,-1824(gp) # 80000880 <current_ptr>
204012e6:	0007a623          	sw	zero,12(a5) # 200c00c <__heap_size+0x200b80c>
C:\wsFreedomStudio\kernel_list\src/kernel.c:80
	if(current_ptr->nextPt == NULL)
204012ea:	8e01a783          	lw	a5,-1824(gp) # 80000880 <current_ptr>
204012ee:	43dc                	lw	a5,4(a5)
204012f0:	e799                	bnez	a5,204012fe <osSchedulerRoundRobin+0x24>
C:\wsFreedomStudio\kernel_list\src/kernel.c:81
		current_ptr = find(3);
204012f2:	450d                	li	a0,3
204012f4:	2a61                	jal	2040148c <find>
204012f6:	872a                	mv	a4,a0
204012f8:	8ee1a023          	sw	a4,-1824(gp) # 80000880 <current_ptr>
204012fc:	a031                	j	20401308 <osSchedulerRoundRobin+0x2e>
C:\wsFreedomStudio\kernel_list\src/kernel.c:83
	else
		current_ptr = current_ptr->nextPt;
204012fe:	8e01a783          	lw	a5,-1824(gp) # 80000880 <current_ptr>
20401302:	43d8                	lw	a4,4(a5)
20401304:	8ee1a023          	sw	a4,-1824(gp) # 80000880 <current_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.c:84
		current_ptr->Current_state = running;
20401308:	8e01a783          	lw	a5,-1824(gp) # 80000880 <current_ptr>
2040130c:	4705                	li	a4,1
2040130e:	c7d8                	sw	a4,12(a5)
C:\wsFreedomStudio\kernel_list\src/kernel.c:85
}
20401310:	0001                	nop
20401312:	40b2                	lw	ra,12(sp)
20401314:	4422                	lw	s0,8(sp)
20401316:	0141                	addi	sp,sp,16
20401318:	8082                	ret

2040131a <task>:
task():
C:\wsFreedomStudio\kernel_list\src/main.c:13
#include "list.h"

int count = 0, count1= 0, count2= 0, count3= 0;
//uint32_t semaphore1, semaphore2;

void task(void){
2040131a:	1141                	addi	sp,sp,-16
2040131c:	c606                	sw	ra,12(sp)
2040131e:	c422                	sw	s0,8(sp)
20401320:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/main.c:15 (discriminator 1)
	while(1){
		count++;
20401322:	800007b7          	lui	a5,0x80000
20401326:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6b8>
2040132a:	00178713          	addi	a4,a5,1
2040132e:	800007b7          	lui	a5,0x80000
20401332:	7ce7a423          	sw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6b8>
C:\wsFreedomStudio\kernel_list\src/main.c:16 (discriminator 1)
		printList();
20401336:	2879                	jal	204013d4 <printList>
C:\wsFreedomStudio\kernel_list\src/main.c:17 (discriminator 1)
		asm volatile("wfi");
20401338:	10500073          	wfi
C:\wsFreedomStudio\kernel_list\src/main.c:15 (discriminator 1)
		count++;
2040133c:	b7dd                	j	20401322 <task+0x8>

2040133e <task1>:
task1():
C:\wsFreedomStudio\kernel_list\src/main.c:23
		//printf("task 0 counter: %d\n", count);
	}
}


void task1(void){
2040133e:	1141                	addi	sp,sp,-16
20401340:	c622                	sw	s0,12(sp)
20401342:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/main.c:25 (discriminator 1)
	while(1){
		count1++;
20401344:	800007b7          	lui	a5,0x80000
20401348:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6bc>
2040134c:	00178713          	addi	a4,a5,1
20401350:	800007b7          	lui	a5,0x80000
20401354:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6bc>
20401358:	b7f5                	j	20401344 <task1+0x6>

2040135a <task2>:
task2():
C:\wsFreedomStudio\kernel_list\src/main.c:33
//		}
		//printf("task 1 counter: %d\n", count1);
	}
}

void task2(void){
2040135a:	1141                	addi	sp,sp,-16
2040135c:	c622                	sw	s0,12(sp)
2040135e:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/main.c:36 (discriminator 1)
	while(1){
		//SemaphoreWait(&semaphore2);
		count2++;
20401360:	800007b7          	lui	a5,0x80000
20401364:	7d07a783          	lw	a5,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6c0>
20401368:	00178713          	addi	a4,a5,1
2040136c:	800007b7          	lui	a5,0x80000
20401370:	7ce7a823          	sw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6c0>
20401374:	b7f5                	j	20401360 <task2+0x6>

20401376 <task3>:
task3():
C:\wsFreedomStudio\kernel_list\src/main.c:42
		//printf("task 2 counter: %d\n", count2);
		//SemaphoreSignal(&semaphore1);
	}
}

void task3(void){
20401376:	1141                	addi	sp,sp,-16
20401378:	c622                	sw	s0,12(sp)
2040137a:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/main.c:45 (discriminator 1)
	while(1){
		//SemaphoreWait(&semaphore1);
		count3++;
2040137c:	800007b7          	lui	a5,0x80000
20401380:	7d47a783          	lw	a5,2004(a5) # 800007d4 <metal_segment_heap_target_end+0xffffe6c4>
20401384:	00178713          	addi	a4,a5,1
20401388:	800007b7          	lui	a5,0x80000
2040138c:	7ce7aa23          	sw	a4,2004(a5) # 800007d4 <metal_segment_heap_target_end+0xffffe6c4>
20401390:	b7f5                	j	2040137c <task3+0x6>

20401392 <main>:
main():
C:\wsFreedomStudio\kernel_list\src/main.c:51
		//printf("task 3 counter: %d\n", count3);
		//SemaphoreSignal(&semaphore2);
	}
}

int main() {
20401392:	1141                	addi	sp,sp,-16
20401394:	c606                	sw	ra,12(sp)
20401396:	c422                	sw	s0,8(sp)
20401398:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel_list\src/main.c:52
	printf("RISC-V Kernel\n");
2040139a:	204007b7          	lui	a5,0x20400
2040139e:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
204013a2:	2bf5                	jal	2040199e <puts>
C:\wsFreedomStudio\kernel_list\src/main.c:56
	//SemaphoreInit(&semaphore1, 1);
	//SemaphoreInit(&semaphore2, 0);

	osKernelAddTask(&task, &task1 , &task2, &task3 );
204013a4:	204017b7          	lui	a5,0x20401
204013a8:	37678693          	addi	a3,a5,886 # 20401376 <task3>
204013ac:	204017b7          	lui	a5,0x20401
204013b0:	35a78613          	addi	a2,a5,858 # 2040135a <task2>
204013b4:	204017b7          	lui	a5,0x20401
204013b8:	33e78593          	addi	a1,a5,830 # 2040133e <task1>
204013bc:	204017b7          	lui	a5,0x20401
204013c0:	31a78513          	addi	a0,a5,794 # 2040131a <task>
204013c4:	3b41                	jal	20401154 <osKernelAddTask>
C:\wsFreedomStudio\kernel_list\src/main.c:57
	osKernelLaunch();
204013c6:	3d51                	jal	2040125a <osKernelLaunch>
204013c8:	4781                	li	a5,0
C:\wsFreedomStudio\kernel_list\src/main.c:59
	//asm volatile("wfi");
}
204013ca:	853e                	mv	a0,a5
204013cc:	40b2                	lw	ra,12(sp)
204013ce:	4422                	lw	s0,8(sp)
204013d0:	0141                	addi	sp,sp,16
204013d2:	8082                	ret

204013d4 <printList>:
printList():
C:\wsFreedomStudio\kernel_list\src/list.c:14

struct pcb *head = NULL;
struct pcb *current = NULL;

//display the list
void printList() {
204013d4:	1101                	addi	sp,sp,-32
204013d6:	ce06                	sw	ra,28(sp)
204013d8:	cc22                	sw	s0,24(sp)
204013da:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_list\src/list.c:15
   struct pcb *ptr = head;
204013dc:	800007b7          	lui	a5,0x80000
204013e0:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6c8>
204013e4:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:16
   printf("\n[ ");
204013e8:	204007b7          	lui	a5,0x20400
204013ec:	37878513          	addi	a0,a5,888 # 20400378 <use_hfxosc+0x3c>
204013f0:	2959                	jal	20401886 <iprintf>
C:\wsFreedomStudio\kernel_list\src/list.c:19

   //start from the beginning
   while(ptr != NULL) {
204013f2:	a01d                	j	20401418 <printList+0x44>
C:\wsFreedomStudio\kernel_list\src/list.c:20
      printf("(ID: %d, State: %d) ", ptr->id ,ptr->Current_state);
204013f4:	fec42783          	lw	a5,-20(s0)
204013f8:	4798                	lw	a4,8(a5)
204013fa:	fec42783          	lw	a5,-20(s0)
204013fe:	47dc                	lw	a5,12(a5)
20401400:	863e                	mv	a2,a5
20401402:	85ba                	mv	a1,a4
20401404:	204007b7          	lui	a5,0x20400
20401408:	37c78513          	addi	a0,a5,892 # 2040037c <use_hfxosc+0x40>
2040140c:	29ad                	jal	20401886 <iprintf>
C:\wsFreedomStudio\kernel_list\src/list.c:21
      ptr = ptr->nextPt;
2040140e:	fec42783          	lw	a5,-20(s0)
20401412:	43dc                	lw	a5,4(a5)
20401414:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:19
   while(ptr != NULL) {
20401418:	fec42783          	lw	a5,-20(s0)
2040141c:	ffe1                	bnez	a5,204013f4 <printList+0x20>
C:\wsFreedomStudio\kernel_list\src/list.c:24
   }

   printf(" ]");
2040141e:	204007b7          	lui	a5,0x20400
20401422:	39478513          	addi	a0,a5,916 # 20400394 <use_hfxosc+0x58>
20401426:	2185                	jal	20401886 <iprintf>
C:\wsFreedomStudio\kernel_list\src/list.c:25
}
20401428:	0001                	nop
2040142a:	40f2                	lw	ra,28(sp)
2040142c:	4462                	lw	s0,24(sp)
2040142e:	6105                	addi	sp,sp,32
20401430:	8082                	ret

20401432 <insertFirst>:
insertFirst():
C:\wsFreedomStudio\kernel_list\src/list.c:28

//insert link at the first location
struct pcb* insertFirst(int id, int Current_state) {
20401432:	7179                	addi	sp,sp,-48
20401434:	d606                	sw	ra,44(sp)
20401436:	d422                	sw	s0,40(sp)
20401438:	1800                	addi	s0,sp,48
2040143a:	fca42e23          	sw	a0,-36(s0)
2040143e:	fcb42c23          	sw	a1,-40(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:30
   //create a link
   struct pcb *link = (struct pcb*) malloc(sizeof(struct pcb));
20401442:	4541                	li	a0,16
20401444:	2c4d                	jal	204016f6 <malloc>
20401446:	87aa                	mv	a5,a0
20401448:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:32

   link->id = id;
2040144c:	fec42783          	lw	a5,-20(s0)
20401450:	fdc42703          	lw	a4,-36(s0)
20401454:	c798                	sw	a4,8(a5)
C:\wsFreedomStudio\kernel_list\src/list.c:33
   link->Current_state = Current_state;
20401456:	fd842703          	lw	a4,-40(s0)
2040145a:	fec42783          	lw	a5,-20(s0)
2040145e:	c7d8                	sw	a4,12(a5)
C:\wsFreedomStudio\kernel_list\src/list.c:36

   //point it to old first pcb
   link->nextPt = head;
20401460:	800007b7          	lui	a5,0x80000
20401464:	7d87a703          	lw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6c8>
20401468:	fec42783          	lw	a5,-20(s0)
2040146c:	c3d8                	sw	a4,4(a5)
C:\wsFreedomStudio\kernel_list\src/list.c:39

   //point first to new first pcb
   head = link;
2040146e:	800007b7          	lui	a5,0x80000
20401472:	fec42703          	lw	a4,-20(s0)
20401476:	7ce7ac23          	sw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6c8>
C:\wsFreedomStudio\kernel_list\src/list.c:41

   return head;
2040147a:	800007b7          	lui	a5,0x80000
2040147e:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6c8>
C:\wsFreedomStudio\kernel_list\src/list.c:42
}
20401482:	853e                	mv	a0,a5
20401484:	50b2                	lw	ra,44(sp)
20401486:	5422                	lw	s0,40(sp)
20401488:	6145                	addi	sp,sp,48
2040148a:	8082                	ret

2040148c <find>:
find():
C:\wsFreedomStudio\kernel_list\src/list.c:80

   return length;
}

//find a link with given id
struct pcb* find(int id) {
2040148c:	7179                	addi	sp,sp,-48
2040148e:	d622                	sw	s0,44(sp)
20401490:	1800                	addi	s0,sp,48
20401492:	fca42e23          	sw	a0,-36(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:83

   //start from the first link
   struct pcb* current = head;
20401496:	800007b7          	lui	a5,0x80000
2040149a:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6c8>
2040149e:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:86

   //if list is empty
   if(head == NULL) {
204014a2:	800007b7          	lui	a5,0x80000
204014a6:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6c8>
204014aa:	ef91                	bnez	a5,204014c6 <find+0x3a>
C:\wsFreedomStudio\kernel_list\src/list.c:87
      return NULL;
204014ac:	4781                	li	a5,0
204014ae:	a02d                	j	204014d8 <find+0x4c>
C:\wsFreedomStudio\kernel_list\src/list.c:94

   //navigate through list
   while(current->id != id) {

      //if it is last pcb
      if(current->nextPt == NULL) {
204014b0:	fec42783          	lw	a5,-20(s0)
204014b4:	43dc                	lw	a5,4(a5)
204014b6:	e399                	bnez	a5,204014bc <find+0x30>
C:\wsFreedomStudio\kernel_list\src/list.c:95
         return NULL;
204014b8:	4781                	li	a5,0
204014ba:	a839                	j	204014d8 <find+0x4c>
C:\wsFreedomStudio\kernel_list\src/list.c:98
      } else {
         //go to next link
         current = current->nextPt;
204014bc:	fec42783          	lw	a5,-20(s0)
204014c0:	43dc                	lw	a5,4(a5)
204014c2:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:91
   while(current->id != id) {
204014c6:	fec42783          	lw	a5,-20(s0)
204014ca:	479c                	lw	a5,8(a5)
204014cc:	fdc42703          	lw	a4,-36(s0)
204014d0:	fef710e3          	bne	a4,a5,204014b0 <find+0x24>
C:\wsFreedomStudio\kernel_list\src/list.c:103
      }
   }

   //if Current_state found, return the current Link
   return current;
204014d4:	fec42783          	lw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/list.c:104
}
204014d8:	853e                	mv	a0,a5
204014da:	5432                	lw	s0,44(sp)
204014dc:	6145                	addi	sp,sp,48
204014de:	8082                	ret

204014e0 <handle_interrupt>:
handle_interrupt():
C:\wsFreedomStudio\kernel_list\src/trap.c:14

#define CLINT_BASE 0x2000000
#define MTIME (volatile unsigned long long int *)(CLINT_BASE + 0xbff8)
#define MTIMECMP (volatile unsigned long long int *)(CLINT_BASE + 0x4000)

void handle_interrupt(uint32_t mcause) {
204014e0:	1101                	addi	sp,sp,-32
204014e2:	ce06                	sw	ra,28(sp)
204014e4:	cc22                	sw	s0,24(sp)
204014e6:	1000                	addi	s0,sp,32
204014e8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel_list\src/trap.c:15
    if ((mcause << 1 >> 1) == 0x7) {
204014ec:	fec42703          	lw	a4,-20(s0)
204014f0:	800007b7          	lui	a5,0x80000
204014f4:	fff7c793          	not	a5,a5
204014f8:	8f7d                	and	a4,a4,a5
204014fa:	479d                	li	a5,7
204014fc:	02f71e63          	bne	a4,a5,20401538 <handle_interrupt+0x58>
C:\wsFreedomStudio\kernel_list\src/trap.c:17
        //printf("  Switch context \n");
        *MTIMECMP = *MTIME + 0xfffff * 5;
20401500:	0200c7b7          	lui	a5,0x200c
20401504:	17e1                	addi	a5,a5,-8
20401506:	4398                	lw	a4,0(a5)
20401508:	43dc                	lw	a5,4(a5)
2040150a:	02004837          	lui	a6,0x2004
2040150e:	00500537          	lui	a0,0x500
20401512:	156d                	addi	a0,a0,-5
20401514:	4581                	li	a1,0
20401516:	00a70633          	add	a2,a4,a0
2040151a:	88b2                	mv	a7,a2
2040151c:	00e8b8b3          	sltu	a7,a7,a4
20401520:	00b786b3          	add	a3,a5,a1
20401524:	00d887b3          	add	a5,a7,a3
20401528:	86be                	mv	a3,a5
2040152a:	8732                	mv	a4,a2
2040152c:	87b6                	mv	a5,a3
2040152e:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
20401532:	00f82223          	sw	a5,4(a6)
C:\wsFreedomStudio\kernel_list\src/trap.c:24
    } else {
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1)
            ;
    }
}
20401536:	a839                	j	20401554 <handle_interrupt+0x74>
C:\wsFreedomStudio\kernel_list\src/trap.c:20
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
20401538:	fec42703          	lw	a4,-20(s0)
2040153c:	800007b7          	lui	a5,0x80000
20401540:	fff7c793          	not	a5,a5
20401544:	8ff9                	and	a5,a5,a4
20401546:	85be                	mv	a1,a5
20401548:	204007b7          	lui	a5,0x20400
2040154c:	39878513          	addi	a0,a5,920 # 20400398 <use_hfxosc+0x5c>
20401550:	2e1d                	jal	20401886 <iprintf>
C:\wsFreedomStudio\kernel_list\src/trap.c:21 (discriminator 1)
        while (1)
20401552:	a001                	j	20401552 <handle_interrupt+0x72>
C:\wsFreedomStudio\kernel_list\src/trap.c:24
}
20401554:	40f2                	lw	ra,28(sp)
20401556:	4462                	lw	s0,24(sp)
20401558:	6105                	addi	sp,sp,32
2040155a:	8082                	ret

2040155c <handle_exception>:
handle_exception():
C:\wsFreedomStudio\kernel_list\src/trap.c:26

void handle_exception(uint32_t mcause) {
2040155c:	7179                	addi	sp,sp,-48
2040155e:	d606                	sw	ra,44(sp)
20401560:	d422                	sw	s0,40(sp)
20401562:	1800                	addi	s0,sp,48
20401564:	fca42e23          	sw	a0,-36(s0)
C:\wsFreedomStudio\kernel_list\src/trap.c:29
    unsigned long long int mie;

    if (mcause == 0x8) {
20401568:	fdc42703          	lw	a4,-36(s0)
2040156c:	47a1                	li	a5,8
2040156e:	06f71663          	bne	a4,a5,204015da <handle_exception+0x7e>
C:\wsFreedomStudio\kernel_list\src/trap.c:30
        *MTIMECMP = *MTIME + 0xfffff * 25;
20401572:	0200c7b7          	lui	a5,0x200c
20401576:	17e1                	addi	a5,a5,-8
20401578:	4398                	lw	a4,0(a5)
2040157a:	43dc                	lw	a5,4(a5)
2040157c:	02004837          	lui	a6,0x2004
20401580:	01900537          	lui	a0,0x1900
20401584:	151d                	addi	a0,a0,-25
20401586:	4581                	li	a1,0
20401588:	00a70633          	add	a2,a4,a0
2040158c:	88b2                	mv	a7,a2
2040158e:	00e8b8b3          	sltu	a7,a7,a4
20401592:	00b786b3          	add	a3,a5,a1
20401596:	00d887b3          	add	a5,a7,a3
2040159a:	86be                	mv	a3,a5
2040159c:	8732                	mv	a4,a2
2040159e:	87b6                	mv	a5,a3
204015a0:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
204015a4:	00f82223          	sw	a5,4(a6)
C:\wsFreedomStudio\kernel_list\src/trap.c:32

        asm volatile("csrr %0, mie" : "=r"(mie));
204015a8:	30402773          	csrr	a4,mie
204015ac:	fee42423          	sw	a4,-24(s0)
204015b0:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/trap.c:33
        mie |= (1 << 7);
204015b4:	fe842783          	lw	a5,-24(s0)
204015b8:	0807e793          	ori	a5,a5,128
204015bc:	fef42423          	sw	a5,-24(s0)
204015c0:	fec42783          	lw	a5,-20(s0)
204015c4:	0007e793          	ori	a5,a5,0
204015c8:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/trap.c:34
        asm volatile("csrw mie, %0" : "=r"(mie));
204015cc:	30471073          	csrw	mie,a4
204015d0:	fee42423          	sw	a4,-24(s0)
204015d4:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/trap.c:40
    } else {
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1){
        };
    }
}
204015d8:	a839                	j	204015f6 <handle_exception+0x9a>
C:\wsFreedomStudio\kernel_list\src/trap.c:36
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
204015da:	fdc42703          	lw	a4,-36(s0)
204015de:	800007b7          	lui	a5,0x80000
204015e2:	fff7c793          	not	a5,a5
204015e6:	8ff9                	and	a5,a5,a4
204015e8:	85be                	mv	a1,a5
204015ea:	204007b7          	lui	a5,0x20400
204015ee:	39878513          	addi	a0,a5,920 # 20400398 <use_hfxosc+0x5c>
204015f2:	2c51                	jal	20401886 <iprintf>
C:\wsFreedomStudio\kernel_list\src/trap.c:37 (discriminator 1)
        while (1){
204015f4:	a001                	j	204015f4 <handle_exception+0x98>
C:\wsFreedomStudio\kernel_list\src/trap.c:40
}
204015f6:	50b2                	lw	ra,44(sp)
204015f8:	5422                	lw	s0,40(sp)
204015fa:	6145                	addi	sp,sp,48
204015fc:	8082                	ret

204015fe <handle_trap>:
handle_trap():
C:\wsFreedomStudio\kernel_list\src/trap.c:42

void handle_trap() {
204015fe:	1101                	addi	sp,sp,-32
20401600:	ce06                	sw	ra,28(sp)
20401602:	cc22                	sw	s0,24(sp)
20401604:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\kernel_list\src/trap.c:44
    uint32_t mcause, mepc;
    asm volatile("csrr %0, mcause" : "=r"(mcause));
20401606:	342027f3          	csrr	a5,mcause
2040160a:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\kernel_list\src/trap.c:45
    asm volatile("csrr %0, mepc" : "=r"(mepc));
2040160e:	341027f3          	csrr	a5,mepc
20401612:	fef42423          	sw	a5,-24(s0)
C:\wsFreedomStudio\kernel_list\src/trap.c:47

    if (mcause >> 31) {
20401616:	fec42783          	lw	a5,-20(s0)
2040161a:	0007d663          	bgez	a5,20401626 <handle_trap+0x28>
C:\wsFreedomStudio\kernel_list\src/trap.c:48
        handle_interrupt(mcause);
2040161e:	fec42503          	lw	a0,-20(s0)
20401622:	3d7d                	jal	204014e0 <handle_interrupt>
C:\wsFreedomStudio\kernel_list\src/trap.c:55
        handle_exception(mcause);
        asm volatile("csrr t0, mepc");
        asm volatile("addi t0, t0, 0x4");
        asm volatile("csrw mepc, t0");
    }
}
20401624:	a809                	j	20401636 <handle_trap+0x38>
C:\wsFreedomStudio\kernel_list\src/trap.c:50
        handle_exception(mcause);
20401626:	fec42503          	lw	a0,-20(s0)
2040162a:	3f0d                	jal	2040155c <handle_exception>
C:\wsFreedomStudio\kernel_list\src/trap.c:51
        asm volatile("csrr t0, mepc");
2040162c:	341022f3          	csrr	t0,mepc
C:\wsFreedomStudio\kernel_list\src/trap.c:52
        asm volatile("addi t0, t0, 0x4");
20401630:	0291                	addi	t0,t0,4
C:\wsFreedomStudio\kernel_list\src/trap.c:53
        asm volatile("csrw mepc, t0");
20401632:	34129073          	csrw	mepc,t0
C:\wsFreedomStudio\kernel_list\src/trap.c:55
}
20401636:	0001                	nop
20401638:	40f2                	lw	ra,28(sp)
2040163a:	4462                	lw	s0,24(sp)
2040163c:	6105                	addi	sp,sp,32
2040163e:	8082                	ret

20401640 <osSchedulerLaunch>:
osSchedulerLaunch():
C:\wsFreedomStudio\kernel_list\src/kernel.S:6
.section .text
.global osSchedulerLaunch
.type osSchedulerLaunch, @function
.extern current_ptr
osSchedulerLaunch:
    lw t0, current_ptr   # Load currentPt into T0
20401640:	8e01a283          	lw	t0,-1824(gp) # 80000880 <current_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.S:7
    lw t1, (t0)
20401644:	0002a303          	lw	t1,0(t0)
C:\wsFreedomStudio\kernel_list\src/kernel.S:8
    lw sp, (t0)        # t1 = &t0
20401648:	0002a103          	lw	sp,0(t0)
C:\wsFreedomStudio\kernel_list\src/kernel.S:9
    lw ra, (sp)
2040164c:	4082                	lw	ra,0(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:10
    addi sp, sp, -132   # make a stack frame
2040164e:	f7c10113          	addi	sp,sp,-132
C:\wsFreedomStudio\kernel_list\src/kernel.S:11
    ret
20401652:	8082                	ret

20401654 <switch_to>:
switch_to():
C:\wsFreedomStudio\kernel_list\src/kernel.S:20
.global switch_to
.type switch_to, @function
.align 2
switch_to:

    call handle_trap
20401654:	376d                	jal	204015fe <handle_trap>
C:\wsFreedomStudio\kernel_list\src/kernel.S:21
    mv tp, sp
20401656:	820a                	mv	tp,sp
C:\wsFreedomStudio\kernel_list\src/kernel.S:22
    mv sp, fp
20401658:	8122                	mv	sp,s0
C:\wsFreedomStudio\kernel_list\src/kernel.S:24
    #Push register
    sw ra, (sp)
2040165a:	c006                	sw	ra,0(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:25
    sw sp, 4(sp)
2040165c:	c20a                	sw	sp,4(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:26
    sw gp, 8(sp)
2040165e:	c40e                	sw	gp,8(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:27
    sw tp, 12(sp)
20401660:	c612                	sw	tp,12(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:28
    sw t0, 16(sp)
20401662:	c816                	sw	t0,16(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:29
    sw t1, 20(sp)
20401664:	ca1a                	sw	t1,20(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:30
    sw t2, 24(sp)
20401666:	cc1e                	sw	t2,24(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:31
    sw t3, 28(sp)
20401668:	ce72                	sw	t3,28(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:32
    sw s0, 32(sp)
2040166a:	d022                	sw	s0,32(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:33
    sw s1, 36(sp)
2040166c:	d226                	sw	s1,36(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:34
    sw a0, 40(sp)
2040166e:	d42a                	sw	a0,40(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:35
    sw a1, 44(sp)
20401670:	d62e                	sw	a1,44(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:36
    sw a2, 48(sp)
20401672:	d832                	sw	a2,48(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:37
    sw a3, 52(sp)
20401674:	da36                	sw	a3,52(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:38
    sw a4, 56(sp)
20401676:	dc3a                	sw	a4,56(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:39
    sw a5, 60(sp)
20401678:	de3e                	sw	a5,60(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:40
    sw a6, 64(sp)
2040167a:	c0c2                	sw	a6,64(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:41
    sw a7, 68(sp)
2040167c:	c2c6                	sw	a7,68(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:42
    sw s2, 72(sp)
2040167e:	c4ca                	sw	s2,72(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:43
    sw s3, 76(sp)
20401680:	c6ce                	sw	s3,76(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:44
    sw s4, 80(sp)
20401682:	c8d2                	sw	s4,80(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:45
    sw s5, 84(sp)
20401684:	cad6                	sw	s5,84(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:46
    sw s6, 88(sp)
20401686:	ccda                	sw	s6,88(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:47
    sw s7, 92(sp)
20401688:	cede                	sw	s7,92(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:48
    sw s8, 96(sp)
2040168a:	d0e2                	sw	s8,96(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:49
    sw s9, 100(sp)
2040168c:	d2e6                	sw	s9,100(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:50
    sw s10,104(sp)
2040168e:	d4ea                	sw	s10,104(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:51
    sw s11,108(sp)
20401690:	d6ee                	sw	s11,108(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:52
    sw t3, 112(sp)
20401692:	d8f2                	sw	t3,112(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:53
    sw t4, 116(sp)
20401694:	daf6                	sw	t4,116(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:54
    sw t5, 120(sp)
20401696:	dcfa                	sw	t5,120(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:55
    sw t6, 124(sp)
20401698:	defe                	sw	t6,124(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:56
    csrr t0, mepc
2040169a:	341022f3          	csrr	t0,mepc
C:\wsFreedomStudio\kernel_list\src/kernel.S:57
    sw t0, 132(sp)
2040169e:	c316                	sw	t0,132(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:72
    #addi sp, sp, -132  # make a stack frame
    #lw t0, 132(sp)     # load mepc
    #csrw mepc, t0

    #Switch context in c
    call osSchedulerRoundRobin
204016a0:	392d                	jal	204012da <osSchedulerRoundRobin>
C:\wsFreedomStudio\kernel_list\src/kernel.S:73
    lw t0, current_ptr   # Load currentPt into T0
204016a2:	8e01a283          	lw	t0,-1824(gp) # 80000880 <current_ptr>
C:\wsFreedomStudio\kernel_list\src/kernel.S:74
    lw sp, (t0)
204016a6:	0002a103          	lw	sp,0(t0)
C:\wsFreedomStudio\kernel_list\src/kernel.S:75
    addi sp, sp, -132    # make a stack frame
204016aa:	f7c10113          	addi	sp,sp,-132
C:\wsFreedomStudio\kernel_list\src/kernel.S:76
    lw t0, 132(sp)       # load mepc
204016ae:	429a                	lw	t0,132(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:77
    csrw mepc, t0
204016b0:	34129073          	csrw	mepc,t0
C:\wsFreedomStudio\kernel_list\src/kernel.S:81


    #Pop register
    lw ra, (sp)
204016b4:	4082                	lw	ra,0(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:84
    #lw sp, 4(sp)
    #lw gp, 8(sp)
    lw tp, 12(sp)
204016b6:	4232                	lw	tp,12(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:85
    lw t0, 16(sp)
204016b8:	42c2                	lw	t0,16(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:86
    lw t1, 20(sp)
204016ba:	4352                	lw	t1,20(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:87
    lw t2, 24(sp)
204016bc:	43e2                	lw	t2,24(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:88
    lw t3, 28(sp)
204016be:	4e72                	lw	t3,28(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:89
    lw s0, 32(sp)
204016c0:	5402                	lw	s0,32(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:90
    lw s1, 36(sp)
204016c2:	5492                	lw	s1,36(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:91
    lw a0, 40(sp)
204016c4:	5522                	lw	a0,40(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:92
    lw a1, 44(sp)
204016c6:	55b2                	lw	a1,44(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:93
    lw a2, 48(sp)
204016c8:	5642                	lw	a2,48(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:94
    lw a3, 52(sp)
204016ca:	56d2                	lw	a3,52(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:95
    lw a4, 56(sp)
204016cc:	5762                	lw	a4,56(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:96
    lw a5, 60(sp)
204016ce:	57f2                	lw	a5,60(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:97
    lw a6, 64(sp)
204016d0:	4806                	lw	a6,64(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:98
    lw a7, 68(sp)
204016d2:	4896                	lw	a7,68(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:99
    lw s2, 72(sp)
204016d4:	4926                	lw	s2,72(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:100
    lw s3, 76(sp)
204016d6:	49b6                	lw	s3,76(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:101
    lw s4, 80(sp)
204016d8:	4a46                	lw	s4,80(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:102
    lw s5, 84(sp)
204016da:	4ad6                	lw	s5,84(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:103
    lw s6, 88(sp)
204016dc:	4b66                	lw	s6,88(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:104
    lw s7, 92(sp)
204016de:	4bf6                	lw	s7,92(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:105
    lw s8, 96(sp)
204016e0:	5c06                	lw	s8,96(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:106
    lw s9, 100(sp)
204016e2:	5c96                	lw	s9,100(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:107
    lw s10,104(sp)
204016e4:	5d26                	lw	s10,104(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:108
    lw s11,108(sp)
204016e6:	5db6                	lw	s11,108(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:109
    lw t3, 112(sp)
204016e8:	5e46                	lw	t3,112(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:110
    lw t4, 116(sp)
204016ea:	5ed6                	lw	t4,116(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:111
    lw t5, 120(sp)
204016ec:	5f66                	lw	t5,120(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:112
    lw t6, 124(sp)
204016ee:	5ff6                	lw	t6,124(sp)
C:\wsFreedomStudio\kernel_list\src/kernel.S:114

    mret
204016f0:	30200073          	mret
	...

204016f6 <malloc>:
malloc():
204016f6:	85aa                	mv	a1,a0
204016f8:	5fbff517          	auipc	a0,0x5fbff
204016fc:	0a852503          	lw	a0,168(a0) # 800007a0 <_impure_ptr>
20401700:	a065                	j	204017a8 <_malloc_r>

20401702 <_free_r>:
_free_r():
20401702:	c1d5                	beqz	a1,204017a6 <_free_r+0xa4>
20401704:	ffc5a783          	lw	a5,-4(a1)
20401708:	1101                	addi	sp,sp,-32
2040170a:	cc22                	sw	s0,24(sp)
2040170c:	ce06                	sw	ra,28(sp)
2040170e:	ffc58413          	addi	s0,a1,-4
20401712:	0007d363          	bgez	a5,20401718 <_free_r+0x16>
20401716:	943e                	add	s0,s0,a5
20401718:	c62a                	sw	a0,12(sp)
2040171a:	1fd000ef          	jal	ra,20402116 <__malloc_lock>
2040171e:	5fbff717          	auipc	a4,0x5fbff
20401722:	0be70713          	addi	a4,a4,190 # 800007dc <__malloc_free_list>
20401726:	431c                	lw	a5,0(a4)
20401728:	4532                	lw	a0,12(sp)
2040172a:	eb89                	bnez	a5,2040173c <_free_r+0x3a>
2040172c:	00042223          	sw	zero,4(s0)
20401730:	c300                	sw	s0,0(a4)
20401732:	4462                	lw	s0,24(sp)
20401734:	40f2                	lw	ra,28(sp)
20401736:	6105                	addi	sp,sp,32
20401738:	1e10006f          	j	20402118 <__malloc_unlock>
2040173c:	00f47d63          	bgeu	s0,a5,20401756 <_free_r+0x54>
20401740:	4010                	lw	a2,0(s0)
20401742:	00c406b3          	add	a3,s0,a2
20401746:	00d79663          	bne	a5,a3,20401752 <_free_r+0x50>
2040174a:	4394                	lw	a3,0(a5)
2040174c:	43dc                	lw	a5,4(a5)
2040174e:	96b2                	add	a3,a3,a2
20401750:	c014                	sw	a3,0(s0)
20401752:	c05c                	sw	a5,4(s0)
20401754:	bff1                	j	20401730 <_free_r+0x2e>
20401756:	873e                	mv	a4,a5
20401758:	43dc                	lw	a5,4(a5)
2040175a:	c399                	beqz	a5,20401760 <_free_r+0x5e>
2040175c:	fef47de3          	bgeu	s0,a5,20401756 <_free_r+0x54>
20401760:	4314                	lw	a3,0(a4)
20401762:	00d70633          	add	a2,a4,a3
20401766:	00861f63          	bne	a2,s0,20401784 <_free_r+0x82>
2040176a:	4010                	lw	a2,0(s0)
2040176c:	96b2                	add	a3,a3,a2
2040176e:	c314                	sw	a3,0(a4)
20401770:	00d70633          	add	a2,a4,a3
20401774:	fac79fe3          	bne	a5,a2,20401732 <_free_r+0x30>
20401778:	4390                	lw	a2,0(a5)
2040177a:	43dc                	lw	a5,4(a5)
2040177c:	96b2                	add	a3,a3,a2
2040177e:	c314                	sw	a3,0(a4)
20401780:	c35c                	sw	a5,4(a4)
20401782:	bf45                	j	20401732 <_free_r+0x30>
20401784:	00c47563          	bgeu	s0,a2,2040178e <_free_r+0x8c>
20401788:	47b1                	li	a5,12
2040178a:	c11c                	sw	a5,0(a0)
2040178c:	b75d                	j	20401732 <_free_r+0x30>
2040178e:	4010                	lw	a2,0(s0)
20401790:	00c406b3          	add	a3,s0,a2
20401794:	00d79663          	bne	a5,a3,204017a0 <_free_r+0x9e>
20401798:	4394                	lw	a3,0(a5)
2040179a:	43dc                	lw	a5,4(a5)
2040179c:	96b2                	add	a3,a3,a2
2040179e:	c014                	sw	a3,0(s0)
204017a0:	c05c                	sw	a5,4(s0)
204017a2:	c340                	sw	s0,4(a4)
204017a4:	b779                	j	20401732 <_free_r+0x30>
204017a6:	8082                	ret

204017a8 <_malloc_r>:
_malloc_r():
204017a8:	1101                	addi	sp,sp,-32
204017aa:	ca26                	sw	s1,20(sp)
204017ac:	00358493          	addi	s1,a1,3
204017b0:	98f1                	andi	s1,s1,-4
204017b2:	c84a                	sw	s2,16(sp)
204017b4:	ce06                	sw	ra,28(sp)
204017b6:	cc22                	sw	s0,24(sp)
204017b8:	c64e                	sw	s3,12(sp)
204017ba:	04a1                	addi	s1,s1,8
204017bc:	47b1                	li	a5,12
204017be:	892a                	mv	s2,a0
204017c0:	04f4f663          	bgeu	s1,a5,2040180c <_malloc_r+0x64>
204017c4:	44b1                	li	s1,12
204017c6:	04b4e563          	bltu	s1,a1,20401810 <_malloc_r+0x68>
204017ca:	854a                	mv	a0,s2
204017cc:	14b000ef          	jal	ra,20402116 <__malloc_lock>
204017d0:	5fbff697          	auipc	a3,0x5fbff
204017d4:	00c68693          	addi	a3,a3,12 # 800007dc <__malloc_free_list>
204017d8:	4298                	lw	a4,0(a3)
204017da:	843a                	mv	s0,a4
204017dc:	e429                	bnez	s0,20401826 <_malloc_r+0x7e>
204017de:	5fbff417          	auipc	s0,0x5fbff
204017e2:	00240413          	addi	s0,s0,2 # 800007e0 <__malloc_sbrk_start>
204017e6:	401c                	lw	a5,0(s0)
204017e8:	e789                	bnez	a5,204017f2 <_malloc_r+0x4a>
204017ea:	4581                	li	a1,0
204017ec:	854a                	mv	a0,s2
204017ee:	2a75                	jal	204019aa <_sbrk_r>
204017f0:	c008                	sw	a0,0(s0)
204017f2:	85a6                	mv	a1,s1
204017f4:	854a                	mv	a0,s2
204017f6:	2a55                	jal	204019aa <_sbrk_r>
204017f8:	59fd                	li	s3,-1
204017fa:	07351a63          	bne	a0,s3,2040186e <_malloc_r+0xc6>
204017fe:	47b1                	li	a5,12
20401800:	00f92023          	sw	a5,0(s2)
20401804:	854a                	mv	a0,s2
20401806:	113000ef          	jal	ra,20402118 <__malloc_unlock>
2040180a:	a031                	j	20401816 <_malloc_r+0x6e>
2040180c:	fa04dde3          	bgez	s1,204017c6 <_malloc_r+0x1e>
20401810:	47b1                	li	a5,12
20401812:	00f92023          	sw	a5,0(s2)
20401816:	4501                	li	a0,0
20401818:	40f2                	lw	ra,28(sp)
2040181a:	4462                	lw	s0,24(sp)
2040181c:	44d2                	lw	s1,20(sp)
2040181e:	4942                	lw	s2,16(sp)
20401820:	49b2                	lw	s3,12(sp)
20401822:	6105                	addi	sp,sp,32
20401824:	8082                	ret
20401826:	401c                	lw	a5,0(s0)
20401828:	8f85                	sub	a5,a5,s1
2040182a:	0207cf63          	bltz	a5,20401868 <_malloc_r+0xc0>
2040182e:	462d                	li	a2,11
20401830:	00f67663          	bgeu	a2,a5,2040183c <_malloc_r+0x94>
20401834:	c01c                	sw	a5,0(s0)
20401836:	943e                	add	s0,s0,a5
20401838:	c004                	sw	s1,0(s0)
2040183a:	a029                	j	20401844 <_malloc_r+0x9c>
2040183c:	405c                	lw	a5,4(s0)
2040183e:	02871363          	bne	a4,s0,20401864 <_malloc_r+0xbc>
20401842:	c29c                	sw	a5,0(a3)
20401844:	854a                	mv	a0,s2
20401846:	0d3000ef          	jal	ra,20402118 <__malloc_unlock>
2040184a:	00b40513          	addi	a0,s0,11
2040184e:	00440793          	addi	a5,s0,4
20401852:	9961                	andi	a0,a0,-8
20401854:	40f50733          	sub	a4,a0,a5
20401858:	fcf500e3          	beq	a0,a5,20401818 <_malloc_r+0x70>
2040185c:	943a                	add	s0,s0,a4
2040185e:	8f89                	sub	a5,a5,a0
20401860:	c01c                	sw	a5,0(s0)
20401862:	bf5d                	j	20401818 <_malloc_r+0x70>
20401864:	c35c                	sw	a5,4(a4)
20401866:	bff9                	j	20401844 <_malloc_r+0x9c>
20401868:	8722                	mv	a4,s0
2040186a:	4040                	lw	s0,4(s0)
2040186c:	bf85                	j	204017dc <_malloc_r+0x34>
2040186e:	00350413          	addi	s0,a0,3
20401872:	9871                	andi	s0,s0,-4
20401874:	fc8502e3          	beq	a0,s0,20401838 <_malloc_r+0x90>
20401878:	40a405b3          	sub	a1,s0,a0
2040187c:	854a                	mv	a0,s2
2040187e:	2235                	jal	204019aa <_sbrk_r>
20401880:	fb351ce3          	bne	a0,s3,20401838 <_malloc_r+0x90>
20401884:	bfad                	j	204017fe <_malloc_r+0x56>

20401886 <iprintf>:
printf():
20401886:	715d                	addi	sp,sp,-80
20401888:	d422                	sw	s0,40(sp)
2040188a:	d606                	sw	ra,44(sp)
2040188c:	842a                	mv	s0,a0
2040188e:	da2e                	sw	a1,52(sp)
20401890:	dc32                	sw	a2,56(sp)
20401892:	de36                	sw	a3,60(sp)
20401894:	c0ba                	sw	a4,64(sp)
20401896:	c2be                	sw	a5,68(sp)
20401898:	c4c2                	sw	a6,72(sp)
2040189a:	c6c6                	sw	a7,76(sp)
2040189c:	5fbff517          	auipc	a0,0x5fbff
204018a0:	f0452503          	lw	a0,-252(a0) # 800007a0 <_impure_ptr>
204018a4:	c511                	beqz	a0,204018b0 <iprintf+0x2a>
204018a6:	4d1c                	lw	a5,24(a0)
204018a8:	e781                	bnez	a5,204018b0 <iprintf+0x2a>
204018aa:	c62a                	sw	a0,12(sp)
204018ac:	2ba9                	jal	20401e06 <__sinit>
204018ae:	4532                	lw	a0,12(sp)
204018b0:	450c                	lw	a1,8(a0)
204018b2:	1854                	addi	a3,sp,52
204018b4:	8622                	mv	a2,s0
204018b6:	ce36                	sw	a3,28(sp)
204018b8:	0cf000ef          	jal	ra,20402186 <_vfiprintf_r>
204018bc:	50b2                	lw	ra,44(sp)
204018be:	5422                	lw	s0,40(sp)
204018c0:	6161                	addi	sp,sp,80
204018c2:	8082                	ret

204018c4 <_puts_r>:
_puts_r():
204018c4:	1101                	addi	sp,sp,-32
204018c6:	ca26                	sw	s1,20(sp)
204018c8:	c84a                	sw	s2,16(sp)
204018ca:	ce06                	sw	ra,28(sp)
204018cc:	cc22                	sw	s0,24(sp)
204018ce:	c64e                	sw	s3,12(sp)
204018d0:	c452                	sw	s4,8(sp)
204018d2:	84aa                	mv	s1,a0
204018d4:	892e                	mv	s2,a1
204018d6:	c501                	beqz	a0,204018de <_puts_r+0x1a>
204018d8:	4d1c                	lw	a5,24(a0)
204018da:	e391                	bnez	a5,204018de <_puts_r+0x1a>
204018dc:	232d                	jal	20401e06 <__sinit>
204018de:	4c9c                	lw	a5,24(s1)
204018e0:	4480                	lw	s0,8(s1)
204018e2:	e399                	bnez	a5,204018e8 <_puts_r+0x24>
204018e4:	8526                	mv	a0,s1
204018e6:	2305                	jal	20401e06 <__sinit>
204018e8:	fffff797          	auipc	a5,0xfffff
204018ec:	ae878793          	addi	a5,a5,-1304 # 204003d0 <__sf_fake_stdin>
204018f0:	02f41c63          	bne	s0,a5,20401928 <_puts_r+0x64>
204018f4:	40c0                	lw	s0,4(s1)
204018f6:	00c45783          	lhu	a5,12(s0)
204018fa:	8ba1                	andi	a5,a5,8
204018fc:	c7b1                	beqz	a5,20401948 <_puts_r+0x84>
204018fe:	481c                	lw	a5,16(s0)
20401900:	c7a1                	beqz	a5,20401948 <_puts_r+0x84>
20401902:	59fd                	li	s3,-1
20401904:	4a29                	li	s4,10
20401906:	441c                	lw	a5,8(s0)
20401908:	00094583          	lbu	a1,0(s2)
2040190c:	17fd                	addi	a5,a5,-1
2040190e:	e9b1                	bnez	a1,20401962 <_puts_r+0x9e>
20401910:	c41c                	sw	a5,8(s0)
20401912:	0607de63          	bgez	a5,2040198e <_puts_r+0xca>
20401916:	8622                	mv	a2,s0
20401918:	45a9                	li	a1,10
2040191a:	8526                	mv	a0,s1
2040191c:	287d                	jal	204019da <__swbuf_r>
2040191e:	57fd                	li	a5,-1
20401920:	02f50863          	beq	a0,a5,20401950 <_puts_r+0x8c>
20401924:	4529                	li	a0,10
20401926:	a035                	j	20401952 <_puts_r+0x8e>
20401928:	fffff797          	auipc	a5,0xfffff
2040192c:	ac878793          	addi	a5,a5,-1336 # 204003f0 <__sf_fake_stdout>
20401930:	00f41463          	bne	s0,a5,20401938 <_puts_r+0x74>
20401934:	4480                	lw	s0,8(s1)
20401936:	b7c1                	j	204018f6 <_puts_r+0x32>
20401938:	fffff797          	auipc	a5,0xfffff
2040193c:	a7878793          	addi	a5,a5,-1416 # 204003b0 <__sf_fake_stderr>
20401940:	faf41be3          	bne	s0,a5,204018f6 <_puts_r+0x32>
20401944:	44c0                	lw	s0,12(s1)
20401946:	bf45                	j	204018f6 <_puts_r+0x32>
20401948:	85a2                	mv	a1,s0
2040194a:	8526                	mv	a0,s1
2040194c:	22b9                	jal	20401a9a <__swsetup_r>
2040194e:	d955                	beqz	a0,20401902 <_puts_r+0x3e>
20401950:	557d                	li	a0,-1
20401952:	40f2                	lw	ra,28(sp)
20401954:	4462                	lw	s0,24(sp)
20401956:	44d2                	lw	s1,20(sp)
20401958:	4942                	lw	s2,16(sp)
2040195a:	49b2                	lw	s3,12(sp)
2040195c:	4a22                	lw	s4,8(sp)
2040195e:	6105                	addi	sp,sp,32
20401960:	8082                	ret
20401962:	c41c                	sw	a5,8(s0)
20401964:	0905                	addi	s2,s2,1
20401966:	0007d763          	bgez	a5,20401974 <_puts_r+0xb0>
2040196a:	4c18                	lw	a4,24(s0)
2040196c:	00e7cb63          	blt	a5,a4,20401982 <_puts_r+0xbe>
20401970:	01458963          	beq	a1,s4,20401982 <_puts_r+0xbe>
20401974:	401c                	lw	a5,0(s0)
20401976:	00178713          	addi	a4,a5,1
2040197a:	c018                	sw	a4,0(s0)
2040197c:	00b78023          	sb	a1,0(a5)
20401980:	b759                	j	20401906 <_puts_r+0x42>
20401982:	8622                	mv	a2,s0
20401984:	8526                	mv	a0,s1
20401986:	2891                	jal	204019da <__swbuf_r>
20401988:	f7351fe3          	bne	a0,s3,20401906 <_puts_r+0x42>
2040198c:	b7d1                	j	20401950 <_puts_r+0x8c>
2040198e:	401c                	lw	a5,0(s0)
20401990:	00178713          	addi	a4,a5,1
20401994:	c018                	sw	a4,0(s0)
20401996:	4729                	li	a4,10
20401998:	00e78023          	sb	a4,0(a5)
2040199c:	b761                	j	20401924 <_puts_r+0x60>

2040199e <puts>:
puts():
2040199e:	85aa                	mv	a1,a0
204019a0:	5fbff517          	auipc	a0,0x5fbff
204019a4:	e0052503          	lw	a0,-512(a0) # 800007a0 <_impure_ptr>
204019a8:	bf31                	j	204018c4 <_puts_r>

204019aa <_sbrk_r>:
_sbrk_r():
204019aa:	1141                	addi	sp,sp,-16
204019ac:	c422                	sw	s0,8(sp)
204019ae:	842a                	mv	s0,a0
204019b0:	852e                	mv	a0,a1
204019b2:	5fbff797          	auipc	a5,0x5fbff
204019b6:	e207a923          	sw	zero,-462(a5) # 800007e4 <errno>
204019ba:	c606                	sw	ra,12(sp)
204019bc:	08c010ef          	jal	ra,20402a48 <_sbrk>
204019c0:	57fd                	li	a5,-1
204019c2:	00f51863          	bne	a0,a5,204019d2 <_sbrk_r+0x28>
204019c6:	5fbff797          	auipc	a5,0x5fbff
204019ca:	e1e7a783          	lw	a5,-482(a5) # 800007e4 <errno>
204019ce:	c391                	beqz	a5,204019d2 <_sbrk_r+0x28>
204019d0:	c01c                	sw	a5,0(s0)
204019d2:	40b2                	lw	ra,12(sp)
204019d4:	4422                	lw	s0,8(sp)
204019d6:	0141                	addi	sp,sp,16
204019d8:	8082                	ret

204019da <__swbuf_r>:
__swbuf_r():
204019da:	1101                	addi	sp,sp,-32
204019dc:	cc22                	sw	s0,24(sp)
204019de:	ca26                	sw	s1,20(sp)
204019e0:	c84a                	sw	s2,16(sp)
204019e2:	ce06                	sw	ra,28(sp)
204019e4:	c64e                	sw	s3,12(sp)
204019e6:	84aa                	mv	s1,a0
204019e8:	892e                	mv	s2,a1
204019ea:	8432                	mv	s0,a2
204019ec:	c501                	beqz	a0,204019f4 <__swbuf_r+0x1a>
204019ee:	4d1c                	lw	a5,24(a0)
204019f0:	e391                	bnez	a5,204019f4 <__swbuf_r+0x1a>
204019f2:	2911                	jal	20401e06 <__sinit>
204019f4:	fffff797          	auipc	a5,0xfffff
204019f8:	9dc78793          	addi	a5,a5,-1572 # 204003d0 <__sf_fake_stdin>
204019fc:	06f41963          	bne	s0,a5,20401a6e <__swbuf_r+0x94>
20401a00:	40c0                	lw	s0,4(s1)
20401a02:	4c1c                	lw	a5,24(s0)
20401a04:	c41c                	sw	a5,8(s0)
20401a06:	00c45783          	lhu	a5,12(s0)
20401a0a:	8ba1                	andi	a5,a5,8
20401a0c:	c3c9                	beqz	a5,20401a8e <__swbuf_r+0xb4>
20401a0e:	481c                	lw	a5,16(s0)
20401a10:	cfbd                	beqz	a5,20401a8e <__swbuf_r+0xb4>
20401a12:	481c                	lw	a5,16(s0)
20401a14:	4008                	lw	a0,0(s0)
20401a16:	0ff97993          	zext.b	s3,s2
20401a1a:	0ff97913          	zext.b	s2,s2
20401a1e:	8d1d                	sub	a0,a0,a5
20401a20:	485c                	lw	a5,20(s0)
20401a22:	00f54663          	blt	a0,a5,20401a2e <__swbuf_r+0x54>
20401a26:	85a2                	mv	a1,s0
20401a28:	8526                	mv	a0,s1
20401a2a:	24c1                	jal	20401cea <_fflush_r>
20401a2c:	e52d                	bnez	a0,20401a96 <__swbuf_r+0xbc>
20401a2e:	441c                	lw	a5,8(s0)
20401a30:	0505                	addi	a0,a0,1
20401a32:	17fd                	addi	a5,a5,-1
20401a34:	c41c                	sw	a5,8(s0)
20401a36:	401c                	lw	a5,0(s0)
20401a38:	00178713          	addi	a4,a5,1
20401a3c:	c018                	sw	a4,0(s0)
20401a3e:	01378023          	sb	s3,0(a5)
20401a42:	485c                	lw	a5,20(s0)
20401a44:	00a78963          	beq	a5,a0,20401a56 <__swbuf_r+0x7c>
20401a48:	00c45783          	lhu	a5,12(s0)
20401a4c:	8b85                	andi	a5,a5,1
20401a4e:	cb81                	beqz	a5,20401a5e <__swbuf_r+0x84>
20401a50:	47a9                	li	a5,10
20401a52:	00f91663          	bne	s2,a5,20401a5e <__swbuf_r+0x84>
20401a56:	85a2                	mv	a1,s0
20401a58:	8526                	mv	a0,s1
20401a5a:	2c41                	jal	20401cea <_fflush_r>
20401a5c:	ed0d                	bnez	a0,20401a96 <__swbuf_r+0xbc>
20401a5e:	40f2                	lw	ra,28(sp)
20401a60:	4462                	lw	s0,24(sp)
20401a62:	44d2                	lw	s1,20(sp)
20401a64:	49b2                	lw	s3,12(sp)
20401a66:	854a                	mv	a0,s2
20401a68:	4942                	lw	s2,16(sp)
20401a6a:	6105                	addi	sp,sp,32
20401a6c:	8082                	ret
20401a6e:	fffff797          	auipc	a5,0xfffff
20401a72:	98278793          	addi	a5,a5,-1662 # 204003f0 <__sf_fake_stdout>
20401a76:	00f41463          	bne	s0,a5,20401a7e <__swbuf_r+0xa4>
20401a7a:	4480                	lw	s0,8(s1)
20401a7c:	b759                	j	20401a02 <__swbuf_r+0x28>
20401a7e:	fffff797          	auipc	a5,0xfffff
20401a82:	93278793          	addi	a5,a5,-1742 # 204003b0 <__sf_fake_stderr>
20401a86:	f6f41ee3          	bne	s0,a5,20401a02 <__swbuf_r+0x28>
20401a8a:	44c0                	lw	s0,12(s1)
20401a8c:	bf9d                	j	20401a02 <__swbuf_r+0x28>
20401a8e:	85a2                	mv	a1,s0
20401a90:	8526                	mv	a0,s1
20401a92:	2021                	jal	20401a9a <__swsetup_r>
20401a94:	dd3d                	beqz	a0,20401a12 <__swbuf_r+0x38>
20401a96:	597d                	li	s2,-1
20401a98:	b7d9                	j	20401a5e <__swbuf_r+0x84>

20401a9a <__swsetup_r>:
__swsetup_r():
20401a9a:	1141                	addi	sp,sp,-16
20401a9c:	c422                	sw	s0,8(sp)
20401a9e:	c226                	sw	s1,4(sp)
20401aa0:	c04a                	sw	s2,0(sp)
20401aa2:	c606                	sw	ra,12(sp)
20401aa4:	5fbff497          	auipc	s1,0x5fbff
20401aa8:	cfc4a483          	lw	s1,-772(s1) # 800007a0 <_impure_ptr>
20401aac:	892a                	mv	s2,a0
20401aae:	842e                	mv	s0,a1
20401ab0:	c489                	beqz	s1,20401aba <__swsetup_r+0x20>
20401ab2:	4c9c                	lw	a5,24(s1)
20401ab4:	e399                	bnez	a5,20401aba <__swsetup_r+0x20>
20401ab6:	8526                	mv	a0,s1
20401ab8:	26b9                	jal	20401e06 <__sinit>
20401aba:	fffff797          	auipc	a5,0xfffff
20401abe:	91678793          	addi	a5,a5,-1770 # 204003d0 <__sf_fake_stdin>
20401ac2:	02f41763          	bne	s0,a5,20401af0 <__swsetup_r+0x56>
20401ac6:	40c0                	lw	s0,4(s1)
20401ac8:	00c41783          	lh	a5,12(s0)
20401acc:	01079713          	slli	a4,a5,0x10
20401ad0:	0087f693          	andi	a3,a5,8
20401ad4:	8341                	srli	a4,a4,0x10
20401ad6:	eaad                	bnez	a3,20401b48 <__swsetup_r+0xae>
20401ad8:	01077693          	andi	a3,a4,16
20401adc:	ea95                	bnez	a3,20401b10 <__swsetup_r+0x76>
20401ade:	4725                	li	a4,9
20401ae0:	00e92023          	sw	a4,0(s2)
20401ae4:	0407e793          	ori	a5,a5,64
20401ae8:	00f41623          	sh	a5,12(s0)
20401aec:	557d                	li	a0,-1
20401aee:	a871                	j	20401b8a <__swsetup_r+0xf0>
20401af0:	fffff797          	auipc	a5,0xfffff
20401af4:	90078793          	addi	a5,a5,-1792 # 204003f0 <__sf_fake_stdout>
20401af8:	00f41463          	bne	s0,a5,20401b00 <__swsetup_r+0x66>
20401afc:	4480                	lw	s0,8(s1)
20401afe:	b7e9                	j	20401ac8 <__swsetup_r+0x2e>
20401b00:	fffff797          	auipc	a5,0xfffff
20401b04:	8b078793          	addi	a5,a5,-1872 # 204003b0 <__sf_fake_stderr>
20401b08:	fcf410e3          	bne	s0,a5,20401ac8 <__swsetup_r+0x2e>
20401b0c:	44c0                	lw	s0,12(s1)
20401b0e:	bf6d                	j	20401ac8 <__swsetup_r+0x2e>
20401b10:	8b11                	andi	a4,a4,4
20401b12:	c70d                	beqz	a4,20401b3c <__swsetup_r+0xa2>
20401b14:	584c                	lw	a1,52(s0)
20401b16:	c989                	beqz	a1,20401b28 <__swsetup_r+0x8e>
20401b18:	04440793          	addi	a5,s0,68
20401b1c:	00f58463          	beq	a1,a5,20401b24 <__swsetup_r+0x8a>
20401b20:	854a                	mv	a0,s2
20401b22:	36c5                	jal	20401702 <_free_r>
20401b24:	02042a23          	sw	zero,52(s0)
20401b28:	00c45783          	lhu	a5,12(s0)
20401b2c:	00042223          	sw	zero,4(s0)
20401b30:	fdb7f793          	andi	a5,a5,-37
20401b34:	00f41623          	sh	a5,12(s0)
20401b38:	481c                	lw	a5,16(s0)
20401b3a:	c01c                	sw	a5,0(s0)
20401b3c:	00c45783          	lhu	a5,12(s0)
20401b40:	0087e793          	ori	a5,a5,8
20401b44:	00f41623          	sh	a5,12(s0)
20401b48:	481c                	lw	a5,16(s0)
20401b4a:	ef81                	bnez	a5,20401b62 <__swsetup_r+0xc8>
20401b4c:	00c45783          	lhu	a5,12(s0)
20401b50:	20000713          	li	a4,512
20401b54:	2807f793          	andi	a5,a5,640
20401b58:	00e78563          	beq	a5,a4,20401b62 <__swsetup_r+0xc8>
20401b5c:	85a2                	mv	a1,s0
20401b5e:	854a                	mv	a0,s2
20401b60:	2985                	jal	20401fd0 <__smakebuf_r>
20401b62:	00c41783          	lh	a5,12(s0)
20401b66:	01079713          	slli	a4,a5,0x10
20401b6a:	0017f693          	andi	a3,a5,1
20401b6e:	8341                	srli	a4,a4,0x10
20401b70:	c29d                	beqz	a3,20401b96 <__swsetup_r+0xfc>
20401b72:	4854                	lw	a3,20(s0)
20401b74:	00042423          	sw	zero,8(s0)
20401b78:	40d006b3          	neg	a3,a3
20401b7c:	cc14                	sw	a3,24(s0)
20401b7e:	4814                	lw	a3,16(s0)
20401b80:	4501                	li	a0,0
20401b82:	e681                	bnez	a3,20401b8a <__swsetup_r+0xf0>
20401b84:	08077713          	andi	a4,a4,128
20401b88:	ff31                	bnez	a4,20401ae4 <__swsetup_r+0x4a>
20401b8a:	40b2                	lw	ra,12(sp)
20401b8c:	4422                	lw	s0,8(sp)
20401b8e:	4492                	lw	s1,4(sp)
20401b90:	4902                	lw	s2,0(sp)
20401b92:	0141                	addi	sp,sp,16
20401b94:	8082                	ret
20401b96:	00277693          	andi	a3,a4,2
20401b9a:	4601                	li	a2,0
20401b9c:	e291                	bnez	a3,20401ba0 <__swsetup_r+0x106>
20401b9e:	4850                	lw	a2,20(s0)
20401ba0:	c410                	sw	a2,8(s0)
20401ba2:	bff1                	j	20401b7e <__swsetup_r+0xe4>

20401ba4 <__sflush_r>:
__sflush_r():
20401ba4:	00c5d783          	lhu	a5,12(a1)
20401ba8:	1101                	addi	sp,sp,-32
20401baa:	cc22                	sw	s0,24(sp)
20401bac:	ca26                	sw	s1,20(sp)
20401bae:	ce06                	sw	ra,28(sp)
20401bb0:	c84a                	sw	s2,16(sp)
20401bb2:	c64e                	sw	s3,12(sp)
20401bb4:	0087f713          	andi	a4,a5,8
20401bb8:	84aa                	mv	s1,a0
20401bba:	842e                	mv	s0,a1
20401bbc:	e375                	bnez	a4,20401ca0 <__sflush_r+0xfc>
20401bbe:	41d8                	lw	a4,4(a1)
20401bc0:	00e04763          	bgtz	a4,20401bce <__sflush_r+0x2a>
20401bc4:	41b8                	lw	a4,64(a1)
20401bc6:	00e04463          	bgtz	a4,20401bce <__sflush_r+0x2a>
20401bca:	4501                	li	a0,0
20401bcc:	a875                	j	20401c88 <__sflush_r+0xe4>
20401bce:	5458                	lw	a4,44(s0)
20401bd0:	df6d                	beqz	a4,20401bca <__sflush_r+0x26>
20401bd2:	6685                	lui	a3,0x1
20401bd4:	0004a903          	lw	s2,0(s1)
20401bd8:	8ff5                	and	a5,a5,a3
20401bda:	0004a023          	sw	zero,0(s1)
20401bde:	cfa5                	beqz	a5,20401c56 <__sflush_r+0xb2>
20401be0:	4868                	lw	a0,84(s0)
20401be2:	00c45783          	lhu	a5,12(s0)
20401be6:	8b91                	andi	a5,a5,4
20401be8:	c799                	beqz	a5,20401bf6 <__sflush_r+0x52>
20401bea:	405c                	lw	a5,4(s0)
20401bec:	8d1d                	sub	a0,a0,a5
20401bee:	585c                	lw	a5,52(s0)
20401bf0:	c399                	beqz	a5,20401bf6 <__sflush_r+0x52>
20401bf2:	403c                	lw	a5,64(s0)
20401bf4:	8d1d                	sub	a0,a0,a5
20401bf6:	545c                	lw	a5,44(s0)
20401bf8:	500c                	lw	a1,32(s0)
20401bfa:	862a                	mv	a2,a0
20401bfc:	4681                	li	a3,0
20401bfe:	8526                	mv	a0,s1
20401c00:	9782                	jalr	a5
20401c02:	57fd                	li	a5,-1
20401c04:	00c45703          	lhu	a4,12(s0)
20401c08:	00f51d63          	bne	a0,a5,20401c22 <__sflush_r+0x7e>
20401c0c:	4094                	lw	a3,0(s1)
20401c0e:	47f5                	li	a5,29
20401c10:	08d7e363          	bltu	a5,a3,20401c96 <__sflush_r+0xf2>
20401c14:	204007b7          	lui	a5,0x20400
20401c18:	0785                	addi	a5,a5,1
20401c1a:	00d7d7b3          	srl	a5,a5,a3
20401c1e:	8b85                	andi	a5,a5,1
20401c20:	cbbd                	beqz	a5,20401c96 <__sflush_r+0xf2>
20401c22:	481c                	lw	a5,16(s0)
20401c24:	00042223          	sw	zero,4(s0)
20401c28:	c01c                	sw	a5,0(s0)
20401c2a:	6785                	lui	a5,0x1
20401c2c:	8f7d                	and	a4,a4,a5
20401c2e:	c719                	beqz	a4,20401c3c <__sflush_r+0x98>
20401c30:	57fd                	li	a5,-1
20401c32:	00f51463          	bne	a0,a5,20401c3a <__sflush_r+0x96>
20401c36:	409c                	lw	a5,0(s1)
20401c38:	e391                	bnez	a5,20401c3c <__sflush_r+0x98>
20401c3a:	c868                	sw	a0,84(s0)
20401c3c:	584c                	lw	a1,52(s0)
20401c3e:	0124a023          	sw	s2,0(s1)
20401c42:	d5c1                	beqz	a1,20401bca <__sflush_r+0x26>
20401c44:	04440793          	addi	a5,s0,68
20401c48:	00f58463          	beq	a1,a5,20401c50 <__sflush_r+0xac>
20401c4c:	8526                	mv	a0,s1
20401c4e:	3c55                	jal	20401702 <_free_r>
20401c50:	02042a23          	sw	zero,52(s0)
20401c54:	bf9d                	j	20401bca <__sflush_r+0x26>
20401c56:	500c                	lw	a1,32(s0)
20401c58:	4685                	li	a3,1
20401c5a:	4601                	li	a2,0
20401c5c:	8526                	mv	a0,s1
20401c5e:	9702                	jalr	a4
20401c60:	57fd                	li	a5,-1
20401c62:	f8f510e3          	bne	a0,a5,20401be2 <__sflush_r+0x3e>
20401c66:	409c                	lw	a5,0(s1)
20401c68:	dfad                	beqz	a5,20401be2 <__sflush_r+0x3e>
20401c6a:	4775                	li	a4,29
20401c6c:	00e78563          	beq	a5,a4,20401c76 <__sflush_r+0xd2>
20401c70:	4759                	li	a4,22
20401c72:	00e79563          	bne	a5,a4,20401c7c <__sflush_r+0xd8>
20401c76:	0124a023          	sw	s2,0(s1)
20401c7a:	bf81                	j	20401bca <__sflush_r+0x26>
20401c7c:	00c45783          	lhu	a5,12(s0)
20401c80:	0407e793          	ori	a5,a5,64
20401c84:	00f41623          	sh	a5,12(s0)
20401c88:	40f2                	lw	ra,28(sp)
20401c8a:	4462                	lw	s0,24(sp)
20401c8c:	44d2                	lw	s1,20(sp)
20401c8e:	4942                	lw	s2,16(sp)
20401c90:	49b2                	lw	s3,12(sp)
20401c92:	6105                	addi	sp,sp,32
20401c94:	8082                	ret
20401c96:	04076713          	ori	a4,a4,64
20401c9a:	00e41623          	sh	a4,12(s0)
20401c9e:	b7ed                	j	20401c88 <__sflush_r+0xe4>
20401ca0:	0105a983          	lw	s3,16(a1)
20401ca4:	f20983e3          	beqz	s3,20401bca <__sflush_r+0x26>
20401ca8:	0005a903          	lw	s2,0(a1)
20401cac:	8b8d                	andi	a5,a5,3
20401cae:	0135a023          	sw	s3,0(a1)
20401cb2:	41390933          	sub	s2,s2,s3
20401cb6:	4701                	li	a4,0
20401cb8:	e391                	bnez	a5,20401cbc <__sflush_r+0x118>
20401cba:	49d8                	lw	a4,20(a1)
20401cbc:	c418                	sw	a4,8(s0)
20401cbe:	f12056e3          	blez	s2,20401bca <__sflush_r+0x26>
20401cc2:	541c                	lw	a5,40(s0)
20401cc4:	500c                	lw	a1,32(s0)
20401cc6:	86ca                	mv	a3,s2
20401cc8:	864e                	mv	a2,s3
20401cca:	8526                	mv	a0,s1
20401ccc:	9782                	jalr	a5
20401cce:	00a04a63          	bgtz	a0,20401ce2 <__sflush_r+0x13e>
20401cd2:	00c45783          	lhu	a5,12(s0)
20401cd6:	557d                	li	a0,-1
20401cd8:	0407e793          	ori	a5,a5,64
20401cdc:	00f41623          	sh	a5,12(s0)
20401ce0:	b765                	j	20401c88 <__sflush_r+0xe4>
20401ce2:	99aa                	add	s3,s3,a0
20401ce4:	40a90933          	sub	s2,s2,a0
20401ce8:	bfd9                	j	20401cbe <__sflush_r+0x11a>

20401cea <_fflush_r>:
_fflush_r():
20401cea:	499c                	lw	a5,16(a1)
20401cec:	cfb9                	beqz	a5,20401d4a <_fflush_r+0x60>
20401cee:	1101                	addi	sp,sp,-32
20401cf0:	cc22                	sw	s0,24(sp)
20401cf2:	ce06                	sw	ra,28(sp)
20401cf4:	842a                	mv	s0,a0
20401cf6:	c511                	beqz	a0,20401d02 <_fflush_r+0x18>
20401cf8:	4d1c                	lw	a5,24(a0)
20401cfa:	e781                	bnez	a5,20401d02 <_fflush_r+0x18>
20401cfc:	c62e                	sw	a1,12(sp)
20401cfe:	2221                	jal	20401e06 <__sinit>
20401d00:	45b2                	lw	a1,12(sp)
20401d02:	ffffe797          	auipc	a5,0xffffe
20401d06:	6ce78793          	addi	a5,a5,1742 # 204003d0 <__sf_fake_stdin>
20401d0a:	00f59b63          	bne	a1,a5,20401d20 <_fflush_r+0x36>
20401d0e:	404c                	lw	a1,4(s0)
20401d10:	00c59783          	lh	a5,12(a1)
20401d14:	c795                	beqz	a5,20401d40 <_fflush_r+0x56>
20401d16:	8522                	mv	a0,s0
20401d18:	4462                	lw	s0,24(sp)
20401d1a:	40f2                	lw	ra,28(sp)
20401d1c:	6105                	addi	sp,sp,32
20401d1e:	b559                	j	20401ba4 <__sflush_r>
20401d20:	ffffe797          	auipc	a5,0xffffe
20401d24:	6d078793          	addi	a5,a5,1744 # 204003f0 <__sf_fake_stdout>
20401d28:	00f59463          	bne	a1,a5,20401d30 <_fflush_r+0x46>
20401d2c:	440c                	lw	a1,8(s0)
20401d2e:	b7cd                	j	20401d10 <_fflush_r+0x26>
20401d30:	ffffe797          	auipc	a5,0xffffe
20401d34:	68078793          	addi	a5,a5,1664 # 204003b0 <__sf_fake_stderr>
20401d38:	fcf59ce3          	bne	a1,a5,20401d10 <_fflush_r+0x26>
20401d3c:	444c                	lw	a1,12(s0)
20401d3e:	bfc9                	j	20401d10 <_fflush_r+0x26>
20401d40:	40f2                	lw	ra,28(sp)
20401d42:	4462                	lw	s0,24(sp)
20401d44:	4501                	li	a0,0
20401d46:	6105                	addi	sp,sp,32
20401d48:	8082                	ret
20401d4a:	4501                	li	a0,0
20401d4c:	8082                	ret

20401d4e <std>:
std():
20401d4e:	1141                	addi	sp,sp,-16
20401d50:	c422                	sw	s0,8(sp)
20401d52:	c606                	sw	ra,12(sp)
20401d54:	842a                	mv	s0,a0
20401d56:	00b51623          	sh	a1,12(a0)
20401d5a:	00c51723          	sh	a2,14(a0)
20401d5e:	00052023          	sw	zero,0(a0)
20401d62:	00052223          	sw	zero,4(a0)
20401d66:	00052423          	sw	zero,8(a0)
20401d6a:	06052223          	sw	zero,100(a0)
20401d6e:	00052823          	sw	zero,16(a0)
20401d72:	00052a23          	sw	zero,20(a0)
20401d76:	00052c23          	sw	zero,24(a0)
20401d7a:	4621                	li	a2,8
20401d7c:	4581                	li	a1,0
20401d7e:	05c50513          	addi	a0,a0,92
20401d82:	24f5                	jal	2040206e <memset>
20401d84:	00000797          	auipc	a5,0x0
20401d88:	69678793          	addi	a5,a5,1686 # 2040241a <__sread>
20401d8c:	d05c                	sw	a5,36(s0)
20401d8e:	00000797          	auipc	a5,0x0
20401d92:	6bc78793          	addi	a5,a5,1724 # 2040244a <__swrite>
20401d96:	d41c                	sw	a5,40(s0)
20401d98:	00000797          	auipc	a5,0x0
20401d9c:	70078793          	addi	a5,a5,1792 # 20402498 <__sseek>
20401da0:	d45c                	sw	a5,44(s0)
20401da2:	00000797          	auipc	a5,0x0
20401da6:	72c78793          	addi	a5,a5,1836 # 204024ce <__sclose>
20401daa:	40b2                	lw	ra,12(sp)
20401dac:	d000                	sw	s0,32(s0)
20401dae:	d81c                	sw	a5,48(s0)
20401db0:	4422                	lw	s0,8(sp)
20401db2:	0141                	addi	sp,sp,16
20401db4:	8082                	ret

20401db6 <_cleanup_r>:
_cleanup_r():
20401db6:	00000597          	auipc	a1,0x0
20401dba:	f3458593          	addi	a1,a1,-204 # 20401cea <_fflush_r>
20401dbe:	a2b9                	j	20401f0c <_fwalk_reent>

20401dc0 <__sfmoreglue>:
__sfmoreglue():
20401dc0:	1141                	addi	sp,sp,-16
20401dc2:	c226                	sw	s1,4(sp)
20401dc4:	06800613          	li	a2,104
20401dc8:	fff58493          	addi	s1,a1,-1
20401dcc:	02c484b3          	mul	s1,s1,a2
20401dd0:	c04a                	sw	s2,0(sp)
20401dd2:	892e                	mv	s2,a1
20401dd4:	c422                	sw	s0,8(sp)
20401dd6:	c606                	sw	ra,12(sp)
20401dd8:	07448593          	addi	a1,s1,116
20401ddc:	9cdff0ef          	jal	ra,204017a8 <_malloc_r>
20401de0:	842a                	mv	s0,a0
20401de2:	c919                	beqz	a0,20401df8 <__sfmoreglue+0x38>
20401de4:	00052023          	sw	zero,0(a0)
20401de8:	01252223          	sw	s2,4(a0)
20401dec:	0531                	addi	a0,a0,12
20401dee:	c408                	sw	a0,8(s0)
20401df0:	06848613          	addi	a2,s1,104
20401df4:	4581                	li	a1,0
20401df6:	2ca5                	jal	2040206e <memset>
20401df8:	40b2                	lw	ra,12(sp)
20401dfa:	8522                	mv	a0,s0
20401dfc:	4422                	lw	s0,8(sp)
20401dfe:	4492                	lw	s1,4(sp)
20401e00:	4902                	lw	s2,0(sp)
20401e02:	0141                	addi	sp,sp,16
20401e04:	8082                	ret

20401e06 <__sinit>:
__sinit():
20401e06:	4d1c                	lw	a5,24(a0)
20401e08:	e3bd                	bnez	a5,20401e6e <__sinit+0x68>
20401e0a:	1141                	addi	sp,sp,-16
20401e0c:	c422                	sw	s0,8(sp)
20401e0e:	c606                	sw	ra,12(sp)
20401e10:	00000797          	auipc	a5,0x0
20401e14:	fa678793          	addi	a5,a5,-90 # 20401db6 <_cleanup_r>
20401e18:	d51c                	sw	a5,40(a0)
20401e1a:	04052423          	sw	zero,72(a0)
20401e1e:	04052623          	sw	zero,76(a0)
20401e22:	04052823          	sw	zero,80(a0)
20401e26:	fffff797          	auipc	a5,0xfffff
20401e2a:	1ca7a783          	lw	a5,458(a5) # 20400ff0 <_global_impure_ptr>
20401e2e:	842a                	mv	s0,a0
20401e30:	00f51463          	bne	a0,a5,20401e38 <__sinit+0x32>
20401e34:	4785                	li	a5,1
20401e36:	cd1c                	sw	a5,24(a0)
20401e38:	8522                	mv	a0,s0
20401e3a:	281d                	jal	20401e70 <__sfp>
20401e3c:	c048                	sw	a0,4(s0)
20401e3e:	8522                	mv	a0,s0
20401e40:	2805                	jal	20401e70 <__sfp>
20401e42:	c408                	sw	a0,8(s0)
20401e44:	8522                	mv	a0,s0
20401e46:	202d                	jal	20401e70 <__sfp>
20401e48:	c448                	sw	a0,12(s0)
20401e4a:	4048                	lw	a0,4(s0)
20401e4c:	4601                	li	a2,0
20401e4e:	4591                	li	a1,4
20401e50:	3dfd                	jal	20401d4e <std>
20401e52:	4408                	lw	a0,8(s0)
20401e54:	4605                	li	a2,1
20401e56:	45a5                	li	a1,9
20401e58:	3ddd                	jal	20401d4e <std>
20401e5a:	4448                	lw	a0,12(s0)
20401e5c:	4609                	li	a2,2
20401e5e:	45c9                	li	a1,18
20401e60:	35fd                	jal	20401d4e <std>
20401e62:	4785                	li	a5,1
20401e64:	40b2                	lw	ra,12(sp)
20401e66:	cc1c                	sw	a5,24(s0)
20401e68:	4422                	lw	s0,8(sp)
20401e6a:	0141                	addi	sp,sp,16
20401e6c:	8082                	ret
20401e6e:	8082                	ret

20401e70 <__sfp>:
__sfp():
20401e70:	1141                	addi	sp,sp,-16
20401e72:	c226                	sw	s1,4(sp)
20401e74:	fffff497          	auipc	s1,0xfffff
20401e78:	17c4a483          	lw	s1,380(s1) # 20400ff0 <_global_impure_ptr>
20401e7c:	4c9c                	lw	a5,24(s1)
20401e7e:	c04a                	sw	s2,0(sp)
20401e80:	c606                	sw	ra,12(sp)
20401e82:	c422                	sw	s0,8(sp)
20401e84:	892a                	mv	s2,a0
20401e86:	e399                	bnez	a5,20401e8c <__sfp+0x1c>
20401e88:	8526                	mv	a0,s1
20401e8a:	3fb5                	jal	20401e06 <__sinit>
20401e8c:	04848493          	addi	s1,s1,72
20401e90:	4480                	lw	s0,8(s1)
20401e92:	40dc                	lw	a5,4(s1)
20401e94:	17fd                	addi	a5,a5,-1
20401e96:	0007d663          	bgez	a5,20401ea2 <__sfp+0x32>
20401e9a:	409c                	lw	a5,0(s1)
20401e9c:	cfb1                	beqz	a5,20401ef8 <__sfp+0x88>
20401e9e:	4084                	lw	s1,0(s1)
20401ea0:	bfc5                	j	20401e90 <__sfp+0x20>
20401ea2:	00c41703          	lh	a4,12(s0)
20401ea6:	e731                	bnez	a4,20401ef2 <__sfp+0x82>
20401ea8:	77c1                	lui	a5,0xffff0
20401eaa:	0785                	addi	a5,a5,1
20401eac:	06042223          	sw	zero,100(s0)
20401eb0:	00042023          	sw	zero,0(s0)
20401eb4:	00042223          	sw	zero,4(s0)
20401eb8:	00042423          	sw	zero,8(s0)
20401ebc:	c45c                	sw	a5,12(s0)
20401ebe:	00042823          	sw	zero,16(s0)
20401ec2:	00042a23          	sw	zero,20(s0)
20401ec6:	00042c23          	sw	zero,24(s0)
20401eca:	4621                	li	a2,8
20401ecc:	4581                	li	a1,0
20401ece:	05c40513          	addi	a0,s0,92
20401ed2:	2a71                	jal	2040206e <memset>
20401ed4:	02042a23          	sw	zero,52(s0)
20401ed8:	02042c23          	sw	zero,56(s0)
20401edc:	04042423          	sw	zero,72(s0)
20401ee0:	04042623          	sw	zero,76(s0)
20401ee4:	40b2                	lw	ra,12(sp)
20401ee6:	8522                	mv	a0,s0
20401ee8:	4422                	lw	s0,8(sp)
20401eea:	4492                	lw	s1,4(sp)
20401eec:	4902                	lw	s2,0(sp)
20401eee:	0141                	addi	sp,sp,16
20401ef0:	8082                	ret
20401ef2:	06840413          	addi	s0,s0,104
20401ef6:	bf79                	j	20401e94 <__sfp+0x24>
20401ef8:	4591                	li	a1,4
20401efa:	854a                	mv	a0,s2
20401efc:	35d1                	jal	20401dc0 <__sfmoreglue>
20401efe:	c088                	sw	a0,0(s1)
20401f00:	842a                	mv	s0,a0
20401f02:	fd51                	bnez	a0,20401e9e <__sfp+0x2e>
20401f04:	47b1                	li	a5,12
20401f06:	00f92023          	sw	a5,0(s2)
20401f0a:	bfe9                	j	20401ee4 <__sfp+0x74>

20401f0c <_fwalk_reent>:
_fwalk_reent():
20401f0c:	7179                	addi	sp,sp,-48
20401f0e:	d422                	sw	s0,40(sp)
20401f10:	d04a                	sw	s2,32(sp)
20401f12:	ce4e                	sw	s3,28(sp)
20401f14:	cc52                	sw	s4,24(sp)
20401f16:	c85a                	sw	s6,16(sp)
20401f18:	c65e                	sw	s7,12(sp)
20401f1a:	d606                	sw	ra,44(sp)
20401f1c:	d226                	sw	s1,36(sp)
20401f1e:	ca56                	sw	s5,20(sp)
20401f20:	892a                	mv	s2,a0
20401f22:	8a2e                	mv	s4,a1
20401f24:	04850413          	addi	s0,a0,72
20401f28:	4981                	li	s3,0
20401f2a:	4b05                	li	s6,1
20401f2c:	5bfd                	li	s7,-1
20401f2e:	4404                	lw	s1,8(s0)
20401f30:	00442a83          	lw	s5,4(s0)
20401f34:	1afd                	addi	s5,s5,-1
20401f36:	020ad063          	bgez	s5,20401f56 <_fwalk_reent+0x4a>
20401f3a:	4000                	lw	s0,0(s0)
20401f3c:	f86d                	bnez	s0,20401f2e <_fwalk_reent+0x22>
20401f3e:	50b2                	lw	ra,44(sp)
20401f40:	5422                	lw	s0,40(sp)
20401f42:	5492                	lw	s1,36(sp)
20401f44:	5902                	lw	s2,32(sp)
20401f46:	4a62                	lw	s4,24(sp)
20401f48:	4ad2                	lw	s5,20(sp)
20401f4a:	4b42                	lw	s6,16(sp)
20401f4c:	4bb2                	lw	s7,12(sp)
20401f4e:	854e                	mv	a0,s3
20401f50:	49f2                	lw	s3,28(sp)
20401f52:	6145                	addi	sp,sp,48
20401f54:	8082                	ret
20401f56:	00c4d783          	lhu	a5,12(s1)
20401f5a:	00fb7b63          	bgeu	s6,a5,20401f70 <_fwalk_reent+0x64>
20401f5e:	00e49783          	lh	a5,14(s1)
20401f62:	01778763          	beq	a5,s7,20401f70 <_fwalk_reent+0x64>
20401f66:	85a6                	mv	a1,s1
20401f68:	854a                	mv	a0,s2
20401f6a:	9a02                	jalr	s4
20401f6c:	00a9e9b3          	or	s3,s3,a0
20401f70:	06848493          	addi	s1,s1,104
20401f74:	b7c1                	j	20401f34 <_fwalk_reent+0x28>

20401f76 <__swhatbuf_r>:
__swhatbuf_r():
20401f76:	7159                	addi	sp,sp,-112
20401f78:	d0ca                	sw	s2,96(sp)
20401f7a:	892e                	mv	s2,a1
20401f7c:	00e59583          	lh	a1,14(a1)
20401f80:	d4a2                	sw	s0,104(sp)
20401f82:	d2a6                	sw	s1,100(sp)
20401f84:	d686                	sw	ra,108(sp)
20401f86:	8432                	mv	s0,a2
20401f88:	84b6                	mv	s1,a3
20401f8a:	0005dc63          	bgez	a1,20401fa2 <__swhatbuf_r+0x2c>
20401f8e:	00c91783          	lh	a5,12(s2)
20401f92:	0004a023          	sw	zero,0(s1)
20401f96:	0807f793          	andi	a5,a5,128
20401f9a:	e38d                	bnez	a5,20401fbc <__swhatbuf_r+0x46>
20401f9c:	40000793          	li	a5,1024
20401fa0:	a005                	j	20401fc0 <__swhatbuf_r+0x4a>
20401fa2:	0030                	addi	a2,sp,8
20401fa4:	2b41                	jal	20402534 <_fstat_r>
20401fa6:	fe0544e3          	bltz	a0,20401f8e <__swhatbuf_r+0x18>
20401faa:	4732                	lw	a4,12(sp)
20401fac:	67bd                	lui	a5,0xf
20401fae:	8ff9                	and	a5,a5,a4
20401fb0:	7779                	lui	a4,0xffffe
20401fb2:	97ba                	add	a5,a5,a4
20401fb4:	0017b793          	seqz	a5,a5
20401fb8:	c09c                	sw	a5,0(s1)
20401fba:	b7cd                	j	20401f9c <__swhatbuf_r+0x26>
20401fbc:	04000793          	li	a5,64
20401fc0:	50b6                	lw	ra,108(sp)
20401fc2:	c01c                	sw	a5,0(s0)
20401fc4:	5426                	lw	s0,104(sp)
20401fc6:	5496                	lw	s1,100(sp)
20401fc8:	5906                	lw	s2,96(sp)
20401fca:	4501                	li	a0,0
20401fcc:	6165                	addi	sp,sp,112
20401fce:	8082                	ret

20401fd0 <__smakebuf_r>:
__smakebuf_r():
20401fd0:	00c5d783          	lhu	a5,12(a1)
20401fd4:	1101                	addi	sp,sp,-32
20401fd6:	cc22                	sw	s0,24(sp)
20401fd8:	ce06                	sw	ra,28(sp)
20401fda:	ca26                	sw	s1,20(sp)
20401fdc:	c84a                	sw	s2,16(sp)
20401fde:	8b89                	andi	a5,a5,2
20401fe0:	842e                	mv	s0,a1
20401fe2:	cf89                	beqz	a5,20401ffc <__smakebuf_r+0x2c>
20401fe4:	04740793          	addi	a5,s0,71
20401fe8:	c01c                	sw	a5,0(s0)
20401fea:	c81c                	sw	a5,16(s0)
20401fec:	4785                	li	a5,1
20401fee:	c85c                	sw	a5,20(s0)
20401ff0:	40f2                	lw	ra,28(sp)
20401ff2:	4462                	lw	s0,24(sp)
20401ff4:	44d2                	lw	s1,20(sp)
20401ff6:	4942                	lw	s2,16(sp)
20401ff8:	6105                	addi	sp,sp,32
20401ffa:	8082                	ret
20401ffc:	0074                	addi	a3,sp,12
20401ffe:	0030                	addi	a2,sp,8
20402000:	892a                	mv	s2,a0
20402002:	3f95                	jal	20401f76 <__swhatbuf_r>
20402004:	45a2                	lw	a1,8(sp)
20402006:	84aa                	mv	s1,a0
20402008:	854a                	mv	a0,s2
2040200a:	f9eff0ef          	jal	ra,204017a8 <_malloc_r>
2040200e:	ed01                	bnez	a0,20402026 <__smakebuf_r+0x56>
20402010:	00c41783          	lh	a5,12(s0)
20402014:	2007f713          	andi	a4,a5,512
20402018:	ff61                	bnez	a4,20401ff0 <__smakebuf_r+0x20>
2040201a:	9bf1                	andi	a5,a5,-4
2040201c:	0027e793          	ori	a5,a5,2
20402020:	00f41623          	sh	a5,12(s0)
20402024:	b7c1                	j	20401fe4 <__smakebuf_r+0x14>
20402026:	00000797          	auipc	a5,0x0
2040202a:	d9078793          	addi	a5,a5,-624 # 20401db6 <_cleanup_r>
2040202e:	02f92423          	sw	a5,40(s2)
20402032:	00c45783          	lhu	a5,12(s0)
20402036:	c008                	sw	a0,0(s0)
20402038:	c808                	sw	a0,16(s0)
2040203a:	0807e793          	ori	a5,a5,128
2040203e:	00f41623          	sh	a5,12(s0)
20402042:	47a2                	lw	a5,8(sp)
20402044:	c85c                	sw	a5,20(s0)
20402046:	47b2                	lw	a5,12(sp)
20402048:	cf89                	beqz	a5,20402062 <__smakebuf_r+0x92>
2040204a:	00e41583          	lh	a1,14(s0)
2040204e:	854a                	mv	a0,s2
20402050:	2b11                	jal	20402564 <_isatty_r>
20402052:	c901                	beqz	a0,20402062 <__smakebuf_r+0x92>
20402054:	00c45783          	lhu	a5,12(s0)
20402058:	9bf1                	andi	a5,a5,-4
2040205a:	0017e793          	ori	a5,a5,1
2040205e:	00f41623          	sh	a5,12(s0)
20402062:	00c45503          	lhu	a0,12(s0)
20402066:	8cc9                	or	s1,s1,a0
20402068:	00941623          	sh	s1,12(s0)
2040206c:	b751                	j	20401ff0 <__smakebuf_r+0x20>

2040206e <memset>:
memset():
2040206e:	433d                	li	t1,15
20402070:	872a                	mv	a4,a0
20402072:	02c37363          	bgeu	t1,a2,20402098 <memset+0x2a>
20402076:	00f77793          	andi	a5,a4,15
2040207a:	efbd                	bnez	a5,204020f8 <memset+0x8a>
2040207c:	e5ad                	bnez	a1,204020e6 <memset+0x78>
2040207e:	ff067693          	andi	a3,a2,-16
20402082:	8a3d                	andi	a2,a2,15
20402084:	96ba                	add	a3,a3,a4
20402086:	c30c                	sw	a1,0(a4)
20402088:	c34c                	sw	a1,4(a4)
2040208a:	c70c                	sw	a1,8(a4)
2040208c:	c74c                	sw	a1,12(a4)
2040208e:	0741                	addi	a4,a4,16
20402090:	fed76be3          	bltu	a4,a3,20402086 <memset+0x18>
20402094:	e211                	bnez	a2,20402098 <memset+0x2a>
20402096:	8082                	ret
20402098:	40c306b3          	sub	a3,t1,a2
2040209c:	068a                	slli	a3,a3,0x2
2040209e:	00000297          	auipc	t0,0x0
204020a2:	9696                	add	a3,a3,t0
204020a4:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
204020a8:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffbefe>
204020ac:	00b706a3          	sb	a1,13(a4)
204020b0:	00b70623          	sb	a1,12(a4)
204020b4:	00b705a3          	sb	a1,11(a4)
204020b8:	00b70523          	sb	a1,10(a4)
204020bc:	00b704a3          	sb	a1,9(a4)
204020c0:	00b70423          	sb	a1,8(a4)
204020c4:	00b703a3          	sb	a1,7(a4)
204020c8:	00b70323          	sb	a1,6(a4)
204020cc:	00b702a3          	sb	a1,5(a4)
204020d0:	00b70223          	sb	a1,4(a4)
204020d4:	00b701a3          	sb	a1,3(a4)
204020d8:	00b70123          	sb	a1,2(a4)
204020dc:	00b700a3          	sb	a1,1(a4)
204020e0:	00b70023          	sb	a1,0(a4)
204020e4:	8082                	ret
204020e6:	0ff5f593          	zext.b	a1,a1
204020ea:	00859693          	slli	a3,a1,0x8
204020ee:	8dd5                	or	a1,a1,a3
204020f0:	01059693          	slli	a3,a1,0x10
204020f4:	8dd5                	or	a1,a1,a3
204020f6:	b761                	j	2040207e <memset+0x10>
204020f8:	00279693          	slli	a3,a5,0x2
204020fc:	00000297          	auipc	t0,0x0
20402100:	9696                	add	a3,a3,t0
20402102:	8286                	mv	t0,ra
20402104:	fa8680e7          	jalr	-88(a3)
20402108:	8096                	mv	ra,t0
2040210a:	17c1                	addi	a5,a5,-16
2040210c:	8f1d                	sub	a4,a4,a5
2040210e:	963e                	add	a2,a2,a5
20402110:	f8c374e3          	bgeu	t1,a2,20402098 <memset+0x2a>
20402114:	b7a5                	j	2040207c <memset+0xe>

20402116 <__malloc_lock>:
__malloc_lock():
20402116:	8082                	ret

20402118 <__malloc_unlock>:
__malloc_unlock():
20402118:	8082                	ret

2040211a <__sfputc_r>:
__sfputc_r():
2040211a:	461c                	lw	a5,8(a2)
2040211c:	17fd                	addi	a5,a5,-1
2040211e:	c61c                	sw	a5,8(a2)
20402120:	0007da63          	bgez	a5,20402134 <__sfputc_r+0x1a>
20402124:	4e18                	lw	a4,24(a2)
20402126:	00e7c563          	blt	a5,a4,20402130 <__sfputc_r+0x16>
2040212a:	47a9                	li	a5,10
2040212c:	00f59463          	bne	a1,a5,20402134 <__sfputc_r+0x1a>
20402130:	8abff06f          	j	204019da <__swbuf_r>
20402134:	421c                	lw	a5,0(a2)
20402136:	852e                	mv	a0,a1
20402138:	00178713          	addi	a4,a5,1
2040213c:	c218                	sw	a4,0(a2)
2040213e:	00b78023          	sb	a1,0(a5)
20402142:	8082                	ret

20402144 <__sfputs_r>:
__sfputs_r():
20402144:	1101                	addi	sp,sp,-32
20402146:	cc22                	sw	s0,24(sp)
20402148:	ca26                	sw	s1,20(sp)
2040214a:	c84a                	sw	s2,16(sp)
2040214c:	c64e                	sw	s3,12(sp)
2040214e:	c452                	sw	s4,8(sp)
20402150:	ce06                	sw	ra,28(sp)
20402152:	892a                	mv	s2,a0
20402154:	89ae                	mv	s3,a1
20402156:	8432                	mv	s0,a2
20402158:	00d604b3          	add	s1,a2,a3
2040215c:	5a7d                	li	s4,-1
2040215e:	00941463          	bne	s0,s1,20402166 <__sfputs_r+0x22>
20402162:	4501                	li	a0,0
20402164:	a809                	j	20402176 <__sfputs_r+0x32>
20402166:	00044583          	lbu	a1,0(s0)
2040216a:	864e                	mv	a2,s3
2040216c:	854a                	mv	a0,s2
2040216e:	3775                	jal	2040211a <__sfputc_r>
20402170:	0405                	addi	s0,s0,1
20402172:	ff4516e3          	bne	a0,s4,2040215e <__sfputs_r+0x1a>
20402176:	40f2                	lw	ra,28(sp)
20402178:	4462                	lw	s0,24(sp)
2040217a:	44d2                	lw	s1,20(sp)
2040217c:	4942                	lw	s2,16(sp)
2040217e:	49b2                	lw	s3,12(sp)
20402180:	4a22                	lw	s4,8(sp)
20402182:	6105                	addi	sp,sp,32
20402184:	8082                	ret

20402186 <_vfiprintf_r>:
_vfiprintf_r():
20402186:	7135                	addi	sp,sp,-160
20402188:	cd22                	sw	s0,152(sp)
2040218a:	cb26                	sw	s1,148(sp)
2040218c:	c94a                	sw	s2,144(sp)
2040218e:	c74e                	sw	s3,140(sp)
20402190:	cf06                	sw	ra,156(sp)
20402192:	c552                	sw	s4,136(sp)
20402194:	c356                	sw	s5,132(sp)
20402196:	c15a                	sw	s6,128(sp)
20402198:	dede                	sw	s7,124(sp)
2040219a:	dce2                	sw	s8,120(sp)
2040219c:	dae6                	sw	s9,116(sp)
2040219e:	89aa                	mv	s3,a0
204021a0:	84ae                	mv	s1,a1
204021a2:	8932                	mv	s2,a2
204021a4:	8436                	mv	s0,a3
204021a6:	c501                	beqz	a0,204021ae <_vfiprintf_r+0x28>
204021a8:	4d1c                	lw	a5,24(a0)
204021aa:	e391                	bnez	a5,204021ae <_vfiprintf_r+0x28>
204021ac:	39a9                	jal	20401e06 <__sinit>
204021ae:	ffffe797          	auipc	a5,0xffffe
204021b2:	22278793          	addi	a5,a5,546 # 204003d0 <__sf_fake_stdin>
204021b6:	0cf49b63          	bne	s1,a5,2040228c <_vfiprintf_r+0x106>
204021ba:	0049a483          	lw	s1,4(s3)
204021be:	00c4d783          	lhu	a5,12(s1)
204021c2:	8ba1                	andi	a5,a5,8
204021c4:	c7f5                	beqz	a5,204022b0 <_vfiprintf_r+0x12a>
204021c6:	489c                	lw	a5,16(s1)
204021c8:	c7e5                	beqz	a5,204022b0 <_vfiprintf_r+0x12a>
204021ca:	02000793          	li	a5,32
204021ce:	02f104a3          	sb	a5,41(sp)
204021d2:	03000793          	li	a5,48
204021d6:	d202                	sw	zero,36(sp)
204021d8:	02f10523          	sb	a5,42(sp)
204021dc:	c622                	sw	s0,12(sp)
204021de:	02500b93          	li	s7,37
204021e2:	ffffea97          	auipc	s5,0xffffe
204021e6:	22ea8a93          	addi	s5,s5,558 # 20400410 <__sf_fake_stdout+0x20>
204021ea:	4c05                	li	s8,1
204021ec:	4b29                	li	s6,10
204021ee:	844a                	mv	s0,s2
204021f0:	00044783          	lbu	a5,0(s0)
204021f4:	c399                	beqz	a5,204021fa <_vfiprintf_r+0x74>
204021f6:	0f779063          	bne	a5,s7,204022d6 <_vfiprintf_r+0x150>
204021fa:	41240cb3          	sub	s9,s0,s2
204021fe:	01240d63          	beq	s0,s2,20402218 <_vfiprintf_r+0x92>
20402202:	86e6                	mv	a3,s9
20402204:	864a                	mv	a2,s2
20402206:	85a6                	mv	a1,s1
20402208:	854e                	mv	a0,s3
2040220a:	3f2d                	jal	20402144 <__sfputs_r>
2040220c:	57fd                	li	a5,-1
2040220e:	1ef50463          	beq	a0,a5,204023f6 <_vfiprintf_r+0x270>
20402212:	5792                	lw	a5,36(sp)
20402214:	97e6                	add	a5,a5,s9
20402216:	d23e                	sw	a5,36(sp)
20402218:	00044783          	lbu	a5,0(s0)
2040221c:	1c078d63          	beqz	a5,204023f6 <_vfiprintf_r+0x270>
20402220:	57fd                	li	a5,-1
20402222:	00140913          	addi	s2,s0,1
20402226:	c802                	sw	zero,16(sp)
20402228:	ce02                	sw	zero,28(sp)
2040222a:	ca3e                	sw	a5,20(sp)
2040222c:	cc02                	sw	zero,24(sp)
2040222e:	040109a3          	sb	zero,83(sp)
20402232:	d482                	sw	zero,104(sp)
20402234:	00094583          	lbu	a1,0(s2)
20402238:	4615                	li	a2,5
2040223a:	8556                	mv	a0,s5
2040223c:	2661                	jal	204025c4 <memchr>
2040223e:	47c2                	lw	a5,16(sp)
20402240:	00190413          	addi	s0,s2,1
20402244:	e959                	bnez	a0,204022da <_vfiprintf_r+0x154>
20402246:	0107f713          	andi	a4,a5,16
2040224a:	c709                	beqz	a4,20402254 <_vfiprintf_r+0xce>
2040224c:	02000713          	li	a4,32
20402250:	04e109a3          	sb	a4,83(sp)
20402254:	0087f713          	andi	a4,a5,8
20402258:	c709                	beqz	a4,20402262 <_vfiprintf_r+0xdc>
2040225a:	02b00713          	li	a4,43
2040225e:	04e109a3          	sb	a4,83(sp)
20402262:	00094683          	lbu	a3,0(s2)
20402266:	02a00713          	li	a4,42
2040226a:	08e68063          	beq	a3,a4,204022ea <_vfiprintf_r+0x164>
2040226e:	47f2                	lw	a5,28(sp)
20402270:	844a                	mv	s0,s2
20402272:	4681                	li	a3,0
20402274:	4625                	li	a2,9
20402276:	00044703          	lbu	a4,0(s0)
2040227a:	00140593          	addi	a1,s0,1
2040227e:	fd070713          	addi	a4,a4,-48
20402282:	0ae67963          	bgeu	a2,a4,20402334 <_vfiprintf_r+0x1ae>
20402286:	cab5                	beqz	a3,204022fa <_vfiprintf_r+0x174>
20402288:	ce3e                	sw	a5,28(sp)
2040228a:	a885                	j	204022fa <_vfiprintf_r+0x174>
2040228c:	ffffe797          	auipc	a5,0xffffe
20402290:	16478793          	addi	a5,a5,356 # 204003f0 <__sf_fake_stdout>
20402294:	00f49563          	bne	s1,a5,2040229e <_vfiprintf_r+0x118>
20402298:	0089a483          	lw	s1,8(s3)
2040229c:	b70d                	j	204021be <_vfiprintf_r+0x38>
2040229e:	ffffe797          	auipc	a5,0xffffe
204022a2:	11278793          	addi	a5,a5,274 # 204003b0 <__sf_fake_stderr>
204022a6:	f0f49ce3          	bne	s1,a5,204021be <_vfiprintf_r+0x38>
204022aa:	00c9a483          	lw	s1,12(s3)
204022ae:	bf01                	j	204021be <_vfiprintf_r+0x38>
204022b0:	85a6                	mv	a1,s1
204022b2:	854e                	mv	a0,s3
204022b4:	fe6ff0ef          	jal	ra,20401a9a <__swsetup_r>
204022b8:	d909                	beqz	a0,204021ca <_vfiprintf_r+0x44>
204022ba:	557d                	li	a0,-1
204022bc:	40fa                	lw	ra,156(sp)
204022be:	446a                	lw	s0,152(sp)
204022c0:	44da                	lw	s1,148(sp)
204022c2:	494a                	lw	s2,144(sp)
204022c4:	49ba                	lw	s3,140(sp)
204022c6:	4a2a                	lw	s4,136(sp)
204022c8:	4a9a                	lw	s5,132(sp)
204022ca:	4b0a                	lw	s6,128(sp)
204022cc:	5bf6                	lw	s7,124(sp)
204022ce:	5c66                	lw	s8,120(sp)
204022d0:	5cd6                	lw	s9,116(sp)
204022d2:	610d                	addi	sp,sp,160
204022d4:	8082                	ret
204022d6:	0405                	addi	s0,s0,1
204022d8:	bf21                	j	204021f0 <_vfiprintf_r+0x6a>
204022da:	41550533          	sub	a0,a0,s5
204022de:	00ac1533          	sll	a0,s8,a0
204022e2:	8fc9                	or	a5,a5,a0
204022e4:	c83e                	sw	a5,16(sp)
204022e6:	8922                	mv	s2,s0
204022e8:	b7b1                	j	20402234 <_vfiprintf_r+0xae>
204022ea:	4732                	lw	a4,12(sp)
204022ec:	00470693          	addi	a3,a4,4
204022f0:	4318                	lw	a4,0(a4)
204022f2:	c636                	sw	a3,12(sp)
204022f4:	02074963          	bltz	a4,20402326 <_vfiprintf_r+0x1a0>
204022f8:	ce3a                	sw	a4,28(sp)
204022fa:	00044703          	lbu	a4,0(s0)
204022fe:	02e00793          	li	a5,46
20402302:	04f71f63          	bne	a4,a5,20402360 <_vfiprintf_r+0x1da>
20402306:	00144703          	lbu	a4,1(s0)
2040230a:	02a00793          	li	a5,42
2040230e:	02f71b63          	bne	a4,a5,20402344 <_vfiprintf_r+0x1be>
20402312:	47b2                	lw	a5,12(sp)
20402314:	0409                	addi	s0,s0,2
20402316:	00478713          	addi	a4,a5,4
2040231a:	439c                	lw	a5,0(a5)
2040231c:	c63a                	sw	a4,12(sp)
2040231e:	0207c163          	bltz	a5,20402340 <_vfiprintf_r+0x1ba>
20402322:	ca3e                	sw	a5,20(sp)
20402324:	a835                	j	20402360 <_vfiprintf_r+0x1da>
20402326:	40e00733          	neg	a4,a4
2040232a:	0027e793          	ori	a5,a5,2
2040232e:	ce3a                	sw	a4,28(sp)
20402330:	c83e                	sw	a5,16(sp)
20402332:	b7e1                	j	204022fa <_vfiprintf_r+0x174>
20402334:	036787b3          	mul	a5,a5,s6
20402338:	842e                	mv	s0,a1
2040233a:	4685                	li	a3,1
2040233c:	97ba                	add	a5,a5,a4
2040233e:	bf25                	j	20402276 <_vfiprintf_r+0xf0>
20402340:	57fd                	li	a5,-1
20402342:	b7c5                	j	20402322 <_vfiprintf_r+0x19c>
20402344:	0405                	addi	s0,s0,1
20402346:	ca02                	sw	zero,20(sp)
20402348:	4681                	li	a3,0
2040234a:	4781                	li	a5,0
2040234c:	4625                	li	a2,9
2040234e:	00044703          	lbu	a4,0(s0)
20402352:	00140593          	addi	a1,s0,1
20402356:	fd070713          	addi	a4,a4,-48
2040235a:	06e67463          	bgeu	a2,a4,204023c2 <_vfiprintf_r+0x23c>
2040235e:	f2f1                	bnez	a3,20402322 <_vfiprintf_r+0x19c>
20402360:	00044583          	lbu	a1,0(s0)
20402364:	460d                	li	a2,3
20402366:	ffffe517          	auipc	a0,0xffffe
2040236a:	0b250513          	addi	a0,a0,178 # 20400418 <__sf_fake_stdout+0x28>
2040236e:	2c99                	jal	204025c4 <memchr>
20402370:	cd11                	beqz	a0,2040238c <_vfiprintf_r+0x206>
20402372:	ffffe797          	auipc	a5,0xffffe
20402376:	0a678793          	addi	a5,a5,166 # 20400418 <__sf_fake_stdout+0x28>
2040237a:	8d1d                	sub	a0,a0,a5
2040237c:	04000793          	li	a5,64
20402380:	00a797b3          	sll	a5,a5,a0
20402384:	4542                	lw	a0,16(sp)
20402386:	0405                	addi	s0,s0,1
20402388:	8d5d                	or	a0,a0,a5
2040238a:	c82a                	sw	a0,16(sp)
2040238c:	00044583          	lbu	a1,0(s0)
20402390:	4619                	li	a2,6
20402392:	ffffe517          	auipc	a0,0xffffe
20402396:	08a50513          	addi	a0,a0,138 # 2040041c <__sf_fake_stdout+0x2c>
2040239a:	00140913          	addi	s2,s0,1
2040239e:	02b10423          	sb	a1,40(sp)
204023a2:	240d                	jal	204025c4 <memchr>
204023a4:	c12d                	beqz	a0,20402406 <_vfiprintf_r+0x280>
204023a6:	00000793          	li	a5,0
204023aa:	e795                	bnez	a5,204023d6 <_vfiprintf_r+0x250>
204023ac:	4742                	lw	a4,16(sp)
204023ae:	47b2                	lw	a5,12(sp)
204023b0:	10077713          	andi	a4,a4,256
204023b4:	cf09                	beqz	a4,204023ce <_vfiprintf_r+0x248>
204023b6:	0791                	addi	a5,a5,4
204023b8:	c63e                	sw	a5,12(sp)
204023ba:	5792                	lw	a5,36(sp)
204023bc:	97d2                	add	a5,a5,s4
204023be:	d23e                	sw	a5,36(sp)
204023c0:	b53d                	j	204021ee <_vfiprintf_r+0x68>
204023c2:	036787b3          	mul	a5,a5,s6
204023c6:	842e                	mv	s0,a1
204023c8:	4685                	li	a3,1
204023ca:	97ba                	add	a5,a5,a4
204023cc:	b749                	j	2040234e <_vfiprintf_r+0x1c8>
204023ce:	079d                	addi	a5,a5,7
204023d0:	9be1                	andi	a5,a5,-8
204023d2:	07a1                	addi	a5,a5,8
204023d4:	b7d5                	j	204023b8 <_vfiprintf_r+0x232>
204023d6:	0078                	addi	a4,sp,12
204023d8:	00000697          	auipc	a3,0x0
204023dc:	d6c68693          	addi	a3,a3,-660 # 20402144 <__sfputs_r>
204023e0:	8626                	mv	a2,s1
204023e2:	080c                	addi	a1,sp,16
204023e4:	854e                	mv	a0,s3
204023e6:	00000097          	auipc	ra,0x0
204023ea:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
204023ee:	57fd                	li	a5,-1
204023f0:	8a2a                	mv	s4,a0
204023f2:	fcf514e3          	bne	a0,a5,204023ba <_vfiprintf_r+0x234>
204023f6:	00c4d783          	lhu	a5,12(s1)
204023fa:	0407f793          	andi	a5,a5,64
204023fe:	ea079ee3          	bnez	a5,204022ba <_vfiprintf_r+0x134>
20402402:	5512                	lw	a0,36(sp)
20402404:	bd65                	j	204022bc <_vfiprintf_r+0x136>
20402406:	0078                	addi	a4,sp,12
20402408:	00000697          	auipc	a3,0x0
2040240c:	d3c68693          	addi	a3,a3,-708 # 20402144 <__sfputs_r>
20402410:	8626                	mv	a2,s1
20402412:	080c                	addi	a1,sp,16
20402414:	854e                	mv	a0,s3
20402416:	2cd1                	jal	204026ea <_printf_i>
20402418:	bfd9                	j	204023ee <_vfiprintf_r+0x268>

2040241a <__sread>:
__sread():
2040241a:	1141                	addi	sp,sp,-16
2040241c:	c422                	sw	s0,8(sp)
2040241e:	842e                	mv	s0,a1
20402420:	00e59583          	lh	a1,14(a1)
20402424:	c606                	sw	ra,12(sp)
20402426:	2b15                	jal	2040295a <_read_r>
20402428:	00054963          	bltz	a0,2040243a <__sread+0x20>
2040242c:	487c                	lw	a5,84(s0)
2040242e:	97aa                	add	a5,a5,a0
20402430:	c87c                	sw	a5,84(s0)
20402432:	40b2                	lw	ra,12(sp)
20402434:	4422                	lw	s0,8(sp)
20402436:	0141                	addi	sp,sp,16
20402438:	8082                	ret
2040243a:	00c45783          	lhu	a5,12(s0)
2040243e:	777d                	lui	a4,0xfffff
20402440:	177d                	addi	a4,a4,-1
20402442:	8ff9                	and	a5,a5,a4
20402444:	00f41623          	sh	a5,12(s0)
20402448:	b7ed                	j	20402432 <__sread+0x18>

2040244a <__swrite>:
__swrite():
2040244a:	00c5d783          	lhu	a5,12(a1)
2040244e:	1101                	addi	sp,sp,-32
20402450:	cc22                	sw	s0,24(sp)
20402452:	ca26                	sw	s1,20(sp)
20402454:	c84a                	sw	s2,16(sp)
20402456:	c64e                	sw	s3,12(sp)
20402458:	ce06                	sw	ra,28(sp)
2040245a:	1007f793          	andi	a5,a5,256
2040245e:	84aa                	mv	s1,a0
20402460:	842e                	mv	s0,a1
20402462:	8932                	mv	s2,a2
20402464:	89b6                	mv	s3,a3
20402466:	c791                	beqz	a5,20402472 <__swrite+0x28>
20402468:	00e59583          	lh	a1,14(a1)
2040246c:	4689                	li	a3,2
2040246e:	4601                	li	a2,0
20402470:	220d                	jal	20402592 <_lseek_r>
20402472:	00c45783          	lhu	a5,12(s0)
20402476:	777d                	lui	a4,0xfffff
20402478:	177d                	addi	a4,a4,-1
2040247a:	8ff9                	and	a5,a5,a4
2040247c:	00e41583          	lh	a1,14(s0)
20402480:	00f41623          	sh	a5,12(s0)
20402484:	4462                	lw	s0,24(sp)
20402486:	40f2                	lw	ra,28(sp)
20402488:	86ce                	mv	a3,s3
2040248a:	864a                	mv	a2,s2
2040248c:	49b2                	lw	s3,12(sp)
2040248e:	4942                	lw	s2,16(sp)
20402490:	8526                	mv	a0,s1
20402492:	44d2                	lw	s1,20(sp)
20402494:	6105                	addi	sp,sp,32
20402496:	a83d                	j	204024d4 <_write_r>

20402498 <__sseek>:
__sseek():
20402498:	1141                	addi	sp,sp,-16
2040249a:	c422                	sw	s0,8(sp)
2040249c:	842e                	mv	s0,a1
2040249e:	00e59583          	lh	a1,14(a1)
204024a2:	c606                	sw	ra,12(sp)
204024a4:	20fd                	jal	20402592 <_lseek_r>
204024a6:	57fd                	li	a5,-1
204024a8:	00c45703          	lhu	a4,12(s0)
204024ac:	00f51b63          	bne	a0,a5,204024c2 <__sseek+0x2a>
204024b0:	77fd                	lui	a5,0xfffff
204024b2:	17fd                	addi	a5,a5,-1
204024b4:	8ff9                	and	a5,a5,a4
204024b6:	00f41623          	sh	a5,12(s0)
204024ba:	40b2                	lw	ra,12(sp)
204024bc:	4422                	lw	s0,8(sp)
204024be:	0141                	addi	sp,sp,16
204024c0:	8082                	ret
204024c2:	6785                	lui	a5,0x1
204024c4:	8fd9                	or	a5,a5,a4
204024c6:	00f41623          	sh	a5,12(s0)
204024ca:	c868                	sw	a0,84(s0)
204024cc:	b7fd                	j	204024ba <__sseek+0x22>

204024ce <__sclose>:
__sclose():
204024ce:	00e59583          	lh	a1,14(a1)
204024d2:	a815                	j	20402506 <_close_r>

204024d4 <_write_r>:
_write_r():
204024d4:	1141                	addi	sp,sp,-16
204024d6:	c422                	sw	s0,8(sp)
204024d8:	842a                	mv	s0,a0
204024da:	852e                	mv	a0,a1
204024dc:	85b2                	mv	a1,a2
204024de:	8636                	mv	a2,a3
204024e0:	5fbfe797          	auipc	a5,0x5fbfe
204024e4:	3007a223          	sw	zero,772(a5) # 800007e4 <errno>
204024e8:	c606                	sw	ra,12(sp)
204024ea:	23f5                	jal	20402ad6 <_write>
204024ec:	57fd                	li	a5,-1
204024ee:	00f51863          	bne	a0,a5,204024fe <_write_r+0x2a>
204024f2:	5fbfe797          	auipc	a5,0x5fbfe
204024f6:	2f27a783          	lw	a5,754(a5) # 800007e4 <errno>
204024fa:	c391                	beqz	a5,204024fe <_write_r+0x2a>
204024fc:	c01c                	sw	a5,0(s0)
204024fe:	40b2                	lw	ra,12(sp)
20402500:	4422                	lw	s0,8(sp)
20402502:	0141                	addi	sp,sp,16
20402504:	8082                	ret

20402506 <_close_r>:
_close_r():
20402506:	1141                	addi	sp,sp,-16
20402508:	c422                	sw	s0,8(sp)
2040250a:	842a                	mv	s0,a0
2040250c:	852e                	mv	a0,a1
2040250e:	5fbfe797          	auipc	a5,0x5fbfe
20402512:	2c07ab23          	sw	zero,726(a5) # 800007e4 <errno>
20402516:	c606                	sw	ra,12(sp)
20402518:	2995                	jal	2040298c <_close>
2040251a:	57fd                	li	a5,-1
2040251c:	00f51863          	bne	a0,a5,2040252c <_close_r+0x26>
20402520:	5fbfe797          	auipc	a5,0x5fbfe
20402524:	2c47a783          	lw	a5,708(a5) # 800007e4 <errno>
20402528:	c391                	beqz	a5,2040252c <_close_r+0x26>
2040252a:	c01c                	sw	a5,0(s0)
2040252c:	40b2                	lw	ra,12(sp)
2040252e:	4422                	lw	s0,8(sp)
20402530:	0141                	addi	sp,sp,16
20402532:	8082                	ret

20402534 <_fstat_r>:
_fstat_r():
20402534:	1141                	addi	sp,sp,-16
20402536:	c422                	sw	s0,8(sp)
20402538:	842a                	mv	s0,a0
2040253a:	852e                	mv	a0,a1
2040253c:	85b2                	mv	a1,a2
2040253e:	5fbfe797          	auipc	a5,0x5fbfe
20402542:	2a07a323          	sw	zero,678(a5) # 800007e4 <errno>
20402546:	c606                	sw	ra,12(sp)
20402548:	219d                	jal	204029ae <_fstat>
2040254a:	57fd                	li	a5,-1
2040254c:	00f51863          	bne	a0,a5,2040255c <_fstat_r+0x28>
20402550:	5fbfe797          	auipc	a5,0x5fbfe
20402554:	2947a783          	lw	a5,660(a5) # 800007e4 <errno>
20402558:	c391                	beqz	a5,2040255c <_fstat_r+0x28>
2040255a:	c01c                	sw	a5,0(s0)
2040255c:	40b2                	lw	ra,12(sp)
2040255e:	4422                	lw	s0,8(sp)
20402560:	0141                	addi	sp,sp,16
20402562:	8082                	ret

20402564 <_isatty_r>:
_isatty_r():
20402564:	1141                	addi	sp,sp,-16
20402566:	c422                	sw	s0,8(sp)
20402568:	842a                	mv	s0,a0
2040256a:	852e                	mv	a0,a1
2040256c:	5fbfe797          	auipc	a5,0x5fbfe
20402570:	2607ac23          	sw	zero,632(a5) # 800007e4 <errno>
20402574:	c606                	sw	ra,12(sp)
20402576:	29b9                	jal	204029d4 <_isatty>
20402578:	57fd                	li	a5,-1
2040257a:	00f51863          	bne	a0,a5,2040258a <_isatty_r+0x26>
2040257e:	5fbfe797          	auipc	a5,0x5fbfe
20402582:	2667a783          	lw	a5,614(a5) # 800007e4 <errno>
20402586:	c391                	beqz	a5,2040258a <_isatty_r+0x26>
20402588:	c01c                	sw	a5,0(s0)
2040258a:	40b2                	lw	ra,12(sp)
2040258c:	4422                	lw	s0,8(sp)
2040258e:	0141                	addi	sp,sp,16
20402590:	8082                	ret

20402592 <_lseek_r>:
_lseek_r():
20402592:	1141                	addi	sp,sp,-16
20402594:	c422                	sw	s0,8(sp)
20402596:	842a                	mv	s0,a0
20402598:	852e                	mv	a0,a1
2040259a:	85b2                	mv	a1,a2
2040259c:	8636                	mv	a2,a3
2040259e:	5fbfe797          	auipc	a5,0x5fbfe
204025a2:	2407a323          	sw	zero,582(a5) # 800007e4 <errno>
204025a6:	c606                	sw	ra,12(sp)
204025a8:	21b1                	jal	204029f4 <_lseek>
204025aa:	57fd                	li	a5,-1
204025ac:	00f51863          	bne	a0,a5,204025bc <_lseek_r+0x2a>
204025b0:	5fbfe797          	auipc	a5,0x5fbfe
204025b4:	2347a783          	lw	a5,564(a5) # 800007e4 <errno>
204025b8:	c391                	beqz	a5,204025bc <_lseek_r+0x2a>
204025ba:	c01c                	sw	a5,0(s0)
204025bc:	40b2                	lw	ra,12(sp)
204025be:	4422                	lw	s0,8(sp)
204025c0:	0141                	addi	sp,sp,16
204025c2:	8082                	ret

204025c4 <memchr>:
memchr():
204025c4:	0ff5f593          	zext.b	a1,a1
204025c8:	962a                	add	a2,a2,a0
204025ca:	00c51463          	bne	a0,a2,204025d2 <memchr+0xe>
204025ce:	4501                	li	a0,0
204025d0:	8082                	ret
204025d2:	00054783          	lbu	a5,0(a0)
204025d6:	feb78de3          	beq	a5,a1,204025d0 <memchr+0xc>
204025da:	0505                	addi	a0,a0,1
204025dc:	b7fd                	j	204025ca <memchr+0x6>

204025de <_printf_common>:
_printf_common():
204025de:	7179                	addi	sp,sp,-48
204025e0:	cc52                	sw	s4,24(sp)
204025e2:	499c                	lw	a5,16(a1)
204025e4:	8a3a                	mv	s4,a4
204025e6:	4598                	lw	a4,8(a1)
204025e8:	d422                	sw	s0,40(sp)
204025ea:	d226                	sw	s1,36(sp)
204025ec:	ce4e                	sw	s3,28(sp)
204025ee:	ca56                	sw	s5,20(sp)
204025f0:	d606                	sw	ra,44(sp)
204025f2:	d04a                	sw	s2,32(sp)
204025f4:	c85a                	sw	s6,16(sp)
204025f6:	c65e                	sw	s7,12(sp)
204025f8:	89aa                	mv	s3,a0
204025fa:	842e                	mv	s0,a1
204025fc:	84b2                	mv	s1,a2
204025fe:	8ab6                	mv	s5,a3
20402600:	00e7d363          	bge	a5,a4,20402606 <_printf_common+0x28>
20402604:	87ba                	mv	a5,a4
20402606:	c09c                	sw	a5,0(s1)
20402608:	04344703          	lbu	a4,67(s0)
2040260c:	c319                	beqz	a4,20402612 <_printf_common+0x34>
2040260e:	0785                	addi	a5,a5,1
20402610:	c09c                	sw	a5,0(s1)
20402612:	401c                	lw	a5,0(s0)
20402614:	0207f793          	andi	a5,a5,32
20402618:	c781                	beqz	a5,20402620 <_printf_common+0x42>
2040261a:	409c                	lw	a5,0(s1)
2040261c:	0789                	addi	a5,a5,2
2040261e:	c09c                	sw	a5,0(s1)
20402620:	00042903          	lw	s2,0(s0)
20402624:	00697913          	andi	s2,s2,6
20402628:	00091a63          	bnez	s2,2040263c <_printf_common+0x5e>
2040262c:	01940b13          	addi	s6,s0,25
20402630:	5bfd                	li	s7,-1
20402632:	445c                	lw	a5,12(s0)
20402634:	4098                	lw	a4,0(s1)
20402636:	8f99                	sub	a5,a5,a4
20402638:	04f94c63          	blt	s2,a5,20402690 <_printf_common+0xb2>
2040263c:	04344783          	lbu	a5,67(s0)
20402640:	00f036b3          	snez	a3,a5
20402644:	401c                	lw	a5,0(s0)
20402646:	0207f793          	andi	a5,a5,32
2040264a:	eba5                	bnez	a5,204026ba <_printf_common+0xdc>
2040264c:	04340613          	addi	a2,s0,67
20402650:	85d6                	mv	a1,s5
20402652:	854e                	mv	a0,s3
20402654:	9a02                	jalr	s4
20402656:	57fd                	li	a5,-1
20402658:	04f50363          	beq	a0,a5,2040269e <_printf_common+0xc0>
2040265c:	401c                	lw	a5,0(s0)
2040265e:	4611                	li	a2,4
20402660:	4098                	lw	a4,0(s1)
20402662:	8b99                	andi	a5,a5,6
20402664:	4454                	lw	a3,12(s0)
20402666:	4481                	li	s1,0
20402668:	00c79763          	bne	a5,a2,20402676 <_printf_common+0x98>
2040266c:	40e684b3          	sub	s1,a3,a4
20402670:	0004d363          	bgez	s1,20402676 <_printf_common+0x98>
20402674:	4481                	li	s1,0
20402676:	441c                	lw	a5,8(s0)
20402678:	4818                	lw	a4,16(s0)
2040267a:	00f75463          	bge	a4,a5,20402682 <_printf_common+0xa4>
2040267e:	8f99                	sub	a5,a5,a4
20402680:	94be                	add	s1,s1,a5
20402682:	4901                	li	s2,0
20402684:	0469                	addi	s0,s0,26
20402686:	5b7d                	li	s6,-1
20402688:	05249863          	bne	s1,s2,204026d8 <_printf_common+0xfa>
2040268c:	4501                	li	a0,0
2040268e:	a809                	j	204026a0 <_printf_common+0xc2>
20402690:	4685                	li	a3,1
20402692:	865a                	mv	a2,s6
20402694:	85d6                	mv	a1,s5
20402696:	854e                	mv	a0,s3
20402698:	9a02                	jalr	s4
2040269a:	01751e63          	bne	a0,s7,204026b6 <_printf_common+0xd8>
2040269e:	557d                	li	a0,-1
204026a0:	50b2                	lw	ra,44(sp)
204026a2:	5422                	lw	s0,40(sp)
204026a4:	5492                	lw	s1,36(sp)
204026a6:	5902                	lw	s2,32(sp)
204026a8:	49f2                	lw	s3,28(sp)
204026aa:	4a62                	lw	s4,24(sp)
204026ac:	4ad2                	lw	s5,20(sp)
204026ae:	4b42                	lw	s6,16(sp)
204026b0:	4bb2                	lw	s7,12(sp)
204026b2:	6145                	addi	sp,sp,48
204026b4:	8082                	ret
204026b6:	0905                	addi	s2,s2,1
204026b8:	bfad                	j	20402632 <_printf_common+0x54>
204026ba:	00d40733          	add	a4,s0,a3
204026be:	03000613          	li	a2,48
204026c2:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffcf33>
204026c6:	04544703          	lbu	a4,69(s0)
204026ca:	00168793          	addi	a5,a3,1
204026ce:	97a2                	add	a5,a5,s0
204026d0:	0689                	addi	a3,a3,2
204026d2:	04e781a3          	sb	a4,67(a5)
204026d6:	bf9d                	j	2040264c <_printf_common+0x6e>
204026d8:	4685                	li	a3,1
204026da:	8622                	mv	a2,s0
204026dc:	85d6                	mv	a1,s5
204026de:	854e                	mv	a0,s3
204026e0:	9a02                	jalr	s4
204026e2:	fb650ee3          	beq	a0,s6,2040269e <_printf_common+0xc0>
204026e6:	0905                	addi	s2,s2,1
204026e8:	b745                	j	20402688 <_printf_common+0xaa>

204026ea <_printf_i>:
_printf_i():
204026ea:	7179                	addi	sp,sp,-48
204026ec:	d422                	sw	s0,40(sp)
204026ee:	d226                	sw	s1,36(sp)
204026f0:	d04a                	sw	s2,32(sp)
204026f2:	ce4e                	sw	s3,28(sp)
204026f4:	d606                	sw	ra,44(sp)
204026f6:	cc52                	sw	s4,24(sp)
204026f8:	ca56                	sw	s5,20(sp)
204026fa:	c85a                	sw	s6,16(sp)
204026fc:	0185c803          	lbu	a6,24(a1)
20402700:	07800793          	li	a5,120
20402704:	84aa                	mv	s1,a0
20402706:	842e                	mv	s0,a1
20402708:	8932                	mv	s2,a2
2040270a:	89b6                	mv	s3,a3
2040270c:	0107ee63          	bltu	a5,a6,20402728 <_printf_i+0x3e>
20402710:	06200793          	li	a5,98
20402714:	04358693          	addi	a3,a1,67
20402718:	0107ed63          	bltu	a5,a6,20402732 <_printf_i+0x48>
2040271c:	1c080563          	beqz	a6,204028e6 <_printf_i+0x1fc>
20402720:	05800793          	li	a5,88
20402724:	12f80a63          	beq	a6,a5,20402858 <_printf_i+0x16e>
20402728:	04240a93          	addi	s5,s0,66
2040272c:	05040123          	sb	a6,66(s0)
20402730:	a815                	j	20402764 <_printf_i+0x7a>
20402732:	f9d80793          	addi	a5,a6,-99
20402736:	0ff7f793          	zext.b	a5,a5
2040273a:	4655                	li	a2,21
2040273c:	fef666e3          	bltu	a2,a5,20402728 <_printf_i+0x3e>
20402740:	ffffe617          	auipc	a2,0xffffe
20402744:	d0c60613          	addi	a2,a2,-756 # 2040044c <__sf_fake_stdout+0x5c>
20402748:	078a                	slli	a5,a5,0x2
2040274a:	97b2                	add	a5,a5,a2
2040274c:	439c                	lw	a5,0(a5)
2040274e:	97b2                	add	a5,a5,a2
20402750:	8782                	jr	a5
20402752:	431c                	lw	a5,0(a4)
20402754:	04258a93          	addi	s5,a1,66
20402758:	00478693          	addi	a3,a5,4
2040275c:	439c                	lw	a5,0(a5)
2040275e:	c314                	sw	a3,0(a4)
20402760:	04f58123          	sb	a5,66(a1)
20402764:	4785                	li	a5,1
20402766:	a25d                	j	2040290c <_printf_i+0x222>
20402768:	419c                	lw	a5,0(a1)
2040276a:	4308                	lw	a0,0(a4)
2040276c:	0807f613          	andi	a2,a5,128
20402770:	00450593          	addi	a1,a0,4
20402774:	c20d                	beqz	a2,20402796 <_printf_i+0xac>
20402776:	411c                	lw	a5,0(a0)
20402778:	c30c                	sw	a1,0(a4)
2040277a:	0007d863          	bgez	a5,2040278a <_printf_i+0xa0>
2040277e:	02d00713          	li	a4,45
20402782:	40f007b3          	neg	a5,a5
20402786:	04e401a3          	sb	a4,67(s0)
2040278a:	ffffe617          	auipc	a2,0xffffe
2040278e:	c9a60613          	addi	a2,a2,-870 # 20400424 <__sf_fake_stdout+0x34>
20402792:	4829                	li	a6,10
20402794:	a0a1                	j	204027dc <_printf_i+0xf2>
20402796:	0407f613          	andi	a2,a5,64
2040279a:	411c                	lw	a5,0(a0)
2040279c:	c30c                	sw	a1,0(a4)
2040279e:	de71                	beqz	a2,2040277a <_printf_i+0x90>
204027a0:	07c2                	slli	a5,a5,0x10
204027a2:	87c1                	srai	a5,a5,0x10
204027a4:	bfd9                	j	2040277a <_printf_i+0x90>
204027a6:	4190                	lw	a2,0(a1)
204027a8:	431c                	lw	a5,0(a4)
204027aa:	08067513          	andi	a0,a2,128
204027ae:	00478593          	addi	a1,a5,4
204027b2:	c501                	beqz	a0,204027ba <_printf_i+0xd0>
204027b4:	c30c                	sw	a1,0(a4)
204027b6:	439c                	lw	a5,0(a5)
204027b8:	a039                	j	204027c6 <_printf_i+0xdc>
204027ba:	04067613          	andi	a2,a2,64
204027be:	c30c                	sw	a1,0(a4)
204027c0:	da7d                	beqz	a2,204027b6 <_printf_i+0xcc>
204027c2:	0007d783          	lhu	a5,0(a5)
204027c6:	06f00713          	li	a4,111
204027ca:	ffffe617          	auipc	a2,0xffffe
204027ce:	c5a60613          	addi	a2,a2,-934 # 20400424 <__sf_fake_stdout+0x34>
204027d2:	0ee80463          	beq	a6,a4,204028ba <_printf_i+0x1d0>
204027d6:	4829                	li	a6,10
204027d8:	040401a3          	sb	zero,67(s0)
204027dc:	4058                	lw	a4,4(s0)
204027de:	c418                	sw	a4,8(s0)
204027e0:	00074563          	bltz	a4,204027ea <_printf_i+0x100>
204027e4:	400c                	lw	a1,0(s0)
204027e6:	99ed                	andi	a1,a1,-5
204027e8:	c00c                	sw	a1,0(s0)
204027ea:	e399                	bnez	a5,204027f0 <_printf_i+0x106>
204027ec:	8ab6                	mv	s5,a3
204027ee:	cf19                	beqz	a4,2040280c <_printf_i+0x122>
204027f0:	8ab6                	mv	s5,a3
204027f2:	0307f733          	remu	a4,a5,a6
204027f6:	1afd                	addi	s5,s5,-1
204027f8:	9732                	add	a4,a4,a2
204027fa:	00074703          	lbu	a4,0(a4)
204027fe:	00ea8023          	sb	a4,0(s5)
20402802:	873e                	mv	a4,a5
20402804:	0307d7b3          	divu	a5,a5,a6
20402808:	ff0775e3          	bgeu	a4,a6,204027f2 <_printf_i+0x108>
2040280c:	47a1                	li	a5,8
2040280e:	00f81e63          	bne	a6,a5,2040282a <_printf_i+0x140>
20402812:	401c                	lw	a5,0(s0)
20402814:	8b85                	andi	a5,a5,1
20402816:	cb91                	beqz	a5,2040282a <_printf_i+0x140>
20402818:	4058                	lw	a4,4(s0)
2040281a:	481c                	lw	a5,16(s0)
2040281c:	00e7c763          	blt	a5,a4,2040282a <_printf_i+0x140>
20402820:	03000793          	li	a5,48
20402824:	fefa8fa3          	sb	a5,-1(s5)
20402828:	1afd                	addi	s5,s5,-1
2040282a:	415686b3          	sub	a3,a3,s5
2040282e:	c814                	sw	a3,16(s0)
20402830:	874e                	mv	a4,s3
20402832:	86ca                	mv	a3,s2
20402834:	0070                	addi	a2,sp,12
20402836:	85a2                	mv	a1,s0
20402838:	8526                	mv	a0,s1
2040283a:	3355                	jal	204025de <_printf_common>
2040283c:	5a7d                	li	s4,-1
2040283e:	0d451b63          	bne	a0,s4,20402914 <_printf_i+0x22a>
20402842:	557d                	li	a0,-1
20402844:	50b2                	lw	ra,44(sp)
20402846:	5422                	lw	s0,40(sp)
20402848:	5492                	lw	s1,36(sp)
2040284a:	5902                	lw	s2,32(sp)
2040284c:	49f2                	lw	s3,28(sp)
2040284e:	4a62                	lw	s4,24(sp)
20402850:	4ad2                	lw	s5,20(sp)
20402852:	4b42                	lw	s6,16(sp)
20402854:	6145                	addi	sp,sp,48
20402856:	8082                	ret
20402858:	050582a3          	sb	a6,69(a1)
2040285c:	ffffe617          	auipc	a2,0xffffe
20402860:	bc860613          	addi	a2,a2,-1080 # 20400424 <__sf_fake_stdout+0x34>
20402864:	400c                	lw	a1,0(s0)
20402866:	4308                	lw	a0,0(a4)
20402868:	0805f813          	andi	a6,a1,128
2040286c:	411c                	lw	a5,0(a0)
2040286e:	0511                	addi	a0,a0,4
20402870:	02080d63          	beqz	a6,204028aa <_printf_i+0x1c0>
20402874:	c308                	sw	a0,0(a4)
20402876:	0015f713          	andi	a4,a1,1
2040287a:	c701                	beqz	a4,20402882 <_printf_i+0x198>
2040287c:	0205e593          	ori	a1,a1,32
20402880:	c00c                	sw	a1,0(s0)
20402882:	4841                	li	a6,16
20402884:	fbb1                	bnez	a5,204027d8 <_printf_i+0xee>
20402886:	4018                	lw	a4,0(s0)
20402888:	fdf77713          	andi	a4,a4,-33
2040288c:	c018                	sw	a4,0(s0)
2040288e:	b7a9                	j	204027d8 <_printf_i+0xee>
20402890:	419c                	lw	a5,0(a1)
20402892:	0207e793          	ori	a5,a5,32
20402896:	c19c                	sw	a5,0(a1)
20402898:	07800793          	li	a5,120
2040289c:	04f402a3          	sb	a5,69(s0)
204028a0:	ffffe617          	auipc	a2,0xffffe
204028a4:	b9860613          	addi	a2,a2,-1128 # 20400438 <__sf_fake_stdout+0x48>
204028a8:	bf75                	j	20402864 <_printf_i+0x17a>
204028aa:	0405f813          	andi	a6,a1,64
204028ae:	c308                	sw	a0,0(a4)
204028b0:	fc0803e3          	beqz	a6,20402876 <_printf_i+0x18c>
204028b4:	07c2                	slli	a5,a5,0x10
204028b6:	83c1                	srli	a5,a5,0x10
204028b8:	bf7d                	j	20402876 <_printf_i+0x18c>
204028ba:	4821                	li	a6,8
204028bc:	bf31                	j	204027d8 <_printf_i+0xee>
204028be:	4190                	lw	a2,0(a1)
204028c0:	431c                	lw	a5,0(a4)
204028c2:	49cc                	lw	a1,20(a1)
204028c4:	08067813          	andi	a6,a2,128
204028c8:	00478513          	addi	a0,a5,4
204028cc:	00080663          	beqz	a6,204028d8 <_printf_i+0x1ee>
204028d0:	c308                	sw	a0,0(a4)
204028d2:	439c                	lw	a5,0(a5)
204028d4:	c38c                	sw	a1,0(a5)
204028d6:	a801                	j	204028e6 <_printf_i+0x1fc>
204028d8:	c308                	sw	a0,0(a4)
204028da:	04067613          	andi	a2,a2,64
204028de:	439c                	lw	a5,0(a5)
204028e0:	da75                	beqz	a2,204028d4 <_printf_i+0x1ea>
204028e2:	00b79023          	sh	a1,0(a5)
204028e6:	00042823          	sw	zero,16(s0)
204028ea:	8ab6                	mv	s5,a3
204028ec:	b791                	j	20402830 <_printf_i+0x146>
204028ee:	431c                	lw	a5,0(a4)
204028f0:	41d0                	lw	a2,4(a1)
204028f2:	4581                	li	a1,0
204028f4:	00478693          	addi	a3,a5,4
204028f8:	c314                	sw	a3,0(a4)
204028fa:	0007aa83          	lw	s5,0(a5)
204028fe:	8556                	mv	a0,s5
20402900:	31d1                	jal	204025c4 <memchr>
20402902:	c501                	beqz	a0,2040290a <_printf_i+0x220>
20402904:	41550533          	sub	a0,a0,s5
20402908:	c048                	sw	a0,4(s0)
2040290a:	405c                	lw	a5,4(s0)
2040290c:	c81c                	sw	a5,16(s0)
2040290e:	040401a3          	sb	zero,67(s0)
20402912:	bf39                	j	20402830 <_printf_i+0x146>
20402914:	4814                	lw	a3,16(s0)
20402916:	8656                	mv	a2,s5
20402918:	85ca                	mv	a1,s2
2040291a:	8526                	mv	a0,s1
2040291c:	9982                	jalr	s3
2040291e:	f34502e3          	beq	a0,s4,20402842 <_printf_i+0x158>
20402922:	401c                	lw	a5,0(s0)
20402924:	8b89                	andi	a5,a5,2
20402926:	e78d                	bnez	a5,20402950 <_printf_i+0x266>
20402928:	47b2                	lw	a5,12(sp)
2040292a:	4448                	lw	a0,12(s0)
2040292c:	f0f55ce3          	bge	a0,a5,20402844 <_printf_i+0x15a>
20402930:	853e                	mv	a0,a5
20402932:	bf09                	j	20402844 <_printf_i+0x15a>
20402934:	4685                	li	a3,1
20402936:	8656                	mv	a2,s5
20402938:	85ca                	mv	a1,s2
2040293a:	8526                	mv	a0,s1
2040293c:	9982                	jalr	s3
2040293e:	f16502e3          	beq	a0,s6,20402842 <_printf_i+0x158>
20402942:	0a05                	addi	s4,s4,1
20402944:	445c                	lw	a5,12(s0)
20402946:	4732                	lw	a4,12(sp)
20402948:	8f99                	sub	a5,a5,a4
2040294a:	fefa45e3          	blt	s4,a5,20402934 <_printf_i+0x24a>
2040294e:	bfe9                	j	20402928 <_printf_i+0x23e>
20402950:	4a01                	li	s4,0
20402952:	01940a93          	addi	s5,s0,25
20402956:	5b7d                	li	s6,-1
20402958:	b7f5                	j	20402944 <_printf_i+0x25a>

2040295a <_read_r>:
_read_r():
2040295a:	1141                	addi	sp,sp,-16
2040295c:	c422                	sw	s0,8(sp)
2040295e:	842a                	mv	s0,a0
20402960:	852e                	mv	a0,a1
20402962:	85b2                	mv	a1,a2
20402964:	8636                	mv	a2,a3
20402966:	5fbfe797          	auipc	a5,0x5fbfe
2040296a:	e607af23          	sw	zero,-386(a5) # 800007e4 <errno>
2040296e:	c606                	sw	ra,12(sp)
20402970:	207d                	jal	20402a1e <_read>
20402972:	57fd                	li	a5,-1
20402974:	00f51863          	bne	a0,a5,20402984 <_read_r+0x2a>
20402978:	5fbfe797          	auipc	a5,0x5fbfe
2040297c:	e6c7a783          	lw	a5,-404(a5) # 800007e4 <errno>
20402980:	c391                	beqz	a5,20402984 <_read_r+0x2a>
20402982:	c01c                	sw	a5,0(s0)
20402984:	40b2                	lw	ra,12(sp)
20402986:	4422                	lw	s0,8(sp)
20402988:	0141                	addi	sp,sp,16
2040298a:	8082                	ret

2040298c <_close>:
_close():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2040298c:	1101                	addi	sp,sp,-32
2040298e:	ce06                	sw	ra,28(sp)
20402990:	cc22                	sw	s0,24(sp)
20402992:	1000                	addi	s0,sp,32
20402994:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20402998:	2a5d                	jal	20402b4e <__errno>
2040299a:	872a                	mv	a4,a0
2040299c:	05800793          	li	a5,88
204029a0:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:5
    return -1;
204029a2:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_close.c:6
}
204029a4:	853e                	mv	a0,a5
204029a6:	40f2                	lw	ra,28(sp)
204029a8:	4462                	lw	s0,24(sp)
204029aa:	6105                	addi	sp,sp,32
204029ac:	8082                	ret

204029ae <_fstat>:
_fstat():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
204029ae:	1101                	addi	sp,sp,-32
204029b0:	ce06                	sw	ra,28(sp)
204029b2:	cc22                	sw	s0,24(sp)
204029b4:	1000                	addi	s0,sp,32
204029b6:	fea42623          	sw	a0,-20(s0)
204029ba:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
204029be:	2a41                	jal	20402b4e <__errno>
204029c0:	872a                	mv	a4,a0
204029c2:	fa800793          	li	a5,-88
204029c6:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:6
    return -1;
204029c8:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_fstat.c:7
}
204029ca:	853e                	mv	a0,a5
204029cc:	40f2                	lw	ra,28(sp)
204029ce:	4462                	lw	s0,24(sp)
204029d0:	6105                	addi	sp,sp,32
204029d2:	8082                	ret

204029d4 <_isatty>:
_isatty():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
204029d4:	1101                	addi	sp,sp,-32
204029d6:	ce22                	sw	s0,28(sp)
204029d8:	1000                	addi	s0,sp,32
204029da:	fea42623          	sw	a0,-20(s0)
204029de:	fec42783          	lw	a5,-20(s0)
204029e2:	17fd                	addi	a5,a5,-1
204029e4:	0017b793          	seqz	a5,a5
204029e8:	0ff7f793          	zext.b	a5,a5
204029ec:	853e                	mv	a0,a5
204029ee:	4472                	lw	s0,28(sp)
204029f0:	6105                	addi	sp,sp,32
204029f2:	8082                	ret

204029f4 <_lseek>:
_lseek():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
204029f4:	1101                	addi	sp,sp,-32
204029f6:	ce06                	sw	ra,28(sp)
204029f8:	cc22                	sw	s0,24(sp)
204029fa:	1000                	addi	s0,sp,32
204029fc:	fea42623          	sw	a0,-20(s0)
20402a00:	feb42423          	sw	a1,-24(s0)
20402a04:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20402a08:	2299                	jal	20402b4e <__errno>
20402a0a:	872a                	mv	a4,a0
20402a0c:	05800793          	li	a5,88
20402a10:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20402a12:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_lseek.c:7
}
20402a14:	853e                	mv	a0,a5
20402a16:	40f2                	lw	ra,28(sp)
20402a18:	4462                	lw	s0,24(sp)
20402a1a:	6105                	addi	sp,sp,32
20402a1c:	8082                	ret

20402a1e <_read>:
_read():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20402a1e:	1101                	addi	sp,sp,-32
20402a20:	ce06                	sw	ra,28(sp)
20402a22:	cc22                	sw	s0,24(sp)
20402a24:	1000                	addi	s0,sp,32
20402a26:	fea42623          	sw	a0,-20(s0)
20402a2a:	feb42423          	sw	a1,-24(s0)
20402a2e:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20402a32:	2a31                	jal	20402b4e <__errno>
20402a34:	872a                	mv	a4,a0
20402a36:	05800793          	li	a5,88
20402a3a:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:6
    return -1;
20402a3c:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_read.c:7
}
20402a3e:	853e                	mv	a0,a5
20402a40:	40f2                	lw	ra,28(sp)
20402a42:	4462                	lw	s0,24(sp)
20402a44:	6105                	addi	sp,sp,32
20402a46:	8082                	ret

20402a48 <_sbrk>:
_sbrk():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20402a48:	7179                	addi	sp,sp,-48
20402a4a:	d606                	sw	ra,44(sp)
20402a4c:	d422                	sw	s0,40(sp)
20402a4e:	1800                	addi	s0,sp,48
20402a50:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20402a54:	800007b7          	lui	a5,0x80000
20402a58:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe694>
20402a5c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20402a60:	800027b7          	lui	a5,0x80002
20402a64:	91078713          	addi	a4,a5,-1776 # 80001910 <metal_segment_heap_target_end+0xfffff800>
20402a68:	800027b7          	lui	a5,0x80002
20402a6c:	11078793          	addi	a5,a5,272 # 80002110 <metal_segment_heap_target_end+0x0>
20402a70:	00f71463          	bne	a4,a5,20402a78 <_sbrk+0x30>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402a74:	57fd                	li	a5,-1
20402a76:	a899                	j	20402acc <_sbrk+0x84>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20402a78:	800007b7          	lui	a5,0x80000
20402a7c:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe694>
20402a80:	fdc42783          	lw	a5,-36(s0)
20402a84:	973e                	add	a4,a4,a5
20402a86:	800027b7          	lui	a5,0x80002
20402a8a:	11078793          	addi	a5,a5,272 # 80002110 <metal_segment_heap_target_end+0x0>
20402a8e:	02f77663          	bgeu	a4,a5,20402aba <_sbrk+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20402a92:	800007b7          	lui	a5,0x80000
20402a96:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe694>
20402a9a:	fdc42783          	lw	a5,-36(s0)
20402a9e:	973e                	add	a4,a4,a5
20402aa0:	800007b7          	lui	a5,0x80000
20402aa4:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe694>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20402aa8:	fdc42583          	lw	a1,-36(s0)
20402aac:	fec42503          	lw	a0,-20(s0)
20402ab0:	ddefd0ef          	jal	ra,2040008e <metal_mem_scrub>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20402ab4:	fec42783          	lw	a5,-20(s0)
20402ab8:	a811                	j	20402acc <_sbrk+0x84>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20402aba:	800007b7          	lui	a5,0x80000
20402abe:	80002737          	lui	a4,0x80002
20402ac2:	11070713          	addi	a4,a4,272 # 80002110 <metal_segment_heap_target_end+0x0>
20402ac6:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe694>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20402aca:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_sbrk.c:43
}
20402acc:	853e                	mv	a0,a5
20402ace:	50b2                	lw	ra,44(sp)
20402ad0:	5422                	lw	s0,40(sp)
20402ad2:	6145                	addi	sp,sp,48
20402ad4:	8082                	ret

20402ad6 <_write>:
_write():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20402ad6:	7179                	addi	sp,sp,-48
20402ad8:	d606                	sw	ra,44(sp)
20402ada:	d422                	sw	s0,40(sp)
20402adc:	1800                	addi	s0,sp,48
20402ade:	fca42e23          	sw	a0,-36(s0)
20402ae2:	fcb42c23          	sw	a1,-40(s0)
20402ae6:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20402aea:	fdc42703          	lw	a4,-36(s0)
20402aee:	4785                	li	a5,1
20402af0:	00f70963          	beq	a4,a5,20402b02 <_write+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20402af4:	28a9                	jal	20402b4e <__errno>
20402af6:	872a                	mv	a4,a0
20402af8:	05800793          	li	a5,88
20402afc:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:10
        return -1;
20402afe:	57fd                	li	a5,-1
20402b00:	a82d                	j	20402b3a <_write+0x64>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20402b02:	fd842783          	lw	a5,-40(s0)
20402b06:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20402b0a:	fe042623          	sw	zero,-20(s0)
20402b0e:	a839                	j	20402b2c <_write+0x56>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20402b10:	fe842703          	lw	a4,-24(s0)
20402b14:	fec42783          	lw	a5,-20(s0)
20402b18:	97ba                	add	a5,a5,a4
20402b1a:	0007c783          	lbu	a5,0(a5)
20402b1e:	853e                	mv	a0,a5
20402b20:	2e89                	jal	20402e72 <metal_tty_putc>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20402b22:	fec42783          	lw	a5,-20(s0)
20402b26:	0785                	addi	a5,a5,1
20402b28:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20402b2c:	fec42703          	lw	a4,-20(s0)
20402b30:	fd442783          	lw	a5,-44(s0)
20402b34:	fcf76ee3          	bltu	a4,a5,20402b10 <_write+0x3a>
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:16
    return 0;
20402b38:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_write.c:17
}
20402b3a:	853e                	mv	a0,a5
20402b3c:	50b2                	lw	ra,44(sp)
20402b3e:	5422                	lw	s0,40(sp)
20402b40:	6145                	addi	sp,sp,48
20402b42:	8082                	ret

20402b44 <atexit>:
atexit():
20402b44:	85aa                	mv	a1,a0
20402b46:	4681                	li	a3,0
20402b48:	4601                	li	a2,0
20402b4a:	4501                	li	a0,0
20402b4c:	a0e9                	j	20402c16 <__register_exitproc>

20402b4e <__errno>:
__errno():
20402b4e:	5fbfe517          	auipc	a0,0x5fbfe
20402b52:	c5252503          	lw	a0,-942(a0) # 800007a0 <_impure_ptr>
20402b56:	8082                	ret

20402b58 <exit>:
exit():
20402b58:	1141                	addi	sp,sp,-16
20402b5a:	c422                	sw	s0,8(sp)
20402b5c:	c606                	sw	ra,12(sp)
20402b5e:	00000797          	auipc	a5,0x0
20402b62:	13478793          	addi	a5,a5,308 # 20402c92 <__call_exitprocs>
20402b66:	842a                	mv	s0,a0
20402b68:	c399                	beqz	a5,20402b6e <exit+0x16>
20402b6a:	4581                	li	a1,0
20402b6c:	221d                	jal	20402c92 <__call_exitprocs>
20402b6e:	ffffe517          	auipc	a0,0xffffe
20402b72:	48252503          	lw	a0,1154(a0) # 20400ff0 <_global_impure_ptr>
20402b76:	551c                	lw	a5,40(a0)
20402b78:	c391                	beqz	a5,20402b7c <exit+0x24>
20402b7a:	9782                	jalr	a5
20402b7c:	8522                	mv	a0,s0
20402b7e:	229040ef          	jal	ra,204075a6 <_exit>

20402b82 <__libc_fini_array>:
__libc_fini_array():
20402b82:	1141                	addi	sp,sp,-16
20402b84:	c422                	sw	s0,8(sp)
20402b86:	c226                	sw	s1,4(sp)
20402b88:	ffffd417          	auipc	s0,0xffffd
20402b8c:	76840413          	addi	s0,s0,1896 # 204002f0 <__fini_array_end>
20402b90:	ffffd497          	auipc	s1,0xffffd
20402b94:	76048493          	addi	s1,s1,1888 # 204002f0 <__fini_array_end>
20402b98:	8c05                	sub	s0,s0,s1
20402b9a:	c606                	sw	ra,12(sp)
20402b9c:	8409                	srai	s0,s0,0x2
20402b9e:	e411                	bnez	s0,20402baa <__libc_fini_array+0x28>
20402ba0:	40b2                	lw	ra,12(sp)
20402ba2:	4422                	lw	s0,8(sp)
20402ba4:	4492                	lw	s1,4(sp)
20402ba6:	0141                	addi	sp,sp,16
20402ba8:	8082                	ret
20402baa:	147d                	addi	s0,s0,-1
20402bac:	00241793          	slli	a5,s0,0x2
20402bb0:	97a6                	add	a5,a5,s1
20402bb2:	439c                	lw	a5,0(a5)
20402bb4:	9782                	jalr	a5
20402bb6:	b7e5                	j	20402b9e <__libc_fini_array+0x1c>

20402bb8 <__libc_init_array>:
__libc_init_array():
20402bb8:	1141                	addi	sp,sp,-16
20402bba:	c422                	sw	s0,8(sp)
20402bbc:	c226                	sw	s1,4(sp)
20402bbe:	ffffd417          	auipc	s0,0xffffd
20402bc2:	72240413          	addi	s0,s0,1826 # 204002e0 <_metal_tty_init_ptr>
20402bc6:	ffffd497          	auipc	s1,0xffffd
20402bca:	71a48493          	addi	s1,s1,1818 # 204002e0 <_metal_tty_init_ptr>
20402bce:	8c81                	sub	s1,s1,s0
20402bd0:	c04a                	sw	s2,0(sp)
20402bd2:	c606                	sw	ra,12(sp)
20402bd4:	8489                	srai	s1,s1,0x2
20402bd6:	4901                	li	s2,0
20402bd8:	02991563          	bne	s2,s1,20402c02 <__libc_init_array+0x4a>
20402bdc:	ffffd417          	auipc	s0,0xffffd
20402be0:	70440413          	addi	s0,s0,1796 # 204002e0 <_metal_tty_init_ptr>
20402be4:	ffffd497          	auipc	s1,0xffffd
20402be8:	6fc48493          	addi	s1,s1,1788 # 204002e0 <_metal_tty_init_ptr>
20402bec:	8c81                	sub	s1,s1,s0
20402bee:	8489                	srai	s1,s1,0x2
20402bf0:	4901                	li	s2,0
20402bf2:	00991d63          	bne	s2,s1,20402c0c <__libc_init_array+0x54>
20402bf6:	40b2                	lw	ra,12(sp)
20402bf8:	4422                	lw	s0,8(sp)
20402bfa:	4492                	lw	s1,4(sp)
20402bfc:	4902                	lw	s2,0(sp)
20402bfe:	0141                	addi	sp,sp,16
20402c00:	8082                	ret
20402c02:	401c                	lw	a5,0(s0)
20402c04:	0905                	addi	s2,s2,1
20402c06:	0411                	addi	s0,s0,4
20402c08:	9782                	jalr	a5
20402c0a:	b7f9                	j	20402bd8 <__libc_init_array+0x20>
20402c0c:	401c                	lw	a5,0(s0)
20402c0e:	0905                	addi	s2,s2,1
20402c10:	0411                	addi	s0,s0,4
20402c12:	9782                	jalr	a5
20402c14:	bff9                	j	20402bf2 <__libc_init_array+0x3a>

20402c16 <__register_exitproc>:
__register_exitproc():
20402c16:	88aa                	mv	a7,a0
20402c18:	5fbfe517          	auipc	a0,0x5fbfe
20402c1c:	bd050513          	addi	a0,a0,-1072 # 800007e8 <_global_atexit>
20402c20:	411c                	lw	a5,0(a0)
20402c22:	ef91                	bnez	a5,20402c3e <__register_exitproc+0x28>
20402c24:	5fbfe717          	auipc	a4,0x5fbfe
20402c28:	bd070713          	addi	a4,a4,-1072 # 800007f4 <_global_atexit0>
20402c2c:	c118                	sw	a4,0(a0)
20402c2e:	00000513          	li	a0,0
20402c32:	87ba                	mv	a5,a4
20402c34:	c509                	beqz	a0,20402c3e <__register_exitproc+0x28>
20402c36:	411c                	lw	a5,0(a0)
20402c38:	08f72423          	sw	a5,136(a4)
20402c3c:	87ba                	mv	a5,a4
20402c3e:	43d8                	lw	a4,4(a5)
20402c40:	487d                	li	a6,31
20402c42:	557d                	li	a0,-1
20402c44:	04e84663          	blt	a6,a4,20402c90 <__register_exitproc+0x7a>
20402c48:	02088d63          	beqz	a7,20402c82 <__register_exitproc+0x6c>
20402c4c:	0887a803          	lw	a6,136(a5)
20402c50:	04080063          	beqz	a6,20402c90 <__register_exitproc+0x7a>
20402c54:	00271513          	slli	a0,a4,0x2
20402c58:	9542                	add	a0,a0,a6
20402c5a:	c110                	sw	a2,0(a0)
20402c5c:	10082303          	lw	t1,256(a6)
20402c60:	4605                	li	a2,1
20402c62:	00e61633          	sll	a2,a2,a4
20402c66:	00c36333          	or	t1,t1,a2
20402c6a:	10682023          	sw	t1,256(a6)
20402c6e:	08d52023          	sw	a3,128(a0)
20402c72:	4689                	li	a3,2
20402c74:	00d89763          	bne	a7,a3,20402c82 <__register_exitproc+0x6c>
20402c78:	10482683          	lw	a3,260(a6)
20402c7c:	8e55                	or	a2,a2,a3
20402c7e:	10c82223          	sw	a2,260(a6)
20402c82:	00170693          	addi	a3,a4,1
20402c86:	070a                	slli	a4,a4,0x2
20402c88:	c3d4                	sw	a3,4(a5)
20402c8a:	97ba                	add	a5,a5,a4
20402c8c:	c78c                	sw	a1,8(a5)
20402c8e:	4501                	li	a0,0
20402c90:	8082                	ret

20402c92 <__call_exitprocs>:
__call_exitprocs():
20402c92:	7179                	addi	sp,sp,-48
20402c94:	ca56                	sw	s5,20(sp)
20402c96:	c85a                	sw	s6,16(sp)
20402c98:	c65e                	sw	s7,12(sp)
20402c9a:	c462                	sw	s8,8(sp)
20402c9c:	d606                	sw	ra,44(sp)
20402c9e:	d422                	sw	s0,40(sp)
20402ca0:	d226                	sw	s1,36(sp)
20402ca2:	d04a                	sw	s2,32(sp)
20402ca4:	ce4e                	sw	s3,28(sp)
20402ca6:	cc52                	sw	s4,24(sp)
20402ca8:	c266                	sw	s9,4(sp)
20402caa:	8b2a                	mv	s6,a0
20402cac:	8aae                	mv	s5,a1
20402cae:	5fbfeb97          	auipc	s7,0x5fbfe
20402cb2:	b3ab8b93          	addi	s7,s7,-1222 # 800007e8 <_global_atexit>
20402cb6:	4c05                	li	s8,1
20402cb8:	000ba483          	lw	s1,0(s7)
20402cbc:	cc81                	beqz	s1,20402cd4 <__call_exitprocs+0x42>
20402cbe:	40c0                	lw	s0,4(s1)
20402cc0:	0884a983          	lw	s3,136(s1)
20402cc4:	fff40913          	addi	s2,s0,-1
20402cc8:	040a                	slli	s0,s0,0x2
20402cca:	00898a33          	add	s4,s3,s0
20402cce:	9426                	add	s0,s0,s1
20402cd0:	00095f63          	bgez	s2,20402cee <__call_exitprocs+0x5c>
20402cd4:	50b2                	lw	ra,44(sp)
20402cd6:	5422                	lw	s0,40(sp)
20402cd8:	5492                	lw	s1,36(sp)
20402cda:	5902                	lw	s2,32(sp)
20402cdc:	49f2                	lw	s3,28(sp)
20402cde:	4a62                	lw	s4,24(sp)
20402ce0:	4ad2                	lw	s5,20(sp)
20402ce2:	4b42                	lw	s6,16(sp)
20402ce4:	4bb2                	lw	s7,12(sp)
20402ce6:	4c22                	lw	s8,8(sp)
20402ce8:	4c92                	lw	s9,4(sp)
20402cea:	6145                	addi	sp,sp,48
20402cec:	8082                	ret
20402cee:	000a8c63          	beqz	s5,20402d06 <__call_exitprocs+0x74>
20402cf2:	00099663          	bnez	s3,20402cfe <__call_exitprocs+0x6c>
20402cf6:	197d                	addi	s2,s2,-1
20402cf8:	1a71                	addi	s4,s4,-4
20402cfa:	1471                	addi	s0,s0,-4
20402cfc:	bfd1                	j	20402cd0 <__call_exitprocs+0x3e>
20402cfe:	07ca2783          	lw	a5,124(s4)
20402d02:	ff579ae3          	bne	a5,s5,20402cf6 <__call_exitprocs+0x64>
20402d06:	40d8                	lw	a4,4(s1)
20402d08:	405c                	lw	a5,4(s0)
20402d0a:	177d                	addi	a4,a4,-1
20402d0c:	03271863          	bne	a4,s2,20402d3c <__call_exitprocs+0xaa>
20402d10:	0124a223          	sw	s2,4(s1)
20402d14:	d3ed                	beqz	a5,20402cf6 <__call_exitprocs+0x64>
20402d16:	0044ac83          	lw	s9,4(s1)
20402d1a:	00098863          	beqz	s3,20402d2a <__call_exitprocs+0x98>
20402d1e:	1009a683          	lw	a3,256(s3)
20402d22:	012c1733          	sll	a4,s8,s2
20402d26:	8ef9                	and	a3,a3,a4
20402d28:	ee89                	bnez	a3,20402d42 <__call_exitprocs+0xb0>
20402d2a:	9782                	jalr	a5
20402d2c:	40d8                	lw	a4,4(s1)
20402d2e:	000ba783          	lw	a5,0(s7)
20402d32:	f99713e3          	bne	a4,s9,20402cb8 <__call_exitprocs+0x26>
20402d36:	fcf480e3          	beq	s1,a5,20402cf6 <__call_exitprocs+0x64>
20402d3a:	bfbd                	j	20402cb8 <__call_exitprocs+0x26>
20402d3c:	00042223          	sw	zero,4(s0)
20402d40:	bfd1                	j	20402d14 <__call_exitprocs+0x82>
20402d42:	1049a683          	lw	a3,260(s3)
20402d46:	ffca2583          	lw	a1,-4(s4)
20402d4a:	8f75                	and	a4,a4,a3
20402d4c:	e701                	bnez	a4,20402d54 <__call_exitprocs+0xc2>
20402d4e:	855a                	mv	a0,s6
20402d50:	9782                	jalr	a5
20402d52:	bfe9                	j	20402d2c <__call_exitprocs+0x9a>
20402d54:	852e                	mv	a0,a1
20402d56:	9782                	jalr	a5
20402d58:	bfd1                	j	20402d2c <__call_exitprocs+0x9a>

20402d5a <metal_init>:
metal_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402d5a:	1101                	addi	sp,sp,-32
20402d5c:	ce06                	sw	ra,28(sp)
20402d5e:	cc22                	sw	s0,24(sp)
20402d60:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402d62:	800007b7          	lui	a5,0x80000
20402d66:	7ec7a783          	lw	a5,2028(a5) # 800007ec <metal_segment_heap_target_end+0xffffe6dc>
20402d6a:	efa9                	bnez	a5,20402dc4 <metal_init+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20402d6c:	800007b7          	lui	a5,0x80000
20402d70:	4705                	li	a4,1
20402d72:	7ee7a623          	sw	a4,2028(a5) # 800007ec <metal_segment_heap_target_end+0xffffe6dc>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402d76:	204007b7          	lui	a5,0x20400
20402d7a:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20402d7e:	204007b7          	lui	a5,0x20400
20402d82:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402d86:	04e7f163          	bgeu	a5,a4,20402dc8 <metal_init+0x6e>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402d8a:	204007b7          	lui	a5,0x20400
20402d8e:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402d92:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402d96:	a831                	j	20402db2 <metal_init+0x58>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402d98:	fec42783          	lw	a5,-20(s0)
20402d9c:	439c                	lw	a5,0(a5)
20402d9e:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:33

        func();
20402da2:	fe842783          	lw	a5,-24(s0)
20402da6:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:35

        funcptr += 1;
20402da8:	fec42783          	lw	a5,-20(s0)
20402dac:	0791                	addi	a5,a5,4
20402dae:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402db2:	fec42703          	lw	a4,-20(s0)
20402db6:	204007b7          	lui	a5,0x20400
20402dba:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
20402dbe:	fcf71de3          	bne	a4,a5,20402d98 <metal_init+0x3e>
20402dc2:	a021                	j	20402dca <metal_init+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:21
        return;
20402dc4:	0001                	nop
20402dc6:	a011                	j	20402dca <metal_init+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:26
        return;
20402dc8:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:37
    }
}
20402dca:	40f2                	lw	ra,28(sp)
20402dcc:	4462                	lw	s0,24(sp)
20402dce:	6105                	addi	sp,sp,32
20402dd0:	8082                	ret

20402dd2 <metal_fini>:
metal_fini():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:39

void metal_fini(void) {
20402dd2:	1101                	addi	sp,sp,-32
20402dd4:	ce06                	sw	ra,28(sp)
20402dd6:	cc22                	sw	s0,24(sp)
20402dd8:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20402dda:	800007b7          	lui	a5,0x80000
20402dde:	7f07a783          	lw	a5,2032(a5) # 800007f0 <metal_segment_heap_target_end+0xffffe6e0>
20402de2:	efa9                	bnez	a5,20402e3c <metal_fini+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20402de4:	800007b7          	lui	a5,0x80000
20402de8:	4705                	li	a4,1
20402dea:	7ee7a823          	sw	a4,2032(a5) # 800007f0 <metal_segment_heap_target_end+0xffffe6e0>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20402dee:	204007b7          	lui	a5,0x20400
20402df2:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20402df6:	204007b7          	lui	a5,0x20400
20402dfa:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402dfe:	04e7f163          	bgeu	a5,a4,20402e40 <metal_fini+0x6e>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20402e02:	204007b7          	lui	a5,0x20400
20402e06:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402e0a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402e0e:	a831                	j	20402e2a <metal_fini+0x58>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20402e10:	fec42783          	lw	a5,-20(s0)
20402e14:	439c                	lw	a5,0(a5)
20402e16:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:55

        func();
20402e1a:	fe842783          	lw	a5,-24(s0)
20402e1e:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:57

        funcptr += 1;
20402e20:	fec42783          	lw	a5,-20(s0)
20402e24:	0791                	addi	a5,a5,4
20402e26:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402e2a:	fec42703          	lw	a4,-20(s0)
20402e2e:	204007b7          	lui	a5,0x20400
20402e32:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402e36:	fcf71de3          	bne	a4,a5,20402e10 <metal_fini+0x3e>
20402e3a:	a021                	j	20402e42 <metal_fini+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:43
        return;
20402e3c:	0001                	nop
20402e3e:	a011                	j	20402e42 <metal_fini+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:48
        return;
20402e40:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:59
    }
}
20402e42:	40f2                	lw	ra,28(sp)
20402e44:	4462                	lw	s0,24(sp)
20402e46:	6105                	addi	sp,sp,32
20402e48:	8082                	ret

20402e4a <metal_init_run>:
metal_init_run():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402e4a:	1141                	addi	sp,sp,-16
20402e4c:	c606                	sw	ra,12(sp)
20402e4e:	c422                	sw	s0,8(sp)
20402e50:	0800                	addi	s0,sp,16
20402e52:	3721                	jal	20402d5a <metal_init>
20402e54:	0001                	nop
20402e56:	40b2                	lw	ra,12(sp)
20402e58:	4422                	lw	s0,8(sp)
20402e5a:	0141                	addi	sp,sp,16
20402e5c:	8082                	ret

20402e5e <metal_fini_run>:
metal_fini_run():
C:/wsFreedomStudio/kernel/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20402e5e:	1141                	addi	sp,sp,-16
20402e60:	c606                	sw	ra,12(sp)
20402e62:	c422                	sw	s0,8(sp)
20402e64:	0800                	addi	s0,sp,16
20402e66:	37b5                	jal	20402dd2 <metal_fini>
20402e68:	0001                	nop
20402e6a:	40b2                	lw	ra,12(sp)
20402e6c:	4422                	lw	s0,8(sp)
20402e6e:	0141                	addi	sp,sp,16
20402e70:	8082                	ret

20402e72 <metal_tty_putc>:
metal_tty_putc():
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20402e72:	1101                	addi	sp,sp,-32
20402e74:	ce06                	sw	ra,28(sp)
20402e76:	cc22                	sw	s0,24(sp)
20402e78:	1000                	addi	s0,sp,32
20402e7a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20402e7e:	fec42583          	lw	a1,-20(s0)
20402e82:	800007b7          	lui	a5,0x80000
20402e86:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20402e8a:	282d                	jal	20402ec4 <metal_uart_putc>
20402e8c:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/tty.c:14
}
20402e8e:	853e                	mv	a0,a5
20402e90:	40f2                	lw	ra,28(sp)
20402e92:	4462                	lw	s0,24(sp)
20402e94:	6105                	addi	sp,sp,32
20402e96:	8082                	ret

20402e98 <metal_uart_init>:
metal_uart_init():
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20402e98:	1101                	addi	sp,sp,-32
20402e9a:	ce06                	sw	ra,28(sp)
20402e9c:	cc22                	sw	s0,24(sp)
20402e9e:	1000                	addi	s0,sp,32
20402ea0:	fea42623          	sw	a0,-20(s0)
20402ea4:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20402ea8:	fec42783          	lw	a5,-20(s0)
20402eac:	439c                	lw	a5,0(a5)
20402eae:	439c                	lw	a5,0(a5)
20402eb0:	fe842583          	lw	a1,-24(s0)
20402eb4:	fec42503          	lw	a0,-20(s0)
20402eb8:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:61
}
20402eba:	0001                	nop
20402ebc:	40f2                	lw	ra,28(sp)
20402ebe:	4462                	lw	s0,24(sp)
20402ec0:	6105                	addi	sp,sp,32
20402ec2:	8082                	ret

20402ec4 <metal_uart_putc>:
metal_uart_putc():
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20402ec4:	1101                	addi	sp,sp,-32
20402ec6:	ce06                	sw	ra,28(sp)
20402ec8:	cc22                	sw	s0,24(sp)
20402eca:	1000                	addi	s0,sp,32
20402ecc:	fea42623          	sw	a0,-20(s0)
20402ed0:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20402ed4:	fec42783          	lw	a5,-20(s0)
20402ed8:	439c                	lw	a5,0(a5)
20402eda:	43dc                	lw	a5,4(a5)
20402edc:	fe842583          	lw	a1,-24(s0)
20402ee0:	fec42503          	lw	a0,-20(s0)
20402ee4:	9782                	jalr	a5
20402ee6:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:71
}
20402ee8:	853e                	mv	a0,a5
20402eea:	40f2                	lw	ra,28(sp)
20402eec:	4462                	lw	s0,24(sp)
20402eee:	6105                	addi	sp,sp,32
20402ef0:	8082                	ret

20402ef2 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20402ef2:	1101                	addi	sp,sp,-32
20402ef4:	ce06                	sw	ra,28(sp)
20402ef6:	cc22                	sw	s0,24(sp)
20402ef8:	1000                	addi	s0,sp,32
20402efa:	fea42623          	sw	a0,-20(s0)
20402efe:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20402f02:	fec42783          	lw	a5,-20(s0)
20402f06:	439c                	lw	a5,0(a5)
20402f08:	4bdc                	lw	a5,20(a5)
20402f0a:	fe842583          	lw	a1,-24(s0)
20402f0e:	fec42503          	lw	a0,-20(s0)
20402f12:	9782                	jalr	a5
20402f14:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/uart.h:113
}
20402f16:	853e                	mv	a0,a5
20402f18:	40f2                	lw	ra,28(sp)
20402f1a:	4462                	lw	s0,24(sp)
20402f1c:	6105                	addi	sp,sp,32
20402f1e:	8082                	ret

20402f20 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20402f20:	1101                	addi	sp,sp,-32
20402f22:	ce22                	sw	s0,28(sp)
20402f24:	1000                	addi	s0,sp,32
20402f26:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402f2a:	fec42703          	lw	a4,-20(s0)
20402f2e:	800007b7          	lui	a5,0x80000
20402f32:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe69c>
20402f36:	00f71563          	bne	a4,a5,20402f40 <__metal_driver_sifive_clint0_control_base+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20402f3a:	020007b7          	lui	a5,0x2000
20402f3e:	a011                	j	20402f42 <__metal_driver_sifive_clint0_control_base+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:207
	}
	else {
		return 0;
20402f40:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:209
	}
}
20402f42:	853e                	mv	a0,a5
20402f44:	4472                	lw	s0,28(sp)
20402f46:	6105                	addi	sp,sp,32
20402f48:	8082                	ret

20402f4a <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20402f4a:	1101                	addi	sp,sp,-32
20402f4c:	ce22                	sw	s0,28(sp)
20402f4e:	1000                	addi	s0,sp,32
20402f50:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402f54:	fec42703          	lw	a4,-20(s0)
20402f58:	800007b7          	lui	a5,0x80000
20402f5c:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe69c>
20402f60:	00f71463          	bne	a4,a5,20402f68 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
20402f64:	4789                	li	a5,2
20402f66:	a011                	j	20402f6a <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:227
	}
	else {
		return 0;
20402f68:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:229
	}
}
20402f6a:	853e                	mv	a0,a5
20402f6c:	4472                	lw	s0,28(sp)
20402f6e:	6105                	addi	sp,sp,32
20402f70:	8082                	ret

20402f72 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20402f72:	1101                	addi	sp,sp,-32
20402f74:	ce22                	sw	s0,28(sp)
20402f76:	1000                	addi	s0,sp,32
20402f78:	fea42623          	sw	a0,-20(s0)
20402f7c:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:233
	if (idx == 0) {
20402f80:	fe842783          	lw	a5,-24(s0)
20402f84:	e791                	bnez	a5,20402f90 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402f86:	800007b7          	lui	a5,0x80000
20402f8a:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf78>
20402f8e:	a821                	j	20402fa6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:236
	}
	else if (idx == 1) {
20402f90:	fe842703          	lw	a4,-24(s0)
20402f94:	4785                	li	a5,1
20402f96:	00f71763          	bne	a4,a5,20402fa4 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402f9a:	800007b7          	lui	a5,0x80000
20402f9e:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf78>
20402fa2:	a011                	j	20402fa6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:240
	}
	else {
		return NULL;
20402fa4:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:242
	}
}
20402fa6:	853e                	mv	a0,a5
20402fa8:	4472                	lw	s0,28(sp)
20402faa:	6105                	addi	sp,sp,32
20402fac:	8082                	ret

20402fae <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20402fae:	1101                	addi	sp,sp,-32
20402fb0:	ce22                	sw	s0,28(sp)
20402fb2:	1000                	addi	s0,sp,32
20402fb4:	fea42623          	sw	a0,-20(s0)
20402fb8:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:246
	if (idx == 0) {
20402fbc:	fe842783          	lw	a5,-24(s0)
20402fc0:	e399                	bnez	a5,20402fc6 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:247
		return 3;
20402fc2:	478d                	li	a5,3
20402fc4:	a809                	j	20402fd6 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:249
	}
	else if (idx == 1) {
20402fc6:	fe842703          	lw	a4,-24(s0)
20402fca:	4785                	li	a5,1
20402fcc:	00f71463          	bne	a4,a5,20402fd4 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:250
		return 7;
20402fd0:	479d                	li	a5,7
20402fd2:	a011                	j	20402fd6 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:253
	}
	else {
		return 0;
20402fd4:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:255
	}
}
20402fd6:	853e                	mv	a0,a5
20402fd8:	4472                	lw	s0,28(sp)
20402fda:	6105                	addi	sp,sp,32
20402fdc:	8082                	ret

20402fde <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20402fde:	715d                	addi	sp,sp,-80
20402fe0:	c686                	sw	ra,76(sp)
20402fe2:	c4a2                	sw	s0,72(sp)
20402fe4:	c2ca                	sw	s2,68(sp)
20402fe6:	c0ce                	sw	s3,64(sp)
20402fe8:	de52                	sw	s4,60(sp)
20402fea:	dc56                	sw	s5,56(sp)
20402fec:	da5a                	sw	s6,52(sp)
20402fee:	d85e                	sw	s7,48(sp)
20402ff0:	d662                	sw	s8,44(sp)
20402ff2:	d466                	sw	s9,40(sp)
20402ff4:	0880                	addi	s0,sp,80
20402ff6:	faa42e23          	sw	a0,-68(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402ffa:	fbc42783          	lw	a5,-68(s0)
20402ffe:	853e                	mv	a0,a5
20403000:	3705                	jal	20402f20 <__metal_driver_sifive_clint0_control_base>
20403002:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20403006:	fcc42703          	lw	a4,-52(s0)
2040300a:	67b1                	lui	a5,0xc
2040300c:	17f1                	addi	a5,a5,-4
2040300e:	97ba                	add	a5,a5,a4
20403010:	439c                	lw	a5,0(a5)
20403012:	fcf42423          	sw	a5,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20403016:	fcc42703          	lw	a4,-52(s0)
2040301a:	67b1                	lui	a5,0xc
2040301c:	17e1                	addi	a5,a5,-8
2040301e:	97ba                	add	a5,a5,a4
20403020:	439c                	lw	a5,0(a5)
20403022:	fcf42223          	sw	a5,-60(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20403026:	fcc42703          	lw	a4,-52(s0)
2040302a:	67b1                	lui	a5,0xc
2040302c:	17f1                	addi	a5,a5,-4
2040302e:	97ba                	add	a5,a5,a4
20403030:	439c                	lw	a5,0(a5)
20403032:	fc842703          	lw	a4,-56(s0)
20403036:	fcf718e3          	bne	a4,a5,20403006 <__metal_clint0_mtime_get+0x28>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2040303a:	fc842783          	lw	a5,-56(s0)
2040303e:	8c3e                	mv	s8,a5
20403040:	4c81                	li	s9,0
20403042:	000c1993          	slli	s3,s8,0x0
20403046:	4901                	li	s2,0
20403048:	fc442783          	lw	a5,-60(s0)
2040304c:	8a3e                	mv	s4,a5
2040304e:	4a81                	li	s5,0
20403050:	01496b33          	or	s6,s2,s4
20403054:	0159ebb3          	or	s7,s3,s5
20403058:	875a                	mv	a4,s6
2040305a:	87de                	mv	a5,s7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:30
}
2040305c:	853a                	mv	a0,a4
2040305e:	85be                	mv	a1,a5
20403060:	40b6                	lw	ra,76(sp)
20403062:	4426                	lw	s0,72(sp)
20403064:	4916                	lw	s2,68(sp)
20403066:	4986                	lw	s3,64(sp)
20403068:	5a72                	lw	s4,60(sp)
2040306a:	5ae2                	lw	s5,56(sp)
2040306c:	5b52                	lw	s6,52(sp)
2040306e:	5bc2                	lw	s7,48(sp)
20403070:	5c32                	lw	s8,44(sp)
20403072:	5ca2                	lw	s9,40(sp)
20403074:	6161                	addi	sp,sp,80
20403076:	8082                	ret

20403078 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20403078:	7179                	addi	sp,sp,-48
2040307a:	d606                	sw	ra,44(sp)
2040307c:	d422                	sw	s0,40(sp)
2040307e:	d24a                	sw	s2,36(sp)
20403080:	d04e                	sw	s3,32(sp)
20403082:	1800                	addi	s0,sp,48
20403084:	fca42e23          	sw	a0,-36(s0)
20403088:	fcb42c23          	sw	a1,-40(s0)
2040308c:	fcc42823          	sw	a2,-48(s0)
20403090:	fcd42a23          	sw	a3,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20403094:	fdc42783          	lw	a5,-36(s0)
20403098:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2040309c:	fec42783          	lw	a5,-20(s0)
204030a0:	853e                	mv	a0,a5
204030a2:	3dbd                	jal	20402f20 <__metal_driver_sifive_clint0_control_base>
204030a4:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204030a8:	fd842783          	lw	a5,-40(s0)
204030ac:	078e                	slli	a5,a5,0x3
204030ae:	873e                	mv	a4,a5
204030b0:	fe842783          	lw	a5,-24(s0)
204030b4:	973e                	add	a4,a4,a5
204030b6:	6791                	lui	a5,0x4
204030b8:	0791                	addi	a5,a5,4
204030ba:	97ba                	add	a5,a5,a4
204030bc:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
204030be:	57fd                	li	a5,-1
204030c0:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204030c2:	fd842783          	lw	a5,-40(s0)
204030c6:	078e                	slli	a5,a5,0x3
204030c8:	873e                	mv	a4,a5
204030ca:	fe842783          	lw	a5,-24(s0)
204030ce:	973e                	add	a4,a4,a5
204030d0:	6791                	lui	a5,0x4
204030d2:	97ba                	add	a5,a5,a4
204030d4:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
204030d6:	fd042783          	lw	a5,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
204030da:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
204030dc:	fd442783          	lw	a5,-44(s0)
204030e0:	0007d913          	srli	s2,a5,0x0
204030e4:	4981                	li	s3,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204030e6:	fd842783          	lw	a5,-40(s0)
204030ea:	078e                	slli	a5,a5,0x3
204030ec:	873e                	mv	a4,a5
204030ee:	fe842783          	lw	a5,-24(s0)
204030f2:	973e                	add	a4,a4,a5
204030f4:	6791                	lui	a5,0x4
204030f6:	0791                	addi	a5,a5,4
204030f8:	97ba                	add	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
204030fa:	874a                	mv	a4,s2
204030fc:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
204030fe:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:55
}
20403100:	853e                	mv	a0,a5
20403102:	50b2                	lw	ra,44(sp)
20403104:	5422                	lw	s0,40(sp)
20403106:	5912                	lw	s2,36(sp)
20403108:	5982                	lw	s3,32(sp)
2040310a:	6145                	addi	sp,sp,48
2040310c:	8082                	ret

2040310e <_get_cpu_intc>:
_get_cpu_intc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2040310e:	1101                	addi	sp,sp,-32
20403110:	ce06                	sw	ra,28(sp)
20403112:	cc22                	sw	s0,24(sp)
20403114:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20403116:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2040311a:	f14027f3          	csrr	a5,mhartid
2040311e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20403122:	fec42783          	lw	a5,-20(s0)
20403126:	853e                	mv	a0,a5
20403128:	2c8040ef          	jal	ra,204073f0 <metal_cpu_get>
2040312c:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20403130:	fe842503          	lw	a0,-24(s0)
20403134:	296040ef          	jal	ra,204073ca <metal_cpu_interrupt_controller>
20403138:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:65
}
2040313a:	853e                	mv	a0,a5
2040313c:	40f2                	lw	ra,28(sp)
2040313e:	4462                	lw	s0,24(sp)
20403140:	6105                	addi	sp,sp,32
20403142:	8082                	ret

20403144 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20403144:	7139                	addi	sp,sp,-64
20403146:	de06                	sw	ra,60(sp)
20403148:	dc22                	sw	s0,56(sp)
2040314a:	0080                	addi	s0,sp,64
2040314c:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403150:	fcc42503          	lw	a0,-52(s0)
20403154:	3bdd                	jal	20402f4a <__metal_driver_sifive_clint0_num_interrupts>
20403156:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
2040315a:	fcc42783          	lw	a5,-52(s0)
2040315e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20403162:	fe442783          	lw	a5,-28(s0)
20403166:	43dc                	lw	a5,4(a5)
20403168:	efa9                	bnez	a5,204031c2 <__metal_driver_riscv_clint0_init+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
2040316a:	fe042623          	sw	zero,-20(s0)
2040316e:	a081                	j	204031ae <__metal_driver_riscv_clint0_init+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403170:	fec42583          	lw	a1,-20(s0)
20403174:	fcc42503          	lw	a0,-52(s0)
20403178:	3bed                	jal	20402f72 <__metal_driver_sifive_clint0_interrupt_parents>
2040317a:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040317e:	fec42583          	lw	a1,-20(s0)
20403182:	fcc42503          	lw	a0,-52(s0)
20403186:	3525                	jal	20402fae <__metal_driver_sifive_clint0_interrupt_lines>
20403188:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
2040318c:	fe042783          	lw	a5,-32(s0)
20403190:	439c                	lw	a5,0(a5)
20403192:	4fdc                	lw	a5,28(a5)
20403194:	fcc42683          	lw	a3,-52(s0)
20403198:	4601                	li	a2,0
2040319a:	fdc42583          	lw	a1,-36(s0)
2040319e:	fe042503          	lw	a0,-32(s0)
204031a2:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204031a4:	fec42783          	lw	a5,-20(s0)
204031a8:	0785                	addi	a5,a5,1
204031aa:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
204031ae:	fec42703          	lw	a4,-20(s0)
204031b2:	fe842783          	lw	a5,-24(s0)
204031b6:	faf74de3          	blt	a4,a5,20403170 <__metal_driver_riscv_clint0_init+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
204031ba:	fe442783          	lw	a5,-28(s0)
204031be:	4705                	li	a4,1
204031c0:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
204031c2:	0001                	nop
204031c4:	50f2                	lw	ra,60(sp)
204031c6:	5462                	lw	s0,56(sp)
204031c8:	6121                	addi	sp,sp,64
204031ca:	8082                	ret

204031cc <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
204031cc:	7139                	addi	sp,sp,-64
204031ce:	de06                	sw	ra,60(sp)
204031d0:	dc22                	sw	s0,56(sp)
204031d2:	0080                	addi	s0,sp,64
204031d4:	fca42623          	sw	a0,-52(s0)
204031d8:	fcb42423          	sw	a1,-56(s0)
204031dc:	fcc42223          	sw	a2,-60(s0)
204031e0:	fcd42023          	sw	a3,-64(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
204031e4:	57fd                	li	a5,-1
204031e6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
204031ea:	470010ef          	jal	ra,2040465a <__metal_controller_interrupt_vector_mode>
204031ee:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
204031f2:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
204031f6:	3f21                	jal	2040310e <_get_cpu_intc>
204031f8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
204031fc:	fcc42503          	lw	a0,-52(s0)
20403200:	33a9                	jal	20402f4a <__metal_driver_sifive_clint0_num_interrupts>
20403202:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20403206:	fe042703          	lw	a4,-32(s0)
2040320a:	4785                	li	a5,1
2040320c:	00f70863          	beq	a4,a5,2040321c <__metal_driver_riscv_clint0_register+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20403210:	fe042783          	lw	a5,-32(s0)
20403214:	c781                	beqz	a5,2040321c <__metal_driver_riscv_clint0_register+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20403216:	fec42783          	lw	a5,-20(s0)
2040321a:	a049                	j	2040329c <__metal_driver_riscv_clint0_register+0xd0>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
2040321c:	fe042223          	sw	zero,-28(s0)
20403220:	a091                	j	20403264 <__metal_driver_riscv_clint0_register+0x98>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403222:	fe442583          	lw	a1,-28(s0)
20403226:	fcc42503          	lw	a0,-52(s0)
2040322a:	3351                	jal	20402fae <__metal_driver_sifive_clint0_interrupt_lines>
2040322c:	fca42a23          	sw	a0,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403230:	fe442583          	lw	a1,-28(s0)
20403234:	fcc42503          	lw	a0,-52(s0)
20403238:	3b2d                	jal	20402f72 <__metal_driver_sifive_clint0_interrupt_parents>
2040323a:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2040323e:	fdc42703          	lw	a4,-36(s0)
20403242:	fe842783          	lw	a5,-24(s0)
20403246:	00f71863          	bne	a4,a5,20403256 <__metal_driver_riscv_clint0_register+0x8a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
2040324a:	fc842703          	lw	a4,-56(s0)
2040324e:	fd442783          	lw	a5,-44(s0)
20403252:	02f70063          	beq	a4,a5,20403272 <__metal_driver_riscv_clint0_register+0xa6>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20403256:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
2040325a:	fe442783          	lw	a5,-28(s0)
2040325e:	0785                	addi	a5,a5,1
20403260:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20403264:	fe442703          	lw	a4,-28(s0)
20403268:	fd842783          	lw	a5,-40(s0)
2040326c:	faf74be3          	blt	a4,a5,20403222 <__metal_driver_riscv_clint0_register+0x56>
20403270:	a011                	j	20403274 <__metal_driver_riscv_clint0_register+0xa8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20403272:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20403274:	fe842783          	lw	a5,-24(s0)
20403278:	c385                	beqz	a5,20403298 <__metal_driver_riscv_clint0_register+0xcc>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
2040327a:	fe842783          	lw	a5,-24(s0)
2040327e:	439c                	lw	a5,0(a5)
20403280:	4fdc                	lw	a5,28(a5)
20403282:	fc042683          	lw	a3,-64(s0)
20403286:	fc442603          	lw	a2,-60(s0)
2040328a:	fc842583          	lw	a1,-56(s0)
2040328e:	fe842503          	lw	a0,-24(s0)
20403292:	9782                	jalr	a5
20403294:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20403298:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:115
}
2040329c:	853e                	mv	a0,a5
2040329e:	50f2                	lw	ra,60(sp)
204032a0:	5462                	lw	s0,56(sp)
204032a2:	6121                	addi	sp,sp,64
204032a4:	8082                	ret

204032a6 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
204032a6:	7179                	addi	sp,sp,-48
204032a8:	d622                	sw	s0,44(sp)
204032aa:	1800                	addi	s0,sp,48
204032ac:	fca42e23          	sw	a0,-36(s0)
204032b0:	fcb42c23          	sw	a1,-40(s0)
204032b4:	fcc42a23          	sw	a2,-44(s0)
204032b8:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204032bc:	57fd                	li	a5,-1
204032be:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
204032c2:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:123
}
204032c6:	853e                	mv	a0,a5
204032c8:	5432                	lw	s0,44(sp)
204032ca:	6145                	addi	sp,sp,48
204032cc:	8082                	ret

204032ce <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
204032ce:	1101                	addi	sp,sp,-32
204032d0:	ce06                	sw	ra,28(sp)
204032d2:	cc22                	sw	s0,24(sp)
204032d4:	1000                	addi	s0,sp,32
204032d6:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
204032da:	380010ef          	jal	ra,2040465a <__metal_controller_interrupt_vector_mode>
204032de:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:128
}
204032e0:	853e                	mv	a0,a5
204032e2:	40f2                	lw	ra,28(sp)
204032e4:	4462                	lw	s0,24(sp)
204032e6:	6105                	addi	sp,sp,32
204032e8:	8082                	ret

204032ea <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
204032ea:	7179                	addi	sp,sp,-48
204032ec:	d606                	sw	ra,44(sp)
204032ee:	d422                	sw	s0,40(sp)
204032f0:	1800                	addi	s0,sp,48
204032f2:	fca42e23          	sw	a0,-36(s0)
204032f6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
204032fa:	57fd                	li	a5,-1
204032fc:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20403300:	3539                	jal	2040310e <_get_cpu_intc>
20403302:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20403306:	fe842783          	lw	a5,-24(s0)
2040330a:	c395                	beqz	a5,2040332e <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
2040330c:	fd842703          	lw	a4,-40(s0)
20403310:	4785                	li	a5,1
20403312:	02e7e063          	bltu	a5,a4,20403332 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20403316:	fe842783          	lw	a5,-24(s0)
2040331a:	439c                	lw	a5,0(a5)
2040331c:	43dc                	lw	a5,4(a5)
2040331e:	fd842583          	lw	a1,-40(s0)
20403322:	fe842503          	lw	a0,-24(s0)
20403326:	9782                	jalr	a5
20403328:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
2040332c:	a021                	j	20403334 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2040332e:	0001                	nop
20403330:	a011                	j	20403334 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20403332:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20403334:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:148
}
20403338:	853e                	mv	a0,a5
2040333a:	50b2                	lw	ra,44(sp)
2040333c:	5422                	lw	s0,40(sp)
2040333e:	6145                	addi	sp,sp,48
20403340:	8082                	ret

20403342 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20403342:	7139                	addi	sp,sp,-64
20403344:	de06                	sw	ra,60(sp)
20403346:	dc22                	sw	s0,56(sp)
20403348:	0080                	addi	s0,sp,64
2040334a:	fca42623          	sw	a0,-52(s0)
2040334e:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20403352:	57fd                	li	a5,-1
20403354:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20403358:	fc842783          	lw	a5,-56(s0)
2040335c:	c7c9                	beqz	a5,204033e6 <__metal_driver_riscv_clint0_enable+0xa4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2040335e:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403362:	3375                	jal	2040310e <_get_cpu_intc>
20403364:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20403368:	fcc42503          	lw	a0,-52(s0)
2040336c:	3ef9                	jal	20402f4a <__metal_driver_sifive_clint0_num_interrupts>
2040336e:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20403372:	fe042223          	sw	zero,-28(s0)
20403376:	a091                	j	204033ba <__metal_driver_riscv_clint0_enable+0x78>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403378:	fe442583          	lw	a1,-28(s0)
2040337c:	fcc42503          	lw	a0,-52(s0)
20403380:	313d                	jal	20402fae <__metal_driver_sifive_clint0_interrupt_lines>
20403382:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403386:	fe442583          	lw	a1,-28(s0)
2040338a:	fcc42503          	lw	a0,-52(s0)
2040338e:	36d5                	jal	20402f72 <__metal_driver_sifive_clint0_interrupt_parents>
20403390:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20403394:	fe042703          	lw	a4,-32(s0)
20403398:	fe842783          	lw	a5,-24(s0)
2040339c:	00f71863          	bne	a4,a5,204033ac <__metal_driver_riscv_clint0_enable+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
204033a0:	fc842703          	lw	a4,-56(s0)
204033a4:	fd842783          	lw	a5,-40(s0)
204033a8:	02f70063          	beq	a4,a5,204033c8 <__metal_driver_riscv_clint0_enable+0x86>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
204033ac:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204033b0:	fe442783          	lw	a5,-28(s0)
204033b4:	0785                	addi	a5,a5,1
204033b6:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
204033ba:	fe442703          	lw	a4,-28(s0)
204033be:	fdc42783          	lw	a5,-36(s0)
204033c2:	faf74be3          	blt	a4,a5,20403378 <__metal_driver_riscv_clint0_enable+0x36>
204033c6:	a011                	j	204033ca <__metal_driver_riscv_clint0_enable+0x88>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
204033c8:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
204033ca:	fe842783          	lw	a5,-24(s0)
204033ce:	cf81                	beqz	a5,204033e6 <__metal_driver_riscv_clint0_enable+0xa4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
204033d0:	fe842783          	lw	a5,-24(s0)
204033d4:	439c                	lw	a5,0(a5)
204033d6:	53dc                	lw	a5,36(a5)
204033d8:	fc842583          	lw	a1,-56(s0)
204033dc:	fe842503          	lw	a0,-24(s0)
204033e0:	9782                	jalr	a5
204033e2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
204033e6:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:178
}
204033ea:	853e                	mv	a0,a5
204033ec:	50f2                	lw	ra,60(sp)
204033ee:	5462                	lw	s0,56(sp)
204033f0:	6121                	addi	sp,sp,64
204033f2:	8082                	ret

204033f4 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
204033f4:	7139                	addi	sp,sp,-64
204033f6:	de06                	sw	ra,60(sp)
204033f8:	dc22                	sw	s0,56(sp)
204033fa:	0080                	addi	s0,sp,64
204033fc:	fca42623          	sw	a0,-52(s0)
20403400:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20403404:	57fd                	li	a5,-1
20403406:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
2040340a:	fc842783          	lw	a5,-56(s0)
2040340e:	cbc1                	beqz	a5,2040349e <__metal_driver_riscv_clint0_disable+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20403410:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403414:	39ed                	jal	2040310e <_get_cpu_intc>
20403416:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2040341a:	fcc42503          	lw	a0,-52(s0)
2040341e:	b2dff0ef          	jal	ra,20402f4a <__metal_driver_sifive_clint0_num_interrupts>
20403422:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20403426:	fe042223          	sw	zero,-28(s0)
2040342a:	a0a1                	j	20403472 <__metal_driver_riscv_clint0_disable+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040342c:	fe442583          	lw	a1,-28(s0)
20403430:	fcc42503          	lw	a0,-52(s0)
20403434:	b7bff0ef          	jal	ra,20402fae <__metal_driver_sifive_clint0_interrupt_lines>
20403438:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040343c:	fe442583          	lw	a1,-28(s0)
20403440:	fcc42503          	lw	a0,-52(s0)
20403444:	b2fff0ef          	jal	ra,20402f72 <__metal_driver_sifive_clint0_interrupt_parents>
20403448:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
2040344c:	fe042703          	lw	a4,-32(s0)
20403450:	fe842783          	lw	a5,-24(s0)
20403454:	00f71863          	bne	a4,a5,20403464 <__metal_driver_riscv_clint0_disable+0x70>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20403458:	fc842703          	lw	a4,-56(s0)
2040345c:	fd842783          	lw	a5,-40(s0)
20403460:	02f70063          	beq	a4,a5,20403480 <__metal_driver_riscv_clint0_disable+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20403464:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403468:	fe442783          	lw	a5,-28(s0)
2040346c:	0785                	addi	a5,a5,1
2040346e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20403472:	fe442703          	lw	a4,-28(s0)
20403476:	fdc42783          	lw	a5,-36(s0)
2040347a:	faf749e3          	blt	a4,a5,2040342c <__metal_driver_riscv_clint0_disable+0x38>
2040347e:	a011                	j	20403482 <__metal_driver_riscv_clint0_disable+0x8e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20403480:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20403482:	fe842783          	lw	a5,-24(s0)
20403486:	cf81                	beqz	a5,2040349e <__metal_driver_riscv_clint0_disable+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20403488:	fe842783          	lw	a5,-24(s0)
2040348c:	439c                	lw	a5,0(a5)
2040348e:	579c                	lw	a5,40(a5)
20403490:	fc842583          	lw	a1,-56(s0)
20403494:	fe842503          	lw	a0,-24(s0)
20403498:	9782                	jalr	a5
2040349a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
2040349e:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:208
}
204034a2:	853e                	mv	a0,a5
204034a4:	50f2                	lw	ra,60(sp)
204034a6:	5462                	lw	s0,56(sp)
204034a8:	6121                	addi	sp,sp,64
204034aa:	8082                	ret

204034ac <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
204034ac:	7179                	addi	sp,sp,-48
204034ae:	d606                	sw	ra,44(sp)
204034b0:	d422                	sw	s0,40(sp)
204034b2:	1800                	addi	s0,sp,48
204034b4:	fca42e23          	sw	a0,-36(s0)
204034b8:	fcb42c23          	sw	a1,-40(s0)
204034bc:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
204034c0:	57fd                	li	a5,-1
204034c2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
204034c6:	fdc42783          	lw	a5,-36(s0)
204034ca:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
204034ce:	fdc42503          	lw	a0,-36(s0)
204034d2:	a4fff0ef          	jal	ra,20402f20 <__metal_driver_sifive_clint0_control_base>
204034d6:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
204034da:	fd842703          	lw	a4,-40(s0)
204034de:	4791                	li	a5,4
204034e0:	0cf70163          	beq	a4,a5,204035a2 <__metal_driver_riscv_clint0_command_request+0xf6>
204034e4:	fd842703          	lw	a4,-40(s0)
204034e8:	4791                	li	a5,4
204034ea:	0ee7c163          	blt	a5,a4,204035cc <__metal_driver_riscv_clint0_command_request+0x120>
204034ee:	fd842703          	lw	a4,-40(s0)
204034f2:	478d                	li	a5,3
204034f4:	06f70663          	beq	a4,a5,20403560 <__metal_driver_riscv_clint0_command_request+0xb4>
204034f8:	fd842703          	lw	a4,-40(s0)
204034fc:	478d                	li	a5,3
204034fe:	0ce7c763          	blt	a5,a4,204035cc <__metal_driver_riscv_clint0_command_request+0x120>
20403502:	fd842703          	lw	a4,-40(s0)
20403506:	4785                	li	a5,1
20403508:	00f70863          	beq	a4,a5,20403518 <__metal_driver_riscv_clint0_command_request+0x6c>
2040350c:	fd842703          	lw	a4,-40(s0)
20403510:	4789                	li	a5,2
20403512:	02f70363          	beq	a4,a5,20403538 <__metal_driver_riscv_clint0_command_request+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20403516:	a85d                	j	204035cc <__metal_driver_riscv_clint0_command_request+0x120>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20403518:	fd442783          	lw	a5,-44(s0)
2040351c:	cbd5                	beqz	a5,204035d0 <__metal_driver_riscv_clint0_command_request+0x124>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
2040351e:	fe842503          	lw	a0,-24(s0)
20403522:	abdff0ef          	jal	ra,20402fde <__metal_clint0_mtime_get>
20403526:	872a                	mv	a4,a0
20403528:	87ae                	mv	a5,a1
2040352a:	fd442683          	lw	a3,-44(s0)
2040352e:	c298                	sw	a4,0(a3)
20403530:	c2dc                	sw	a5,4(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20403532:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403536:	a869                	j	204035d0 <__metal_driver_riscv_clint0_command_request+0x124>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20403538:	fd442783          	lw	a5,-44(s0)
2040353c:	cfc1                	beqz	a5,204035d4 <__metal_driver_riscv_clint0_command_request+0x128>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
2040353e:	fd442783          	lw	a5,-44(s0)
20403542:	439c                	lw	a5,0(a5)
20403544:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20403548:	fe042783          	lw	a5,-32(s0)
2040354c:	078a                	slli	a5,a5,0x2
2040354e:	873e                	mv	a4,a5
20403550:	fe442783          	lw	a5,-28(s0)
20403554:	97ba                	add	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20403556:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
2040355a:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
2040355e:	a89d                	j	204035d4 <__metal_driver_riscv_clint0_command_request+0x128>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20403560:	fd442783          	lw	a5,-44(s0)
20403564:	cbb5                	beqz	a5,204035d8 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20403566:	fd442783          	lw	a5,-44(s0)
2040356a:	439c                	lw	a5,0(a5)
2040356c:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20403570:	fe042783          	lw	a5,-32(s0)
20403574:	078a                	slli	a5,a5,0x2
20403576:	873e                	mv	a4,a5
20403578:	fe442783          	lw	a5,-28(s0)
2040357c:	97ba                	add	a5,a5,a4
2040357e:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20403580:	4785                	li	a5,1
20403582:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20403584:	0480000f          	fence	o,i
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20403588:	fe042783          	lw	a5,-32(s0)
2040358c:	078a                	slli	a5,a5,0x2
2040358e:	873e                	mv	a4,a5
20403590:	fe442783          	lw	a5,-28(s0)
20403594:	97ba                	add	a5,a5,a4
20403596:	439c                	lw	a5,0(a5)
20403598:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
2040359c:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204035a0:	a825                	j	204035d8 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
204035a2:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
204035a6:	fd442783          	lw	a5,-44(s0)
204035aa:	cb8d                	beqz	a5,204035dc <__metal_driver_riscv_clint0_command_request+0x130>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
204035ac:	fd442783          	lw	a5,-44(s0)
204035b0:	439c                	lw	a5,0(a5)
204035b2:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
204035b6:	fe042783          	lw	a5,-32(s0)
204035ba:	078a                	slli	a5,a5,0x2
204035bc:	873e                	mv	a4,a5
204035be:	fe442783          	lw	a5,-28(s0)
204035c2:	97ba                	add	a5,a5,a4
204035c4:	439c                	lw	a5,0(a5)
204035c6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204035ca:	a809                	j	204035dc <__metal_driver_riscv_clint0_command_request+0x130>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
204035cc:	0001                	nop
204035ce:	a801                	j	204035de <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
204035d0:	0001                	nop
204035d2:	a031                	j	204035de <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204035d4:	0001                	nop
204035d6:	a021                	j	204035de <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204035d8:	0001                	nop
204035da:	a011                	j	204035de <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204035dc:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
204035de:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:267
}
204035e2:	853e                	mv	a0,a5
204035e4:	50b2                	lw	ra,44(sp)
204035e6:	5422                	lw	s0,40(sp)
204035e8:	6145                	addi	sp,sp,48
204035ea:	8082                	ret

204035ec <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
204035ec:	7179                	addi	sp,sp,-48
204035ee:	d606                	sw	ra,44(sp)
204035f0:	d422                	sw	s0,40(sp)
204035f2:	1800                	addi	s0,sp,48
204035f4:	fca42e23          	sw	a0,-36(s0)
204035f8:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
204035fc:	623030ef          	jal	ra,2040741e <metal_cpu_get_current_hartid>
20403600:	87aa                	mv	a5,a0
20403602:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20403606:	fec40793          	addi	a5,s0,-20
2040360a:	863e                	mv	a2,a5
2040360c:	4589                	li	a1,2
2040360e:	fdc42503          	lw	a0,-36(s0)
20403612:	3d69                	jal	204034ac <__metal_driver_riscv_clint0_command_request>
20403614:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20403616:	853e                	mv	a0,a5
20403618:	50b2                	lw	ra,44(sp)
2040361a:	5422                	lw	s0,40(sp)
2040361c:	6145                	addi	sp,sp,48
2040361e:	8082                	ret

20403620 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20403620:	7179                	addi	sp,sp,-48
20403622:	d606                	sw	ra,44(sp)
20403624:	d422                	sw	s0,40(sp)
20403626:	1800                	addi	s0,sp,48
20403628:	fca42e23          	sw	a0,-36(s0)
2040362c:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20403630:	5ef030ef          	jal	ra,2040741e <metal_cpu_get_current_hartid>
20403634:	87aa                	mv	a5,a0
20403636:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
2040363a:	fec40793          	addi	a5,s0,-20
2040363e:	863e                	mv	a2,a5
20403640:	458d                	li	a1,3
20403642:	fdc42503          	lw	a0,-36(s0)
20403646:	359d                	jal	204034ac <__metal_driver_riscv_clint0_command_request>
20403648:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
2040364a:	853e                	mv	a0,a5
2040364c:	50b2                	lw	ra,44(sp)
2040364e:	5422                	lw	s0,40(sp)
20403650:	6145                	addi	sp,sp,48
20403652:	8082                	ret

20403654 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20403654:	1101                	addi	sp,sp,-32
20403656:	ce22                	sw	s0,28(sp)
20403658:	1000                	addi	s0,sp,32
2040365a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040365e:	fec42703          	lw	a4,-20(s0)
20403662:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403666:	00f71463          	bne	a4,a5,2040366e <__metal_driver_cpu_hartid+0x1a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:263
		return 0;
2040366a:	4781                	li	a5,0
2040366c:	a011                	j	20403670 <__metal_driver_cpu_hartid+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:266
	}
	else {
		return -1;
2040366e:	57fd                	li	a5,-1
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:268
	}
}
20403670:	853e                	mv	a0,a5
20403672:	4472                	lw	s0,28(sp)
20403674:	6105                	addi	sp,sp,32
20403676:	8082                	ret

20403678 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20403678:	1101                	addi	sp,sp,-32
2040367a:	ce22                	sw	s0,28(sp)
2040367c:	1000                	addi	s0,sp,32
2040367e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403682:	fec42703          	lw	a4,-20(s0)
20403686:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040368a:	00f71763          	bne	a4,a5,20403698 <__metal_driver_cpu_timebase+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:273
		return 1000000;
2040368e:	000f47b7          	lui	a5,0xf4
20403692:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20403696:	a011                	j	2040369a <__metal_driver_cpu_timebase+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:276
	}
	else {
		return 0;
20403698:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:278
	}
}
2040369a:	853e                	mv	a0,a5
2040369c:	4472                	lw	s0,28(sp)
2040369e:	6105                	addi	sp,sp,32
204036a0:	8082                	ret

204036a2 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
204036a2:	1101                	addi	sp,sp,-32
204036a4:	ce22                	sw	s0,28(sp)
204036a6:	1000                	addi	s0,sp,32
204036a8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204036ac:	fec42703          	lw	a4,-20(s0)
204036b0:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204036b4:	00f71763          	bne	a4,a5,204036c2 <__metal_driver_cpu_interrupt_controller+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
204036b8:	800007b7          	lui	a5,0x80000
204036bc:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf78>
204036c0:	a011                	j	204036c4 <__metal_driver_cpu_interrupt_controller+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:286
	}
	else {
		return NULL;
204036c2:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:288
	}
}
204036c4:	853e                	mv	a0,a5
204036c6:	4472                	lw	s0,28(sp)
204036c8:	6105                	addi	sp,sp,32
204036ca:	8082                	ret

204036cc <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
204036cc:	1101                	addi	sp,sp,-32
204036ce:	ce22                	sw	s0,28(sp)
204036d0:	1000                	addi	s0,sp,32
204036d2:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204036d6:	fec42703          	lw	a4,-20(s0)
204036da:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204036de:	00f71463          	bne	a4,a5,204036e6 <__metal_driver_cpu_buserror+0x1a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:303
		return NULL;
204036e2:	4781                	li	a5,0
204036e4:	a011                	j	204036e8 <__metal_driver_cpu_buserror+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:306
	}
	else {
		return NULL;
204036e6:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:308
	}
}
204036e8:	853e                	mv	a0,a5
204036ea:	4472                	lw	s0,28(sp)
204036ec:	6105                	addi	sp,sp,32
204036ee:	8082                	ret

204036f0 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
204036f0:	1101                	addi	sp,sp,-32
204036f2:	ce22                	sw	s0,28(sp)
204036f4:	1000                	addi	s0,sp,32
204036f6:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
204036fa:	fec42783          	lw	a5,-20(s0)
204036fe:	00f04c63          	bgtz	a5,20403716 <__metal_driver_cpu_get+0x26>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20403702:	800007b7          	lui	a5,0x80000
20403706:	fec42703          	lw	a4,-20(s0)
2040370a:	070a                	slli	a4,a4,0x2
2040370c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20403710:	97ba                	add	a5,a5,a4
20403712:	439c                	lw	a5,0(a5)
20403714:	a011                	j	20403718 <__metal_driver_cpu_get+0x28>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20403716:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:30
}
20403718:	853e                	mv	a0,a5
2040371a:	4472                	lw	s0,28(sp)
2040371c:	6105                	addi	sp,sp,32
2040371e:	8082                	ret

20403720 <__metal_myhart_id>:
__metal_myhart_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20403720:	1101                	addi	sp,sp,-32
20403722:	ce22                	sw	s0,28(sp)
20403724:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20403726:	f14027f3          	csrr	a5,mhartid
2040372a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
2040372e:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:36
}
20403732:	853e                	mv	a0,a5
20403734:	4472                	lw	s0,28(sp)
20403736:	6105                	addi	sp,sp,32
20403738:	8082                	ret

2040373a <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
2040373a:	1101                	addi	sp,sp,-32
2040373c:	ce22                	sw	s0,28(sp)
2040373e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20403740:	47a1                	li	a5,8
20403742:	3007a7f3          	csrrs	a5,mstatus,a5
20403746:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
2040374a:	0001                	nop
2040374c:	4472                	lw	s0,28(sp)
2040374e:	6105                	addi	sp,sp,32
20403750:	8082                	ret

20403752 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20403752:	1101                	addi	sp,sp,-32
20403754:	ce22                	sw	s0,28(sp)
20403756:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20403758:	47a1                	li	a5,8
2040375a:	3007b7f3          	csrrc	a5,mstatus,a5
2040375e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403762:	0001                	nop
20403764:	4472                	lw	s0,28(sp)
20403766:	6105                	addi	sp,sp,32
20403768:	8082                	ret

2040376a <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
2040376a:	1101                	addi	sp,sp,-32
2040376c:	ce22                	sw	s0,28(sp)
2040376e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403770:	47a1                	li	a5,8
20403772:	3047a7f3          	csrrs	a5,mie,a5
20403776:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2040377a:	0001                	nop
2040377c:	4472                	lw	s0,28(sp)
2040377e:	6105                	addi	sp,sp,32
20403780:	8082                	ret

20403782 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20403782:	1101                	addi	sp,sp,-32
20403784:	ce22                	sw	s0,28(sp)
20403786:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403788:	47a1                	li	a5,8
2040378a:	3047b7f3          	csrrc	a5,mie,a5
2040378e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403792:	0001                	nop
20403794:	4472                	lw	s0,28(sp)
20403796:	6105                	addi	sp,sp,32
20403798:	8082                	ret

2040379a <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
2040379a:	1101                	addi	sp,sp,-32
2040379c:	ce22                	sw	s0,28(sp)
2040379e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204037a0:	08000793          	li	a5,128
204037a4:	3047a7f3          	csrrs	a5,mie,a5
204037a8:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204037ac:	0001                	nop
204037ae:	4472                	lw	s0,28(sp)
204037b0:	6105                	addi	sp,sp,32
204037b2:	8082                	ret

204037b4 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
204037b4:	1101                	addi	sp,sp,-32
204037b6:	ce22                	sw	s0,28(sp)
204037b8:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204037ba:	08000793          	li	a5,128
204037be:	3047b7f3          	csrrc	a5,mie,a5
204037c2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204037c6:	0001                	nop
204037c8:	4472                	lw	s0,28(sp)
204037ca:	6105                	addi	sp,sp,32
204037cc:	8082                	ret

204037ce <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
204037ce:	1101                	addi	sp,sp,-32
204037d0:	ce22                	sw	s0,28(sp)
204037d2:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204037d4:	6785                	lui	a5,0x1
204037d6:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204037da:	3047a7f3          	csrrs	a5,mie,a5
204037de:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204037e2:	0001                	nop
204037e4:	4472                	lw	s0,28(sp)
204037e6:	6105                	addi	sp,sp,32
204037e8:	8082                	ret

204037ea <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
204037ea:	1101                	addi	sp,sp,-32
204037ec:	ce22                	sw	s0,28(sp)
204037ee:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
204037f0:	6785                	lui	a5,0x1
204037f2:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204037f6:	3047b7f3          	csrrc	a5,mie,a5
204037fa:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204037fe:	0001                	nop
20403800:	4472                	lw	s0,28(sp)
20403802:	6105                	addi	sp,sp,32
20403804:	8082                	ret

20403806 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20403806:	7179                	addi	sp,sp,-48
20403808:	d622                	sw	s0,44(sp)
2040380a:	1800                	addi	s0,sp,48
2040380c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20403810:	fdc42783          	lw	a5,-36(s0)
20403814:	4705                	li	a4,1
20403816:	00f717b3          	sll	a5,a4,a5
2040381a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
2040381e:	fec42783          	lw	a5,-20(s0)
20403822:	3047a7f3          	csrrs	a5,mie,a5
20403826:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:105
}
2040382a:	0001                	nop
2040382c:	5432                	lw	s0,44(sp)
2040382e:	6145                	addi	sp,sp,48
20403830:	8082                	ret

20403832 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20403832:	7179                	addi	sp,sp,-48
20403834:	d622                	sw	s0,44(sp)
20403836:	1800                	addi	s0,sp,48
20403838:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
2040383c:	fdc42783          	lw	a5,-36(s0)
20403840:	4705                	li	a4,1
20403842:	00f717b3          	sll	a5,a4,a5
20403846:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
2040384a:	fec42783          	lw	a5,-20(s0)
2040384e:	3047b7f3          	csrrc	a5,mie,a5
20403852:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:111
}
20403856:	0001                	nop
20403858:	5432                	lw	s0,44(sp)
2040385a:	6145                	addi	sp,sp,48
2040385c:	8082                	ret

2040385e <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
2040385e:	1101                	addi	sp,sp,-32
20403860:	ce06                	sw	ra,28(sp)
20403862:	cc22                	sw	s0,24(sp)
20403864:	1000                	addi	s0,sp,32
20403866:	fea42623          	sw	a0,-20(s0)
2040386a:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
2040386e:	06400513          	li	a0,100
20403872:	3e9030ef          	jal	ra,2040745a <metal_shutdown>

20403876 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20403876:	1101                	addi	sp,sp,-32
20403878:	ce06                	sw	ra,28(sp)
2040387a:	cc22                	sw	s0,24(sp)
2040387c:	1000                	addi	s0,sp,32
2040387e:	fea42623          	sw	a0,-20(s0)
20403882:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20403886:	0c800513          	li	a0,200
2040388a:	3d1030ef          	jal	ra,2040745a <metal_shutdown>

2040388e <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
2040388e:	715d                	addi	sp,sp,-80
20403890:	c686                	sw	ra,76(sp)
20403892:	c496                	sw	t0,72(sp)
20403894:	c29a                	sw	t1,68(sp)
20403896:	c09e                	sw	t2,64(sp)
20403898:	de22                	sw	s0,60(sp)
2040389a:	dc2a                	sw	a0,56(sp)
2040389c:	da2e                	sw	a1,52(sp)
2040389e:	d832                	sw	a2,48(sp)
204038a0:	d636                	sw	a3,44(sp)
204038a2:	d43a                	sw	a4,40(sp)
204038a4:	d23e                	sw	a5,36(sp)
204038a6:	d042                	sw	a6,32(sp)
204038a8:	ce46                	sw	a7,28(sp)
204038aa:	cc72                	sw	t3,24(sp)
204038ac:	ca76                	sw	t4,20(sp)
204038ae:	c87a                	sw	t5,16(sp)
204038b0:	c67e                	sw	t6,12(sp)
204038b2:	0880                	addi	s0,sp,80
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
204038b4:	12c00513          	li	a0,300
204038b8:	3a3030ef          	jal	ra,2040745a <metal_shutdown>

204038bc <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
204038bc:	711d                	addi	sp,sp,-96
204038be:	ce86                	sw	ra,92(sp)
204038c0:	cc96                	sw	t0,88(sp)
204038c2:	ca9a                	sw	t1,84(sp)
204038c4:	c89e                	sw	t2,80(sp)
204038c6:	c6a2                	sw	s0,76(sp)
204038c8:	c4aa                	sw	a0,72(sp)
204038ca:	c2ae                	sw	a1,68(sp)
204038cc:	c0b2                	sw	a2,64(sp)
204038ce:	de36                	sw	a3,60(sp)
204038d0:	dc3a                	sw	a4,56(sp)
204038d2:	da3e                	sw	a5,52(sp)
204038d4:	d842                	sw	a6,48(sp)
204038d6:	d646                	sw	a7,44(sp)
204038d8:	d472                	sw	t3,40(sp)
204038da:	d276                	sw	t4,36(sp)
204038dc:	d07a                	sw	t5,32(sp)
204038de:	ce7e                	sw	t6,28(sp)
204038e0:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
204038e2:	3d3d                	jal	20403720 <__metal_myhart_id>
204038e4:	872a                	mv	a4,a0
204038e6:	800007b7          	lui	a5,0x80000
204038ea:	070a                	slli	a4,a4,0x2
204038ec:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
204038f0:	97ba                	add	a5,a5,a4
204038f2:	439c                	lw	a5,0(a5)
204038f4:	faf42623          	sw	a5,-84(s0)
204038f8:	fac42783          	lw	a5,-84(s0)
204038fc:	c785                	beqz	a5,20403924 <metal_software_interrupt_vector_handler+0x68>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
204038fe:	fac42503          	lw	a0,-84(s0)
20403902:	3345                	jal	204036a2 <__metal_driver_cpu_interrupt_controller>
20403904:	faa42423          	sw	a0,-88(s0)
20403908:	fa842783          	lw	a5,-88(s0)
2040390c:	0e07a783          	lw	a5,224(a5)
20403910:	faf42223          	sw	a5,-92(s0)
20403914:	fa842783          	lw	a5,-88(s0)
20403918:	0d87a783          	lw	a5,216(a5)
2040391c:	fa442583          	lw	a1,-92(s0)
20403920:	450d                	li	a0,3
20403922:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:130
}
20403924:	0001                	nop
20403926:	40f6                	lw	ra,92(sp)
20403928:	42e6                	lw	t0,88(sp)
2040392a:	4356                	lw	t1,84(sp)
2040392c:	43c6                	lw	t2,80(sp)
2040392e:	4436                	lw	s0,76(sp)
20403930:	4526                	lw	a0,72(sp)
20403932:	4596                	lw	a1,68(sp)
20403934:	4606                	lw	a2,64(sp)
20403936:	56f2                	lw	a3,60(sp)
20403938:	5762                	lw	a4,56(sp)
2040393a:	57d2                	lw	a5,52(sp)
2040393c:	5842                	lw	a6,48(sp)
2040393e:	58b2                	lw	a7,44(sp)
20403940:	5e22                	lw	t3,40(sp)
20403942:	5e92                	lw	t4,36(sp)
20403944:	5f02                	lw	t5,32(sp)
20403946:	4ff2                	lw	t6,28(sp)
20403948:	6125                	addi	sp,sp,96
2040394a:	30200073          	mret

2040394e <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
2040394e:	7179                	addi	sp,sp,-48
20403950:	d606                	sw	ra,44(sp)
20403952:	d422                	sw	s0,40(sp)
20403954:	1800                	addi	s0,sp,48
20403956:	fca42e23          	sw	a0,-36(s0)
2040395a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
2040395e:	33c9                	jal	20403720 <__metal_myhart_id>
20403960:	872a                	mv	a4,a0
20403962:	800007b7          	lui	a5,0x80000
20403966:	070a                	slli	a4,a4,0x2
20403968:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
2040396c:	97ba                	add	a5,a5,a4
2040396e:	439c                	lw	a5,0(a5)
20403970:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403974:	342027f3          	csrr	a5,mcause
20403978:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
2040397c:	fec42783          	lw	a5,-20(s0)
20403980:	c795                	beqz	a5,204039ac <__metal_default_sw_handler+0x5e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403982:	fec42503          	lw	a0,-20(s0)
20403986:	3b31                	jal	204036a2 <__metal_driver_cpu_interrupt_controller>
20403988:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
2040398c:	fe842783          	lw	a5,-24(s0)
20403990:	3ff7f793          	andi	a5,a5,1023
20403994:	fe442703          	lw	a4,-28(s0)
20403998:	0e878793          	addi	a5,a5,232
2040399c:	078a                	slli	a5,a5,0x2
2040399e:	97ba                	add	a5,a5,a4
204039a0:	439c                	lw	a5,0(a5)
204039a2:	fdc42583          	lw	a1,-36(s0)
204039a6:	fec42503          	lw	a0,-20(s0)
204039aa:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
204039ac:	0001                	nop
204039ae:	50b2                	lw	ra,44(sp)
204039b0:	5422                	lw	s0,40(sp)
204039b2:	6145                	addi	sp,sp,48
204039b4:	8082                	ret

204039b6 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
204039b6:	711d                	addi	sp,sp,-96
204039b8:	ce86                	sw	ra,92(sp)
204039ba:	cc96                	sw	t0,88(sp)
204039bc:	ca9a                	sw	t1,84(sp)
204039be:	c89e                	sw	t2,80(sp)
204039c0:	c6a2                	sw	s0,76(sp)
204039c2:	c4aa                	sw	a0,72(sp)
204039c4:	c2ae                	sw	a1,68(sp)
204039c6:	c0b2                	sw	a2,64(sp)
204039c8:	de36                	sw	a3,60(sp)
204039ca:	dc3a                	sw	a4,56(sp)
204039cc:	da3e                	sw	a5,52(sp)
204039ce:	d842                	sw	a6,48(sp)
204039d0:	d646                	sw	a7,44(sp)
204039d2:	d472                	sw	t3,40(sp)
204039d4:	d276                	sw	t4,36(sp)
204039d6:	d07a                	sw	t5,32(sp)
204039d8:	ce7e                	sw	t6,28(sp)
204039da:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
204039dc:	3391                	jal	20403720 <__metal_myhart_id>
204039de:	872a                	mv	a4,a0
204039e0:	800007b7          	lui	a5,0x80000
204039e4:	070a                	slli	a4,a4,0x2
204039e6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
204039ea:	97ba                	add	a5,a5,a4
204039ec:	439c                	lw	a5,0(a5)
204039ee:	faf42623          	sw	a5,-84(s0)
204039f2:	fac42783          	lw	a5,-84(s0)
204039f6:	c785                	beqz	a5,20403a1e <metal_timer_interrupt_vector_handler+0x68>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
204039f8:	fac42503          	lw	a0,-84(s0)
204039fc:	315d                	jal	204036a2 <__metal_driver_cpu_interrupt_controller>
204039fe:	faa42423          	sw	a0,-88(s0)
20403a02:	fa842783          	lw	a5,-88(s0)
20403a06:	1407a783          	lw	a5,320(a5)
20403a0a:	faf42223          	sw	a5,-92(s0)
20403a0e:	fa842783          	lw	a5,-88(s0)
20403a12:	1387a783          	lw	a5,312(a5)
20403a16:	fa442583          	lw	a1,-92(s0)
20403a1a:	451d                	li	a0,7
20403a1c:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:150
}
20403a1e:	0001                	nop
20403a20:	40f6                	lw	ra,92(sp)
20403a22:	42e6                	lw	t0,88(sp)
20403a24:	4356                	lw	t1,84(sp)
20403a26:	43c6                	lw	t2,80(sp)
20403a28:	4436                	lw	s0,76(sp)
20403a2a:	4526                	lw	a0,72(sp)
20403a2c:	4596                	lw	a1,68(sp)
20403a2e:	4606                	lw	a2,64(sp)
20403a30:	56f2                	lw	a3,60(sp)
20403a32:	5762                	lw	a4,56(sp)
20403a34:	57d2                	lw	a5,52(sp)
20403a36:	5842                	lw	a6,48(sp)
20403a38:	58b2                	lw	a7,44(sp)
20403a3a:	5e22                	lw	t3,40(sp)
20403a3c:	5e92                	lw	t4,36(sp)
20403a3e:	5f02                	lw	t5,32(sp)
20403a40:	4ff2                	lw	t6,28(sp)
20403a42:	6125                	addi	sp,sp,96
20403a44:	30200073          	mret

20403a48 <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403a48:	1101                	addi	sp,sp,-32
20403a4a:	ce22                	sw	s0,28(sp)
20403a4c:	1000                	addi	s0,sp,32
20403a4e:	fea42623          	sw	a0,-20(s0)
20403a52:	feb42423          	sw	a1,-24(s0)
20403a56:	0001                	nop
20403a58:	4472                	lw	s0,28(sp)
20403a5a:	6105                	addi	sp,sp,32
20403a5c:	8082                	ret

20403a5e <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20403a5e:	7179                	addi	sp,sp,-48
20403a60:	d606                	sw	ra,44(sp)
20403a62:	d422                	sw	s0,40(sp)
20403a64:	1800                	addi	s0,sp,48
20403a66:	fca42e23          	sw	a0,-36(s0)
20403a6a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20403a6e:	394d                	jal	20403720 <__metal_myhart_id>
20403a70:	87aa                	mv	a5,a0
20403a72:	853e                	mv	a0,a5
20403a74:	39b5                	jal	204036f0 <__metal_driver_cpu_get>
20403a76:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403a7a:	fec42503          	lw	a0,-20(s0)
20403a7e:	2a8010ef          	jal	ra,20404d26 <__metal_driver_cpu_mtime_get>
20403a82:	fea42023          	sw	a0,-32(s0)
20403a86:	feb42223          	sw	a1,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403a8a:	fe042703          	lw	a4,-32(s0)
20403a8e:	fe442783          	lw	a5,-28(s0)
20403a92:	4529                	li	a0,10
20403a94:	4581                	li	a1,0
20403a96:	00a70633          	add	a2,a4,a0
20403a9a:	8832                	mv	a6,a2
20403a9c:	00e83833          	sltu	a6,a6,a4
20403aa0:	00b786b3          	add	a3,a5,a1
20403aa4:	00d807b3          	add	a5,a6,a3
20403aa8:	86be                	mv	a3,a5
20403aaa:	8732                	mv	a4,a2
20403aac:	87b6                	mv	a5,a3
20403aae:	85ba                	mv	a1,a4
20403ab0:	863e                	mv	a2,a5
20403ab2:	fec42503          	lw	a0,-20(s0)
20403ab6:	2d6010ef          	jal	ra,20404d8c <__metal_driver_cpu_mtimecmp_set>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403aba:	0001                	nop
20403abc:	50b2                	lw	ra,44(sp)
20403abe:	5422                	lw	s0,40(sp)
20403ac0:	6145                	addi	sp,sp,48
20403ac2:	8082                	ret
	...

20403b00 <__metal_exception_handler>:
__metal_exception_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403b00:	7119                	addi	sp,sp,-128
20403b02:	de86                	sw	ra,124(sp)
20403b04:	dc96                	sw	t0,120(sp)
20403b06:	da9a                	sw	t1,116(sp)
20403b08:	d89e                	sw	t2,112(sp)
20403b0a:	d6a2                	sw	s0,108(sp)
20403b0c:	d4aa                	sw	a0,104(sp)
20403b0e:	d2ae                	sw	a1,100(sp)
20403b10:	d0b2                	sw	a2,96(sp)
20403b12:	ceb6                	sw	a3,92(sp)
20403b14:	ccba                	sw	a4,88(sp)
20403b16:	cabe                	sw	a5,84(sp)
20403b18:	c8c2                	sw	a6,80(sp)
20403b1a:	c6c6                	sw	a7,76(sp)
20403b1c:	c4f2                	sw	t3,72(sp)
20403b1e:	c2f6                	sw	t4,68(sp)
20403b20:	c0fa                	sw	t5,64(sp)
20403b22:	de7e                	sw	t6,60(sp)
20403b24:	0100                	addi	s0,sp,128
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403b26:	bfbff0ef          	jal	ra,20403720 <__metal_myhart_id>
20403b2a:	872a                	mv	a4,a0
20403b2c:	800007b7          	lui	a5,0x80000
20403b30:	070a                	slli	a4,a4,0x2
20403b32:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20403b36:	97ba                	add	a5,a5,a4
20403b38:	439c                	lw	a5,0(a5)
20403b3a:	faf42623          	sw	a5,-84(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403b3e:	342027f3          	csrr	a5,mcause
20403b42:	faf42423          	sw	a5,-88(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403b46:	341027f3          	csrr	a5,mepc
20403b4a:	faf42223          	sw	a5,-92(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20403b4e:	343027f3          	csrr	a5,mtval
20403b52:	faf42023          	sw	a5,-96(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403b56:	305027f3          	csrr	a5,mtvec
20403b5a:	f8f42e23          	sw	a5,-100(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20403b5e:	fac42783          	lw	a5,-84(s0)
20403b62:	cbfd                	beqz	a5,20403c58 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403b64:	fac42503          	lw	a0,-84(s0)
20403b68:	b3bff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20403b6c:	f8a42c23          	sw	a0,-104(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20403b70:	fa842783          	lw	a5,-88(s0)
20403b74:	3ff7f793          	andi	a5,a5,1023
20403b78:	f8f42a23          	sw	a5,-108(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20403b7c:	fa842783          	lw	a5,-88(s0)
20403b80:	0a07de63          	bgez	a5,20403c3c <__metal_exception_handler+0x13c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403b84:	f9442703          	lw	a4,-108(s0)
20403b88:	08000793          	li	a5,128
20403b8c:	02f71263          	bne	a4,a5,20403bb0 <__metal_exception_handler+0xb0>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403b90:	f9842783          	lw	a5,-104(s0)
20403b94:	3987a783          	lw	a5,920(a5)
20403b98:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20403b9c:	f9842783          	lw	a5,-104(s0)
20403ba0:	3907a783          	lw	a5,912(a5)
20403ba4:	f8c42583          	lw	a1,-116(s0)
20403ba8:	f9442503          	lw	a0,-108(s0)
20403bac:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20403bae:	a06d                	j	20403c58 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403bb0:	f9442703          	lw	a4,-108(s0)
20403bb4:	47ad                	li	a5,11
20403bb6:	00e7d763          	bge	a5,a4,20403bc4 <__metal_exception_handler+0xc4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20403bba:	f9c42783          	lw	a5,-100(s0)
20403bbe:	03f7f793          	andi	a5,a5,63
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403bc2:	ef9d                	bnez	a5,20403c00 <__metal_exception_handler+0x100>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20403bc4:	f9842683          	lw	a3,-104(s0)
20403bc8:	f9442703          	lw	a4,-108(s0)
20403bcc:	87ba                	mv	a5,a4
20403bce:	0786                	slli	a5,a5,0x1
20403bd0:	97ba                	add	a5,a5,a4
20403bd2:	078e                	slli	a5,a5,0x3
20403bd4:	97b6                	add	a5,a5,a3
20403bd6:	0987a783          	lw	a5,152(a5)
20403bda:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20403bde:	f9842683          	lw	a3,-104(s0)
20403be2:	f9442703          	lw	a4,-108(s0)
20403be6:	87ba                	mv	a5,a4
20403be8:	0786                	slli	a5,a5,0x1
20403bea:	97ba                	add	a5,a5,a4
20403bec:	078e                	slli	a5,a5,0x3
20403bee:	97b6                	add	a5,a5,a3
20403bf0:	0907a783          	lw	a5,144(a5)
20403bf4:	f8c42583          	lw	a1,-116(s0)
20403bf8:	f9442503          	lw	a0,-108(s0)
20403bfc:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20403bfe:	a8a9                	j	20403c58 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403c00:	f9c42783          	lw	a5,-100(s0)
20403c04:	03f7f713          	andi	a4,a5,63
20403c08:	4789                	li	a5,2
20403c0a:	04f71763          	bne	a4,a5,20403c58 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20403c0e:	307027f3          	csrr	a5,mtvt
20403c12:	f8f42823          	sw	a5,-112(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403c16:	f9842783          	lw	a5,-104(s0)
20403c1a:	0dc7a783          	lw	a5,220(a5)
20403c1e:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403c22:	f9042783          	lw	a5,-112(s0)
20403c26:	439c                	lw	a5,0(a5)
20403c28:	f8f42423          	sw	a5,-120(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20403c2c:	f8842783          	lw	a5,-120(s0)
20403c30:	f8c42583          	lw	a1,-116(s0)
20403c34:	f9442503          	lw	a0,-108(s0)
20403c38:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20403c3a:	a839                	j	20403c58 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20403c3c:	f9842703          	lw	a4,-104(s0)
20403c40:	f9442783          	lw	a5,-108(s0)
20403c44:	0e878793          	addi	a5,a5,232
20403c48:	078a                	slli	a5,a5,0x2
20403c4a:	97ba                	add	a5,a5,a4
20403c4c:	439c                	lw	a5,0(a5)
20403c4e:	f9442583          	lw	a1,-108(s0)
20403c52:	fac42503          	lw	a0,-84(s0)
20403c56:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403c58:	50f6                	lw	ra,124(sp)
20403c5a:	52e6                	lw	t0,120(sp)
20403c5c:	5356                	lw	t1,116(sp)
20403c5e:	53c6                	lw	t2,112(sp)
20403c60:	5436                	lw	s0,108(sp)
20403c62:	5526                	lw	a0,104(sp)
20403c64:	5596                	lw	a1,100(sp)
20403c66:	5606                	lw	a2,96(sp)
20403c68:	46f6                	lw	a3,92(sp)
20403c6a:	4766                	lw	a4,88(sp)
20403c6c:	47d6                	lw	a5,84(sp)
20403c6e:	4846                	lw	a6,80(sp)
20403c70:	48b6                	lw	a7,76(sp)
20403c72:	4e26                	lw	t3,72(sp)
20403c74:	4e96                	lw	t4,68(sp)
20403c76:	4f06                	lw	t5,64(sp)
20403c78:	5ff2                	lw	t6,60(sp)
20403c7a:	6109                	addi	sp,sp,128
20403c7c:	30200073          	mret
	...

20403cfa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20403cfa:	711d                	addi	sp,sp,-96
20403cfc:	ce86                	sw	ra,92(sp)
20403cfe:	cc96                	sw	t0,88(sp)
20403d00:	ca9a                	sw	t1,84(sp)
20403d02:	c89e                	sw	t2,80(sp)
20403d04:	c6a2                	sw	s0,76(sp)
20403d06:	c4aa                	sw	a0,72(sp)
20403d08:	c2ae                	sw	a1,68(sp)
20403d0a:	c0b2                	sw	a2,64(sp)
20403d0c:	de36                	sw	a3,60(sp)
20403d0e:	dc3a                	sw	a4,56(sp)
20403d10:	da3e                	sw	a5,52(sp)
20403d12:	d842                	sw	a6,48(sp)
20403d14:	d646                	sw	a7,44(sp)
20403d16:	d472                	sw	t3,40(sp)
20403d18:	d276                	sw	t4,36(sp)
20403d1a:	d07a                	sw	t5,32(sp)
20403d1c:	ce7e                	sw	t6,28(sp)
20403d1e:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403d20:	a01ff0ef          	jal	ra,20403720 <__metal_myhart_id>
20403d24:	872a                	mv	a4,a0
20403d26:	800007b7          	lui	a5,0x80000
20403d2a:	070a                	slli	a4,a4,0x2
20403d2c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20403d30:	97ba                	add	a5,a5,a4
20403d32:	439c                	lw	a5,0(a5)
20403d34:	faf42623          	sw	a5,-84(s0)
20403d38:	fac42783          	lw	a5,-84(s0)
20403d3c:	c78d                	beqz	a5,20403d66 <metal_lc0_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20403d3e:	fac42503          	lw	a0,-84(s0)
20403d42:	961ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20403d46:	faa42423          	sw	a0,-88(s0)
20403d4a:	fa842783          	lw	a5,-88(s0)
20403d4e:	2187a783          	lw	a5,536(a5)
20403d52:	faf42223          	sw	a5,-92(s0)
20403d56:	fa842783          	lw	a5,-88(s0)
20403d5a:	2107a783          	lw	a5,528(a5)
20403d5e:	fa442583          	lw	a1,-92(s0)
20403d62:	4541                	li	a0,16
20403d64:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403d66:	0001                	nop
20403d68:	40f6                	lw	ra,92(sp)
20403d6a:	42e6                	lw	t0,88(sp)
20403d6c:	4356                	lw	t1,84(sp)
20403d6e:	43c6                	lw	t2,80(sp)
20403d70:	4436                	lw	s0,76(sp)
20403d72:	4526                	lw	a0,72(sp)
20403d74:	4596                	lw	a1,68(sp)
20403d76:	4606                	lw	a2,64(sp)
20403d78:	56f2                	lw	a3,60(sp)
20403d7a:	5762                	lw	a4,56(sp)
20403d7c:	57d2                	lw	a5,52(sp)
20403d7e:	5842                	lw	a6,48(sp)
20403d80:	58b2                	lw	a7,44(sp)
20403d82:	5e22                	lw	t3,40(sp)
20403d84:	5e92                	lw	t4,36(sp)
20403d86:	5f02                	lw	t5,32(sp)
20403d88:	4ff2                	lw	t6,28(sp)
20403d8a:	6125                	addi	sp,sp,96
20403d8c:	30200073          	mret

20403d90 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403d90:	711d                	addi	sp,sp,-96
20403d92:	ce86                	sw	ra,92(sp)
20403d94:	cc96                	sw	t0,88(sp)
20403d96:	ca9a                	sw	t1,84(sp)
20403d98:	c89e                	sw	t2,80(sp)
20403d9a:	c6a2                	sw	s0,76(sp)
20403d9c:	c4aa                	sw	a0,72(sp)
20403d9e:	c2ae                	sw	a1,68(sp)
20403da0:	c0b2                	sw	a2,64(sp)
20403da2:	de36                	sw	a3,60(sp)
20403da4:	dc3a                	sw	a4,56(sp)
20403da6:	da3e                	sw	a5,52(sp)
20403da8:	d842                	sw	a6,48(sp)
20403daa:	d646                	sw	a7,44(sp)
20403dac:	d472                	sw	t3,40(sp)
20403dae:	d276                	sw	t4,36(sp)
20403db0:	d07a                	sw	t5,32(sp)
20403db2:	ce7e                	sw	t6,28(sp)
20403db4:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20403db6:	96bff0ef          	jal	ra,20403720 <__metal_myhart_id>
20403dba:	872a                	mv	a4,a0
20403dbc:	800007b7          	lui	a5,0x80000
20403dc0:	070a                	slli	a4,a4,0x2
20403dc2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20403dc6:	97ba                	add	a5,a5,a4
20403dc8:	439c                	lw	a5,0(a5)
20403dca:	faf42623          	sw	a5,-84(s0)
20403dce:	fac42783          	lw	a5,-84(s0)
20403dd2:	c78d                	beqz	a5,20403dfc <metal_lc1_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20403dd4:	fac42503          	lw	a0,-84(s0)
20403dd8:	8cbff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20403ddc:	faa42423          	sw	a0,-88(s0)
20403de0:	fa842783          	lw	a5,-88(s0)
20403de4:	2307a783          	lw	a5,560(a5)
20403de8:	faf42223          	sw	a5,-92(s0)
20403dec:	fa842783          	lw	a5,-88(s0)
20403df0:	2287a783          	lw	a5,552(a5)
20403df4:	fa442583          	lw	a1,-92(s0)
20403df8:	4545                	li	a0,17
20403dfa:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:221
}
20403dfc:	0001                	nop
20403dfe:	40f6                	lw	ra,92(sp)
20403e00:	42e6                	lw	t0,88(sp)
20403e02:	4356                	lw	t1,84(sp)
20403e04:	43c6                	lw	t2,80(sp)
20403e06:	4436                	lw	s0,76(sp)
20403e08:	4526                	lw	a0,72(sp)
20403e0a:	4596                	lw	a1,68(sp)
20403e0c:	4606                	lw	a2,64(sp)
20403e0e:	56f2                	lw	a3,60(sp)
20403e10:	5762                	lw	a4,56(sp)
20403e12:	57d2                	lw	a5,52(sp)
20403e14:	5842                	lw	a6,48(sp)
20403e16:	58b2                	lw	a7,44(sp)
20403e18:	5e22                	lw	t3,40(sp)
20403e1a:	5e92                	lw	t4,36(sp)
20403e1c:	5f02                	lw	t5,32(sp)
20403e1e:	4ff2                	lw	t6,28(sp)
20403e20:	6125                	addi	sp,sp,96
20403e22:	30200073          	mret

20403e26 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403e26:	711d                	addi	sp,sp,-96
20403e28:	ce86                	sw	ra,92(sp)
20403e2a:	cc96                	sw	t0,88(sp)
20403e2c:	ca9a                	sw	t1,84(sp)
20403e2e:	c89e                	sw	t2,80(sp)
20403e30:	c6a2                	sw	s0,76(sp)
20403e32:	c4aa                	sw	a0,72(sp)
20403e34:	c2ae                	sw	a1,68(sp)
20403e36:	c0b2                	sw	a2,64(sp)
20403e38:	de36                	sw	a3,60(sp)
20403e3a:	dc3a                	sw	a4,56(sp)
20403e3c:	da3e                	sw	a5,52(sp)
20403e3e:	d842                	sw	a6,48(sp)
20403e40:	d646                	sw	a7,44(sp)
20403e42:	d472                	sw	t3,40(sp)
20403e44:	d276                	sw	t4,36(sp)
20403e46:	d07a                	sw	t5,32(sp)
20403e48:	ce7e                	sw	t6,28(sp)
20403e4a:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
20403e4c:	8d5ff0ef          	jal	ra,20403720 <__metal_myhart_id>
20403e50:	872a                	mv	a4,a0
20403e52:	800007b7          	lui	a5,0x80000
20403e56:	070a                	slli	a4,a4,0x2
20403e58:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20403e5c:	97ba                	add	a5,a5,a4
20403e5e:	439c                	lw	a5,0(a5)
20403e60:	faf42623          	sw	a5,-84(s0)
20403e64:	fac42783          	lw	a5,-84(s0)
20403e68:	c78d                	beqz	a5,20403e92 <metal_lc2_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
20403e6a:	fac42503          	lw	a0,-84(s0)
20403e6e:	835ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20403e72:	faa42423          	sw	a0,-88(s0)
20403e76:	fa842783          	lw	a5,-88(s0)
20403e7a:	2487a783          	lw	a5,584(a5)
20403e7e:	faf42223          	sw	a5,-92(s0)
20403e82:	fa842783          	lw	a5,-88(s0)
20403e86:	2407a783          	lw	a5,576(a5)
20403e8a:	fa442583          	lw	a1,-92(s0)
20403e8e:	4549                	li	a0,18
20403e90:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403e92:	0001                	nop
20403e94:	40f6                	lw	ra,92(sp)
20403e96:	42e6                	lw	t0,88(sp)
20403e98:	4356                	lw	t1,84(sp)
20403e9a:	43c6                	lw	t2,80(sp)
20403e9c:	4436                	lw	s0,76(sp)
20403e9e:	4526                	lw	a0,72(sp)
20403ea0:	4596                	lw	a1,68(sp)
20403ea2:	4606                	lw	a2,64(sp)
20403ea4:	56f2                	lw	a3,60(sp)
20403ea6:	5762                	lw	a4,56(sp)
20403ea8:	57d2                	lw	a5,52(sp)
20403eaa:	5842                	lw	a6,48(sp)
20403eac:	58b2                	lw	a7,44(sp)
20403eae:	5e22                	lw	t3,40(sp)
20403eb0:	5e92                	lw	t4,36(sp)
20403eb2:	5f02                	lw	t5,32(sp)
20403eb4:	4ff2                	lw	t6,28(sp)
20403eb6:	6125                	addi	sp,sp,96
20403eb8:	30200073          	mret

20403ebc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
20403ebc:	711d                	addi	sp,sp,-96
20403ebe:	ce86                	sw	ra,92(sp)
20403ec0:	cc96                	sw	t0,88(sp)
20403ec2:	ca9a                	sw	t1,84(sp)
20403ec4:	c89e                	sw	t2,80(sp)
20403ec6:	c6a2                	sw	s0,76(sp)
20403ec8:	c4aa                	sw	a0,72(sp)
20403eca:	c2ae                	sw	a1,68(sp)
20403ecc:	c0b2                	sw	a2,64(sp)
20403ece:	de36                	sw	a3,60(sp)
20403ed0:	dc3a                	sw	a4,56(sp)
20403ed2:	da3e                	sw	a5,52(sp)
20403ed4:	d842                	sw	a6,48(sp)
20403ed6:	d646                	sw	a7,44(sp)
20403ed8:	d472                	sw	t3,40(sp)
20403eda:	d276                	sw	t4,36(sp)
20403edc:	d07a                	sw	t5,32(sp)
20403ede:	ce7e                	sw	t6,28(sp)
20403ee0:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20403ee2:	83fff0ef          	jal	ra,20403720 <__metal_myhart_id>
20403ee6:	872a                	mv	a4,a0
20403ee8:	800007b7          	lui	a5,0x80000
20403eec:	070a                	slli	a4,a4,0x2
20403eee:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20403ef2:	97ba                	add	a5,a5,a4
20403ef4:	439c                	lw	a5,0(a5)
20403ef6:	faf42623          	sw	a5,-84(s0)
20403efa:	fac42783          	lw	a5,-84(s0)
20403efe:	c78d                	beqz	a5,20403f28 <metal_lc3_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20403f00:	fac42503          	lw	a0,-84(s0)
20403f04:	f9eff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20403f08:	faa42423          	sw	a0,-88(s0)
20403f0c:	fa842783          	lw	a5,-88(s0)
20403f10:	2607a783          	lw	a5,608(a5)
20403f14:	faf42223          	sw	a5,-92(s0)
20403f18:	fa842783          	lw	a5,-88(s0)
20403f1c:	2587a783          	lw	a5,600(a5)
20403f20:	fa442583          	lw	a1,-92(s0)
20403f24:	454d                	li	a0,19
20403f26:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403f28:	0001                	nop
20403f2a:	40f6                	lw	ra,92(sp)
20403f2c:	42e6                	lw	t0,88(sp)
20403f2e:	4356                	lw	t1,84(sp)
20403f30:	43c6                	lw	t2,80(sp)
20403f32:	4436                	lw	s0,76(sp)
20403f34:	4526                	lw	a0,72(sp)
20403f36:	4596                	lw	a1,68(sp)
20403f38:	4606                	lw	a2,64(sp)
20403f3a:	56f2                	lw	a3,60(sp)
20403f3c:	5762                	lw	a4,56(sp)
20403f3e:	57d2                	lw	a5,52(sp)
20403f40:	5842                	lw	a6,48(sp)
20403f42:	58b2                	lw	a7,44(sp)
20403f44:	5e22                	lw	t3,40(sp)
20403f46:	5e92                	lw	t4,36(sp)
20403f48:	5f02                	lw	t5,32(sp)
20403f4a:	4ff2                	lw	t6,28(sp)
20403f4c:	6125                	addi	sp,sp,96
20403f4e:	30200073          	mret

20403f52 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20403f52:	711d                	addi	sp,sp,-96
20403f54:	ce86                	sw	ra,92(sp)
20403f56:	cc96                	sw	t0,88(sp)
20403f58:	ca9a                	sw	t1,84(sp)
20403f5a:	c89e                	sw	t2,80(sp)
20403f5c:	c6a2                	sw	s0,76(sp)
20403f5e:	c4aa                	sw	a0,72(sp)
20403f60:	c2ae                	sw	a1,68(sp)
20403f62:	c0b2                	sw	a2,64(sp)
20403f64:	de36                	sw	a3,60(sp)
20403f66:	dc3a                	sw	a4,56(sp)
20403f68:	da3e                	sw	a5,52(sp)
20403f6a:	d842                	sw	a6,48(sp)
20403f6c:	d646                	sw	a7,44(sp)
20403f6e:	d472                	sw	t3,40(sp)
20403f70:	d276                	sw	t4,36(sp)
20403f72:	d07a                	sw	t5,32(sp)
20403f74:	ce7e                	sw	t6,28(sp)
20403f76:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403f78:	fa8ff0ef          	jal	ra,20403720 <__metal_myhart_id>
20403f7c:	872a                	mv	a4,a0
20403f7e:	800007b7          	lui	a5,0x80000
20403f82:	070a                	slli	a4,a4,0x2
20403f84:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20403f88:	97ba                	add	a5,a5,a4
20403f8a:	439c                	lw	a5,0(a5)
20403f8c:	faf42623          	sw	a5,-84(s0)
20403f90:	fac42783          	lw	a5,-84(s0)
20403f94:	c78d                	beqz	a5,20403fbe <metal_lc4_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20403f96:	fac42503          	lw	a0,-84(s0)
20403f9a:	f08ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20403f9e:	faa42423          	sw	a0,-88(s0)
20403fa2:	fa842783          	lw	a5,-88(s0)
20403fa6:	2787a783          	lw	a5,632(a5)
20403faa:	faf42223          	sw	a5,-92(s0)
20403fae:	fa842783          	lw	a5,-88(s0)
20403fb2:	2707a783          	lw	a5,624(a5)
20403fb6:	fa442583          	lw	a1,-92(s0)
20403fba:	4551                	li	a0,20
20403fbc:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:236
}
20403fbe:	0001                	nop
20403fc0:	40f6                	lw	ra,92(sp)
20403fc2:	42e6                	lw	t0,88(sp)
20403fc4:	4356                	lw	t1,84(sp)
20403fc6:	43c6                	lw	t2,80(sp)
20403fc8:	4436                	lw	s0,76(sp)
20403fca:	4526                	lw	a0,72(sp)
20403fcc:	4596                	lw	a1,68(sp)
20403fce:	4606                	lw	a2,64(sp)
20403fd0:	56f2                	lw	a3,60(sp)
20403fd2:	5762                	lw	a4,56(sp)
20403fd4:	57d2                	lw	a5,52(sp)
20403fd6:	5842                	lw	a6,48(sp)
20403fd8:	58b2                	lw	a7,44(sp)
20403fda:	5e22                	lw	t3,40(sp)
20403fdc:	5e92                	lw	t4,36(sp)
20403fde:	5f02                	lw	t5,32(sp)
20403fe0:	4ff2                	lw	t6,28(sp)
20403fe2:	6125                	addi	sp,sp,96
20403fe4:	30200073          	mret

20403fe8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20403fe8:	711d                	addi	sp,sp,-96
20403fea:	ce86                	sw	ra,92(sp)
20403fec:	cc96                	sw	t0,88(sp)
20403fee:	ca9a                	sw	t1,84(sp)
20403ff0:	c89e                	sw	t2,80(sp)
20403ff2:	c6a2                	sw	s0,76(sp)
20403ff4:	c4aa                	sw	a0,72(sp)
20403ff6:	c2ae                	sw	a1,68(sp)
20403ff8:	c0b2                	sw	a2,64(sp)
20403ffa:	de36                	sw	a3,60(sp)
20403ffc:	dc3a                	sw	a4,56(sp)
20403ffe:	da3e                	sw	a5,52(sp)
20404000:	d842                	sw	a6,48(sp)
20404002:	d646                	sw	a7,44(sp)
20404004:	d472                	sw	t3,40(sp)
20404006:	d276                	sw	t4,36(sp)
20404008:	d07a                	sw	t5,32(sp)
2040400a:	ce7e                	sw	t6,28(sp)
2040400c:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040400e:	f12ff0ef          	jal	ra,20403720 <__metal_myhart_id>
20404012:	872a                	mv	a4,a0
20404014:	800007b7          	lui	a5,0x80000
20404018:	070a                	slli	a4,a4,0x2
2040401a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
2040401e:	97ba                	add	a5,a5,a4
20404020:	439c                	lw	a5,0(a5)
20404022:	faf42623          	sw	a5,-84(s0)
20404026:	fac42783          	lw	a5,-84(s0)
2040402a:	c78d                	beqz	a5,20404054 <metal_lc5_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2040402c:	fac42503          	lw	a0,-84(s0)
20404030:	e72ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404034:	faa42423          	sw	a0,-88(s0)
20404038:	fa842783          	lw	a5,-88(s0)
2040403c:	2907a783          	lw	a5,656(a5)
20404040:	faf42223          	sw	a5,-92(s0)
20404044:	fa842783          	lw	a5,-88(s0)
20404048:	2887a783          	lw	a5,648(a5)
2040404c:	fa442583          	lw	a1,-92(s0)
20404050:	4555                	li	a0,21
20404052:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:241
}
20404054:	0001                	nop
20404056:	40f6                	lw	ra,92(sp)
20404058:	42e6                	lw	t0,88(sp)
2040405a:	4356                	lw	t1,84(sp)
2040405c:	43c6                	lw	t2,80(sp)
2040405e:	4436                	lw	s0,76(sp)
20404060:	4526                	lw	a0,72(sp)
20404062:	4596                	lw	a1,68(sp)
20404064:	4606                	lw	a2,64(sp)
20404066:	56f2                	lw	a3,60(sp)
20404068:	5762                	lw	a4,56(sp)
2040406a:	57d2                	lw	a5,52(sp)
2040406c:	5842                	lw	a6,48(sp)
2040406e:	58b2                	lw	a7,44(sp)
20404070:	5e22                	lw	t3,40(sp)
20404072:	5e92                	lw	t4,36(sp)
20404074:	5f02                	lw	t5,32(sp)
20404076:	4ff2                	lw	t6,28(sp)
20404078:	6125                	addi	sp,sp,96
2040407a:	30200073          	mret

2040407e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2040407e:	711d                	addi	sp,sp,-96
20404080:	ce86                	sw	ra,92(sp)
20404082:	cc96                	sw	t0,88(sp)
20404084:	ca9a                	sw	t1,84(sp)
20404086:	c89e                	sw	t2,80(sp)
20404088:	c6a2                	sw	s0,76(sp)
2040408a:	c4aa                	sw	a0,72(sp)
2040408c:	c2ae                	sw	a1,68(sp)
2040408e:	c0b2                	sw	a2,64(sp)
20404090:	de36                	sw	a3,60(sp)
20404092:	dc3a                	sw	a4,56(sp)
20404094:	da3e                	sw	a5,52(sp)
20404096:	d842                	sw	a6,48(sp)
20404098:	d646                	sw	a7,44(sp)
2040409a:	d472                	sw	t3,40(sp)
2040409c:	d276                	sw	t4,36(sp)
2040409e:	d07a                	sw	t5,32(sp)
204040a0:	ce7e                	sw	t6,28(sp)
204040a2:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
204040a4:	e7cff0ef          	jal	ra,20403720 <__metal_myhart_id>
204040a8:	872a                	mv	a4,a0
204040aa:	800007b7          	lui	a5,0x80000
204040ae:	070a                	slli	a4,a4,0x2
204040b0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
204040b4:	97ba                	add	a5,a5,a4
204040b6:	439c                	lw	a5,0(a5)
204040b8:	faf42623          	sw	a5,-84(s0)
204040bc:	fac42783          	lw	a5,-84(s0)
204040c0:	c78d                	beqz	a5,204040ea <metal_lc6_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
204040c2:	fac42503          	lw	a0,-84(s0)
204040c6:	ddcff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
204040ca:	faa42423          	sw	a0,-88(s0)
204040ce:	fa842783          	lw	a5,-88(s0)
204040d2:	2a87a783          	lw	a5,680(a5)
204040d6:	faf42223          	sw	a5,-92(s0)
204040da:	fa842783          	lw	a5,-88(s0)
204040de:	2a07a783          	lw	a5,672(a5)
204040e2:	fa442583          	lw	a1,-92(s0)
204040e6:	4559                	li	a0,22
204040e8:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:246
}
204040ea:	0001                	nop
204040ec:	40f6                	lw	ra,92(sp)
204040ee:	42e6                	lw	t0,88(sp)
204040f0:	4356                	lw	t1,84(sp)
204040f2:	43c6                	lw	t2,80(sp)
204040f4:	4436                	lw	s0,76(sp)
204040f6:	4526                	lw	a0,72(sp)
204040f8:	4596                	lw	a1,68(sp)
204040fa:	4606                	lw	a2,64(sp)
204040fc:	56f2                	lw	a3,60(sp)
204040fe:	5762                	lw	a4,56(sp)
20404100:	57d2                	lw	a5,52(sp)
20404102:	5842                	lw	a6,48(sp)
20404104:	58b2                	lw	a7,44(sp)
20404106:	5e22                	lw	t3,40(sp)
20404108:	5e92                	lw	t4,36(sp)
2040410a:	5f02                	lw	t5,32(sp)
2040410c:	4ff2                	lw	t6,28(sp)
2040410e:	6125                	addi	sp,sp,96
20404110:	30200073          	mret

20404114 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20404114:	711d                	addi	sp,sp,-96
20404116:	ce86                	sw	ra,92(sp)
20404118:	cc96                	sw	t0,88(sp)
2040411a:	ca9a                	sw	t1,84(sp)
2040411c:	c89e                	sw	t2,80(sp)
2040411e:	c6a2                	sw	s0,76(sp)
20404120:	c4aa                	sw	a0,72(sp)
20404122:	c2ae                	sw	a1,68(sp)
20404124:	c0b2                	sw	a2,64(sp)
20404126:	de36                	sw	a3,60(sp)
20404128:	dc3a                	sw	a4,56(sp)
2040412a:	da3e                	sw	a5,52(sp)
2040412c:	d842                	sw	a6,48(sp)
2040412e:	d646                	sw	a7,44(sp)
20404130:	d472                	sw	t3,40(sp)
20404132:	d276                	sw	t4,36(sp)
20404134:	d07a                	sw	t5,32(sp)
20404136:	ce7e                	sw	t6,28(sp)
20404138:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2040413a:	de6ff0ef          	jal	ra,20403720 <__metal_myhart_id>
2040413e:	872a                	mv	a4,a0
20404140:	800007b7          	lui	a5,0x80000
20404144:	070a                	slli	a4,a4,0x2
20404146:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
2040414a:	97ba                	add	a5,a5,a4
2040414c:	439c                	lw	a5,0(a5)
2040414e:	faf42623          	sw	a5,-84(s0)
20404152:	fac42783          	lw	a5,-84(s0)
20404156:	c78d                	beqz	a5,20404180 <metal_lc7_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20404158:	fac42503          	lw	a0,-84(s0)
2040415c:	d46ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404160:	faa42423          	sw	a0,-88(s0)
20404164:	fa842783          	lw	a5,-88(s0)
20404168:	2c07a783          	lw	a5,704(a5)
2040416c:	faf42223          	sw	a5,-92(s0)
20404170:	fa842783          	lw	a5,-88(s0)
20404174:	2b87a783          	lw	a5,696(a5)
20404178:	fa442583          	lw	a1,-92(s0)
2040417c:	455d                	li	a0,23
2040417e:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:251
}
20404180:	0001                	nop
20404182:	40f6                	lw	ra,92(sp)
20404184:	42e6                	lw	t0,88(sp)
20404186:	4356                	lw	t1,84(sp)
20404188:	43c6                	lw	t2,80(sp)
2040418a:	4436                	lw	s0,76(sp)
2040418c:	4526                	lw	a0,72(sp)
2040418e:	4596                	lw	a1,68(sp)
20404190:	4606                	lw	a2,64(sp)
20404192:	56f2                	lw	a3,60(sp)
20404194:	5762                	lw	a4,56(sp)
20404196:	57d2                	lw	a5,52(sp)
20404198:	5842                	lw	a6,48(sp)
2040419a:	58b2                	lw	a7,44(sp)
2040419c:	5e22                	lw	t3,40(sp)
2040419e:	5e92                	lw	t4,36(sp)
204041a0:	5f02                	lw	t5,32(sp)
204041a2:	4ff2                	lw	t6,28(sp)
204041a4:	6125                	addi	sp,sp,96
204041a6:	30200073          	mret

204041aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
204041aa:	711d                	addi	sp,sp,-96
204041ac:	ce86                	sw	ra,92(sp)
204041ae:	cc96                	sw	t0,88(sp)
204041b0:	ca9a                	sw	t1,84(sp)
204041b2:	c89e                	sw	t2,80(sp)
204041b4:	c6a2                	sw	s0,76(sp)
204041b6:	c4aa                	sw	a0,72(sp)
204041b8:	c2ae                	sw	a1,68(sp)
204041ba:	c0b2                	sw	a2,64(sp)
204041bc:	de36                	sw	a3,60(sp)
204041be:	dc3a                	sw	a4,56(sp)
204041c0:	da3e                	sw	a5,52(sp)
204041c2:	d842                	sw	a6,48(sp)
204041c4:	d646                	sw	a7,44(sp)
204041c6:	d472                	sw	t3,40(sp)
204041c8:	d276                	sw	t4,36(sp)
204041ca:	d07a                	sw	t5,32(sp)
204041cc:	ce7e                	sw	t6,28(sp)
204041ce:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
204041d0:	d50ff0ef          	jal	ra,20403720 <__metal_myhart_id>
204041d4:	872a                	mv	a4,a0
204041d6:	800007b7          	lui	a5,0x80000
204041da:	070a                	slli	a4,a4,0x2
204041dc:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
204041e0:	97ba                	add	a5,a5,a4
204041e2:	439c                	lw	a5,0(a5)
204041e4:	faf42623          	sw	a5,-84(s0)
204041e8:	fac42783          	lw	a5,-84(s0)
204041ec:	c78d                	beqz	a5,20404216 <metal_lc8_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
204041ee:	fac42503          	lw	a0,-84(s0)
204041f2:	cb0ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
204041f6:	faa42423          	sw	a0,-88(s0)
204041fa:	fa842783          	lw	a5,-88(s0)
204041fe:	2d87a783          	lw	a5,728(a5)
20404202:	faf42223          	sw	a5,-92(s0)
20404206:	fa842783          	lw	a5,-88(s0)
2040420a:	2d07a783          	lw	a5,720(a5)
2040420e:	fa442583          	lw	a1,-92(s0)
20404212:	4561                	li	a0,24
20404214:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404216:	0001                	nop
20404218:	40f6                	lw	ra,92(sp)
2040421a:	42e6                	lw	t0,88(sp)
2040421c:	4356                	lw	t1,84(sp)
2040421e:	43c6                	lw	t2,80(sp)
20404220:	4436                	lw	s0,76(sp)
20404222:	4526                	lw	a0,72(sp)
20404224:	4596                	lw	a1,68(sp)
20404226:	4606                	lw	a2,64(sp)
20404228:	56f2                	lw	a3,60(sp)
2040422a:	5762                	lw	a4,56(sp)
2040422c:	57d2                	lw	a5,52(sp)
2040422e:	5842                	lw	a6,48(sp)
20404230:	58b2                	lw	a7,44(sp)
20404232:	5e22                	lw	t3,40(sp)
20404234:	5e92                	lw	t4,36(sp)
20404236:	5f02                	lw	t5,32(sp)
20404238:	4ff2                	lw	t6,28(sp)
2040423a:	6125                	addi	sp,sp,96
2040423c:	30200073          	mret

20404240 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20404240:	711d                	addi	sp,sp,-96
20404242:	ce86                	sw	ra,92(sp)
20404244:	cc96                	sw	t0,88(sp)
20404246:	ca9a                	sw	t1,84(sp)
20404248:	c89e                	sw	t2,80(sp)
2040424a:	c6a2                	sw	s0,76(sp)
2040424c:	c4aa                	sw	a0,72(sp)
2040424e:	c2ae                	sw	a1,68(sp)
20404250:	c0b2                	sw	a2,64(sp)
20404252:	de36                	sw	a3,60(sp)
20404254:	dc3a                	sw	a4,56(sp)
20404256:	da3e                	sw	a5,52(sp)
20404258:	d842                	sw	a6,48(sp)
2040425a:	d646                	sw	a7,44(sp)
2040425c:	d472                	sw	t3,40(sp)
2040425e:	d276                	sw	t4,36(sp)
20404260:	d07a                	sw	t5,32(sp)
20404262:	ce7e                	sw	t6,28(sp)
20404264:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20404266:	cbaff0ef          	jal	ra,20403720 <__metal_myhart_id>
2040426a:	872a                	mv	a4,a0
2040426c:	800007b7          	lui	a5,0x80000
20404270:	070a                	slli	a4,a4,0x2
20404272:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20404276:	97ba                	add	a5,a5,a4
20404278:	439c                	lw	a5,0(a5)
2040427a:	faf42623          	sw	a5,-84(s0)
2040427e:	fac42783          	lw	a5,-84(s0)
20404282:	c78d                	beqz	a5,204042ac <metal_lc9_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404284:	fac42503          	lw	a0,-84(s0)
20404288:	c1aff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
2040428c:	faa42423          	sw	a0,-88(s0)
20404290:	fa842783          	lw	a5,-88(s0)
20404294:	2f07a783          	lw	a5,752(a5)
20404298:	faf42223          	sw	a5,-92(s0)
2040429c:	fa842783          	lw	a5,-88(s0)
204042a0:	2e87a783          	lw	a5,744(a5)
204042a4:	fa442583          	lw	a1,-92(s0)
204042a8:	4565                	li	a0,25
204042aa:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:261
}
204042ac:	0001                	nop
204042ae:	40f6                	lw	ra,92(sp)
204042b0:	42e6                	lw	t0,88(sp)
204042b2:	4356                	lw	t1,84(sp)
204042b4:	43c6                	lw	t2,80(sp)
204042b6:	4436                	lw	s0,76(sp)
204042b8:	4526                	lw	a0,72(sp)
204042ba:	4596                	lw	a1,68(sp)
204042bc:	4606                	lw	a2,64(sp)
204042be:	56f2                	lw	a3,60(sp)
204042c0:	5762                	lw	a4,56(sp)
204042c2:	57d2                	lw	a5,52(sp)
204042c4:	5842                	lw	a6,48(sp)
204042c6:	58b2                	lw	a7,44(sp)
204042c8:	5e22                	lw	t3,40(sp)
204042ca:	5e92                	lw	t4,36(sp)
204042cc:	5f02                	lw	t5,32(sp)
204042ce:	4ff2                	lw	t6,28(sp)
204042d0:	6125                	addi	sp,sp,96
204042d2:	30200073          	mret

204042d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
204042d6:	711d                	addi	sp,sp,-96
204042d8:	ce86                	sw	ra,92(sp)
204042da:	cc96                	sw	t0,88(sp)
204042dc:	ca9a                	sw	t1,84(sp)
204042de:	c89e                	sw	t2,80(sp)
204042e0:	c6a2                	sw	s0,76(sp)
204042e2:	c4aa                	sw	a0,72(sp)
204042e4:	c2ae                	sw	a1,68(sp)
204042e6:	c0b2                	sw	a2,64(sp)
204042e8:	de36                	sw	a3,60(sp)
204042ea:	dc3a                	sw	a4,56(sp)
204042ec:	da3e                	sw	a5,52(sp)
204042ee:	d842                	sw	a6,48(sp)
204042f0:	d646                	sw	a7,44(sp)
204042f2:	d472                	sw	t3,40(sp)
204042f4:	d276                	sw	t4,36(sp)
204042f6:	d07a                	sw	t5,32(sp)
204042f8:	ce7e                	sw	t6,28(sp)
204042fa:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
204042fc:	c24ff0ef          	jal	ra,20403720 <__metal_myhart_id>
20404300:	872a                	mv	a4,a0
20404302:	800007b7          	lui	a5,0x80000
20404306:	070a                	slli	a4,a4,0x2
20404308:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
2040430c:	97ba                	add	a5,a5,a4
2040430e:	439c                	lw	a5,0(a5)
20404310:	faf42623          	sw	a5,-84(s0)
20404314:	fac42783          	lw	a5,-84(s0)
20404318:	c78d                	beqz	a5,20404342 <metal_lc10_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040431a:	fac42503          	lw	a0,-84(s0)
2040431e:	b84ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404322:	faa42423          	sw	a0,-88(s0)
20404326:	fa842783          	lw	a5,-88(s0)
2040432a:	3087a783          	lw	a5,776(a5)
2040432e:	faf42223          	sw	a5,-92(s0)
20404332:	fa842783          	lw	a5,-88(s0)
20404336:	3007a783          	lw	a5,768(a5)
2040433a:	fa442583          	lw	a1,-92(s0)
2040433e:	4569                	li	a0,26
20404340:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:267
}
20404342:	0001                	nop
20404344:	40f6                	lw	ra,92(sp)
20404346:	42e6                	lw	t0,88(sp)
20404348:	4356                	lw	t1,84(sp)
2040434a:	43c6                	lw	t2,80(sp)
2040434c:	4436                	lw	s0,76(sp)
2040434e:	4526                	lw	a0,72(sp)
20404350:	4596                	lw	a1,68(sp)
20404352:	4606                	lw	a2,64(sp)
20404354:	56f2                	lw	a3,60(sp)
20404356:	5762                	lw	a4,56(sp)
20404358:	57d2                	lw	a5,52(sp)
2040435a:	5842                	lw	a6,48(sp)
2040435c:	58b2                	lw	a7,44(sp)
2040435e:	5e22                	lw	t3,40(sp)
20404360:	5e92                	lw	t4,36(sp)
20404362:	5f02                	lw	t5,32(sp)
20404364:	4ff2                	lw	t6,28(sp)
20404366:	6125                	addi	sp,sp,96
20404368:	30200073          	mret

2040436c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
2040436c:	711d                	addi	sp,sp,-96
2040436e:	ce86                	sw	ra,92(sp)
20404370:	cc96                	sw	t0,88(sp)
20404372:	ca9a                	sw	t1,84(sp)
20404374:	c89e                	sw	t2,80(sp)
20404376:	c6a2                	sw	s0,76(sp)
20404378:	c4aa                	sw	a0,72(sp)
2040437a:	c2ae                	sw	a1,68(sp)
2040437c:	c0b2                	sw	a2,64(sp)
2040437e:	de36                	sw	a3,60(sp)
20404380:	dc3a                	sw	a4,56(sp)
20404382:	da3e                	sw	a5,52(sp)
20404384:	d842                	sw	a6,48(sp)
20404386:	d646                	sw	a7,44(sp)
20404388:	d472                	sw	t3,40(sp)
2040438a:	d276                	sw	t4,36(sp)
2040438c:	d07a                	sw	t5,32(sp)
2040438e:	ce7e                	sw	t6,28(sp)
20404390:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404392:	b8eff0ef          	jal	ra,20403720 <__metal_myhart_id>
20404396:	872a                	mv	a4,a0
20404398:	800007b7          	lui	a5,0x80000
2040439c:	070a                	slli	a4,a4,0x2
2040439e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
204043a2:	97ba                	add	a5,a5,a4
204043a4:	439c                	lw	a5,0(a5)
204043a6:	faf42623          	sw	a5,-84(s0)
204043aa:	fac42783          	lw	a5,-84(s0)
204043ae:	c78d                	beqz	a5,204043d8 <metal_lc11_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
204043b0:	fac42503          	lw	a0,-84(s0)
204043b4:	aeeff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
204043b8:	faa42423          	sw	a0,-88(s0)
204043bc:	fa842783          	lw	a5,-88(s0)
204043c0:	3207a783          	lw	a5,800(a5)
204043c4:	faf42223          	sw	a5,-92(s0)
204043c8:	fa842783          	lw	a5,-88(s0)
204043cc:	3187a783          	lw	a5,792(a5)
204043d0:	fa442583          	lw	a1,-92(s0)
204043d4:	456d                	li	a0,27
204043d6:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:273
}
204043d8:	0001                	nop
204043da:	40f6                	lw	ra,92(sp)
204043dc:	42e6                	lw	t0,88(sp)
204043de:	4356                	lw	t1,84(sp)
204043e0:	43c6                	lw	t2,80(sp)
204043e2:	4436                	lw	s0,76(sp)
204043e4:	4526                	lw	a0,72(sp)
204043e6:	4596                	lw	a1,68(sp)
204043e8:	4606                	lw	a2,64(sp)
204043ea:	56f2                	lw	a3,60(sp)
204043ec:	5762                	lw	a4,56(sp)
204043ee:	57d2                	lw	a5,52(sp)
204043f0:	5842                	lw	a6,48(sp)
204043f2:	58b2                	lw	a7,44(sp)
204043f4:	5e22                	lw	t3,40(sp)
204043f6:	5e92                	lw	t4,36(sp)
204043f8:	5f02                	lw	t5,32(sp)
204043fa:	4ff2                	lw	t6,28(sp)
204043fc:	6125                	addi	sp,sp,96
204043fe:	30200073          	mret

20404402 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404402:	711d                	addi	sp,sp,-96
20404404:	ce86                	sw	ra,92(sp)
20404406:	cc96                	sw	t0,88(sp)
20404408:	ca9a                	sw	t1,84(sp)
2040440a:	c89e                	sw	t2,80(sp)
2040440c:	c6a2                	sw	s0,76(sp)
2040440e:	c4aa                	sw	a0,72(sp)
20404410:	c2ae                	sw	a1,68(sp)
20404412:	c0b2                	sw	a2,64(sp)
20404414:	de36                	sw	a3,60(sp)
20404416:	dc3a                	sw	a4,56(sp)
20404418:	da3e                	sw	a5,52(sp)
2040441a:	d842                	sw	a6,48(sp)
2040441c:	d646                	sw	a7,44(sp)
2040441e:	d472                	sw	t3,40(sp)
20404420:	d276                	sw	t4,36(sp)
20404422:	d07a                	sw	t5,32(sp)
20404424:	ce7e                	sw	t6,28(sp)
20404426:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20404428:	af8ff0ef          	jal	ra,20403720 <__metal_myhart_id>
2040442c:	872a                	mv	a4,a0
2040442e:	800007b7          	lui	a5,0x80000
20404432:	070a                	slli	a4,a4,0x2
20404434:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20404438:	97ba                	add	a5,a5,a4
2040443a:	439c                	lw	a5,0(a5)
2040443c:	faf42623          	sw	a5,-84(s0)
20404440:	fac42783          	lw	a5,-84(s0)
20404444:	c78d                	beqz	a5,2040446e <metal_lc12_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20404446:	fac42503          	lw	a0,-84(s0)
2040444a:	a58ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
2040444e:	faa42423          	sw	a0,-88(s0)
20404452:	fa842783          	lw	a5,-88(s0)
20404456:	3387a783          	lw	a5,824(a5)
2040445a:	faf42223          	sw	a5,-92(s0)
2040445e:	fa842783          	lw	a5,-88(s0)
20404462:	3307a783          	lw	a5,816(a5)
20404466:	fa442583          	lw	a1,-92(s0)
2040446a:	4571                	li	a0,28
2040446c:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:279
}
2040446e:	0001                	nop
20404470:	40f6                	lw	ra,92(sp)
20404472:	42e6                	lw	t0,88(sp)
20404474:	4356                	lw	t1,84(sp)
20404476:	43c6                	lw	t2,80(sp)
20404478:	4436                	lw	s0,76(sp)
2040447a:	4526                	lw	a0,72(sp)
2040447c:	4596                	lw	a1,68(sp)
2040447e:	4606                	lw	a2,64(sp)
20404480:	56f2                	lw	a3,60(sp)
20404482:	5762                	lw	a4,56(sp)
20404484:	57d2                	lw	a5,52(sp)
20404486:	5842                	lw	a6,48(sp)
20404488:	58b2                	lw	a7,44(sp)
2040448a:	5e22                	lw	t3,40(sp)
2040448c:	5e92                	lw	t4,36(sp)
2040448e:	5f02                	lw	t5,32(sp)
20404490:	4ff2                	lw	t6,28(sp)
20404492:	6125                	addi	sp,sp,96
20404494:	30200073          	mret

20404498 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404498:	711d                	addi	sp,sp,-96
2040449a:	ce86                	sw	ra,92(sp)
2040449c:	cc96                	sw	t0,88(sp)
2040449e:	ca9a                	sw	t1,84(sp)
204044a0:	c89e                	sw	t2,80(sp)
204044a2:	c6a2                	sw	s0,76(sp)
204044a4:	c4aa                	sw	a0,72(sp)
204044a6:	c2ae                	sw	a1,68(sp)
204044a8:	c0b2                	sw	a2,64(sp)
204044aa:	de36                	sw	a3,60(sp)
204044ac:	dc3a                	sw	a4,56(sp)
204044ae:	da3e                	sw	a5,52(sp)
204044b0:	d842                	sw	a6,48(sp)
204044b2:	d646                	sw	a7,44(sp)
204044b4:	d472                	sw	t3,40(sp)
204044b6:	d276                	sw	t4,36(sp)
204044b8:	d07a                	sw	t5,32(sp)
204044ba:	ce7e                	sw	t6,28(sp)
204044bc:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
204044be:	a62ff0ef          	jal	ra,20403720 <__metal_myhart_id>
204044c2:	872a                	mv	a4,a0
204044c4:	800007b7          	lui	a5,0x80000
204044c8:	070a                	slli	a4,a4,0x2
204044ca:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
204044ce:	97ba                	add	a5,a5,a4
204044d0:	439c                	lw	a5,0(a5)
204044d2:	faf42623          	sw	a5,-84(s0)
204044d6:	fac42783          	lw	a5,-84(s0)
204044da:	c78d                	beqz	a5,20404504 <metal_lc13_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
204044dc:	fac42503          	lw	a0,-84(s0)
204044e0:	9c2ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
204044e4:	faa42423          	sw	a0,-88(s0)
204044e8:	fa842783          	lw	a5,-88(s0)
204044ec:	3507a783          	lw	a5,848(a5)
204044f0:	faf42223          	sw	a5,-92(s0)
204044f4:	fa842783          	lw	a5,-88(s0)
204044f8:	3487a783          	lw	a5,840(a5)
204044fc:	fa442583          	lw	a1,-92(s0)
20404500:	4575                	li	a0,29
20404502:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404504:	0001                	nop
20404506:	40f6                	lw	ra,92(sp)
20404508:	42e6                	lw	t0,88(sp)
2040450a:	4356                	lw	t1,84(sp)
2040450c:	43c6                	lw	t2,80(sp)
2040450e:	4436                	lw	s0,76(sp)
20404510:	4526                	lw	a0,72(sp)
20404512:	4596                	lw	a1,68(sp)
20404514:	4606                	lw	a2,64(sp)
20404516:	56f2                	lw	a3,60(sp)
20404518:	5762                	lw	a4,56(sp)
2040451a:	57d2                	lw	a5,52(sp)
2040451c:	5842                	lw	a6,48(sp)
2040451e:	58b2                	lw	a7,44(sp)
20404520:	5e22                	lw	t3,40(sp)
20404522:	5e92                	lw	t4,36(sp)
20404524:	5f02                	lw	t5,32(sp)
20404526:	4ff2                	lw	t6,28(sp)
20404528:	6125                	addi	sp,sp,96
2040452a:	30200073          	mret

2040452e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
2040452e:	711d                	addi	sp,sp,-96
20404530:	ce86                	sw	ra,92(sp)
20404532:	cc96                	sw	t0,88(sp)
20404534:	ca9a                	sw	t1,84(sp)
20404536:	c89e                	sw	t2,80(sp)
20404538:	c6a2                	sw	s0,76(sp)
2040453a:	c4aa                	sw	a0,72(sp)
2040453c:	c2ae                	sw	a1,68(sp)
2040453e:	c0b2                	sw	a2,64(sp)
20404540:	de36                	sw	a3,60(sp)
20404542:	dc3a                	sw	a4,56(sp)
20404544:	da3e                	sw	a5,52(sp)
20404546:	d842                	sw	a6,48(sp)
20404548:	d646                	sw	a7,44(sp)
2040454a:	d472                	sw	t3,40(sp)
2040454c:	d276                	sw	t4,36(sp)
2040454e:	d07a                	sw	t5,32(sp)
20404550:	ce7e                	sw	t6,28(sp)
20404552:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20404554:	9ccff0ef          	jal	ra,20403720 <__metal_myhart_id>
20404558:	872a                	mv	a4,a0
2040455a:	800007b7          	lui	a5,0x80000
2040455e:	070a                	slli	a4,a4,0x2
20404560:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
20404564:	97ba                	add	a5,a5,a4
20404566:	439c                	lw	a5,0(a5)
20404568:	faf42623          	sw	a5,-84(s0)
2040456c:	fac42783          	lw	a5,-84(s0)
20404570:	c78d                	beqz	a5,2040459a <metal_lc14_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20404572:	fac42503          	lw	a0,-84(s0)
20404576:	92cff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
2040457a:	faa42423          	sw	a0,-88(s0)
2040457e:	fa842783          	lw	a5,-88(s0)
20404582:	3687a783          	lw	a5,872(a5)
20404586:	faf42223          	sw	a5,-92(s0)
2040458a:	fa842783          	lw	a5,-88(s0)
2040458e:	3607a783          	lw	a5,864(a5)
20404592:	fa442583          	lw	a1,-92(s0)
20404596:	4579                	li	a0,30
20404598:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:291
}
2040459a:	0001                	nop
2040459c:	40f6                	lw	ra,92(sp)
2040459e:	42e6                	lw	t0,88(sp)
204045a0:	4356                	lw	t1,84(sp)
204045a2:	43c6                	lw	t2,80(sp)
204045a4:	4436                	lw	s0,76(sp)
204045a6:	4526                	lw	a0,72(sp)
204045a8:	4596                	lw	a1,68(sp)
204045aa:	4606                	lw	a2,64(sp)
204045ac:	56f2                	lw	a3,60(sp)
204045ae:	5762                	lw	a4,56(sp)
204045b0:	57d2                	lw	a5,52(sp)
204045b2:	5842                	lw	a6,48(sp)
204045b4:	58b2                	lw	a7,44(sp)
204045b6:	5e22                	lw	t3,40(sp)
204045b8:	5e92                	lw	t4,36(sp)
204045ba:	5f02                	lw	t5,32(sp)
204045bc:	4ff2                	lw	t6,28(sp)
204045be:	6125                	addi	sp,sp,96
204045c0:	30200073          	mret

204045c4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
204045c4:	711d                	addi	sp,sp,-96
204045c6:	ce86                	sw	ra,92(sp)
204045c8:	cc96                	sw	t0,88(sp)
204045ca:	ca9a                	sw	t1,84(sp)
204045cc:	c89e                	sw	t2,80(sp)
204045ce:	c6a2                	sw	s0,76(sp)
204045d0:	c4aa                	sw	a0,72(sp)
204045d2:	c2ae                	sw	a1,68(sp)
204045d4:	c0b2                	sw	a2,64(sp)
204045d6:	de36                	sw	a3,60(sp)
204045d8:	dc3a                	sw	a4,56(sp)
204045da:	da3e                	sw	a5,52(sp)
204045dc:	d842                	sw	a6,48(sp)
204045de:	d646                	sw	a7,44(sp)
204045e0:	d472                	sw	t3,40(sp)
204045e2:	d276                	sw	t4,36(sp)
204045e4:	d07a                	sw	t5,32(sp)
204045e6:	ce7e                	sw	t6,28(sp)
204045e8:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
204045ea:	936ff0ef          	jal	ra,20403720 <__metal_myhart_id>
204045ee:	872a                	mv	a4,a0
204045f0:	800007b7          	lui	a5,0x80000
204045f4:	070a                	slli	a4,a4,0x2
204045f6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
204045fa:	97ba                	add	a5,a5,a4
204045fc:	439c                	lw	a5,0(a5)
204045fe:	faf42623          	sw	a5,-84(s0)
20404602:	fac42783          	lw	a5,-84(s0)
20404606:	c78d                	beqz	a5,20404630 <metal_lc15_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404608:	fac42503          	lw	a0,-84(s0)
2040460c:	896ff0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404610:	faa42423          	sw	a0,-88(s0)
20404614:	fa842783          	lw	a5,-88(s0)
20404618:	3807a783          	lw	a5,896(a5)
2040461c:	faf42223          	sw	a5,-92(s0)
20404620:	fa842783          	lw	a5,-88(s0)
20404624:	3787a783          	lw	a5,888(a5)
20404628:	fa442583          	lw	a1,-92(s0)
2040462c:	457d                	li	a0,31
2040462e:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:297
}
20404630:	0001                	nop
20404632:	40f6                	lw	ra,92(sp)
20404634:	42e6                	lw	t0,88(sp)
20404636:	4356                	lw	t1,84(sp)
20404638:	43c6                	lw	t2,80(sp)
2040463a:	4436                	lw	s0,76(sp)
2040463c:	4526                	lw	a0,72(sp)
2040463e:	4596                	lw	a1,68(sp)
20404640:	4606                	lw	a2,64(sp)
20404642:	56f2                	lw	a3,60(sp)
20404644:	5762                	lw	a4,56(sp)
20404646:	57d2                	lw	a5,52(sp)
20404648:	5842                	lw	a6,48(sp)
2040464a:	58b2                	lw	a7,44(sp)
2040464c:	5e22                	lw	t3,40(sp)
2040464e:	5e92                	lw	t4,36(sp)
20404650:	5f02                	lw	t5,32(sp)
20404652:	4ff2                	lw	t6,28(sp)
20404654:	6125                	addi	sp,sp,96
20404656:	30200073          	mret

2040465a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
2040465a:	1101                	addi	sp,sp,-32
2040465c:	ce22                	sw	s0,28(sp)
2040465e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404660:	305027f3          	csrr	a5,mtvec
20404664:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20404668:	fec42783          	lw	a5,-20(s0)
2040466c:	03f7f793          	andi	a5,a5,63
20404670:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20404674:	fec42703          	lw	a4,-20(s0)
20404678:	478d                	li	a5,3
2040467a:	02f70363          	beq	a4,a5,204046a0 <__metal_controller_interrupt_vector_mode+0x46>
2040467e:	fec42703          	lw	a4,-20(s0)
20404682:	478d                	li	a5,3
20404684:	02e7e263          	bltu	a5,a4,204046a8 <__metal_controller_interrupt_vector_mode+0x4e>
20404688:	fec42703          	lw	a4,-20(s0)
2040468c:	4785                	li	a5,1
2040468e:	00f70b63          	beq	a4,a5,204046a4 <__metal_controller_interrupt_vector_mode+0x4a>
20404692:	fec42703          	lw	a4,-20(s0)
20404696:	4789                	li	a5,2
20404698:	00f71863          	bne	a4,a5,204046a8 <__metal_controller_interrupt_vector_mode+0x4e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040469c:	478d                	li	a5,3
2040469e:	a031                	j	204046aa <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
204046a0:	4791                	li	a5,4
204046a2:	a021                	j	204046aa <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
204046a4:	4785                	li	a5,1
204046a6:	a011                	j	204046aa <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
204046a8:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:314
}
204046aa:	853e                	mv	a0,a5
204046ac:	4472                	lw	s0,28(sp)
204046ae:	6105                	addi	sp,sp,32
204046b0:	8082                	ret

204046b2 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
204046b2:	7179                	addi	sp,sp,-48
204046b4:	d622                	sw	s0,44(sp)
204046b6:	1800                	addi	s0,sp,48
204046b8:	fca42e23          	sw	a0,-36(s0)
204046bc:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204046c0:	305027f3          	csrr	a5,mtvec
204046c4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
204046c8:	fec42783          	lw	a5,-20(s0)
204046cc:	fc07f793          	andi	a5,a5,-64
204046d0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
204046d4:	fd842783          	lw	a5,-40(s0)
204046d8:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
204046dc:	fdc42703          	lw	a4,-36(s0)
204046e0:	4791                	li	a5,4
204046e2:	04f70563          	beq	a4,a5,2040472c <__metal_controller_interrupt_vector+0x7a>
204046e6:	fdc42703          	lw	a4,-36(s0)
204046ea:	4791                	li	a5,4
204046ec:	06e7e863          	bltu	a5,a4,2040475c <__metal_controller_interrupt_vector+0xaa>
204046f0:	fdc42703          	lw	a4,-36(s0)
204046f4:	478d                	li	a5,3
204046f6:	06e7e363          	bltu	a5,a4,2040475c <__metal_controller_interrupt_vector+0xaa>
204046fa:	fdc42703          	lw	a4,-36(s0)
204046fe:	4789                	li	a5,2
20404700:	00f77b63          	bgeu	a4,a5,20404716 <__metal_controller_interrupt_vector+0x64>
20404704:	fdc42783          	lw	a5,-36(s0)
20404708:	c7a1                	beqz	a5,20404750 <__metal_controller_interrupt_vector+0x9e>
2040470a:	fdc42703          	lw	a4,-36(s0)
2040470e:	4785                	li	a5,1
20404710:	02f70963          	beq	a4,a5,20404742 <__metal_controller_interrupt_vector+0x90>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404714:	a0a1                	j	2040475c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404716:	fe842783          	lw	a5,-24(s0)
2040471a:	30779073          	csrw	mtvt,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040471e:	fec42783          	lw	a5,-20(s0)
20404722:	0027e793          	ori	a5,a5,2
20404726:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
2040472a:	a80d                	j	2040475c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2040472c:	fe842783          	lw	a5,-24(s0)
20404730:	30779073          	csrw	mtvt,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20404734:	fec42783          	lw	a5,-20(s0)
20404738:	0037e793          	ori	a5,a5,3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
2040473c:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20404740:	a831                	j	2040475c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20404742:	fe842783          	lw	a5,-24(s0)
20404746:	0017e793          	ori	a5,a5,1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
2040474a:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
2040474e:	a039                	j	2040475c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20404750:	fe842783          	lw	a5,-24(s0)
20404754:	9bf1                	andi	a5,a5,-4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20404756:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
2040475a:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:344
}
2040475c:	0001                	nop
2040475e:	5432                	lw	s0,44(sp)
20404760:	6145                	addi	sp,sp,48
20404762:	8082                	ret

20404764 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20404764:	1101                	addi	sp,sp,-32
20404766:	ce22                	sw	s0,28(sp)
20404768:	1000                	addi	s0,sp,32
2040476a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2040476e:	fec42703          	lw	a4,-20(s0)
20404772:	47fd                	li	a5,31
20404774:	02e7c663          	blt	a5,a4,204047a0 <__metal_valid_interrupt_id+0x3c>
20404778:	fec42703          	lw	a4,-20(s0)
2040477c:	478d                	li	a5,3
2040477e:	02f74963          	blt	a4,a5,204047b0 <__metal_valid_interrupt_id+0x4c>
20404782:	fec42783          	lw	a5,-20(s0)
20404786:	4705                	li	a4,1
20404788:	00f71733          	sll	a4,a4,a5
2040478c:	77c5                	lui	a5,0xffff1
2040478e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffee778>
20404792:	8ff9                	and	a5,a5,a4
20404794:	00f037b3          	snez	a5,a5
20404798:	0ff7f793          	zext.b	a5,a5
2040479c:	eb81                	bnez	a5,204047ac <__metal_valid_interrupt_id+0x48>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040479e:	a809                	j	204047b0 <__metal_valid_interrupt_id+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204047a0:	fec42703          	lw	a4,-20(s0)
204047a4:	08000793          	li	a5,128
204047a8:	00f71463          	bne	a4,a5,204047b0 <__metal_valid_interrupt_id+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
204047ac:	4785                	li	a5,1
204047ae:	a019                	j	204047b4 <__metal_valid_interrupt_id+0x50>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
204047b0:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
204047b2:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:374
}
204047b4:	853e                	mv	a0,a5
204047b6:	4472                	lw	s0,28(sp)
204047b8:	6105                	addi	sp,sp,32
204047ba:	8082                	ret

204047bc <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
204047bc:	7179                	addi	sp,sp,-48
204047be:	d606                	sw	ra,44(sp)
204047c0:	d422                	sw	s0,40(sp)
204047c2:	1800                	addi	s0,sp,48
204047c4:	fca42e23          	sw	a0,-36(s0)
204047c8:	fcb42c23          	sw	a1,-40(s0)
204047cc:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
204047d0:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
204047d4:	fdc42783          	lw	a5,-36(s0)
204047d8:	e399                	bnez	a5,204047de <__metal_local_interrupt_enable+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
204047da:	57fd                	li	a5,-1
204047dc:	a849                	j	2040486e <__metal_local_interrupt_enable+0xb2>
204047de:	fd842703          	lw	a4,-40(s0)
204047e2:	47fd                	li	a5,31
204047e4:	08e7e063          	bltu	a5,a4,20404864 <__metal_local_interrupt_enable+0xa8>
204047e8:	fd842783          	lw	a5,-40(s0)
204047ec:	00279713          	slli	a4,a5,0x2
204047f0:	204007b7          	lui	a5,0x20400
204047f4:	51c78793          	addi	a5,a5,1308 # 2040051c <__metal_driver_vtable_riscv_clint0+0x64>
204047f8:	97ba                	add	a5,a5,a4
204047fa:	439c                	lw	a5,0(a5)
204047fc:	8782                	jr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
204047fe:	fd442783          	lw	a5,-44(s0)
20404802:	c781                	beqz	a5,2040480a <__metal_local_interrupt_enable+0x4e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404804:	f37fe0ef          	jal	ra,2040373a <__metal_interrupt_global_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404808:	a08d                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
2040480a:	f49fe0ef          	jal	ra,20403752 <__metal_interrupt_global_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2040480e:	a8b1                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404810:	fd442783          	lw	a5,-44(s0)
20404814:	c781                	beqz	a5,2040481c <__metal_local_interrupt_enable+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404816:	f55fe0ef          	jal	ra,2040376a <__metal_interrupt_software_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
2040481a:	a881                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2040481c:	f67fe0ef          	jal	ra,20403782 <__metal_interrupt_software_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20404820:	a0a9                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20404822:	fd442783          	lw	a5,-44(s0)
20404826:	c781                	beqz	a5,2040482e <__metal_local_interrupt_enable+0x72>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20404828:	f73fe0ef          	jal	ra,2040379a <__metal_interrupt_timer_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
2040482c:	a83d                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
2040482e:	f87fe0ef          	jal	ra,204037b4 <__metal_interrupt_timer_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20404832:	a825                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20404834:	fd442783          	lw	a5,-44(s0)
20404838:	c781                	beqz	a5,20404840 <__metal_local_interrupt_enable+0x84>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
2040483a:	f95fe0ef          	jal	ra,204037ce <__metal_interrupt_external_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2040483e:	a035                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20404840:	fabfe0ef          	jal	ra,204037ea <__metal_interrupt_external_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20404844:	a01d                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20404846:	fd442783          	lw	a5,-44(s0)
2040484a:	c799                	beqz	a5,20404858 <__metal_local_interrupt_enable+0x9c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
2040484c:	fd842783          	lw	a5,-40(s0)
20404850:	853e                	mv	a0,a5
20404852:	fb5fe0ef          	jal	ra,20403806 <__metal_interrupt_local_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20404856:	a811                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20404858:	fd842783          	lw	a5,-40(s0)
2040485c:	853e                	mv	a0,a5
2040485e:	fd5fe0ef          	jal	ra,20403832 <__metal_interrupt_local_disable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20404862:	a021                	j	2040486a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20404864:	57fd                	li	a5,-1
20404866:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
2040486a:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:439
}
2040486e:	853e                	mv	a0,a5
20404870:	50b2                	lw	ra,44(sp)
20404872:	5422                	lw	s0,40(sp)
20404874:	6145                	addi	sp,sp,48
20404876:	8082                	ret

20404878 <__metal_exception_register>:
__metal_exception_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20404878:	7179                	addi	sp,sp,-48
2040487a:	d622                	sw	s0,44(sp)
2040487c:	1800                	addi	s0,sp,48
2040487e:	fca42e23          	sw	a0,-36(s0)
20404882:	fcb42c23          	sw	a1,-40(s0)
20404886:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2040488a:	fdc42783          	lw	a5,-36(s0)
2040488e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404892:	fd842703          	lw	a4,-40(s0)
20404896:	47ad                	li	a5,11
20404898:	02e7c263          	blt	a5,a4,204048bc <__metal_exception_register+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2040489c:	fd442783          	lw	a5,-44(s0)
204048a0:	cf91                	beqz	a5,204048bc <__metal_exception_register+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
204048a2:	fec42703          	lw	a4,-20(s0)
204048a6:	fd842783          	lw	a5,-40(s0)
204048aa:	0e878793          	addi	a5,a5,232
204048ae:	078a                	slli	a5,a5,0x2
204048b0:	97ba                	add	a5,a5,a4
204048b2:	fd442703          	lw	a4,-44(s0)
204048b6:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
204048b8:	4781                	li	a5,0
204048ba:	a011                	j	204048be <__metal_exception_register+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
204048bc:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:450
}
204048be:	853e                	mv	a0,a5
204048c0:	5432                	lw	s0,44(sp)
204048c2:	6145                	addi	sp,sp,48
204048c4:	8082                	ret

204048c6 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
204048c6:	7179                	addi	sp,sp,-48
204048c8:	d606                	sw	ra,44(sp)
204048ca:	d422                	sw	s0,40(sp)
204048cc:	1800                	addi	s0,sp,48
204048ce:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204048d2:	fdc42783          	lw	a5,-36(s0)
204048d6:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
204048da:	fe442783          	lw	a5,-28(s0)
204048de:	43dc                	lw	a5,4(a5)
204048e0:	e3e1                	bnez	a5,204049a0 <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
204048e2:	fe042623          	sw	zero,-20(s0)
204048e6:	a0b9                	j	20404934 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
204048e8:	fe442683          	lw	a3,-28(s0)
204048ec:	fec42703          	lw	a4,-20(s0)
204048f0:	87ba                	mv	a5,a4
204048f2:	0786                	slli	a5,a5,0x1
204048f4:	97ba                	add	a5,a5,a4
204048f6:	078e                	slli	a5,a5,0x3
204048f8:	97b6                	add	a5,a5,a3
204048fa:	0807a823          	sw	zero,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
204048fe:	fe442683          	lw	a3,-28(s0)
20404902:	fec42703          	lw	a4,-20(s0)
20404906:	87ba                	mv	a5,a4
20404908:	0786                	slli	a5,a5,0x1
2040490a:	97ba                	add	a5,a5,a4
2040490c:	078e                	slli	a5,a5,0x3
2040490e:	97b6                	add	a5,a5,a3
20404910:	0807aa23          	sw	zero,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404914:	fe442683          	lw	a3,-28(s0)
20404918:	fec42703          	lw	a4,-20(s0)
2040491c:	87ba                	mv	a5,a4
2040491e:	0786                	slli	a5,a5,0x1
20404920:	97ba                	add	a5,a5,a4
20404922:	078e                	slli	a5,a5,0x3
20404924:	97b6                	add	a5,a5,a3
20404926:	0807ac23          	sw	zero,152(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
2040492a:	fec42783          	lw	a5,-20(s0)
2040492e:	0785                	addi	a5,a5,1
20404930:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20404934:	fec42703          	lw	a4,-20(s0)
20404938:	47fd                	li	a5,31
2040493a:	fae7d7e3          	bge	a5,a4,204048e8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
2040493e:	fe042423          	sw	zero,-24(s0)
20404942:	a01d                	j	20404968 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20404944:	fe442703          	lw	a4,-28(s0)
20404948:	fe842783          	lw	a5,-24(s0)
2040494c:	0e878793          	addi	a5,a5,232
20404950:	078a                	slli	a5,a5,0x2
20404952:	97ba                	add	a5,a5,a4
20404954:	20404737          	lui	a4,0x20404
20404958:	85e70713          	addi	a4,a4,-1954 # 2040385e <__metal_default_exception_handler>
2040495c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
2040495e:	fe842783          	lw	a5,-24(s0)
20404962:	0785                	addi	a5,a5,1
20404964:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20404968:	fe842703          	lw	a4,-24(s0)
2040496c:	47ad                	li	a5,11
2040496e:	fce7dbe3          	bge	a5,a4,20404944 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404972:	305027f3          	csrr	a5,mtvec
20404976:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
2040497a:	204007b7          	lui	a5,0x20400
2040497e:	13878793          	addi	a5,a5,312 # 20400138 <early_trap_vector>
20404982:	fe042703          	lw	a4,-32(s0)
20404986:	00f71963          	bne	a4,a5,20404998 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
2040498a:	204047b7          	lui	a5,0x20404
2040498e:	b0078593          	addi	a1,a5,-1280 # 20403b00 <__metal_exception_handler>
20404992:	4501                	li	a0,0
20404994:	d1fff0ef          	jal	ra,204046b2 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404998:	fe442783          	lw	a5,-28(s0)
2040499c:	4705                	li	a4,1
2040499e:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
204049a0:	0001                	nop
204049a2:	50b2                	lw	ra,44(sp)
204049a4:	5422                	lw	s0,40(sp)
204049a6:	6145                	addi	sp,sp,48
204049a8:	8082                	ret

204049aa <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
204049aa:	7179                	addi	sp,sp,-48
204049ac:	d606                	sw	ra,44(sp)
204049ae:	d422                	sw	s0,40(sp)
204049b0:	1800                	addi	s0,sp,48
204049b2:	fca42e23          	sw	a0,-36(s0)
204049b6:	fcb42c23          	sw	a1,-40(s0)
204049ba:	fcc42a23          	sw	a2,-44(s0)
204049be:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
204049c2:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204049c6:	fdc42783          	lw	a5,-36(s0)
204049ca:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
204049ce:	fd842503          	lw	a0,-40(s0)
204049d2:	3b49                	jal	20404764 <__metal_valid_interrupt_id>
204049d4:	87aa                	mv	a5,a0
204049d6:	e399                	bnez	a5,204049dc <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
204049d8:	57d5                	li	a5,-11
204049da:	a265                	j	20404b82 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204049dc:	fd842703          	lw	a4,-40(s0)
204049e0:	08000793          	li	a5,128
204049e4:	00f71863          	bne	a4,a5,204049f4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
204049e8:	c73ff0ef          	jal	ra,2040465a <__metal_controller_interrupt_vector_mode>
204049ec:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204049ee:	c399                	beqz	a5,204049f4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
204049f0:	57cd                	li	a5,-13
204049f2:	aa41                	j	20404b82 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
204049f4:	fd442783          	lw	a5,-44(s0)
204049f8:	cfb9                	beqz	a5,20404a56 <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
204049fa:	fd842703          	lw	a4,-40(s0)
204049fe:	08000793          	li	a5,128
20404a02:	00f71f63          	bne	a4,a5,20404a20 <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404a06:	fe842783          	lw	a5,-24(s0)
20404a0a:	fd442703          	lw	a4,-44(s0)
20404a0e:	38e7a823          	sw	a4,912(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20404a12:	fe842783          	lw	a5,-24(s0)
20404a16:	fd042703          	lw	a4,-48(s0)
20404a1a:	38e7ac23          	sw	a4,920(a5)
20404a1e:	a285                	j	20404b7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20404a20:	fe842683          	lw	a3,-24(s0)
20404a24:	fd842703          	lw	a4,-40(s0)
20404a28:	87ba                	mv	a5,a4
20404a2a:	0786                	slli	a5,a5,0x1
20404a2c:	97ba                	add	a5,a5,a4
20404a2e:	078e                	slli	a5,a5,0x3
20404a30:	97b6                	add	a5,a5,a3
20404a32:	fd442703          	lw	a4,-44(s0)
20404a36:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404a3a:	fe842683          	lw	a3,-24(s0)
20404a3e:	fd842703          	lw	a4,-40(s0)
20404a42:	87ba                	mv	a5,a4
20404a44:	0786                	slli	a5,a5,0x1
20404a46:	97ba                	add	a5,a5,a4
20404a48:	078e                	slli	a5,a5,0x3
20404a4a:	97b6                	add	a5,a5,a3
20404a4c:	fd042703          	lw	a4,-48(s0)
20404a50:	08e7ac23          	sw	a4,152(a5)
20404a54:	a22d                	j	20404b7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20404a56:	fd842703          	lw	a4,-40(s0)
20404a5a:	08000793          	li	a5,128
20404a5e:	0cf70163          	beq	a4,a5,20404b20 <__metal_driver_riscv_cpu_controller_interrupt_register+0x176>
20404a62:	fd842703          	lw	a4,-40(s0)
20404a66:	08000793          	li	a5,128
20404a6a:	10e7c763          	blt	a5,a4,20404b78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404a6e:	fd842703          	lw	a4,-40(s0)
20404a72:	47fd                	li	a5,31
20404a74:	10e7c263          	blt	a5,a4,20404b78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404a78:	fd842703          	lw	a4,-40(s0)
20404a7c:	47c1                	li	a5,16
20404a7e:	0cf75063          	bge	a4,a5,20404b3e <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404a82:	fd842703          	lw	a4,-40(s0)
20404a86:	47ad                	li	a5,11
20404a88:	0af70b63          	beq	a4,a5,20404b3e <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404a8c:	fd842703          	lw	a4,-40(s0)
20404a90:	47ad                	li	a5,11
20404a92:	0ee7c363          	blt	a5,a4,20404b78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404a96:	fd842703          	lw	a4,-40(s0)
20404a9a:	478d                	li	a5,3
20404a9c:	00f70863          	beq	a4,a5,20404aac <__metal_driver_riscv_cpu_controller_interrupt_register+0x102>
20404aa0:	fd842703          	lw	a4,-40(s0)
20404aa4:	479d                	li	a5,7
20404aa6:	04f70063          	beq	a4,a5,20404ae6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13c>
20404aaa:	a0f9                	j	20404b78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20404aac:	fe842683          	lw	a3,-24(s0)
20404ab0:	fd842703          	lw	a4,-40(s0)
20404ab4:	87ba                	mv	a5,a4
20404ab6:	0786                	slli	a5,a5,0x1
20404ab8:	97ba                	add	a5,a5,a4
20404aba:	078e                	slli	a5,a5,0x3
20404abc:	97b6                	add	a5,a5,a3
20404abe:	20404737          	lui	a4,0x20404
20404ac2:	94e70713          	addi	a4,a4,-1714 # 2040394e <__metal_default_sw_handler>
20404ac6:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20404aca:	fe842683          	lw	a3,-24(s0)
20404ace:	fd842703          	lw	a4,-40(s0)
20404ad2:	87ba                	mv	a5,a4
20404ad4:	0786                	slli	a5,a5,0x1
20404ad6:	97ba                	add	a5,a5,a4
20404ad8:	078e                	slli	a5,a5,0x3
20404ada:	97b6                	add	a5,a5,a3
20404adc:	fd042703          	lw	a4,-48(s0)
20404ae0:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20404ae4:	a869                	j	20404b7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20404ae6:	fe842683          	lw	a3,-24(s0)
20404aea:	fd842703          	lw	a4,-40(s0)
20404aee:	87ba                	mv	a5,a4
20404af0:	0786                	slli	a5,a5,0x1
20404af2:	97ba                	add	a5,a5,a4
20404af4:	078e                	slli	a5,a5,0x3
20404af6:	97b6                	add	a5,a5,a3
20404af8:	20404737          	lui	a4,0x20404
20404afc:	a5e70713          	addi	a4,a4,-1442 # 20403a5e <__metal_default_timer_handler>
20404b00:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20404b04:	fe842683          	lw	a3,-24(s0)
20404b08:	fd842703          	lw	a4,-40(s0)
20404b0c:	87ba                	mv	a5,a4
20404b0e:	0786                	slli	a5,a5,0x1
20404b10:	97ba                	add	a5,a5,a4
20404b12:	078e                	slli	a5,a5,0x3
20404b14:	97b6                	add	a5,a5,a3
20404b16:	fd042703          	lw	a4,-48(s0)
20404b1a:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20404b1e:	a085                	j	20404b7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20404b20:	fe842783          	lw	a5,-24(s0)
20404b24:	20404737          	lui	a4,0x20404
20404b28:	a4870713          	addi	a4,a4,-1464 # 20403a48 <__metal_default_beu_handler>
20404b2c:	38e7a823          	sw	a4,912(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20404b30:	fe842783          	lw	a5,-24(s0)
20404b34:	fd042703          	lw	a4,-48(s0)
20404b38:	38e7ac23          	sw	a4,920(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20404b3c:	a089                	j	20404b7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20404b3e:	fe842683          	lw	a3,-24(s0)
20404b42:	fd842703          	lw	a4,-40(s0)
20404b46:	87ba                	mv	a5,a4
20404b48:	0786                	slli	a5,a5,0x1
20404b4a:	97ba                	add	a5,a5,a4
20404b4c:	078e                	slli	a5,a5,0x3
20404b4e:	97b6                	add	a5,a5,a3
20404b50:	20404737          	lui	a4,0x20404
20404b54:	87670713          	addi	a4,a4,-1930 # 20403876 <__metal_default_interrupt_handler>
20404b58:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20404b5c:	fe842683          	lw	a3,-24(s0)
20404b60:	fd842703          	lw	a4,-40(s0)
20404b64:	87ba                	mv	a5,a4
20404b66:	0786                	slli	a5,a5,0x1
20404b68:	97ba                	add	a5,a5,a4
20404b6a:	078e                	slli	a5,a5,0x3
20404b6c:	97b6                	add	a5,a5,a3
20404b6e:	fd042703          	lw	a4,-48(s0)
20404b72:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20404b76:	a021                	j	20404b7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20404b78:	57d1                	li	a5,-12
20404b7a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20404b7e:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404b82:	853e                	mv	a0,a5
20404b84:	50b2                	lw	ra,44(sp)
20404b86:	5422                	lw	s0,40(sp)
20404b88:	6145                	addi	sp,sp,48
20404b8a:	8082                	ret

20404b8c <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404b8c:	1101                	addi	sp,sp,-32
20404b8e:	ce06                	sw	ra,28(sp)
20404b90:	cc22                	sw	s0,24(sp)
20404b92:	1000                	addi	s0,sp,32
20404b94:	fea42623          	sw	a0,-20(s0)
20404b98:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404b9c:	fe842783          	lw	a5,-24(s0)
20404ba0:	4605                	li	a2,1
20404ba2:	85be                	mv	a1,a5
20404ba4:	fec42503          	lw	a0,-20(s0)
20404ba8:	c15ff0ef          	jal	ra,204047bc <__metal_local_interrupt_enable>
20404bac:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:554
}
20404bae:	853e                	mv	a0,a5
20404bb0:	40f2                	lw	ra,28(sp)
20404bb2:	4462                	lw	s0,24(sp)
20404bb4:	6105                	addi	sp,sp,32
20404bb6:	8082                	ret

20404bb8 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20404bb8:	1101                	addi	sp,sp,-32
20404bba:	ce06                	sw	ra,28(sp)
20404bbc:	cc22                	sw	s0,24(sp)
20404bbe:	1000                	addi	s0,sp,32
20404bc0:	fea42623          	sw	a0,-20(s0)
20404bc4:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20404bc8:	fe842783          	lw	a5,-24(s0)
20404bcc:	4601                	li	a2,0
20404bce:	85be                	mv	a1,a5
20404bd0:	fec42503          	lw	a0,-20(s0)
20404bd4:	be9ff0ef          	jal	ra,204047bc <__metal_local_interrupt_enable>
20404bd8:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:559
}
20404bda:	853e                	mv	a0,a5
20404bdc:	40f2                	lw	ra,28(sp)
20404bde:	4462                	lw	s0,24(sp)
20404be0:	6105                	addi	sp,sp,32
20404be2:	8082                	ret

20404be4 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20404be4:	1101                	addi	sp,sp,-32
20404be6:	ce06                	sw	ra,28(sp)
20404be8:	cc22                	sw	s0,24(sp)
20404bea:	1000                	addi	s0,sp,32
20404bec:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20404bf0:	a6bff0ef          	jal	ra,2040465a <__metal_controller_interrupt_vector_mode>
20404bf4:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:593
}
20404bf6:	853e                	mv	a0,a5
20404bf8:	40f2                	lw	ra,28(sp)
20404bfa:	4462                	lw	s0,24(sp)
20404bfc:	6105                	addi	sp,sp,32
20404bfe:	8082                	ret

20404c00 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20404c00:	1101                	addi	sp,sp,-32
20404c02:	ce06                	sw	ra,28(sp)
20404c04:	cc22                	sw	s0,24(sp)
20404c06:	1000                	addi	s0,sp,32
20404c08:	fea42623          	sw	a0,-20(s0)
20404c0c:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20404c10:	fe842783          	lw	a5,-24(s0)
20404c14:	eb99                	bnez	a5,20404c2a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20404c16:	204047b7          	lui	a5,0x20404
20404c1a:	b0078593          	addi	a1,a5,-1280 # 20403b00 <__metal_exception_handler>
20404c1e:	fe842503          	lw	a0,-24(s0)
20404c22:	a91ff0ef          	jal	ra,204046b2 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404c26:	4781                	li	a5,0
20404c28:	a00d                	j	20404c4a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404c2a:	fe842703          	lw	a4,-24(s0)
20404c2e:	4785                	li	a5,1
20404c30:	00f71c63          	bne	a4,a5,20404c48 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404c34:	204077b7          	lui	a5,0x20407
20404c38:	48078593          	addi	a1,a5,1152 # 20407480 <__metal_vector_table>
20404c3c:	fe842503          	lw	a0,-24(s0)
20404c40:	a73ff0ef          	jal	ra,204046b2 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404c44:	4781                	li	a5,0
20404c46:	a011                	j	20404c4a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404c48:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404c4a:	853e                	mv	a0,a5
20404c4c:	40f2                	lw	ra,28(sp)
20404c4e:	4462                	lw	s0,24(sp)
20404c50:	6105                	addi	sp,sp,32
20404c52:	8082                	ret

20404c54 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404c54:	1101                	addi	sp,sp,-32
20404c56:	ce22                	sw	s0,28(sp)
20404c58:	1000                	addi	s0,sp,32
20404c5a:	fea42623          	sw	a0,-20(s0)
20404c5e:	feb42423          	sw	a1,-24(s0)
20404c62:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404c66:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404c68:	853e                	mv	a0,a5
20404c6a:	4472                	lw	s0,28(sp)
20404c6c:	6105                	addi	sp,sp,32
20404c6e:	8082                	ret

20404c70 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20404c70:	7139                	addi	sp,sp,-64
20404c72:	de22                	sw	s0,60(sp)
20404c74:	0080                	addi	s0,sp,64
20404c76:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404c7a:	4501                	li	a0,0
20404c7c:	4581                	li	a1,0
20404c7e:	fea42423          	sw	a0,-24(s0)
20404c82:	feb42623          	sw	a1,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404c86:	b80025f3          	csrr	a1,mcycleh
20404c8a:	feb42223          	sw	a1,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20404c8e:	b00025f3          	csrr	a1,mcycle
20404c92:	feb42023          	sw	a1,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404c96:	b80025f3          	csrr	a1,mcycleh
20404c9a:	fcb42e23          	sw	a1,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20404c9e:	fe442503          	lw	a0,-28(s0)
20404ca2:	fdc42583          	lw	a1,-36(s0)
20404ca6:	feb510e3          	bne	a0,a1,20404c86 <__metal_driver_cpu_mcycle_get+0x16>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20404caa:	fe442583          	lw	a1,-28(s0)
20404cae:	882e                	mv	a6,a1
20404cb0:	4881                	li	a7,0
20404cb2:	00081793          	slli	a5,a6,0x0
20404cb6:	4701                	li	a4,0
20404cb8:	fe042583          	lw	a1,-32(s0)
20404cbc:	862e                	mv	a2,a1
20404cbe:	4681                	li	a3,0
20404cc0:	00c765b3          	or	a1,a4,a2
20404cc4:	feb42423          	sw	a1,-24(s0)
20404cc8:	8fd5                	or	a5,a5,a3
20404cca:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20404cce:	fe842703          	lw	a4,-24(s0)
20404cd2:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:640
}
20404cd6:	853a                	mv	a0,a4
20404cd8:	85be                	mv	a1,a5
20404cda:	5472                	lw	s0,60(sp)
20404cdc:	6121                	addi	sp,sp,64
20404cde:	8082                	ret

20404ce0 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20404ce0:	7179                	addi	sp,sp,-48
20404ce2:	d606                	sw	ra,44(sp)
20404ce4:	d422                	sw	s0,40(sp)
20404ce6:	d24a                	sw	s2,36(sp)
20404ce8:	d04e                	sw	s3,32(sp)
20404cea:	1800                	addi	s0,sp,48
20404cec:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20404cf0:	fdc42783          	lw	a5,-36(s0)
20404cf4:	e781                	bnez	a5,20404cfc <__metal_driver_cpu_timebase_get+0x1c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20404cf6:	4901                	li	s2,0
20404cf8:	4981                	li	s3,0
20404cfa:	a821                	j	20404d12 <__metal_driver_cpu_timebase_get+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20404cfc:	fdc42503          	lw	a0,-36(s0)
20404d00:	979fe0ef          	jal	ra,20403678 <__metal_driver_cpu_timebase>
20404d04:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20404d08:	fec42783          	lw	a5,-20(s0)
20404d0c:	893e                	mv	s2,a5
20404d0e:	87fd                	srai	a5,a5,0x1f
20404d10:	89be                	mv	s3,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:650
}
20404d12:	874a                	mv	a4,s2
20404d14:	87ce                	mv	a5,s3
20404d16:	853a                	mv	a0,a4
20404d18:	85be                	mv	a1,a5
20404d1a:	50b2                	lw	ra,44(sp)
20404d1c:	5422                	lw	s0,40(sp)
20404d1e:	5912                	lw	s2,36(sp)
20404d20:	5982                	lw	s3,32(sp)
20404d22:	6145                	addi	sp,sp,48
20404d24:	8082                	ret

20404d26 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404d26:	7179                	addi	sp,sp,-48
20404d28:	d606                	sw	ra,44(sp)
20404d2a:	d422                	sw	s0,40(sp)
20404d2c:	1800                	addi	s0,sp,48
20404d2e:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20404d32:	4781                	li	a5,0
20404d34:	4801                	li	a6,0
20404d36:	fef42023          	sw	a5,-32(s0)
20404d3a:	ff042223          	sw	a6,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404d3e:	fdc42503          	lw	a0,-36(s0)
20404d42:	961fe0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404d46:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20404d4a:	fec42783          	lw	a5,-20(s0)
20404d4e:	c78d                	beqz	a5,20404d78 <__metal_driver_cpu_mtime_get+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404d50:	fec42783          	lw	a5,-20(s0)
20404d54:	13c7a783          	lw	a5,316(a5)
20404d58:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20404d5c:	fe842783          	lw	a5,-24(s0)
20404d60:	cf81                	beqz	a5,20404d78 <__metal_driver_cpu_mtime_get+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20404d62:	fe842783          	lw	a5,-24(s0)
20404d66:	439c                	lw	a5,0(a5)
20404d68:	47f8                	lw	a4,76(a5)
20404d6a:	fe040793          	addi	a5,s0,-32
20404d6e:	863e                	mv	a2,a5
20404d70:	4585                	li	a1,1
20404d72:	fe842503          	lw	a0,-24(s0)
20404d76:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404d78:	fe042703          	lw	a4,-32(s0)
20404d7c:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:667
}
20404d80:	853a                	mv	a0,a4
20404d82:	85be                	mv	a1,a5
20404d84:	50b2                	lw	ra,44(sp)
20404d86:	5422                	lw	s0,40(sp)
20404d88:	6145                	addi	sp,sp,48
20404d8a:	8082                	ret

20404d8c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404d8c:	7179                	addi	sp,sp,-48
20404d8e:	d606                	sw	ra,44(sp)
20404d90:	d422                	sw	s0,40(sp)
20404d92:	d226                	sw	s1,36(sp)
20404d94:	1800                	addi	s0,sp,48
20404d96:	fca42e23          	sw	a0,-36(s0)
20404d9a:	fcb42823          	sw	a1,-48(s0)
20404d9e:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20404da2:	57fd                	li	a5,-1
20404da4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404da8:	fdc42503          	lw	a0,-36(s0)
20404dac:	8f7fe0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404db0:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20404db4:	fe842783          	lw	a5,-24(s0)
20404db8:	cf8d                	beqz	a5,20404df2 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404dba:	fe842783          	lw	a5,-24(s0)
20404dbe:	13c7a783          	lw	a5,316(a5)
20404dc2:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20404dc6:	fe442783          	lw	a5,-28(s0)
20404dca:	c785                	beqz	a5,20404df2 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20404dcc:	fe442783          	lw	a5,-28(s0)
20404dd0:	439c                	lw	a5,0(a5)
20404dd2:	4ba4                	lw	s1,80(a5)
20404dd4:	fdc42503          	lw	a0,-36(s0)
20404dd8:	87dfe0ef          	jal	ra,20403654 <__metal_driver_cpu_hartid>
20404ddc:	87aa                	mv	a5,a0
20404dde:	fd042603          	lw	a2,-48(s0)
20404de2:	fd442683          	lw	a3,-44(s0)
20404de6:	85be                	mv	a1,a5
20404de8:	fe442503          	lw	a0,-28(s0)
20404dec:	9482                	jalr	s1
20404dee:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20404df2:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:685
}
20404df6:	853e                	mv	a0,a5
20404df8:	50b2                	lw	ra,44(sp)
20404dfa:	5422                	lw	s0,40(sp)
20404dfc:	5492                	lw	s1,36(sp)
20404dfe:	6145                	addi	sp,sp,48
20404e00:	8082                	ret

20404e02 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20404e02:	1101                	addi	sp,sp,-32
20404e04:	ce22                	sw	s0,28(sp)
20404e06:	1000                	addi	s0,sp,32
20404e08:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404e0c:	800007b7          	lui	a5,0x80000
20404e10:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe69c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20404e14:	853e                	mv	a0,a5
20404e16:	4472                	lw	s0,28(sp)
20404e18:	6105                	addi	sp,sp,32
20404e1a:	8082                	ret

20404e1c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20404e1c:	1101                	addi	sp,sp,-32
20404e1e:	ce22                	sw	s0,28(sp)
20404e20:	1000                	addi	s0,sp,32
20404e22:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20404e26:	479d                	li	a5,7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:703
}
20404e28:	853e                	mv	a0,a5
20404e2a:	4472                	lw	s0,28(sp)
20404e2c:	6105                	addi	sp,sp,32
20404e2e:	8082                	ret

20404e30 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20404e30:	1101                	addi	sp,sp,-32
20404e32:	ce22                	sw	s0,28(sp)
20404e34:	1000                	addi	s0,sp,32
20404e36:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404e3a:	800007b7          	lui	a5,0x80000
20404e3e:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe69c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20404e42:	853e                	mv	a0,a5
20404e44:	4472                	lw	s0,28(sp)
20404e46:	6105                	addi	sp,sp,32
20404e48:	8082                	ret

20404e4a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20404e4a:	1101                	addi	sp,sp,-32
20404e4c:	ce22                	sw	s0,28(sp)
20404e4e:	1000                	addi	s0,sp,32
20404e50:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20404e54:	478d                	li	a5,3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:721
}
20404e56:	853e                	mv	a0,a5
20404e58:	4472                	lw	s0,28(sp)
20404e5a:	6105                	addi	sp,sp,32
20404e5c:	8082                	ret

20404e5e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404e5e:	7179                	addi	sp,sp,-48
20404e60:	d606                	sw	ra,44(sp)
20404e62:	d422                	sw	s0,40(sp)
20404e64:	1800                	addi	s0,sp,48
20404e66:	fca42e23          	sw	a0,-36(s0)
20404e6a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20404e6e:	57fd                	li	a5,-1
20404e70:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404e74:	fdc42503          	lw	a0,-36(s0)
20404e78:	82bfe0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404e7c:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20404e80:	fe842783          	lw	a5,-24(s0)
20404e84:	c79d                	beqz	a5,20404eb2 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404e86:	fe842783          	lw	a5,-24(s0)
20404e8a:	0dc7a783          	lw	a5,220(a5)
20404e8e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20404e92:	fe442783          	lw	a5,-28(s0)
20404e96:	cf91                	beqz	a5,20404eb2 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404e98:	fe442783          	lw	a5,-28(s0)
20404e9c:	439c                	lw	a5,0(a5)
20404e9e:	47f8                	lw	a4,76(a5)
20404ea0:	fd840793          	addi	a5,s0,-40
20404ea4:	863e                	mv	a2,a5
20404ea6:	458d                	li	a1,3
20404ea8:	fe442503          	lw	a0,-28(s0)
20404eac:	9702                	jalr	a4
20404eae:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20404eb2:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:738
}
20404eb6:	853e                	mv	a0,a5
20404eb8:	50b2                	lw	ra,44(sp)
20404eba:	5422                	lw	s0,40(sp)
20404ebc:	6145                	addi	sp,sp,48
20404ebe:	8082                	ret

20404ec0 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20404ec0:	7179                	addi	sp,sp,-48
20404ec2:	d606                	sw	ra,44(sp)
20404ec4:	d422                	sw	s0,40(sp)
20404ec6:	1800                	addi	s0,sp,48
20404ec8:	fca42e23          	sw	a0,-36(s0)
20404ecc:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20404ed0:	57fd                	li	a5,-1
20404ed2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404ed6:	fdc42503          	lw	a0,-36(s0)
20404eda:	fc8fe0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404ede:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20404ee2:	fe842783          	lw	a5,-24(s0)
20404ee6:	c79d                	beqz	a5,20404f14 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404ee8:	fe842783          	lw	a5,-24(s0)
20404eec:	0dc7a783          	lw	a5,220(a5)
20404ef0:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20404ef4:	fe442783          	lw	a5,-28(s0)
20404ef8:	cf91                	beqz	a5,20404f14 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
20404efa:	fe442783          	lw	a5,-28(s0)
20404efe:	439c                	lw	a5,0(a5)
20404f00:	47f8                	lw	a4,76(a5)
20404f02:	fd840793          	addi	a5,s0,-40
20404f06:	863e                	mv	a2,a5
20404f08:	4589                	li	a1,2
20404f0a:	fe442503          	lw	a0,-28(s0)
20404f0e:	9702                	jalr	a4
20404f10:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20404f14:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:755
}
20404f18:	853e                	mv	a0,a5
20404f1a:	50b2                	lw	ra,44(sp)
20404f1c:	5422                	lw	s0,40(sp)
20404f1e:	6145                	addi	sp,sp,48
20404f20:	8082                	ret

20404f22 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20404f22:	7179                	addi	sp,sp,-48
20404f24:	d606                	sw	ra,44(sp)
20404f26:	d422                	sw	s0,40(sp)
20404f28:	1800                	addi	s0,sp,48
20404f2a:	fca42e23          	sw	a0,-36(s0)
20404f2e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20404f32:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404f36:	fdc42503          	lw	a0,-36(s0)
20404f3a:	f68fe0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404f3e:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20404f42:	fe842783          	lw	a5,-24(s0)
20404f46:	c79d                	beqz	a5,20404f74 <__metal_driver_cpu_get_msip+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404f48:	fe842783          	lw	a5,-24(s0)
20404f4c:	0dc7a783          	lw	a5,220(a5)
20404f50:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20404f54:	fe442783          	lw	a5,-28(s0)
20404f58:	cf91                	beqz	a5,20404f74 <__metal_driver_cpu_get_msip+0x52>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20404f5a:	fe442783          	lw	a5,-28(s0)
20404f5e:	439c                	lw	a5,0(a5)
20404f60:	47f8                	lw	a4,76(a5)
20404f62:	fd840793          	addi	a5,s0,-40
20404f66:	863e                	mv	a2,a5
20404f68:	4591                	li	a1,4
20404f6a:	fe442503          	lw	a0,-28(s0)
20404f6e:	9702                	jalr	a4
20404f70:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20404f74:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404f78:	853e                	mv	a0,a5
20404f7a:	50b2                	lw	ra,44(sp)
20404f7c:	5422                	lw	s0,40(sp)
20404f7e:	6145                	addi	sp,sp,48
20404f80:	8082                	ret

20404f82 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20404f82:	1101                	addi	sp,sp,-32
20404f84:	ce06                	sw	ra,28(sp)
20404f86:	cc22                	sw	s0,24(sp)
20404f88:	1000                	addi	s0,sp,32
20404f8a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20404f8e:	fec42503          	lw	a0,-20(s0)
20404f92:	f10fe0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404f96:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:777
}
20404f98:	853e                	mv	a0,a5
20404f9a:	40f2                	lw	ra,28(sp)
20404f9c:	4462                	lw	s0,24(sp)
20404f9e:	6105                	addi	sp,sp,32
20404fa0:	8082                	ret

20404fa2 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20404fa2:	7179                	addi	sp,sp,-48
20404fa4:	d606                	sw	ra,44(sp)
20404fa6:	d422                	sw	s0,40(sp)
20404fa8:	1800                	addi	s0,sp,48
20404faa:	fca42e23          	sw	a0,-36(s0)
20404fae:	fcb42c23          	sw	a1,-40(s0)
20404fb2:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404fb6:	fdc42503          	lw	a0,-36(s0)
20404fba:	ee8fe0ef          	jal	ra,204036a2 <__metal_driver_cpu_interrupt_controller>
20404fbe:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20404fc2:	fec42783          	lw	a5,-20(s0)
20404fc6:	cb99                	beqz	a5,20404fdc <__metal_driver_cpu_exception_register+0x3a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20404fc8:	fd442603          	lw	a2,-44(s0)
20404fcc:	fd842583          	lw	a1,-40(s0)
20404fd0:	fec42503          	lw	a0,-20(s0)
20404fd4:	8a5ff0ef          	jal	ra,20404878 <__metal_exception_register>
20404fd8:	87aa                	mv	a5,a0
20404fda:	a011                	j	20404fde <__metal_driver_cpu_exception_register+0x3c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20404fdc:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:808
}
20404fde:	853e                	mv	a0,a5
20404fe0:	50b2                	lw	ra,44(sp)
20404fe2:	5422                	lw	s0,40(sp)
20404fe4:	6145                	addi	sp,sp,48
20404fe6:	8082                	ret

20404fe8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20404fe8:	1101                	addi	sp,sp,-32
20404fea:	ce22                	sw	s0,28(sp)
20404fec:	1000                	addi	s0,sp,32
20404fee:	fea42623          	sw	a0,-20(s0)
20404ff2:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20404ff6:	fe842783          	lw	a5,-24(s0)
20404ffa:	0007d783          	lhu	a5,0(a5)
20404ffe:	0037f713          	andi	a4,a5,3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20405002:	478d                	li	a5,3
20405004:	00f71463          	bne	a4,a5,2040500c <__metal_driver_cpu_get_instruction_length+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20405008:	4791                	li	a5,4
2040500a:	a011                	j	2040500e <__metal_driver_cpu_get_instruction_length+0x26>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2040500c:	4789                	li	a5,2
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2040500e:	853e                	mv	a0,a5
20405010:	4472                	lw	s0,28(sp)
20405012:	6105                	addi	sp,sp,32
20405014:	8082                	ret

20405016 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20405016:	7179                	addi	sp,sp,-48
20405018:	d622                	sw	s0,44(sp)
2040501a:	1800                	addi	s0,sp,48
2040501c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20405020:	341027f3          	csrr	a5,mepc
20405024:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20405028:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:827
}
2040502c:	853e                	mv	a0,a5
2040502e:	5432                	lw	s0,44(sp)
20405030:	6145                	addi	sp,sp,48
20405032:	8082                	ret

20405034 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20405034:	1101                	addi	sp,sp,-32
20405036:	ce22                	sw	s0,28(sp)
20405038:	1000                	addi	s0,sp,32
2040503a:	fea42623          	sw	a0,-20(s0)
2040503e:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20405042:	fe842783          	lw	a5,-24(s0)
20405046:	34179073          	csrw	mepc,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2040504a:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:832
}
2040504c:	853e                	mv	a0,a5
2040504e:	4472                	lw	s0,28(sp)
20405050:	6105                	addi	sp,sp,32
20405052:	8082                	ret

20405054 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20405054:	1101                	addi	sp,sp,-32
20405056:	ce06                	sw	ra,28(sp)
20405058:	cc22                	sw	s0,24(sp)
2040505a:	1000                	addi	s0,sp,32
2040505c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20405060:	fec42503          	lw	a0,-20(s0)
20405064:	e68fe0ef          	jal	ra,204036cc <__metal_driver_cpu_buserror>
20405068:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_cpu.c:836
}
2040506a:	853e                	mv	a0,a5
2040506c:	40f2                	lw	ra,28(sp)
2040506e:	4462                	lw	s0,24(sp)
20405070:	6105                	addi	sp,sp,32
20405072:	8082                	ret

20405074 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20405074:	1101                	addi	sp,sp,-32
20405076:	ce22                	sw	s0,28(sp)
20405078:	1000                	addi	s0,sp,32
2040507a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2040507e:	fec42703          	lw	a4,-20(s0)
20405082:	800007b7          	lui	a5,0x80000
20405086:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe348>
2040508a:	00f71563          	bne	a4,a5,20405094 <__metal_driver_sifive_plic0_control_base+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040508e:	0c0007b7          	lui	a5,0xc000
20405092:	a011                	j	20405096 <__metal_driver_sifive_plic0_control_base+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:319
	}
	else {
		return 0;
20405094:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:321
	}
}
20405096:	853e                	mv	a0,a5
20405098:	4472                	lw	s0,28(sp)
2040509a:	6105                	addi	sp,sp,32
2040509c:	8082                	ret

2040509e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040509e:	1101                	addi	sp,sp,-32
204050a0:	ce22                	sw	s0,28(sp)
204050a2:	1000                	addi	s0,sp,32
204050a4:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204050a8:	fec42703          	lw	a4,-20(s0)
204050ac:	800007b7          	lui	a5,0x80000
204050b0:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe348>
204050b4:	00f71463          	bne	a4,a5,204050bc <__metal_driver_sifive_plic0_num_interrupts+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204050b8:	47ed                	li	a5,27
204050ba:	a011                	j	204050be <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:339
	}
	else {
		return 0;
204050bc:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:341
	}
}
204050be:	853e                	mv	a0,a5
204050c0:	4472                	lw	s0,28(sp)
204050c2:	6105                	addi	sp,sp,32
204050c4:	8082                	ret

204050c6 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204050c6:	1101                	addi	sp,sp,-32
204050c8:	ce22                	sw	s0,28(sp)
204050ca:	1000                	addi	s0,sp,32
204050cc:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204050d0:	fec42703          	lw	a4,-20(s0)
204050d4:	800007b7          	lui	a5,0x80000
204050d8:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe348>
204050dc:	00f71463          	bne	a4,a5,204050e4 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204050e0:	479d                	li	a5,7
204050e2:	a011                	j	204050e6 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:349
	}
	else {
		return 0;
204050e4:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:351
	}
}
204050e6:	853e                	mv	a0,a5
204050e8:	4472                	lw	s0,28(sp)
204050ea:	6105                	addi	sp,sp,32
204050ec:	8082                	ret

204050ee <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204050ee:	1101                	addi	sp,sp,-32
204050f0:	ce22                	sw	s0,28(sp)
204050f2:	1000                	addi	s0,sp,32
204050f4:	fea42623          	sw	a0,-20(s0)
204050f8:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:355
	if (idx == 0) {
204050fc:	fe842783          	lw	a5,-24(s0)
20405100:	e791                	bnez	a5,2040510c <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405102:	800007b7          	lui	a5,0x80000
20405106:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf78>
2040510a:	a011                	j	2040510e <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:359
	}
	else {
		return NULL;
2040510c:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:361
	}
}
2040510e:	853e                	mv	a0,a5
20405110:	4472                	lw	s0,28(sp)
20405112:	6105                	addi	sp,sp,32
20405114:	8082                	ret

20405116 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20405116:	1101                	addi	sp,sp,-32
20405118:	ce22                	sw	s0,28(sp)
2040511a:	1000                	addi	s0,sp,32
2040511c:	fea42623          	sw	a0,-20(s0)
20405120:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:365
	if (idx == 0) {
20405124:	fe842783          	lw	a5,-24(s0)
20405128:	e399                	bnez	a5,2040512e <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:366
		return 11;
2040512a:	47ad                	li	a5,11
2040512c:	a011                	j	20405130 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:369
	}
	else {
		return 0;
2040512e:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:371
	}
}
20405130:	853e                	mv	a0,a5
20405132:	4472                	lw	s0,28(sp)
20405134:	6105                	addi	sp,sp,32
20405136:	8082                	ret

20405138 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20405138:	1101                	addi	sp,sp,-32
2040513a:	ce22                	sw	s0,28(sp)
2040513c:	1000                	addi	s0,sp,32
2040513e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:375
	if (hartid == 0) {
20405142:	fec42783          	lw	a5,-20(s0)
20405146:	e399                	bnez	a5,2040514c <__metal_driver_sifive_plic0_context_ids+0x14>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:376
		return 0;
20405148:	4781                	li	a5,0
2040514a:	a011                	j	2040514e <__metal_driver_sifive_plic0_context_ids+0x16>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:379
	}
	else {
		return -1;
2040514c:	57fd                	li	a5,-1
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:381
	}
}
2040514e:	853e                	mv	a0,a5
20405150:	4472                	lw	s0,28(sp)
20405152:	6105                	addi	sp,sp,32
20405154:	8082                	ret

20405156 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20405156:	7179                	addi	sp,sp,-48
20405158:	d606                	sw	ra,44(sp)
2040515a:	d422                	sw	s0,40(sp)
2040515c:	1800                	addi	s0,sp,48
2040515e:	fca42e23          	sw	a0,-36(s0)
20405162:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405166:	fdc42503          	lw	a0,-36(s0)
2040516a:	3729                	jal	20405074 <__metal_driver_sifive_plic0_control_base>
2040516c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20405170:	fd842783          	lw	a5,-40(s0)
20405174:	00c79713          	slli	a4,a5,0xc
20405178:	fec42783          	lw	a5,-20(s0)
2040517c:	973e                	add	a4,a4,a5
2040517e:	002007b7          	lui	a5,0x200
20405182:	0791                	addi	a5,a5,4
20405184:	97ba                	add	a5,a5,a4
20405186:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20405188:	853e                	mv	a0,a5
2040518a:	50b2                	lw	ra,44(sp)
2040518c:	5422                	lw	s0,40(sp)
2040518e:	6145                	addi	sp,sp,48
20405190:	8082                	ret

20405192 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20405192:	7179                	addi	sp,sp,-48
20405194:	d606                	sw	ra,44(sp)
20405196:	d422                	sw	s0,40(sp)
20405198:	1800                	addi	s0,sp,48
2040519a:	fca42e23          	sw	a0,-36(s0)
2040519e:	fcb42c23          	sw	a1,-40(s0)
204051a2:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204051a6:	fdc42503          	lw	a0,-36(s0)
204051aa:	35e9                	jal	20405074 <__metal_driver_sifive_plic0_control_base>
204051ac:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
204051b0:	fd842783          	lw	a5,-40(s0)
204051b4:	00c79713          	slli	a4,a5,0xc
204051b8:	fec42783          	lw	a5,-20(s0)
204051bc:	973e                	add	a4,a4,a5
204051be:	002007b7          	lui	a5,0x200
204051c2:	0791                	addi	a5,a5,4
204051c4:	97ba                	add	a5,a5,a4
204051c6:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204051c8:	fd442783          	lw	a5,-44(s0)
204051cc:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:35
}
204051ce:	0001                	nop
204051d0:	50b2                	lw	ra,44(sp)
204051d2:	5422                	lw	s0,40(sp)
204051d4:	6145                	addi	sp,sp,48
204051d6:	8082                	ret

204051d8 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204051d8:	7179                	addi	sp,sp,-48
204051da:	d606                	sw	ra,44(sp)
204051dc:	d422                	sw	s0,40(sp)
204051de:	1800                	addi	s0,sp,48
204051e0:	fca42e23          	sw	a0,-36(s0)
204051e4:	fcb42c23          	sw	a1,-40(s0)
204051e8:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204051ec:	fdc42503          	lw	a0,-36(s0)
204051f0:	3551                	jal	20405074 <__metal_driver_sifive_plic0_control_base>
204051f2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
204051f6:	fd842783          	lw	a5,-40(s0)
204051fa:	00c79713          	slli	a4,a5,0xc
204051fe:	fec42783          	lw	a5,-20(s0)
20405202:	973e                	add	a4,a4,a5
20405204:	002007b7          	lui	a5,0x200
20405208:	97ba                	add	a5,a5,a4
2040520a:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2040520c:	fd442783          	lw	a5,-44(s0)
20405210:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20405212:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405214:	853e                	mv	a0,a5
20405216:	50b2                	lw	ra,44(sp)
20405218:	5422                	lw	s0,40(sp)
2040521a:	6145                	addi	sp,sp,48
2040521c:	8082                	ret

2040521e <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2040521e:	7179                	addi	sp,sp,-48
20405220:	d606                	sw	ra,44(sp)
20405222:	d422                	sw	s0,40(sp)
20405224:	1800                	addi	s0,sp,48
20405226:	fca42e23          	sw	a0,-36(s0)
2040522a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040522e:	fdc42503          	lw	a0,-36(s0)
20405232:	3589                	jal	20405074 <__metal_driver_sifive_plic0_control_base>
20405234:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20405238:	fd842783          	lw	a5,-40(s0)
2040523c:	00c79713          	slli	a4,a5,0xc
20405240:	fec42783          	lw	a5,-20(s0)
20405244:	973e                	add	a4,a4,a5
20405246:	002007b7          	lui	a5,0x200
2040524a:	97ba                	add	a5,a5,a4
2040524c:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
2040524e:	853e                	mv	a0,a5
20405250:	50b2                	lw	ra,44(sp)
20405252:	5422                	lw	s0,40(sp)
20405254:	6145                	addi	sp,sp,48
20405256:	8082                	ret

20405258 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20405258:	7179                	addi	sp,sp,-48
2040525a:	d606                	sw	ra,44(sp)
2040525c:	d422                	sw	s0,40(sp)
2040525e:	1800                	addi	s0,sp,48
20405260:	fca42e23          	sw	a0,-36(s0)
20405264:	fcb42c23          	sw	a1,-40(s0)
20405268:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2040526c:	fdc42503          	lw	a0,-36(s0)
20405270:	3511                	jal	20405074 <__metal_driver_sifive_plic0_control_base>
20405272:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20405276:	fdc42503          	lw	a0,-36(s0)
2040527a:	35b1                	jal	204050c6 <__metal_driver_sifive_plic0_max_priority>
2040527c:	87aa                	mv	a5,a0
2040527e:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20405282:	fe842783          	lw	a5,-24(s0)
20405286:	c785                	beqz	a5,204052ae <__metal_driver_riscv_plic0_set_priority+0x56>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405288:	fd442703          	lw	a4,-44(s0)
2040528c:	fe842783          	lw	a5,-24(s0)
20405290:	00f77f63          	bgeu	a4,a5,204052ae <__metal_driver_riscv_plic0_set_priority+0x56>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20405294:	fd842783          	lw	a5,-40(s0)
20405298:	078a                	slli	a5,a5,0x2
2040529a:	873e                	mv	a4,a5
2040529c:	fec42783          	lw	a5,-20(s0)
204052a0:	97ba                	add	a5,a5,a4
204052a2:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
204052a4:	fd442783          	lw	a5,-44(s0)
204052a8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
204052aa:	4781                	li	a5,0
204052ac:	a011                	j	204052b0 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
204052ae:	57fd                	li	a5,-1
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:72
}
204052b0:	853e                	mv	a0,a5
204052b2:	50b2                	lw	ra,44(sp)
204052b4:	5422                	lw	s0,40(sp)
204052b6:	6145                	addi	sp,sp,48
204052b8:	8082                	ret

204052ba <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
204052ba:	7179                	addi	sp,sp,-48
204052bc:	d606                	sw	ra,44(sp)
204052be:	d422                	sw	s0,40(sp)
204052c0:	1800                	addi	s0,sp,48
204052c2:	fca42e23          	sw	a0,-36(s0)
204052c6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204052ca:	fdc42503          	lw	a0,-36(s0)
204052ce:	335d                	jal	20405074 <__metal_driver_sifive_plic0_control_base>
204052d0:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
204052d4:	fd842783          	lw	a5,-40(s0)
204052d8:	078a                	slli	a5,a5,0x2
204052da:	873e                	mv	a4,a5
204052dc:	fec42783          	lw	a5,-20(s0)
204052e0:	97ba                	add	a5,a5,a4
204052e2:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
204052e4:	853e                	mv	a0,a5
204052e6:	50b2                	lw	ra,44(sp)
204052e8:	5422                	lw	s0,40(sp)
204052ea:	6145                	addi	sp,sp,48
204052ec:	8082                	ret

204052ee <__metal_plic0_enable>:
__metal_plic0_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
204052ee:	7179                	addi	sp,sp,-48
204052f0:	d606                	sw	ra,44(sp)
204052f2:	d422                	sw	s0,40(sp)
204052f4:	1800                	addi	s0,sp,48
204052f6:	fca42e23          	sw	a0,-36(s0)
204052fa:	fcb42c23          	sw	a1,-40(s0)
204052fe:	fcc42a23          	sw	a2,-44(s0)
20405302:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405306:	fdc42503          	lw	a0,-36(s0)
2040530a:	d6bff0ef          	jal	ra,20405074 <__metal_driver_sifive_plic0_control_base>
2040530e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20405312:	fd842783          	lw	a5,-40(s0)
20405316:	00779713          	slli	a4,a5,0x7
2040531a:	fec42783          	lw	a5,-20(s0)
2040531e:	97ba                	add	a5,a5,a4
20405320:	fd442703          	lw	a4,-44(s0)
20405324:	8715                	srai	a4,a4,0x5
20405326:	070a                	slli	a4,a4,0x2
20405328:	973e                	add	a4,a4,a5
2040532a:	6789                	lui	a5,0x2
2040532c:	97ba                	add	a5,a5,a4
2040532e:	439c                	lw	a5,0(a5)
20405330:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405334:	fd042783          	lw	a5,-48(s0)
20405338:	cf81                	beqz	a5,20405350 <__metal_plic0_enable+0x62>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
2040533a:	fd442783          	lw	a5,-44(s0)
2040533e:	8bfd                	andi	a5,a5,31
20405340:	4705                	li	a4,1
20405342:	00f717b3          	sll	a5,a4,a5
20405346:	873e                	mv	a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405348:	fe842783          	lw	a5,-24(s0)
2040534c:	8fd9                	or	a5,a5,a4
2040534e:	a829                	j	20405368 <__metal_plic0_enable+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20405350:	fd442783          	lw	a5,-44(s0)
20405354:	8bfd                	andi	a5,a5,31
20405356:	4705                	li	a4,1
20405358:	00f717b3          	sll	a5,a4,a5
2040535c:	fff7c793          	not	a5,a5
20405360:	873e                	mv	a4,a5
20405362:	fe842783          	lw	a5,-24(s0)
20405366:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20405368:	fd842703          	lw	a4,-40(s0)
2040536c:	00771693          	slli	a3,a4,0x7
20405370:	fec42703          	lw	a4,-20(s0)
20405374:	9736                	add	a4,a4,a3
20405376:	fd442683          	lw	a3,-44(s0)
2040537a:	8695                	srai	a3,a3,0x5
2040537c:	068a                	slli	a3,a3,0x2
2040537e:	96ba                	add	a3,a3,a4
20405380:	6709                	lui	a4,0x2
20405382:	9736                	add	a4,a4,a3
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20405384:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405386:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405388:	853e                	mv	a0,a5
2040538a:	50b2                	lw	ra,44(sp)
2040538c:	5422                	lw	s0,40(sp)
2040538e:	6145                	addi	sp,sp,48
20405390:	8082                	ret

20405392 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20405392:	1101                	addi	sp,sp,-32
20405394:	ce06                	sw	ra,28(sp)
20405396:	cc22                	sw	s0,24(sp)
20405398:	1000                	addi	s0,sp,32
2040539a:	fea42623          	sw	a0,-20(s0)
2040539e:	feb42423          	sw	a1,-24(s0)
204053a2:	12c00513          	li	a0,300
204053a6:	0b4020ef          	jal	ra,2040745a <metal_shutdown>

204053aa <__metal_plic0_handler>:
__metal_plic0_handler():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
204053aa:	7179                	addi	sp,sp,-48
204053ac:	d606                	sw	ra,44(sp)
204053ae:	d422                	sw	s0,40(sp)
204053b0:	1800                	addi	s0,sp,48
204053b2:	fca42e23          	sw	a0,-36(s0)
204053b6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
204053ba:	fd842783          	lw	a5,-40(s0)
204053be:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
204053c2:	b5efe0ef          	jal	ra,20403720 <__metal_myhart_id>
204053c6:	87aa                	mv	a5,a0
204053c8:	853e                	mv	a0,a5
204053ca:	d6fff0ef          	jal	ra,20405138 <__metal_driver_sifive_plic0_context_ids>
204053ce:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
204053d2:	fe842583          	lw	a1,-24(s0)
204053d6:	fec42503          	lw	a0,-20(s0)
204053da:	d7dff0ef          	jal	ra,20405156 <__metal_plic0_claim_interrupt>
204053de:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
204053e2:	fec42503          	lw	a0,-20(s0)
204053e6:	cb9ff0ef          	jal	ra,2040509e <__metal_driver_sifive_plic0_num_interrupts>
204053ea:	87aa                	mv	a5,a0
204053ec:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
204053f0:	fe442703          	lw	a4,-28(s0)
204053f4:	fe042783          	lw	a5,-32(s0)
204053f8:	04f77263          	bgeu	a4,a5,2040543c <__metal_plic0_handler+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
204053fc:	fec42703          	lw	a4,-20(s0)
20405400:	fe442783          	lw	a5,-28(s0)
20405404:	078a                	slli	a5,a5,0x2
20405406:	97ba                	add	a5,a5,a4
20405408:	479c                	lw	a5,8(a5)
2040540a:	cb8d                	beqz	a5,2040543c <__metal_plic0_handler+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2040540c:	fec42703          	lw	a4,-20(s0)
20405410:	fe442783          	lw	a5,-28(s0)
20405414:	078a                	slli	a5,a5,0x2
20405416:	97ba                	add	a5,a5,a4
20405418:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
2040541c:	fe442603          	lw	a2,-28(s0)
20405420:	fec42683          	lw	a3,-20(s0)
20405424:	fe442703          	lw	a4,-28(s0)
20405428:	87ba                	mv	a5,a4
2040542a:	0786                	slli	a5,a5,0x1
2040542c:	97ba                	add	a5,a5,a4
2040542e:	078e                	slli	a5,a5,0x3
20405430:	97b6                	add	a5,a5,a3
20405432:	0887a783          	lw	a5,136(a5)
20405436:	85be                	mv	a1,a5
20405438:	8532                	mv	a0,a2
2040543a:	9802                	jalr	a6
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
2040543c:	fe442603          	lw	a2,-28(s0)
20405440:	fe842583          	lw	a1,-24(s0)
20405444:	fec42503          	lw	a0,-20(s0)
20405448:	d4bff0ef          	jal	ra,20405192 <__metal_plic0_complete_interrupt>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:121
}
2040544c:	0001                	nop
2040544e:	50b2                	lw	ra,44(sp)
20405450:	5422                	lw	s0,40(sp)
20405452:	6145                	addi	sp,sp,48
20405454:	8082                	ret

20405456 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20405456:	7139                	addi	sp,sp,-64
20405458:	de06                	sw	ra,60(sp)
2040545a:	dc22                	sw	s0,56(sp)
2040545c:	0080                	addi	s0,sp,64
2040545e:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405462:	fcc42783          	lw	a5,-52(s0)
20405466:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
2040546a:	fe442783          	lw	a5,-28(s0)
2040546e:	43dc                	lw	a5,4(a5)
20405470:	12079b63          	bnez	a5,204055a6 <__metal_driver_riscv_plic0_init+0x150>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405474:	fe042623          	sw	zero,-20(s0)
20405478:	aa39                	j	20405596 <__metal_driver_riscv_plic0_init+0x140>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
2040547a:	fcc42503          	lw	a0,-52(s0)
2040547e:	c21ff0ef          	jal	ra,2040509e <__metal_driver_sifive_plic0_num_interrupts>
20405482:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20405486:	fec42583          	lw	a1,-20(s0)
2040548a:	fcc42503          	lw	a0,-52(s0)
2040548e:	c61ff0ef          	jal	ra,204050ee <__metal_driver_sifive_plic0_interrupt_parents>
20405492:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20405496:	fec42583          	lw	a1,-20(s0)
2040549a:	fcc42503          	lw	a0,-52(s0)
2040549e:	c79ff0ef          	jal	ra,20405116 <__metal_driver_sifive_plic0_interrupt_lines>
204054a2:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
204054a6:	fdc42783          	lw	a5,-36(s0)
204054aa:	439c                	lw	a5,0(a5)
204054ac:	439c                	lw	a5,0(a5)
204054ae:	fdc42503          	lw	a0,-36(s0)
204054b2:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204054b4:	fe042423          	sw	zero,-24(s0)
204054b8:	a88d                	j	2040552a <__metal_driver_riscv_plic0_init+0xd4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
204054ba:	4681                	li	a3,0
204054bc:	fe842603          	lw	a2,-24(s0)
204054c0:	fec42583          	lw	a1,-20(s0)
204054c4:	fe442503          	lw	a0,-28(s0)
204054c8:	351d                	jal	204052ee <__metal_plic0_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
204054ca:	fe842703          	lw	a4,-24(s0)
204054ce:	fe042783          	lw	a5,-32(s0)
204054d2:	04f75763          	bge	a4,a5,20405520 <__metal_driver_riscv_plic0_init+0xca>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
204054d6:	4601                	li	a2,0
204054d8:	fe842583          	lw	a1,-24(s0)
204054dc:	fcc42503          	lw	a0,-52(s0)
204054e0:	d79ff0ef          	jal	ra,20405258 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
204054e4:	fe442703          	lw	a4,-28(s0)
204054e8:	fe842783          	lw	a5,-24(s0)
204054ec:	078a                	slli	a5,a5,0x2
204054ee:	97ba                	add	a5,a5,a4
204054f0:	0007a423          	sw	zero,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
204054f4:	fe442683          	lw	a3,-28(s0)
204054f8:	fe842703          	lw	a4,-24(s0)
204054fc:	87ba                	mv	a5,a4
204054fe:	0786                	slli	a5,a5,0x1
20405500:	97ba                	add	a5,a5,a4
20405502:	078e                	slli	a5,a5,0x3
20405504:	97b6                	add	a5,a5,a3
20405506:	0807a223          	sw	zero,132(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
2040550a:	fe442683          	lw	a3,-28(s0)
2040550e:	fe842703          	lw	a4,-24(s0)
20405512:	87ba                	mv	a5,a4
20405514:	0786                	slli	a5,a5,0x1
20405516:	97ba                	add	a5,a5,a4
20405518:	078e                	slli	a5,a5,0x3
2040551a:	97b6                	add	a5,a5,a3
2040551c:	0807a423          	sw	zero,136(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405520:	fe842783          	lw	a5,-24(s0)
20405524:	0785                	addi	a5,a5,1
20405526:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2040552a:	fe842703          	lw	a4,-24(s0)
2040552e:	3ff00793          	li	a5,1023
20405532:	f8e7d4e3          	bge	a5,a4,204054ba <__metal_driver_riscv_plic0_init+0x64>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20405536:	4601                	li	a2,0
20405538:	fec42583          	lw	a1,-20(s0)
2040553c:	fcc42503          	lw	a0,-52(s0)
20405540:	c99ff0ef          	jal	ra,204051d8 <__metal_plic0_set_threshold>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20405544:	fdc42783          	lw	a5,-36(s0)
20405548:	439c                	lw	a5,0(a5)
2040554a:	4fdc                	lw	a5,28(a5)
2040554c:	fe442683          	lw	a3,-28(s0)
20405550:	4601                	li	a2,0
20405552:	fd842583          	lw	a1,-40(s0)
20405556:	fdc42503          	lw	a0,-36(s0)
2040555a:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
2040555c:	fdc42783          	lw	a5,-36(s0)
20405560:	439c                	lw	a5,0(a5)
20405562:	4fd8                	lw	a4,28(a5)
20405564:	fe442683          	lw	a3,-28(s0)
20405568:	204057b7          	lui	a5,0x20405
2040556c:	3aa78613          	addi	a2,a5,938 # 204053aa <__metal_plic0_handler>
20405570:	fd842583          	lw	a1,-40(s0)
20405574:	fdc42503          	lw	a0,-36(s0)
20405578:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
2040557a:	fdc42783          	lw	a5,-36(s0)
2040557e:	439c                	lw	a5,0(a5)
20405580:	53dc                	lw	a5,36(a5)
20405582:	fd842583          	lw	a1,-40(s0)
20405586:	fdc42503          	lw	a0,-36(s0)
2040558a:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2040558c:	fec42783          	lw	a5,-20(s0)
20405590:	0785                	addi	a5,a5,1
20405592:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20405596:	fec42783          	lw	a5,-20(s0)
2040559a:	eef050e3          	blez	a5,2040547a <__metal_driver_riscv_plic0_init+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
2040559e:	fe442783          	lw	a5,-28(s0)
204055a2:	4705                	li	a4,1
204055a4:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
204055a6:	0001                	nop
204055a8:	50f2                	lw	ra,60(sp)
204055aa:	5462                	lw	s0,56(sp)
204055ac:	6121                	addi	sp,sp,64
204055ae:	8082                	ret

204055b0 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
204055b0:	7179                	addi	sp,sp,-48
204055b2:	d606                	sw	ra,44(sp)
204055b4:	d422                	sw	s0,40(sp)
204055b6:	1800                	addi	s0,sp,48
204055b8:	fca42e23          	sw	a0,-36(s0)
204055bc:	fcb42c23          	sw	a1,-40(s0)
204055c0:	fcc42a23          	sw	a2,-44(s0)
204055c4:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204055c8:	fdc42783          	lw	a5,-36(s0)
204055cc:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204055d0:	fdc42503          	lw	a0,-36(s0)
204055d4:	acbff0ef          	jal	ra,2040509e <__metal_driver_sifive_plic0_num_interrupts>
204055d8:	872a                	mv	a4,a0
204055da:	fd842783          	lw	a5,-40(s0)
204055de:	00e7c463          	blt	a5,a4,204055e6 <__metal_driver_riscv_plic0_register+0x36>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
204055e2:	57fd                	li	a5,-1
204055e4:	a051                	j	20405668 <__metal_driver_riscv_plic0_register+0xb8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
204055e6:	fd442783          	lw	a5,-44(s0)
204055ea:	cf9d                	beqz	a5,20405628 <__metal_driver_riscv_plic0_register+0x78>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
204055ec:	4609                	li	a2,2
204055ee:	fd842583          	lw	a1,-40(s0)
204055f2:	fdc42503          	lw	a0,-36(s0)
204055f6:	c63ff0ef          	jal	ra,20405258 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
204055fa:	fec42703          	lw	a4,-20(s0)
204055fe:	fd842783          	lw	a5,-40(s0)
20405602:	078a                	slli	a5,a5,0x2
20405604:	97ba                	add	a5,a5,a4
20405606:	fd442703          	lw	a4,-44(s0)
2040560a:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
2040560c:	fec42683          	lw	a3,-20(s0)
20405610:	fd842703          	lw	a4,-40(s0)
20405614:	87ba                	mv	a5,a4
20405616:	0786                	slli	a5,a5,0x1
20405618:	97ba                	add	a5,a5,a4
2040561a:	078e                	slli	a5,a5,0x3
2040561c:	97b6                	add	a5,a5,a3
2040561e:	fd042703          	lw	a4,-48(s0)
20405622:	08e7a423          	sw	a4,136(a5)
20405626:	a081                	j	20405666 <__metal_driver_riscv_plic0_register+0xb6>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20405628:	4605                	li	a2,1
2040562a:	fd842583          	lw	a1,-40(s0)
2040562e:	fdc42503          	lw	a0,-36(s0)
20405632:	c27ff0ef          	jal	ra,20405258 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20405636:	fec42703          	lw	a4,-20(s0)
2040563a:	fd842783          	lw	a5,-40(s0)
2040563e:	078a                	slli	a5,a5,0x2
20405640:	97ba                	add	a5,a5,a4
20405642:	20405737          	lui	a4,0x20405
20405646:	39270713          	addi	a4,a4,914 # 20405392 <__metal_plic0_default_handler>
2040564a:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
2040564c:	fec42683          	lw	a3,-20(s0)
20405650:	fd842703          	lw	a4,-40(s0)
20405654:	87ba                	mv	a5,a4
20405656:	0786                	slli	a5,a5,0x1
20405658:	97ba                	add	a5,a5,a4
2040565a:	078e                	slli	a5,a5,0x3
2040565c:	97b6                	add	a5,a5,a3
2040565e:	fd042703          	lw	a4,-48(s0)
20405662:	08e7a223          	sw	a4,132(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20405666:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:185
}
20405668:	853e                	mv	a0,a5
2040566a:	50b2                	lw	ra,44(sp)
2040566c:	5422                	lw	s0,40(sp)
2040566e:	6145                	addi	sp,sp,48
20405670:	8082                	ret

20405672 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20405672:	7179                	addi	sp,sp,-48
20405674:	d606                	sw	ra,44(sp)
20405676:	d422                	sw	s0,40(sp)
20405678:	1800                	addi	s0,sp,48
2040567a:	fca42e23          	sw	a0,-36(s0)
2040567e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405682:	fdc42783          	lw	a5,-36(s0)
20405686:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040568a:	fdc42503          	lw	a0,-36(s0)
2040568e:	a11ff0ef          	jal	ra,2040509e <__metal_driver_sifive_plic0_num_interrupts>
20405692:	872a                	mv	a4,a0
20405694:	fd842783          	lw	a5,-40(s0)
20405698:	00e7c463          	blt	a5,a4,204056a0 <__metal_driver_riscv_plic0_enable+0x2e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2040569c:	57fd                	li	a5,-1
2040569e:	a829                	j	204056b8 <__metal_driver_riscv_plic0_enable+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
204056a0:	880fe0ef          	jal	ra,20403720 <__metal_myhart_id>
204056a4:	87aa                	mv	a5,a0
204056a6:	4685                	li	a3,1
204056a8:	fd842603          	lw	a2,-40(s0)
204056ac:	85be                	mv	a1,a5
204056ae:	fec42503          	lw	a0,-20(s0)
204056b2:	c3dff0ef          	jal	ra,204052ee <__metal_plic0_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
204056b6:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:197
}
204056b8:	853e                	mv	a0,a5
204056ba:	50b2                	lw	ra,44(sp)
204056bc:	5422                	lw	s0,40(sp)
204056be:	6145                	addi	sp,sp,48
204056c0:	8082                	ret

204056c2 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
204056c2:	7179                	addi	sp,sp,-48
204056c4:	d606                	sw	ra,44(sp)
204056c6:	d422                	sw	s0,40(sp)
204056c8:	1800                	addi	s0,sp,48
204056ca:	fca42e23          	sw	a0,-36(s0)
204056ce:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204056d2:	fdc42783          	lw	a5,-36(s0)
204056d6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204056da:	fdc42503          	lw	a0,-36(s0)
204056de:	9c1ff0ef          	jal	ra,2040509e <__metal_driver_sifive_plic0_num_interrupts>
204056e2:	872a                	mv	a4,a0
204056e4:	fd842783          	lw	a5,-40(s0)
204056e8:	00e7c463          	blt	a5,a4,204056f0 <__metal_driver_riscv_plic0_disable+0x2e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
204056ec:	57fd                	li	a5,-1
204056ee:	a829                	j	20405708 <__metal_driver_riscv_plic0_disable+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
204056f0:	830fe0ef          	jal	ra,20403720 <__metal_myhart_id>
204056f4:	87aa                	mv	a5,a0
204056f6:	4681                	li	a3,0
204056f8:	fd842603          	lw	a2,-40(s0)
204056fc:	85be                	mv	a1,a5
204056fe:	fec42503          	lw	a0,-20(s0)
20405702:	bedff0ef          	jal	ra,204052ee <__metal_plic0_enable>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20405706:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:208
}
20405708:	853e                	mv	a0,a5
2040570a:	50b2                	lw	ra,44(sp)
2040570c:	5422                	lw	s0,40(sp)
2040570e:	6145                	addi	sp,sp,48
20405710:	8082                	ret

20405712 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405712:	1101                	addi	sp,sp,-32
20405714:	ce06                	sw	ra,28(sp)
20405716:	cc22                	sw	s0,24(sp)
20405718:	1000                	addi	s0,sp,32
2040571a:	fea42623          	sw	a0,-20(s0)
2040571e:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20405722:	ffffd0ef          	jal	ra,20403720 <__metal_myhart_id>
20405726:	87aa                	mv	a5,a0
20405728:	fe842603          	lw	a2,-24(s0)
2040572c:	85be                	mv	a1,a5
2040572e:	fec42503          	lw	a0,-20(s0)
20405732:	aa7ff0ef          	jal	ra,204051d8 <__metal_plic0_set_threshold>
20405736:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20405738:	853e                	mv	a0,a5
2040573a:	40f2                	lw	ra,28(sp)
2040573c:	4462                	lw	s0,24(sp)
2040573e:	6105                	addi	sp,sp,32
20405740:	8082                	ret

20405742 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20405742:	1101                	addi	sp,sp,-32
20405744:	ce06                	sw	ra,28(sp)
20405746:	cc22                	sw	s0,24(sp)
20405748:	1000                	addi	s0,sp,32
2040574a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
2040574e:	fd3fd0ef          	jal	ra,20403720 <__metal_myhart_id>
20405752:	87aa                	mv	a5,a0
20405754:	85be                	mv	a1,a5
20405756:	fec42503          	lw	a0,-20(s0)
2040575a:	ac5ff0ef          	jal	ra,2040521e <__metal_plic0_get_threshold>
2040575e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:219
}
20405760:	853e                	mv	a0,a5
20405762:	40f2                	lw	ra,28(sp)
20405764:	4462                	lw	s0,24(sp)
20405766:	6105                	addi	sp,sp,32
20405768:	8082                	ret

2040576a <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
2040576a:	7179                	addi	sp,sp,-48
2040576c:	d606                	sw	ra,44(sp)
2040576e:	d422                	sw	s0,40(sp)
20405770:	1800                	addi	s0,sp,48
20405772:	fca42e23          	sw	a0,-36(s0)
20405776:	fcb42c23          	sw	a1,-40(s0)
2040577a:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
2040577e:	fe042223          	sw	zero,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405782:	fdc42783          	lw	a5,-36(s0)
20405786:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040578a:	fdc42503          	lw	a0,-36(s0)
2040578e:	911ff0ef          	jal	ra,2040509e <__metal_driver_sifive_plic0_num_interrupts>
20405792:	872a                	mv	a4,a0
20405794:	fd442783          	lw	a5,-44(s0)
20405798:	00e7c863          	blt	a5,a4,204057a8 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2040579c:	57fd                	li	a5,-1
2040579e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
204057a2:	fe442783          	lw	a5,-28(s0)
204057a6:	a899                	j	204057fc <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
204057a8:	fe042623          	sw	zero,-20(s0)
204057ac:	a099                	j	204057f2 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
204057ae:	fec42783          	lw	a5,-20(s0)
204057b2:	c795                	beqz	a5,204057de <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
204057b4:	4685                	li	a3,1
204057b6:	fd442603          	lw	a2,-44(s0)
204057ba:	fec42583          	lw	a1,-20(s0)
204057be:	fe842503          	lw	a0,-24(s0)
204057c2:	b2dff0ef          	jal	ra,204052ee <__metal_plic0_enable>
204057c6:	87aa                	mv	a5,a0
204057c8:	0017f713          	andi	a4,a5,1
204057cc:	fec42783          	lw	a5,-20(s0)
204057d0:	00f71733          	sll	a4,a4,a5
204057d4:	fe442783          	lw	a5,-28(s0)
204057d8:	8fd9                	or	a5,a5,a4
204057da:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204057de:	fec42783          	lw	a5,-20(s0)
204057e2:	0785                	addi	a5,a5,1
204057e4:	fef42623          	sw	a5,-20(s0)
204057e8:	fd842783          	lw	a5,-40(s0)
204057ec:	8385                	srli	a5,a5,0x1
204057ee:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
204057f2:	fd842783          	lw	a5,-40(s0)
204057f6:	ffc5                	bnez	a5,204057ae <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
204057f8:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
204057fc:	853e                	mv	a0,a5
204057fe:	50b2                	lw	ra,44(sp)
20405800:	5422                	lw	s0,40(sp)
20405802:	6145                	addi	sp,sp,48
20405804:	8082                	ret

20405806 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20405806:	7179                	addi	sp,sp,-48
20405808:	d606                	sw	ra,44(sp)
2040580a:	d422                	sw	s0,40(sp)
2040580c:	1800                	addi	s0,sp,48
2040580e:	fca42e23          	sw	a0,-36(s0)
20405812:	fcb42c23          	sw	a1,-40(s0)
20405816:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2040581a:	fe042223          	sw	zero,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040581e:	fdc42783          	lw	a5,-36(s0)
20405822:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405826:	fdc42503          	lw	a0,-36(s0)
2040582a:	875ff0ef          	jal	ra,2040509e <__metal_driver_sifive_plic0_num_interrupts>
2040582e:	872a                	mv	a4,a0
20405830:	fd442783          	lw	a5,-44(s0)
20405834:	00e7c863          	blt	a5,a4,20405844 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20405838:	57fd                	li	a5,-1
2040583a:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
2040583e:	fe442783          	lw	a5,-28(s0)
20405842:	a899                	j	20405898 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20405844:	fe042623          	sw	zero,-20(s0)
20405848:	a099                	j	2040588e <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2040584a:	fec42783          	lw	a5,-20(s0)
2040584e:	c795                	beqz	a5,2040587a <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20405850:	4681                	li	a3,0
20405852:	fd442603          	lw	a2,-44(s0)
20405856:	fec42583          	lw	a1,-20(s0)
2040585a:	fe842503          	lw	a0,-24(s0)
2040585e:	a91ff0ef          	jal	ra,204052ee <__metal_plic0_enable>
20405862:	87aa                	mv	a5,a0
20405864:	0017f713          	andi	a4,a5,1
20405868:	fec42783          	lw	a5,-20(s0)
2040586c:	00f71733          	sll	a4,a4,a5
20405870:	fe442783          	lw	a5,-28(s0)
20405874:	8fd9                	or	a5,a5,a4
20405876:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040587a:	fec42783          	lw	a5,-20(s0)
2040587e:	0785                	addi	a5,a5,1
20405880:	fef42623          	sw	a5,-20(s0)
20405884:	fd842783          	lw	a5,-40(s0)
20405888:	8385                	srli	a5,a5,0x1
2040588a:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
2040588e:	fd842783          	lw	a5,-40(s0)
20405892:	ffc5                	bnez	a5,2040584a <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405894:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20405898:	853e                	mv	a0,a5
2040589a:	50b2                	lw	ra,44(sp)
2040589c:	5422                	lw	s0,40(sp)
2040589e:	6145                	addi	sp,sp,48
204058a0:	8082                	ret

204058a2 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
204058a2:	7179                	addi	sp,sp,-48
204058a4:	d606                	sw	ra,44(sp)
204058a6:	d422                	sw	s0,40(sp)
204058a8:	1800                	addi	s0,sp,48
204058aa:	fca42e23          	sw	a0,-36(s0)
204058ae:	fcb42c23          	sw	a1,-40(s0)
204058b2:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
204058b6:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
204058ba:	fe042623          	sw	zero,-20(s0)
204058be:	a091                	j	20405902 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
204058c0:	fec42783          	lw	a5,-20(s0)
204058c4:	c78d                	beqz	a5,204058ee <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
204058c6:	fd442603          	lw	a2,-44(s0)
204058ca:	fec42583          	lw	a1,-20(s0)
204058ce:	fdc42503          	lw	a0,-36(s0)
204058d2:	907ff0ef          	jal	ra,204051d8 <__metal_plic0_set_threshold>
204058d6:	87aa                	mv	a5,a0
204058d8:	0017f713          	andi	a4,a5,1
204058dc:	fec42783          	lw	a5,-20(s0)
204058e0:	00f71733          	sll	a4,a4,a5
204058e4:	fe842783          	lw	a5,-24(s0)
204058e8:	8fd9                	or	a5,a5,a4
204058ea:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204058ee:	fec42783          	lw	a5,-20(s0)
204058f2:	0785                	addi	a5,a5,1
204058f4:	fef42623          	sw	a5,-20(s0)
204058f8:	fd842783          	lw	a5,-40(s0)
204058fc:	8385                	srli	a5,a5,0x1
204058fe:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20405902:	fd842783          	lw	a5,-40(s0)
20405906:	ffcd                	bnez	a5,204058c0 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20405908:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:281
}
2040590c:	853e                	mv	a0,a5
2040590e:	50b2                	lw	ra,44(sp)
20405910:	5422                	lw	s0,40(sp)
20405912:	6145                	addi	sp,sp,48
20405914:	8082                	ret

20405916 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20405916:	1101                	addi	sp,sp,-32
20405918:	ce06                	sw	ra,28(sp)
2040591a:	cc22                	sw	s0,24(sp)
2040591c:	1000                	addi	s0,sp,32
2040591e:	fea42623          	sw	a0,-20(s0)
20405922:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20405926:	fe842583          	lw	a1,-24(s0)
2040592a:	fec42503          	lw	a0,-20(s0)
2040592e:	8f1ff0ef          	jal	ra,2040521e <__metal_plic0_get_threshold>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20405932:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/riscv_plic0.c:287
}
20405934:	853e                	mv	a0,a5
20405936:	40f2                	lw	ra,28(sp)
20405938:	4462                	lw	s0,24(sp)
2040593a:	6105                	addi	sp,sp,32
2040593c:	8082                	ret

2040593e <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
2040593e:	1101                	addi	sp,sp,-32
20405940:	ce22                	sw	s0,28(sp)
20405942:	1000                	addi	s0,sp,32
20405944:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20405948:	800007b7          	lui	a5,0x80000
2040594c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdf5c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1039
}
20405950:	853e                	mv	a0,a5
20405952:	4472                	lw	s0,28(sp)
20405954:	6105                	addi	sp,sp,32
20405956:	8082                	ret

20405958 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20405958:	1101                	addi	sp,sp,-32
2040595a:	ce22                	sw	s0,28(sp)
2040595c:	1000                	addi	s0,sp,32
2040595e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405962:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1044
}
20405966:	853e                	mv	a0,a5
20405968:	4472                	lw	s0,28(sp)
2040596a:	6105                	addi	sp,sp,32
2040596c:	8082                	ret

2040596e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
2040596e:	1101                	addi	sp,sp,-32
20405970:	ce22                	sw	s0,28(sp)
20405972:	1000                	addi	s0,sp,32
20405974:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20405978:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1054
}
2040597a:	853e                	mv	a0,a5
2040597c:	4472                	lw	s0,28(sp)
2040597e:	6105                	addi	sp,sp,32
20405980:	8082                	ret

20405982 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405982:	1141                	addi	sp,sp,-16
20405984:	c622                	sw	s0,12(sp)
20405986:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405988:	204017b7          	lui	a5,0x20401
2040598c:	00478793          	addi	a5,a5,4 # 20401004 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1171
}
20405990:	853e                	mv	a0,a5
20405992:	4432                	lw	s0,12(sp)
20405994:	0141                	addi	sp,sp,16
20405996:	8082                	ret

20405998 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405998:	7139                	addi	sp,sp,-64
2040599a:	de06                	sw	ra,60(sp)
2040599c:	dc22                	sw	s0,56(sp)
2040599e:	0080                	addi	s0,sp,64
204059a0:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
204059a4:	fcc42503          	lw	a0,-52(s0)
204059a8:	3f59                	jal	2040593e <__metal_driver_sifive_fe310_g000_hfrosc_ref>
204059aa:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
204059ae:	fcc42503          	lw	a0,-52(s0)
204059b2:	3f75                	jal	2040596e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
204059b4:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
204059b8:	fcc42503          	lw	a0,-52(s0)
204059bc:	3f71                	jal	20405958 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
204059be:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204059c2:	37c1                	jal	20405982 <__metal_driver_sifive_fe310_g000_prci_vtable>
204059c4:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
204059c8:	fe042783          	lw	a5,-32(s0)
204059cc:	439c                	lw	a5,0(a5)
204059ce:	fe842583          	lw	a1,-24(s0)
204059d2:	fe442503          	lw	a0,-28(s0)
204059d6:	9782                	jalr	a5
204059d8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
204059dc:	fdc42703          	lw	a4,-36(s0)
204059e0:	400007b7          	lui	a5,0x40000
204059e4:	8ff9                	and	a5,a5,a4
204059e6:	e399                	bnez	a5,204059ec <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
204059e8:	57fd                	li	a5,-1
204059ea:	a025                	j	20405a12 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
204059ec:	fdc42783          	lw	a5,-36(s0)
204059f0:	0007c463          	bltz	a5,204059f8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
204059f4:	57fd                	li	a5,-1
204059f6:	a831                	j	20405a12 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
204059f8:	fec42503          	lw	a0,-20(s0)
204059fc:	0f9010ef          	jal	ra,204072f4 <metal_clock_get_rate_hz>
20405a00:	87aa                	mv	a5,a0
20405a02:	873e                	mv	a4,a5
20405a04:	fdc42783          	lw	a5,-36(s0)
20405a08:	03f7f793          	andi	a5,a5,63
20405a0c:	0785                	addi	a5,a5,1
20405a0e:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405a12:	853e                	mv	a0,a5
20405a14:	50f2                	lw	ra,60(sp)
20405a16:	5462                	lw	s0,56(sp)
20405a18:	6121                	addi	sp,sp,64
20405a1a:	8082                	ret

20405a1c <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405a1c:	1101                	addi	sp,sp,-32
20405a1e:	ce06                	sw	ra,28(sp)
20405a20:	cc22                	sw	s0,24(sp)
20405a22:	1000                	addi	s0,sp,32
20405a24:	fea42623          	sw	a0,-20(s0)
20405a28:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20405a2c:	fec42503          	lw	a0,-20(s0)
20405a30:	37a5                	jal	20405998 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405a32:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405a34:	853e                	mv	a0,a5
20405a36:	40f2                	lw	ra,28(sp)
20405a38:	4462                	lw	s0,24(sp)
20405a3a:	6105                	addi	sp,sp,32
20405a3c:	8082                	ret

20405a3e <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1060
{
20405a3e:	1101                	addi	sp,sp,-32
20405a40:	ce22                	sw	s0,28(sp)
20405a42:	1000                	addi	s0,sp,32
20405a44:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20405a48:	800007b7          	lui	a5,0x80000
20405a4c:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdf50>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1062
}
20405a50:	853e                	mv	a0,a5
20405a52:	4472                	lw	s0,28(sp)
20405a54:	6105                	addi	sp,sp,32
20405a56:	8082                	ret

20405a58 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1065
{
20405a58:	1101                	addi	sp,sp,-32
20405a5a:	ce22                	sw	s0,28(sp)
20405a5c:	1000                	addi	s0,sp,32
20405a5e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405a62:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1067
}
20405a66:	853e                	mv	a0,a5
20405a68:	4472                	lw	s0,28(sp)
20405a6a:	6105                	addi	sp,sp,32
20405a6c:	8082                	ret

20405a6e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1070
{
20405a6e:	1101                	addi	sp,sp,-32
20405a70:	ce22                	sw	s0,28(sp)
20405a72:	1000                	addi	s0,sp,32
20405a74:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20405a78:	4791                	li	a5,4
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1072
}
20405a7a:	853e                	mv	a0,a5
20405a7c:	4472                	lw	s0,28(sp)
20405a7e:	6105                	addi	sp,sp,32
20405a80:	8082                	ret

20405a82 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1169
{
20405a82:	1141                	addi	sp,sp,-16
20405a84:	c622                	sw	s0,12(sp)
20405a86:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405a88:	204017b7          	lui	a5,0x20401
20405a8c:	00478793          	addi	a5,a5,4 # 20401004 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1171
}
20405a90:	853e                	mv	a0,a5
20405a92:	4432                	lw	s0,12(sp)
20405a94:	0141                	addi	sp,sp,16
20405a96:	8082                	ret

20405a98 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405a98:	7139                	addi	sp,sp,-64
20405a9a:	de06                	sw	ra,60(sp)
20405a9c:	dc22                	sw	s0,56(sp)
20405a9e:	0080                	addi	s0,sp,64
20405aa0:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405aa4:	fcc42503          	lw	a0,-52(s0)
20405aa8:	3f59                	jal	20405a3e <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20405aaa:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20405aae:	fcc42503          	lw	a0,-52(s0)
20405ab2:	3f75                	jal	20405a6e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20405ab4:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405ab8:	fcc42503          	lw	a0,-52(s0)
20405abc:	3f71                	jal	20405a58 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20405abe:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405ac2:	37c1                	jal	20405a82 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405ac4:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405ac8:	fe042783          	lw	a5,-32(s0)
20405acc:	439c                	lw	a5,0(a5)
20405ace:	fe842583          	lw	a1,-24(s0)
20405ad2:	fe442503          	lw	a0,-28(s0)
20405ad6:	9782                	jalr	a5
20405ad8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20405adc:	fdc42703          	lw	a4,-36(s0)
20405ae0:	400007b7          	lui	a5,0x40000
20405ae4:	8ff9                	and	a5,a5,a4
20405ae6:	e399                	bnez	a5,20405aec <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20405ae8:	57fd                	li	a5,-1
20405aea:	a821                	j	20405b02 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20405aec:	fdc42783          	lw	a5,-36(s0)
20405af0:	0007c463          	bltz	a5,20405af8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20405af4:	57fd                	li	a5,-1
20405af6:	a031                	j	20405b02 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20405af8:	fec42503          	lw	a0,-20(s0)
20405afc:	7f8010ef          	jal	ra,204072f4 <metal_clock_get_rate_hz>
20405b00:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20405b02:	853e                	mv	a0,a5
20405b04:	50f2                	lw	ra,60(sp)
20405b06:	5462                	lw	s0,56(sp)
20405b08:	6121                	addi	sp,sp,64
20405b0a:	8082                	ret

20405b0c <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405b0c:	1101                	addi	sp,sp,-32
20405b0e:	ce06                	sw	ra,28(sp)
20405b10:	cc22                	sw	s0,24(sp)
20405b12:	1000                	addi	s0,sp,32
20405b14:	fea42623          	sw	a0,-20(s0)
20405b18:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20405b1c:	fec42503          	lw	a0,-20(s0)
20405b20:	3fa5                	jal	20405a98 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20405b22:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20405b24:	853e                	mv	a0,a5
20405b26:	40f2                	lw	ra,28(sp)
20405b28:	4462                	lw	s0,24(sp)
20405b2a:	6105                	addi	sp,sp,32
20405b2c:	8082                	ret

20405b2e <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1121
{
20405b2e:	1101                	addi	sp,sp,-32
20405b30:	ce22                	sw	s0,28(sp)
20405b32:	1000                	addi	s0,sp,32
20405b34:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20405b38:	800007b7          	lui	a5,0x80000
20405b3c:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xffffe668>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1123
}
20405b40:	853e                	mv	a0,a5
20405b42:	4472                	lw	s0,28(sp)
20405b44:	6105                	addi	sp,sp,32
20405b46:	8082                	ret

20405b48 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1126
{
20405b48:	1101                	addi	sp,sp,-32
20405b4a:	ce22                	sw	s0,28(sp)
20405b4c:	1000                	addi	s0,sp,32
20405b4e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20405b52:	800007b7          	lui	a5,0x80000
20405b56:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xffffe674>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1128
}
20405b5a:	853e                	mv	a0,a5
20405b5c:	4472                	lw	s0,28(sp)
20405b5e:	6105                	addi	sp,sp,32
20405b60:	8082                	ret

20405b62 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1131
{
20405b62:	1101                	addi	sp,sp,-32
20405b64:	ce22                	sw	s0,28(sp)
20405b66:	1000                	addi	s0,sp,32
20405b68:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405b6c:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1133
}
20405b70:	853e                	mv	a0,a5
20405b72:	4472                	lw	s0,28(sp)
20405b74:	6105                	addi	sp,sp,32
20405b76:	8082                	ret

20405b78 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1136
{
20405b78:	1101                	addi	sp,sp,-32
20405b7a:	ce22                	sw	s0,28(sp)
20405b7c:	1000                	addi	s0,sp,32
20405b7e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405b82:	47b1                	li	a5,12
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1138
}
20405b84:	853e                	mv	a0,a5
20405b86:	4472                	lw	s0,28(sp)
20405b88:	6105                	addi	sp,sp,32
20405b8a:	8082                	ret

20405b8c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1141
{
20405b8c:	1141                	addi	sp,sp,-16
20405b8e:	c622                	sw	s0,12(sp)
20405b90:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405b92:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1143
}
20405b96:	853e                	mv	a0,a5
20405b98:	4432                	lw	s0,12(sp)
20405b9a:	0141                	addi	sp,sp,16
20405b9c:	8082                	ret

20405b9e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1146
{
20405b9e:	1141                	addi	sp,sp,-16
20405ba0:	c622                	sw	s0,12(sp)
20405ba2:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405ba4:	47a1                	li	a5,8
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1148
}
20405ba6:	853e                	mv	a0,a5
20405ba8:	4432                	lw	s0,12(sp)
20405baa:	0141                	addi	sp,sp,16
20405bac:	8082                	ret

20405bae <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1151
{
20405bae:	1141                	addi	sp,sp,-16
20405bb0:	c622                	sw	s0,12(sp)
20405bb2:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1152
		return 16000000;
20405bb4:	00f427b7          	lui	a5,0xf42
20405bb8:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1153
}
20405bbc:	853e                	mv	a0,a5
20405bbe:	4432                	lw	s0,12(sp)
20405bc0:	0141                	addi	sp,sp,16
20405bc2:	8082                	ret

20405bc4 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1159
{
20405bc4:	1141                	addi	sp,sp,-16
20405bc6:	c622                	sw	s0,12(sp)
20405bc8:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405bca:	100087b7          	lui	a5,0x10008
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1161
}
20405bce:	853e                	mv	a0,a5
20405bd0:	4432                	lw	s0,12(sp)
20405bd2:	0141                	addi	sp,sp,16
20405bd4:	8082                	ret

20405bd6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1169
{
20405bd6:	1141                	addi	sp,sp,-16
20405bd8:	c622                	sw	s0,12(sp)
20405bda:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405bdc:	204017b7          	lui	a5,0x20401
20405be0:	00478793          	addi	a5,a5,4 # 20401004 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1171
}
20405be4:	853e                	mv	a0,a5
20405be6:	4432                	lw	s0,12(sp)
20405be8:	0141                	addi	sp,sp,16
20405bea:	8082                	ret

20405bec <get_pll_config_freq>:
get_pll_config_freq():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20405bec:	1101                	addi	sp,sp,-32
20405bee:	ce22                	sw	s0,28(sp)
20405bf0:	1000                	addi	s0,sp,32
20405bf2:	fea42623          	sw	a0,-20(s0)
20405bf6:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20405bfa:	fe842783          	lw	a5,-24(s0)
20405bfe:	479c                	lw	a5,8(a5)
20405c00:	fec42703          	lw	a4,-20(s0)
20405c04:	00f76963          	bltu	a4,a5,20405c16 <get_pll_config_freq+0x2a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20405c08:	fe842783          	lw	a5,-24(s0)
20405c0c:	47dc                	lw	a5,12(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20405c0e:	fec42703          	lw	a4,-20(s0)
20405c12:	00e7f463          	bgeu	a5,a4,20405c1a <get_pll_config_freq+0x2e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20405c16:	57fd                	li	a5,-1
20405c18:	a829                	j	20405c32 <get_pll_config_freq+0x46>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20405c1a:	fe842783          	lw	a5,-24(s0)
20405c1e:	4398                	lw	a4,0(a5)
20405c20:	fec42783          	lw	a5,-20(s0)
20405c24:	02f70733          	mul	a4,a4,a5
20405c28:	fe842783          	lw	a5,-24(s0)
20405c2c:	43dc                	lw	a5,4(a5)
20405c2e:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20405c32:	853e                	mv	a0,a5
20405c34:	4472                	lw	s0,28(sp)
20405c36:	6105                	addi	sp,sp,32
20405c38:	8082                	ret

20405c3a <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20405c3a:	7139                	addi	sp,sp,-64
20405c3c:	de06                	sw	ra,60(sp)
20405c3e:	dc22                	sw	s0,56(sp)
20405c40:	0080                	addi	s0,sp,64
20405c42:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405c46:	fcc42783          	lw	a5,-52(s0)
20405c4a:	853e                	mv	a0,a5
20405c4c:	3df5                	jal	20405b48 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405c4e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20405c52:	3fb1                	jal	20405bae <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405c54:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405c58:	3799                	jal	20405b9e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405c5a:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405c5e:	379d                	jal	20405bc4 <__metal_driver_sifive_fe310_g000_prci_base>
20405c60:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405c64:	fe042703          	lw	a4,-32(s0)
20405c68:	fe442783          	lw	a5,-28(s0)
20405c6c:	97ba                	add	a5,a5,a4
20405c6e:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20405c72:	fcc42783          	lw	a5,-52(s0)
20405c76:	43dc                	lw	a5,4(a5)
20405c78:	853e                	mv	a0,a5
20405c7a:	5e4010ef          	jal	ra,2040725e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20405c7e:	fdc42783          	lw	a5,-36(s0)
20405c82:	4398                	lw	a4,0(a5)
20405c84:	67c1                	lui	a5,0x10
20405c86:	8ff9                	and	a5,a5,a4
20405c88:	cb91                	beqz	a5,20405c9c <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405c8a:	fdc42783          	lw	a5,-36(s0)
20405c8e:	4398                	lw	a4,0(a5)
20405c90:	77c1                	lui	a5,0xffff0
20405c92:	17fd                	addi	a5,a5,-1
20405c94:	8f7d                	and	a4,a4,a5
20405c96:	fdc42783          	lw	a5,-36(s0)
20405c9a:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405c9c:	fec42783          	lw	a5,-20(s0)
20405ca0:	cb91                	beqz	a5,20405cb4 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405ca2:	fdc42783          	lw	a5,-36(s0)
20405ca6:	4398                	lw	a4,0(a5)
20405ca8:	000207b7          	lui	a5,0x20
20405cac:	8f5d                	or	a4,a4,a5
20405cae:	fdc42783          	lw	a5,-36(s0)
20405cb2:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405cb4:	fcc42783          	lw	a5,-52(s0)
20405cb8:	439c                	lw	a5,0(a5)
20405cba:	43d8                	lw	a4,4(a5)
20405cbc:	fcc42783          	lw	a5,-52(s0)
20405cc0:	fe842583          	lw	a1,-24(s0)
20405cc4:	853e                	mv	a0,a5
20405cc6:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20405cc8:	fcc42783          	lw	a5,-52(s0)
20405ccc:	479c                	lw	a5,8(a5)
20405cce:	853e                	mv	a0,a5
20405cd0:	58e010ef          	jal	ra,2040725e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20405cd4:	0001                	nop
20405cd6:	50f2                	lw	ra,60(sp)
20405cd8:	5462                	lw	s0,56(sp)
20405cda:	6121                	addi	sp,sp,64
20405cdc:	8082                	ret

20405cde <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20405cde:	711d                	addi	sp,sp,-96
20405ce0:	ce86                	sw	ra,92(sp)
20405ce2:	cca2                	sw	s0,88(sp)
20405ce4:	1080                	addi	s0,sp,96
20405ce6:	faa42623          	sw	a0,-84(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405cea:	fac42503          	lw	a0,-84(s0)
20405cee:	e5bff0ef          	jal	ra,20405b48 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405cf2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405cf6:	fac42503          	lw	a0,-84(s0)
20405cfa:	e35ff0ef          	jal	ra,20405b2e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405cfe:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405d02:	fac42503          	lw	a0,-84(s0)
20405d06:	e99ff0ef          	jal	ra,20405b9e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405d0a:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20405d0e:	fac42503          	lw	a0,-84(s0)
20405d12:	e7bff0ef          	jal	ra,20405b8c <__metal_driver_sifive_fe310_g000_pll_config_base>
20405d16:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405d1a:	fac42503          	lw	a0,-84(s0)
20405d1e:	e5bff0ef          	jal	ra,20405b78 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405d22:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20405d26:	fac42503          	lw	a0,-84(s0)
20405d2a:	e39ff0ef          	jal	ra,20405b62 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405d2e:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405d32:	3555                	jal	20405bd6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405d34:	fca42a23          	sw	a0,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20405d38:	fd442783          	lw	a5,-44(s0)
20405d3c:	439c                	lw	a5,0(a5)
20405d3e:	fe442583          	lw	a1,-28(s0)
20405d42:	fe042503          	lw	a0,-32(s0)
20405d46:	9782                	jalr	a5
20405d48:	fca42823          	sw	a0,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20405d4c:	fd442783          	lw	a5,-44(s0)
20405d50:	439c                	lw	a5,0(a5)
20405d52:	fdc42583          	lw	a1,-36(s0)
20405d56:	fd842503          	lw	a0,-40(s0)
20405d5a:	9782                	jalr	a5
20405d5c:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405d60:	fd042703          	lw	a4,-48(s0)
20405d64:	67c1                	lui	a5,0x10
20405d66:	8f7d                	and	a4,a4,a5
20405d68:	67c1                	lui	a5,0x10
20405d6a:	00f77863          	bgeu	a4,a5,20405d7a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20405d6e:	fe842503          	lw	a0,-24(s0)
20405d72:	582010ef          	jal	ra,204072f4 <metal_clock_get_rate_hz>
20405d76:	87aa                	mv	a5,a0
20405d78:	a8e1                	j	20405e50 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20405d7a:	fd042703          	lw	a4,-48(s0)
20405d7e:	000207b7          	lui	a5,0x20
20405d82:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20405d84:	000207b7          	lui	a5,0x20
20405d88:	00f76563          	bltu	a4,a5,20405d92 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20405d8c:	fec42783          	lw	a5,-20(s0)
20405d90:	a019                	j	20405d96 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20405d92:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20405d96:	853e                	mv	a0,a5
20405d98:	55c010ef          	jal	ra,204072f4 <metal_clock_get_rate_hz>
20405d9c:	fca42423          	sw	a0,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405da0:	fd042703          	lw	a4,-48(s0)
20405da4:	000407b7          	lui	a5,0x40
20405da8:	8f7d                	and	a4,a4,a5
20405daa:	000407b7          	lui	a5,0x40
20405dae:	00f76563          	bltu	a4,a5,20405db8 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xda>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20405db2:	fc842783          	lw	a5,-56(s0)
20405db6:	a869                	j	20405e50 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20405db8:	fd042783          	lw	a5,-48(s0)
20405dbc:	8b9d                	andi	a5,a5,7
20405dbe:	0785                	addi	a5,a5,1
20405dc0:	fcf42223          	sw	a5,-60(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20405dc4:	fd042783          	lw	a5,-48(s0)
20405dc8:	3f07f793          	andi	a5,a5,1008
20405dcc:	8391                	srli	a5,a5,0x4
20405dce:	0785                	addi	a5,a5,1
20405dd0:	0786                	slli	a5,a5,0x1
20405dd2:	fcf42023          	sw	a5,-64(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20405dd6:	fd042703          	lw	a4,-48(s0)
20405dda:	6785                	lui	a5,0x1
20405ddc:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405de0:	8f7d                	and	a4,a4,a5
20405de2:	3ff00793          	li	a5,1023
20405de6:	00e7e463          	bltu	a5,a4,20405dee <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x110>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20405dea:	57fd                	li	a5,-1
20405dec:	a095                	j	20405e50 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20405dee:	fd042703          	lw	a4,-48(s0)
20405df2:	6785                	lui	a5,0x1
20405df4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405df8:	8ff9                	and	a5,a5,a4
20405dfa:	83a9                	srli	a5,a5,0xa
20405dfc:	4705                	li	a4,1
20405dfe:	00f717b3          	sll	a5,a4,a5
20405e02:	faf42e23          	sw	a5,-68(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20405e06:	fc842703          	lw	a4,-56(s0)
20405e0a:	fc442783          	lw	a5,-60(s0)
20405e0e:	02f74733          	div	a4,a4,a5
20405e12:	fc042783          	lw	a5,-64(s0)
20405e16:	02f70733          	mul	a4,a4,a5
20405e1a:	fbc42783          	lw	a5,-68(s0)
20405e1e:	02f747b3          	div	a5,a4,a5
20405e22:	faf42c23          	sw	a5,-72(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20405e26:	fcc42783          	lw	a5,-52(s0)
20405e2a:	1007f713          	andi	a4,a5,256
20405e2e:	0ff00793          	li	a5,255
20405e32:	00e7f563          	bgeu	a5,a4,20405e3c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x15e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20405e36:	fb842783          	lw	a5,-72(s0)
20405e3a:	a819                	j	20405e50 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20405e3c:	fb842703          	lw	a4,-72(s0)
20405e40:	fcc42783          	lw	a5,-52(s0)
20405e44:	03f7f793          	andi	a5,a5,63
20405e48:	0785                	addi	a5,a5,1
20405e4a:	0786                	slli	a5,a5,0x1
20405e4c:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20405e50:	853e                	mv	a0,a5
20405e52:	40f6                	lw	ra,92(sp)
20405e54:	4466                	lw	s0,88(sp)
20405e56:	6125                	addi	sp,sp,96
20405e58:	8082                	ret

20405e5a <find_closest_config>:
find_closest_config():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20405e5a:	7139                	addi	sp,sp,-64
20405e5c:	de06                	sw	ra,60(sp)
20405e5e:	dc22                	sw	s0,56(sp)
20405e60:	0080                	addi	s0,sp,64
20405e62:	fca42623          	sw	a0,-52(s0)
20405e66:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20405e6a:	57fd                	li	a5,-1
20405e6c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20405e70:	800007b7          	lui	a5,0x80000
20405e74:	fff7c793          	not	a5,a5
20405e78:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405e7c:	04300793          	li	a5,67
20405e80:	fef42223          	sw	a5,-28(s0)
20405e84:	a0b5                	j	20405ef0 <find_closest_config+0x96>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20405e86:	fcc42683          	lw	a3,-52(s0)
20405e8a:	fe442783          	lw	a5,-28(s0)
20405e8e:	00579713          	slli	a4,a5,0x5
20405e92:	204007b7          	lui	a5,0x20400
20405e96:	6a878793          	addi	a5,a5,1704 # 204006a8 <pll_configs>
20405e9a:	97ba                	add	a5,a5,a4
20405e9c:	85be                	mv	a1,a5
20405e9e:	8536                	mv	a0,a3
20405ea0:	d4dff0ef          	jal	ra,20405bec <get_pll_config_freq>
20405ea4:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20405ea8:	fe042703          	lw	a4,-32(s0)
20405eac:	57fd                	li	a5,-1
20405eae:	02f70c63          	beq	a4,a5,20405ee6 <find_closest_config+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20405eb2:	fe042703          	lw	a4,-32(s0)
20405eb6:	fc842783          	lw	a5,-56(s0)
20405eba:	8f1d                	sub	a4,a4,a5
20405ebc:	41f75793          	srai	a5,a4,0x1f
20405ec0:	8f3d                	xor	a4,a4,a5
20405ec2:	40f707b3          	sub	a5,a4,a5
20405ec6:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
20405eca:	fdc42703          	lw	a4,-36(s0)
20405ece:	fe842783          	lw	a5,-24(s0)
20405ed2:	00f75a63          	bge	a4,a5,20405ee6 <find_closest_config+0x8c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20405ed6:	fe442783          	lw	a5,-28(s0)
20405eda:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
20405ede:	fdc42783          	lw	a5,-36(s0)
20405ee2:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20405ee6:	fe442783          	lw	a5,-28(s0)
20405eea:	17fd                	addi	a5,a5,-1
20405eec:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405ef0:	fe442783          	lw	a5,-28(s0)
20405ef4:	f807d9e3          	bgez	a5,20405e86 <find_closest_config+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20405ef8:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20405efc:	853e                	mv	a0,a5
20405efe:	50f2                	lw	ra,60(sp)
20405f00:	5462                	lw	s0,56(sp)
20405f02:	6121                	addi	sp,sp,64
20405f04:	8082                	ret

20405f06 <configure_pll>:
configure_pll():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20405f06:	7179                	addi	sp,sp,-48
20405f08:	d606                	sw	ra,44(sp)
20405f0a:	d422                	sw	s0,40(sp)
20405f0c:	1800                	addi	s0,sp,48
20405f0e:	fca42e23          	sw	a0,-36(s0)
20405f12:	fcb42c23          	sw	a1,-40(s0)
20405f16:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20405f1a:	fdc42783          	lw	a5,-36(s0)
20405f1e:	439c                	lw	a5,0(a5)
20405f20:	ff87f713          	andi	a4,a5,-8
20405f24:	fdc42783          	lw	a5,-36(s0)
20405f28:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20405f2a:	fdc42783          	lw	a5,-36(s0)
20405f2e:	4398                	lw	a4,0(a5)
20405f30:	fd442783          	lw	a5,-44(s0)
20405f34:	4b9c                	lw	a5,16(a5)
20405f36:	8b9d                	andi	a5,a5,7
20405f38:	8f5d                	or	a4,a4,a5
20405f3a:	fdc42783          	lw	a5,-36(s0)
20405f3e:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405f40:	fdc42783          	lw	a5,-36(s0)
20405f44:	439c                	lw	a5,0(a5)
20405f46:	c0f7f713          	andi	a4,a5,-1009
20405f4a:	fdc42783          	lw	a5,-36(s0)
20405f4e:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20405f50:	fdc42783          	lw	a5,-36(s0)
20405f54:	4398                	lw	a4,0(a5)
20405f56:	fd442783          	lw	a5,-44(s0)
20405f5a:	4bdc                	lw	a5,20(a5)
20405f5c:	0792                	slli	a5,a5,0x4
20405f5e:	3f07f793          	andi	a5,a5,1008
20405f62:	8f5d                	or	a4,a4,a5
20405f64:	fdc42783          	lw	a5,-36(s0)
20405f68:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20405f6a:	fdc42783          	lw	a5,-36(s0)
20405f6e:	4398                	lw	a4,0(a5)
20405f70:	77fd                	lui	a5,0xfffff
20405f72:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd2ef>
20405f76:	8f7d                	and	a4,a4,a5
20405f78:	fdc42783          	lw	a5,-36(s0)
20405f7c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20405f7e:	fdc42783          	lw	a5,-36(s0)
20405f82:	4398                	lw	a4,0(a5)
20405f84:	fd442783          	lw	a5,-44(s0)
20405f88:	4f9c                	lw	a5,24(a5)
20405f8a:	00a79693          	slli	a3,a5,0xa
20405f8e:	6785                	lui	a5,0x1
20405f90:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405f94:	8ff5                	and	a5,a5,a3
20405f96:	8f5d                	or	a4,a4,a5
20405f98:	fdc42783          	lw	a5,-36(s0)
20405f9c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20405f9e:	fd442783          	lw	a5,-44(s0)
20405fa2:	4fdc                	lw	a5,28(a5)
20405fa4:	0207db63          	bgez	a5,20405fda <configure_pll+0xd4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20405fa8:	fd842783          	lw	a5,-40(s0)
20405fac:	439c                	lw	a5,0(a5)
20405fae:	1007e713          	ori	a4,a5,256
20405fb2:	fd842783          	lw	a5,-40(s0)
20405fb6:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405fb8:	fd842783          	lw	a5,-40(s0)
20405fbc:	439c                	lw	a5,0(a5)
20405fbe:	fc07f713          	andi	a4,a5,-64
20405fc2:	fd842783          	lw	a5,-40(s0)
20405fc6:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20405fc8:	fd842783          	lw	a5,-40(s0)
20405fcc:	439c                	lw	a5,0(a5)
20405fce:	0017e713          	ori	a4,a5,1
20405fd2:	fd842783          	lw	a5,-40(s0)
20405fd6:	c398                	sw	a4,0(a5)
20405fd8:	a82d                	j	20406012 <configure_pll+0x10c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20405fda:	fd842783          	lw	a5,-40(s0)
20405fde:	439c                	lw	a5,0(a5)
20405fe0:	eff7f713          	andi	a4,a5,-257
20405fe4:	fd842783          	lw	a5,-40(s0)
20405fe8:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405fea:	fd842783          	lw	a5,-40(s0)
20405fee:	439c                	lw	a5,0(a5)
20405ff0:	fc07f713          	andi	a4,a5,-64
20405ff4:	fd842783          	lw	a5,-40(s0)
20405ff8:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20405ffa:	fd842783          	lw	a5,-40(s0)
20405ffe:	4398                	lw	a4,0(a5)
20406000:	fd442783          	lw	a5,-44(s0)
20406004:	4fdc                	lw	a5,28(a5)
20406006:	03f7f793          	andi	a5,a5,63
2040600a:	8f5d                	or	a4,a4,a5
2040600c:	fd842783          	lw	a5,-40(s0)
20406010:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20406012:	fdc42783          	lw	a5,-36(s0)
20406016:	4398                	lw	a4,0(a5)
20406018:	fffc07b7          	lui	a5,0xfffc0
2040601c:	17fd                	addi	a5,a5,-1
2040601e:	8f7d                	and	a4,a4,a5
20406020:	fdc42783          	lw	a5,-36(s0)
20406024:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20406026:	fe040793          	addi	a5,s0,-32
2040602a:	863e                	mv	a2,a5
2040602c:	4585                	li	a1,1
2040602e:	800007b7          	lui	a5,0x80000
20406032:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe69c>
20406036:	c76fd0ef          	jal	ra,204034ac <__metal_driver_riscv_clint0_command_request>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2040603a:	fe042603          	lw	a2,-32(s0)
2040603e:	fe442683          	lw	a3,-28(s0)
20406042:	4511                	li	a0,4
20406044:	4581                	li	a1,0
20406046:	00a60733          	add	a4,a2,a0
2040604a:	883a                	mv	a6,a4
2040604c:	00c83833          	sltu	a6,a6,a2
20406050:	00b687b3          	add	a5,a3,a1
20406054:	00f806b3          	add	a3,a6,a5
20406058:	87b6                	mv	a5,a3
2040605a:	fee42423          	sw	a4,-24(s0)
2040605e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20406062:	a819                	j	20406078 <configure_pll+0x172>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20406064:	fe040793          	addi	a5,s0,-32
20406068:	863e                	mv	a2,a5
2040606a:	4585                	li	a1,1
2040606c:	800007b7          	lui	a5,0x80000
20406070:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe69c>
20406074:	c38fd0ef          	jal	ra,204034ac <__metal_driver_riscv_clint0_command_request>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20406078:	fe042703          	lw	a4,-32(s0)
2040607c:	fe442783          	lw	a5,-28(s0)
20406080:	fec42683          	lw	a3,-20(s0)
20406084:	863e                	mv	a2,a5
20406086:	00c6ec63          	bltu	a3,a2,2040609e <configure_pll+0x198>
2040608a:	fec42683          	lw	a3,-20(s0)
2040608e:	863e                	mv	a2,a5
20406090:	fcc69ae3          	bne	a3,a2,20406064 <configure_pll+0x15e>
20406094:	fe842683          	lw	a3,-24(s0)
20406098:	87ba                	mv	a5,a4
2040609a:	fcf6f5e3          	bgeu	a3,a5,20406064 <configure_pll+0x15e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
2040609e:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
204060a0:	fdc42783          	lw	a5,-36(s0)
204060a4:	439c                	lw	a5,0(a5)
204060a6:	fe07dde3          	bgez	a5,204060a0 <configure_pll+0x19a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
204060aa:	0001                	nop
204060ac:	0001                	nop
204060ae:	50b2                	lw	ra,44(sp)
204060b0:	5422                	lw	s0,40(sp)
204060b2:	6145                	addi	sp,sp,48
204060b4:	8082                	ret

204060b6 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
204060b6:	715d                	addi	sp,sp,-80
204060b8:	c686                	sw	ra,76(sp)
204060ba:	c4a2                	sw	s0,72(sp)
204060bc:	0880                	addi	s0,sp,80
204060be:	faa42e23          	sw	a0,-68(s0)
204060c2:	fab42c23          	sw	a1,-72(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204060c6:	fbc42503          	lw	a0,-68(s0)
204060ca:	a7fff0ef          	jal	ra,20405b48 <__metal_driver_sifive_fe310_g000_pll_pllref>
204060ce:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204060d2:	fbc42503          	lw	a0,-68(s0)
204060d6:	a59ff0ef          	jal	ra,20405b2e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204060da:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204060de:	fbc42503          	lw	a0,-68(s0)
204060e2:	abdff0ef          	jal	ra,20405b9e <__metal_driver_sifive_fe310_g000_pll_config_offset>
204060e6:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
204060ea:	fbc42503          	lw	a0,-68(s0)
204060ee:	a8bff0ef          	jal	ra,20405b78 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
204060f2:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
204060f6:	acfff0ef          	jal	ra,20405bc4 <__metal_driver_sifive_fe310_g000_prci_base>
204060fa:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
204060fe:	fdc42703          	lw	a4,-36(s0)
20406102:	fe442783          	lw	a5,-28(s0)
20406106:	97ba                	add	a5,a5,a4
20406108:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
2040610c:	fdc42703          	lw	a4,-36(s0)
20406110:	fe042783          	lw	a5,-32(s0)
20406114:	97ba                	add	a5,a5,a4
20406116:	fcf42a23          	sw	a5,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
2040611a:	fd842783          	lw	a5,-40(s0)
2040611e:	4398                	lw	a4,0(a5)
20406120:	67c1                	lui	a5,0x10
20406122:	8ff9                	and	a5,a5,a4
20406124:	cb91                	beqz	a5,20406138 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20406126:	fd842783          	lw	a5,-40(s0)
2040612a:	4398                	lw	a4,0(a5)
2040612c:	77c1                	lui	a5,0xffff0
2040612e:	17fd                	addi	a5,a5,-1
20406130:	8f7d                	and	a4,a4,a5
20406132:	fd842783          	lw	a5,-40(s0)
20406136:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20406138:	fd842783          	lw	a5,-40(s0)
2040613c:	4398                	lw	a4,0(a5)
2040613e:	000207b7          	lui	a5,0x20
20406142:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20406144:	c781                	beqz	a5,2040614c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20406146:	fec42783          	lw	a5,-20(s0)
2040614a:	a019                	j	20406150 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
2040614c:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20406150:	853e                	mv	a0,a5
20406152:	1a2010ef          	jal	ra,204072f4 <metal_clock_get_rate_hz>
20406156:	fca42823          	sw	a0,-48(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
2040615a:	fd042703          	lw	a4,-48(s0)
2040615e:	87ba                	mv	a5,a4
20406160:	0786                	slli	a5,a5,0x1
20406162:	97ba                	add	a5,a5,a4
20406164:	41f7d713          	srai	a4,a5,0x1f
20406168:	8b0d                	andi	a4,a4,3
2040616a:	97ba                	add	a5,a5,a4
2040616c:	8789                	srai	a5,a5,0x2
2040616e:	873e                	mv	a4,a5
20406170:	fb842783          	lw	a5,-72(s0)
20406174:	02e7cb63          	blt	a5,a4,204061aa <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20406178:	fd042703          	lw	a4,-48(s0)
2040617c:	87ba                	mv	a5,a4
2040617e:	078a                	slli	a5,a5,0x2
20406180:	97ba                	add	a5,a5,a4
20406182:	41f7d713          	srai	a4,a5,0x1f
20406186:	8b0d                	andi	a4,a4,3
20406188:	97ba                	add	a5,a5,a4
2040618a:	8789                	srai	a5,a5,0x2
2040618c:	873e                	mv	a4,a5
2040618e:	fb842783          	lw	a5,-72(s0)
20406192:	00f74c63          	blt	a4,a5,204061aa <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20406196:	fd842783          	lw	a5,-40(s0)
2040619a:	4398                	lw	a4,0(a5)
2040619c:	000407b7          	lui	a5,0x40
204061a0:	8f5d                	or	a4,a4,a5
204061a2:	fd842783          	lw	a5,-40(s0)
204061a6:	c398                	sw	a4,0(a5)
204061a8:	a881                	j	204061f8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
204061aa:	fb842583          	lw	a1,-72(s0)
204061ae:	fd042503          	lw	a0,-48(s0)
204061b2:	ca9ff0ef          	jal	ra,20405e5a <find_closest_config>
204061b6:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
204061ba:	fcc42703          	lw	a4,-52(s0)
204061be:	57fd                	li	a5,-1
204061c0:	02f70363          	beq	a4,a5,204061e6 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
204061c4:	fcc42783          	lw	a5,-52(s0)
204061c8:	00579713          	slli	a4,a5,0x5
204061cc:	204007b7          	lui	a5,0x20400
204061d0:	6a878793          	addi	a5,a5,1704 # 204006a8 <pll_configs>
204061d4:	97ba                	add	a5,a5,a4
204061d6:	863e                	mv	a2,a5
204061d8:	fd442583          	lw	a1,-44(s0)
204061dc:	fd842503          	lw	a0,-40(s0)
204061e0:	d27ff0ef          	jal	ra,20405f06 <configure_pll>
204061e4:	a811                	j	204061f8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204061e6:	fd842783          	lw	a5,-40(s0)
204061ea:	4398                	lw	a4,0(a5)
204061ec:	000407b7          	lui	a5,0x40
204061f0:	8f5d                	or	a4,a4,a5
204061f2:	fd842783          	lw	a5,-40(s0)
204061f6:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
204061f8:	fd842783          	lw	a5,-40(s0)
204061fc:	4398                	lw	a4,0(a5)
204061fe:	67c1                	lui	a5,0x10
20406200:	8f5d                	or	a4,a4,a5
20406202:	fd842783          	lw	a5,-40(s0)
20406206:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20406208:	fbc42503          	lw	a0,-68(s0)
2040620c:	ad3ff0ef          	jal	ra,20405cde <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20406210:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20406212:	853e                	mv	a0,a5
20406214:	40b6                	lw	ra,76(sp)
20406216:	4426                	lw	s0,72(sp)
20406218:	6161                	addi	sp,sp,80
2040621a:	8082                	ret

2040621c <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1159
{
2040621c:	1141                	addi	sp,sp,-16
2040621e:	c622                	sw	s0,12(sp)
20406220:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20406222:	100087b7          	lui	a5,0x10008
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:1161
}
20406226:	853e                	mv	a0,a5
20406228:	4432                	lw	s0,12(sp)
2040622a:	0141                	addi	sp,sp,16
2040622c:	8082                	ret

2040622e <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
2040622e:	7179                	addi	sp,sp,-48
20406230:	d606                	sw	ra,44(sp)
20406232:	d422                	sw	s0,40(sp)
20406234:	1800                	addi	s0,sp,48
20406236:	fca42e23          	sw	a0,-36(s0)
2040623a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
2040623e:	3ff9                	jal	2040621c <__metal_driver_sifive_fe310_g000_prci_base>
20406240:	87aa                	mv	a5,a0
20406242:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20406246:	fd842703          	lw	a4,-40(s0)
2040624a:	fec42783          	lw	a5,-20(s0)
2040624e:	97ba                	add	a5,a5,a4
20406250:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20406252:	853e                	mv	a0,a5
20406254:	50b2                	lw	ra,44(sp)
20406256:	5422                	lw	s0,40(sp)
20406258:	6145                	addi	sp,sp,48
2040625a:	8082                	ret

2040625c <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
2040625c:	7179                	addi	sp,sp,-48
2040625e:	d606                	sw	ra,44(sp)
20406260:	d422                	sw	s0,40(sp)
20406262:	1800                	addi	s0,sp,48
20406264:	fca42e23          	sw	a0,-36(s0)
20406268:	fcb42c23          	sw	a1,-40(s0)
2040626c:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406270:	3775                	jal	2040621c <__metal_driver_sifive_fe310_g000_prci_base>
20406272:	87aa                	mv	a5,a0
20406274:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20406278:	fd842703          	lw	a4,-40(s0)
2040627c:	fec42783          	lw	a5,-20(s0)
20406280:	97ba                	add	a5,a5,a4
20406282:	873e                	mv	a4,a5
20406284:	fd442783          	lw	a5,-44(s0)
20406288:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
2040628a:	853e                	mv	a0,a5
2040628c:	50b2                	lw	ra,44(sp)
2040628e:	5422                	lw	s0,40(sp)
20406290:	6145                	addi	sp,sp,48
20406292:	8082                	ret

20406294 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:474
{
20406294:	1101                	addi	sp,sp,-32
20406296:	ce22                	sw	s0,28(sp)
20406298:	1000                	addi	s0,sp,32
2040629a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2040629e:	fec42703          	lw	a4,-20(s0)
204062a2:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062a6:	00f71563          	bne	a4,a5,204062b0 <__metal_driver_sifive_gpio0_base+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
204062aa:	100127b7          	lui	a5,0x10012
204062ae:	a011                	j	204062b2 <__metal_driver_sifive_gpio0_base+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:479
		return 0;
204062b0:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:481
}
204062b2:	853e                	mv	a0,a5
204062b4:	4472                	lw	s0,28(sp)
204062b6:	6105                	addi	sp,sp,32
204062b8:	8082                	ret

204062ba <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:504
{
204062ba:	1101                	addi	sp,sp,-32
204062bc:	ce22                	sw	s0,28(sp)
204062be:	1000                	addi	s0,sp,32
204062c0:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204062c4:	fec42703          	lw	a4,-20(s0)
204062c8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062cc:	00f71763          	bne	a4,a5,204062da <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204062d0:	800007b7          	lui	a5,0x80000
204062d4:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe348>
204062d8:	a011                	j	204062dc <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:509
		return 0;
204062da:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:511
}
204062dc:	853e                	mv	a0,a5
204062de:	4472                	lw	s0,28(sp)
204062e0:	6105                	addi	sp,sp,32
204062e2:	8082                	ret

204062e4 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:514
{
204062e4:	1101                	addi	sp,sp,-32
204062e6:	ce22                	sw	s0,28(sp)
204062e8:	1000                	addi	s0,sp,32
204062ea:	fea42623          	sw	a0,-20(s0)
204062ee:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
204062f2:	fec42703          	lw	a4,-20(s0)
204062f6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204062fa:	00f71763          	bne	a4,a5,20406308 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:515 (discriminator 1)
204062fe:	fe842783          	lw	a5,-24(s0)
20406302:	e399                	bnez	a5,20406308 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:516
		return 7;
20406304:	479d                	li	a5,7
20406306:	a269                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20406308:	fec42703          	lw	a4,-20(s0)
2040630c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406310:	00f71963          	bne	a4,a5,20406322 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:518 (discriminator 1)
20406314:	fe842703          	lw	a4,-24(s0)
20406318:	4785                	li	a5,1
2040631a:	00f71463          	bne	a4,a5,20406322 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:519
		return 8;
2040631e:	47a1                	li	a5,8
20406320:	aa85                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20406322:	fec42703          	lw	a4,-20(s0)
20406326:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040632a:	00f71963          	bne	a4,a5,2040633c <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
2040632e:	fe842703          	lw	a4,-24(s0)
20406332:	4789                	li	a5,2
20406334:	00f71463          	bne	a4,a5,2040633c <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:522
		return 9;
20406338:	47a5                	li	a5,9
2040633a:	aa99                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2040633c:	fec42703          	lw	a4,-20(s0)
20406340:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406344:	00f71963          	bne	a4,a5,20406356 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
20406348:	fe842703          	lw	a4,-24(s0)
2040634c:	478d                	li	a5,3
2040634e:	00f71463          	bne	a4,a5,20406356 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:525
		return 10;
20406352:	47a9                	li	a5,10
20406354:	aa35                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20406356:	fec42703          	lw	a4,-20(s0)
2040635a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040635e:	00f71963          	bne	a4,a5,20406370 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
20406362:	fe842703          	lw	a4,-24(s0)
20406366:	4791                	li	a5,4
20406368:	00f71463          	bne	a4,a5,20406370 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:528
		return 11;
2040636c:	47ad                	li	a5,11
2040636e:	a20d                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20406370:	fec42703          	lw	a4,-20(s0)
20406374:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406378:	00f71963          	bne	a4,a5,2040638a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
2040637c:	fe842703          	lw	a4,-24(s0)
20406380:	4795                	li	a5,5
20406382:	00f71463          	bne	a4,a5,2040638a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:531
		return 12;
20406386:	47b1                	li	a5,12
20406388:	a221                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2040638a:	fec42703          	lw	a4,-20(s0)
2040638e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406392:	00f71963          	bne	a4,a5,204063a4 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
20406396:	fe842703          	lw	a4,-24(s0)
2040639a:	4799                	li	a5,6
2040639c:	00f71463          	bne	a4,a5,204063a4 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:534
		return 13;
204063a0:	47b5                	li	a5,13
204063a2:	a0fd                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
204063a4:	fec42703          	lw	a4,-20(s0)
204063a8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063ac:	00f71963          	bne	a4,a5,204063be <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
204063b0:	fe842703          	lw	a4,-24(s0)
204063b4:	479d                	li	a5,7
204063b6:	00f71463          	bne	a4,a5,204063be <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:537
		return 14;
204063ba:	47b9                	li	a5,14
204063bc:	a8d1                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
204063be:	fec42703          	lw	a4,-20(s0)
204063c2:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063c6:	00f71963          	bne	a4,a5,204063d8 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
204063ca:	fe842703          	lw	a4,-24(s0)
204063ce:	47a1                	li	a5,8
204063d0:	00f71463          	bne	a4,a5,204063d8 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:540
		return 15;
204063d4:	47bd                	li	a5,15
204063d6:	a86d                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
204063d8:	fec42703          	lw	a4,-20(s0)
204063dc:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063e0:	00f71963          	bne	a4,a5,204063f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
204063e4:	fe842703          	lw	a4,-24(s0)
204063e8:	47a5                	li	a5,9
204063ea:	00f71463          	bne	a4,a5,204063f2 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:543
		return 16;
204063ee:	47c1                	li	a5,16
204063f0:	a045                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
204063f2:	fec42703          	lw	a4,-20(s0)
204063f6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204063fa:	00f71963          	bne	a4,a5,2040640c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
204063fe:	fe842703          	lw	a4,-24(s0)
20406402:	47a9                	li	a5,10
20406404:	00f71463          	bne	a4,a5,2040640c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:546
		return 17;
20406408:	47c5                	li	a5,17
2040640a:	a059                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2040640c:	fec42703          	lw	a4,-20(s0)
20406410:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406414:	00f71963          	bne	a4,a5,20406426 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
20406418:	fe842703          	lw	a4,-24(s0)
2040641c:	47ad                	li	a5,11
2040641e:	00f71463          	bne	a4,a5,20406426 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:549
		return 18;
20406422:	47c9                	li	a5,18
20406424:	a0b5                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20406426:	fec42703          	lw	a4,-20(s0)
2040642a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040642e:	00f71963          	bne	a4,a5,20406440 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
20406432:	fe842703          	lw	a4,-24(s0)
20406436:	47b1                	li	a5,12
20406438:	00f71463          	bne	a4,a5,20406440 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:552
		return 19;
2040643c:	47cd                	li	a5,19
2040643e:	a889                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20406440:	fec42703          	lw	a4,-20(s0)
20406444:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406448:	00f71963          	bne	a4,a5,2040645a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
2040644c:	fe842703          	lw	a4,-24(s0)
20406450:	47b5                	li	a5,13
20406452:	00f71463          	bne	a4,a5,2040645a <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:555
		return 20;
20406456:	47d1                	li	a5,20
20406458:	a825                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2040645a:	fec42703          	lw	a4,-20(s0)
2040645e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406462:	00f71963          	bne	a4,a5,20406474 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
20406466:	fe842703          	lw	a4,-24(s0)
2040646a:	47b9                	li	a5,14
2040646c:	00f71463          	bne	a4,a5,20406474 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:558
		return 21;
20406470:	47d5                	li	a5,21
20406472:	a839                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20406474:	fec42703          	lw	a4,-20(s0)
20406478:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040647c:	00f71963          	bne	a4,a5,2040648e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
20406480:	fe842703          	lw	a4,-24(s0)
20406484:	47bd                	li	a5,15
20406486:	00f71463          	bne	a4,a5,2040648e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:561
		return 22;
2040648a:	47d9                	li	a5,22
2040648c:	a011                	j	20406490 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:564
		return 0;
2040648e:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:566
}
20406490:	853e                	mv	a0,a5
20406492:	4472                	lw	s0,28(sp)
20406494:	6105                	addi	sp,sp,32
20406496:	8082                	ret

20406498 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20406498:	7179                	addi	sp,sp,-48
2040649a:	d606                	sw	ra,44(sp)
2040649c:	d422                	sw	s0,40(sp)
2040649e:	1800                	addi	s0,sp,48
204064a0:	fca42e23          	sw	a0,-36(s0)
204064a4:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204064a8:	fdc42503          	lw	a0,-36(s0)
204064ac:	de9ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
204064b0:	87aa                	mv	a5,a0
204064b2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
204064b6:	fec42783          	lw	a5,-20(s0)
204064ba:	0791                	addi	a5,a5,4
204064bc:	4398                	lw	a4,0(a5)
204064be:	fd842783          	lw	a5,-40(s0)
204064c2:	fec42683          	lw	a3,-20(s0)
204064c6:	0691                	addi	a3,a3,4
204064c8:	8fd9                	or	a5,a5,a4
204064ca:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
204064cc:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:20
}
204064ce:	853e                	mv	a0,a5
204064d0:	50b2                	lw	ra,44(sp)
204064d2:	5422                	lw	s0,40(sp)
204064d4:	6145                	addi	sp,sp,48
204064d6:	8082                	ret

204064d8 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
204064d8:	7179                	addi	sp,sp,-48
204064da:	d606                	sw	ra,44(sp)
204064dc:	d422                	sw	s0,40(sp)
204064de:	1800                	addi	s0,sp,48
204064e0:	fca42e23          	sw	a0,-36(s0)
204064e4:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204064e8:	fdc42503          	lw	a0,-36(s0)
204064ec:	da9ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
204064f0:	87aa                	mv	a5,a0
204064f2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
204064f6:	fec42783          	lw	a5,-20(s0)
204064fa:	0791                	addi	a5,a5,4
204064fc:	439c                	lw	a5,0(a5)
204064fe:	fd842703          	lw	a4,-40(s0)
20406502:	fff74713          	not	a4,a4
20406506:	86ba                	mv	a3,a4
20406508:	fec42703          	lw	a4,-20(s0)
2040650c:	0711                	addi	a4,a4,4
2040650e:	8ff5                	and	a5,a5,a3
20406510:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20406512:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20406514:	853e                	mv	a0,a5
20406516:	50b2                	lw	ra,44(sp)
20406518:	5422                	lw	s0,40(sp)
2040651a:	6145                	addi	sp,sp,48
2040651c:	8082                	ret

2040651e <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
2040651e:	7179                	addi	sp,sp,-48
20406520:	d606                	sw	ra,44(sp)
20406522:	d422                	sw	s0,40(sp)
20406524:	1800                	addi	s0,sp,48
20406526:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040652a:	fdc42503          	lw	a0,-36(s0)
2040652e:	d67ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
20406532:	87aa                	mv	a5,a0
20406534:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20406538:	fec42783          	lw	a5,-20(s0)
2040653c:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
2040653e:	853e                	mv	a0,a5
20406540:	50b2                	lw	ra,44(sp)
20406542:	5422                	lw	s0,40(sp)
20406544:	6145                	addi	sp,sp,48
20406546:	8082                	ret

20406548 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20406548:	7179                	addi	sp,sp,-48
2040654a:	d606                	sw	ra,44(sp)
2040654c:	d422                	sw	s0,40(sp)
2040654e:	1800                	addi	s0,sp,48
20406550:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406554:	fdc42503          	lw	a0,-36(s0)
20406558:	d3dff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
2040655c:	87aa                	mv	a5,a0
2040655e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20406562:	fec42783          	lw	a5,-20(s0)
20406566:	07b1                	addi	a5,a5,12
20406568:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
2040656a:	853e                	mv	a0,a5
2040656c:	50b2                	lw	ra,44(sp)
2040656e:	5422                	lw	s0,40(sp)
20406570:	6145                	addi	sp,sp,48
20406572:	8082                	ret

20406574 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20406574:	7179                	addi	sp,sp,-48
20406576:	d606                	sw	ra,44(sp)
20406578:	d422                	sw	s0,40(sp)
2040657a:	1800                	addi	s0,sp,48
2040657c:	fca42e23          	sw	a0,-36(s0)
20406580:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406584:	fdc42503          	lw	a0,-36(s0)
20406588:	d0dff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
2040658c:	87aa                	mv	a5,a0
2040658e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20406592:	fec42783          	lw	a5,-20(s0)
20406596:	07a1                	addi	a5,a5,8
20406598:	439c                	lw	a5,0(a5)
2040659a:	fd842703          	lw	a4,-40(s0)
2040659e:	fff74713          	not	a4,a4
204065a2:	86ba                	mv	a3,a4
204065a4:	fec42703          	lw	a4,-20(s0)
204065a8:	0721                	addi	a4,a4,8
204065aa:	8ff5                	and	a5,a5,a3
204065ac:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
204065ae:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:54
}
204065b0:	853e                	mv	a0,a5
204065b2:	50b2                	lw	ra,44(sp)
204065b4:	5422                	lw	s0,40(sp)
204065b6:	6145                	addi	sp,sp,48
204065b8:	8082                	ret

204065ba <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
204065ba:	7179                	addi	sp,sp,-48
204065bc:	d606                	sw	ra,44(sp)
204065be:	d422                	sw	s0,40(sp)
204065c0:	1800                	addi	s0,sp,48
204065c2:	fca42e23          	sw	a0,-36(s0)
204065c6:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204065ca:	fdc42503          	lw	a0,-36(s0)
204065ce:	cc7ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
204065d2:	87aa                	mv	a5,a0
204065d4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
204065d8:	fec42783          	lw	a5,-20(s0)
204065dc:	07a1                	addi	a5,a5,8
204065de:	4398                	lw	a4,0(a5)
204065e0:	fd842783          	lw	a5,-40(s0)
204065e4:	fec42683          	lw	a3,-20(s0)
204065e8:	06a1                	addi	a3,a3,8
204065ea:	8fd9                	or	a5,a5,a4
204065ec:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
204065ee:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:64
}
204065f0:	853e                	mv	a0,a5
204065f2:	50b2                	lw	ra,44(sp)
204065f4:	5422                	lw	s0,40(sp)
204065f6:	6145                	addi	sp,sp,48
204065f8:	8082                	ret

204065fa <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
204065fa:	7179                	addi	sp,sp,-48
204065fc:	d606                	sw	ra,44(sp)
204065fe:	d422                	sw	s0,40(sp)
20406600:	1800                	addi	s0,sp,48
20406602:	fca42e23          	sw	a0,-36(s0)
20406606:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040660a:	fdc42503          	lw	a0,-36(s0)
2040660e:	c87ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
20406612:	87aa                	mv	a5,a0
20406614:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20406618:	fec42783          	lw	a5,-20(s0)
2040661c:	07b1                	addi	a5,a5,12
2040661e:	4398                	lw	a4,0(a5)
20406620:	fd842783          	lw	a5,-40(s0)
20406624:	fec42683          	lw	a3,-20(s0)
20406628:	06b1                	addi	a3,a3,12
2040662a:	8fd9                	or	a5,a5,a4
2040662c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
2040662e:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20406630:	853e                	mv	a0,a5
20406632:	50b2                	lw	ra,44(sp)
20406634:	5422                	lw	s0,40(sp)
20406636:	6145                	addi	sp,sp,48
20406638:	8082                	ret

2040663a <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
2040663a:	7179                	addi	sp,sp,-48
2040663c:	d606                	sw	ra,44(sp)
2040663e:	d422                	sw	s0,40(sp)
20406640:	1800                	addi	s0,sp,48
20406642:	fca42e23          	sw	a0,-36(s0)
20406646:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040664a:	fdc42503          	lw	a0,-36(s0)
2040664e:	c47ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
20406652:	87aa                	mv	a5,a0
20406654:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20406658:	fec42783          	lw	a5,-20(s0)
2040665c:	07b1                	addi	a5,a5,12
2040665e:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20406660:	fd842703          	lw	a4,-40(s0)
20406664:	fff74713          	not	a4,a4
20406668:	86ba                	mv	a3,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2040666a:	fec42703          	lw	a4,-20(s0)
2040666e:	0731                	addi	a4,a4,12
20406670:	8ff5                	and	a5,a5,a3
20406672:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20406674:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20406676:	853e                	mv	a0,a5
20406678:	50b2                	lw	ra,44(sp)
2040667a:	5422                	lw	s0,40(sp)
2040667c:	6145                	addi	sp,sp,48
2040667e:	8082                	ret

20406680 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406680:	7179                	addi	sp,sp,-48
20406682:	d606                	sw	ra,44(sp)
20406684:	d422                	sw	s0,40(sp)
20406686:	1800                	addi	s0,sp,48
20406688:	fca42e23          	sw	a0,-36(s0)
2040668c:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406690:	fdc42503          	lw	a0,-36(s0)
20406694:	c01ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
20406698:	87aa                	mv	a5,a0
2040669a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
2040669e:	fec42783          	lw	a5,-20(s0)
204066a2:	07b1                	addi	a5,a5,12
204066a4:	4398                	lw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
204066a6:	fd842783          	lw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
204066aa:	fec42683          	lw	a3,-20(s0)
204066ae:	06b1                	addi	a3,a3,12
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
204066b0:	8fb9                	xor	a5,a5,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
204066b2:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
204066b4:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:96
}
204066b6:	853e                	mv	a0,a5
204066b8:	50b2                	lw	ra,44(sp)
204066ba:	5422                	lw	s0,40(sp)
204066bc:	6145                	addi	sp,sp,48
204066be:	8082                	ret

204066c0 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
204066c0:	7179                	addi	sp,sp,-48
204066c2:	d606                	sw	ra,44(sp)
204066c4:	d422                	sw	s0,40(sp)
204066c6:	1800                	addi	s0,sp,48
204066c8:	fca42e23          	sw	a0,-36(s0)
204066cc:	fcb42c23          	sw	a1,-40(s0)
204066d0:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204066d4:	fdc42503          	lw	a0,-36(s0)
204066d8:	bbdff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
204066dc:	87aa                	mv	a5,a0
204066de:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
204066e2:	fec42783          	lw	a5,-20(s0)
204066e6:	03c78793          	addi	a5,a5,60
204066ea:	4398                	lw	a4,0(a5)
204066ec:	fd842783          	lw	a5,-40(s0)
204066f0:	fec42683          	lw	a3,-20(s0)
204066f4:	03c68693          	addi	a3,a3,60
204066f8:	8fd9                	or	a5,a5,a4
204066fa:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
204066fc:	fec42783          	lw	a5,-20(s0)
20406700:	03878793          	addi	a5,a5,56
20406704:	4398                	lw	a4,0(a5)
20406706:	fd442783          	lw	a5,-44(s0)
2040670a:	fec42683          	lw	a3,-20(s0)
2040670e:	03868693          	addi	a3,a3,56
20406712:	8fd9                	or	a5,a5,a4
20406714:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20406716:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406718:	853e                	mv	a0,a5
2040671a:	50b2                	lw	ra,44(sp)
2040671c:	5422                	lw	s0,40(sp)
2040671e:	6145                	addi	sp,sp,48
20406720:	8082                	ret

20406722 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20406722:	7179                	addi	sp,sp,-48
20406724:	d606                	sw	ra,44(sp)
20406726:	d422                	sw	s0,40(sp)
20406728:	1800                	addi	s0,sp,48
2040672a:	fca42e23          	sw	a0,-36(s0)
2040672e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406732:	fdc42503          	lw	a0,-36(s0)
20406736:	b5fff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
2040673a:	87aa                	mv	a5,a0
2040673c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406740:	fec42783          	lw	a5,-20(s0)
20406744:	03878793          	addi	a5,a5,56
20406748:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
2040674a:	fd842703          	lw	a4,-40(s0)
2040674e:	fff74713          	not	a4,a4
20406752:	86ba                	mv	a3,a4
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406754:	fec42703          	lw	a4,-20(s0)
20406758:	03870713          	addi	a4,a4,56
2040675c:	8ff5                	and	a5,a5,a3
2040675e:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20406760:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20406762:	853e                	mv	a0,a5
20406764:	50b2                	lw	ra,44(sp)
20406766:	5422                	lw	s0,40(sp)
20406768:	6145                	addi	sp,sp,48
2040676a:	8082                	ret

2040676c <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
2040676c:	7179                	addi	sp,sp,-48
2040676e:	d606                	sw	ra,44(sp)
20406770:	d422                	sw	s0,40(sp)
20406772:	1800                	addi	s0,sp,48
20406774:	fca42e23          	sw	a0,-36(s0)
20406778:	fcb42c23          	sw	a1,-40(s0)
2040677c:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406780:	fdc42503          	lw	a0,-36(s0)
20406784:	b11ff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
20406788:	87aa                	mv	a5,a0
2040678a:	fef42623          	sw	a5,-20(s0)
2040678e:	fd442703          	lw	a4,-44(s0)
20406792:	479d                	li	a5,7
20406794:	1ce7e963          	bltu	a5,a4,20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406798:	fd442783          	lw	a5,-44(s0)
2040679c:	00279713          	slli	a4,a5,0x2
204067a0:	204017b7          	lui	a5,0x20401
204067a4:	f3478793          	addi	a5,a5,-204 # 20400f34 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
204067a8:	97ba                	add	a5,a5,a4
204067aa:	439c                	lw	a5,0(a5)
204067ac:	8782                	jr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
204067ae:	fec42783          	lw	a5,-20(s0)
204067b2:	07e1                	addi	a5,a5,24
204067b4:	439c                	lw	a5,0(a5)
204067b6:	fd842703          	lw	a4,-40(s0)
204067ba:	fff74713          	not	a4,a4
204067be:	86ba                	mv	a3,a4
204067c0:	fec42703          	lw	a4,-20(s0)
204067c4:	0761                	addi	a4,a4,24
204067c6:	8ff5                	and	a5,a5,a3
204067c8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
204067ca:	fec42783          	lw	a5,-20(s0)
204067ce:	02078793          	addi	a5,a5,32
204067d2:	439c                	lw	a5,0(a5)
204067d4:	fd842703          	lw	a4,-40(s0)
204067d8:	fff74713          	not	a4,a4
204067dc:	86ba                	mv	a3,a4
204067de:	fec42703          	lw	a4,-20(s0)
204067e2:	02070713          	addi	a4,a4,32
204067e6:	8ff5                	and	a5,a5,a3
204067e8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
204067ea:	fec42783          	lw	a5,-20(s0)
204067ee:	02878793          	addi	a5,a5,40
204067f2:	439c                	lw	a5,0(a5)
204067f4:	fd842703          	lw	a4,-40(s0)
204067f8:	fff74713          	not	a4,a4
204067fc:	86ba                	mv	a3,a4
204067fe:	fec42703          	lw	a4,-20(s0)
20406802:	02870713          	addi	a4,a4,40
20406806:	8ff5                	and	a5,a5,a3
20406808:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
2040680a:	fec42783          	lw	a5,-20(s0)
2040680e:	03078793          	addi	a5,a5,48
20406812:	439c                	lw	a5,0(a5)
20406814:	fd842703          	lw	a4,-40(s0)
20406818:	fff74713          	not	a4,a4
2040681c:	86ba                	mv	a3,a4
2040681e:	fec42703          	lw	a4,-20(s0)
20406822:	03070713          	addi	a4,a4,48
20406826:	8ff5                	and	a5,a5,a3
20406828:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
2040682a:	aa35                	j	20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
2040682c:	fec42783          	lw	a5,-20(s0)
20406830:	07e1                	addi	a5,a5,24
20406832:	4398                	lw	a4,0(a5)
20406834:	fd842783          	lw	a5,-40(s0)
20406838:	fec42683          	lw	a3,-20(s0)
2040683c:	06e1                	addi	a3,a3,24
2040683e:	8fd9                	or	a5,a5,a4
20406840:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20406842:	a215                	j	20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406844:	fec42783          	lw	a5,-20(s0)
20406848:	02078793          	addi	a5,a5,32
2040684c:	4398                	lw	a4,0(a5)
2040684e:	fd842783          	lw	a5,-40(s0)
20406852:	fec42683          	lw	a3,-20(s0)
20406856:	02068693          	addi	a3,a3,32
2040685a:	8fd9                	or	a5,a5,a4
2040685c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
2040685e:	a221                	j	20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406860:	fec42783          	lw	a5,-20(s0)
20406864:	07e1                	addi	a5,a5,24
20406866:	4398                	lw	a4,0(a5)
20406868:	fd842783          	lw	a5,-40(s0)
2040686c:	fec42683          	lw	a3,-20(s0)
20406870:	06e1                	addi	a3,a3,24
20406872:	8fd9                	or	a5,a5,a4
20406874:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406876:	fec42783          	lw	a5,-20(s0)
2040687a:	02078793          	addi	a5,a5,32
2040687e:	4398                	lw	a4,0(a5)
20406880:	fd842783          	lw	a5,-40(s0)
20406884:	fec42683          	lw	a3,-20(s0)
20406888:	02068693          	addi	a3,a3,32
2040688c:	8fd9                	or	a5,a5,a4
2040688e:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20406890:	a8d9                	j	20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406892:	fec42783          	lw	a5,-20(s0)
20406896:	02878793          	addi	a5,a5,40
2040689a:	4398                	lw	a4,0(a5)
2040689c:	fd842783          	lw	a5,-40(s0)
204068a0:	fec42683          	lw	a3,-20(s0)
204068a4:	02868693          	addi	a3,a3,40
204068a8:	8fd9                	or	a5,a5,a4
204068aa:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
204068ac:	a86d                	j	20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204068ae:	fec42783          	lw	a5,-20(s0)
204068b2:	03078793          	addi	a5,a5,48
204068b6:	4398                	lw	a4,0(a5)
204068b8:	fd842783          	lw	a5,-40(s0)
204068bc:	fec42683          	lw	a3,-20(s0)
204068c0:	03068693          	addi	a3,a3,48
204068c4:	8fd9                	or	a5,a5,a4
204068c6:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
204068c8:	a879                	j	20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204068ca:	fec42783          	lw	a5,-20(s0)
204068ce:	02878793          	addi	a5,a5,40
204068d2:	4398                	lw	a4,0(a5)
204068d4:	fd842783          	lw	a5,-40(s0)
204068d8:	fec42683          	lw	a3,-20(s0)
204068dc:	02868693          	addi	a3,a3,40
204068e0:	8fd9                	or	a5,a5,a4
204068e2:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204068e4:	fec42783          	lw	a5,-20(s0)
204068e8:	03078793          	addi	a5,a5,48
204068ec:	4398                	lw	a4,0(a5)
204068ee:	fd842783          	lw	a5,-40(s0)
204068f2:	fec42683          	lw	a3,-20(s0)
204068f6:	03068693          	addi	a3,a3,48
204068fa:	8fd9                	or	a5,a5,a4
204068fc:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
204068fe:	a0a5                	j	20406966 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406900:	fec42783          	lw	a5,-20(s0)
20406904:	07e1                	addi	a5,a5,24
20406906:	4398                	lw	a4,0(a5)
20406908:	fd842783          	lw	a5,-40(s0)
2040690c:	fec42683          	lw	a3,-20(s0)
20406910:	06e1                	addi	a3,a3,24
20406912:	8fd9                	or	a5,a5,a4
20406914:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406916:	fec42783          	lw	a5,-20(s0)
2040691a:	02078793          	addi	a5,a5,32
2040691e:	4398                	lw	a4,0(a5)
20406920:	fd842783          	lw	a5,-40(s0)
20406924:	fec42683          	lw	a3,-20(s0)
20406928:	02068693          	addi	a3,a3,32
2040692c:	8fd9                	or	a5,a5,a4
2040692e:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406930:	fec42783          	lw	a5,-20(s0)
20406934:	02878793          	addi	a5,a5,40
20406938:	4398                	lw	a4,0(a5)
2040693a:	fd842783          	lw	a5,-40(s0)
2040693e:	fec42683          	lw	a3,-20(s0)
20406942:	02868693          	addi	a3,a3,40
20406946:	8fd9                	or	a5,a5,a4
20406948:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2040694a:	fec42783          	lw	a5,-20(s0)
2040694e:	03078793          	addi	a5,a5,48
20406952:	4398                	lw	a4,0(a5)
20406954:	fd842783          	lw	a5,-40(s0)
20406958:	fec42683          	lw	a3,-20(s0)
2040695c:	03068693          	addi	a3,a3,48
20406960:	8fd9                	or	a5,a5,a4
20406962:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20406964:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20406966:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20406968:	853e                	mv	a0,a5
2040696a:	50b2                	lw	ra,44(sp)
2040696c:	5422                	lw	s0,40(sp)
2040696e:	6145                	addi	sp,sp,48
20406970:	8082                	ret

20406972 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20406972:	7179                	addi	sp,sp,-48
20406974:	d606                	sw	ra,44(sp)
20406976:	d422                	sw	s0,40(sp)
20406978:	1800                	addi	s0,sp,48
2040697a:	fca42e23          	sw	a0,-36(s0)
2040697e:	fcb42c23          	sw	a1,-40(s0)
20406982:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406986:	fdc42503          	lw	a0,-36(s0)
2040698a:	90bff0ef          	jal	ra,20406294 <__metal_driver_sifive_gpio0_base>
2040698e:	87aa                	mv	a5,a0
20406990:	fef42623          	sw	a5,-20(s0)
20406994:	fd442703          	lw	a4,-44(s0)
20406998:	479d                	li	a5,7
2040699a:	14e7ea63          	bltu	a5,a4,20406aee <__metal_driver_sifive_gpio0_clear_int+0x17c>
2040699e:	fd442783          	lw	a5,-44(s0)
204069a2:	00279713          	slli	a4,a5,0x2
204069a6:	204017b7          	lui	a5,0x20401
204069aa:	f5478793          	addi	a5,a5,-172 # 20400f54 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
204069ae:	97ba                	add	a5,a5,a4
204069b0:	439c                	lw	a5,0(a5)
204069b2:	8782                	jr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204069b4:	fec42783          	lw	a5,-20(s0)
204069b8:	07f1                	addi	a5,a5,28
204069ba:	4398                	lw	a4,0(a5)
204069bc:	fd842783          	lw	a5,-40(s0)
204069c0:	fec42683          	lw	a3,-20(s0)
204069c4:	06f1                	addi	a3,a3,28
204069c6:	8fd9                	or	a5,a5,a4
204069c8:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
204069ca:	a215                	j	20406aee <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204069cc:	fec42783          	lw	a5,-20(s0)
204069d0:	02478793          	addi	a5,a5,36
204069d4:	4398                	lw	a4,0(a5)
204069d6:	fd842783          	lw	a5,-40(s0)
204069da:	fec42683          	lw	a3,-20(s0)
204069de:	02468693          	addi	a3,a3,36
204069e2:	8fd9                	or	a5,a5,a4
204069e4:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
204069e6:	a221                	j	20406aee <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204069e8:	fec42783          	lw	a5,-20(s0)
204069ec:	07f1                	addi	a5,a5,28
204069ee:	4398                	lw	a4,0(a5)
204069f0:	fd842783          	lw	a5,-40(s0)
204069f4:	fec42683          	lw	a3,-20(s0)
204069f8:	06f1                	addi	a3,a3,28
204069fa:	8fd9                	or	a5,a5,a4
204069fc:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204069fe:	fec42783          	lw	a5,-20(s0)
20406a02:	02478793          	addi	a5,a5,36
20406a06:	4398                	lw	a4,0(a5)
20406a08:	fd842783          	lw	a5,-40(s0)
20406a0c:	fec42683          	lw	a3,-20(s0)
20406a10:	02468693          	addi	a3,a3,36
20406a14:	8fd9                	or	a5,a5,a4
20406a16:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406a18:	a8d9                	j	20406aee <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406a1a:	fec42783          	lw	a5,-20(s0)
20406a1e:	02c78793          	addi	a5,a5,44
20406a22:	4398                	lw	a4,0(a5)
20406a24:	fd842783          	lw	a5,-40(s0)
20406a28:	fec42683          	lw	a3,-20(s0)
20406a2c:	02c68693          	addi	a3,a3,44
20406a30:	8fd9                	or	a5,a5,a4
20406a32:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20406a34:	a86d                	j	20406aee <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406a36:	fec42783          	lw	a5,-20(s0)
20406a3a:	03478793          	addi	a5,a5,52
20406a3e:	4398                	lw	a4,0(a5)
20406a40:	fd842783          	lw	a5,-40(s0)
20406a44:	fec42683          	lw	a3,-20(s0)
20406a48:	03468693          	addi	a3,a3,52
20406a4c:	8fd9                	or	a5,a5,a4
20406a4e:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20406a50:	a879                	j	20406aee <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406a52:	fec42783          	lw	a5,-20(s0)
20406a56:	02c78793          	addi	a5,a5,44
20406a5a:	4398                	lw	a4,0(a5)
20406a5c:	fd842783          	lw	a5,-40(s0)
20406a60:	fec42683          	lw	a3,-20(s0)
20406a64:	02c68693          	addi	a3,a3,44
20406a68:	8fd9                	or	a5,a5,a4
20406a6a:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406a6c:	fec42783          	lw	a5,-20(s0)
20406a70:	03478793          	addi	a5,a5,52
20406a74:	4398                	lw	a4,0(a5)
20406a76:	fd842783          	lw	a5,-40(s0)
20406a7a:	fec42683          	lw	a3,-20(s0)
20406a7e:	03468693          	addi	a3,a3,52
20406a82:	8fd9                	or	a5,a5,a4
20406a84:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20406a86:	a0a5                	j	20406aee <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406a88:	fec42783          	lw	a5,-20(s0)
20406a8c:	07f1                	addi	a5,a5,28
20406a8e:	4398                	lw	a4,0(a5)
20406a90:	fd842783          	lw	a5,-40(s0)
20406a94:	fec42683          	lw	a3,-20(s0)
20406a98:	06f1                	addi	a3,a3,28
20406a9a:	8fd9                	or	a5,a5,a4
20406a9c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406a9e:	fec42783          	lw	a5,-20(s0)
20406aa2:	02478793          	addi	a5,a5,36
20406aa6:	4398                	lw	a4,0(a5)
20406aa8:	fd842783          	lw	a5,-40(s0)
20406aac:	fec42683          	lw	a3,-20(s0)
20406ab0:	02468693          	addi	a3,a3,36
20406ab4:	8fd9                	or	a5,a5,a4
20406ab6:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406ab8:	fec42783          	lw	a5,-20(s0)
20406abc:	02c78793          	addi	a5,a5,44
20406ac0:	4398                	lw	a4,0(a5)
20406ac2:	fd842783          	lw	a5,-40(s0)
20406ac6:	fec42683          	lw	a3,-20(s0)
20406aca:	02c68693          	addi	a3,a3,44
20406ace:	8fd9                	or	a5,a5,a4
20406ad0:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406ad2:	fec42783          	lw	a5,-20(s0)
20406ad6:	03478793          	addi	a5,a5,52
20406ada:	4398                	lw	a4,0(a5)
20406adc:	fd842783          	lw	a5,-40(s0)
20406ae0:	fec42683          	lw	a3,-20(s0)
20406ae4:	03468693          	addi	a3,a3,52
20406ae8:	8fd9                	or	a5,a5,a4
20406aea:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20406aec:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20406aee:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20406af0:	853e                	mv	a0,a5
20406af2:	50b2                	lw	ra,44(sp)
20406af4:	5422                	lw	s0,40(sp)
20406af6:	6145                	addi	sp,sp,48
20406af8:	8082                	ret

20406afa <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20406afa:	1101                	addi	sp,sp,-32
20406afc:	ce06                	sw	ra,28(sp)
20406afe:	cc22                	sw	s0,24(sp)
20406b00:	1000                	addi	s0,sp,32
20406b02:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20406b06:	fec42503          	lw	a0,-20(s0)
20406b0a:	fb0ff0ef          	jal	ra,204062ba <__metal_driver_sifive_gpio0_interrupt_parent>
20406b0e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20406b10:	853e                	mv	a0,a5
20406b12:	40f2                	lw	ra,28(sp)
20406b14:	4462                	lw	s0,24(sp)
20406b16:	6105                	addi	sp,sp,32
20406b18:	8082                	ret

20406b1a <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20406b1a:	7179                	addi	sp,sp,-48
20406b1c:	d606                	sw	ra,44(sp)
20406b1e:	d422                	sw	s0,40(sp)
20406b20:	1800                	addi	s0,sp,48
20406b22:	fca42e23          	sw	a0,-36(s0)
20406b26:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20406b2a:	fd842583          	lw	a1,-40(s0)
20406b2e:	fdc42503          	lw	a0,-36(s0)
20406b32:	fb2ff0ef          	jal	ra,204062e4 <__metal_driver_sifive_gpio0_interrupt_lines>
20406b36:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20406b3a:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20406b3e:	853e                	mv	a0,a5
20406b40:	50b2                	lw	ra,44(sp)
20406b42:	5422                	lw	s0,40(sp)
20406b44:	6145                	addi	sp,sp,48
20406b46:	8082                	ret

20406b48 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:863
{
20406b48:	1101                	addi	sp,sp,-32
20406b4a:	ce22                	sw	s0,28(sp)
20406b4c:	1000                	addi	s0,sp,32
20406b4e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20406b52:	fec42703          	lw	a4,-20(s0)
20406b56:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20406b5a:	00f71563          	bne	a4,a5,20406b64 <__metal_driver_sifive_test0_base+0x1c>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20406b5e:	001007b7          	lui	a5,0x100
20406b62:	a011                	j	20406b66 <__metal_driver_sifive_test0_base+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:868
		return 0;
20406b64:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:870
}
20406b66:	853e                	mv	a0,a5
20406b68:	4472                	lw	s0,28(sp)
20406b6a:	6105                	addi	sp,sp,32
20406b6c:	8082                	ret

20406b6e <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406b6e:	7179                	addi	sp,sp,-48
20406b70:	d606                	sw	ra,44(sp)
20406b72:	d422                	sw	s0,40(sp)
20406b74:	1800                	addi	s0,sp,48
20406b76:	fca42e23          	sw	a0,-36(s0)
20406b7a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20406b7e:	fdc42503          	lw	a0,-36(s0)
20406b82:	37d9                	jal	20406b48 <__metal_driver_sifive_test0_base>
20406b84:	87aa                	mv	a5,a0
20406b86:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20406b8a:	fd842783          	lw	a5,-40(s0)
20406b8e:	01079713          	slli	a4,a5,0x10
20406b92:	fd842783          	lw	a5,-40(s0)
20406b96:	e789                	bnez	a5,20406ba0 <__metal_driver_sifive_test0_exit+0x32>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20406b98:	6795                	lui	a5,0x5
20406b9a:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20406b9e:	a021                	j	20406ba6 <__metal_driver_sifive_test0_exit+0x38>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20406ba0:	678d                	lui	a5,0x3
20406ba2:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20406ba6:	97ba                	add	a5,a5,a4
20406ba8:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406bac:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20406bb0:	fe842703          	lw	a4,-24(s0)
20406bb4:	c398                	sw	a4,0(a5)
20406bb6:	bfdd                	j	20406bac <__metal_driver_sifive_test0_exit+0x3e>

20406bb8 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:888
{
20406bb8:	1101                	addi	sp,sp,-32
20406bba:	ce22                	sw	s0,28(sp)
20406bbc:	1000                	addi	s0,sp,32
20406bbe:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406bc2:	fec42703          	lw	a4,-20(s0)
20406bc6:	800007b7          	lui	a5,0x80000
20406bca:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20406bce:	00f71563          	bne	a4,a5,20406bd8 <__metal_driver_sifive_uart0_control_base+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20406bd2:	100137b7          	lui	a5,0x10013
20406bd6:	a011                	j	20406bda <__metal_driver_sifive_uart0_control_base+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:893
		return 0;
20406bd8:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:895
}
20406bda:	853e                	mv	a0,a5
20406bdc:	4472                	lw	s0,28(sp)
20406bde:	6105                	addi	sp,sp,32
20406be0:	8082                	ret

20406be2 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:918
{
20406be2:	1101                	addi	sp,sp,-32
20406be4:	ce22                	sw	s0,28(sp)
20406be6:	1000                	addi	s0,sp,32
20406be8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406bec:	fec42703          	lw	a4,-20(s0)
20406bf0:	800007b7          	lui	a5,0x80000
20406bf4:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20406bf8:	00f71763          	bne	a4,a5,20406c06 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406bfc:	800007b7          	lui	a5,0x80000
20406c00:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe348>
20406c04:	a011                	j	20406c08 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:923
		return 0;
20406c06:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:925
}
20406c08:	853e                	mv	a0,a5
20406c0a:	4472                	lw	s0,28(sp)
20406c0c:	6105                	addi	sp,sp,32
20406c0e:	8082                	ret

20406c10 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:928
{
20406c10:	1101                	addi	sp,sp,-32
20406c12:	ce22                	sw	s0,28(sp)
20406c14:	1000                	addi	s0,sp,32
20406c16:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406c1a:	fec42703          	lw	a4,-20(s0)
20406c1e:	800007b7          	lui	a5,0x80000
20406c22:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20406c26:	00f71463          	bne	a4,a5,20406c2e <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:930
		return 5;
20406c2a:	4795                	li	a5,5
20406c2c:	a011                	j	20406c30 <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:933
		return 0;
20406c2e:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:935
}
20406c30:	853e                	mv	a0,a5
20406c32:	4472                	lw	s0,28(sp)
20406c34:	6105                	addi	sp,sp,32
20406c36:	8082                	ret

20406c38 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:938
{
20406c38:	1101                	addi	sp,sp,-32
20406c3a:	ce22                	sw	s0,28(sp)
20406c3c:	1000                	addi	s0,sp,32
20406c3e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406c42:	fec42703          	lw	a4,-20(s0)
20406c46:	800007b7          	lui	a5,0x80000
20406c4a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20406c4e:	00f71763          	bne	a4,a5,20406c5c <__metal_driver_sifive_uart0_clock+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20406c52:	800007b7          	lui	a5,0x80000
20406c56:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe680>
20406c5a:	a011                	j	20406c5e <__metal_driver_sifive_uart0_clock+0x26>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:943
		return 0;
20406c5c:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:945
}
20406c5e:	853e                	mv	a0,a5
20406c60:	4472                	lw	s0,28(sp)
20406c62:	6105                	addi	sp,sp,32
20406c64:	8082                	ret

20406c66 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:948
{
20406c66:	1101                	addi	sp,sp,-32
20406c68:	ce22                	sw	s0,28(sp)
20406c6a:	1000                	addi	s0,sp,32
20406c6c:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406c70:	fec42703          	lw	a4,-20(s0)
20406c74:	800007b7          	lui	a5,0x80000
20406c78:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20406c7c:	00f71563          	bne	a4,a5,20406c86 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20406c80:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406c84:	a011                	j	20406c88 <__metal_driver_sifive_uart0_pinmux+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:953
		return 0;
20406c86:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:955
}
20406c88:	853e                	mv	a0,a5
20406c8a:	4472                	lw	s0,28(sp)
20406c8c:	6105                	addi	sp,sp,32
20406c8e:	8082                	ret

20406c90 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:958
{
20406c90:	1101                	addi	sp,sp,-32
20406c92:	ce22                	sw	s0,28(sp)
20406c94:	1000                	addi	s0,sp,32
20406c96:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406c9a:	fec42703          	lw	a4,-20(s0)
20406c9e:	800007b7          	lui	a5,0x80000
20406ca2:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20406ca6:	00f71463          	bne	a4,a5,20406cae <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:960
		return 0;
20406caa:	4781                	li	a5,0
20406cac:	a011                	j	20406cb0 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:963
		return 0;
20406cae:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:965
}
20406cb0:	853e                	mv	a0,a5
20406cb2:	4472                	lw	s0,28(sp)
20406cb4:	6105                	addi	sp,sp,32
20406cb6:	8082                	ret

20406cb8 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:968
{
20406cb8:	1101                	addi	sp,sp,-32
20406cba:	ce22                	sw	s0,28(sp)
20406cbc:	1000                	addi	s0,sp,32
20406cbe:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406cc2:	fec42703          	lw	a4,-20(s0)
20406cc6:	800007b7          	lui	a5,0x80000
20406cca:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe648>
20406cce:	00f71563          	bne	a4,a5,20406cd8 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:970
		return 196608;
20406cd2:	000307b7          	lui	a5,0x30
20406cd6:	a011                	j	20406cda <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:973
		return 0;
20406cd8:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:975
}
20406cda:	853e                	mv	a0,a5
20406cdc:	4472                	lw	s0,28(sp)
20406cde:	6105                	addi	sp,sp,32
20406ce0:	8082                	ret

20406ce2 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20406ce2:	1101                	addi	sp,sp,-32
20406ce4:	ce06                	sw	ra,28(sp)
20406ce6:	cc22                	sw	s0,24(sp)
20406ce8:	1000                	addi	s0,sp,32
20406cea:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20406cee:	fec42503          	lw	a0,-20(s0)
20406cf2:	ef1ff0ef          	jal	ra,20406be2 <__metal_driver_sifive_uart0_interrupt_parent>
20406cf6:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406cf8:	853e                	mv	a0,a5
20406cfa:	40f2                	lw	ra,28(sp)
20406cfc:	4462                	lw	s0,24(sp)
20406cfe:	6105                	addi	sp,sp,32
20406d00:	8082                	ret

20406d02 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20406d02:	1101                	addi	sp,sp,-32
20406d04:	ce06                	sw	ra,28(sp)
20406d06:	cc22                	sw	s0,24(sp)
20406d08:	1000                	addi	s0,sp,32
20406d0a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406d0e:	fec42503          	lw	a0,-20(s0)
20406d12:	effff0ef          	jal	ra,20406c10 <__metal_driver_sifive_uart0_interrupt_line>
20406d16:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406d18:	853e                	mv	a0,a5
20406d1a:	40f2                	lw	ra,28(sp)
20406d1c:	4462                	lw	s0,24(sp)
20406d1e:	6105                	addi	sp,sp,32
20406d20:	8082                	ret

20406d22 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20406d22:	7179                	addi	sp,sp,-48
20406d24:	d606                	sw	ra,44(sp)
20406d26:	d422                	sw	s0,40(sp)
20406d28:	1800                	addi	s0,sp,48
20406d2a:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d2e:	fdc42503          	lw	a0,-36(s0)
20406d32:	e87ff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406d36:	87aa                	mv	a5,a0
20406d38:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20406d3c:	fec42783          	lw	a5,-20(s0)
20406d40:	07c1                	addi	a5,a5,16
20406d42:	439c                	lw	a5,0(a5)
20406d44:	fec42703          	lw	a4,-20(s0)
20406d48:	0741                	addi	a4,a4,16
20406d4a:	0017e793          	ori	a5,a5,1
20406d4e:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20406d50:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:50
}
20406d52:	853e                	mv	a0,a5
20406d54:	50b2                	lw	ra,44(sp)
20406d56:	5422                	lw	s0,40(sp)
20406d58:	6145                	addi	sp,sp,48
20406d5a:	8082                	ret

20406d5c <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20406d5c:	7179                	addi	sp,sp,-48
20406d5e:	d606                	sw	ra,44(sp)
20406d60:	d422                	sw	s0,40(sp)
20406d62:	1800                	addi	s0,sp,48
20406d64:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406d68:	fdc42503          	lw	a0,-36(s0)
20406d6c:	e4dff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406d70:	87aa                	mv	a5,a0
20406d72:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20406d76:	fec42783          	lw	a5,-20(s0)
20406d7a:	07c1                	addi	a5,a5,16
20406d7c:	439c                	lw	a5,0(a5)
20406d7e:	fec42703          	lw	a4,-20(s0)
20406d82:	0741                	addi	a4,a4,16
20406d84:	9bf9                	andi	a5,a5,-2
20406d86:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20406d88:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:57
}
20406d8a:	853e                	mv	a0,a5
20406d8c:	50b2                	lw	ra,44(sp)
20406d8e:	5422                	lw	s0,40(sp)
20406d90:	6145                	addi	sp,sp,48
20406d92:	8082                	ret

20406d94 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20406d94:	7179                	addi	sp,sp,-48
20406d96:	d606                	sw	ra,44(sp)
20406d98:	d422                	sw	s0,40(sp)
20406d9a:	1800                	addi	s0,sp,48
20406d9c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406da0:	fdc42503          	lw	a0,-36(s0)
20406da4:	e15ff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406da8:	87aa                	mv	a5,a0
20406daa:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20406dae:	fec42783          	lw	a5,-20(s0)
20406db2:	07c1                	addi	a5,a5,16
20406db4:	439c                	lw	a5,0(a5)
20406db6:	fec42703          	lw	a4,-20(s0)
20406dba:	0741                	addi	a4,a4,16
20406dbc:	0027e793          	ori	a5,a5,2
20406dc0:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20406dc2:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:64
}
20406dc4:	853e                	mv	a0,a5
20406dc6:	50b2                	lw	ra,44(sp)
20406dc8:	5422                	lw	s0,40(sp)
20406dca:	6145                	addi	sp,sp,48
20406dcc:	8082                	ret

20406dce <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
20406dce:	7179                	addi	sp,sp,-48
20406dd0:	d606                	sw	ra,44(sp)
20406dd2:	d422                	sw	s0,40(sp)
20406dd4:	1800                	addi	s0,sp,48
20406dd6:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406dda:	fdc42503          	lw	a0,-36(s0)
20406dde:	ddbff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406de2:	87aa                	mv	a5,a0
20406de4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20406de8:	fec42783          	lw	a5,-20(s0)
20406dec:	07c1                	addi	a5,a5,16
20406dee:	439c                	lw	a5,0(a5)
20406df0:	fec42703          	lw	a4,-20(s0)
20406df4:	0741                	addi	a4,a4,16
20406df6:	9bf5                	andi	a5,a5,-3
20406df8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20406dfa:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:71
}
20406dfc:	853e                	mv	a0,a5
20406dfe:	50b2                	lw	ra,44(sp)
20406e00:	5422                	lw	s0,40(sp)
20406e02:	6145                	addi	sp,sp,48
20406e04:	8082                	ret

20406e06 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20406e06:	7179                	addi	sp,sp,-48
20406e08:	d606                	sw	ra,44(sp)
20406e0a:	d422                	sw	s0,40(sp)
20406e0c:	1800                	addi	s0,sp,48
20406e0e:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e12:	fdc42503          	lw	a0,-36(s0)
20406e16:	da3ff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406e1a:	87aa                	mv	a5,a0
20406e1c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20406e20:	fec42783          	lw	a5,-20(s0)
20406e24:	439c                	lw	a5,0(a5)
20406e26:	83fd                	srli	a5,a5,0x1f
20406e28:	0ff7f793          	zext.b	a5,a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:77
}
20406e2c:	853e                	mv	a0,a5
20406e2e:	50b2                	lw	ra,44(sp)
20406e30:	5422                	lw	s0,40(sp)
20406e32:	6145                	addi	sp,sp,48
20406e34:	8082                	ret

20406e36 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406e36:	7179                	addi	sp,sp,-48
20406e38:	d606                	sw	ra,44(sp)
20406e3a:	d422                	sw	s0,40(sp)
20406e3c:	1800                	addi	s0,sp,48
20406e3e:	fca42e23          	sw	a0,-36(s0)
20406e42:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e46:	fdc42503          	lw	a0,-36(s0)
20406e4a:	d6fff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406e4e:	87aa                	mv	a5,a0
20406e50:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20406e54:	fec42783          	lw	a5,-20(s0)
20406e58:	07a1                	addi	a5,a5,8
20406e5a:	4398                	lw	a4,0(a5)
20406e5c:	fd842783          	lw	a5,-40(s0)
20406e60:	01079693          	slli	a3,a5,0x10
20406e64:	000707b7          	lui	a5,0x70
20406e68:	8ff5                	and	a5,a5,a3
20406e6a:	fec42683          	lw	a3,-20(s0)
20406e6e:	06a1                	addi	a3,a3,8
20406e70:	8fd9                	or	a5,a5,a4
20406e72:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20406e74:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:85
}
20406e76:	853e                	mv	a0,a5
20406e78:	50b2                	lw	ra,44(sp)
20406e7a:	5422                	lw	s0,40(sp)
20406e7c:	6145                	addi	sp,sp,48
20406e7e:	8082                	ret

20406e80 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20406e80:	7179                	addi	sp,sp,-48
20406e82:	d606                	sw	ra,44(sp)
20406e84:	d422                	sw	s0,40(sp)
20406e86:	1800                	addi	s0,sp,48
20406e88:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406e8c:	fdc42503          	lw	a0,-36(s0)
20406e90:	d29ff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406e94:	87aa                	mv	a5,a0
20406e96:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20406e9a:	fec42783          	lw	a5,-20(s0)
20406e9e:	07a1                	addi	a5,a5,8
20406ea0:	439c                	lw	a5,0(a5)
20406ea2:	83c1                	srli	a5,a5,0x10
20406ea4:	8b9d                	andi	a5,a5,7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:91
}
20406ea6:	853e                	mv	a0,a5
20406ea8:	50b2                	lw	ra,44(sp)
20406eaa:	5422                	lw	s0,40(sp)
20406eac:	6145                	addi	sp,sp,48
20406eae:	8082                	ret

20406eb0 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406eb0:	7179                	addi	sp,sp,-48
20406eb2:	d606                	sw	ra,44(sp)
20406eb4:	d422                	sw	s0,40(sp)
20406eb6:	1800                	addi	s0,sp,48
20406eb8:	fca42e23          	sw	a0,-36(s0)
20406ebc:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406ec0:	fdc42503          	lw	a0,-36(s0)
20406ec4:	cf5ff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406ec8:	87aa                	mv	a5,a0
20406eca:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
20406ece:	fec42783          	lw	a5,-20(s0)
20406ed2:	07b1                	addi	a5,a5,12
20406ed4:	4398                	lw	a4,0(a5)
20406ed6:	fd842783          	lw	a5,-40(s0)
20406eda:	01079693          	slli	a3,a5,0x10
20406ede:	000707b7          	lui	a5,0x70
20406ee2:	8ff5                	and	a5,a5,a3
20406ee4:	fec42683          	lw	a3,-20(s0)
20406ee8:	06b1                	addi	a3,a3,12
20406eea:	8fd9                	or	a5,a5,a4
20406eec:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
20406eee:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:99
}
20406ef0:	853e                	mv	a0,a5
20406ef2:	50b2                	lw	ra,44(sp)
20406ef4:	5422                	lw	s0,40(sp)
20406ef6:	6145                	addi	sp,sp,48
20406ef8:	8082                	ret

20406efa <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20406efa:	7179                	addi	sp,sp,-48
20406efc:	d606                	sw	ra,44(sp)
20406efe:	d422                	sw	s0,40(sp)
20406f00:	1800                	addi	s0,sp,48
20406f02:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f06:	fdc42503          	lw	a0,-36(s0)
20406f0a:	cafff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406f0e:	87aa                	mv	a5,a0
20406f10:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20406f14:	fec42783          	lw	a5,-20(s0)
20406f18:	07b1                	addi	a5,a5,12
20406f1a:	439c                	lw	a5,0(a5)
20406f1c:	83c1                	srli	a5,a5,0x10
20406f1e:	8b9d                	andi	a5,a5,7
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:105
}
20406f20:	853e                	mv	a0,a5
20406f22:	50b2                	lw	ra,44(sp)
20406f24:	5422                	lw	s0,40(sp)
20406f26:	6145                	addi	sp,sp,48
20406f28:	8082                	ret

20406f2a <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20406f2a:	7179                	addi	sp,sp,-48
20406f2c:	d606                	sw	ra,44(sp)
20406f2e:	d422                	sw	s0,40(sp)
20406f30:	1800                	addi	s0,sp,48
20406f32:	fca42e23          	sw	a0,-36(s0)
20406f36:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f3a:	fdc42503          	lw	a0,-36(s0)
20406f3e:	c7bff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406f42:	87aa                	mv	a5,a0
20406f44:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20406f48:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20406f4a:	fdc42503          	lw	a0,-36(s0)
20406f4e:	eb9ff0ef          	jal	ra,20406e06 <__metal_driver_sifive_uart0_txready>
20406f52:	87aa                	mv	a5,a0
20406f54:	fbfd                	bnez	a5,20406f4a <__metal_driver_sifive_uart0_putc+0x20>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20406f56:	fec42783          	lw	a5,-20(s0)
20406f5a:	fd842703          	lw	a4,-40(s0)
20406f5e:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20406f60:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:115
}
20406f62:	853e                	mv	a0,a5
20406f64:	50b2                	lw	ra,44(sp)
20406f66:	5422                	lw	s0,40(sp)
20406f68:	6145                	addi	sp,sp,48
20406f6a:	8082                	ret

20406f6c <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20406f6c:	7179                	addi	sp,sp,-48
20406f6e:	d606                	sw	ra,44(sp)
20406f70:	d422                	sw	s0,40(sp)
20406f72:	1800                	addi	s0,sp,48
20406f74:	fca42e23          	sw	a0,-36(s0)
20406f78:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406f7c:	fdc42503          	lw	a0,-36(s0)
20406f80:	c39ff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20406f84:	87aa                	mv	a5,a0
20406f86:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20406f8a:	fec42783          	lw	a5,-20(s0)
20406f8e:	0791                	addi	a5,a5,4
20406f90:	439c                	lw	a5,0(a5)
20406f92:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20406f96:	fe842783          	lw	a5,-24(s0)
20406f9a:	0007d763          	bgez	a5,20406fa8 <__metal_driver_sifive_uart0_getc+0x3c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20406f9e:	fd842783          	lw	a5,-40(s0)
20406fa2:	577d                	li	a4,-1
20406fa4:	c398                	sw	a4,0(a5)
20406fa6:	a801                	j	20406fb6 <__metal_driver_sifive_uart0_getc+0x4a>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20406fa8:	fe842783          	lw	a5,-24(s0)
20406fac:	0ff7f713          	zext.b	a4,a5
20406fb0:	fd842783          	lw	a5,-40(s0)
20406fb4:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20406fb6:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406fb8:	853e                	mv	a0,a5
20406fba:	50b2                	lw	ra,44(sp)
20406fbc:	5422                	lw	s0,40(sp)
20406fbe:	6145                	addi	sp,sp,48
20406fc0:	8082                	ret

20406fc2 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20406fc2:	7179                	addi	sp,sp,-48
20406fc4:	d622                	sw	s0,44(sp)
20406fc6:	1800                	addi	s0,sp,48
20406fc8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406fcc:	fdc42783          	lw	a5,-36(s0)
20406fd0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20406fd4:	fec42783          	lw	a5,-20(s0)
20406fd8:	43dc                	lw	a5,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:134
}
20406fda:	853e                	mv	a0,a5
20406fdc:	5432                	lw	s0,44(sp)
20406fde:	6145                	addi	sp,sp,48
20406fe0:	8082                	ret

20406fe2 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20406fe2:	7179                	addi	sp,sp,-48
20406fe4:	d606                	sw	ra,44(sp)
20406fe6:	d422                	sw	s0,40(sp)
20406fe8:	1800                	addi	s0,sp,48
20406fea:	fca42e23          	sw	a0,-36(s0)
20406fee:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406ff2:	fdc42783          	lw	a5,-36(s0)
20406ff6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20406ffa:	fdc42503          	lw	a0,-36(s0)
20406ffe:	bbbff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
20407002:	87aa                	mv	a5,a0
20407004:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407008:	fdc42503          	lw	a0,-36(s0)
2040700c:	c2dff0ef          	jal	ra,20406c38 <__metal_driver_sifive_uart0_clock>
20407010:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20407014:	fd842703          	lw	a4,-40(s0)
20407018:	fec42783          	lw	a5,-20(s0)
2040701c:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
2040701e:	fe442783          	lw	a5,-28(s0)
20407022:	cbb1                	beqz	a5,20407076 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20407024:	fe442783          	lw	a5,-28(s0)
20407028:	439c                	lw	a5,0(a5)
2040702a:	439c                	lw	a5,0(a5)
2040702c:	fe442503          	lw	a0,-28(s0)
20407030:	9782                	jalr	a5
20407032:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20407036:	fe042703          	lw	a4,-32(s0)
2040703a:	fd842783          	lw	a5,-40(s0)
2040703e:	02f747b3          	div	a5,a4,a5
20407042:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20407046:	fe842783          	lw	a5,-24(s0)
2040704a:	07e1                	addi	a5,a5,24
2040704c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2040704e:	fe842783          	lw	a5,-24(s0)
20407052:	07a1                	addi	a5,a5,8
20407054:	439c                	lw	a5,0(a5)
20407056:	fe842703          	lw	a4,-24(s0)
2040705a:	0721                	addi	a4,a4,8
2040705c:	0017e793          	ori	a5,a5,1
20407060:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20407062:	fe842783          	lw	a5,-24(s0)
20407066:	07b1                	addi	a5,a5,12
20407068:	439c                	lw	a5,0(a5)
2040706a:	fe842703          	lw	a4,-24(s0)
2040706e:	0731                	addi	a4,a4,12
20407070:	0017e793          	ori	a5,a5,1
20407074:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20407076:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:151
}
20407078:	853e                	mv	a0,a5
2040707a:	50b2                	lw	ra,44(sp)
2040707c:	5422                	lw	s0,40(sp)
2040707e:	6145                	addi	sp,sp,48
20407080:	8082                	ret

20407082 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20407082:	7139                	addi	sp,sp,-64
20407084:	de06                	sw	ra,60(sp)
20407086:	dc22                	sw	s0,56(sp)
20407088:	0080                	addi	s0,sp,64
2040708a:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
2040708e:	fcc42783          	lw	a5,-52(s0)
20407092:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20407096:	fcc42503          	lw	a0,-52(s0)
2040709a:	b1fff0ef          	jal	ra,20406bb8 <__metal_driver_sifive_uart0_control_base>
2040709e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
204070a0:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
204070a4:	fcc42503          	lw	a0,-52(s0)
204070a8:	b91ff0ef          	jal	ra,20406c38 <__metal_driver_sifive_uart0_clock>
204070ac:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
204070b0:	fe842783          	lw	a5,-24(s0)
204070b4:	07a1                	addi	a5,a5,8
204070b6:	4398                	lw	a4,0(a5)
204070b8:	fe842783          	lw	a5,-24(s0)
204070bc:	07a1                	addi	a5,a5,8
204070be:	86be                	mv	a3,a5
204070c0:	fff907b7          	lui	a5,0xfff90
204070c4:	17fd                	addi	a5,a5,-1
204070c6:	8ff9                	and	a5,a5,a4
204070c8:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
204070ca:	fe842783          	lw	a5,-24(s0)
204070ce:	07a1                	addi	a5,a5,8
204070d0:	4398                	lw	a4,0(a5)
204070d2:	fe842783          	lw	a5,-24(s0)
204070d6:	07a1                	addi	a5,a5,8
204070d8:	86be                	mv	a3,a5
204070da:	67c1                	lui	a5,0x10
204070dc:	8fd9                	or	a5,a5,a4
204070de:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
204070e0:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
204070e2:	fe842783          	lw	a5,-24(s0)
204070e6:	07d1                	addi	a5,a5,20
204070e8:	439c                	lw	a5,0(a5)
204070ea:	8b85                	andi	a5,a5,1
204070ec:	dbfd                	beqz	a5,204070e2 <pre_rate_change_callback_func+0x60>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
204070ee:	fe842783          	lw	a5,-24(s0)
204070f2:	07a1                	addi	a5,a5,8
204070f4:	439c                	lw	a5,0(a5)
204070f6:	8b89                	andi	a5,a5,2
204070f8:	c399                	beqz	a5,204070fe <pre_rate_change_callback_func+0x7c>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
204070fa:	47a5                	li	a5,9
204070fc:	a011                	j	20407100 <pre_rate_change_callback_func+0x7e>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
204070fe:	47a9                	li	a5,10
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20407100:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20407104:	fe442783          	lw	a5,-28(s0)
20407108:	439c                	lw	a5,0(a5)
2040710a:	439c                	lw	a5,0(a5)
2040710c:	fe442503          	lw	a0,-28(s0)
20407110:	9782                	jalr	a5
20407112:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20407116:	fe042703          	lw	a4,-32(s0)
2040711a:	fdc42783          	lw	a5,-36(s0)
2040711e:	02f707b3          	mul	a5,a4,a5
20407122:	873e                	mv	a4,a5
20407124:	fec42783          	lw	a5,-20(s0)
20407128:	43dc                	lw	a5,4(a5)
2040712a:	02f757b3          	divu	a5,a4,a5
2040712e:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20407132:	fc042a23          	sw	zero,-44(s0)
20407136:	a039                	j	20407144 <pre_rate_change_callback_func+0xc2>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20407138:	0001                	nop
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
2040713a:	fd442783          	lw	a5,-44(s0)
2040713e:	0785                	addi	a5,a5,1
20407140:	fcf42a23          	sw	a5,-44(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20407144:	fd442783          	lw	a5,-44(s0)
20407148:	fd842703          	lw	a4,-40(s0)
2040714c:	fee7c6e3          	blt	a5,a4,20407138 <pre_rate_change_callback_func+0xb6>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:180
}
20407150:	0001                	nop
20407152:	0001                	nop
20407154:	50f2                	lw	ra,60(sp)
20407156:	5462                	lw	s0,56(sp)
20407158:	6121                	addi	sp,sp,64
2040715a:	8082                	ret

2040715c <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
2040715c:	7179                	addi	sp,sp,-48
2040715e:	d606                	sw	ra,44(sp)
20407160:	d422                	sw	s0,40(sp)
20407162:	1800                	addi	s0,sp,48
20407164:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20407168:	fdc42783          	lw	a5,-36(s0)
2040716c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20407170:	fec42703          	lw	a4,-20(s0)
20407174:	fec42783          	lw	a5,-20(s0)
20407178:	43dc                	lw	a5,4(a5)
2040717a:	85be                	mv	a1,a5
2040717c:	853a                	mv	a0,a4
2040717e:	d75fb0ef          	jal	ra,20402ef2 <metal_uart_set_baud_rate>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:185
}
20407182:	0001                	nop
20407184:	50b2                	lw	ra,44(sp)
20407186:	5422                	lw	s0,40(sp)
20407188:	6145                	addi	sp,sp,48
2040718a:	8082                	ret

2040718c <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2040718c:	7139                	addi	sp,sp,-64
2040718e:	de06                	sw	ra,60(sp)
20407190:	dc22                	sw	s0,56(sp)
20407192:	0080                	addi	s0,sp,64
20407194:	fca42623          	sw	a0,-52(s0)
20407198:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040719c:	fcc42783          	lw	a5,-52(s0)
204071a0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
204071a4:	fcc42503          	lw	a0,-52(s0)
204071a8:	a91ff0ef          	jal	ra,20406c38 <__metal_driver_sifive_uart0_clock>
204071ac:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
204071b0:	fcc42503          	lw	a0,-52(s0)
204071b4:	ab3ff0ef          	jal	ra,20406c66 <__metal_driver_sifive_uart0_pinmux>
204071b8:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
204071bc:	fe842783          	lw	a5,-24(s0)
204071c0:	c7b9                	beqz	a5,2040720e <__metal_driver_sifive_uart0_init+0x82>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
204071c2:	fec42783          	lw	a5,-20(s0)
204071c6:	20407737          	lui	a4,0x20407
204071ca:	08270713          	addi	a4,a4,130 # 20407082 <pre_rate_change_callback_func>
204071ce:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
204071d0:	fec42783          	lw	a5,-20(s0)
204071d4:	fcc42703          	lw	a4,-52(s0)
204071d8:	c7d8                	sw	a4,12(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
204071da:	fec42783          	lw	a5,-20(s0)
204071de:	07a1                	addi	a5,a5,8
204071e0:	85be                	mv	a1,a5
204071e2:	fe842503          	lw	a0,-24(s0)
204071e6:	2241                	jal	20407366 <metal_clock_register_pre_rate_change_callback>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
204071e8:	fec42783          	lw	a5,-20(s0)
204071ec:	20407737          	lui	a4,0x20407
204071f0:	15c70713          	addi	a4,a4,348 # 2040715c <post_rate_change_callback_func>
204071f4:	cbd8                	sw	a4,20(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
204071f6:	fec42783          	lw	a5,-20(s0)
204071fa:	fcc42703          	lw	a4,-52(s0)
204071fe:	cf98                	sw	a4,24(a5)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20407200:	fec42783          	lw	a5,-20(s0)
20407204:	07d1                	addi	a5,a5,20
20407206:	85be                	mv	a1,a5
20407208:	fe842503          	lw	a0,-24(s0)
2040720c:	2271                	jal	20407398 <metal_clock_register_post_rate_change_callback>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040720e:	fec42783          	lw	a5,-20(s0)
20407212:	fc842583          	lw	a1,-56(s0)
20407216:	853e                	mv	a0,a5
20407218:	cdbfb0ef          	jal	ra,20402ef2 <metal_uart_set_baud_rate>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2040721c:	fe442783          	lw	a5,-28(s0)
20407220:	cb95                	beqz	a5,20407254 <__metal_driver_sifive_uart0_init+0xc8>
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20407222:	fcc42503          	lw	a0,-52(s0)
20407226:	a6bff0ef          	jal	ra,20406c90 <__metal_driver_sifive_uart0_pinmux_output_selector>
2040722a:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
2040722c:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20407230:	fcc42503          	lw	a0,-52(s0)
20407234:	a85ff0ef          	jal	ra,20406cb8 <__metal_driver_sifive_uart0_pinmux_source_selector>
20407238:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
2040723a:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2040723e:	fe442783          	lw	a5,-28(s0)
20407242:	439c                	lw	a5,0(a5)
20407244:	53dc                	lw	a5,36(a5)
20407246:	fdc42603          	lw	a2,-36(s0)
2040724a:	fe042583          	lw	a1,-32(s0)
2040724e:	fe442503          	lw	a0,-28(s0)
20407252:	9782                	jalr	a5
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20407254:	0001                	nop
20407256:	50f2                	lw	ra,60(sp)
20407258:	5462                	lw	s0,56(sp)
2040725a:	6121                	addi	sp,sp,64
2040725c:	8082                	ret

2040725e <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2040725e:	7179                	addi	sp,sp,-48
20407260:	d606                	sw	ra,44(sp)
20407262:	d422                	sw	s0,40(sp)
20407264:	1800                	addi	s0,sp,48
20407266:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
2040726a:	fdc42783          	lw	a5,-36(s0)
2040726e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:52
    while (current) {
20407272:	a831                	j	2040728e <_metal_clock_call_all_callbacks+0x30>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20407274:	fec42783          	lw	a5,-20(s0)
20407278:	4398                	lw	a4,0(a5)
2040727a:	fec42783          	lw	a5,-20(s0)
2040727e:	43dc                	lw	a5,4(a5)
20407280:	853e                	mv	a0,a5
20407282:	9702                	jalr	a4
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:54
        current = current->_next;
20407284:	fec42783          	lw	a5,-20(s0)
20407288:	479c                	lw	a5,8(a5)
2040728a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:52
    while (current) {
2040728e:	fec42783          	lw	a5,-20(s0)
20407292:	f3ed                	bnez	a5,20407274 <_metal_clock_call_all_callbacks+0x16>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:56
    }
}
20407294:	0001                	nop
20407296:	0001                	nop
20407298:	50b2                	lw	ra,44(sp)
2040729a:	5422                	lw	s0,40(sp)
2040729c:	6145                	addi	sp,sp,48
2040729e:	8082                	ret

204072a0 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
204072a0:	7179                	addi	sp,sp,-48
204072a2:	d622                	sw	s0,44(sp)
204072a4:	1800                	addi	s0,sp,48
204072a6:	fca42e23          	sw	a0,-36(s0)
204072aa:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
204072ae:	fd842783          	lw	a5,-40(s0)
204072b2:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:66

    if (!list) {
204072b6:	fdc42783          	lw	a5,-36(s0)
204072ba:	e781                	bnez	a5,204072c2 <_metal_clock_append_to_callbacks+0x22>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:67
        return cb;
204072bc:	fd842783          	lw	a5,-40(s0)
204072c0:	a035                	j	204072ec <_metal_clock_append_to_callbacks+0x4c>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
204072c2:	fdc42783          	lw	a5,-36(s0)
204072c6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
204072ca:	a031                	j	204072d6 <_metal_clock_append_to_callbacks+0x36>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:73
        current = current->_next;
204072cc:	fec42783          	lw	a5,-20(s0)
204072d0:	479c                	lw	a5,8(a5)
204072d2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
204072d6:	fec42783          	lw	a5,-20(s0)
204072da:	479c                	lw	a5,8(a5)
204072dc:	fbe5                	bnez	a5,204072cc <_metal_clock_append_to_callbacks+0x2c>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
204072de:	fec42783          	lw	a5,-20(s0)
204072e2:	fd842703          	lw	a4,-40(s0)
204072e6:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:78

    return list;
204072e8:	fdc42783          	lw	a5,-36(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:79
}
204072ec:	853e                	mv	a0,a5
204072ee:	5432                	lw	s0,44(sp)
204072f0:	6145                	addi	sp,sp,48
204072f2:	8082                	ret

204072f4 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
204072f4:	1101                	addi	sp,sp,-32
204072f6:	ce06                	sw	ra,28(sp)
204072f8:	cc22                	sw	s0,24(sp)
204072fa:	1000                	addi	s0,sp,32
204072fc:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20407300:	fec42783          	lw	a5,-20(s0)
20407304:	439c                	lw	a5,0(a5)
20407306:	439c                	lw	a5,0(a5)
20407308:	fec42503          	lw	a0,-20(s0)
2040730c:	9782                	jalr	a5
2040730e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:112
}
20407310:	853e                	mv	a0,a5
20407312:	40f2                	lw	ra,28(sp)
20407314:	4462                	lw	s0,24(sp)
20407316:	6105                	addi	sp,sp,32
20407318:	8082                	ret

2040731a <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
2040731a:	7179                	addi	sp,sp,-48
2040731c:	d606                	sw	ra,44(sp)
2040731e:	d422                	sw	s0,40(sp)
20407320:	1800                	addi	s0,sp,48
20407322:	fca42e23          	sw	a0,-36(s0)
20407326:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
2040732a:	fdc42783          	lw	a5,-36(s0)
2040732e:	43dc                	lw	a5,4(a5)
20407330:	853e                	mv	a0,a5
20407332:	f2dff0ef          	jal	ra,2040725e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20407336:	fdc42783          	lw	a5,-36(s0)
2040733a:	439c                	lw	a5,0(a5)
2040733c:	43dc                	lw	a5,4(a5)
2040733e:	fd842583          	lw	a1,-40(s0)
20407342:	fdc42503          	lw	a0,-36(s0)
20407346:	9782                	jalr	a5
20407348:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
2040734c:	fdc42783          	lw	a5,-36(s0)
20407350:	479c                	lw	a5,8(a5)
20407352:	853e                	mv	a0,a5
20407354:	f0bff0ef          	jal	ra,2040725e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:135

    return out;
20407358:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:136
}
2040735c:	853e                	mv	a0,a5
2040735e:	50b2                	lw	ra,44(sp)
20407360:	5422                	lw	s0,40(sp)
20407362:	6145                	addi	sp,sp,48
20407364:	8082                	ret

20407366 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20407366:	1101                	addi	sp,sp,-32
20407368:	ce06                	sw	ra,28(sp)
2040736a:	cc22                	sw	s0,24(sp)
2040736c:	1000                	addi	s0,sp,32
2040736e:	fea42623          	sw	a0,-20(s0)
20407372:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20407376:	fec42783          	lw	a5,-20(s0)
2040737a:	43dc                	lw	a5,4(a5)
2040737c:	fe842583          	lw	a1,-24(s0)
20407380:	853e                	mv	a0,a5
20407382:	f1fff0ef          	jal	ra,204072a0 <_metal_clock_append_to_callbacks>
20407386:	872a                	mv	a4,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20407388:	fec42783          	lw	a5,-20(s0)
2040738c:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:149
}
2040738e:	0001                	nop
20407390:	40f2                	lw	ra,28(sp)
20407392:	4462                	lw	s0,24(sp)
20407394:	6105                	addi	sp,sp,32
20407396:	8082                	ret

20407398 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20407398:	1101                	addi	sp,sp,-32
2040739a:	ce06                	sw	ra,28(sp)
2040739c:	cc22                	sw	s0,24(sp)
2040739e:	1000                	addi	s0,sp,32
204073a0:	fea42623          	sw	a0,-20(s0)
204073a4:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
204073a8:	fec42783          	lw	a5,-20(s0)
204073ac:	479c                	lw	a5,8(a5)
204073ae:	fe842583          	lw	a1,-24(s0)
204073b2:	853e                	mv	a0,a5
204073b4:	eedff0ef          	jal	ra,204072a0 <_metal_clock_append_to_callbacks>
204073b8:	872a                	mv	a4,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
204073ba:	fec42783          	lw	a5,-20(s0)
204073be:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/kernel/freedom-metal/metal/clock.h:162
}
204073c0:	0001                	nop
204073c2:	40f2                	lw	ra,28(sp)
204073c4:	4462                	lw	s0,24(sp)
204073c6:	6105                	addi	sp,sp,32
204073c8:	8082                	ret

204073ca <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/wsFreedomStudio/kernel/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
204073ca:	1101                	addi	sp,sp,-32
204073cc:	ce06                	sw	ra,28(sp)
204073ce:	cc22                	sw	s0,24(sp)
204073d0:	1000                	addi	s0,sp,32
204073d2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
204073d6:	fec42783          	lw	a5,-20(s0)
204073da:	439c                	lw	a5,0(a5)
204073dc:	57dc                	lw	a5,44(a5)
204073de:	fec42503          	lw	a0,-20(s0)
204073e2:	9782                	jalr	a5
204073e4:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/metal/cpu.h:226
}
204073e6:	853e                	mv	a0,a5
204073e8:	40f2                	lw	ra,28(sp)
204073ea:	4462                	lw	s0,24(sp)
204073ec:	6105                	addi	sp,sp,32
204073ee:	8082                	ret

204073f0 <metal_cpu_get>:
metal_cpu_get():
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
204073f0:	1101                	addi	sp,sp,-32
204073f2:	ce22                	sw	s0,28(sp)
204073f4:	1000                	addi	s0,sp,32
204073f6:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
204073fa:	fec42783          	lw	a5,-20(s0)
204073fe:	eb99                	bnez	a5,20407414 <metal_cpu_get+0x24>
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20407400:	800007b7          	lui	a5,0x80000
20407404:	fec42703          	lw	a4,-20(s0)
20407408:	070a                	slli	a4,a4,0x2
2040740a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe698>
2040740e:	97ba                	add	a5,a5,a4
20407410:	439c                	lw	a5,0(a5)
20407412:	a011                	j	20407416 <metal_cpu_get+0x26>
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:11
    }
    return NULL;
20407414:	4781                	li	a5,0
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:12
}
20407416:	853e                	mv	a0,a5
20407418:	4472                	lw	s0,28(sp)
2040741a:	6105                	addi	sp,sp,32
2040741c:	8082                	ret

2040741e <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2040741e:	1101                	addi	sp,sp,-32
20407420:	ce22                	sw	s0,28(sp)
20407422:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20407424:	f14027f3          	csrr	a5,mhartid
20407428:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:18
    return mhartid;
2040742c:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/cpu.c:20
#endif
}
20407430:	853e                	mv	a0,a5
20407432:	4472                	lw	s0,28(sp)
20407434:	6105                	addi	sp,sp,32
20407436:	8082                	ret

20407438 <__metal_shutdown_exit>:
__metal_shutdown_exit():
C:/wsFreedomStudio/kernel/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
20407438:	1101                	addi	sp,sp,-32
2040743a:	ce06                	sw	ra,28(sp)
2040743c:	cc22                	sw	s0,24(sp)
2040743e:	1000                	addi	s0,sp,32
20407440:	fea42623          	sw	a0,-20(s0)
20407444:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
20407448:	fec42783          	lw	a5,-20(s0)
2040744c:	439c                	lw	a5,0(a5)
2040744e:	439c                	lw	a5,0(a5)
20407450:	fe842583          	lw	a1,-24(s0)
20407454:	fec42503          	lw	a0,-20(s0)
20407458:	9782                	jalr	a5

2040745a <metal_shutdown>:
metal_shutdown():
C:/wsFreedomStudio/kernel/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
2040745a:	1101                	addi	sp,sp,-32
2040745c:	ce06                	sw	ra,28(sp)
2040745e:	cc22                	sw	s0,24(sp)
20407460:	1000                	addi	s0,sp,32
20407462:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
20407466:	fec42583          	lw	a1,-20(s0)
2040746a:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
2040746e:	fcbff0ef          	jal	ra,20407438 <__metal_shutdown_exit>
	...

20407480 <__metal_vector_table>:
IRQ_0():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407480:	c0efc06f          	j	2040388e <metal_interrupt_vector_handler>

20407484 <IRQ_1>:
IRQ_1():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407484:	c0afc06f          	j	2040388e <metal_interrupt_vector_handler>

20407488 <IRQ_2>:
IRQ_2():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407488:	c06fc06f          	j	2040388e <metal_interrupt_vector_handler>

2040748c <IRQ_3>:
IRQ_3():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040748c:	c30fc06f          	j	204038bc <metal_software_interrupt_vector_handler>

20407490 <IRQ_4>:
IRQ_4():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407490:	bfefc06f          	j	2040388e <metal_interrupt_vector_handler>

20407494 <IRQ_5>:
IRQ_5():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407494:	bfafc06f          	j	2040388e <metal_interrupt_vector_handler>

20407498 <IRQ_6>:
IRQ_6():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407498:	bf6fc06f          	j	2040388e <metal_interrupt_vector_handler>

2040749c <IRQ_7>:
IRQ_7():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040749c:	d1afc06f          	j	204039b6 <metal_timer_interrupt_vector_handler>

204074a0 <IRQ_8>:
IRQ_8():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
204074a0:	beefc06f          	j	2040388e <metal_interrupt_vector_handler>

204074a4 <IRQ_9>:
IRQ_9():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
204074a4:	beafc06f          	j	2040388e <metal_interrupt_vector_handler>

204074a8 <IRQ_10>:
IRQ_10():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
204074a8:	be6fc06f          	j	2040388e <metal_interrupt_vector_handler>

204074ac <IRQ_11>:
IRQ_11():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
204074ac:	be2fc06f          	j	2040388e <metal_interrupt_vector_handler>

204074b0 <IRQ_12>:
IRQ_12():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
204074b0:	bdefc06f          	j	2040388e <metal_interrupt_vector_handler>

204074b4 <IRQ_13>:
IRQ_13():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
204074b4:	bdafc06f          	j	2040388e <metal_interrupt_vector_handler>

204074b8 <IRQ_14>:
IRQ_14():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
204074b8:	bd6fc06f          	j	2040388e <metal_interrupt_vector_handler>

204074bc <IRQ_15>:
IRQ_15():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
204074bc:	bd2fc06f          	j	2040388e <metal_interrupt_vector_handler>

204074c0 <IRQ_LC0>:
IRQ_LC0():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
204074c0:	83bfc06f          	j	20403cfa <metal_lc0_interrupt_vector_handler>

204074c4 <IRQ_LC1>:
IRQ_LC1():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
204074c4:	8cdfc06f          	j	20403d90 <metal_lc1_interrupt_vector_handler>

204074c8 <IRQ_LC2>:
IRQ_LC2():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
204074c8:	95ffc06f          	j	20403e26 <metal_lc2_interrupt_vector_handler>

204074cc <IRQ_LC3>:
IRQ_LC3():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
204074cc:	9f1fc06f          	j	20403ebc <metal_lc3_interrupt_vector_handler>

204074d0 <IRQ_LC4>:
IRQ_LC4():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
204074d0:	a83fc06f          	j	20403f52 <metal_lc4_interrupt_vector_handler>

204074d4 <IRQ_LC5>:
IRQ_LC5():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
204074d4:	b15fc06f          	j	20403fe8 <metal_lc5_interrupt_vector_handler>

204074d8 <IRQ_LC6>:
IRQ_LC6():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
204074d8:	ba7fc06f          	j	2040407e <metal_lc6_interrupt_vector_handler>

204074dc <IRQ_LC7>:
IRQ_LC7():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
204074dc:	c39fc06f          	j	20404114 <metal_lc7_interrupt_vector_handler>

204074e0 <IRQ_LC8>:
IRQ_LC8():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
204074e0:	ccbfc06f          	j	204041aa <metal_lc8_interrupt_vector_handler>

204074e4 <IRQ_LC9>:
IRQ_LC9():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
204074e4:	d5dfc06f          	j	20404240 <metal_lc9_interrupt_vector_handler>

204074e8 <IRQ_LC10>:
IRQ_LC10():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
204074e8:	deffc06f          	j	204042d6 <metal_lc10_interrupt_vector_handler>

204074ec <IRQ_LC11>:
IRQ_LC11():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
204074ec:	e81fc06f          	j	2040436c <metal_lc11_interrupt_vector_handler>

204074f0 <IRQ_LC12>:
IRQ_LC12():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
204074f0:	f13fc06f          	j	20404402 <metal_lc12_interrupt_vector_handler>

204074f4 <IRQ_LC13>:
IRQ_LC13():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
204074f4:	fa5fc06f          	j	20404498 <metal_lc13_interrupt_vector_handler>

204074f8 <IRQ_LC14>:
IRQ_LC14():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
204074f8:	836fd06f          	j	2040452e <metal_lc14_interrupt_vector_handler>

204074fc <IRQ_LC15>:
IRQ_LC15():
C:/wsFreedomStudio/kernel/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
204074fc:	8c8fd06f          	j	204045c4 <metal_lc15_interrupt_vector_handler>

20407500 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:180
{
20407500:	1101                	addi	sp,sp,-32
20407502:	ce22                	sw	s0,28(sp)
20407504:	1000                	addi	s0,sp,32
20407506:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040750a:	fec42703          	lw	a4,-20(s0)
2040750e:	800007b7          	lui	a5,0x80000
20407512:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdf50>
20407516:	00f71763          	bne	a4,a5,20407524 <__metal_driver_fixed_clock_rate+0x24>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040751a:	00f427b7          	lui	a5,0xf42
2040751e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20407522:	a825                	j	2040755a <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20407524:	fec42703          	lw	a4,-20(s0)
20407528:	800007b7          	lui	a5,0x80000
2040752c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdf5c>
20407530:	00f71763          	bne	a4,a5,2040753e <__metal_driver_fixed_clock_rate+0x3e>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20407534:	044aa7b7          	lui	a5,0x44aa
20407538:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2040753c:	a839                	j	2040755a <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2040753e:	fec42703          	lw	a4,-20(s0)
20407542:	800007b7          	lui	a5,0x80000
20407546:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffdf68>
2040754a:	00f71763          	bne	a4,a5,20407558 <__metal_driver_fixed_clock_rate+0x58>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2040754e:	01e857b7          	lui	a5,0x1e85
20407552:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20407556:	a011                	j	2040755a <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:191
		return 0;
20407558:	4781                	li	a5,0
C:\wsFreedomStudio\kernel\bsp\build\debug/./metal/machine.h:193
}
2040755a:	853e                	mv	a0,a5
2040755c:	4472                	lw	s0,28(sp)
2040755e:	6105                	addi	sp,sp,32
20407560:	8082                	ret

20407562 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20407562:	1101                	addi	sp,sp,-32
20407564:	ce06                	sw	ra,28(sp)
20407566:	cc22                	sw	s0,24(sp)
20407568:	1000                	addi	s0,sp,32
2040756a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2040756e:	fec42503          	lw	a0,-20(s0)
20407572:	f8fff0ef          	jal	ra,20407500 <__metal_driver_fixed_clock_rate>
20407576:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:14
}
20407578:	853e                	mv	a0,a5
2040757a:	40f2                	lw	ra,28(sp)
2040757c:	4462                	lw	s0,24(sp)
2040757e:	6105                	addi	sp,sp,32
20407580:	8082                	ret

20407582 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407582:	1101                	addi	sp,sp,-32
20407584:	ce06                	sw	ra,28(sp)
20407586:	cc22                	sw	s0,24(sp)
20407588:	1000                	addi	s0,sp,32
2040758a:	fea42623          	sw	a0,-20(s0)
2040758e:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407592:	fec42503          	lw	a0,-20(s0)
20407596:	fcdff0ef          	jal	ra,20407562 <__metal_driver_fixed_clock_get_rate_hz>
2040759a:	87aa                	mv	a5,a0
C:/wsFreedomStudio/kernel/freedom-metal/src/drivers/fixed-clock.c:19
}
2040759c:	853e                	mv	a0,a5
2040759e:	40f2                	lw	ra,28(sp)
204075a0:	4462                	lw	s0,24(sp)
204075a2:	6105                	addi	sp,sp,32
204075a4:	8082                	ret

204075a6 <_exit>:
_exit():
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
204075a6:	1101                	addi	sp,sp,-32
204075a8:	ce06                	sw	ra,28(sp)
204075aa:	cc22                	sw	s0,24(sp)
204075ac:	1000                	addi	s0,sp,32
204075ae:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/kernel/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
204075b2:	fec42503          	lw	a0,-20(s0)
204075b6:	ea5ff0ef          	jal	ra,2040745a <metal_shutdown>
