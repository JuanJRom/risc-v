
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/src/debug/empty.elf:     file format elf32-littleriscv
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00001048 memsz 0x00001048 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x20407ac0 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00001848 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002080 vaddr 0x20401080 paddr 0x20401080 align 2**12
         filesz 0x00006a3a memsz 0x00006a3a flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e0  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000ce0  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             00006a3a  20401080  20401080  00002080  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  20407ac0  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000c44  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  80001410  80001410  000097c8  2**4  ALLOC
  8 .heap             00000800  80001810  80001810  000097c8  2**3  ALLOC
  9 .debug_info       00020029  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00003129  00000000  00000000  000297f1  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000d68  00000000  00000000  0002c920  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000b08  00000000  00000000  0002d688  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000be54  00000000  00000000  0002e190  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004fff  00000000  00000000  00039fe4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003efe3  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003f013  2**0  CONTENTS, READONLY
 17 .debug_frame      00003490  00000000  00000000  0003f044  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401080 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80001410 l    d  .stack	00000000 .stack
80001810 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c4 l     F .init	00000000 __metal_memory_scrub
20400132 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400244 l       .init	00000000 _skip_init
204004d4 l       .rodata	00000000 argv
204004d8 l       .rodata	00000000 envp
204004dc l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
2040603c l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20406056 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20406070 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20406086 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2040609a l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
204060ac l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
204060bc l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
204060d2 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
204060e4 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
204006d8 l     O .rodata	00000880 pll_configs
204060fa l     F .text	0000004e get_pll_config_freq
20406372 l     F .text	000000ac find_closest_config
2040641e l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 task.c
00000000 l    df *ABS*	00000000 trap.c
00000000 l    df *ABS*	00000000 findfp.c
204021f4 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
204025c0 l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20403434 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
2040345e l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20403486 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
204034c2 l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20403622 l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20403b6e l     F .text	00000024 __metal_driver_cpu_hartid
20403b92 l     F .text	0000002a __metal_driver_cpu_timebase
20403bbc l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20403be6 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20405576 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
204055a0 l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
204055c8 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
204055f0 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20405618 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2040563a l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
204067ae l     F .text	00000026 __metal_driver_sifive_gpio0_base
204067d4 l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
204067fe l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
204070d4 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
204070fe l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
2040712c l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20407154 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20407182 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
204071ac l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
204071d4 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
2040759e l     F .text	000000da pre_rate_change_callback_func
20407678 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20405e4c l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20405e66 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20405e7c l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405e90 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20405f4c l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20405f66 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20405f7c l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405f90 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20406734 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20407062 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407a00 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 kernel.c
20401080 l     F .text	0000001a r_mie
2040109a l     F .text	0000001a w_mie
204010b4 l     F .text	0000001a w_mtvec
204010ce l     F .text	0000002e intr_on
204010fc l     F .text	00000026 intr_off
800007c8 l     O .bss	00000004 i.0
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 semaphore.c
20401932 l     F .text	0000001a w_mstatus
2040194c l     F .text	0000001a r_mie
20401966 l     F .text	0000001a w_mie
20401980 l     F .text	0000002e intr_on
204019ae l     F .text	00000026 intr_off
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007ec l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 init.c
800007e4 l     O .bss	00000004 init_done.1
800007e8 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20407980 l       .text	00000000 IRQ_0
20407984 l       .text	00000000 IRQ_1
20407988 l       .text	00000000 IRQ_2
2040798c l       .text	00000000 IRQ_3
20407990 l       .text	00000000 IRQ_4
20407994 l       .text	00000000 IRQ_5
20407998 l       .text	00000000 IRQ_6
2040799c l       .text	00000000 IRQ_7
204079a0 l       .text	00000000 IRQ_8
204079a4 l       .text	00000000 IRQ_9
204079a8 l       .text	00000000 IRQ_10
204079ac l       .text	00000000 IRQ_11
204079b0 l       .text	00000000 IRQ_12
204079b4 l       .text	00000000 IRQ_13
204079b8 l       .text	00000000 IRQ_14
204079bc l       .text	00000000 IRQ_15
204079c0 l       .text	00000000 IRQ_LC0
204079c4 l       .text	00000000 IRQ_LC1
204079c8 l       .text	00000000 IRQ_LC2
204079cc l       .text	00000000 IRQ_LC3
204079d0 l       .text	00000000 IRQ_LC4
204079d4 l       .text	00000000 IRQ_LC5
204079d8 l       .text	00000000 IRQ_LC6
204079dc l       .text	00000000 IRQ_LC7
204079e0 l       .text	00000000 IRQ_LC8
204079e4 l       .text	00000000 IRQ_LC9
204079e8 l       .text	00000000 IRQ_LC10
204079ec l       .text	00000000 IRQ_LC11
204079f0 l       .text	00000000 IRQ_LC12
204079f4 l       .text	00000000 IRQ_LC13
204079f8 l       .text	00000000 IRQ_LC14
204079fc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
204014a6 g     F .text	0000008c addLast
20400fe0 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20402a0a g     F .text	0000002e _isatty_r
20404452  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401d68 g     F .text	000000da _puts_r
20402a38 g     F .text	00000032 _lseek_r
20407810 g     F .text	00000026 metal_clock_get_rate_hz
204074fe g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
204037fe g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20407352 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
204043bc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20404c64 g     F .text	00000058 __metal_valid_interrupt_id
20401d2a g     F .text	0000003e printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
204050e6 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
204077bc g     F .text	00000054 _metal_clock_append_to_callbacks
20405694 g     F .text	00000046 __metal_plic0_complete_interrupt
20401a56 g     F .text	0000005c semaphore_signal
20404eaa g     F .text	000001e4 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
2040293e g     F .text	00000036 __sseek
204022ac g     F .text	0000006a __sinit
20401e7e g     F .text	000000c0 __swbuf_r
20401b76 g     F .text	00000000 pc_update
800007c8 g       .data	00000000 __tls_base
20402266 g     F .text	00000046 __sfmoreglue
204025be g     F .text	00000002 __malloc_unlock
20403226 g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
20406c3c g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
204004e8 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
8000140c g       .bss	00000000 metal_segment_bss_target_end
204034f2 g     F .text	0000009a __metal_clint0_mtime_get
204054ea g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
20407416 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
204069f2 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20407088 g     F .text	0000004c __metal_driver_sifive_test0_exit
2040124a g     F .text	00000050 task_wait
20402ff4 g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20407322 g     F .text	00000030 __metal_driver_sifive_uart0_txready
204072b0 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20401228 g     F .text	00000022 task_end
20400146 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
2040358c g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
204029da g     F .text	00000030 _fstat_r
20406e8c g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80001404 g     O .bss	00000008 semaphore
800007dc g     O .bss	00000004 errno
204061f4 g     F .text	0000017e __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20407882 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20404740  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000d0  w    F .init	00000000 __metal_before_start
2040335e  w    F .text	00000014 metal_init_run
20400674 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400630 g     O .rodata	00000044 __metal_driver_vtable_cpu
20403406 g     F .text	0000002e metal_uart_set_baud_rate
204076a8 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20405172 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400f58 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000878 g     O .bss	00000004 readyList
80001810 g       .heap	00000000 metal_segment_heap_target_start
2040225c g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
204046aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
204065ce g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405db0 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20401e42 g     F .text	0000000c puts
20404998  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20403d78 g     F .text	00000018 __metal_default_exception_handler
20401b8e g     F .text	0000000c malloc
20402e54 g     F .text	00000026 _fstat
20403b3a g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
204013ec g     F .text	00000042 createNode
20405102 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
204018f0 g     F .text	00000042 handle_trap
20403c0a g     F .text	00000030 __metal_driver_cpu_get
204005cc g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20403c6c g     F .text	00000018 __metal_interrupt_global_disable
20405e24 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20404614  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20401a0c g     F .text	0000004a semaphore_wait
204047d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20401e4e g     F .text	00000030 _sbrk_r
20405bd0 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20404d78 g     F .text	0000004e __metal_exception_register
2040326e g     F .text	00000078 metal_init
20402e00 g     F .text	00000032 _read_r
20405304 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20406ad4 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
204017d2 g     F .text	0000007c handle_interrupt
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20403e68 g     F .text	00000068 __metal_default_sw_handler
204078b4 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
204071fe g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20402e7a g     F .text	00000020 _isatty
20406b9a g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
2040723e g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20401040 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20401020 g     O .rodata	00000004 _global_impure_ptr
20403ed0  w    F .text	00000094 metal_timer_interrupt_vector_handler
2040305e g     F .text	0000005e __libc_init_array
20406b14 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2040486c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
2040601a g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
2040508e g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20402eee g     F .text	0000008e _sbrk
204013be g     F .text	0000002e createList
20406a8e g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
2040777a g     F .text	00000042 _metal_clock_call_all_callbacks
20401acc g     F .text	00000000 switch_to
204002be g     F .init	00000002 _init
20403cce g     F .text	0000001a __metal_interrupt_timer_disable
20406c86 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204053c2 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400fa4 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20407278 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20406bda g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20403028 g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
20407014 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
204032e6 g     F .text	00000078 metal_fini
2040534c g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20405556 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20403d20 g     F .text	0000002c __metal_interrupt_local_enable
20403b06 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20403386 g     F .text	00000026 metal_tty_putc
20401302 g     F .text	0000004a timer_init
2040589e g     F .text	00000018 __metal_plic0_default_handler
20402f7c  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
2040144c g     F .text	0000005a addFirst
00000800 g       *ABS*	00000000 __heap_size
204019d4 g     F .text	00000038 semaphore_init
20405c20 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403f64 g     F .text	00000016 __metal_default_beu_handler
204003e0 g     O .rodata	00000020 __sf_fake_stderr
20403d04 g     F .text	0000001c __metal_interrupt_external_disable
2040721e g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20405156 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
800007d0 g     O .bss	00000004 i
20404dc6 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
204025ea g     F .text	00000042 __sfputs_r
204054a4 g     F .text	00000046 __metal_driver_cpu_exception_register
20403c84 g     F .text	00000018 __metal_interrupt_software_enable
20404290  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20402a6a g     F .text	0000001a memchr
20401714 g     F .text	00000060 task1
20401ba6 g     F .text	000000a6 _free_r
800007e0 g     O .bss	00000004 _global_atexit
2040575e g     F .text	00000066 __metal_driver_riscv_plic0_set_priority
20404b5a g     F .text	00000058 __metal_controller_interrupt_vector_mode
20403138 g     F .text	000000c8 __call_exitprocs
80001810 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400154 g     F .init	00000000 _start
20401774 g     F .text	0000005e task2
20405ea6 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20402e9a g     F .text	0000002a _lseek
20405484 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20405518 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
20403ce8 g     F .text	0000001c __metal_interrupt_external_enable
204030bc g     F .text	0000007c __register_exitproc
20407446 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20405962 g     F .text	0000015c __metal_driver_riscv_plic0_init
20405b80 g     F .text	00000050 __metal_driver_riscv_plic0_enable
8000087c g     O .bss	00000004 current
20406a62 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2040457e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20403c3a g     F .text	0000001a __metal_myhart_id
20407034 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20401662 g     F .text	00000054 find
20403dd6  w    F .text	00000092 metal_software_interrupt_vector_handler
204050ba g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
204029ac g     F .text	0000002e _close_r
204074de g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
204016b6 g     F .text	0000005e task
20401122 g     F .text	00000106 task_create
204036e0 g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401f3e g     F .text	0000010a __swsetup_r
20402316 g     F .text	0000009c __sfp
20407836 g     F .text	0000004c metal_clock_set_rate_hz
80000880 g     O .bss	00000004 temp_pcb
204028c0 g     F .text	00000030 __sread
204069b2 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002c0  w    F .init	00000000 secondary_main
20403da8  w    F .text	0000002e metal_interrupt_vector_handler
204025bc g     F .text	00000002 __malloc_lock
204072ea g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20402190 g     F .text	00000064 _fflush_r
20405722 g     F .text	0000003c __metal_plic0_get_threshold
20406746 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20400400 g     O .rodata	00000020 __sf_fake_stdin
20404cbc g     F .text	000000bc __metal_local_interrupt_enable
204039c6 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20402514 g     F .text	000000a8 memset
204044e8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20401392 g     F .text	0000002c main
800007c8 g       .data	00000000 metal_segment_data_target_end
204073cc g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20401024 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
20405360 g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20405424 g     F .text	00000060 __metal_driver_cpu_get_msip
20407908 g     F .text	00000018 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20405536 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20405658 g     F .text	0000003c __metal_plic0_claim_interrupt
2040739c g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20402974 g     F .text	00000006 __sclose
20404902  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008e g     F .init	00000000 metal_mem_scrub
20401ab4 g     F .text	00000000 osSchedulerLaunch
20401c4c g     F .text	000000de _malloc_r
204037e2 g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
204051e2 g     F .text	00000046 __metal_driver_cpu_timebase_get
20405d14 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20403254 g     F .text	0000001a metal_cpu_get_current_hartid
20405fa6 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407980 g       .text	00000000 __metal_vector_table
20401048 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
800007cc g     O .bss	00000004 count
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002be g     F .init	00000002 _fini
20401d2a g     F .text	0000003e iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
2040134c g     F .text	00000046 scheduler_RoundRobin
204057c4 g     F .text	00000036 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
20403c54 g     F .text	00000018 __metal_interrupt_global_enable
20402fea g     F .text	0000000a atexit
2040297a g     F .text	00000032 _write_r
20403cb4 g     F .text	0000001a __metal_interrupt_timer_enable
20407488 g     F .text	00000056 __metal_driver_sifive_uart0_getc
2040390e g     F .text	000000b8 __metal_driver_riscv_clint0_disable
20402a84 g     F .text	0000010c _printf_common
20401532 g     F .text	0000006e get
800007a0 g     O .data	00000004 _impure_ptr
2040528e g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20402048 g     F .text	00000148 __sflush_r
80000884 g     O .bss	00000b80 PCB_STACK
204078e6 g     F .text	00000022 __metal_shutdown_exit
20405c50 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20406148 g     F .text	000000ac __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
204015a0 g     F .text	0000003c deleteFirst
20406774 g     F .text	0000003a __metal_driver_sifive_fe310_g000_prci_set_reg
20407a62 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20403856 g     F .text	000000b8 __metal_driver_riscv_clint0_enable
2040103c g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
2040184e g     F .text	000000a2 handle_exception
20407ac0 g       *ABS*	00000000 metal_segment_data_source_start
20400138 g       .init	00000000 early_trap_vector
80002010 g       .heap	00000000 metal_segment_heap_target_end
20404bb2 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
2040241c g     F .text	0000005a __swhatbuf_r
20406b54 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20403f7a g     F .text	0000006a __metal_default_timer_handler
20402f7c g     F .text	0000006e _write
204058b6 g     F .text	000000ac __metal_plic0_handler
20404326  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20404ac4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20403200 g     F .text	00000026 metal_cpu_interrupt_controller
800007c0 g     O .data	00000004 __metal_dt_test_100000
204028f0 g     F .text	0000004e __swrite
20402ffe g     F .text	0000002a exit
2040262c g     F .text	00000294 _vfiprintf_r
204023b2 g     F .text	0000006a _fwalk_reent
20407a82 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20401048 g       *ABS*	00000000 metal_segment_lim_source_start
20400420 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
20403d90 g     F .text	00000018 __metal_default_interrupt_handler
204033d8 g     F .text	0000002e metal_uart_putc
20402ec4 g     F .text	0000002a _read
20403372  w    F .text	00000014 metal_fini_run
20406a38 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20404000 g     F .text	00000180 __metal_exception_handler
204041fa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20407aa6 g     F .text	00000014 _exit
20405228 g     F .text	00000066 __metal_driver_cpu_mtime_get
20402476 g     F .text	0000009e __smakebuf_r
204037ba g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
20402b90 g     F .text	00000270 _printf_i
800007d8 g     O .bss	00000004 __malloc_sbrk_start
20404a2e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
2040102c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20403658 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007d4 g     O .bss	00000004 __malloc_free_list
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
2040262c g     F .text	00000294 _vfprintf_r
2040129a g     F .text	00000044 task_unlock
2040531e g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
204057fa g     F .text	000000a4 __metal_plic0_enable
2040008c  w      .init	00000000 __register_frame_info
20405f2a g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20405332 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20403d4c g     F .text	0000002c __metal_interrupt_local_disable
20403c9c g     F .text	00000018 __metal_interrupt_software_disable
204033ac g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
204056da g     F .text	00000048 __metal_plic0_set_threshold
2040142e g     F .text	0000001e destroyNode
20405c78 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20402e32 g     F .text	00000022 _close
20401034 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20401b9a g     F .text	0000000c free
204012de g     F .text	00000024 kernel_launch
20405abe g     F .text	000000c2 __metal_driver_riscv_plic0_register
204015dc g     F .text	00000086 deleteElement



Disassembly of section .init:

20400000 <_enter>:
_enter():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11828293          	addi	t0,t0,280 # 20400138 <early_trap_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011663          	bnez	sp,2040003c <_enter+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	5fc01117          	auipc	sp,0x5fc01
20400038:	7dc10113          	addi	sp,sp,2012 # 80001810 <_sp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2040003c:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:60
    li t0, 0
20400040:	4281                	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400042:	40000313          	li	t1,1024
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400046:	ff017113          	andi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2040004a:	00a28563          	beq	t0,a0,20400054 <_enter+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004e:	911a                	add	sp,sp,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400050:	0285                	addi	t0,t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:67
    j 1b
20400052:	bfd5                	j	20400046 <_enter+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400054:	00000097          	auipc	ra,0x0
20400058:	07c08093          	addi	ra,ra,124 # 204000d0 <__metal_before_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:77
    beqz ra, 1f
2040005c:	00008363          	beqz	ra,20400062 <_enter+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:78
    jalr ra
20400060:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400062:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:85
    li a1, 0
20400066:	4581                	li	a1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:86
    li a2, 0
20400068:	4601                	li	a2,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:87
    call _start
2040006a:	20ed                	jal	20400154 <_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2040006c:	00000093          	li	ra,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:93
    beqz ra, 1f
20400070:	00008363          	beqz	ra,20400076 <_enter+0x76>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:94
    jalr ra
20400074:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400076:	00000297          	auipc	t0,0x0
2040007a:	00c28293          	addi	t0,t0,12 # 20400082 <_enter+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007e:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20400082:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:103
     j 1b
20400086:	bff5                	j	20400082 <_enter+0x82>
20400088:	0000                	unimp
	...

2040008c <__register_frame_info>:
__register_frame_info():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040008c:	8082                	ret

2040008e <metal_mem_scrub>:
metal_mem_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008e:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20400090:	3006b373          	csrrc	t1,mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400094:	4291                	li	t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400096:	0055c563          	blt	a1,t0,204000a0 <metal_mem_scrub+0x12>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
2040009a:	00357613          	andi	a2,a0,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009e:	ca11                	beqz	a2,204000b2 <metal_mem_scrub+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
204000a0:	00050023          	sb	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a4:	0505                	addi	a0,a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a6:	15fd                	addi	a1,a1,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a8:	feb047e3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000ac:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:39
    ret
204000b0:	8082                	ret
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000b2:	00052023          	sw	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b6:	0511                	addi	a0,a0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b8:	15f1                	addi	a1,a1,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000ba:	fcb04ee3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000be:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:46
    ret
204000c2:	8082                	ret

204000c4 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c4:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c8:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000ca:	fe734de3          	blt	t1,t2,204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ce:	8082                	ret

204000d0 <__metal_before_start>:
__metal_before_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000d0:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000d2:	dfc00297          	auipc	t0,0xdfc00
204000d6:	f2e28293          	addi	t0,t0,-210 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000da:	04028c63          	beqz	t0,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000de:	dfc00297          	auipc	t0,0xdfc00
204000e2:	f2228293          	addi	t0,t0,-222 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e6:	f14027f3          	csrr	a5,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000ea:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000ec:	3006b073          	csrc	mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000f0:	830a                	mv	t1,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000f2:	dfc00397          	auipc	t2,0xdfc00
204000f6:	30e38393          	addi	t2,t2,782 # 400 <__stack_size>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000fa:	938a                	add	t2,t2,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000fc:	00730363          	beq	t1,t2,20400102 <__metal_before_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20400100:	37d1                	jal	204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20400102:	02579863          	bne	a5,t0,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400106:	5fc00317          	auipc	t1,0x5fc00
2040010a:	efa30313          	addi	t1,t1,-262 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010e:	5fc00397          	auipc	t2,0x5fc00
20400112:	6ba38393          	addi	t2,t2,1722 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400116:	00730363          	beq	t1,t2,2040011c <__metal_before_start+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
2040011a:	376d                	jal	204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
2040011c:	5fc00317          	auipc	t1,0x5fc00
20400120:	ee430313          	addi	t1,t1,-284 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400124:	5fc00397          	auipc	t2,0x5fc00
20400128:	edc38393          	addi	t2,t2,-292 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
2040012c:	00730363          	beq	t1,t2,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20400130:	3f51                	jal	204000c4 <__metal_memory_scrub>

20400132 <skip_scrub>:
skip_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400132:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:130
    ret
20400134:	8082                	ret
	...

20400138 <early_trap_vector>:
early_trap_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400138:	342022f3          	csrr	t0,mcause
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:65
    csrr t1, mepc
2040013c:	34102373          	csrr	t1,mepc
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:66
    csrr t2, mtval
20400140:	343023f3          	csrr	t2,mtval
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:67
    j early_trap_vector
20400144:	bfd5                	j	20400138 <early_trap_vector>

20400146 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400146:	1141                	addi	sp,sp,-16
20400148:	c622                	sw	s0,12(sp)
2040014a:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
2040014c:	0001                	nop
2040014e:	4432                	lw	s0,12(sp)
20400150:	0141                	addi	sp,sp,16
20400152:	8082                	ret

20400154 <_start>:
_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400154:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400156:	5fc01197          	auipc	gp,0x5fc01
2040015a:	e4a18193          	addi	gp,gp,-438 # 80000fa0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015e:	00000293          	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20400162:	0e551163          	bne	a0,t0,20400244 <_skip_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400166:	00008297          	auipc	t0,0x8
2040016a:	95a28293          	addi	t0,t0,-1702 # 20407ac0 <metal_segment_data_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016e:	5fc00317          	auipc	t1,0x5fc00
20400172:	e9230313          	addi	t1,t1,-366 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400176:	5fc00397          	auipc	t2,0x5fc00
2040017a:	65238393          	addi	t2,t2,1618 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017e:	00628c63          	beq	t0,t1,20400196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20400182:	00735a63          	bge	t1,t2,20400196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400186:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2040018a:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
2040018c:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20400190:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20400192:	fe734ae3          	blt	t1,t2,20400186 <_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400196:	00001297          	auipc	t0,0x1
2040019a:	eb228293          	addi	t0,t0,-334 # 20401048 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019e:	5fc00317          	auipc	t1,0x5fc00
204001a2:	e6230313          	addi	t1,t1,-414 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a6:	5fc00397          	auipc	t2,0x5fc00
204001aa:	e5a38393          	addi	t2,t2,-422 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001ae:	00628c63          	beq	t0,t1,204001c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001b2:	00735a63          	bge	t1,t2,204001c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b6:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001ba:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001bc:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001c0:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001c2:	fe734ae3          	blt	t1,t2,204001b6 <_start+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c6:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001ca:	00001297          	auipc	t0,0x1
204001ce:	e7e28293          	addi	t0,t0,-386 # 20401048 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001d2:	5fc00317          	auipc	t1,0x5fc00
204001d6:	e2e30313          	addi	t1,t1,-466 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001da:	5fc00397          	auipc	t2,0x5fc00
204001de:	e2638393          	addi	t2,t2,-474 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001e2:	00628c63          	beq	t0,t1,204001fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e6:	00735a63          	bge	t1,t2,204001fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ea:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ee:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001f0:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f4:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f6:	fe734ae3          	blt	t1,t2,204001ea <_start+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001fa:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fe:	5fc00317          	auipc	t1,0x5fc00
20400202:	5ca30313          	addi	t1,t1,1482 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400206:	46c18393          	addi	t2,gp,1132 # 8000140c <metal_segment_bss_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2040020a:	00735763          	bge	t1,t2,20400218 <_start+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020e:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20400212:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400214:	fe734de3          	blt	t1,t2,2040020e <_start+0xba>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400218:	5fc00217          	auipc	tp,0x5fc00
2040021c:	5b020213          	addi	tp,tp,1456 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400220:	c211                	beqz	a2,20400224 <_start+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:167
  jalr a2
20400222:	9602                	jalr	a2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400224:	00003517          	auipc	a0,0x3
20400228:	e0450513          	addi	a0,a0,-508 # 20403028 <__libc_fini_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:172
  call atexit
2040022c:	5bf020ef          	jal	ra,20402fea <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20400230:	62f020ef          	jal	ra,2040305e <__libc_init_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400234:	00003517          	auipc	a0,0x3
20400238:	13e50513          	addi	a0,a0,318 # 20403372 <metal_fini_run>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:178
  call atexit
2040023c:	5af020ef          	jal	ra,20402fea <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20400240:	11e030ef          	jal	ra,2040335e <metal_init_run>

20400244 <_skip_init>:
_skip_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400244:	3709                	jal	20400146 <__metal_synchronize_harts>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400246:	56fd                	li	a3,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400248:	3046b073          	csrc	mie,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
2040024c:	3446b073          	csrc	mip,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20400250:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400254:	00042737          	lui	a4,0x42
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400258:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2040025a:	c709                	beqz	a4,20400264 <_skip_init+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
2040025c:	3036b073          	csrc	mideleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20400260:	3026b073          	csrc	medeleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400264:	00040737          	lui	a4,0x40
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400268:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2040026a:	c319                	beqz	a4,20400270 <_skip_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
2040026c:	1806b073          	csrc	satp,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20400270:	6741                	lui	a4,0x10
20400272:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400276:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400278:	cb89                	beqz	a5,2040028a <_skip_init+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
2040027a:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027e:	6709                	lui	a4,0x2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20400280:	8fd9                	or	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20400282:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400286:	00305073          	csrwi	fcsr,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
2040028a:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028e:	00200737          	lui	a4,0x200
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20400292:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400294:	c799                	beqz	a5,204002a2 <_skip_init+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400296:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
2040029a:	2007e793          	ori	a5,a5,512
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029e:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
204002a2:	4505                	li	a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a4:	00000597          	auipc	a1,0x0
204002a8:	23058593          	addi	a1,a1,560 # 204004d4 <argv>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002ac:	00000617          	auipc	a2,0x0
204002b0:	22c60613          	addi	a2,a2,556 # 204004d8 <envp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b4:	2031                	jal	204002c0 <secondary_main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b6:	549020ef          	jal	ra,20402ffe <exit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002ba:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:248
  ret
204002bc:	8082                	ret

204002be <_fini>:
_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002be:	8082                	ret

204002c0 <secondary_main>:
secondary_main():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002c0:	1141                	addi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002c2:	c206                	sw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c4:	f14022f3          	csrr	t0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c8:	00000313          	li	t1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002cc:	00628563          	beq	t0,t1,204002d6 <secondary_main+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002d0:	10500073          	wfi
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:282
  j 1b
204002d4:	bff5                	j	204002d0 <secondary_main+0x10>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d6:	0bc010ef          	jal	ra,20401392 <main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002da:	4092                	lw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002dc:	0141                	addi	sp,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:291
  ret
204002de:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
20400302:	0aa030ef          	jal	ra,204033ac <metal_uart_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	5a5050ef          	jal	ra,204060bc <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe780>
2040032e:	61b050ef          	jal	ra,20406148 <__metal_driver_sifive_fe310_g000_pll_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	579050ef          	jal	ra,204060bc <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe780>
20400358:	4de070ef          	jal	ra,20407836 <metal_clock_set_rate_hz>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401080 <r_mie>:
r_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:99

// Machine-mode Interrupt Enable
#define MIE_MEIE (1L << 11)  // external
#define MIE_MTIE (1L << 7)   // timer
#define MIE_MSIE (1L << 3)   // software
static inline uint32_t r_mie() {
20401080:	1101                	addi	sp,sp,-32
20401082:	ce22                	sw	s0,28(sp)
20401084:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:101
    uint32_t x;
    asm volatile("csrr %0, mie" : "=r"(x));
20401086:	304027f3          	csrr	a5,mie
2040108a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:102
    return x;
2040108e:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:103
}
20401092:	853e                	mv	a0,a5
20401094:	4472                	lw	s0,28(sp)
20401096:	6105                	addi	sp,sp,32
20401098:	8082                	ret

2040109a <w_mie>:
w_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:105

static inline void w_mie(uint32_t x) {
2040109a:	1101                	addi	sp,sp,-32
2040109c:	ce22                	sw	s0,28(sp)
2040109e:	1000                	addi	s0,sp,32
204010a0:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
204010a4:	fec42783          	lw	a5,-20(s0)
204010a8:	30479073          	csrw	mie,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:107
}
204010ac:	0001                	nop
204010ae:	4472                	lw	s0,28(sp)
204010b0:	6105                	addi	sp,sp,32
204010b2:	8082                	ret

204010b4 <w_mtvec>:
w_mtvec():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:157
    asm volatile("csrr %0, stvec" : "=r"(x));
    return x;
}

// Machine-mode interrupt vector
static inline void w_mtvec(uint32_t x) {
204010b4:	1101                	addi	sp,sp,-32
204010b6:	ce22                	sw	s0,28(sp)
204010b8:	1000                	addi	s0,sp,32
204010ba:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:158
    asm volatile("csrw mtvec, %0" : : "r"(x));
204010be:	fec42783          	lw	a5,-20(s0)
204010c2:	30579073          	csrw	mtvec,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:159
}
204010c6:	0001                	nop
204010c8:	4472                	lw	s0,28(sp)
204010ca:	6105                	addi	sp,sp,32
204010cc:	8082                	ret

204010ce <intr_on>:
intr_on():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:224
//Interrupts on and off by JJRH
#define INTERRUPT_ON (1 << 7)
#define INTERRUPT_OFF (0 << 7)

// enable device interrupts by JJRH
static inline void intr_on() {
204010ce:	1101                	addi	sp,sp,-32
204010d0:	ce06                	sw	ra,28(sp)
204010d2:	cc22                	sw	s0,24(sp)
204010d4:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:225
	uint32_t mie = r_mie();
204010d6:	376d                	jal	20401080 <r_mie>
204010d8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:226
	mie |= INTERRUPT_ON;
204010dc:	fec42783          	lw	a5,-20(s0)
204010e0:	0807e793          	ori	a5,a5,128
204010e4:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
204010e8:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:228
	w_mie(mie);
204010ec:	fec42503          	lw	a0,-20(s0)
204010f0:	376d                	jal	2040109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:229
}
204010f2:	0001                	nop
204010f4:	40f2                	lw	ra,28(sp)
204010f6:	4462                	lw	s0,24(sp)
204010f8:	6105                	addi	sp,sp,32
204010fa:	8082                	ret

204010fc <intr_off>:
intr_off():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:240

// disable device interrupts
//static inline void intr_off() { w_sstatus(r_sstatus() & ~SSTATUS_SIE); }

// disable device interrupts  by JJRH
static inline void intr_off() {
204010fc:	1101                	addi	sp,sp,-32
204010fe:	ce06                	sw	ra,28(sp)
20401100:	cc22                	sw	s0,24(sp)
20401102:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:241
	uint32_t mie = r_mie();
20401104:	3fb5                	jal	20401080 <r_mie>
20401106:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:242
	mie &= INTERRUPT_OFF;
2040110a:	fe042623          	sw	zero,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
2040110e:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:244
	w_mie(mie);
20401112:	fec42503          	lw	a0,-20(s0)
20401116:	3751                	jal	2040109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:245
}
20401118:	0001                	nop
2040111a:	40f2                	lw	ra,28(sp)
2040111c:	4462                	lw	s0,24(sp)
2040111e:	6105                	addi	sp,sp,32
20401120:	8082                	ret

20401122 <task_create>:
task_create():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:28
/*void stack_init(int i){
	temp_ptr->stackPt = &PCB_STACK[i][STACKSIZE];
	//PCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;
}*/

int task_create(void(*task)(void)/*, void(*task1)(void), void(*task2)(void), void(*task3)(void)*/){
20401122:	1101                	addi	sp,sp,-32
20401124:	ce06                	sw	ra,28(sp)
20401126:	cc22                	sw	s0,24(sp)
20401128:	1000                	addi	s0,sp,32
2040112a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:29
	intr_off();
2040112e:	37f9                	jal	204010fc <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:31
	static uint32_t i=0;
	if(i==0){
20401130:	800007b7          	lui	a5,0x80000
20401134:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
20401138:	ef81                	bnez	a5,20401150 <task_create+0x2e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:32
		temp_pcb = createNode();
2040113a:	2c4d                	jal	204013ec <createNode>
2040113c:	872a                	mv	a4,a0
2040113e:	8ee1a023          	sw	a4,-1824(gp) # 80000880 <temp_pcb>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:33
		readyList = createList(readyList);
20401142:	8d81a783          	lw	a5,-1832(gp) # 80000878 <readyList>
20401146:	853e                	mv	a0,a5
20401148:	2c9d                	jal	204013be <createList>
2040114a:	872a                	mv	a4,a0
2040114c:	8ce1ac23          	sw	a4,-1832(gp) # 80000878 <readyList>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:35
	}
	temp_pcb->id = i;
20401150:	800007b7          	lui	a5,0x80000
20401154:	7c87a703          	lw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
20401158:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
2040115c:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:36
	temp_pcb->state = ready;
2040115e:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
20401162:	0007a623          	sw	zero,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:37
	temp_pcb->stackPt = &PCB_STACK[i][STACKSIZE];
20401166:	800007b7          	lui	a5,0x80000
2040116a:	7c87a703          	lw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
2040116e:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
20401172:	00170693          	addi	a3,a4,1 # 200001 <__heap_size+0x1ff801>
20401176:	2e000713          	li	a4,736
2040117a:	02e686b3          	mul	a3,a3,a4
2040117e:	80001737          	lui	a4,0x80001
20401182:	88470713          	addi	a4,a4,-1916 # 80000884 <metal_segment_heap_target_end+0xffffe874>
20401186:	9736                	add	a4,a4,a3
20401188:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:39
	//PCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;   //This is only for test
	addLast(readyList, temp_pcb);
2040118a:	8d81a703          	lw	a4,-1832(gp) # 80000878 <readyList>
2040118e:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
20401192:	85be                	mv	a1,a5
20401194:	853a                	mv	a0,a4
20401196:	2e01                	jal	204014a6 <addLast>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:40
	if(i==0) current = find(readyList, i);
20401198:	800007b7          	lui	a5,0x80000
2040119c:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
204011a0:	ef89                	bnez	a5,204011ba <task_create+0x98>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:40 (discriminator 1)
204011a2:	8d81a703          	lw	a4,-1832(gp) # 80000878 <readyList>
204011a6:	800007b7          	lui	a5,0x80000
204011aa:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
204011ae:	85be                	mv	a1,a5
204011b0:	853a                	mv	a0,a4
204011b2:	2945                	jal	20401662 <find>
204011b4:	872a                	mv	a4,a0
204011b6:	8ce1ae23          	sw	a4,-1828(gp) # 8000087c <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:42
	//stack_init(temp_ptr->id);
	PCB_STACK[i][STACKSIZE] = (int32_t)(task);
204011ba:	800007b7          	lui	a5,0x80000
204011be:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
204011c2:	fec42703          	lw	a4,-20(s0)
204011c6:	800016b7          	lui	a3,0x80001
204011ca:	88468693          	addi	a3,a3,-1916 # 80000884 <metal_segment_heap_target_end+0xffffe874>
204011ce:	00178613          	addi	a2,a5,1
204011d2:	2e000793          	li	a5,736
204011d6:	02f607b3          	mul	a5,a2,a5
204011da:	97b6                	add	a5,a5,a3
204011dc:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:43
	PCB_STACK[i][STACKSIZE-1] = (int32_t)(task);
204011de:	800007b7          	lui	a5,0x80000
204011e2:	7c87a603          	lw	a2,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
204011e6:	fec42703          	lw	a4,-20(s0)
204011ea:	800017b7          	lui	a5,0x80001
204011ee:	88478693          	addi	a3,a5,-1916 # 80000884 <metal_segment_heap_target_end+0xffffe874>
204011f2:	2e000793          	li	a5,736
204011f6:	02f607b3          	mul	a5,a2,a5
204011fa:	97b6                	add	a5,a5,a3
204011fc:	2ce7ae23          	sw	a4,732(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:44
	i++;
20401200:	800007b7          	lui	a5,0x80000
20401204:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
20401208:	00178713          	addi	a4,a5,1
2040120c:	800007b7          	lui	a5,0x80000
20401210:	7ce7a423          	sw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:45
	intr_on();
20401214:	3d6d                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:46
	return i;
20401216:	800007b7          	lui	a5,0x80000
2040121a:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe7b8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:47
}
2040121e:	853e                	mv	a0,a5
20401220:	40f2                	lw	ra,28(sp)
20401222:	4462                	lw	s0,24(sp)
20401224:	6105                	addi	sp,sp,32
20401226:	8082                	ret

20401228 <task_end>:
task_end():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:49

void task_end(void){
20401228:	1141                	addi	sp,sp,-16
2040122a:	c606                	sw	ra,12(sp)
2040122c:	c422                	sw	s0,8(sp)
2040122e:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:50
	deleteElement(readyList, current->id);
20401230:	8d81a703          	lw	a4,-1832(gp) # 80000878 <readyList>
20401234:	8dc1a783          	lw	a5,-1828(gp) # 8000087c <current>
20401238:	479c                	lw	a5,8(a5)
2040123a:	85be                	mv	a1,a5
2040123c:	853a                	mv	a0,a4
2040123e:	2e79                	jal	204015dc <deleteElement>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:53
	//current = current->next;
	//switch_to();
}
20401240:	0001                	nop
20401242:	40b2                	lw	ra,12(sp)
20401244:	4422                	lw	s0,8(sp)
20401246:	0141                	addi	sp,sp,16
20401248:	8082                	ret

2040124a <task_wait>:
task_wait():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:55

void task_wait(list_t* queue){
2040124a:	1101                	addi	sp,sp,-32
2040124c:	ce06                	sw	ra,28(sp)
2040124e:	cc22                	sw	s0,24(sp)
20401250:	1000                	addi	s0,sp,32
20401252:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:56
	temp_pcb = find(readyList, current->id);
20401256:	8d81a703          	lw	a4,-1832(gp) # 80000878 <readyList>
2040125a:	8dc1a783          	lw	a5,-1828(gp) # 8000087c <current>
2040125e:	479c                	lw	a5,8(a5)
20401260:	85be                	mv	a1,a5
20401262:	853a                	mv	a0,a4
20401264:	2efd                	jal	20401662 <find>
20401266:	872a                	mv	a4,a0
20401268:	8ee1a023          	sw	a4,-1824(gp) # 80000880 <temp_pcb>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:57
	temp_pcb->state = waiting;
2040126c:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
20401270:	4709                	li	a4,2
20401272:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:58
	addFirst(queue, temp_pcb);
20401274:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
20401278:	85be                	mv	a1,a5
2040127a:	fec42503          	lw	a0,-20(s0)
2040127e:	22f9                	jal	2040144c <addFirst>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:59
	deleteElement(readyList, current->id);
20401280:	8d81a703          	lw	a4,-1832(gp) # 80000878 <readyList>
20401284:	8dc1a783          	lw	a5,-1828(gp) # 8000087c <current>
20401288:	479c                	lw	a5,8(a5)
2040128a:	85be                	mv	a1,a5
2040128c:	853a                	mv	a0,a4
2040128e:	26b9                	jal	204015dc <deleteElement>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:61
	//current = temp_pcb;
}
20401290:	0001                	nop
20401292:	40f2                	lw	ra,28(sp)
20401294:	4462                	lw	s0,24(sp)
20401296:	6105                	addi	sp,sp,32
20401298:	8082                	ret

2040129a <task_unlock>:
task_unlock():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:63

void task_unlock(list_t* queue){
2040129a:	1101                	addi	sp,sp,-32
2040129c:	ce06                	sw	ra,28(sp)
2040129e:	cc22                	sw	s0,24(sp)
204012a0:	1000                	addi	s0,sp,32
204012a2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:64
	temp_pcb = get(0,queue);
204012a6:	fec42583          	lw	a1,-20(s0)
204012aa:	4501                	li	a0,0
204012ac:	2459                	jal	20401532 <get>
204012ae:	872a                	mv	a4,a0
204012b0:	8ee1a023          	sw	a4,-1824(gp) # 80000880 <temp_pcb>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:65
	temp_pcb->state = ready;
204012b4:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
204012b8:	0007a623          	sw	zero,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:66
	addLast(readyList, temp_pcb);
204012bc:	8d81a703          	lw	a4,-1832(gp) # 80000878 <readyList>
204012c0:	8e01a783          	lw	a5,-1824(gp) # 80000880 <temp_pcb>
204012c4:	85be                	mv	a1,a5
204012c6:	853a                	mv	a0,a4
204012c8:	2af9                	jal	204014a6 <addLast>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:67
	deleteFirst(queue);
204012ca:	fec42503          	lw	a0,-20(s0)
204012ce:	2cc9                	jal	204015a0 <deleteFirst>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:68
	pc_update();
204012d0:	0a7000ef          	jal	ra,20401b76 <pc_update>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:70
	//current = get(0,readyList);
}
204012d4:	0001                	nop
204012d6:	40f2                	lw	ra,28(sp)
204012d8:	4462                	lw	s0,24(sp)
204012da:	6105                	addi	sp,sp,32
204012dc:	8082                	ret

204012de <kernel_launch>:
kernel_launch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:72

void kernel_launch(void){
204012de:	1141                	addi	sp,sp,-16
204012e0:	c606                	sw	ra,12(sp)
204012e2:	c422                	sw	s0,8(sp)
204012e4:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:73
	w_mtvec((uint32_t)switch_to);
204012e6:	204027b7          	lui	a5,0x20402
204012ea:	acc78793          	addi	a5,a5,-1332 # 20401acc <switch_to>
204012ee:	853e                	mv	a0,a5
204012f0:	33d1                	jal	204010b4 <w_mtvec>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:74
	timer_init();
204012f2:	2801                	jal	20401302 <timer_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:75
	osSchedulerLaunch();
204012f4:	7c0000ef          	jal	ra,20401ab4 <osSchedulerLaunch>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:76
}
204012f8:	0001                	nop
204012fa:	40b2                	lw	ra,12(sp)
204012fc:	4422                	lw	s0,8(sp)
204012fe:	0141                	addi	sp,sp,16
20401300:	8082                	ret

20401302 <timer_init>:
timer_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:78

void timer_init(void) {
20401302:	1141                	addi	sp,sp,-16
20401304:	c606                	sw	ra,12(sp)
20401306:	c422                	sw	s0,8(sp)
20401308:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:79
	*MTIMECMP = *MTIME + 0xfffff * 5;
2040130a:	0200c7b7          	lui	a5,0x200c
2040130e:	17e1                	addi	a5,a5,-8
20401310:	4398                	lw	a4,0(a5)
20401312:	43dc                	lw	a5,4(a5)
20401314:	02004837          	lui	a6,0x2004
20401318:	00500537          	lui	a0,0x500
2040131c:	156d                	addi	a0,a0,-5
2040131e:	4581                	li	a1,0
20401320:	00a70633          	add	a2,a4,a0
20401324:	88b2                	mv	a7,a2
20401326:	00e8b8b3          	sltu	a7,a7,a4
2040132a:	00b786b3          	add	a3,a5,a1
2040132e:	00d887b3          	add	a5,a7,a3
20401332:	86be                	mv	a3,a5
20401334:	8732                	mv	a4,a2
20401336:	87b6                	mv	a5,a3
20401338:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
2040133c:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:80
	intr_on();
20401340:	3379                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:81
}
20401342:	0001                	nop
20401344:	40b2                	lw	ra,12(sp)
20401346:	4422                	lw	s0,8(sp)
20401348:	0141                	addi	sp,sp,16
2040134a:	8082                	ret

2040134c <scheduler_RoundRobin>:
scheduler_RoundRobin():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:83

void scheduler_RoundRobin(void){
2040134c:	1141                	addi	sp,sp,-16
2040134e:	c606                	sw	ra,12(sp)
20401350:	c422                	sw	s0,8(sp)
20401352:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:84
	current->state = ready;
20401354:	8dc1a783          	lw	a5,-1828(gp) # 8000087c <current>
20401358:	0007a623          	sw	zero,12(a5) # 200c00c <__heap_size+0x200b80c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:85
	if(current->next == NULL)
2040135c:	8dc1a783          	lw	a5,-1828(gp) # 8000087c <current>
20401360:	43dc                	lw	a5,4(a5)
20401362:	eb91                	bnez	a5,20401376 <scheduler_RoundRobin+0x2a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:86
		current = get(0, readyList);
20401364:	8d81a783          	lw	a5,-1832(gp) # 80000878 <readyList>
20401368:	85be                	mv	a1,a5
2040136a:	4501                	li	a0,0
2040136c:	22d9                	jal	20401532 <get>
2040136e:	872a                	mv	a4,a0
20401370:	8ce1ae23          	sw	a4,-1828(gp) # 8000087c <current>
20401374:	a031                	j	20401380 <scheduler_RoundRobin+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:89
		//current_ptr = find(1);
	else
		current = current->next;
20401376:	8dc1a783          	lw	a5,-1828(gp) # 8000087c <current>
2040137a:	43d8                	lw	a4,4(a5)
2040137c:	8ce1ae23          	sw	a4,-1828(gp) # 8000087c <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:90
	current->state = running;
20401380:	8dc1a783          	lw	a5,-1828(gp) # 8000087c <current>
20401384:	4705                	li	a4,1
20401386:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:91
}
20401388:	0001                	nop
2040138a:	40b2                	lw	ra,12(sp)
2040138c:	4422                	lw	s0,8(sp)
2040138e:	0141                	addi	sp,sp,16
20401390:	8082                	ret

20401392 <main>:
main():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:10
//#include "kernel.h"
#include <stdio.h>
#include "task.h"
#include "list.h"

int main() {
20401392:	1141                	addi	sp,sp,-16
20401394:	c606                	sw	ra,12(sp)
20401396:	c422                	sw	s0,8(sp)
20401398:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:11
	printf("RISC-V Kernel\n");
2040139a:	204007b7          	lui	a5,0x20400
2040139e:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
204013a2:	2a1000ef          	jal	ra,20401e42 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:12
    task_create(&task);
204013a6:	204017b7          	lui	a5,0x20401
204013aa:	6b678513          	addi	a0,a5,1718 # 204016b6 <task>
204013ae:	3b95                	jal	20401122 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:13
	kernel_launch();
204013b0:	373d                	jal	204012de <kernel_launch>
204013b2:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:14
}
204013b4:	853e                	mv	a0,a5
204013b6:	40b2                	lw	ra,12(sp)
204013b8:	4422                	lw	s0,8(sp)
204013ba:	0141                	addi	sp,sp,16
204013bc:	8082                	ret

204013be <createList>:
createList():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:9
 *  Created on: 21 may. 2022
 *      Author: jjrh
 */
#include "list.h"

list_t* createList(list_t* list){
204013be:	1101                	addi	sp,sp,-32
204013c0:	ce06                	sw	ra,28(sp)
204013c2:	cc22                	sw	s0,24(sp)
204013c4:	1000                	addi	s0,sp,32
204013c6:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:10
    list = (list_t*) malloc(sizeof(list_t));
204013ca:	4521                	li	a0,8
204013cc:	7c2000ef          	jal	ra,20401b8e <malloc>
204013d0:	87aa                	mv	a5,a0
204013d2:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:11
    list->head = NULL;
204013d6:	fec42783          	lw	a5,-20(s0)
204013da:	0007a023          	sw	zero,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:12
    return list;
204013de:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:13
}
204013e2:	853e                	mv	a0,a5
204013e4:	40f2                	lw	ra,28(sp)
204013e6:	4462                	lw	s0,24(sp)
204013e8:	6105                	addi	sp,sp,32
204013ea:	8082                	ret

204013ec <createNode>:
createNode():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:19

void destroyList(list_t* list){
    free(list);
}

node_t* createNode(){
204013ec:	1101                	addi	sp,sp,-32
204013ee:	ce06                	sw	ra,28(sp)
204013f0:	cc22                	sw	s0,24(sp)
204013f2:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:20
    node_t* node = (node_t*) malloc(sizeof(node_t));
204013f4:	4541                	li	a0,16
204013f6:	798000ef          	jal	ra,20401b8e <malloc>
204013fa:	87aa                	mv	a5,a0
204013fc:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:21
    node->stackPt =0;
20401400:	fec42783          	lw	a5,-20(s0)
20401404:	0007a023          	sw	zero,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:22
    node->next = NULL;
20401408:	fec42783          	lw	a5,-20(s0)
2040140c:	0007a223          	sw	zero,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:23
    node->id = 0;
20401410:	fec42783          	lw	a5,-20(s0)
20401414:	0007a423          	sw	zero,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:24
    node->state = 0;
20401418:	fec42783          	lw	a5,-20(s0)
2040141c:	0007a623          	sw	zero,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:25
    return node;
20401420:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:26
}
20401424:	853e                	mv	a0,a5
20401426:	40f2                	lw	ra,28(sp)
20401428:	4462                	lw	s0,24(sp)
2040142a:	6105                	addi	sp,sp,32
2040142c:	8082                	ret

2040142e <destroyNode>:
destroyNode():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:28

void destroyNode(node_t* node){
2040142e:	1101                	addi	sp,sp,-32
20401430:	ce06                	sw	ra,28(sp)
20401432:	cc22                	sw	s0,24(sp)
20401434:	1000                	addi	s0,sp,32
20401436:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:29
    free(node);
2040143a:	fec42503          	lw	a0,-20(s0)
2040143e:	75c000ef          	jal	ra,20401b9a <free>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:30
}
20401442:	0001                	nop
20401444:	40f2                	lw	ra,28(sp)
20401446:	4462                	lw	s0,24(sp)
20401448:	6105                	addi	sp,sp,32
2040144a:	8082                	ret

2040144c <addFirst>:
addFirst():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:32

void addFirst(list_t* list, node_t* node_1){
2040144c:	7179                	addi	sp,sp,-48
2040144e:	d606                	sw	ra,44(sp)
20401450:	d422                	sw	s0,40(sp)
20401452:	1800                	addi	s0,sp,48
20401454:	fca42e23          	sw	a0,-36(s0)
20401458:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:33
    node_t* node = createNode();
2040145c:	3f41                	jal	204013ec <createNode>
2040145e:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:34
    node->id = node_1->id;
20401462:	fd842783          	lw	a5,-40(s0)
20401466:	4798                	lw	a4,8(a5)
20401468:	fec42783          	lw	a5,-20(s0)
2040146c:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:35
	node->stackPt = node_1->stackPt;
2040146e:	fd842783          	lw	a5,-40(s0)
20401472:	4398                	lw	a4,0(a5)
20401474:	fec42783          	lw	a5,-20(s0)
20401478:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:36
	node->state = node_1->state;
2040147a:	fd842783          	lw	a5,-40(s0)
2040147e:	47d8                	lw	a4,12(a5)
20401480:	fec42783          	lw	a5,-20(s0)
20401484:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:37
    node->next = list->head;
20401486:	fdc42783          	lw	a5,-36(s0)
2040148a:	4398                	lw	a4,0(a5)
2040148c:	fec42783          	lw	a5,-20(s0)
20401490:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:38
    list->head = node;
20401492:	fdc42783          	lw	a5,-36(s0)
20401496:	fec42703          	lw	a4,-20(s0)
2040149a:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:39
}
2040149c:	0001                	nop
2040149e:	50b2                	lw	ra,44(sp)
204014a0:	5422                	lw	s0,40(sp)
204014a2:	6145                	addi	sp,sp,48
204014a4:	8082                	ret

204014a6 <addLast>:
addLast():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:41

void addLast(list_t* list, node_t* node_1){
204014a6:	7179                	addi	sp,sp,-48
204014a8:	d606                	sw	ra,44(sp)
204014aa:	d422                	sw	s0,40(sp)
204014ac:	1800                	addi	s0,sp,48
204014ae:	fca42e23          	sw	a0,-36(s0)
204014b2:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:42
    node_t* node = createNode();
204014b6:	3f1d                	jal	204013ec <createNode>
204014b8:	fea42423          	sw	a0,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:43
    node->id = node_1->id;
204014bc:	fd842783          	lw	a5,-40(s0)
204014c0:	4798                	lw	a4,8(a5)
204014c2:	fe842783          	lw	a5,-24(s0)
204014c6:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:44
    node->stackPt = node_1->stackPt;
204014c8:	fd842783          	lw	a5,-40(s0)
204014cc:	4398                	lw	a4,0(a5)
204014ce:	fe842783          	lw	a5,-24(s0)
204014d2:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:45
    node->state = node_1->state;
204014d4:	fd842783          	lw	a5,-40(s0)
204014d8:	47d8                	lw	a4,12(a5)
204014da:	fe842783          	lw	a5,-24(s0)
204014de:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:46
    if(list->head == NULL){
204014e0:	fdc42783          	lw	a5,-36(s0)
204014e4:	439c                	lw	a5,0(a5)
204014e6:	ef89                	bnez	a5,20401500 <addLast+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:47
        node->next = list->head;
204014e8:	fdc42783          	lw	a5,-36(s0)
204014ec:	4398                	lw	a4,0(a5)
204014ee:	fe842783          	lw	a5,-24(s0)
204014f2:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:48
        list->head = node;
204014f4:	fdc42783          	lw	a5,-36(s0)
204014f8:	fe842703          	lw	a4,-24(s0)
204014fc:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:56
        while (temp_node->next != NULL){
            temp_node = temp_node->next;
        }
        temp_node->next = node;
    }
}
204014fe:	a02d                	j	20401528 <addLast+0x82>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:50
        node_t* temp_node = list->head;
20401500:	fdc42783          	lw	a5,-36(s0)
20401504:	439c                	lw	a5,0(a5)
20401506:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:51
        while (temp_node->next != NULL){
2040150a:	a031                	j	20401516 <addLast+0x70>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:52
            temp_node = temp_node->next;
2040150c:	fec42783          	lw	a5,-20(s0)
20401510:	43dc                	lw	a5,4(a5)
20401512:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:51
        while (temp_node->next != NULL){
20401516:	fec42783          	lw	a5,-20(s0)
2040151a:	43dc                	lw	a5,4(a5)
2040151c:	fbe5                	bnez	a5,2040150c <addLast+0x66>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:54
        temp_node->next = node;
2040151e:	fec42783          	lw	a5,-20(s0)
20401522:	fe842703          	lw	a4,-24(s0)
20401526:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:56
}
20401528:	0001                	nop
2040152a:	50b2                	lw	ra,44(sp)
2040152c:	5422                	lw	s0,40(sp)
2040152e:	6145                	addi	sp,sp,48
20401530:	8082                	ret

20401532 <get>:
get():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:78
        node->next = temp_node->next;
        temp_node->next = node;
    }
}

node_t* get(int n, list_t* list){
20401532:	7179                	addi	sp,sp,-48
20401534:	d622                	sw	s0,44(sp)
20401536:	1800                	addi	s0,sp,48
20401538:	fca42e23          	sw	a0,-36(s0)
2040153c:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:79
    if(list->head==NULL){
20401540:	fd842783          	lw	a5,-40(s0)
20401544:	439c                	lw	a5,0(a5)
20401546:	e399                	bnez	a5,2040154c <get+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:80
        return NULL;
20401548:	4781                	li	a5,0
2040154a:	a0b9                	j	20401598 <get+0x66>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:82
    }else{
        node_t* temp_node = list->head;
2040154c:	fd842783          	lw	a5,-40(s0)
20401550:	439c                	lw	a5,0(a5)
20401552:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:83
        int position = 0;
20401556:	fe042423          	sw	zero,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:84
        while (position < n && temp_node->next != NULL){
2040155a:	a819                	j	20401570 <get+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:85
            temp_node = temp_node->next;
2040155c:	fec42783          	lw	a5,-20(s0)
20401560:	43dc                	lw	a5,4(a5)
20401562:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:86
            position++;
20401566:	fe842783          	lw	a5,-24(s0)
2040156a:	0785                	addi	a5,a5,1
2040156c:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:84
        while (position < n && temp_node->next != NULL){
20401570:	fe842703          	lw	a4,-24(s0)
20401574:	fdc42783          	lw	a5,-36(s0)
20401578:	00f75663          	bge	a4,a5,20401584 <get+0x52>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:84 (discriminator 1)
2040157c:	fec42783          	lw	a5,-20(s0)
20401580:	43dc                	lw	a5,4(a5)
20401582:	ffe9                	bnez	a5,2040155c <get+0x2a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:88
        }
        if(position !=n){
20401584:	fe842703          	lw	a4,-24(s0)
20401588:	fdc42783          	lw	a5,-36(s0)
2040158c:	00f70463          	beq	a4,a5,20401594 <get+0x62>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:89
            return NULL;
20401590:	4781                	li	a5,0
20401592:	a019                	j	20401598 <get+0x66>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:91
        }else{
            return temp_node;
20401594:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:94
        }
    }
}
20401598:	853e                	mv	a0,a5
2040159a:	5432                	lw	s0,44(sp)
2040159c:	6145                	addi	sp,sp,48
2040159e:	8082                	ret

204015a0 <deleteFirst>:
deleteFirst():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:109

int isEmpty(list_t* list){
   return list->head == NULL;
}

void deleteFirst(list_t* list){
204015a0:	7179                	addi	sp,sp,-48
204015a2:	d606                	sw	ra,44(sp)
204015a4:	d422                	sw	s0,40(sp)
204015a6:	1800                	addi	s0,sp,48
204015a8:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:110
    if(list->head != NULL){
204015ac:	fdc42783          	lw	a5,-36(s0)
204015b0:	439c                	lw	a5,0(a5)
204015b2:	c385                	beqz	a5,204015d2 <deleteFirst+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:111
        node_t* temp_node = list->head;
204015b4:	fdc42783          	lw	a5,-36(s0)
204015b8:	439c                	lw	a5,0(a5)
204015ba:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:112
        list->head = list->head->next;
204015be:	fdc42783          	lw	a5,-36(s0)
204015c2:	439c                	lw	a5,0(a5)
204015c4:	43d8                	lw	a4,4(a5)
204015c6:	fdc42783          	lw	a5,-36(s0)
204015ca:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:113
        destroyNode(temp_node);
204015cc:	fec42503          	lw	a0,-20(s0)
204015d0:	3db9                	jal	2040142e <destroyNode>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:115
    }
}
204015d2:	0001                	nop
204015d4:	50b2                	lw	ra,44(sp)
204015d6:	5422                	lw	s0,40(sp)
204015d8:	6145                	addi	sp,sp,48
204015da:	8082                	ret

204015dc <deleteElement>:
deleteElement():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:135
            destroyNode(node_delete);
        }
    }
}

void deleteElement(list_t* list,int id) {
204015dc:	7179                	addi	sp,sp,-48
204015de:	d622                	sw	s0,44(sp)
204015e0:	1800                	addi	s0,sp,48
204015e2:	fca42e23          	sw	a0,-36(s0)
204015e6:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:137

   node_t* current = list->head;
204015ea:	fdc42783          	lw	a5,-36(s0)
204015ee:	439c                	lw	a5,0(a5)
204015f0:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:138
   node_t* previous = NULL;
204015f4:	fe042423          	sw	zero,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:140

   if(list->head == NULL) {
204015f8:	fdc42783          	lw	a5,-36(s0)
204015fc:	439c                	lw	a5,0(a5)
204015fe:	cfa1                	beqz	a5,20401656 <deleteElement+0x7a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:144
      return;
   }

   while(current->id != id) {
20401600:	a831                	j	2040161c <deleteElement+0x40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:145
      if(current->next == NULL) {
20401602:	fec42783          	lw	a5,-20(s0)
20401606:	43dc                	lw	a5,4(a5)
20401608:	cba9                	beqz	a5,2040165a <deleteElement+0x7e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:148
         return;
      } else {
         previous = current;
2040160a:	fec42783          	lw	a5,-20(s0)
2040160e:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:149
         current = current->next;
20401612:	fec42783          	lw	a5,-20(s0)
20401616:	43dc                	lw	a5,4(a5)
20401618:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:144
   while(current->id != id) {
2040161c:	fec42783          	lw	a5,-20(s0)
20401620:	479c                	lw	a5,8(a5)
20401622:	fd842703          	lw	a4,-40(s0)
20401626:	fcf71ee3          	bne	a4,a5,20401602 <deleteElement+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:153
      }
   }

   if(current == list->head) {
2040162a:	fdc42783          	lw	a5,-36(s0)
2040162e:	439c                	lw	a5,0(a5)
20401630:	fec42703          	lw	a4,-20(s0)
20401634:	00f71a63          	bne	a4,a5,20401648 <deleteElement+0x6c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:154
      list->head = list->head->next;
20401638:	fdc42783          	lw	a5,-36(s0)
2040163c:	439c                	lw	a5,0(a5)
2040163e:	43d8                	lw	a4,4(a5)
20401640:	fdc42783          	lw	a5,-36(s0)
20401644:	c398                	sw	a4,0(a5)
20401646:	a819                	j	2040165c <deleteElement+0x80>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:156
   } else {
      previous->next = current->next;
20401648:	fec42783          	lw	a5,-20(s0)
2040164c:	43d8                	lw	a4,4(a5)
2040164e:	fe842783          	lw	a5,-24(s0)
20401652:	c3d8                	sw	a4,4(a5)
20401654:	a021                	j	2040165c <deleteElement+0x80>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:141
      return;
20401656:	0001                	nop
20401658:	a011                	j	2040165c <deleteElement+0x80>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:146
         return;
2040165a:	0001                	nop
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:158
   }
}
2040165c:	5432                	lw	s0,44(sp)
2040165e:	6145                	addi	sp,sp,48
20401660:	8082                	ret

20401662 <find>:
find():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:160

node_t* find(list_t* list, int id){
20401662:	7179                	addi	sp,sp,-48
20401664:	d622                	sw	s0,44(sp)
20401666:	1800                	addi	s0,sp,48
20401668:	fca42e23          	sw	a0,-36(s0)
2040166c:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:161
    node_t* temp_node = list->head;
20401670:	fdc42783          	lw	a5,-36(s0)
20401674:	439c                	lw	a5,0(a5)
20401676:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:162
    if(list->head == NULL){
2040167a:	fdc42783          	lw	a5,-36(s0)
2040167e:	439c                	lw	a5,0(a5)
20401680:	ef91                	bnez	a5,2040169c <find+0x3a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:163
        return NULL;
20401682:	4781                	li	a5,0
20401684:	a02d                	j	204016ae <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:166
    }
    while (temp_node->id != id){
        if(temp_node->next == NULL){
20401686:	fec42783          	lw	a5,-20(s0)
2040168a:	43dc                	lw	a5,4(a5)
2040168c:	e399                	bnez	a5,20401692 <find+0x30>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:167
            return NULL;
2040168e:	4781                	li	a5,0
20401690:	a839                	j	204016ae <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:169
        }else{
            temp_node = temp_node->next;
20401692:	fec42783          	lw	a5,-20(s0)
20401696:	43dc                	lw	a5,4(a5)
20401698:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:165
    while (temp_node->id != id){
2040169c:	fec42783          	lw	a5,-20(s0)
204016a0:	479c                	lw	a5,8(a5)
204016a2:	fd842703          	lw	a4,-40(s0)
204016a6:	fef710e3          	bne	a4,a5,20401686 <find+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:172
        }
    }
    return temp_node;
204016aa:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:173
}
204016ae:	853e                	mv	a0,a5
204016b0:	5432                	lw	s0,44(sp)
204016b2:	6145                	addi	sp,sp,48
204016b4:	8082                	ret

204016b6 <task>:
task():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:14
//extern void switch_to(void);

uint32_t count = 0/*, count1= 0, count2= 0, count3= 0*/;
int i=0;

void task(void){
204016b6:	1141                	addi	sp,sp,-16
204016b8:	c606                	sw	ra,12(sp)
204016ba:	c422                	sw	s0,8(sp)
204016bc:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:16
	while(1){
		if(count == 0){
204016be:	800007b7          	lui	a5,0x80000
204016c2:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe7bc>
204016c6:	ef85                	bnez	a5,204016fe <task+0x48>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:17
			count++;
204016c8:	800007b7          	lui	a5,0x80000
204016cc:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe7bc>
204016d0:	00178713          	addi	a4,a5,1
204016d4:	800007b7          	lui	a5,0x80000
204016d8:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe7bc>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:18
			task_create(&task1);
204016dc:	204017b7          	lui	a5,0x20401
204016e0:	71478513          	addi	a0,a5,1812 # 20401714 <task1>
204016e4:	3c3d                	jal	20401122 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:19
			task_create(&task2);
204016e6:	204017b7          	lui	a5,0x20401
204016ea:	77478513          	addi	a0,a5,1908 # 20401774 <task2>
204016ee:	3c15                	jal	20401122 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:22
			//task_create(&task3);
			//printList(readyList);
			semaphore_init(&semaphore, 1);
204016f0:	4585                	li	a1,1
204016f2:	46418513          	addi	a0,gp,1124 # 80001404 <semaphore>
204016f6:	2cf9                	jal	204019d4 <semaphore_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:23
			task_end();
204016f8:	3e05                	jal	20401228 <task_end>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:24
			asm volatile("wfi");
204016fa:	10500073          	wfi
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:26
		}
		count++;
204016fe:	800007b7          	lui	a5,0x80000
20401702:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe7bc>
20401706:	00178713          	addi	a4,a5,1
2040170a:	800007b7          	lui	a5,0x80000
2040170e:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe7bc>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:16
		if(count == 0){
20401712:	b775                	j	204016be <task+0x8>

20401714 <task1>:
task1():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:31
	}
}

//Semaphore test
void task1(void){
20401714:	1141                	addi	sp,sp,-16
20401716:	c606                	sw	ra,12(sp)
20401718:	c422                	sw	s0,8(sp)
2040171a:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:33
	while(1){
		semaphore_wait(&semaphore);
2040171c:	46418513          	addi	a0,gp,1124 # 80001404 <semaphore>
20401720:	24f5                	jal	20401a0c <semaphore_wait>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:34
		printf("Task 1 Entering..\n");
20401722:	204007b7          	lui	a5,0x20400
20401726:	37878513          	addi	a0,a5,888 # 20400378 <use_hfxosc+0x3c>
2040172a:	718000ef          	jal	ra,20401e42 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:37

		//critical section
		for(i=0;i<90000000;i++){}
2040172e:	800007b7          	lui	a5,0x80000
20401732:	7c07a823          	sw	zero,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
20401736:	a819                	j	2040174c <task1+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:37 (discriminator 3)
20401738:	800007b7          	lui	a5,0x80000
2040173c:	7d07a783          	lw	a5,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
20401740:	00178713          	addi	a4,a5,1
20401744:	800007b7          	lui	a5,0x80000
20401748:	7ce7a823          	sw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:37 (discriminator 1)
2040174c:	800007b7          	lui	a5,0x80000
20401750:	7d07a703          	lw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
20401754:	055d57b7          	lui	a5,0x55d5
20401758:	a7f78793          	addi	a5,a5,-1409 # 55d4a7f <__heap_size+0x55d427f>
2040175c:	fce7dee3          	bge	a5,a4,20401738 <task1+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:39

		printf("Task 1 Exiting...\n");
20401760:	204007b7          	lui	a5,0x20400
20401764:	38c78513          	addi	a0,a5,908 # 2040038c <use_hfxosc+0x50>
20401768:	6da000ef          	jal	ra,20401e42 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:40
		semaphore_signal(&semaphore);
2040176c:	46418513          	addi	a0,gp,1124 # 80001404 <semaphore>
20401770:	24dd                	jal	20401a56 <semaphore_signal>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:33
		semaphore_wait(&semaphore);
20401772:	b76d                	j	2040171c <task1+0x8>

20401774 <task2>:
task2():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:47

		//delay(400000000);
	}
}

void task2(void){
20401774:	1141                	addi	sp,sp,-16
20401776:	c606                	sw	ra,12(sp)
20401778:	c422                	sw	s0,8(sp)
2040177a:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:49
	while(1){
		semaphore_wait(&semaphore);
2040177c:	46418513          	addi	a0,gp,1124 # 80001404 <semaphore>
20401780:	2471                	jal	20401a0c <semaphore_wait>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:50
		printf("Task 2 Entering..\n");
20401782:	204007b7          	lui	a5,0x20400
20401786:	3a078513          	addi	a0,a5,928 # 204003a0 <use_hfxosc+0x64>
2040178a:	6b8000ef          	jal	ra,20401e42 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:54


		//critical section
		for(i=0;i<90000000;i++){}
2040178e:	800007b7          	lui	a5,0x80000
20401792:	7c07a823          	sw	zero,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
20401796:	a819                	j	204017ac <task2+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:54 (discriminator 3)
20401798:	800007b7          	lui	a5,0x80000
2040179c:	7d07a783          	lw	a5,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
204017a0:	00178713          	addi	a4,a5,1
204017a4:	800007b7          	lui	a5,0x80000
204017a8:	7ce7a823          	sw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:54 (discriminator 1)
204017ac:	800007b7          	lui	a5,0x80000
204017b0:	7d07a703          	lw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe7c0>
204017b4:	055d57b7          	lui	a5,0x55d5
204017b8:	a7f78793          	addi	a5,a5,-1409 # 55d4a7f <__heap_size+0x55d427f>
204017bc:	fce7dee3          	bge	a5,a4,20401798 <task2+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:57
		//delay(4000);

		printf("Task 2 Exiting...\n");
204017c0:	204007b7          	lui	a5,0x20400
204017c4:	3b478513          	addi	a0,a5,948 # 204003b4 <use_hfxosc+0x78>
204017c8:	2dad                	jal	20401e42 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:58
		semaphore_signal(&semaphore);
204017ca:	46418513          	addi	a0,gp,1124 # 80001404 <semaphore>
204017ce:	2461                	jal	20401a56 <semaphore_signal>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:49
		semaphore_wait(&semaphore);
204017d0:	b775                	j	2040177c <task2+0x8>

204017d2 <handle_interrupt>:
handle_interrupt():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:16

#define CLINT_BASE 0x2000000
#define MTIME (volatile unsigned long long int *)(CLINT_BASE + 0xbff8)
#define MTIMECMP (volatile unsigned long long int *)(CLINT_BASE + 0x4000)

void handle_interrupt(uint32_t mcause) {
204017d2:	1101                	addi	sp,sp,-32
204017d4:	ce06                	sw	ra,28(sp)
204017d6:	cc22                	sw	s0,24(sp)
204017d8:	1000                	addi	s0,sp,32
204017da:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:17
    if ((mcause << 1 >> 1) == 0x7) {
204017de:	fec42703          	lw	a4,-20(s0)
204017e2:	800007b7          	lui	a5,0x80000
204017e6:	fff7c793          	not	a5,a5
204017ea:	8f7d                	and	a4,a4,a5
204017ec:	479d                	li	a5,7
204017ee:	02f71e63          	bne	a4,a5,2040182a <handle_interrupt+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:20
    	//printList(readyList);
        //printf("  Switch context \n");
        *MTIMECMP = *MTIME + 0xfffff * 5;
204017f2:	0200c7b7          	lui	a5,0x200c
204017f6:	17e1                	addi	a5,a5,-8
204017f8:	4398                	lw	a4,0(a5)
204017fa:	43dc                	lw	a5,4(a5)
204017fc:	02004837          	lui	a6,0x2004
20401800:	00500537          	lui	a0,0x500
20401804:	156d                	addi	a0,a0,-5
20401806:	4581                	li	a1,0
20401808:	00a70633          	add	a2,a4,a0
2040180c:	88b2                	mv	a7,a2
2040180e:	00e8b8b3          	sltu	a7,a7,a4
20401812:	00b786b3          	add	a3,a5,a1
20401816:	00d887b3          	add	a5,a7,a3
2040181a:	86be                	mv	a3,a5
2040181c:	8732                	mv	a4,a2
2040181e:	87b6                	mv	a5,a3
20401820:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
20401824:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:26
    } else {
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1)
            ;
    }
}
20401828:	a839                	j	20401846 <handle_interrupt+0x74>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:22
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
2040182a:	fec42703          	lw	a4,-20(s0)
2040182e:	800007b7          	lui	a5,0x80000
20401832:	fff7c793          	not	a5,a5
20401836:	8ff9                	and	a5,a5,a4
20401838:	85be                	mv	a1,a5
2040183a:	204007b7          	lui	a5,0x20400
2040183e:	3c878513          	addi	a0,a5,968 # 204003c8 <use_hfxosc+0x8c>
20401842:	21e5                	jal	20401d2a <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:23 (discriminator 1)
        while (1)
20401844:	a001                	j	20401844 <handle_interrupt+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:26
}
20401846:	40f2                	lw	ra,28(sp)
20401848:	4462                	lw	s0,24(sp)
2040184a:	6105                	addi	sp,sp,32
2040184c:	8082                	ret

2040184e <handle_exception>:
handle_exception():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:28

void handle_exception(uint32_t mcause) {
2040184e:	7179                	addi	sp,sp,-48
20401850:	d606                	sw	ra,44(sp)
20401852:	d422                	sw	s0,40(sp)
20401854:	1800                	addi	s0,sp,48
20401856:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:31
    unsigned long long int mie;

    if (mcause == 0x8) {
2040185a:	fdc42703          	lw	a4,-36(s0)
2040185e:	47a1                	li	a5,8
20401860:	06f71663          	bne	a4,a5,204018cc <handle_exception+0x7e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:32
        *MTIMECMP = *MTIME + 0xfffff * 25;
20401864:	0200c7b7          	lui	a5,0x200c
20401868:	17e1                	addi	a5,a5,-8
2040186a:	4398                	lw	a4,0(a5)
2040186c:	43dc                	lw	a5,4(a5)
2040186e:	02004837          	lui	a6,0x2004
20401872:	01900537          	lui	a0,0x1900
20401876:	151d                	addi	a0,a0,-25
20401878:	4581                	li	a1,0
2040187a:	00a70633          	add	a2,a4,a0
2040187e:	88b2                	mv	a7,a2
20401880:	00e8b8b3          	sltu	a7,a7,a4
20401884:	00b786b3          	add	a3,a5,a1
20401888:	00d887b3          	add	a5,a7,a3
2040188c:	86be                	mv	a3,a5
2040188e:	8732                	mv	a4,a2
20401890:	87b6                	mv	a5,a3
20401892:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
20401896:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:34

        asm volatile("csrr %0, mie" : "=r"(mie));
2040189a:	30402773          	csrr	a4,mie
2040189e:	fee42423          	sw	a4,-24(s0)
204018a2:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:35
        mie |= (1 << 7);
204018a6:	fe842783          	lw	a5,-24(s0)
204018aa:	0807e793          	ori	a5,a5,128
204018ae:	fef42423          	sw	a5,-24(s0)
204018b2:	fec42783          	lw	a5,-20(s0)
204018b6:	0007e793          	ori	a5,a5,0
204018ba:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:36
        asm volatile("csrw mie, %0" : "=r"(mie));
204018be:	30471073          	csrw	mie,a4
204018c2:	fee42423          	sw	a4,-24(s0)
204018c6:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:42
    } else {
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1){
        };
    }
}
204018ca:	a839                	j	204018e8 <handle_exception+0x9a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:38
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
204018cc:	fdc42703          	lw	a4,-36(s0)
204018d0:	800007b7          	lui	a5,0x80000
204018d4:	fff7c793          	not	a5,a5
204018d8:	8ff9                	and	a5,a5,a4
204018da:	85be                	mv	a1,a5
204018dc:	204007b7          	lui	a5,0x20400
204018e0:	3c878513          	addi	a0,a5,968 # 204003c8 <use_hfxosc+0x8c>
204018e4:	2199                	jal	20401d2a <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:39 (discriminator 1)
        while (1){
204018e6:	a001                	j	204018e6 <handle_exception+0x98>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:42
}
204018e8:	50b2                	lw	ra,44(sp)
204018ea:	5422                	lw	s0,40(sp)
204018ec:	6145                	addi	sp,sp,48
204018ee:	8082                	ret

204018f0 <handle_trap>:
handle_trap():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:44

void handle_trap() {
204018f0:	1101                	addi	sp,sp,-32
204018f2:	ce06                	sw	ra,28(sp)
204018f4:	cc22                	sw	s0,24(sp)
204018f6:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:46
    uint32_t mcause, mepc;
    asm volatile("csrr %0, mcause" : "=r"(mcause));
204018f8:	342027f3          	csrr	a5,mcause
204018fc:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:47
    asm volatile("csrr %0, mepc" : "=r"(mepc));
20401900:	341027f3          	csrr	a5,mepc
20401904:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:49

    if (mcause >> 31) {
20401908:	fec42783          	lw	a5,-20(s0)
2040190c:	0007d663          	bgez	a5,20401918 <handle_trap+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:50
        handle_interrupt(mcause);
20401910:	fec42503          	lw	a0,-20(s0)
20401914:	3d7d                	jal	204017d2 <handle_interrupt>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:57
        handle_exception(mcause);
        asm volatile("csrr t0, mepc");
        asm volatile("addi t0, t0, 0x4");
        asm volatile("csrw mepc, t0");
    }
}
20401916:	a809                	j	20401928 <handle_trap+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:52
        handle_exception(mcause);
20401918:	fec42503          	lw	a0,-20(s0)
2040191c:	3f0d                	jal	2040184e <handle_exception>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:53
        asm volatile("csrr t0, mepc");
2040191e:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:54
        asm volatile("addi t0, t0, 0x4");
20401922:	0291                	addi	t0,t0,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:55
        asm volatile("csrw mepc, t0");
20401924:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:57
}
20401928:	0001                	nop
2040192a:	40f2                	lw	ra,28(sp)
2040192c:	4462                	lw	s0,24(sp)
2040192e:	6105                	addi	sp,sp,32
20401930:	8082                	ret

20401932 <w_mstatus>:
w_mstatus():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:41
static inline void w_mstatus(uint32_t x) {
20401932:	1101                	addi	sp,sp,-32
20401934:	ce22                	sw	s0,28(sp)
20401936:	1000                	addi	s0,sp,32
20401938:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:42
    asm volatile("csrw mstatus, %0" : : "r"(x));
2040193c:	fec42783          	lw	a5,-20(s0)
20401940:	30079073          	csrw	mstatus,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:43
}
20401944:	0001                	nop
20401946:	4472                	lw	s0,28(sp)
20401948:	6105                	addi	sp,sp,32
2040194a:	8082                	ret

2040194c <r_mie>:
r_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:99
static inline uint32_t r_mie() {
2040194c:	1101                	addi	sp,sp,-32
2040194e:	ce22                	sw	s0,28(sp)
20401950:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:101
    asm volatile("csrr %0, mie" : "=r"(x));
20401952:	304027f3          	csrr	a5,mie
20401956:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:102
    return x;
2040195a:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:103
}
2040195e:	853e                	mv	a0,a5
20401960:	4472                	lw	s0,28(sp)
20401962:	6105                	addi	sp,sp,32
20401964:	8082                	ret

20401966 <w_mie>:
w_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:105
static inline void w_mie(uint32_t x) {
20401966:	1101                	addi	sp,sp,-32
20401968:	ce22                	sw	s0,28(sp)
2040196a:	1000                	addi	s0,sp,32
2040196c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
20401970:	fec42783          	lw	a5,-20(s0)
20401974:	30479073          	csrw	mie,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:107
}
20401978:	0001                	nop
2040197a:	4472                	lw	s0,28(sp)
2040197c:	6105                	addi	sp,sp,32
2040197e:	8082                	ret

20401980 <intr_on>:
intr_on():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:224
static inline void intr_on() {
20401980:	1101                	addi	sp,sp,-32
20401982:	ce06                	sw	ra,28(sp)
20401984:	cc22                	sw	s0,24(sp)
20401986:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:225
	uint32_t mie = r_mie();
20401988:	37d1                	jal	2040194c <r_mie>
2040198a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:226
	mie |= INTERRUPT_ON;
2040198e:	fec42783          	lw	a5,-20(s0)
20401992:	0807e793          	ori	a5,a5,128
20401996:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
2040199a:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:228
	w_mie(mie);
2040199e:	fec42503          	lw	a0,-20(s0)
204019a2:	37d1                	jal	20401966 <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:229
}
204019a4:	0001                	nop
204019a6:	40f2                	lw	ra,28(sp)
204019a8:	4462                	lw	s0,24(sp)
204019aa:	6105                	addi	sp,sp,32
204019ac:	8082                	ret

204019ae <intr_off>:
intr_off():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:240
static inline void intr_off() {
204019ae:	1101                	addi	sp,sp,-32
204019b0:	ce06                	sw	ra,28(sp)
204019b2:	cc22                	sw	s0,24(sp)
204019b4:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:241
	uint32_t mie = r_mie();
204019b6:	3f59                	jal	2040194c <r_mie>
204019b8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:242
	mie &= INTERRUPT_OFF;
204019bc:	fe042623          	sw	zero,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
204019c0:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:244
	w_mie(mie);
204019c4:	fec42503          	lw	a0,-20(s0)
204019c8:	3f79                	jal	20401966 <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:245
}
204019ca:	0001                	nop
204019cc:	40f2                	lw	ra,28(sp)
204019ce:	4462                	lw	s0,24(sp)
204019d0:	6105                	addi	sp,sp,32
204019d2:	8082                	ret

204019d4 <semaphore_init>:
semaphore_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:12

#include "semaphore.h"

extern void switch_to(void);

void semaphore_init(semaphore_t *semaphore, int32_t value){
204019d4:	1101                	addi	sp,sp,-32
204019d6:	ce06                	sw	ra,28(sp)
204019d8:	cc22                	sw	s0,24(sp)
204019da:	1000                	addi	s0,sp,32
204019dc:	fea42623          	sw	a0,-20(s0)
204019e0:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:13
	semaphore->value = value;
204019e4:	fec42783          	lw	a5,-20(s0)
204019e8:	fe842703          	lw	a4,-24(s0)
204019ec:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:14
	semaphore->queue = createList(semaphore->queue);
204019ee:	fec42783          	lw	a5,-20(s0)
204019f2:	43dc                	lw	a5,4(a5)
204019f4:	853e                	mv	a0,a5
204019f6:	9c9ff0ef          	jal	ra,204013be <createList>
204019fa:	872a                	mv	a4,a0
204019fc:	fec42783          	lw	a5,-20(s0)
20401a00:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:15
}
20401a02:	0001                	nop
20401a04:	40f2                	lw	ra,28(sp)
20401a06:	4462                	lw	s0,24(sp)
20401a08:	6105                	addi	sp,sp,32
20401a0a:	8082                	ret

20401a0c <semaphore_wait>:
semaphore_wait():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:17

void semaphore_wait(semaphore_t *semaphore){
20401a0c:	1101                	addi	sp,sp,-32
20401a0e:	ce06                	sw	ra,28(sp)
20401a10:	cc22                	sw	s0,24(sp)
20401a12:	1000                	addi	s0,sp,32
20401a14:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:18
	intr_off();
20401a18:	3f59                	jal	204019ae <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:19
	semaphore->value--;
20401a1a:	fec42783          	lw	a5,-20(s0)
20401a1e:	439c                	lw	a5,0(a5)
20401a20:	fff78713          	addi	a4,a5,-1
20401a24:	fec42783          	lw	a5,-20(s0)
20401a28:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:20
	if(semaphore->value < 0){
20401a2a:	fec42783          	lw	a5,-20(s0)
20401a2e:	439c                	lw	a5,0(a5)
20401a30:	0007dd63          	bgez	a5,20401a4a <semaphore_wait+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:21
		task_wait(semaphore->queue);
20401a34:	fec42783          	lw	a5,-20(s0)
20401a38:	43dc                	lw	a5,4(a5)
20401a3a:	853e                	mv	a0,a5
20401a3c:	80fff0ef          	jal	ra,2040124a <task_wait>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:22
		w_mstatus(MSTATUS_MPP_M);
20401a40:	6789                	lui	a5,0x2
20401a42:	80078513          	addi	a0,a5,-2048 # 1800 <__heap_size+0x1000>
20401a46:	35f5                	jal	20401932 <w_mstatus>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:23
		switch_to();
20401a48:	2051                	jal	20401acc <switch_to>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:25
	}
	intr_on();
20401a4a:	3f1d                	jal	20401980 <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:26
}
20401a4c:	0001                	nop
20401a4e:	40f2                	lw	ra,28(sp)
20401a50:	4462                	lw	s0,24(sp)
20401a52:	6105                	addi	sp,sp,32
20401a54:	8082                	ret

20401a56 <semaphore_signal>:
semaphore_signal():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:28

void semaphore_signal(semaphore_t *semaphore){
20401a56:	1101                	addi	sp,sp,-32
20401a58:	ce06                	sw	ra,28(sp)
20401a5a:	cc22                	sw	s0,24(sp)
20401a5c:	1000                	addi	s0,sp,32
20401a5e:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:29
	intr_off();
20401a62:	37b1                	jal	204019ae <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:30
	semaphore->value ++;
20401a64:	fec42783          	lw	a5,-20(s0)
20401a68:	439c                	lw	a5,0(a5)
20401a6a:	00178713          	addi	a4,a5,1
20401a6e:	fec42783          	lw	a5,-20(s0)
20401a72:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:31
	if(semaphore->value <= 0){
20401a74:	fec42783          	lw	a5,-20(s0)
20401a78:	439c                	lw	a5,0(a5)
20401a7a:	02f04663          	bgtz	a5,20401aa6 <semaphore_signal+0x50>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:32
		task_unlock(semaphore->queue);
20401a7e:	fec42783          	lw	a5,-20(s0)
20401a82:	43dc                	lw	a5,4(a5)
20401a84:	853e                	mv	a0,a5
20401a86:	815ff0ef          	jal	ra,2040129a <task_unlock>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:33
		intr_on();
20401a8a:	3ddd                	jal	20401980 <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:34
		w_mstatus(MSTATUS_MPP_M);
20401a8c:	6789                	lui	a5,0x2
20401a8e:	80078513          	addi	a0,a5,-2048 # 1800 <__heap_size+0x1000>
20401a92:	3545                	jal	20401932 <w_mstatus>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:35
		semaphore->value ++;   //pendinte
20401a94:	fec42783          	lw	a5,-20(s0)
20401a98:	439c                	lw	a5,0(a5)
20401a9a:	00178713          	addi	a4,a5,1
20401a9e:	fec42783          	lw	a5,-20(s0)
20401aa2:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:36
		switch_to();
20401aa4:	2025                	jal	20401acc <switch_to>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:38
	}
	intr_on();
20401aa6:	3de9                	jal	20401980 <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:39
}
20401aa8:	0001                	nop
20401aaa:	40f2                	lw	ra,28(sp)
20401aac:	4462                	lw	s0,24(sp)
20401aae:	6105                	addi	sp,sp,32
20401ab0:	8082                	ret
	...

20401ab4 <osSchedulerLaunch>:
osSchedulerLaunch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:6
.section .text
.global osSchedulerLaunch
.type osSchedulerLaunch, @function
.extern current
osSchedulerLaunch:
    lw t0, current   # Load currentPt into T0
20401ab4:	8dc1a283          	lw	t0,-1828(gp) # 8000087c <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:7
    lw t1, (t0)
20401ab8:	0002a303          	lw	t1,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:8
    lw sp, (t0)        # t1 = &t0
20401abc:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:9
    lw ra, (sp)
20401ac0:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:10
    addi sp, sp, -132   # make a stack frame
20401ac2:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:11
    sw sp, 4(sp)         # store sp
20401ac6:	c20a                	sw	sp,4(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:12
    ret
20401ac8:	8082                	ret
20401aca:	0001                	nop

20401acc <switch_to>:
switch_to():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:21
.global switch_to
.type switch_to, @function
.align 2
switch_to:

    lw t6, current       # Load currentPt into T0
20401acc:	8dc1af83          	lw	t6,-1828(gp) # 8000087c <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:22
    lw sp, (t6)
20401ad0:	000fa103          	lw	sp,0(t6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:23
    addi sp, sp, -132    # make a stack frame
20401ad4:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:28

   # mv tp, sp
   # mv sp, fp
    #Push register
    sw ra, (sp)
20401ad8:	c006                	sw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:30
    #sw sp, 4(sp)
    sw gp, 8(sp)
20401ada:	c40e                	sw	gp,8(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:31
    sw tp, 12(sp)
20401adc:	c612                	sw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:32
    sw t0, 16(sp)
20401ade:	c816                	sw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:33
    sw t1, 20(sp)
20401ae0:	ca1a                	sw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:34
    sw t2, 24(sp)
20401ae2:	cc1e                	sw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:35
    sw t3, 28(sp)
20401ae4:	ce72                	sw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:36
    sw s0, 32(sp)
20401ae6:	d022                	sw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:37
    sw s1, 36(sp)
20401ae8:	d226                	sw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:38
    sw a0, 40(sp)
20401aea:	d42a                	sw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:39
    sw a1, 44(sp)
20401aec:	d62e                	sw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:40
    sw a2, 48(sp)
20401aee:	d832                	sw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:41
    sw a3, 52(sp)
20401af0:	da36                	sw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:42
    sw a4, 56(sp)
20401af2:	dc3a                	sw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:43
    sw a5, 60(sp)
20401af4:	de3e                	sw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:44
    sw a6, 64(sp)
20401af6:	c0c2                	sw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:45
    sw a7, 68(sp)
20401af8:	c2c6                	sw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:46
    sw s2, 72(sp)
20401afa:	c4ca                	sw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:47
    sw s3, 76(sp)
20401afc:	c6ce                	sw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:48
    sw s4, 80(sp)
20401afe:	c8d2                	sw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:49
    sw s5, 84(sp)
20401b00:	cad6                	sw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:50
    sw s6, 88(sp)
20401b02:	ccda                	sw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:51
    sw s7, 92(sp)
20401b04:	cede                	sw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:52
    sw s8, 96(sp)
20401b06:	d0e2                	sw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:53
    sw s9, 100(sp)
20401b08:	d2e6                	sw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:54
    sw s10,104(sp)
20401b0a:	d4ea                	sw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:55
    sw s11,108(sp)
20401b0c:	d6ee                	sw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:56
    sw t3, 112(sp)
20401b0e:	d8f2                	sw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:57
    sw t4, 116(sp)
20401b10:	daf6                	sw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:58
    sw t5, 120(sp)
20401b12:	dcfa                	sw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:59
    sw t6, 124(sp)
20401b14:	defe                	sw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:60
    csrr t0, mepc
20401b16:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:61
    sw t0, 132(sp)
20401b1a:	c316                	sw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:63

    call handle_trap
20401b1c:	3bd1                	jal	204018f0 <handle_trap>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:77
    #addi sp, sp, -132  # make a stack frame
    #lw t0, 132(sp)     # load mepc
    #csrw mepc, t0

    #Switch context in c
    call scheduler_RoundRobin
20401b1e:	82fff0ef          	jal	ra,2040134c <scheduler_RoundRobin>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:78
    lw t0, current       # Load currentPt into T0
20401b22:	8dc1a283          	lw	t0,-1828(gp) # 8000087c <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:79
    lw sp, (t0)
20401b26:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:80
    addi sp, sp, -132    # make a stack frame
20401b2a:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:81
    sw sp, 4(sp)         # store sp
20401b2e:	c20a                	sw	sp,4(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:82
    lw t0, 132(sp)       # load mepc
20401b30:	429a                	lw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:83
    csrw mepc, t0
20401b32:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:86

    #Pop register
    lw ra, (sp)
20401b36:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:89
    #lw sp, 4(sp)
    #lw gp, 8(sp)
    lw tp, 12(sp)
20401b38:	4232                	lw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:90
    lw t0, 16(sp)
20401b3a:	42c2                	lw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:91
    lw t1, 20(sp)
20401b3c:	4352                	lw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:92
    lw t2, 24(sp)
20401b3e:	43e2                	lw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:93
    lw t3, 28(sp)
20401b40:	4e72                	lw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:94
    lw s0, 32(sp)
20401b42:	5402                	lw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:95
    lw s1, 36(sp)
20401b44:	5492                	lw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:96
    lw a0, 40(sp)
20401b46:	5522                	lw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:97
    lw a1, 44(sp)
20401b48:	55b2                	lw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:98
    lw a2, 48(sp)
20401b4a:	5642                	lw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:99
    lw a3, 52(sp)
20401b4c:	56d2                	lw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:100
    lw a4, 56(sp)
20401b4e:	5762                	lw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:101
    lw a5, 60(sp)
20401b50:	57f2                	lw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:102
    lw a6, 64(sp)
20401b52:	4806                	lw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:103
    lw a7, 68(sp)
20401b54:	4896                	lw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:104
    lw s2, 72(sp)
20401b56:	4926                	lw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:105
    lw s3, 76(sp)
20401b58:	49b6                	lw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:106
    lw s4, 80(sp)
20401b5a:	4a46                	lw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:107
    lw s5, 84(sp)
20401b5c:	4ad6                	lw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:108
    lw s6, 88(sp)
20401b5e:	4b66                	lw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:109
    lw s7, 92(sp)
20401b60:	4bf6                	lw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:110
    lw s8, 96(sp)
20401b62:	5c06                	lw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:111
    lw s9, 100(sp)
20401b64:	5c96                	lw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:112
    lw s10,104(sp)
20401b66:	5d26                	lw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:113
    lw s11,108(sp)
20401b68:	5db6                	lw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:114
    lw t3, 112(sp)
20401b6a:	5e46                	lw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:115
    lw t4, 116(sp)
20401b6c:	5ed6                	lw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:116
    lw t5, 120(sp)
20401b6e:	5f66                	lw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:117
    lw t6, 124(sp)
20401b70:	5ff6                	lw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:119

    mret
20401b72:	30200073          	mret

20401b76 <pc_update>:
pc_update():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:125

.section .text
.global pc_update
.type pc_update, @function
pc_update:
    lw t6, current       # Load currentPt into T0
20401b76:	8dc1af83          	lw	t6,-1828(gp) # 8000087c <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:126
    lw t5, (t6)
20401b7a:	000faf03          	lw	t5,0(t6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:127
    addi t5, t5, -132    # make a stack frame
20401b7e:	f7cf0f13          	addi	t5,t5,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:128
    lw t6, 128(t5)
20401b82:	080f2f83          	lw	t6,128(t5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:132
   # lw t4, 132(t5)
   # mv t4, t6
   # sw t4, 132(t5)
    csrw mepc, t6
20401b86:	341f9073          	csrw	mepc,t6
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:133
    ret
20401b8a:	8082                	ret
	...

20401b8e <malloc>:
malloc():
20401b8e:	85aa                	mv	a1,a0
20401b90:	5fbff517          	auipc	a0,0x5fbff
20401b94:	c1052503          	lw	a0,-1008(a0) # 800007a0 <_impure_ptr>
20401b98:	a855                	j	20401c4c <_malloc_r>

20401b9a <free>:
free():
20401b9a:	85aa                	mv	a1,a0
20401b9c:	5fbff517          	auipc	a0,0x5fbff
20401ba0:	c0452503          	lw	a0,-1020(a0) # 800007a0 <_impure_ptr>
20401ba4:	a009                	j	20401ba6 <_free_r>

20401ba6 <_free_r>:
_free_r():
20401ba6:	c1d5                	beqz	a1,20401c4a <_free_r+0xa4>
20401ba8:	ffc5a783          	lw	a5,-4(a1)
20401bac:	1101                	addi	sp,sp,-32
20401bae:	cc22                	sw	s0,24(sp)
20401bb0:	ce06                	sw	ra,28(sp)
20401bb2:	ffc58413          	addi	s0,a1,-4
20401bb6:	0007d363          	bgez	a5,20401bbc <_free_r+0x16>
20401bba:	943e                	add	s0,s0,a5
20401bbc:	c62a                	sw	a0,12(sp)
20401bbe:	1ff000ef          	jal	ra,204025bc <__malloc_lock>
20401bc2:	5fbff717          	auipc	a4,0x5fbff
20401bc6:	c1270713          	addi	a4,a4,-1006 # 800007d4 <__malloc_free_list>
20401bca:	431c                	lw	a5,0(a4)
20401bcc:	4532                	lw	a0,12(sp)
20401bce:	eb89                	bnez	a5,20401be0 <_free_r+0x3a>
20401bd0:	00042223          	sw	zero,4(s0)
20401bd4:	c300                	sw	s0,0(a4)
20401bd6:	4462                	lw	s0,24(sp)
20401bd8:	40f2                	lw	ra,28(sp)
20401bda:	6105                	addi	sp,sp,32
20401bdc:	1e30006f          	j	204025be <__malloc_unlock>
20401be0:	00f47d63          	bgeu	s0,a5,20401bfa <_free_r+0x54>
20401be4:	4010                	lw	a2,0(s0)
20401be6:	00c406b3          	add	a3,s0,a2
20401bea:	00d79663          	bne	a5,a3,20401bf6 <_free_r+0x50>
20401bee:	4394                	lw	a3,0(a5)
20401bf0:	43dc                	lw	a5,4(a5)
20401bf2:	96b2                	add	a3,a3,a2
20401bf4:	c014                	sw	a3,0(s0)
20401bf6:	c05c                	sw	a5,4(s0)
20401bf8:	bff1                	j	20401bd4 <_free_r+0x2e>
20401bfa:	873e                	mv	a4,a5
20401bfc:	43dc                	lw	a5,4(a5)
20401bfe:	c399                	beqz	a5,20401c04 <_free_r+0x5e>
20401c00:	fef47de3          	bgeu	s0,a5,20401bfa <_free_r+0x54>
20401c04:	4314                	lw	a3,0(a4)
20401c06:	00d70633          	add	a2,a4,a3
20401c0a:	00861f63          	bne	a2,s0,20401c28 <_free_r+0x82>
20401c0e:	4010                	lw	a2,0(s0)
20401c10:	96b2                	add	a3,a3,a2
20401c12:	c314                	sw	a3,0(a4)
20401c14:	00d70633          	add	a2,a4,a3
20401c18:	fac79fe3          	bne	a5,a2,20401bd6 <_free_r+0x30>
20401c1c:	4390                	lw	a2,0(a5)
20401c1e:	43dc                	lw	a5,4(a5)
20401c20:	96b2                	add	a3,a3,a2
20401c22:	c314                	sw	a3,0(a4)
20401c24:	c35c                	sw	a5,4(a4)
20401c26:	bf45                	j	20401bd6 <_free_r+0x30>
20401c28:	00c47563          	bgeu	s0,a2,20401c32 <_free_r+0x8c>
20401c2c:	47b1                	li	a5,12
20401c2e:	c11c                	sw	a5,0(a0)
20401c30:	b75d                	j	20401bd6 <_free_r+0x30>
20401c32:	4010                	lw	a2,0(s0)
20401c34:	00c406b3          	add	a3,s0,a2
20401c38:	00d79663          	bne	a5,a3,20401c44 <_free_r+0x9e>
20401c3c:	4394                	lw	a3,0(a5)
20401c3e:	43dc                	lw	a5,4(a5)
20401c40:	96b2                	add	a3,a3,a2
20401c42:	c014                	sw	a3,0(s0)
20401c44:	c05c                	sw	a5,4(s0)
20401c46:	c340                	sw	s0,4(a4)
20401c48:	b779                	j	20401bd6 <_free_r+0x30>
20401c4a:	8082                	ret

20401c4c <_malloc_r>:
_malloc_r():
20401c4c:	1101                	addi	sp,sp,-32
20401c4e:	ca26                	sw	s1,20(sp)
20401c50:	00358493          	addi	s1,a1,3
20401c54:	98f1                	andi	s1,s1,-4
20401c56:	c84a                	sw	s2,16(sp)
20401c58:	ce06                	sw	ra,28(sp)
20401c5a:	cc22                	sw	s0,24(sp)
20401c5c:	c64e                	sw	s3,12(sp)
20401c5e:	04a1                	addi	s1,s1,8
20401c60:	47b1                	li	a5,12
20401c62:	892a                	mv	s2,a0
20401c64:	04f4f663          	bgeu	s1,a5,20401cb0 <_malloc_r+0x64>
20401c68:	44b1                	li	s1,12
20401c6a:	04b4e563          	bltu	s1,a1,20401cb4 <_malloc_r+0x68>
20401c6e:	854a                	mv	a0,s2
20401c70:	14d000ef          	jal	ra,204025bc <__malloc_lock>
20401c74:	5fbff697          	auipc	a3,0x5fbff
20401c78:	b6068693          	addi	a3,a3,-1184 # 800007d4 <__malloc_free_list>
20401c7c:	4298                	lw	a4,0(a3)
20401c7e:	843a                	mv	s0,a4
20401c80:	e429                	bnez	s0,20401cca <_malloc_r+0x7e>
20401c82:	5fbff417          	auipc	s0,0x5fbff
20401c86:	b5640413          	addi	s0,s0,-1194 # 800007d8 <__malloc_sbrk_start>
20401c8a:	401c                	lw	a5,0(s0)
20401c8c:	e789                	bnez	a5,20401c96 <_malloc_r+0x4a>
20401c8e:	4581                	li	a1,0
20401c90:	854a                	mv	a0,s2
20401c92:	2a75                	jal	20401e4e <_sbrk_r>
20401c94:	c008                	sw	a0,0(s0)
20401c96:	85a6                	mv	a1,s1
20401c98:	854a                	mv	a0,s2
20401c9a:	2a55                	jal	20401e4e <_sbrk_r>
20401c9c:	59fd                	li	s3,-1
20401c9e:	07351a63          	bne	a0,s3,20401d12 <_malloc_r+0xc6>
20401ca2:	47b1                	li	a5,12
20401ca4:	00f92023          	sw	a5,0(s2)
20401ca8:	854a                	mv	a0,s2
20401caa:	115000ef          	jal	ra,204025be <__malloc_unlock>
20401cae:	a031                	j	20401cba <_malloc_r+0x6e>
20401cb0:	fa04dde3          	bgez	s1,20401c6a <_malloc_r+0x1e>
20401cb4:	47b1                	li	a5,12
20401cb6:	00f92023          	sw	a5,0(s2)
20401cba:	4501                	li	a0,0
20401cbc:	40f2                	lw	ra,28(sp)
20401cbe:	4462                	lw	s0,24(sp)
20401cc0:	44d2                	lw	s1,20(sp)
20401cc2:	4942                	lw	s2,16(sp)
20401cc4:	49b2                	lw	s3,12(sp)
20401cc6:	6105                	addi	sp,sp,32
20401cc8:	8082                	ret
20401cca:	401c                	lw	a5,0(s0)
20401ccc:	8f85                	sub	a5,a5,s1
20401cce:	0207cf63          	bltz	a5,20401d0c <_malloc_r+0xc0>
20401cd2:	462d                	li	a2,11
20401cd4:	00f67663          	bgeu	a2,a5,20401ce0 <_malloc_r+0x94>
20401cd8:	c01c                	sw	a5,0(s0)
20401cda:	943e                	add	s0,s0,a5
20401cdc:	c004                	sw	s1,0(s0)
20401cde:	a029                	j	20401ce8 <_malloc_r+0x9c>
20401ce0:	405c                	lw	a5,4(s0)
20401ce2:	02871363          	bne	a4,s0,20401d08 <_malloc_r+0xbc>
20401ce6:	c29c                	sw	a5,0(a3)
20401ce8:	854a                	mv	a0,s2
20401cea:	0d5000ef          	jal	ra,204025be <__malloc_unlock>
20401cee:	00b40513          	addi	a0,s0,11
20401cf2:	00440793          	addi	a5,s0,4
20401cf6:	9961                	andi	a0,a0,-8
20401cf8:	40f50733          	sub	a4,a0,a5
20401cfc:	fcf500e3          	beq	a0,a5,20401cbc <_malloc_r+0x70>
20401d00:	943a                	add	s0,s0,a4
20401d02:	8f89                	sub	a5,a5,a0
20401d04:	c01c                	sw	a5,0(s0)
20401d06:	bf5d                	j	20401cbc <_malloc_r+0x70>
20401d08:	c35c                	sw	a5,4(a4)
20401d0a:	bff9                	j	20401ce8 <_malloc_r+0x9c>
20401d0c:	8722                	mv	a4,s0
20401d0e:	4040                	lw	s0,4(s0)
20401d10:	bf85                	j	20401c80 <_malloc_r+0x34>
20401d12:	00350413          	addi	s0,a0,3
20401d16:	9871                	andi	s0,s0,-4
20401d18:	fc8502e3          	beq	a0,s0,20401cdc <_malloc_r+0x90>
20401d1c:	40a405b3          	sub	a1,s0,a0
20401d20:	854a                	mv	a0,s2
20401d22:	2235                	jal	20401e4e <_sbrk_r>
20401d24:	fb351ce3          	bne	a0,s3,20401cdc <_malloc_r+0x90>
20401d28:	bfad                	j	20401ca2 <_malloc_r+0x56>

20401d2a <iprintf>:
printf():
20401d2a:	715d                	addi	sp,sp,-80
20401d2c:	d422                	sw	s0,40(sp)
20401d2e:	d606                	sw	ra,44(sp)
20401d30:	842a                	mv	s0,a0
20401d32:	da2e                	sw	a1,52(sp)
20401d34:	dc32                	sw	a2,56(sp)
20401d36:	de36                	sw	a3,60(sp)
20401d38:	c0ba                	sw	a4,64(sp)
20401d3a:	c2be                	sw	a5,68(sp)
20401d3c:	c4c2                	sw	a6,72(sp)
20401d3e:	c6c6                	sw	a7,76(sp)
20401d40:	5fbff517          	auipc	a0,0x5fbff
20401d44:	a6052503          	lw	a0,-1440(a0) # 800007a0 <_impure_ptr>
20401d48:	c511                	beqz	a0,20401d54 <iprintf+0x2a>
20401d4a:	4d1c                	lw	a5,24(a0)
20401d4c:	e781                	bnez	a5,20401d54 <iprintf+0x2a>
20401d4e:	c62a                	sw	a0,12(sp)
20401d50:	2bb1                	jal	204022ac <__sinit>
20401d52:	4532                	lw	a0,12(sp)
20401d54:	450c                	lw	a1,8(a0)
20401d56:	1854                	addi	a3,sp,52
20401d58:	8622                	mv	a2,s0
20401d5a:	ce36                	sw	a3,28(sp)
20401d5c:	0d1000ef          	jal	ra,2040262c <_vfiprintf_r>
20401d60:	50b2                	lw	ra,44(sp)
20401d62:	5422                	lw	s0,40(sp)
20401d64:	6161                	addi	sp,sp,80
20401d66:	8082                	ret

20401d68 <_puts_r>:
_puts_r():
20401d68:	1101                	addi	sp,sp,-32
20401d6a:	ca26                	sw	s1,20(sp)
20401d6c:	c84a                	sw	s2,16(sp)
20401d6e:	ce06                	sw	ra,28(sp)
20401d70:	cc22                	sw	s0,24(sp)
20401d72:	c64e                	sw	s3,12(sp)
20401d74:	c452                	sw	s4,8(sp)
20401d76:	84aa                	mv	s1,a0
20401d78:	892e                	mv	s2,a1
20401d7a:	c501                	beqz	a0,20401d82 <_puts_r+0x1a>
20401d7c:	4d1c                	lw	a5,24(a0)
20401d7e:	e391                	bnez	a5,20401d82 <_puts_r+0x1a>
20401d80:	2335                	jal	204022ac <__sinit>
20401d82:	4c9c                	lw	a5,24(s1)
20401d84:	4480                	lw	s0,8(s1)
20401d86:	e399                	bnez	a5,20401d8c <_puts_r+0x24>
20401d88:	8526                	mv	a0,s1
20401d8a:	230d                	jal	204022ac <__sinit>
20401d8c:	ffffe797          	auipc	a5,0xffffe
20401d90:	67478793          	addi	a5,a5,1652 # 20400400 <__sf_fake_stdin>
20401d94:	02f41c63          	bne	s0,a5,20401dcc <_puts_r+0x64>
20401d98:	40c0                	lw	s0,4(s1)
20401d9a:	00c45783          	lhu	a5,12(s0)
20401d9e:	8ba1                	andi	a5,a5,8
20401da0:	c7b1                	beqz	a5,20401dec <_puts_r+0x84>
20401da2:	481c                	lw	a5,16(s0)
20401da4:	c7a1                	beqz	a5,20401dec <_puts_r+0x84>
20401da6:	59fd                	li	s3,-1
20401da8:	4a29                	li	s4,10
20401daa:	441c                	lw	a5,8(s0)
20401dac:	00094583          	lbu	a1,0(s2)
20401db0:	17fd                	addi	a5,a5,-1
20401db2:	e9b1                	bnez	a1,20401e06 <_puts_r+0x9e>
20401db4:	c41c                	sw	a5,8(s0)
20401db6:	0607de63          	bgez	a5,20401e32 <_puts_r+0xca>
20401dba:	8622                	mv	a2,s0
20401dbc:	45a9                	li	a1,10
20401dbe:	8526                	mv	a0,s1
20401dc0:	287d                	jal	20401e7e <__swbuf_r>
20401dc2:	57fd                	li	a5,-1
20401dc4:	02f50863          	beq	a0,a5,20401df4 <_puts_r+0x8c>
20401dc8:	4529                	li	a0,10
20401dca:	a035                	j	20401df6 <_puts_r+0x8e>
20401dcc:	ffffe797          	auipc	a5,0xffffe
20401dd0:	65478793          	addi	a5,a5,1620 # 20400420 <__sf_fake_stdout>
20401dd4:	00f41463          	bne	s0,a5,20401ddc <_puts_r+0x74>
20401dd8:	4480                	lw	s0,8(s1)
20401dda:	b7c1                	j	20401d9a <_puts_r+0x32>
20401ddc:	ffffe797          	auipc	a5,0xffffe
20401de0:	60478793          	addi	a5,a5,1540 # 204003e0 <__sf_fake_stderr>
20401de4:	faf41be3          	bne	s0,a5,20401d9a <_puts_r+0x32>
20401de8:	44c0                	lw	s0,12(s1)
20401dea:	bf45                	j	20401d9a <_puts_r+0x32>
20401dec:	85a2                	mv	a1,s0
20401dee:	8526                	mv	a0,s1
20401df0:	22b9                	jal	20401f3e <__swsetup_r>
20401df2:	d955                	beqz	a0,20401da6 <_puts_r+0x3e>
20401df4:	557d                	li	a0,-1
20401df6:	40f2                	lw	ra,28(sp)
20401df8:	4462                	lw	s0,24(sp)
20401dfa:	44d2                	lw	s1,20(sp)
20401dfc:	4942                	lw	s2,16(sp)
20401dfe:	49b2                	lw	s3,12(sp)
20401e00:	4a22                	lw	s4,8(sp)
20401e02:	6105                	addi	sp,sp,32
20401e04:	8082                	ret
20401e06:	c41c                	sw	a5,8(s0)
20401e08:	0905                	addi	s2,s2,1
20401e0a:	0007d763          	bgez	a5,20401e18 <_puts_r+0xb0>
20401e0e:	4c18                	lw	a4,24(s0)
20401e10:	00e7cb63          	blt	a5,a4,20401e26 <_puts_r+0xbe>
20401e14:	01458963          	beq	a1,s4,20401e26 <_puts_r+0xbe>
20401e18:	401c                	lw	a5,0(s0)
20401e1a:	00178713          	addi	a4,a5,1
20401e1e:	c018                	sw	a4,0(s0)
20401e20:	00b78023          	sb	a1,0(a5)
20401e24:	b759                	j	20401daa <_puts_r+0x42>
20401e26:	8622                	mv	a2,s0
20401e28:	8526                	mv	a0,s1
20401e2a:	2891                	jal	20401e7e <__swbuf_r>
20401e2c:	f7351fe3          	bne	a0,s3,20401daa <_puts_r+0x42>
20401e30:	b7d1                	j	20401df4 <_puts_r+0x8c>
20401e32:	401c                	lw	a5,0(s0)
20401e34:	00178713          	addi	a4,a5,1
20401e38:	c018                	sw	a4,0(s0)
20401e3a:	4729                	li	a4,10
20401e3c:	00e78023          	sb	a4,0(a5)
20401e40:	b761                	j	20401dc8 <_puts_r+0x60>

20401e42 <puts>:
puts():
20401e42:	85aa                	mv	a1,a0
20401e44:	5fbff517          	auipc	a0,0x5fbff
20401e48:	95c52503          	lw	a0,-1700(a0) # 800007a0 <_impure_ptr>
20401e4c:	bf31                	j	20401d68 <_puts_r>

20401e4e <_sbrk_r>:
_sbrk_r():
20401e4e:	1141                	addi	sp,sp,-16
20401e50:	c422                	sw	s0,8(sp)
20401e52:	842a                	mv	s0,a0
20401e54:	852e                	mv	a0,a1
20401e56:	5fbff797          	auipc	a5,0x5fbff
20401e5a:	9807a323          	sw	zero,-1658(a5) # 800007dc <errno>
20401e5e:	c606                	sw	ra,12(sp)
20401e60:	08e010ef          	jal	ra,20402eee <_sbrk>
20401e64:	57fd                	li	a5,-1
20401e66:	00f51863          	bne	a0,a5,20401e76 <_sbrk_r+0x28>
20401e6a:	5fbff797          	auipc	a5,0x5fbff
20401e6e:	9727a783          	lw	a5,-1678(a5) # 800007dc <errno>
20401e72:	c391                	beqz	a5,20401e76 <_sbrk_r+0x28>
20401e74:	c01c                	sw	a5,0(s0)
20401e76:	40b2                	lw	ra,12(sp)
20401e78:	4422                	lw	s0,8(sp)
20401e7a:	0141                	addi	sp,sp,16
20401e7c:	8082                	ret

20401e7e <__swbuf_r>:
__swbuf_r():
20401e7e:	1101                	addi	sp,sp,-32
20401e80:	cc22                	sw	s0,24(sp)
20401e82:	ca26                	sw	s1,20(sp)
20401e84:	c84a                	sw	s2,16(sp)
20401e86:	ce06                	sw	ra,28(sp)
20401e88:	c64e                	sw	s3,12(sp)
20401e8a:	84aa                	mv	s1,a0
20401e8c:	892e                	mv	s2,a1
20401e8e:	8432                	mv	s0,a2
20401e90:	c501                	beqz	a0,20401e98 <__swbuf_r+0x1a>
20401e92:	4d1c                	lw	a5,24(a0)
20401e94:	e391                	bnez	a5,20401e98 <__swbuf_r+0x1a>
20401e96:	2919                	jal	204022ac <__sinit>
20401e98:	ffffe797          	auipc	a5,0xffffe
20401e9c:	56878793          	addi	a5,a5,1384 # 20400400 <__sf_fake_stdin>
20401ea0:	06f41963          	bne	s0,a5,20401f12 <__swbuf_r+0x94>
20401ea4:	40c0                	lw	s0,4(s1)
20401ea6:	4c1c                	lw	a5,24(s0)
20401ea8:	c41c                	sw	a5,8(s0)
20401eaa:	00c45783          	lhu	a5,12(s0)
20401eae:	8ba1                	andi	a5,a5,8
20401eb0:	c3c9                	beqz	a5,20401f32 <__swbuf_r+0xb4>
20401eb2:	481c                	lw	a5,16(s0)
20401eb4:	cfbd                	beqz	a5,20401f32 <__swbuf_r+0xb4>
20401eb6:	481c                	lw	a5,16(s0)
20401eb8:	4008                	lw	a0,0(s0)
20401eba:	0ff97993          	zext.b	s3,s2
20401ebe:	0ff97913          	zext.b	s2,s2
20401ec2:	8d1d                	sub	a0,a0,a5
20401ec4:	485c                	lw	a5,20(s0)
20401ec6:	00f54663          	blt	a0,a5,20401ed2 <__swbuf_r+0x54>
20401eca:	85a2                	mv	a1,s0
20401ecc:	8526                	mv	a0,s1
20401ece:	24c9                	jal	20402190 <_fflush_r>
20401ed0:	e52d                	bnez	a0,20401f3a <__swbuf_r+0xbc>
20401ed2:	441c                	lw	a5,8(s0)
20401ed4:	0505                	addi	a0,a0,1
20401ed6:	17fd                	addi	a5,a5,-1
20401ed8:	c41c                	sw	a5,8(s0)
20401eda:	401c                	lw	a5,0(s0)
20401edc:	00178713          	addi	a4,a5,1
20401ee0:	c018                	sw	a4,0(s0)
20401ee2:	01378023          	sb	s3,0(a5)
20401ee6:	485c                	lw	a5,20(s0)
20401ee8:	00a78963          	beq	a5,a0,20401efa <__swbuf_r+0x7c>
20401eec:	00c45783          	lhu	a5,12(s0)
20401ef0:	8b85                	andi	a5,a5,1
20401ef2:	cb81                	beqz	a5,20401f02 <__swbuf_r+0x84>
20401ef4:	47a9                	li	a5,10
20401ef6:	00f91663          	bne	s2,a5,20401f02 <__swbuf_r+0x84>
20401efa:	85a2                	mv	a1,s0
20401efc:	8526                	mv	a0,s1
20401efe:	2c49                	jal	20402190 <_fflush_r>
20401f00:	ed0d                	bnez	a0,20401f3a <__swbuf_r+0xbc>
20401f02:	40f2                	lw	ra,28(sp)
20401f04:	4462                	lw	s0,24(sp)
20401f06:	44d2                	lw	s1,20(sp)
20401f08:	49b2                	lw	s3,12(sp)
20401f0a:	854a                	mv	a0,s2
20401f0c:	4942                	lw	s2,16(sp)
20401f0e:	6105                	addi	sp,sp,32
20401f10:	8082                	ret
20401f12:	ffffe797          	auipc	a5,0xffffe
20401f16:	50e78793          	addi	a5,a5,1294 # 20400420 <__sf_fake_stdout>
20401f1a:	00f41463          	bne	s0,a5,20401f22 <__swbuf_r+0xa4>
20401f1e:	4480                	lw	s0,8(s1)
20401f20:	b759                	j	20401ea6 <__swbuf_r+0x28>
20401f22:	ffffe797          	auipc	a5,0xffffe
20401f26:	4be78793          	addi	a5,a5,1214 # 204003e0 <__sf_fake_stderr>
20401f2a:	f6f41ee3          	bne	s0,a5,20401ea6 <__swbuf_r+0x28>
20401f2e:	44c0                	lw	s0,12(s1)
20401f30:	bf9d                	j	20401ea6 <__swbuf_r+0x28>
20401f32:	85a2                	mv	a1,s0
20401f34:	8526                	mv	a0,s1
20401f36:	2021                	jal	20401f3e <__swsetup_r>
20401f38:	dd3d                	beqz	a0,20401eb6 <__swbuf_r+0x38>
20401f3a:	597d                	li	s2,-1
20401f3c:	b7d9                	j	20401f02 <__swbuf_r+0x84>

20401f3e <__swsetup_r>:
__swsetup_r():
20401f3e:	1141                	addi	sp,sp,-16
20401f40:	c422                	sw	s0,8(sp)
20401f42:	c226                	sw	s1,4(sp)
20401f44:	c04a                	sw	s2,0(sp)
20401f46:	c606                	sw	ra,12(sp)
20401f48:	5fbff497          	auipc	s1,0x5fbff
20401f4c:	8584a483          	lw	s1,-1960(s1) # 800007a0 <_impure_ptr>
20401f50:	892a                	mv	s2,a0
20401f52:	842e                	mv	s0,a1
20401f54:	c489                	beqz	s1,20401f5e <__swsetup_r+0x20>
20401f56:	4c9c                	lw	a5,24(s1)
20401f58:	e399                	bnez	a5,20401f5e <__swsetup_r+0x20>
20401f5a:	8526                	mv	a0,s1
20401f5c:	2e81                	jal	204022ac <__sinit>
20401f5e:	ffffe797          	auipc	a5,0xffffe
20401f62:	4a278793          	addi	a5,a5,1186 # 20400400 <__sf_fake_stdin>
20401f66:	02f41763          	bne	s0,a5,20401f94 <__swsetup_r+0x56>
20401f6a:	40c0                	lw	s0,4(s1)
20401f6c:	00c41783          	lh	a5,12(s0)
20401f70:	01079713          	slli	a4,a5,0x10
20401f74:	0087f693          	andi	a3,a5,8
20401f78:	8341                	srli	a4,a4,0x10
20401f7a:	eaad                	bnez	a3,20401fec <__swsetup_r+0xae>
20401f7c:	01077693          	andi	a3,a4,16
20401f80:	ea95                	bnez	a3,20401fb4 <__swsetup_r+0x76>
20401f82:	4725                	li	a4,9
20401f84:	00e92023          	sw	a4,0(s2)
20401f88:	0407e793          	ori	a5,a5,64
20401f8c:	00f41623          	sh	a5,12(s0)
20401f90:	557d                	li	a0,-1
20401f92:	a871                	j	2040202e <__swsetup_r+0xf0>
20401f94:	ffffe797          	auipc	a5,0xffffe
20401f98:	48c78793          	addi	a5,a5,1164 # 20400420 <__sf_fake_stdout>
20401f9c:	00f41463          	bne	s0,a5,20401fa4 <__swsetup_r+0x66>
20401fa0:	4480                	lw	s0,8(s1)
20401fa2:	b7e9                	j	20401f6c <__swsetup_r+0x2e>
20401fa4:	ffffe797          	auipc	a5,0xffffe
20401fa8:	43c78793          	addi	a5,a5,1084 # 204003e0 <__sf_fake_stderr>
20401fac:	fcf410e3          	bne	s0,a5,20401f6c <__swsetup_r+0x2e>
20401fb0:	44c0                	lw	s0,12(s1)
20401fb2:	bf6d                	j	20401f6c <__swsetup_r+0x2e>
20401fb4:	8b11                	andi	a4,a4,4
20401fb6:	c70d                	beqz	a4,20401fe0 <__swsetup_r+0xa2>
20401fb8:	584c                	lw	a1,52(s0)
20401fba:	c989                	beqz	a1,20401fcc <__swsetup_r+0x8e>
20401fbc:	04440793          	addi	a5,s0,68
20401fc0:	00f58463          	beq	a1,a5,20401fc8 <__swsetup_r+0x8a>
20401fc4:	854a                	mv	a0,s2
20401fc6:	36c5                	jal	20401ba6 <_free_r>
20401fc8:	02042a23          	sw	zero,52(s0)
20401fcc:	00c45783          	lhu	a5,12(s0)
20401fd0:	00042223          	sw	zero,4(s0)
20401fd4:	fdb7f793          	andi	a5,a5,-37
20401fd8:	00f41623          	sh	a5,12(s0)
20401fdc:	481c                	lw	a5,16(s0)
20401fde:	c01c                	sw	a5,0(s0)
20401fe0:	00c45783          	lhu	a5,12(s0)
20401fe4:	0087e793          	ori	a5,a5,8
20401fe8:	00f41623          	sh	a5,12(s0)
20401fec:	481c                	lw	a5,16(s0)
20401fee:	ef81                	bnez	a5,20402006 <__swsetup_r+0xc8>
20401ff0:	00c45783          	lhu	a5,12(s0)
20401ff4:	20000713          	li	a4,512
20401ff8:	2807f793          	andi	a5,a5,640
20401ffc:	00e78563          	beq	a5,a4,20402006 <__swsetup_r+0xc8>
20402000:	85a2                	mv	a1,s0
20402002:	854a                	mv	a0,s2
20402004:	298d                	jal	20402476 <__smakebuf_r>
20402006:	00c41783          	lh	a5,12(s0)
2040200a:	01079713          	slli	a4,a5,0x10
2040200e:	0017f693          	andi	a3,a5,1
20402012:	8341                	srli	a4,a4,0x10
20402014:	c29d                	beqz	a3,2040203a <__swsetup_r+0xfc>
20402016:	4854                	lw	a3,20(s0)
20402018:	00042423          	sw	zero,8(s0)
2040201c:	40d006b3          	neg	a3,a3
20402020:	cc14                	sw	a3,24(s0)
20402022:	4814                	lw	a3,16(s0)
20402024:	4501                	li	a0,0
20402026:	e681                	bnez	a3,2040202e <__swsetup_r+0xf0>
20402028:	08077713          	andi	a4,a4,128
2040202c:	ff31                	bnez	a4,20401f88 <__swsetup_r+0x4a>
2040202e:	40b2                	lw	ra,12(sp)
20402030:	4422                	lw	s0,8(sp)
20402032:	4492                	lw	s1,4(sp)
20402034:	4902                	lw	s2,0(sp)
20402036:	0141                	addi	sp,sp,16
20402038:	8082                	ret
2040203a:	00277693          	andi	a3,a4,2
2040203e:	4601                	li	a2,0
20402040:	e291                	bnez	a3,20402044 <__swsetup_r+0x106>
20402042:	4850                	lw	a2,20(s0)
20402044:	c410                	sw	a2,8(s0)
20402046:	bff1                	j	20402022 <__swsetup_r+0xe4>

20402048 <__sflush_r>:
__sflush_r():
20402048:	00c5d783          	lhu	a5,12(a1)
2040204c:	1101                	addi	sp,sp,-32
2040204e:	cc22                	sw	s0,24(sp)
20402050:	ca26                	sw	s1,20(sp)
20402052:	ce06                	sw	ra,28(sp)
20402054:	c84a                	sw	s2,16(sp)
20402056:	c64e                	sw	s3,12(sp)
20402058:	0087f713          	andi	a4,a5,8
2040205c:	84aa                	mv	s1,a0
2040205e:	842e                	mv	s0,a1
20402060:	e37d                	bnez	a4,20402146 <__sflush_r+0xfe>
20402062:	41d8                	lw	a4,4(a1)
20402064:	00e04763          	bgtz	a4,20402072 <__sflush_r+0x2a>
20402068:	41b8                	lw	a4,64(a1)
2040206a:	00e04463          	bgtz	a4,20402072 <__sflush_r+0x2a>
2040206e:	4501                	li	a0,0
20402070:	a87d                	j	2040212e <__sflush_r+0xe6>
20402072:	5458                	lw	a4,44(s0)
20402074:	df6d                	beqz	a4,2040206e <__sflush_r+0x26>
20402076:	6685                	lui	a3,0x1
20402078:	0004a903          	lw	s2,0(s1)
2040207c:	8ff5                	and	a5,a5,a3
2040207e:	0004a023          	sw	zero,0(s1)
20402082:	cfad                	beqz	a5,204020fc <__sflush_r+0xb4>
20402084:	4868                	lw	a0,84(s0)
20402086:	00c45783          	lhu	a5,12(s0)
2040208a:	8b91                	andi	a5,a5,4
2040208c:	c799                	beqz	a5,2040209a <__sflush_r+0x52>
2040208e:	405c                	lw	a5,4(s0)
20402090:	8d1d                	sub	a0,a0,a5
20402092:	585c                	lw	a5,52(s0)
20402094:	c399                	beqz	a5,2040209a <__sflush_r+0x52>
20402096:	403c                	lw	a5,64(s0)
20402098:	8d1d                	sub	a0,a0,a5
2040209a:	545c                	lw	a5,44(s0)
2040209c:	500c                	lw	a1,32(s0)
2040209e:	862a                	mv	a2,a0
204020a0:	4681                	li	a3,0
204020a2:	8526                	mv	a0,s1
204020a4:	9782                	jalr	a5
204020a6:	57fd                	li	a5,-1
204020a8:	00c45703          	lhu	a4,12(s0)
204020ac:	00f51d63          	bne	a0,a5,204020c6 <__sflush_r+0x7e>
204020b0:	4094                	lw	a3,0(s1)
204020b2:	47f5                	li	a5,29
204020b4:	08d7e463          	bltu	a5,a3,2040213c <__sflush_r+0xf4>
204020b8:	204007b7          	lui	a5,0x20400
204020bc:	0785                	addi	a5,a5,1
204020be:	00d7d7b3          	srl	a5,a5,a3
204020c2:	8b85                	andi	a5,a5,1
204020c4:	cfa5                	beqz	a5,2040213c <__sflush_r+0xf4>
204020c6:	481c                	lw	a5,16(s0)
204020c8:	00042223          	sw	zero,4(s0)
204020cc:	c01c                	sw	a5,0(s0)
204020ce:	6785                	lui	a5,0x1
204020d0:	8f7d                	and	a4,a4,a5
204020d2:	c719                	beqz	a4,204020e0 <__sflush_r+0x98>
204020d4:	57fd                	li	a5,-1
204020d6:	00f51463          	bne	a0,a5,204020de <__sflush_r+0x96>
204020da:	409c                	lw	a5,0(s1)
204020dc:	e391                	bnez	a5,204020e0 <__sflush_r+0x98>
204020de:	c868                	sw	a0,84(s0)
204020e0:	584c                	lw	a1,52(s0)
204020e2:	0124a023          	sw	s2,0(s1)
204020e6:	d5c1                	beqz	a1,2040206e <__sflush_r+0x26>
204020e8:	04440793          	addi	a5,s0,68
204020ec:	00f58563          	beq	a1,a5,204020f6 <__sflush_r+0xae>
204020f0:	8526                	mv	a0,s1
204020f2:	ab5ff0ef          	jal	ra,20401ba6 <_free_r>
204020f6:	02042a23          	sw	zero,52(s0)
204020fa:	bf95                	j	2040206e <__sflush_r+0x26>
204020fc:	500c                	lw	a1,32(s0)
204020fe:	4685                	li	a3,1
20402100:	4601                	li	a2,0
20402102:	8526                	mv	a0,s1
20402104:	9702                	jalr	a4
20402106:	57fd                	li	a5,-1
20402108:	f6f51fe3          	bne	a0,a5,20402086 <__sflush_r+0x3e>
2040210c:	409c                	lw	a5,0(s1)
2040210e:	dfa5                	beqz	a5,20402086 <__sflush_r+0x3e>
20402110:	4775                	li	a4,29
20402112:	00e78563          	beq	a5,a4,2040211c <__sflush_r+0xd4>
20402116:	4759                	li	a4,22
20402118:	00e79563          	bne	a5,a4,20402122 <__sflush_r+0xda>
2040211c:	0124a023          	sw	s2,0(s1)
20402120:	b7b9                	j	2040206e <__sflush_r+0x26>
20402122:	00c45783          	lhu	a5,12(s0)
20402126:	0407e793          	ori	a5,a5,64
2040212a:	00f41623          	sh	a5,12(s0)
2040212e:	40f2                	lw	ra,28(sp)
20402130:	4462                	lw	s0,24(sp)
20402132:	44d2                	lw	s1,20(sp)
20402134:	4942                	lw	s2,16(sp)
20402136:	49b2                	lw	s3,12(sp)
20402138:	6105                	addi	sp,sp,32
2040213a:	8082                	ret
2040213c:	04076713          	ori	a4,a4,64
20402140:	00e41623          	sh	a4,12(s0)
20402144:	b7ed                	j	2040212e <__sflush_r+0xe6>
20402146:	0105a983          	lw	s3,16(a1)
2040214a:	f20982e3          	beqz	s3,2040206e <__sflush_r+0x26>
2040214e:	0005a903          	lw	s2,0(a1)
20402152:	8b8d                	andi	a5,a5,3
20402154:	0135a023          	sw	s3,0(a1)
20402158:	41390933          	sub	s2,s2,s3
2040215c:	4701                	li	a4,0
2040215e:	e391                	bnez	a5,20402162 <__sflush_r+0x11a>
20402160:	49d8                	lw	a4,20(a1)
20402162:	c418                	sw	a4,8(s0)
20402164:	f12055e3          	blez	s2,2040206e <__sflush_r+0x26>
20402168:	541c                	lw	a5,40(s0)
2040216a:	500c                	lw	a1,32(s0)
2040216c:	86ca                	mv	a3,s2
2040216e:	864e                	mv	a2,s3
20402170:	8526                	mv	a0,s1
20402172:	9782                	jalr	a5
20402174:	00a04a63          	bgtz	a0,20402188 <__sflush_r+0x140>
20402178:	00c45783          	lhu	a5,12(s0)
2040217c:	557d                	li	a0,-1
2040217e:	0407e793          	ori	a5,a5,64
20402182:	00f41623          	sh	a5,12(s0)
20402186:	b765                	j	2040212e <__sflush_r+0xe6>
20402188:	99aa                	add	s3,s3,a0
2040218a:	40a90933          	sub	s2,s2,a0
2040218e:	bfd9                	j	20402164 <__sflush_r+0x11c>

20402190 <_fflush_r>:
_fflush_r():
20402190:	499c                	lw	a5,16(a1)
20402192:	cfb9                	beqz	a5,204021f0 <_fflush_r+0x60>
20402194:	1101                	addi	sp,sp,-32
20402196:	cc22                	sw	s0,24(sp)
20402198:	ce06                	sw	ra,28(sp)
2040219a:	842a                	mv	s0,a0
2040219c:	c511                	beqz	a0,204021a8 <_fflush_r+0x18>
2040219e:	4d1c                	lw	a5,24(a0)
204021a0:	e781                	bnez	a5,204021a8 <_fflush_r+0x18>
204021a2:	c62e                	sw	a1,12(sp)
204021a4:	2221                	jal	204022ac <__sinit>
204021a6:	45b2                	lw	a1,12(sp)
204021a8:	ffffe797          	auipc	a5,0xffffe
204021ac:	25878793          	addi	a5,a5,600 # 20400400 <__sf_fake_stdin>
204021b0:	00f59b63          	bne	a1,a5,204021c6 <_fflush_r+0x36>
204021b4:	404c                	lw	a1,4(s0)
204021b6:	00c59783          	lh	a5,12(a1)
204021ba:	c795                	beqz	a5,204021e6 <_fflush_r+0x56>
204021bc:	8522                	mv	a0,s0
204021be:	4462                	lw	s0,24(sp)
204021c0:	40f2                	lw	ra,28(sp)
204021c2:	6105                	addi	sp,sp,32
204021c4:	b551                	j	20402048 <__sflush_r>
204021c6:	ffffe797          	auipc	a5,0xffffe
204021ca:	25a78793          	addi	a5,a5,602 # 20400420 <__sf_fake_stdout>
204021ce:	00f59463          	bne	a1,a5,204021d6 <_fflush_r+0x46>
204021d2:	440c                	lw	a1,8(s0)
204021d4:	b7cd                	j	204021b6 <_fflush_r+0x26>
204021d6:	ffffe797          	auipc	a5,0xffffe
204021da:	20a78793          	addi	a5,a5,522 # 204003e0 <__sf_fake_stderr>
204021de:	fcf59ce3          	bne	a1,a5,204021b6 <_fflush_r+0x26>
204021e2:	444c                	lw	a1,12(s0)
204021e4:	bfc9                	j	204021b6 <_fflush_r+0x26>
204021e6:	40f2                	lw	ra,28(sp)
204021e8:	4462                	lw	s0,24(sp)
204021ea:	4501                	li	a0,0
204021ec:	6105                	addi	sp,sp,32
204021ee:	8082                	ret
204021f0:	4501                	li	a0,0
204021f2:	8082                	ret

204021f4 <std>:
std():
204021f4:	1141                	addi	sp,sp,-16
204021f6:	c422                	sw	s0,8(sp)
204021f8:	c606                	sw	ra,12(sp)
204021fa:	842a                	mv	s0,a0
204021fc:	00b51623          	sh	a1,12(a0)
20402200:	00c51723          	sh	a2,14(a0)
20402204:	00052023          	sw	zero,0(a0)
20402208:	00052223          	sw	zero,4(a0)
2040220c:	00052423          	sw	zero,8(a0)
20402210:	06052223          	sw	zero,100(a0)
20402214:	00052823          	sw	zero,16(a0)
20402218:	00052a23          	sw	zero,20(a0)
2040221c:	00052c23          	sw	zero,24(a0)
20402220:	4621                	li	a2,8
20402222:	4581                	li	a1,0
20402224:	05c50513          	addi	a0,a0,92
20402228:	24f5                	jal	20402514 <memset>
2040222a:	00000797          	auipc	a5,0x0
2040222e:	69678793          	addi	a5,a5,1686 # 204028c0 <__sread>
20402232:	d05c                	sw	a5,36(s0)
20402234:	00000797          	auipc	a5,0x0
20402238:	6bc78793          	addi	a5,a5,1724 # 204028f0 <__swrite>
2040223c:	d41c                	sw	a5,40(s0)
2040223e:	00000797          	auipc	a5,0x0
20402242:	70078793          	addi	a5,a5,1792 # 2040293e <__sseek>
20402246:	d45c                	sw	a5,44(s0)
20402248:	00000797          	auipc	a5,0x0
2040224c:	72c78793          	addi	a5,a5,1836 # 20402974 <__sclose>
20402250:	40b2                	lw	ra,12(sp)
20402252:	d000                	sw	s0,32(s0)
20402254:	d81c                	sw	a5,48(s0)
20402256:	4422                	lw	s0,8(sp)
20402258:	0141                	addi	sp,sp,16
2040225a:	8082                	ret

2040225c <_cleanup_r>:
_cleanup_r():
2040225c:	00000597          	auipc	a1,0x0
20402260:	f3458593          	addi	a1,a1,-204 # 20402190 <_fflush_r>
20402264:	a2b9                	j	204023b2 <_fwalk_reent>

20402266 <__sfmoreglue>:
__sfmoreglue():
20402266:	1141                	addi	sp,sp,-16
20402268:	c226                	sw	s1,4(sp)
2040226a:	06800613          	li	a2,104
2040226e:	fff58493          	addi	s1,a1,-1
20402272:	02c484b3          	mul	s1,s1,a2
20402276:	c04a                	sw	s2,0(sp)
20402278:	892e                	mv	s2,a1
2040227a:	c422                	sw	s0,8(sp)
2040227c:	c606                	sw	ra,12(sp)
2040227e:	07448593          	addi	a1,s1,116
20402282:	9cbff0ef          	jal	ra,20401c4c <_malloc_r>
20402286:	842a                	mv	s0,a0
20402288:	c919                	beqz	a0,2040229e <__sfmoreglue+0x38>
2040228a:	00052023          	sw	zero,0(a0)
2040228e:	01252223          	sw	s2,4(a0)
20402292:	0531                	addi	a0,a0,12
20402294:	c408                	sw	a0,8(s0)
20402296:	06848613          	addi	a2,s1,104
2040229a:	4581                	li	a1,0
2040229c:	2ca5                	jal	20402514 <memset>
2040229e:	40b2                	lw	ra,12(sp)
204022a0:	8522                	mv	a0,s0
204022a2:	4422                	lw	s0,8(sp)
204022a4:	4492                	lw	s1,4(sp)
204022a6:	4902                	lw	s2,0(sp)
204022a8:	0141                	addi	sp,sp,16
204022aa:	8082                	ret

204022ac <__sinit>:
__sinit():
204022ac:	4d1c                	lw	a5,24(a0)
204022ae:	e3bd                	bnez	a5,20402314 <__sinit+0x68>
204022b0:	1141                	addi	sp,sp,-16
204022b2:	c422                	sw	s0,8(sp)
204022b4:	c606                	sw	ra,12(sp)
204022b6:	00000797          	auipc	a5,0x0
204022ba:	fa678793          	addi	a5,a5,-90 # 2040225c <_cleanup_r>
204022be:	d51c                	sw	a5,40(a0)
204022c0:	04052423          	sw	zero,72(a0)
204022c4:	04052623          	sw	zero,76(a0)
204022c8:	04052823          	sw	zero,80(a0)
204022cc:	fffff797          	auipc	a5,0xfffff
204022d0:	d547a783          	lw	a5,-684(a5) # 20401020 <_global_impure_ptr>
204022d4:	842a                	mv	s0,a0
204022d6:	00f51463          	bne	a0,a5,204022de <__sinit+0x32>
204022da:	4785                	li	a5,1
204022dc:	cd1c                	sw	a5,24(a0)
204022de:	8522                	mv	a0,s0
204022e0:	281d                	jal	20402316 <__sfp>
204022e2:	c048                	sw	a0,4(s0)
204022e4:	8522                	mv	a0,s0
204022e6:	2805                	jal	20402316 <__sfp>
204022e8:	c408                	sw	a0,8(s0)
204022ea:	8522                	mv	a0,s0
204022ec:	202d                	jal	20402316 <__sfp>
204022ee:	c448                	sw	a0,12(s0)
204022f0:	4048                	lw	a0,4(s0)
204022f2:	4601                	li	a2,0
204022f4:	4591                	li	a1,4
204022f6:	3dfd                	jal	204021f4 <std>
204022f8:	4408                	lw	a0,8(s0)
204022fa:	4605                	li	a2,1
204022fc:	45a5                	li	a1,9
204022fe:	3ddd                	jal	204021f4 <std>
20402300:	4448                	lw	a0,12(s0)
20402302:	4609                	li	a2,2
20402304:	45c9                	li	a1,18
20402306:	35fd                	jal	204021f4 <std>
20402308:	4785                	li	a5,1
2040230a:	40b2                	lw	ra,12(sp)
2040230c:	cc1c                	sw	a5,24(s0)
2040230e:	4422                	lw	s0,8(sp)
20402310:	0141                	addi	sp,sp,16
20402312:	8082                	ret
20402314:	8082                	ret

20402316 <__sfp>:
__sfp():
20402316:	1141                	addi	sp,sp,-16
20402318:	c226                	sw	s1,4(sp)
2040231a:	fffff497          	auipc	s1,0xfffff
2040231e:	d064a483          	lw	s1,-762(s1) # 20401020 <_global_impure_ptr>
20402322:	4c9c                	lw	a5,24(s1)
20402324:	c04a                	sw	s2,0(sp)
20402326:	c606                	sw	ra,12(sp)
20402328:	c422                	sw	s0,8(sp)
2040232a:	892a                	mv	s2,a0
2040232c:	e399                	bnez	a5,20402332 <__sfp+0x1c>
2040232e:	8526                	mv	a0,s1
20402330:	3fb5                	jal	204022ac <__sinit>
20402332:	04848493          	addi	s1,s1,72
20402336:	4480                	lw	s0,8(s1)
20402338:	40dc                	lw	a5,4(s1)
2040233a:	17fd                	addi	a5,a5,-1
2040233c:	0007d663          	bgez	a5,20402348 <__sfp+0x32>
20402340:	409c                	lw	a5,0(s1)
20402342:	cfb1                	beqz	a5,2040239e <__sfp+0x88>
20402344:	4084                	lw	s1,0(s1)
20402346:	bfc5                	j	20402336 <__sfp+0x20>
20402348:	00c41703          	lh	a4,12(s0)
2040234c:	e731                	bnez	a4,20402398 <__sfp+0x82>
2040234e:	77c1                	lui	a5,0xffff0
20402350:	0785                	addi	a5,a5,1
20402352:	06042223          	sw	zero,100(s0)
20402356:	00042023          	sw	zero,0(s0)
2040235a:	00042223          	sw	zero,4(s0)
2040235e:	00042423          	sw	zero,8(s0)
20402362:	c45c                	sw	a5,12(s0)
20402364:	00042823          	sw	zero,16(s0)
20402368:	00042a23          	sw	zero,20(s0)
2040236c:	00042c23          	sw	zero,24(s0)
20402370:	4621                	li	a2,8
20402372:	4581                	li	a1,0
20402374:	05c40513          	addi	a0,s0,92
20402378:	2a71                	jal	20402514 <memset>
2040237a:	02042a23          	sw	zero,52(s0)
2040237e:	02042c23          	sw	zero,56(s0)
20402382:	04042423          	sw	zero,72(s0)
20402386:	04042623          	sw	zero,76(s0)
2040238a:	40b2                	lw	ra,12(sp)
2040238c:	8522                	mv	a0,s0
2040238e:	4422                	lw	s0,8(sp)
20402390:	4492                	lw	s1,4(sp)
20402392:	4902                	lw	s2,0(sp)
20402394:	0141                	addi	sp,sp,16
20402396:	8082                	ret
20402398:	06840413          	addi	s0,s0,104
2040239c:	bf79                	j	2040233a <__sfp+0x24>
2040239e:	4591                	li	a1,4
204023a0:	854a                	mv	a0,s2
204023a2:	35d1                	jal	20402266 <__sfmoreglue>
204023a4:	c088                	sw	a0,0(s1)
204023a6:	842a                	mv	s0,a0
204023a8:	fd51                	bnez	a0,20402344 <__sfp+0x2e>
204023aa:	47b1                	li	a5,12
204023ac:	00f92023          	sw	a5,0(s2)
204023b0:	bfe9                	j	2040238a <__sfp+0x74>

204023b2 <_fwalk_reent>:
_fwalk_reent():
204023b2:	7179                	addi	sp,sp,-48
204023b4:	d422                	sw	s0,40(sp)
204023b6:	d04a                	sw	s2,32(sp)
204023b8:	ce4e                	sw	s3,28(sp)
204023ba:	cc52                	sw	s4,24(sp)
204023bc:	c85a                	sw	s6,16(sp)
204023be:	c65e                	sw	s7,12(sp)
204023c0:	d606                	sw	ra,44(sp)
204023c2:	d226                	sw	s1,36(sp)
204023c4:	ca56                	sw	s5,20(sp)
204023c6:	892a                	mv	s2,a0
204023c8:	8a2e                	mv	s4,a1
204023ca:	04850413          	addi	s0,a0,72
204023ce:	4981                	li	s3,0
204023d0:	4b05                	li	s6,1
204023d2:	5bfd                	li	s7,-1
204023d4:	4404                	lw	s1,8(s0)
204023d6:	00442a83          	lw	s5,4(s0)
204023da:	1afd                	addi	s5,s5,-1
204023dc:	020ad063          	bgez	s5,204023fc <_fwalk_reent+0x4a>
204023e0:	4000                	lw	s0,0(s0)
204023e2:	f86d                	bnez	s0,204023d4 <_fwalk_reent+0x22>
204023e4:	50b2                	lw	ra,44(sp)
204023e6:	5422                	lw	s0,40(sp)
204023e8:	5492                	lw	s1,36(sp)
204023ea:	5902                	lw	s2,32(sp)
204023ec:	4a62                	lw	s4,24(sp)
204023ee:	4ad2                	lw	s5,20(sp)
204023f0:	4b42                	lw	s6,16(sp)
204023f2:	4bb2                	lw	s7,12(sp)
204023f4:	854e                	mv	a0,s3
204023f6:	49f2                	lw	s3,28(sp)
204023f8:	6145                	addi	sp,sp,48
204023fa:	8082                	ret
204023fc:	00c4d783          	lhu	a5,12(s1)
20402400:	00fb7b63          	bgeu	s6,a5,20402416 <_fwalk_reent+0x64>
20402404:	00e49783          	lh	a5,14(s1)
20402408:	01778763          	beq	a5,s7,20402416 <_fwalk_reent+0x64>
2040240c:	85a6                	mv	a1,s1
2040240e:	854a                	mv	a0,s2
20402410:	9a02                	jalr	s4
20402412:	00a9e9b3          	or	s3,s3,a0
20402416:	06848493          	addi	s1,s1,104
2040241a:	b7c1                	j	204023da <_fwalk_reent+0x28>

2040241c <__swhatbuf_r>:
__swhatbuf_r():
2040241c:	7159                	addi	sp,sp,-112
2040241e:	d0ca                	sw	s2,96(sp)
20402420:	892e                	mv	s2,a1
20402422:	00e59583          	lh	a1,14(a1)
20402426:	d4a2                	sw	s0,104(sp)
20402428:	d2a6                	sw	s1,100(sp)
2040242a:	d686                	sw	ra,108(sp)
2040242c:	8432                	mv	s0,a2
2040242e:	84b6                	mv	s1,a3
20402430:	0005dc63          	bgez	a1,20402448 <__swhatbuf_r+0x2c>
20402434:	00c91783          	lh	a5,12(s2)
20402438:	0004a023          	sw	zero,0(s1)
2040243c:	0807f793          	andi	a5,a5,128
20402440:	e38d                	bnez	a5,20402462 <__swhatbuf_r+0x46>
20402442:	40000793          	li	a5,1024
20402446:	a005                	j	20402466 <__swhatbuf_r+0x4a>
20402448:	0030                	addi	a2,sp,8
2040244a:	2b41                	jal	204029da <_fstat_r>
2040244c:	fe0544e3          	bltz	a0,20402434 <__swhatbuf_r+0x18>
20402450:	4732                	lw	a4,12(sp)
20402452:	67bd                	lui	a5,0xf
20402454:	8ff9                	and	a5,a5,a4
20402456:	7779                	lui	a4,0xffffe
20402458:	97ba                	add	a5,a5,a4
2040245a:	0017b793          	seqz	a5,a5
2040245e:	c09c                	sw	a5,0(s1)
20402460:	b7cd                	j	20402442 <__swhatbuf_r+0x26>
20402462:	04000793          	li	a5,64
20402466:	50b6                	lw	ra,108(sp)
20402468:	c01c                	sw	a5,0(s0)
2040246a:	5426                	lw	s0,104(sp)
2040246c:	5496                	lw	s1,100(sp)
2040246e:	5906                	lw	s2,96(sp)
20402470:	4501                	li	a0,0
20402472:	6165                	addi	sp,sp,112
20402474:	8082                	ret

20402476 <__smakebuf_r>:
__smakebuf_r():
20402476:	00c5d783          	lhu	a5,12(a1)
2040247a:	1101                	addi	sp,sp,-32
2040247c:	cc22                	sw	s0,24(sp)
2040247e:	ce06                	sw	ra,28(sp)
20402480:	ca26                	sw	s1,20(sp)
20402482:	c84a                	sw	s2,16(sp)
20402484:	8b89                	andi	a5,a5,2
20402486:	842e                	mv	s0,a1
20402488:	cf89                	beqz	a5,204024a2 <__smakebuf_r+0x2c>
2040248a:	04740793          	addi	a5,s0,71
2040248e:	c01c                	sw	a5,0(s0)
20402490:	c81c                	sw	a5,16(s0)
20402492:	4785                	li	a5,1
20402494:	c85c                	sw	a5,20(s0)
20402496:	40f2                	lw	ra,28(sp)
20402498:	4462                	lw	s0,24(sp)
2040249a:	44d2                	lw	s1,20(sp)
2040249c:	4942                	lw	s2,16(sp)
2040249e:	6105                	addi	sp,sp,32
204024a0:	8082                	ret
204024a2:	0074                	addi	a3,sp,12
204024a4:	0030                	addi	a2,sp,8
204024a6:	892a                	mv	s2,a0
204024a8:	3f95                	jal	2040241c <__swhatbuf_r>
204024aa:	45a2                	lw	a1,8(sp)
204024ac:	84aa                	mv	s1,a0
204024ae:	854a                	mv	a0,s2
204024b0:	f9cff0ef          	jal	ra,20401c4c <_malloc_r>
204024b4:	ed01                	bnez	a0,204024cc <__smakebuf_r+0x56>
204024b6:	00c41783          	lh	a5,12(s0)
204024ba:	2007f713          	andi	a4,a5,512
204024be:	ff61                	bnez	a4,20402496 <__smakebuf_r+0x20>
204024c0:	9bf1                	andi	a5,a5,-4
204024c2:	0027e793          	ori	a5,a5,2
204024c6:	00f41623          	sh	a5,12(s0)
204024ca:	b7c1                	j	2040248a <__smakebuf_r+0x14>
204024cc:	00000797          	auipc	a5,0x0
204024d0:	d9078793          	addi	a5,a5,-624 # 2040225c <_cleanup_r>
204024d4:	02f92423          	sw	a5,40(s2)
204024d8:	00c45783          	lhu	a5,12(s0)
204024dc:	c008                	sw	a0,0(s0)
204024de:	c808                	sw	a0,16(s0)
204024e0:	0807e793          	ori	a5,a5,128
204024e4:	00f41623          	sh	a5,12(s0)
204024e8:	47a2                	lw	a5,8(sp)
204024ea:	c85c                	sw	a5,20(s0)
204024ec:	47b2                	lw	a5,12(sp)
204024ee:	cf89                	beqz	a5,20402508 <__smakebuf_r+0x92>
204024f0:	00e41583          	lh	a1,14(s0)
204024f4:	854a                	mv	a0,s2
204024f6:	2b11                	jal	20402a0a <_isatty_r>
204024f8:	c901                	beqz	a0,20402508 <__smakebuf_r+0x92>
204024fa:	00c45783          	lhu	a5,12(s0)
204024fe:	9bf1                	andi	a5,a5,-4
20402500:	0017e793          	ori	a5,a5,1
20402504:	00f41623          	sh	a5,12(s0)
20402508:	00c45503          	lhu	a0,12(s0)
2040250c:	8cc9                	or	s1,s1,a0
2040250e:	00941623          	sh	s1,12(s0)
20402512:	b751                	j	20402496 <__smakebuf_r+0x20>

20402514 <memset>:
memset():
20402514:	433d                	li	t1,15
20402516:	872a                	mv	a4,a0
20402518:	02c37363          	bgeu	t1,a2,2040253e <memset+0x2a>
2040251c:	00f77793          	andi	a5,a4,15
20402520:	efbd                	bnez	a5,2040259e <memset+0x8a>
20402522:	e5ad                	bnez	a1,2040258c <memset+0x78>
20402524:	ff067693          	andi	a3,a2,-16
20402528:	8a3d                	andi	a2,a2,15
2040252a:	96ba                	add	a3,a3,a4
2040252c:	c30c                	sw	a1,0(a4)
2040252e:	c34c                	sw	a1,4(a4)
20402530:	c70c                	sw	a1,8(a4)
20402532:	c74c                	sw	a1,12(a4)
20402534:	0741                	addi	a4,a4,16
20402536:	fed76be3          	bltu	a4,a3,2040252c <memset+0x18>
2040253a:	e211                	bnez	a2,2040253e <memset+0x2a>
2040253c:	8082                	ret
2040253e:	40c306b3          	sub	a3,t1,a2
20402542:	068a                	slli	a3,a3,0x2
20402544:	00000297          	auipc	t0,0x0
20402548:	9696                	add	a3,a3,t0
2040254a:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
2040254e:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffbffe>
20402552:	00b706a3          	sb	a1,13(a4)
20402556:	00b70623          	sb	a1,12(a4)
2040255a:	00b705a3          	sb	a1,11(a4)
2040255e:	00b70523          	sb	a1,10(a4)
20402562:	00b704a3          	sb	a1,9(a4)
20402566:	00b70423          	sb	a1,8(a4)
2040256a:	00b703a3          	sb	a1,7(a4)
2040256e:	00b70323          	sb	a1,6(a4)
20402572:	00b702a3          	sb	a1,5(a4)
20402576:	00b70223          	sb	a1,4(a4)
2040257a:	00b701a3          	sb	a1,3(a4)
2040257e:	00b70123          	sb	a1,2(a4)
20402582:	00b700a3          	sb	a1,1(a4)
20402586:	00b70023          	sb	a1,0(a4)
2040258a:	8082                	ret
2040258c:	0ff5f593          	zext.b	a1,a1
20402590:	00859693          	slli	a3,a1,0x8
20402594:	8dd5                	or	a1,a1,a3
20402596:	01059693          	slli	a3,a1,0x10
2040259a:	8dd5                	or	a1,a1,a3
2040259c:	b761                	j	20402524 <memset+0x10>
2040259e:	00279693          	slli	a3,a5,0x2
204025a2:	00000297          	auipc	t0,0x0
204025a6:	9696                	add	a3,a3,t0
204025a8:	8286                	mv	t0,ra
204025aa:	fa8680e7          	jalr	-88(a3)
204025ae:	8096                	mv	ra,t0
204025b0:	17c1                	addi	a5,a5,-16
204025b2:	8f1d                	sub	a4,a4,a5
204025b4:	963e                	add	a2,a2,a5
204025b6:	f8c374e3          	bgeu	t1,a2,2040253e <memset+0x2a>
204025ba:	b7a5                	j	20402522 <memset+0xe>

204025bc <__malloc_lock>:
__malloc_lock():
204025bc:	8082                	ret

204025be <__malloc_unlock>:
__malloc_unlock():
204025be:	8082                	ret

204025c0 <__sfputc_r>:
__sfputc_r():
204025c0:	461c                	lw	a5,8(a2)
204025c2:	17fd                	addi	a5,a5,-1
204025c4:	c61c                	sw	a5,8(a2)
204025c6:	0007da63          	bgez	a5,204025da <__sfputc_r+0x1a>
204025ca:	4e18                	lw	a4,24(a2)
204025cc:	00e7c563          	blt	a5,a4,204025d6 <__sfputc_r+0x16>
204025d0:	47a9                	li	a5,10
204025d2:	00f59463          	bne	a1,a5,204025da <__sfputc_r+0x1a>
204025d6:	8a9ff06f          	j	20401e7e <__swbuf_r>
204025da:	421c                	lw	a5,0(a2)
204025dc:	852e                	mv	a0,a1
204025de:	00178713          	addi	a4,a5,1
204025e2:	c218                	sw	a4,0(a2)
204025e4:	00b78023          	sb	a1,0(a5)
204025e8:	8082                	ret

204025ea <__sfputs_r>:
__sfputs_r():
204025ea:	1101                	addi	sp,sp,-32
204025ec:	cc22                	sw	s0,24(sp)
204025ee:	ca26                	sw	s1,20(sp)
204025f0:	c84a                	sw	s2,16(sp)
204025f2:	c64e                	sw	s3,12(sp)
204025f4:	c452                	sw	s4,8(sp)
204025f6:	ce06                	sw	ra,28(sp)
204025f8:	892a                	mv	s2,a0
204025fa:	89ae                	mv	s3,a1
204025fc:	8432                	mv	s0,a2
204025fe:	00d604b3          	add	s1,a2,a3
20402602:	5a7d                	li	s4,-1
20402604:	00941463          	bne	s0,s1,2040260c <__sfputs_r+0x22>
20402608:	4501                	li	a0,0
2040260a:	a809                	j	2040261c <__sfputs_r+0x32>
2040260c:	00044583          	lbu	a1,0(s0)
20402610:	864e                	mv	a2,s3
20402612:	854a                	mv	a0,s2
20402614:	3775                	jal	204025c0 <__sfputc_r>
20402616:	0405                	addi	s0,s0,1
20402618:	ff4516e3          	bne	a0,s4,20402604 <__sfputs_r+0x1a>
2040261c:	40f2                	lw	ra,28(sp)
2040261e:	4462                	lw	s0,24(sp)
20402620:	44d2                	lw	s1,20(sp)
20402622:	4942                	lw	s2,16(sp)
20402624:	49b2                	lw	s3,12(sp)
20402626:	4a22                	lw	s4,8(sp)
20402628:	6105                	addi	sp,sp,32
2040262a:	8082                	ret

2040262c <_vfiprintf_r>:
_vfiprintf_r():
2040262c:	7135                	addi	sp,sp,-160
2040262e:	cd22                	sw	s0,152(sp)
20402630:	cb26                	sw	s1,148(sp)
20402632:	c94a                	sw	s2,144(sp)
20402634:	c74e                	sw	s3,140(sp)
20402636:	cf06                	sw	ra,156(sp)
20402638:	c552                	sw	s4,136(sp)
2040263a:	c356                	sw	s5,132(sp)
2040263c:	c15a                	sw	s6,128(sp)
2040263e:	dede                	sw	s7,124(sp)
20402640:	dce2                	sw	s8,120(sp)
20402642:	dae6                	sw	s9,116(sp)
20402644:	89aa                	mv	s3,a0
20402646:	84ae                	mv	s1,a1
20402648:	8932                	mv	s2,a2
2040264a:	8436                	mv	s0,a3
2040264c:	c501                	beqz	a0,20402654 <_vfiprintf_r+0x28>
2040264e:	4d1c                	lw	a5,24(a0)
20402650:	e391                	bnez	a5,20402654 <_vfiprintf_r+0x28>
20402652:	39a9                	jal	204022ac <__sinit>
20402654:	ffffe797          	auipc	a5,0xffffe
20402658:	dac78793          	addi	a5,a5,-596 # 20400400 <__sf_fake_stdin>
2040265c:	0cf49b63          	bne	s1,a5,20402732 <_vfiprintf_r+0x106>
20402660:	0049a483          	lw	s1,4(s3)
20402664:	00c4d783          	lhu	a5,12(s1)
20402668:	8ba1                	andi	a5,a5,8
2040266a:	c7f5                	beqz	a5,20402756 <_vfiprintf_r+0x12a>
2040266c:	489c                	lw	a5,16(s1)
2040266e:	c7e5                	beqz	a5,20402756 <_vfiprintf_r+0x12a>
20402670:	02000793          	li	a5,32
20402674:	02f104a3          	sb	a5,41(sp)
20402678:	03000793          	li	a5,48
2040267c:	d202                	sw	zero,36(sp)
2040267e:	02f10523          	sb	a5,42(sp)
20402682:	c622                	sw	s0,12(sp)
20402684:	02500b93          	li	s7,37
20402688:	ffffea97          	auipc	s5,0xffffe
2040268c:	db8a8a93          	addi	s5,s5,-584 # 20400440 <__sf_fake_stdout+0x20>
20402690:	4c05                	li	s8,1
20402692:	4b29                	li	s6,10
20402694:	844a                	mv	s0,s2
20402696:	00044783          	lbu	a5,0(s0)
2040269a:	c399                	beqz	a5,204026a0 <_vfiprintf_r+0x74>
2040269c:	0f779063          	bne	a5,s7,2040277c <_vfiprintf_r+0x150>
204026a0:	41240cb3          	sub	s9,s0,s2
204026a4:	01240d63          	beq	s0,s2,204026be <_vfiprintf_r+0x92>
204026a8:	86e6                	mv	a3,s9
204026aa:	864a                	mv	a2,s2
204026ac:	85a6                	mv	a1,s1
204026ae:	854e                	mv	a0,s3
204026b0:	3f2d                	jal	204025ea <__sfputs_r>
204026b2:	57fd                	li	a5,-1
204026b4:	1ef50463          	beq	a0,a5,2040289c <_vfiprintf_r+0x270>
204026b8:	5792                	lw	a5,36(sp)
204026ba:	97e6                	add	a5,a5,s9
204026bc:	d23e                	sw	a5,36(sp)
204026be:	00044783          	lbu	a5,0(s0)
204026c2:	1c078d63          	beqz	a5,2040289c <_vfiprintf_r+0x270>
204026c6:	57fd                	li	a5,-1
204026c8:	00140913          	addi	s2,s0,1
204026cc:	c802                	sw	zero,16(sp)
204026ce:	ce02                	sw	zero,28(sp)
204026d0:	ca3e                	sw	a5,20(sp)
204026d2:	cc02                	sw	zero,24(sp)
204026d4:	040109a3          	sb	zero,83(sp)
204026d8:	d482                	sw	zero,104(sp)
204026da:	00094583          	lbu	a1,0(s2)
204026de:	4615                	li	a2,5
204026e0:	8556                	mv	a0,s5
204026e2:	2661                	jal	20402a6a <memchr>
204026e4:	47c2                	lw	a5,16(sp)
204026e6:	00190413          	addi	s0,s2,1
204026ea:	e959                	bnez	a0,20402780 <_vfiprintf_r+0x154>
204026ec:	0107f713          	andi	a4,a5,16
204026f0:	c709                	beqz	a4,204026fa <_vfiprintf_r+0xce>
204026f2:	02000713          	li	a4,32
204026f6:	04e109a3          	sb	a4,83(sp)
204026fa:	0087f713          	andi	a4,a5,8
204026fe:	c709                	beqz	a4,20402708 <_vfiprintf_r+0xdc>
20402700:	02b00713          	li	a4,43
20402704:	04e109a3          	sb	a4,83(sp)
20402708:	00094683          	lbu	a3,0(s2)
2040270c:	02a00713          	li	a4,42
20402710:	08e68063          	beq	a3,a4,20402790 <_vfiprintf_r+0x164>
20402714:	47f2                	lw	a5,28(sp)
20402716:	844a                	mv	s0,s2
20402718:	4681                	li	a3,0
2040271a:	4625                	li	a2,9
2040271c:	00044703          	lbu	a4,0(s0)
20402720:	00140593          	addi	a1,s0,1
20402724:	fd070713          	addi	a4,a4,-48
20402728:	0ae67963          	bgeu	a2,a4,204027da <_vfiprintf_r+0x1ae>
2040272c:	cab5                	beqz	a3,204027a0 <_vfiprintf_r+0x174>
2040272e:	ce3e                	sw	a5,28(sp)
20402730:	a885                	j	204027a0 <_vfiprintf_r+0x174>
20402732:	ffffe797          	auipc	a5,0xffffe
20402736:	cee78793          	addi	a5,a5,-786 # 20400420 <__sf_fake_stdout>
2040273a:	00f49563          	bne	s1,a5,20402744 <_vfiprintf_r+0x118>
2040273e:	0089a483          	lw	s1,8(s3)
20402742:	b70d                	j	20402664 <_vfiprintf_r+0x38>
20402744:	ffffe797          	auipc	a5,0xffffe
20402748:	c9c78793          	addi	a5,a5,-868 # 204003e0 <__sf_fake_stderr>
2040274c:	f0f49ce3          	bne	s1,a5,20402664 <_vfiprintf_r+0x38>
20402750:	00c9a483          	lw	s1,12(s3)
20402754:	bf01                	j	20402664 <_vfiprintf_r+0x38>
20402756:	85a6                	mv	a1,s1
20402758:	854e                	mv	a0,s3
2040275a:	fe4ff0ef          	jal	ra,20401f3e <__swsetup_r>
2040275e:	d909                	beqz	a0,20402670 <_vfiprintf_r+0x44>
20402760:	557d                	li	a0,-1
20402762:	40fa                	lw	ra,156(sp)
20402764:	446a                	lw	s0,152(sp)
20402766:	44da                	lw	s1,148(sp)
20402768:	494a                	lw	s2,144(sp)
2040276a:	49ba                	lw	s3,140(sp)
2040276c:	4a2a                	lw	s4,136(sp)
2040276e:	4a9a                	lw	s5,132(sp)
20402770:	4b0a                	lw	s6,128(sp)
20402772:	5bf6                	lw	s7,124(sp)
20402774:	5c66                	lw	s8,120(sp)
20402776:	5cd6                	lw	s9,116(sp)
20402778:	610d                	addi	sp,sp,160
2040277a:	8082                	ret
2040277c:	0405                	addi	s0,s0,1
2040277e:	bf21                	j	20402696 <_vfiprintf_r+0x6a>
20402780:	41550533          	sub	a0,a0,s5
20402784:	00ac1533          	sll	a0,s8,a0
20402788:	8fc9                	or	a5,a5,a0
2040278a:	c83e                	sw	a5,16(sp)
2040278c:	8922                	mv	s2,s0
2040278e:	b7b1                	j	204026da <_vfiprintf_r+0xae>
20402790:	4732                	lw	a4,12(sp)
20402792:	00470693          	addi	a3,a4,4
20402796:	4318                	lw	a4,0(a4)
20402798:	c636                	sw	a3,12(sp)
2040279a:	02074963          	bltz	a4,204027cc <_vfiprintf_r+0x1a0>
2040279e:	ce3a                	sw	a4,28(sp)
204027a0:	00044703          	lbu	a4,0(s0)
204027a4:	02e00793          	li	a5,46
204027a8:	04f71f63          	bne	a4,a5,20402806 <_vfiprintf_r+0x1da>
204027ac:	00144703          	lbu	a4,1(s0)
204027b0:	02a00793          	li	a5,42
204027b4:	02f71b63          	bne	a4,a5,204027ea <_vfiprintf_r+0x1be>
204027b8:	47b2                	lw	a5,12(sp)
204027ba:	0409                	addi	s0,s0,2
204027bc:	00478713          	addi	a4,a5,4
204027c0:	439c                	lw	a5,0(a5)
204027c2:	c63a                	sw	a4,12(sp)
204027c4:	0207c163          	bltz	a5,204027e6 <_vfiprintf_r+0x1ba>
204027c8:	ca3e                	sw	a5,20(sp)
204027ca:	a835                	j	20402806 <_vfiprintf_r+0x1da>
204027cc:	40e00733          	neg	a4,a4
204027d0:	0027e793          	ori	a5,a5,2
204027d4:	ce3a                	sw	a4,28(sp)
204027d6:	c83e                	sw	a5,16(sp)
204027d8:	b7e1                	j	204027a0 <_vfiprintf_r+0x174>
204027da:	036787b3          	mul	a5,a5,s6
204027de:	842e                	mv	s0,a1
204027e0:	4685                	li	a3,1
204027e2:	97ba                	add	a5,a5,a4
204027e4:	bf25                	j	2040271c <_vfiprintf_r+0xf0>
204027e6:	57fd                	li	a5,-1
204027e8:	b7c5                	j	204027c8 <_vfiprintf_r+0x19c>
204027ea:	0405                	addi	s0,s0,1
204027ec:	ca02                	sw	zero,20(sp)
204027ee:	4681                	li	a3,0
204027f0:	4781                	li	a5,0
204027f2:	4625                	li	a2,9
204027f4:	00044703          	lbu	a4,0(s0)
204027f8:	00140593          	addi	a1,s0,1
204027fc:	fd070713          	addi	a4,a4,-48
20402800:	06e67463          	bgeu	a2,a4,20402868 <_vfiprintf_r+0x23c>
20402804:	f2f1                	bnez	a3,204027c8 <_vfiprintf_r+0x19c>
20402806:	00044583          	lbu	a1,0(s0)
2040280a:	460d                	li	a2,3
2040280c:	ffffe517          	auipc	a0,0xffffe
20402810:	c3c50513          	addi	a0,a0,-964 # 20400448 <__sf_fake_stdout+0x28>
20402814:	2c99                	jal	20402a6a <memchr>
20402816:	cd11                	beqz	a0,20402832 <_vfiprintf_r+0x206>
20402818:	ffffe797          	auipc	a5,0xffffe
2040281c:	c3078793          	addi	a5,a5,-976 # 20400448 <__sf_fake_stdout+0x28>
20402820:	8d1d                	sub	a0,a0,a5
20402822:	04000793          	li	a5,64
20402826:	00a797b3          	sll	a5,a5,a0
2040282a:	4542                	lw	a0,16(sp)
2040282c:	0405                	addi	s0,s0,1
2040282e:	8d5d                	or	a0,a0,a5
20402830:	c82a                	sw	a0,16(sp)
20402832:	00044583          	lbu	a1,0(s0)
20402836:	4619                	li	a2,6
20402838:	ffffe517          	auipc	a0,0xffffe
2040283c:	c1450513          	addi	a0,a0,-1004 # 2040044c <__sf_fake_stdout+0x2c>
20402840:	00140913          	addi	s2,s0,1
20402844:	02b10423          	sb	a1,40(sp)
20402848:	240d                	jal	20402a6a <memchr>
2040284a:	c12d                	beqz	a0,204028ac <_vfiprintf_r+0x280>
2040284c:	00000793          	li	a5,0
20402850:	e795                	bnez	a5,2040287c <_vfiprintf_r+0x250>
20402852:	4742                	lw	a4,16(sp)
20402854:	47b2                	lw	a5,12(sp)
20402856:	10077713          	andi	a4,a4,256
2040285a:	cf09                	beqz	a4,20402874 <_vfiprintf_r+0x248>
2040285c:	0791                	addi	a5,a5,4
2040285e:	c63e                	sw	a5,12(sp)
20402860:	5792                	lw	a5,36(sp)
20402862:	97d2                	add	a5,a5,s4
20402864:	d23e                	sw	a5,36(sp)
20402866:	b53d                	j	20402694 <_vfiprintf_r+0x68>
20402868:	036787b3          	mul	a5,a5,s6
2040286c:	842e                	mv	s0,a1
2040286e:	4685                	li	a3,1
20402870:	97ba                	add	a5,a5,a4
20402872:	b749                	j	204027f4 <_vfiprintf_r+0x1c8>
20402874:	079d                	addi	a5,a5,7
20402876:	9be1                	andi	a5,a5,-8
20402878:	07a1                	addi	a5,a5,8
2040287a:	b7d5                	j	2040285e <_vfiprintf_r+0x232>
2040287c:	0078                	addi	a4,sp,12
2040287e:	00000697          	auipc	a3,0x0
20402882:	d6c68693          	addi	a3,a3,-660 # 204025ea <__sfputs_r>
20402886:	8626                	mv	a2,s1
20402888:	080c                	addi	a1,sp,16
2040288a:	854e                	mv	a0,s3
2040288c:	00000097          	auipc	ra,0x0
20402890:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20402894:	57fd                	li	a5,-1
20402896:	8a2a                	mv	s4,a0
20402898:	fcf514e3          	bne	a0,a5,20402860 <_vfiprintf_r+0x234>
2040289c:	00c4d783          	lhu	a5,12(s1)
204028a0:	0407f793          	andi	a5,a5,64
204028a4:	ea079ee3          	bnez	a5,20402760 <_vfiprintf_r+0x134>
204028a8:	5512                	lw	a0,36(sp)
204028aa:	bd65                	j	20402762 <_vfiprintf_r+0x136>
204028ac:	0078                	addi	a4,sp,12
204028ae:	00000697          	auipc	a3,0x0
204028b2:	d3c68693          	addi	a3,a3,-708 # 204025ea <__sfputs_r>
204028b6:	8626                	mv	a2,s1
204028b8:	080c                	addi	a1,sp,16
204028ba:	854e                	mv	a0,s3
204028bc:	2cd1                	jal	20402b90 <_printf_i>
204028be:	bfd9                	j	20402894 <_vfiprintf_r+0x268>

204028c0 <__sread>:
__sread():
204028c0:	1141                	addi	sp,sp,-16
204028c2:	c422                	sw	s0,8(sp)
204028c4:	842e                	mv	s0,a1
204028c6:	00e59583          	lh	a1,14(a1)
204028ca:	c606                	sw	ra,12(sp)
204028cc:	2b15                	jal	20402e00 <_read_r>
204028ce:	00054963          	bltz	a0,204028e0 <__sread+0x20>
204028d2:	487c                	lw	a5,84(s0)
204028d4:	97aa                	add	a5,a5,a0
204028d6:	c87c                	sw	a5,84(s0)
204028d8:	40b2                	lw	ra,12(sp)
204028da:	4422                	lw	s0,8(sp)
204028dc:	0141                	addi	sp,sp,16
204028de:	8082                	ret
204028e0:	00c45783          	lhu	a5,12(s0)
204028e4:	777d                	lui	a4,0xfffff
204028e6:	177d                	addi	a4,a4,-1
204028e8:	8ff9                	and	a5,a5,a4
204028ea:	00f41623          	sh	a5,12(s0)
204028ee:	b7ed                	j	204028d8 <__sread+0x18>

204028f0 <__swrite>:
__swrite():
204028f0:	00c5d783          	lhu	a5,12(a1)
204028f4:	1101                	addi	sp,sp,-32
204028f6:	cc22                	sw	s0,24(sp)
204028f8:	ca26                	sw	s1,20(sp)
204028fa:	c84a                	sw	s2,16(sp)
204028fc:	c64e                	sw	s3,12(sp)
204028fe:	ce06                	sw	ra,28(sp)
20402900:	1007f793          	andi	a5,a5,256
20402904:	84aa                	mv	s1,a0
20402906:	842e                	mv	s0,a1
20402908:	8932                	mv	s2,a2
2040290a:	89b6                	mv	s3,a3
2040290c:	c791                	beqz	a5,20402918 <__swrite+0x28>
2040290e:	00e59583          	lh	a1,14(a1)
20402912:	4689                	li	a3,2
20402914:	4601                	li	a2,0
20402916:	220d                	jal	20402a38 <_lseek_r>
20402918:	00c45783          	lhu	a5,12(s0)
2040291c:	777d                	lui	a4,0xfffff
2040291e:	177d                	addi	a4,a4,-1
20402920:	8ff9                	and	a5,a5,a4
20402922:	00e41583          	lh	a1,14(s0)
20402926:	00f41623          	sh	a5,12(s0)
2040292a:	4462                	lw	s0,24(sp)
2040292c:	40f2                	lw	ra,28(sp)
2040292e:	86ce                	mv	a3,s3
20402930:	864a                	mv	a2,s2
20402932:	49b2                	lw	s3,12(sp)
20402934:	4942                	lw	s2,16(sp)
20402936:	8526                	mv	a0,s1
20402938:	44d2                	lw	s1,20(sp)
2040293a:	6105                	addi	sp,sp,32
2040293c:	a83d                	j	2040297a <_write_r>

2040293e <__sseek>:
__sseek():
2040293e:	1141                	addi	sp,sp,-16
20402940:	c422                	sw	s0,8(sp)
20402942:	842e                	mv	s0,a1
20402944:	00e59583          	lh	a1,14(a1)
20402948:	c606                	sw	ra,12(sp)
2040294a:	20fd                	jal	20402a38 <_lseek_r>
2040294c:	57fd                	li	a5,-1
2040294e:	00c45703          	lhu	a4,12(s0)
20402952:	00f51b63          	bne	a0,a5,20402968 <__sseek+0x2a>
20402956:	77fd                	lui	a5,0xfffff
20402958:	17fd                	addi	a5,a5,-1
2040295a:	8ff9                	and	a5,a5,a4
2040295c:	00f41623          	sh	a5,12(s0)
20402960:	40b2                	lw	ra,12(sp)
20402962:	4422                	lw	s0,8(sp)
20402964:	0141                	addi	sp,sp,16
20402966:	8082                	ret
20402968:	6785                	lui	a5,0x1
2040296a:	8fd9                	or	a5,a5,a4
2040296c:	00f41623          	sh	a5,12(s0)
20402970:	c868                	sw	a0,84(s0)
20402972:	b7fd                	j	20402960 <__sseek+0x22>

20402974 <__sclose>:
__sclose():
20402974:	00e59583          	lh	a1,14(a1)
20402978:	a815                	j	204029ac <_close_r>

2040297a <_write_r>:
_write_r():
2040297a:	1141                	addi	sp,sp,-16
2040297c:	c422                	sw	s0,8(sp)
2040297e:	842a                	mv	s0,a0
20402980:	852e                	mv	a0,a1
20402982:	85b2                	mv	a1,a2
20402984:	8636                	mv	a2,a3
20402986:	5fbfe797          	auipc	a5,0x5fbfe
2040298a:	e407ab23          	sw	zero,-426(a5) # 800007dc <errno>
2040298e:	c606                	sw	ra,12(sp)
20402990:	23f5                	jal	20402f7c <_write>
20402992:	57fd                	li	a5,-1
20402994:	00f51863          	bne	a0,a5,204029a4 <_write_r+0x2a>
20402998:	5fbfe797          	auipc	a5,0x5fbfe
2040299c:	e447a783          	lw	a5,-444(a5) # 800007dc <errno>
204029a0:	c391                	beqz	a5,204029a4 <_write_r+0x2a>
204029a2:	c01c                	sw	a5,0(s0)
204029a4:	40b2                	lw	ra,12(sp)
204029a6:	4422                	lw	s0,8(sp)
204029a8:	0141                	addi	sp,sp,16
204029aa:	8082                	ret

204029ac <_close_r>:
_close_r():
204029ac:	1141                	addi	sp,sp,-16
204029ae:	c422                	sw	s0,8(sp)
204029b0:	842a                	mv	s0,a0
204029b2:	852e                	mv	a0,a1
204029b4:	5fbfe797          	auipc	a5,0x5fbfe
204029b8:	e207a423          	sw	zero,-472(a5) # 800007dc <errno>
204029bc:	c606                	sw	ra,12(sp)
204029be:	2995                	jal	20402e32 <_close>
204029c0:	57fd                	li	a5,-1
204029c2:	00f51863          	bne	a0,a5,204029d2 <_close_r+0x26>
204029c6:	5fbfe797          	auipc	a5,0x5fbfe
204029ca:	e167a783          	lw	a5,-490(a5) # 800007dc <errno>
204029ce:	c391                	beqz	a5,204029d2 <_close_r+0x26>
204029d0:	c01c                	sw	a5,0(s0)
204029d2:	40b2                	lw	ra,12(sp)
204029d4:	4422                	lw	s0,8(sp)
204029d6:	0141                	addi	sp,sp,16
204029d8:	8082                	ret

204029da <_fstat_r>:
_fstat_r():
204029da:	1141                	addi	sp,sp,-16
204029dc:	c422                	sw	s0,8(sp)
204029de:	842a                	mv	s0,a0
204029e0:	852e                	mv	a0,a1
204029e2:	85b2                	mv	a1,a2
204029e4:	5fbfe797          	auipc	a5,0x5fbfe
204029e8:	de07ac23          	sw	zero,-520(a5) # 800007dc <errno>
204029ec:	c606                	sw	ra,12(sp)
204029ee:	219d                	jal	20402e54 <_fstat>
204029f0:	57fd                	li	a5,-1
204029f2:	00f51863          	bne	a0,a5,20402a02 <_fstat_r+0x28>
204029f6:	5fbfe797          	auipc	a5,0x5fbfe
204029fa:	de67a783          	lw	a5,-538(a5) # 800007dc <errno>
204029fe:	c391                	beqz	a5,20402a02 <_fstat_r+0x28>
20402a00:	c01c                	sw	a5,0(s0)
20402a02:	40b2                	lw	ra,12(sp)
20402a04:	4422                	lw	s0,8(sp)
20402a06:	0141                	addi	sp,sp,16
20402a08:	8082                	ret

20402a0a <_isatty_r>:
_isatty_r():
20402a0a:	1141                	addi	sp,sp,-16
20402a0c:	c422                	sw	s0,8(sp)
20402a0e:	842a                	mv	s0,a0
20402a10:	852e                	mv	a0,a1
20402a12:	5fbfe797          	auipc	a5,0x5fbfe
20402a16:	dc07a523          	sw	zero,-566(a5) # 800007dc <errno>
20402a1a:	c606                	sw	ra,12(sp)
20402a1c:	29b9                	jal	20402e7a <_isatty>
20402a1e:	57fd                	li	a5,-1
20402a20:	00f51863          	bne	a0,a5,20402a30 <_isatty_r+0x26>
20402a24:	5fbfe797          	auipc	a5,0x5fbfe
20402a28:	db87a783          	lw	a5,-584(a5) # 800007dc <errno>
20402a2c:	c391                	beqz	a5,20402a30 <_isatty_r+0x26>
20402a2e:	c01c                	sw	a5,0(s0)
20402a30:	40b2                	lw	ra,12(sp)
20402a32:	4422                	lw	s0,8(sp)
20402a34:	0141                	addi	sp,sp,16
20402a36:	8082                	ret

20402a38 <_lseek_r>:
_lseek_r():
20402a38:	1141                	addi	sp,sp,-16
20402a3a:	c422                	sw	s0,8(sp)
20402a3c:	842a                	mv	s0,a0
20402a3e:	852e                	mv	a0,a1
20402a40:	85b2                	mv	a1,a2
20402a42:	8636                	mv	a2,a3
20402a44:	5fbfe797          	auipc	a5,0x5fbfe
20402a48:	d807ac23          	sw	zero,-616(a5) # 800007dc <errno>
20402a4c:	c606                	sw	ra,12(sp)
20402a4e:	21b1                	jal	20402e9a <_lseek>
20402a50:	57fd                	li	a5,-1
20402a52:	00f51863          	bne	a0,a5,20402a62 <_lseek_r+0x2a>
20402a56:	5fbfe797          	auipc	a5,0x5fbfe
20402a5a:	d867a783          	lw	a5,-634(a5) # 800007dc <errno>
20402a5e:	c391                	beqz	a5,20402a62 <_lseek_r+0x2a>
20402a60:	c01c                	sw	a5,0(s0)
20402a62:	40b2                	lw	ra,12(sp)
20402a64:	4422                	lw	s0,8(sp)
20402a66:	0141                	addi	sp,sp,16
20402a68:	8082                	ret

20402a6a <memchr>:
memchr():
20402a6a:	0ff5f593          	zext.b	a1,a1
20402a6e:	962a                	add	a2,a2,a0
20402a70:	00c51463          	bne	a0,a2,20402a78 <memchr+0xe>
20402a74:	4501                	li	a0,0
20402a76:	8082                	ret
20402a78:	00054783          	lbu	a5,0(a0)
20402a7c:	feb78de3          	beq	a5,a1,20402a76 <memchr+0xc>
20402a80:	0505                	addi	a0,a0,1
20402a82:	b7fd                	j	20402a70 <memchr+0x6>

20402a84 <_printf_common>:
_printf_common():
20402a84:	7179                	addi	sp,sp,-48
20402a86:	cc52                	sw	s4,24(sp)
20402a88:	499c                	lw	a5,16(a1)
20402a8a:	8a3a                	mv	s4,a4
20402a8c:	4598                	lw	a4,8(a1)
20402a8e:	d422                	sw	s0,40(sp)
20402a90:	d226                	sw	s1,36(sp)
20402a92:	ce4e                	sw	s3,28(sp)
20402a94:	ca56                	sw	s5,20(sp)
20402a96:	d606                	sw	ra,44(sp)
20402a98:	d04a                	sw	s2,32(sp)
20402a9a:	c85a                	sw	s6,16(sp)
20402a9c:	c65e                	sw	s7,12(sp)
20402a9e:	89aa                	mv	s3,a0
20402aa0:	842e                	mv	s0,a1
20402aa2:	84b2                	mv	s1,a2
20402aa4:	8ab6                	mv	s5,a3
20402aa6:	00e7d363          	bge	a5,a4,20402aac <_printf_common+0x28>
20402aaa:	87ba                	mv	a5,a4
20402aac:	c09c                	sw	a5,0(s1)
20402aae:	04344703          	lbu	a4,67(s0)
20402ab2:	c319                	beqz	a4,20402ab8 <_printf_common+0x34>
20402ab4:	0785                	addi	a5,a5,1
20402ab6:	c09c                	sw	a5,0(s1)
20402ab8:	401c                	lw	a5,0(s0)
20402aba:	0207f793          	andi	a5,a5,32
20402abe:	c781                	beqz	a5,20402ac6 <_printf_common+0x42>
20402ac0:	409c                	lw	a5,0(s1)
20402ac2:	0789                	addi	a5,a5,2
20402ac4:	c09c                	sw	a5,0(s1)
20402ac6:	00042903          	lw	s2,0(s0)
20402aca:	00697913          	andi	s2,s2,6
20402ace:	00091a63          	bnez	s2,20402ae2 <_printf_common+0x5e>
20402ad2:	01940b13          	addi	s6,s0,25
20402ad6:	5bfd                	li	s7,-1
20402ad8:	445c                	lw	a5,12(s0)
20402ada:	4098                	lw	a4,0(s1)
20402adc:	8f99                	sub	a5,a5,a4
20402ade:	04f94c63          	blt	s2,a5,20402b36 <_printf_common+0xb2>
20402ae2:	04344783          	lbu	a5,67(s0)
20402ae6:	00f036b3          	snez	a3,a5
20402aea:	401c                	lw	a5,0(s0)
20402aec:	0207f793          	andi	a5,a5,32
20402af0:	eba5                	bnez	a5,20402b60 <_printf_common+0xdc>
20402af2:	04340613          	addi	a2,s0,67
20402af6:	85d6                	mv	a1,s5
20402af8:	854e                	mv	a0,s3
20402afa:	9a02                	jalr	s4
20402afc:	57fd                	li	a5,-1
20402afe:	04f50363          	beq	a0,a5,20402b44 <_printf_common+0xc0>
20402b02:	401c                	lw	a5,0(s0)
20402b04:	4611                	li	a2,4
20402b06:	4098                	lw	a4,0(s1)
20402b08:	8b99                	andi	a5,a5,6
20402b0a:	4454                	lw	a3,12(s0)
20402b0c:	4481                	li	s1,0
20402b0e:	00c79763          	bne	a5,a2,20402b1c <_printf_common+0x98>
20402b12:	40e684b3          	sub	s1,a3,a4
20402b16:	0004d363          	bgez	s1,20402b1c <_printf_common+0x98>
20402b1a:	4481                	li	s1,0
20402b1c:	441c                	lw	a5,8(s0)
20402b1e:	4818                	lw	a4,16(s0)
20402b20:	00f75463          	bge	a4,a5,20402b28 <_printf_common+0xa4>
20402b24:	8f99                	sub	a5,a5,a4
20402b26:	94be                	add	s1,s1,a5
20402b28:	4901                	li	s2,0
20402b2a:	0469                	addi	s0,s0,26
20402b2c:	5b7d                	li	s6,-1
20402b2e:	05249863          	bne	s1,s2,20402b7e <_printf_common+0xfa>
20402b32:	4501                	li	a0,0
20402b34:	a809                	j	20402b46 <_printf_common+0xc2>
20402b36:	4685                	li	a3,1
20402b38:	865a                	mv	a2,s6
20402b3a:	85d6                	mv	a1,s5
20402b3c:	854e                	mv	a0,s3
20402b3e:	9a02                	jalr	s4
20402b40:	01751e63          	bne	a0,s7,20402b5c <_printf_common+0xd8>
20402b44:	557d                	li	a0,-1
20402b46:	50b2                	lw	ra,44(sp)
20402b48:	5422                	lw	s0,40(sp)
20402b4a:	5492                	lw	s1,36(sp)
20402b4c:	5902                	lw	s2,32(sp)
20402b4e:	49f2                	lw	s3,28(sp)
20402b50:	4a62                	lw	s4,24(sp)
20402b52:	4ad2                	lw	s5,20(sp)
20402b54:	4b42                	lw	s6,16(sp)
20402b56:	4bb2                	lw	s7,12(sp)
20402b58:	6145                	addi	sp,sp,48
20402b5a:	8082                	ret
20402b5c:	0905                	addi	s2,s2,1
20402b5e:	bfad                	j	20402ad8 <_printf_common+0x54>
20402b60:	00d40733          	add	a4,s0,a3
20402b64:	03000613          	li	a2,48
20402b68:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffd033>
20402b6c:	04544703          	lbu	a4,69(s0)
20402b70:	00168793          	addi	a5,a3,1
20402b74:	97a2                	add	a5,a5,s0
20402b76:	0689                	addi	a3,a3,2
20402b78:	04e781a3          	sb	a4,67(a5)
20402b7c:	bf9d                	j	20402af2 <_printf_common+0x6e>
20402b7e:	4685                	li	a3,1
20402b80:	8622                	mv	a2,s0
20402b82:	85d6                	mv	a1,s5
20402b84:	854e                	mv	a0,s3
20402b86:	9a02                	jalr	s4
20402b88:	fb650ee3          	beq	a0,s6,20402b44 <_printf_common+0xc0>
20402b8c:	0905                	addi	s2,s2,1
20402b8e:	b745                	j	20402b2e <_printf_common+0xaa>

20402b90 <_printf_i>:
_printf_i():
20402b90:	7179                	addi	sp,sp,-48
20402b92:	d422                	sw	s0,40(sp)
20402b94:	d226                	sw	s1,36(sp)
20402b96:	d04a                	sw	s2,32(sp)
20402b98:	ce4e                	sw	s3,28(sp)
20402b9a:	d606                	sw	ra,44(sp)
20402b9c:	cc52                	sw	s4,24(sp)
20402b9e:	ca56                	sw	s5,20(sp)
20402ba0:	c85a                	sw	s6,16(sp)
20402ba2:	0185c803          	lbu	a6,24(a1)
20402ba6:	07800793          	li	a5,120
20402baa:	84aa                	mv	s1,a0
20402bac:	842e                	mv	s0,a1
20402bae:	8932                	mv	s2,a2
20402bb0:	89b6                	mv	s3,a3
20402bb2:	0107ee63          	bltu	a5,a6,20402bce <_printf_i+0x3e>
20402bb6:	06200793          	li	a5,98
20402bba:	04358693          	addi	a3,a1,67
20402bbe:	0107ed63          	bltu	a5,a6,20402bd8 <_printf_i+0x48>
20402bc2:	1c080563          	beqz	a6,20402d8c <_printf_i+0x1fc>
20402bc6:	05800793          	li	a5,88
20402bca:	12f80a63          	beq	a6,a5,20402cfe <_printf_i+0x16e>
20402bce:	04240a93          	addi	s5,s0,66
20402bd2:	05040123          	sb	a6,66(s0)
20402bd6:	a815                	j	20402c0a <_printf_i+0x7a>
20402bd8:	f9d80793          	addi	a5,a6,-99
20402bdc:	0ff7f793          	zext.b	a5,a5
20402be0:	4655                	li	a2,21
20402be2:	fef666e3          	bltu	a2,a5,20402bce <_printf_i+0x3e>
20402be6:	ffffe617          	auipc	a2,0xffffe
20402bea:	89660613          	addi	a2,a2,-1898 # 2040047c <__sf_fake_stdout+0x5c>
20402bee:	078a                	slli	a5,a5,0x2
20402bf0:	97b2                	add	a5,a5,a2
20402bf2:	439c                	lw	a5,0(a5)
20402bf4:	97b2                	add	a5,a5,a2
20402bf6:	8782                	jr	a5
20402bf8:	431c                	lw	a5,0(a4)
20402bfa:	04258a93          	addi	s5,a1,66
20402bfe:	00478693          	addi	a3,a5,4
20402c02:	439c                	lw	a5,0(a5)
20402c04:	c314                	sw	a3,0(a4)
20402c06:	04f58123          	sb	a5,66(a1)
20402c0a:	4785                	li	a5,1
20402c0c:	a25d                	j	20402db2 <_printf_i+0x222>
20402c0e:	419c                	lw	a5,0(a1)
20402c10:	4308                	lw	a0,0(a4)
20402c12:	0807f613          	andi	a2,a5,128
20402c16:	00450593          	addi	a1,a0,4
20402c1a:	c20d                	beqz	a2,20402c3c <_printf_i+0xac>
20402c1c:	411c                	lw	a5,0(a0)
20402c1e:	c30c                	sw	a1,0(a4)
20402c20:	0007d863          	bgez	a5,20402c30 <_printf_i+0xa0>
20402c24:	02d00713          	li	a4,45
20402c28:	40f007b3          	neg	a5,a5
20402c2c:	04e401a3          	sb	a4,67(s0)
20402c30:	ffffe617          	auipc	a2,0xffffe
20402c34:	82460613          	addi	a2,a2,-2012 # 20400454 <__sf_fake_stdout+0x34>
20402c38:	4829                	li	a6,10
20402c3a:	a0a1                	j	20402c82 <_printf_i+0xf2>
20402c3c:	0407f613          	andi	a2,a5,64
20402c40:	411c                	lw	a5,0(a0)
20402c42:	c30c                	sw	a1,0(a4)
20402c44:	de71                	beqz	a2,20402c20 <_printf_i+0x90>
20402c46:	07c2                	slli	a5,a5,0x10
20402c48:	87c1                	srai	a5,a5,0x10
20402c4a:	bfd9                	j	20402c20 <_printf_i+0x90>
20402c4c:	4190                	lw	a2,0(a1)
20402c4e:	431c                	lw	a5,0(a4)
20402c50:	08067513          	andi	a0,a2,128
20402c54:	00478593          	addi	a1,a5,4
20402c58:	c501                	beqz	a0,20402c60 <_printf_i+0xd0>
20402c5a:	c30c                	sw	a1,0(a4)
20402c5c:	439c                	lw	a5,0(a5)
20402c5e:	a039                	j	20402c6c <_printf_i+0xdc>
20402c60:	04067613          	andi	a2,a2,64
20402c64:	c30c                	sw	a1,0(a4)
20402c66:	da7d                	beqz	a2,20402c5c <_printf_i+0xcc>
20402c68:	0007d783          	lhu	a5,0(a5)
20402c6c:	06f00713          	li	a4,111
20402c70:	ffffd617          	auipc	a2,0xffffd
20402c74:	7e460613          	addi	a2,a2,2020 # 20400454 <__sf_fake_stdout+0x34>
20402c78:	0ee80463          	beq	a6,a4,20402d60 <_printf_i+0x1d0>
20402c7c:	4829                	li	a6,10
20402c7e:	040401a3          	sb	zero,67(s0)
20402c82:	4058                	lw	a4,4(s0)
20402c84:	c418                	sw	a4,8(s0)
20402c86:	00074563          	bltz	a4,20402c90 <_printf_i+0x100>
20402c8a:	400c                	lw	a1,0(s0)
20402c8c:	99ed                	andi	a1,a1,-5
20402c8e:	c00c                	sw	a1,0(s0)
20402c90:	e399                	bnez	a5,20402c96 <_printf_i+0x106>
20402c92:	8ab6                	mv	s5,a3
20402c94:	cf19                	beqz	a4,20402cb2 <_printf_i+0x122>
20402c96:	8ab6                	mv	s5,a3
20402c98:	0307f733          	remu	a4,a5,a6
20402c9c:	1afd                	addi	s5,s5,-1
20402c9e:	9732                	add	a4,a4,a2
20402ca0:	00074703          	lbu	a4,0(a4)
20402ca4:	00ea8023          	sb	a4,0(s5)
20402ca8:	873e                	mv	a4,a5
20402caa:	0307d7b3          	divu	a5,a5,a6
20402cae:	ff0775e3          	bgeu	a4,a6,20402c98 <_printf_i+0x108>
20402cb2:	47a1                	li	a5,8
20402cb4:	00f81e63          	bne	a6,a5,20402cd0 <_printf_i+0x140>
20402cb8:	401c                	lw	a5,0(s0)
20402cba:	8b85                	andi	a5,a5,1
20402cbc:	cb91                	beqz	a5,20402cd0 <_printf_i+0x140>
20402cbe:	4058                	lw	a4,4(s0)
20402cc0:	481c                	lw	a5,16(s0)
20402cc2:	00e7c763          	blt	a5,a4,20402cd0 <_printf_i+0x140>
20402cc6:	03000793          	li	a5,48
20402cca:	fefa8fa3          	sb	a5,-1(s5)
20402cce:	1afd                	addi	s5,s5,-1
20402cd0:	415686b3          	sub	a3,a3,s5
20402cd4:	c814                	sw	a3,16(s0)
20402cd6:	874e                	mv	a4,s3
20402cd8:	86ca                	mv	a3,s2
20402cda:	0070                	addi	a2,sp,12
20402cdc:	85a2                	mv	a1,s0
20402cde:	8526                	mv	a0,s1
20402ce0:	3355                	jal	20402a84 <_printf_common>
20402ce2:	5a7d                	li	s4,-1
20402ce4:	0d451b63          	bne	a0,s4,20402dba <_printf_i+0x22a>
20402ce8:	557d                	li	a0,-1
20402cea:	50b2                	lw	ra,44(sp)
20402cec:	5422                	lw	s0,40(sp)
20402cee:	5492                	lw	s1,36(sp)
20402cf0:	5902                	lw	s2,32(sp)
20402cf2:	49f2                	lw	s3,28(sp)
20402cf4:	4a62                	lw	s4,24(sp)
20402cf6:	4ad2                	lw	s5,20(sp)
20402cf8:	4b42                	lw	s6,16(sp)
20402cfa:	6145                	addi	sp,sp,48
20402cfc:	8082                	ret
20402cfe:	050582a3          	sb	a6,69(a1)
20402d02:	ffffd617          	auipc	a2,0xffffd
20402d06:	75260613          	addi	a2,a2,1874 # 20400454 <__sf_fake_stdout+0x34>
20402d0a:	400c                	lw	a1,0(s0)
20402d0c:	4308                	lw	a0,0(a4)
20402d0e:	0805f813          	andi	a6,a1,128
20402d12:	411c                	lw	a5,0(a0)
20402d14:	0511                	addi	a0,a0,4
20402d16:	02080d63          	beqz	a6,20402d50 <_printf_i+0x1c0>
20402d1a:	c308                	sw	a0,0(a4)
20402d1c:	0015f713          	andi	a4,a1,1
20402d20:	c701                	beqz	a4,20402d28 <_printf_i+0x198>
20402d22:	0205e593          	ori	a1,a1,32
20402d26:	c00c                	sw	a1,0(s0)
20402d28:	4841                	li	a6,16
20402d2a:	fbb1                	bnez	a5,20402c7e <_printf_i+0xee>
20402d2c:	4018                	lw	a4,0(s0)
20402d2e:	fdf77713          	andi	a4,a4,-33
20402d32:	c018                	sw	a4,0(s0)
20402d34:	b7a9                	j	20402c7e <_printf_i+0xee>
20402d36:	419c                	lw	a5,0(a1)
20402d38:	0207e793          	ori	a5,a5,32
20402d3c:	c19c                	sw	a5,0(a1)
20402d3e:	07800793          	li	a5,120
20402d42:	04f402a3          	sb	a5,69(s0)
20402d46:	ffffd617          	auipc	a2,0xffffd
20402d4a:	72260613          	addi	a2,a2,1826 # 20400468 <__sf_fake_stdout+0x48>
20402d4e:	bf75                	j	20402d0a <_printf_i+0x17a>
20402d50:	0405f813          	andi	a6,a1,64
20402d54:	c308                	sw	a0,0(a4)
20402d56:	fc0803e3          	beqz	a6,20402d1c <_printf_i+0x18c>
20402d5a:	07c2                	slli	a5,a5,0x10
20402d5c:	83c1                	srli	a5,a5,0x10
20402d5e:	bf7d                	j	20402d1c <_printf_i+0x18c>
20402d60:	4821                	li	a6,8
20402d62:	bf31                	j	20402c7e <_printf_i+0xee>
20402d64:	4190                	lw	a2,0(a1)
20402d66:	431c                	lw	a5,0(a4)
20402d68:	49cc                	lw	a1,20(a1)
20402d6a:	08067813          	andi	a6,a2,128
20402d6e:	00478513          	addi	a0,a5,4
20402d72:	00080663          	beqz	a6,20402d7e <_printf_i+0x1ee>
20402d76:	c308                	sw	a0,0(a4)
20402d78:	439c                	lw	a5,0(a5)
20402d7a:	c38c                	sw	a1,0(a5)
20402d7c:	a801                	j	20402d8c <_printf_i+0x1fc>
20402d7e:	c308                	sw	a0,0(a4)
20402d80:	04067613          	andi	a2,a2,64
20402d84:	439c                	lw	a5,0(a5)
20402d86:	da75                	beqz	a2,20402d7a <_printf_i+0x1ea>
20402d88:	00b79023          	sh	a1,0(a5)
20402d8c:	00042823          	sw	zero,16(s0)
20402d90:	8ab6                	mv	s5,a3
20402d92:	b791                	j	20402cd6 <_printf_i+0x146>
20402d94:	431c                	lw	a5,0(a4)
20402d96:	41d0                	lw	a2,4(a1)
20402d98:	4581                	li	a1,0
20402d9a:	00478693          	addi	a3,a5,4
20402d9e:	c314                	sw	a3,0(a4)
20402da0:	0007aa83          	lw	s5,0(a5)
20402da4:	8556                	mv	a0,s5
20402da6:	31d1                	jal	20402a6a <memchr>
20402da8:	c501                	beqz	a0,20402db0 <_printf_i+0x220>
20402daa:	41550533          	sub	a0,a0,s5
20402dae:	c048                	sw	a0,4(s0)
20402db0:	405c                	lw	a5,4(s0)
20402db2:	c81c                	sw	a5,16(s0)
20402db4:	040401a3          	sb	zero,67(s0)
20402db8:	bf39                	j	20402cd6 <_printf_i+0x146>
20402dba:	4814                	lw	a3,16(s0)
20402dbc:	8656                	mv	a2,s5
20402dbe:	85ca                	mv	a1,s2
20402dc0:	8526                	mv	a0,s1
20402dc2:	9982                	jalr	s3
20402dc4:	f34502e3          	beq	a0,s4,20402ce8 <_printf_i+0x158>
20402dc8:	401c                	lw	a5,0(s0)
20402dca:	8b89                	andi	a5,a5,2
20402dcc:	e78d                	bnez	a5,20402df6 <_printf_i+0x266>
20402dce:	47b2                	lw	a5,12(sp)
20402dd0:	4448                	lw	a0,12(s0)
20402dd2:	f0f55ce3          	bge	a0,a5,20402cea <_printf_i+0x15a>
20402dd6:	853e                	mv	a0,a5
20402dd8:	bf09                	j	20402cea <_printf_i+0x15a>
20402dda:	4685                	li	a3,1
20402ddc:	8656                	mv	a2,s5
20402dde:	85ca                	mv	a1,s2
20402de0:	8526                	mv	a0,s1
20402de2:	9982                	jalr	s3
20402de4:	f16502e3          	beq	a0,s6,20402ce8 <_printf_i+0x158>
20402de8:	0a05                	addi	s4,s4,1
20402dea:	445c                	lw	a5,12(s0)
20402dec:	4732                	lw	a4,12(sp)
20402dee:	8f99                	sub	a5,a5,a4
20402df0:	fefa45e3          	blt	s4,a5,20402dda <_printf_i+0x24a>
20402df4:	bfe9                	j	20402dce <_printf_i+0x23e>
20402df6:	4a01                	li	s4,0
20402df8:	01940a93          	addi	s5,s0,25
20402dfc:	5b7d                	li	s6,-1
20402dfe:	b7f5                	j	20402dea <_printf_i+0x25a>

20402e00 <_read_r>:
_read_r():
20402e00:	1141                	addi	sp,sp,-16
20402e02:	c422                	sw	s0,8(sp)
20402e04:	842a                	mv	s0,a0
20402e06:	852e                	mv	a0,a1
20402e08:	85b2                	mv	a1,a2
20402e0a:	8636                	mv	a2,a3
20402e0c:	5fbfe797          	auipc	a5,0x5fbfe
20402e10:	9c07a823          	sw	zero,-1584(a5) # 800007dc <errno>
20402e14:	c606                	sw	ra,12(sp)
20402e16:	207d                	jal	20402ec4 <_read>
20402e18:	57fd                	li	a5,-1
20402e1a:	00f51863          	bne	a0,a5,20402e2a <_read_r+0x2a>
20402e1e:	5fbfe797          	auipc	a5,0x5fbfe
20402e22:	9be7a783          	lw	a5,-1602(a5) # 800007dc <errno>
20402e26:	c391                	beqz	a5,20402e2a <_read_r+0x2a>
20402e28:	c01c                	sw	a5,0(s0)
20402e2a:	40b2                	lw	ra,12(sp)
20402e2c:	4422                	lw	s0,8(sp)
20402e2e:	0141                	addi	sp,sp,16
20402e30:	8082                	ret

20402e32 <_close>:
_close():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20402e32:	1101                	addi	sp,sp,-32
20402e34:	ce06                	sw	ra,28(sp)
20402e36:	cc22                	sw	s0,24(sp)
20402e38:	1000                	addi	s0,sp,32
20402e3a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20402e3e:	2a5d                	jal	20402ff4 <__errno>
20402e40:	872a                	mv	a4,a0
20402e42:	05800793          	li	a5,88
20402e46:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:5
    return -1;
20402e48:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:6
}
20402e4a:	853e                	mv	a0,a5
20402e4c:	40f2                	lw	ra,28(sp)
20402e4e:	4462                	lw	s0,24(sp)
20402e50:	6105                	addi	sp,sp,32
20402e52:	8082                	ret

20402e54 <_fstat>:
_fstat():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20402e54:	1101                	addi	sp,sp,-32
20402e56:	ce06                	sw	ra,28(sp)
20402e58:	cc22                	sw	s0,24(sp)
20402e5a:	1000                	addi	s0,sp,32
20402e5c:	fea42623          	sw	a0,-20(s0)
20402e60:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20402e64:	2a41                	jal	20402ff4 <__errno>
20402e66:	872a                	mv	a4,a0
20402e68:	fa800793          	li	a5,-88
20402e6c:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20402e6e:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:7
}
20402e70:	853e                	mv	a0,a5
20402e72:	40f2                	lw	ra,28(sp)
20402e74:	4462                	lw	s0,24(sp)
20402e76:	6105                	addi	sp,sp,32
20402e78:	8082                	ret

20402e7a <_isatty>:
_isatty():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20402e7a:	1101                	addi	sp,sp,-32
20402e7c:	ce22                	sw	s0,28(sp)
20402e7e:	1000                	addi	s0,sp,32
20402e80:	fea42623          	sw	a0,-20(s0)
20402e84:	fec42783          	lw	a5,-20(s0)
20402e88:	17fd                	addi	a5,a5,-1
20402e8a:	0017b793          	seqz	a5,a5
20402e8e:	0ff7f793          	zext.b	a5,a5
20402e92:	853e                	mv	a0,a5
20402e94:	4472                	lw	s0,28(sp)
20402e96:	6105                	addi	sp,sp,32
20402e98:	8082                	ret

20402e9a <_lseek>:
_lseek():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20402e9a:	1101                	addi	sp,sp,-32
20402e9c:	ce06                	sw	ra,28(sp)
20402e9e:	cc22                	sw	s0,24(sp)
20402ea0:	1000                	addi	s0,sp,32
20402ea2:	fea42623          	sw	a0,-20(s0)
20402ea6:	feb42423          	sw	a1,-24(s0)
20402eaa:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20402eae:	2299                	jal	20402ff4 <__errno>
20402eb0:	872a                	mv	a4,a0
20402eb2:	05800793          	li	a5,88
20402eb6:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20402eb8:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:7
}
20402eba:	853e                	mv	a0,a5
20402ebc:	40f2                	lw	ra,28(sp)
20402ebe:	4462                	lw	s0,24(sp)
20402ec0:	6105                	addi	sp,sp,32
20402ec2:	8082                	ret

20402ec4 <_read>:
_read():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20402ec4:	1101                	addi	sp,sp,-32
20402ec6:	ce06                	sw	ra,28(sp)
20402ec8:	cc22                	sw	s0,24(sp)
20402eca:	1000                	addi	s0,sp,32
20402ecc:	fea42623          	sw	a0,-20(s0)
20402ed0:	feb42423          	sw	a1,-24(s0)
20402ed4:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20402ed8:	2a31                	jal	20402ff4 <__errno>
20402eda:	872a                	mv	a4,a0
20402edc:	05800793          	li	a5,88
20402ee0:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:6
    return -1;
20402ee2:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:7
}
20402ee4:	853e                	mv	a0,a5
20402ee6:	40f2                	lw	ra,28(sp)
20402ee8:	4462                	lw	s0,24(sp)
20402eea:	6105                	addi	sp,sp,32
20402eec:	8082                	ret

20402eee <_sbrk>:
_sbrk():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20402eee:	7179                	addi	sp,sp,-48
20402ef0:	d606                	sw	ra,44(sp)
20402ef2:	d422                	sw	s0,40(sp)
20402ef4:	1800                	addi	s0,sp,48
20402ef6:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20402efa:	800007b7          	lui	a5,0x80000
20402efe:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe794>
20402f02:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20402f06:	800027b7          	lui	a5,0x80002
20402f0a:	81078713          	addi	a4,a5,-2032 # 80001810 <metal_segment_heap_target_end+0xfffff800>
20402f0e:	800027b7          	lui	a5,0x80002
20402f12:	01078793          	addi	a5,a5,16 # 80002010 <metal_segment_heap_target_end+0x0>
20402f16:	00f71463          	bne	a4,a5,20402f1e <_sbrk+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402f1a:	57fd                	li	a5,-1
20402f1c:	a899                	j	20402f72 <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20402f1e:	800007b7          	lui	a5,0x80000
20402f22:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe794>
20402f26:	fdc42783          	lw	a5,-36(s0)
20402f2a:	973e                	add	a4,a4,a5
20402f2c:	800027b7          	lui	a5,0x80002
20402f30:	01078793          	addi	a5,a5,16 # 80002010 <metal_segment_heap_target_end+0x0>
20402f34:	02f77663          	bgeu	a4,a5,20402f60 <_sbrk+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20402f38:	800007b7          	lui	a5,0x80000
20402f3c:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe794>
20402f40:	fdc42783          	lw	a5,-36(s0)
20402f44:	973e                	add	a4,a4,a5
20402f46:	800007b7          	lui	a5,0x80000
20402f4a:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe794>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20402f4e:	fdc42583          	lw	a1,-36(s0)
20402f52:	fec42503          	lw	a0,-20(s0)
20402f56:	938fd0ef          	jal	ra,2040008e <metal_mem_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20402f5a:	fec42783          	lw	a5,-20(s0)
20402f5e:	a811                	j	20402f72 <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20402f60:	800007b7          	lui	a5,0x80000
20402f64:	80002737          	lui	a4,0x80002
20402f68:	01070713          	addi	a4,a4,16 # 80002010 <metal_segment_heap_target_end+0x0>
20402f6c:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe794>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20402f70:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:43
}
20402f72:	853e                	mv	a0,a5
20402f74:	50b2                	lw	ra,44(sp)
20402f76:	5422                	lw	s0,40(sp)
20402f78:	6145                	addi	sp,sp,48
20402f7a:	8082                	ret

20402f7c <_write>:
_write():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20402f7c:	7179                	addi	sp,sp,-48
20402f7e:	d606                	sw	ra,44(sp)
20402f80:	d422                	sw	s0,40(sp)
20402f82:	1800                	addi	s0,sp,48
20402f84:	fca42e23          	sw	a0,-36(s0)
20402f88:	fcb42c23          	sw	a1,-40(s0)
20402f8c:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20402f90:	fdc42703          	lw	a4,-36(s0)
20402f94:	4785                	li	a5,1
20402f96:	00f70963          	beq	a4,a5,20402fa8 <_write+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20402f9a:	28a9                	jal	20402ff4 <__errno>
20402f9c:	872a                	mv	a4,a0
20402f9e:	05800793          	li	a5,88
20402fa2:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:10
        return -1;
20402fa4:	57fd                	li	a5,-1
20402fa6:	a82d                	j	20402fe0 <_write+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20402fa8:	fd842783          	lw	a5,-40(s0)
20402fac:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20402fb0:	fe042623          	sw	zero,-20(s0)
20402fb4:	a839                	j	20402fd2 <_write+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20402fb6:	fe842703          	lw	a4,-24(s0)
20402fba:	fec42783          	lw	a5,-20(s0)
20402fbe:	97ba                	add	a5,a5,a4
20402fc0:	0007c783          	lbu	a5,0(a5)
20402fc4:	853e                	mv	a0,a5
20402fc6:	26c1                	jal	20403386 <metal_tty_putc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20402fc8:	fec42783          	lw	a5,-20(s0)
20402fcc:	0785                	addi	a5,a5,1
20402fce:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20402fd2:	fec42703          	lw	a4,-20(s0)
20402fd6:	fd442783          	lw	a5,-44(s0)
20402fda:	fcf76ee3          	bltu	a4,a5,20402fb6 <_write+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:16
    return 0;
20402fde:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:17
}
20402fe0:	853e                	mv	a0,a5
20402fe2:	50b2                	lw	ra,44(sp)
20402fe4:	5422                	lw	s0,40(sp)
20402fe6:	6145                	addi	sp,sp,48
20402fe8:	8082                	ret

20402fea <atexit>:
atexit():
20402fea:	85aa                	mv	a1,a0
20402fec:	4681                	li	a3,0
20402fee:	4601                	li	a2,0
20402ff0:	4501                	li	a0,0
20402ff2:	a0e9                	j	204030bc <__register_exitproc>

20402ff4 <__errno>:
__errno():
20402ff4:	5fbfd517          	auipc	a0,0x5fbfd
20402ff8:	7ac52503          	lw	a0,1964(a0) # 800007a0 <_impure_ptr>
20402ffc:	8082                	ret

20402ffe <exit>:
exit():
20402ffe:	1141                	addi	sp,sp,-16
20403000:	c422                	sw	s0,8(sp)
20403002:	c606                	sw	ra,12(sp)
20403004:	00000797          	auipc	a5,0x0
20403008:	13478793          	addi	a5,a5,308 # 20403138 <__call_exitprocs>
2040300c:	842a                	mv	s0,a0
2040300e:	c399                	beqz	a5,20403014 <exit+0x16>
20403010:	4581                	li	a1,0
20403012:	221d                	jal	20403138 <__call_exitprocs>
20403014:	ffffe517          	auipc	a0,0xffffe
20403018:	00c52503          	lw	a0,12(a0) # 20401020 <_global_impure_ptr>
2040301c:	551c                	lw	a5,40(a0)
2040301e:	c391                	beqz	a5,20403022 <exit+0x24>
20403020:	9782                	jalr	a5
20403022:	8522                	mv	a0,s0
20403024:	283040ef          	jal	ra,20407aa6 <_exit>

20403028 <__libc_fini_array>:
__libc_fini_array():
20403028:	1141                	addi	sp,sp,-16
2040302a:	c422                	sw	s0,8(sp)
2040302c:	c226                	sw	s1,4(sp)
2040302e:	ffffd417          	auipc	s0,0xffffd
20403032:	2c240413          	addi	s0,s0,706 # 204002f0 <__fini_array_end>
20403036:	ffffd497          	auipc	s1,0xffffd
2040303a:	2ba48493          	addi	s1,s1,698 # 204002f0 <__fini_array_end>
2040303e:	8c05                	sub	s0,s0,s1
20403040:	c606                	sw	ra,12(sp)
20403042:	8409                	srai	s0,s0,0x2
20403044:	e411                	bnez	s0,20403050 <__libc_fini_array+0x28>
20403046:	40b2                	lw	ra,12(sp)
20403048:	4422                	lw	s0,8(sp)
2040304a:	4492                	lw	s1,4(sp)
2040304c:	0141                	addi	sp,sp,16
2040304e:	8082                	ret
20403050:	147d                	addi	s0,s0,-1
20403052:	00241793          	slli	a5,s0,0x2
20403056:	97a6                	add	a5,a5,s1
20403058:	439c                	lw	a5,0(a5)
2040305a:	9782                	jalr	a5
2040305c:	b7e5                	j	20403044 <__libc_fini_array+0x1c>

2040305e <__libc_init_array>:
__libc_init_array():
2040305e:	1141                	addi	sp,sp,-16
20403060:	c422                	sw	s0,8(sp)
20403062:	c226                	sw	s1,4(sp)
20403064:	ffffd417          	auipc	s0,0xffffd
20403068:	27c40413          	addi	s0,s0,636 # 204002e0 <_metal_tty_init_ptr>
2040306c:	ffffd497          	auipc	s1,0xffffd
20403070:	27448493          	addi	s1,s1,628 # 204002e0 <_metal_tty_init_ptr>
20403074:	8c81                	sub	s1,s1,s0
20403076:	c04a                	sw	s2,0(sp)
20403078:	c606                	sw	ra,12(sp)
2040307a:	8489                	srai	s1,s1,0x2
2040307c:	4901                	li	s2,0
2040307e:	02991563          	bne	s2,s1,204030a8 <__libc_init_array+0x4a>
20403082:	ffffd417          	auipc	s0,0xffffd
20403086:	25e40413          	addi	s0,s0,606 # 204002e0 <_metal_tty_init_ptr>
2040308a:	ffffd497          	auipc	s1,0xffffd
2040308e:	25648493          	addi	s1,s1,598 # 204002e0 <_metal_tty_init_ptr>
20403092:	8c81                	sub	s1,s1,s0
20403094:	8489                	srai	s1,s1,0x2
20403096:	4901                	li	s2,0
20403098:	00991d63          	bne	s2,s1,204030b2 <__libc_init_array+0x54>
2040309c:	40b2                	lw	ra,12(sp)
2040309e:	4422                	lw	s0,8(sp)
204030a0:	4492                	lw	s1,4(sp)
204030a2:	4902                	lw	s2,0(sp)
204030a4:	0141                	addi	sp,sp,16
204030a6:	8082                	ret
204030a8:	401c                	lw	a5,0(s0)
204030aa:	0905                	addi	s2,s2,1
204030ac:	0411                	addi	s0,s0,4
204030ae:	9782                	jalr	a5
204030b0:	b7f9                	j	2040307e <__libc_init_array+0x20>
204030b2:	401c                	lw	a5,0(s0)
204030b4:	0905                	addi	s2,s2,1
204030b6:	0411                	addi	s0,s0,4
204030b8:	9782                	jalr	a5
204030ba:	bff9                	j	20403098 <__libc_init_array+0x3a>

204030bc <__register_exitproc>:
__register_exitproc():
204030bc:	88aa                	mv	a7,a0
204030be:	5fbfd517          	auipc	a0,0x5fbfd
204030c2:	72250513          	addi	a0,a0,1826 # 800007e0 <_global_atexit>
204030c6:	411c                	lw	a5,0(a0)
204030c8:	ef91                	bnez	a5,204030e4 <__register_exitproc+0x28>
204030ca:	5fbfd717          	auipc	a4,0x5fbfd
204030ce:	72270713          	addi	a4,a4,1826 # 800007ec <_global_atexit0>
204030d2:	c118                	sw	a4,0(a0)
204030d4:	00000513          	li	a0,0
204030d8:	87ba                	mv	a5,a4
204030da:	c509                	beqz	a0,204030e4 <__register_exitproc+0x28>
204030dc:	411c                	lw	a5,0(a0)
204030de:	08f72423          	sw	a5,136(a4)
204030e2:	87ba                	mv	a5,a4
204030e4:	43d8                	lw	a4,4(a5)
204030e6:	487d                	li	a6,31
204030e8:	557d                	li	a0,-1
204030ea:	04e84663          	blt	a6,a4,20403136 <__register_exitproc+0x7a>
204030ee:	02088d63          	beqz	a7,20403128 <__register_exitproc+0x6c>
204030f2:	0887a803          	lw	a6,136(a5)
204030f6:	04080063          	beqz	a6,20403136 <__register_exitproc+0x7a>
204030fa:	00271513          	slli	a0,a4,0x2
204030fe:	9542                	add	a0,a0,a6
20403100:	c110                	sw	a2,0(a0)
20403102:	10082303          	lw	t1,256(a6)
20403106:	4605                	li	a2,1
20403108:	00e61633          	sll	a2,a2,a4
2040310c:	00c36333          	or	t1,t1,a2
20403110:	10682023          	sw	t1,256(a6)
20403114:	08d52023          	sw	a3,128(a0)
20403118:	4689                	li	a3,2
2040311a:	00d89763          	bne	a7,a3,20403128 <__register_exitproc+0x6c>
2040311e:	10482683          	lw	a3,260(a6)
20403122:	8e55                	or	a2,a2,a3
20403124:	10c82223          	sw	a2,260(a6)
20403128:	00170693          	addi	a3,a4,1
2040312c:	070a                	slli	a4,a4,0x2
2040312e:	c3d4                	sw	a3,4(a5)
20403130:	97ba                	add	a5,a5,a4
20403132:	c78c                	sw	a1,8(a5)
20403134:	4501                	li	a0,0
20403136:	8082                	ret

20403138 <__call_exitprocs>:
__call_exitprocs():
20403138:	7179                	addi	sp,sp,-48
2040313a:	ca56                	sw	s5,20(sp)
2040313c:	c85a                	sw	s6,16(sp)
2040313e:	c65e                	sw	s7,12(sp)
20403140:	c462                	sw	s8,8(sp)
20403142:	d606                	sw	ra,44(sp)
20403144:	d422                	sw	s0,40(sp)
20403146:	d226                	sw	s1,36(sp)
20403148:	d04a                	sw	s2,32(sp)
2040314a:	ce4e                	sw	s3,28(sp)
2040314c:	cc52                	sw	s4,24(sp)
2040314e:	c266                	sw	s9,4(sp)
20403150:	8b2a                	mv	s6,a0
20403152:	8aae                	mv	s5,a1
20403154:	5fbfdb97          	auipc	s7,0x5fbfd
20403158:	68cb8b93          	addi	s7,s7,1676 # 800007e0 <_global_atexit>
2040315c:	4c05                	li	s8,1
2040315e:	000ba483          	lw	s1,0(s7)
20403162:	cc81                	beqz	s1,2040317a <__call_exitprocs+0x42>
20403164:	40c0                	lw	s0,4(s1)
20403166:	0884a983          	lw	s3,136(s1)
2040316a:	fff40913          	addi	s2,s0,-1
2040316e:	040a                	slli	s0,s0,0x2
20403170:	00898a33          	add	s4,s3,s0
20403174:	9426                	add	s0,s0,s1
20403176:	00095f63          	bgez	s2,20403194 <__call_exitprocs+0x5c>
2040317a:	50b2                	lw	ra,44(sp)
2040317c:	5422                	lw	s0,40(sp)
2040317e:	5492                	lw	s1,36(sp)
20403180:	5902                	lw	s2,32(sp)
20403182:	49f2                	lw	s3,28(sp)
20403184:	4a62                	lw	s4,24(sp)
20403186:	4ad2                	lw	s5,20(sp)
20403188:	4b42                	lw	s6,16(sp)
2040318a:	4bb2                	lw	s7,12(sp)
2040318c:	4c22                	lw	s8,8(sp)
2040318e:	4c92                	lw	s9,4(sp)
20403190:	6145                	addi	sp,sp,48
20403192:	8082                	ret
20403194:	000a8c63          	beqz	s5,204031ac <__call_exitprocs+0x74>
20403198:	00099663          	bnez	s3,204031a4 <__call_exitprocs+0x6c>
2040319c:	197d                	addi	s2,s2,-1
2040319e:	1a71                	addi	s4,s4,-4
204031a0:	1471                	addi	s0,s0,-4
204031a2:	bfd1                	j	20403176 <__call_exitprocs+0x3e>
204031a4:	07ca2783          	lw	a5,124(s4)
204031a8:	ff579ae3          	bne	a5,s5,2040319c <__call_exitprocs+0x64>
204031ac:	40d8                	lw	a4,4(s1)
204031ae:	405c                	lw	a5,4(s0)
204031b0:	177d                	addi	a4,a4,-1
204031b2:	03271863          	bne	a4,s2,204031e2 <__call_exitprocs+0xaa>
204031b6:	0124a223          	sw	s2,4(s1)
204031ba:	d3ed                	beqz	a5,2040319c <__call_exitprocs+0x64>
204031bc:	0044ac83          	lw	s9,4(s1)
204031c0:	00098863          	beqz	s3,204031d0 <__call_exitprocs+0x98>
204031c4:	1009a683          	lw	a3,256(s3)
204031c8:	012c1733          	sll	a4,s8,s2
204031cc:	8ef9                	and	a3,a3,a4
204031ce:	ee89                	bnez	a3,204031e8 <__call_exitprocs+0xb0>
204031d0:	9782                	jalr	a5
204031d2:	40d8                	lw	a4,4(s1)
204031d4:	000ba783          	lw	a5,0(s7)
204031d8:	f99713e3          	bne	a4,s9,2040315e <__call_exitprocs+0x26>
204031dc:	fcf480e3          	beq	s1,a5,2040319c <__call_exitprocs+0x64>
204031e0:	bfbd                	j	2040315e <__call_exitprocs+0x26>
204031e2:	00042223          	sw	zero,4(s0)
204031e6:	bfd1                	j	204031ba <__call_exitprocs+0x82>
204031e8:	1049a683          	lw	a3,260(s3)
204031ec:	ffca2583          	lw	a1,-4(s4)
204031f0:	8f75                	and	a4,a4,a3
204031f2:	e701                	bnez	a4,204031fa <__call_exitprocs+0xc2>
204031f4:	855a                	mv	a0,s6
204031f6:	9782                	jalr	a5
204031f8:	bfe9                	j	204031d2 <__call_exitprocs+0x9a>
204031fa:	852e                	mv	a0,a1
204031fc:	9782                	jalr	a5
204031fe:	bfd1                	j	204031d2 <__call_exitprocs+0x9a>

20403200 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20403200:	1101                	addi	sp,sp,-32
20403202:	ce06                	sw	ra,28(sp)
20403204:	cc22                	sw	s0,24(sp)
20403206:	1000                	addi	s0,sp,32
20403208:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
2040320c:	fec42783          	lw	a5,-20(s0)
20403210:	439c                	lw	a5,0(a5)
20403212:	57dc                	lw	a5,44(a5)
20403214:	fec42503          	lw	a0,-20(s0)
20403218:	9782                	jalr	a5
2040321a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:226
}
2040321c:	853e                	mv	a0,a5
2040321e:	40f2                	lw	ra,28(sp)
20403220:	4462                	lw	s0,24(sp)
20403222:	6105                	addi	sp,sp,32
20403224:	8082                	ret

20403226 <metal_cpu_get>:
metal_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20403226:	1101                	addi	sp,sp,-32
20403228:	ce22                	sw	s0,28(sp)
2040322a:	1000                	addi	s0,sp,32
2040322c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20403230:	fec42783          	lw	a5,-20(s0)
20403234:	eb99                	bnez	a5,2040324a <metal_cpu_get+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20403236:	800007b7          	lui	a5,0x80000
2040323a:	fec42703          	lw	a4,-20(s0)
2040323e:	070a                	slli	a4,a4,0x2
20403240:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20403244:	97ba                	add	a5,a5,a4
20403246:	439c                	lw	a5,0(a5)
20403248:	a011                	j	2040324c <metal_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:11
    }
    return NULL;
2040324a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:12
}
2040324c:	853e                	mv	a0,a5
2040324e:	4472                	lw	s0,28(sp)
20403250:	6105                	addi	sp,sp,32
20403252:	8082                	ret

20403254 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20403254:	1101                	addi	sp,sp,-32
20403256:	ce22                	sw	s0,28(sp)
20403258:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
2040325a:	f14027f3          	csrr	a5,mhartid
2040325e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:18
    return mhartid;
20403262:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:20
#endif
}
20403266:	853e                	mv	a0,a5
20403268:	4472                	lw	s0,28(sp)
2040326a:	6105                	addi	sp,sp,32
2040326c:	8082                	ret

2040326e <metal_init>:
metal_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
2040326e:	1101                	addi	sp,sp,-32
20403270:	ce06                	sw	ra,28(sp)
20403272:	cc22                	sw	s0,24(sp)
20403274:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20403276:	800007b7          	lui	a5,0x80000
2040327a:	7e47a783          	lw	a5,2020(a5) # 800007e4 <metal_segment_heap_target_end+0xffffe7d4>
2040327e:	efa9                	bnez	a5,204032d8 <metal_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20403280:	800007b7          	lui	a5,0x80000
20403284:	4705                	li	a4,1
20403286:	7ee7a223          	sw	a4,2020(a5) # 800007e4 <metal_segment_heap_target_end+0xffffe7d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
2040328a:	204007b7          	lui	a5,0x20400
2040328e:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20403292:	204007b7          	lui	a5,0x20400
20403296:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
2040329a:	04e7f163          	bgeu	a5,a4,204032dc <metal_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
2040329e:	204007b7          	lui	a5,0x20400
204032a2:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
204032a6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
204032aa:	a831                	j	204032c6 <metal_init+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
204032ac:	fec42783          	lw	a5,-20(s0)
204032b0:	439c                	lw	a5,0(a5)
204032b2:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:33

        func();
204032b6:	fe842783          	lw	a5,-24(s0)
204032ba:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:35

        funcptr += 1;
204032bc:	fec42783          	lw	a5,-20(s0)
204032c0:	0791                	addi	a5,a5,4
204032c2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
204032c6:	fec42703          	lw	a4,-20(s0)
204032ca:	204007b7          	lui	a5,0x20400
204032ce:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
204032d2:	fcf71de3          	bne	a4,a5,204032ac <metal_init+0x3e>
204032d6:	a021                	j	204032de <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:21
        return;
204032d8:	0001                	nop
204032da:	a011                	j	204032de <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:26
        return;
204032dc:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:37
    }
}
204032de:	40f2                	lw	ra,28(sp)
204032e0:	4462                	lw	s0,24(sp)
204032e2:	6105                	addi	sp,sp,32
204032e4:	8082                	ret

204032e6 <metal_fini>:
metal_fini():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:39

void metal_fini(void) {
204032e6:	1101                	addi	sp,sp,-32
204032e8:	ce06                	sw	ra,28(sp)
204032ea:	cc22                	sw	s0,24(sp)
204032ec:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
204032ee:	800007b7          	lui	a5,0x80000
204032f2:	7e87a783          	lw	a5,2024(a5) # 800007e8 <metal_segment_heap_target_end+0xffffe7d8>
204032f6:	efa9                	bnez	a5,20403350 <metal_fini+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
204032f8:	800007b7          	lui	a5,0x80000
204032fc:	4705                	li	a4,1
204032fe:	7ee7a423          	sw	a4,2024(a5) # 800007e8 <metal_segment_heap_target_end+0xffffe7d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20403302:	204007b7          	lui	a5,0x20400
20403306:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
2040330a:	204007b7          	lui	a5,0x20400
2040330e:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20403312:	04e7f163          	bgeu	a5,a4,20403354 <metal_fini+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20403316:	204007b7          	lui	a5,0x20400
2040331a:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
2040331e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20403322:	a831                	j	2040333e <metal_fini+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20403324:	fec42783          	lw	a5,-20(s0)
20403328:	439c                	lw	a5,0(a5)
2040332a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:55

        func();
2040332e:	fe842783          	lw	a5,-24(s0)
20403332:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:57

        funcptr += 1;
20403334:	fec42783          	lw	a5,-20(s0)
20403338:	0791                	addi	a5,a5,4
2040333a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2040333e:	fec42703          	lw	a4,-20(s0)
20403342:	204007b7          	lui	a5,0x20400
20403346:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
2040334a:	fcf71de3          	bne	a4,a5,20403324 <metal_fini+0x3e>
2040334e:	a021                	j	20403356 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:43
        return;
20403350:	0001                	nop
20403352:	a011                	j	20403356 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:48
        return;
20403354:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:59
    }
}
20403356:	40f2                	lw	ra,28(sp)
20403358:	4462                	lw	s0,24(sp)
2040335a:	6105                	addi	sp,sp,32
2040335c:	8082                	ret

2040335e <metal_init_run>:
metal_init_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2040335e:	1141                	addi	sp,sp,-16
20403360:	c606                	sw	ra,12(sp)
20403362:	c422                	sw	s0,8(sp)
20403364:	0800                	addi	s0,sp,16
20403366:	3721                	jal	2040326e <metal_init>
20403368:	0001                	nop
2040336a:	40b2                	lw	ra,12(sp)
2040336c:	4422                	lw	s0,8(sp)
2040336e:	0141                	addi	sp,sp,16
20403370:	8082                	ret

20403372 <metal_fini_run>:
metal_fini_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
20403372:	1141                	addi	sp,sp,-16
20403374:	c606                	sw	ra,12(sp)
20403376:	c422                	sw	s0,8(sp)
20403378:	0800                	addi	s0,sp,16
2040337a:	37b5                	jal	204032e6 <metal_fini>
2040337c:	0001                	nop
2040337e:	40b2                	lw	ra,12(sp)
20403380:	4422                	lw	s0,8(sp)
20403382:	0141                	addi	sp,sp,16
20403384:	8082                	ret

20403386 <metal_tty_putc>:
metal_tty_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20403386:	1101                	addi	sp,sp,-32
20403388:	ce06                	sw	ra,28(sp)
2040338a:	cc22                	sw	s0,24(sp)
2040338c:	1000                	addi	s0,sp,32
2040338e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
20403392:	fec42583          	lw	a1,-20(s0)
20403396:	800007b7          	lui	a5,0x80000
2040339a:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
2040339e:	282d                	jal	204033d8 <metal_uart_putc>
204033a0:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:14
}
204033a2:	853e                	mv	a0,a5
204033a4:	40f2                	lw	ra,28(sp)
204033a6:	4462                	lw	s0,24(sp)
204033a8:	6105                	addi	sp,sp,32
204033aa:	8082                	ret

204033ac <metal_uart_init>:
metal_uart_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
204033ac:	1101                	addi	sp,sp,-32
204033ae:	ce06                	sw	ra,28(sp)
204033b0:	cc22                	sw	s0,24(sp)
204033b2:	1000                	addi	s0,sp,32
204033b4:	fea42623          	sw	a0,-20(s0)
204033b8:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
204033bc:	fec42783          	lw	a5,-20(s0)
204033c0:	439c                	lw	a5,0(a5)
204033c2:	439c                	lw	a5,0(a5)
204033c4:	fe842583          	lw	a1,-24(s0)
204033c8:	fec42503          	lw	a0,-20(s0)
204033cc:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:61
}
204033ce:	0001                	nop
204033d0:	40f2                	lw	ra,28(sp)
204033d2:	4462                	lw	s0,24(sp)
204033d4:	6105                	addi	sp,sp,32
204033d6:	8082                	ret

204033d8 <metal_uart_putc>:
metal_uart_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
204033d8:	1101                	addi	sp,sp,-32
204033da:	ce06                	sw	ra,28(sp)
204033dc:	cc22                	sw	s0,24(sp)
204033de:	1000                	addi	s0,sp,32
204033e0:	fea42623          	sw	a0,-20(s0)
204033e4:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
204033e8:	fec42783          	lw	a5,-20(s0)
204033ec:	439c                	lw	a5,0(a5)
204033ee:	43dc                	lw	a5,4(a5)
204033f0:	fe842583          	lw	a1,-24(s0)
204033f4:	fec42503          	lw	a0,-20(s0)
204033f8:	9782                	jalr	a5
204033fa:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:71
}
204033fc:	853e                	mv	a0,a5
204033fe:	40f2                	lw	ra,28(sp)
20403400:	4462                	lw	s0,24(sp)
20403402:	6105                	addi	sp,sp,32
20403404:	8082                	ret

20403406 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20403406:	1101                	addi	sp,sp,-32
20403408:	ce06                	sw	ra,28(sp)
2040340a:	cc22                	sw	s0,24(sp)
2040340c:	1000                	addi	s0,sp,32
2040340e:	fea42623          	sw	a0,-20(s0)
20403412:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20403416:	fec42783          	lw	a5,-20(s0)
2040341a:	439c                	lw	a5,0(a5)
2040341c:	4bdc                	lw	a5,20(a5)
2040341e:	fe842583          	lw	a1,-24(s0)
20403422:	fec42503          	lw	a0,-20(s0)
20403426:	9782                	jalr	a5
20403428:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:113
}
2040342a:	853e                	mv	a0,a5
2040342c:	40f2                	lw	ra,28(sp)
2040342e:	4462                	lw	s0,24(sp)
20403430:	6105                	addi	sp,sp,32
20403432:	8082                	ret

20403434 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20403434:	1101                	addi	sp,sp,-32
20403436:	ce22                	sw	s0,28(sp)
20403438:	1000                	addi	s0,sp,32
2040343a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2040343e:	fec42703          	lw	a4,-20(s0)
20403442:	800007b7          	lui	a5,0x80000
20403446:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe79c>
2040344a:	00f71563          	bne	a4,a5,20403454 <__metal_driver_sifive_clint0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
2040344e:	020007b7          	lui	a5,0x2000
20403452:	a011                	j	20403456 <__metal_driver_sifive_clint0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:207
	}
	else {
		return 0;
20403454:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:209
	}
}
20403456:	853e                	mv	a0,a5
20403458:	4472                	lw	s0,28(sp)
2040345a:	6105                	addi	sp,sp,32
2040345c:	8082                	ret

2040345e <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
2040345e:	1101                	addi	sp,sp,-32
20403460:	ce22                	sw	s0,28(sp)
20403462:	1000                	addi	s0,sp,32
20403464:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20403468:	fec42703          	lw	a4,-20(s0)
2040346c:	800007b7          	lui	a5,0x80000
20403470:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe79c>
20403474:	00f71463          	bne	a4,a5,2040347c <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
20403478:	4789                	li	a5,2
2040347a:	a011                	j	2040347e <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:227
	}
	else {
		return 0;
2040347c:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:229
	}
}
2040347e:	853e                	mv	a0,a5
20403480:	4472                	lw	s0,28(sp)
20403482:	6105                	addi	sp,sp,32
20403484:	8082                	ret

20403486 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20403486:	1101                	addi	sp,sp,-32
20403488:	ce22                	sw	s0,28(sp)
2040348a:	1000                	addi	s0,sp,32
2040348c:	fea42623          	sw	a0,-20(s0)
20403490:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:233
	if (idx == 0) {
20403494:	fe842783          	lw	a5,-24(s0)
20403498:	e791                	bnez	a5,204034a4 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2040349a:	800007b7          	lui	a5,0x80000
2040349e:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe078>
204034a2:	a821                	j	204034ba <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:236
	}
	else if (idx == 1) {
204034a4:	fe842703          	lw	a4,-24(s0)
204034a8:	4785                	li	a5,1
204034aa:	00f71763          	bne	a4,a5,204034b8 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204034ae:	800007b7          	lui	a5,0x80000
204034b2:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe078>
204034b6:	a011                	j	204034ba <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:240
	}
	else {
		return NULL;
204034b8:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:242
	}
}
204034ba:	853e                	mv	a0,a5
204034bc:	4472                	lw	s0,28(sp)
204034be:	6105                	addi	sp,sp,32
204034c0:	8082                	ret

204034c2 <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204034c2:	1101                	addi	sp,sp,-32
204034c4:	ce22                	sw	s0,28(sp)
204034c6:	1000                	addi	s0,sp,32
204034c8:	fea42623          	sw	a0,-20(s0)
204034cc:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:246
	if (idx == 0) {
204034d0:	fe842783          	lw	a5,-24(s0)
204034d4:	e399                	bnez	a5,204034da <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:247
		return 3;
204034d6:	478d                	li	a5,3
204034d8:	a809                	j	204034ea <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:249
	}
	else if (idx == 1) {
204034da:	fe842703          	lw	a4,-24(s0)
204034de:	4785                	li	a5,1
204034e0:	00f71463          	bne	a4,a5,204034e8 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:250
		return 7;
204034e4:	479d                	li	a5,7
204034e6:	a011                	j	204034ea <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:253
	}
	else {
		return 0;
204034e8:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:255
	}
}
204034ea:	853e                	mv	a0,a5
204034ec:	4472                	lw	s0,28(sp)
204034ee:	6105                	addi	sp,sp,32
204034f0:	8082                	ret

204034f2 <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
204034f2:	715d                	addi	sp,sp,-80
204034f4:	c686                	sw	ra,76(sp)
204034f6:	c4a2                	sw	s0,72(sp)
204034f8:	c2ca                	sw	s2,68(sp)
204034fa:	c0ce                	sw	s3,64(sp)
204034fc:	de52                	sw	s4,60(sp)
204034fe:	dc56                	sw	s5,56(sp)
20403500:	da5a                	sw	s6,52(sp)
20403502:	d85e                	sw	s7,48(sp)
20403504:	d662                	sw	s8,44(sp)
20403506:	d466                	sw	s9,40(sp)
20403508:	0880                	addi	s0,sp,80
2040350a:	faa42e23          	sw	a0,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2040350e:	fbc42783          	lw	a5,-68(s0)
20403512:	853e                	mv	a0,a5
20403514:	3705                	jal	20403434 <__metal_driver_sifive_clint0_control_base>
20403516:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
2040351a:	fcc42703          	lw	a4,-52(s0)
2040351e:	67b1                	lui	a5,0xc
20403520:	17f1                	addi	a5,a5,-4
20403522:	97ba                	add	a5,a5,a4
20403524:	439c                	lw	a5,0(a5)
20403526:	fcf42423          	sw	a5,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
2040352a:	fcc42703          	lw	a4,-52(s0)
2040352e:	67b1                	lui	a5,0xc
20403530:	17e1                	addi	a5,a5,-8
20403532:	97ba                	add	a5,a5,a4
20403534:	439c                	lw	a5,0(a5)
20403536:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
2040353a:	fcc42703          	lw	a4,-52(s0)
2040353e:	67b1                	lui	a5,0xc
20403540:	17f1                	addi	a5,a5,-4
20403542:	97ba                	add	a5,a5,a4
20403544:	439c                	lw	a5,0(a5)
20403546:	fc842703          	lw	a4,-56(s0)
2040354a:	fcf718e3          	bne	a4,a5,2040351a <__metal_clint0_mtime_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2040354e:	fc842783          	lw	a5,-56(s0)
20403552:	8c3e                	mv	s8,a5
20403554:	4c81                	li	s9,0
20403556:	000c1993          	slli	s3,s8,0x0
2040355a:	4901                	li	s2,0
2040355c:	fc442783          	lw	a5,-60(s0)
20403560:	8a3e                	mv	s4,a5
20403562:	4a81                	li	s5,0
20403564:	01496b33          	or	s6,s2,s4
20403568:	0159ebb3          	or	s7,s3,s5
2040356c:	875a                	mv	a4,s6
2040356e:	87de                	mv	a5,s7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:30
}
20403570:	853a                	mv	a0,a4
20403572:	85be                	mv	a1,a5
20403574:	40b6                	lw	ra,76(sp)
20403576:	4426                	lw	s0,72(sp)
20403578:	4916                	lw	s2,68(sp)
2040357a:	4986                	lw	s3,64(sp)
2040357c:	5a72                	lw	s4,60(sp)
2040357e:	5ae2                	lw	s5,56(sp)
20403580:	5b52                	lw	s6,52(sp)
20403582:	5bc2                	lw	s7,48(sp)
20403584:	5c32                	lw	s8,44(sp)
20403586:	5ca2                	lw	s9,40(sp)
20403588:	6161                	addi	sp,sp,80
2040358a:	8082                	ret

2040358c <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
2040358c:	7179                	addi	sp,sp,-48
2040358e:	d606                	sw	ra,44(sp)
20403590:	d422                	sw	s0,40(sp)
20403592:	d24a                	sw	s2,36(sp)
20403594:	d04e                	sw	s3,32(sp)
20403596:	1800                	addi	s0,sp,48
20403598:	fca42e23          	sw	a0,-36(s0)
2040359c:	fcb42c23          	sw	a1,-40(s0)
204035a0:	fcc42823          	sw	a2,-48(s0)
204035a4:	fcd42a23          	sw	a3,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
204035a8:	fdc42783          	lw	a5,-36(s0)
204035ac:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204035b0:	fec42783          	lw	a5,-20(s0)
204035b4:	853e                	mv	a0,a5
204035b6:	3dbd                	jal	20403434 <__metal_driver_sifive_clint0_control_base>
204035b8:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204035bc:	fd842783          	lw	a5,-40(s0)
204035c0:	078e                	slli	a5,a5,0x3
204035c2:	873e                	mv	a4,a5
204035c4:	fe842783          	lw	a5,-24(s0)
204035c8:	973e                	add	a4,a4,a5
204035ca:	6791                	lui	a5,0x4
204035cc:	0791                	addi	a5,a5,4
204035ce:	97ba                	add	a5,a5,a4
204035d0:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
204035d2:	57fd                	li	a5,-1
204035d4:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204035d6:	fd842783          	lw	a5,-40(s0)
204035da:	078e                	slli	a5,a5,0x3
204035dc:	873e                	mv	a4,a5
204035de:	fe842783          	lw	a5,-24(s0)
204035e2:	973e                	add	a4,a4,a5
204035e4:	6791                	lui	a5,0x4
204035e6:	97ba                	add	a5,a5,a4
204035e8:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
204035ea:	fd042783          	lw	a5,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
204035ee:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
204035f0:	fd442783          	lw	a5,-44(s0)
204035f4:	0007d913          	srli	s2,a5,0x0
204035f8:	4981                	li	s3,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204035fa:	fd842783          	lw	a5,-40(s0)
204035fe:	078e                	slli	a5,a5,0x3
20403600:	873e                	mv	a4,a5
20403602:	fe842783          	lw	a5,-24(s0)
20403606:	973e                	add	a4,a4,a5
20403608:	6791                	lui	a5,0x4
2040360a:	0791                	addi	a5,a5,4
2040360c:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2040360e:	874a                	mv	a4,s2
20403610:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20403612:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:55
}
20403614:	853e                	mv	a0,a5
20403616:	50b2                	lw	ra,44(sp)
20403618:	5422                	lw	s0,40(sp)
2040361a:	5912                	lw	s2,36(sp)
2040361c:	5982                	lw	s3,32(sp)
2040361e:	6145                	addi	sp,sp,48
20403620:	8082                	ret

20403622 <_get_cpu_intc>:
_get_cpu_intc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20403622:	1101                	addi	sp,sp,-32
20403624:	ce06                	sw	ra,28(sp)
20403626:	cc22                	sw	s0,24(sp)
20403628:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
2040362a:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2040362e:	f14027f3          	csrr	a5,mhartid
20403632:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20403636:	fec42783          	lw	a5,-20(s0)
2040363a:	853e                	mv	a0,a5
2040363c:	bebff0ef          	jal	ra,20403226 <metal_cpu_get>
20403640:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20403644:	fe842503          	lw	a0,-24(s0)
20403648:	bb9ff0ef          	jal	ra,20403200 <metal_cpu_interrupt_controller>
2040364c:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:65
}
2040364e:	853e                	mv	a0,a5
20403650:	40f2                	lw	ra,28(sp)
20403652:	4462                	lw	s0,24(sp)
20403654:	6105                	addi	sp,sp,32
20403656:	8082                	ret

20403658 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20403658:	7139                	addi	sp,sp,-64
2040365a:	de06                	sw	ra,60(sp)
2040365c:	dc22                	sw	s0,56(sp)
2040365e:	0080                	addi	s0,sp,64
20403660:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403664:	fcc42503          	lw	a0,-52(s0)
20403668:	3bdd                	jal	2040345e <__metal_driver_sifive_clint0_num_interrupts>
2040366a:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
2040366e:	fcc42783          	lw	a5,-52(s0)
20403672:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20403676:	fe442783          	lw	a5,-28(s0)
2040367a:	43dc                	lw	a5,4(a5)
2040367c:	efa9                	bnez	a5,204036d6 <__metal_driver_riscv_clint0_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
2040367e:	fe042623          	sw	zero,-20(s0)
20403682:	a081                	j	204036c2 <__metal_driver_riscv_clint0_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403684:	fec42583          	lw	a1,-20(s0)
20403688:	fcc42503          	lw	a0,-52(s0)
2040368c:	3bed                	jal	20403486 <__metal_driver_sifive_clint0_interrupt_parents>
2040368e:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403692:	fec42583          	lw	a1,-20(s0)
20403696:	fcc42503          	lw	a0,-52(s0)
2040369a:	3525                	jal	204034c2 <__metal_driver_sifive_clint0_interrupt_lines>
2040369c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204036a0:	fe042783          	lw	a5,-32(s0)
204036a4:	439c                	lw	a5,0(a5)
204036a6:	4fdc                	lw	a5,28(a5)
204036a8:	fcc42683          	lw	a3,-52(s0)
204036ac:	4601                	li	a2,0
204036ae:	fdc42583          	lw	a1,-36(s0)
204036b2:	fe042503          	lw	a0,-32(s0)
204036b6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204036b8:	fec42783          	lw	a5,-20(s0)
204036bc:	0785                	addi	a5,a5,1
204036be:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
204036c2:	fec42703          	lw	a4,-20(s0)
204036c6:	fe842783          	lw	a5,-24(s0)
204036ca:	faf74de3          	blt	a4,a5,20403684 <__metal_driver_riscv_clint0_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
204036ce:	fe442783          	lw	a5,-28(s0)
204036d2:	4705                	li	a4,1
204036d4:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
204036d6:	0001                	nop
204036d8:	50f2                	lw	ra,60(sp)
204036da:	5462                	lw	s0,56(sp)
204036dc:	6121                	addi	sp,sp,64
204036de:	8082                	ret

204036e0 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
204036e0:	7139                	addi	sp,sp,-64
204036e2:	de06                	sw	ra,60(sp)
204036e4:	dc22                	sw	s0,56(sp)
204036e6:	0080                	addi	s0,sp,64
204036e8:	fca42623          	sw	a0,-52(s0)
204036ec:	fcb42423          	sw	a1,-56(s0)
204036f0:	fcc42223          	sw	a2,-60(s0)
204036f4:	fcd42023          	sw	a3,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
204036f8:	57fd                	li	a5,-1
204036fa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
204036fe:	45c010ef          	jal	ra,20404b5a <__metal_controller_interrupt_vector_mode>
20403702:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20403706:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040370a:	3f21                	jal	20403622 <_get_cpu_intc>
2040370c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403710:	fcc42503          	lw	a0,-52(s0)
20403714:	33a9                	jal	2040345e <__metal_driver_sifive_clint0_num_interrupts>
20403716:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
2040371a:	fe042703          	lw	a4,-32(s0)
2040371e:	4785                	li	a5,1
20403720:	00f70863          	beq	a4,a5,20403730 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20403724:	fe042783          	lw	a5,-32(s0)
20403728:	c781                	beqz	a5,20403730 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
2040372a:	fec42783          	lw	a5,-20(s0)
2040372e:	a049                	j	204037b0 <__metal_driver_riscv_clint0_register+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20403730:	fe042223          	sw	zero,-28(s0)
20403734:	a091                	j	20403778 <__metal_driver_riscv_clint0_register+0x98>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403736:	fe442583          	lw	a1,-28(s0)
2040373a:	fcc42503          	lw	a0,-52(s0)
2040373e:	3351                	jal	204034c2 <__metal_driver_sifive_clint0_interrupt_lines>
20403740:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403744:	fe442583          	lw	a1,-28(s0)
20403748:	fcc42503          	lw	a0,-52(s0)
2040374c:	3b2d                	jal	20403486 <__metal_driver_sifive_clint0_interrupt_parents>
2040374e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20403752:	fdc42703          	lw	a4,-36(s0)
20403756:	fe842783          	lw	a5,-24(s0)
2040375a:	00f71863          	bne	a4,a5,2040376a <__metal_driver_riscv_clint0_register+0x8a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
2040375e:	fc842703          	lw	a4,-56(s0)
20403762:	fd442783          	lw	a5,-44(s0)
20403766:	02f70063          	beq	a4,a5,20403786 <__metal_driver_riscv_clint0_register+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
2040376a:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
2040376e:	fe442783          	lw	a5,-28(s0)
20403772:	0785                	addi	a5,a5,1
20403774:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20403778:	fe442703          	lw	a4,-28(s0)
2040377c:	fd842783          	lw	a5,-40(s0)
20403780:	faf74be3          	blt	a4,a5,20403736 <__metal_driver_riscv_clint0_register+0x56>
20403784:	a011                	j	20403788 <__metal_driver_riscv_clint0_register+0xa8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20403786:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20403788:	fe842783          	lw	a5,-24(s0)
2040378c:	c385                	beqz	a5,204037ac <__metal_driver_riscv_clint0_register+0xcc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
2040378e:	fe842783          	lw	a5,-24(s0)
20403792:	439c                	lw	a5,0(a5)
20403794:	4fdc                	lw	a5,28(a5)
20403796:	fc042683          	lw	a3,-64(s0)
2040379a:	fc442603          	lw	a2,-60(s0)
2040379e:	fc842583          	lw	a1,-56(s0)
204037a2:	fe842503          	lw	a0,-24(s0)
204037a6:	9782                	jalr	a5
204037a8:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
204037ac:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:115
}
204037b0:	853e                	mv	a0,a5
204037b2:	50f2                	lw	ra,60(sp)
204037b4:	5462                	lw	s0,56(sp)
204037b6:	6121                	addi	sp,sp,64
204037b8:	8082                	ret

204037ba <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
204037ba:	7179                	addi	sp,sp,-48
204037bc:	d622                	sw	s0,44(sp)
204037be:	1800                	addi	s0,sp,48
204037c0:	fca42e23          	sw	a0,-36(s0)
204037c4:	fcb42c23          	sw	a1,-40(s0)
204037c8:	fcc42a23          	sw	a2,-44(s0)
204037cc:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204037d0:	57fd                	li	a5,-1
204037d2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
204037d6:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:123
}
204037da:	853e                	mv	a0,a5
204037dc:	5432                	lw	s0,44(sp)
204037de:	6145                	addi	sp,sp,48
204037e0:	8082                	ret

204037e2 <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
204037e2:	1101                	addi	sp,sp,-32
204037e4:	ce06                	sw	ra,28(sp)
204037e6:	cc22                	sw	s0,24(sp)
204037e8:	1000                	addi	s0,sp,32
204037ea:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
204037ee:	36c010ef          	jal	ra,20404b5a <__metal_controller_interrupt_vector_mode>
204037f2:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:128
}
204037f4:	853e                	mv	a0,a5
204037f6:	40f2                	lw	ra,28(sp)
204037f8:	4462                	lw	s0,24(sp)
204037fa:	6105                	addi	sp,sp,32
204037fc:	8082                	ret

204037fe <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
204037fe:	7179                	addi	sp,sp,-48
20403800:	d606                	sw	ra,44(sp)
20403802:	d422                	sw	s0,40(sp)
20403804:	1800                	addi	s0,sp,48
20403806:	fca42e23          	sw	a0,-36(s0)
2040380a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2040380e:	57fd                	li	a5,-1
20403810:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20403814:	3539                	jal	20403622 <_get_cpu_intc>
20403816:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
2040381a:	fe842783          	lw	a5,-24(s0)
2040381e:	c395                	beqz	a5,20403842 <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20403820:	fd842703          	lw	a4,-40(s0)
20403824:	4785                	li	a5,1
20403826:	02e7e063          	bltu	a5,a4,20403846 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
2040382a:	fe842783          	lw	a5,-24(s0)
2040382e:	439c                	lw	a5,0(a5)
20403830:	43dc                	lw	a5,4(a5)
20403832:	fd842583          	lw	a1,-40(s0)
20403836:	fe842503          	lw	a0,-24(s0)
2040383a:	9782                	jalr	a5
2040383c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20403840:	a021                	j	20403848 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20403842:	0001                	nop
20403844:	a011                	j	20403848 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20403846:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20403848:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:148
}
2040384c:	853e                	mv	a0,a5
2040384e:	50b2                	lw	ra,44(sp)
20403850:	5422                	lw	s0,40(sp)
20403852:	6145                	addi	sp,sp,48
20403854:	8082                	ret

20403856 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20403856:	7139                	addi	sp,sp,-64
20403858:	de06                	sw	ra,60(sp)
2040385a:	dc22                	sw	s0,56(sp)
2040385c:	0080                	addi	s0,sp,64
2040385e:	fca42623          	sw	a0,-52(s0)
20403862:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20403866:	57fd                	li	a5,-1
20403868:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
2040386c:	fc842783          	lw	a5,-56(s0)
20403870:	cbc1                	beqz	a5,20403900 <__metal_driver_riscv_clint0_enable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20403872:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403876:	3375                	jal	20403622 <_get_cpu_intc>
20403878:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2040387c:	fcc42503          	lw	a0,-52(s0)
20403880:	bdfff0ef          	jal	ra,2040345e <__metal_driver_sifive_clint0_num_interrupts>
20403884:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20403888:	fe042223          	sw	zero,-28(s0)
2040388c:	a0a1                	j	204038d4 <__metal_driver_riscv_clint0_enable+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2040388e:	fe442583          	lw	a1,-28(s0)
20403892:	fcc42503          	lw	a0,-52(s0)
20403896:	c2dff0ef          	jal	ra,204034c2 <__metal_driver_sifive_clint0_interrupt_lines>
2040389a:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2040389e:	fe442583          	lw	a1,-28(s0)
204038a2:	fcc42503          	lw	a0,-52(s0)
204038a6:	be1ff0ef          	jal	ra,20403486 <__metal_driver_sifive_clint0_interrupt_parents>
204038aa:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
204038ae:	fe042703          	lw	a4,-32(s0)
204038b2:	fe842783          	lw	a5,-24(s0)
204038b6:	00f71863          	bne	a4,a5,204038c6 <__metal_driver_riscv_clint0_enable+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
204038ba:	fc842703          	lw	a4,-56(s0)
204038be:	fd842783          	lw	a5,-40(s0)
204038c2:	02f70063          	beq	a4,a5,204038e2 <__metal_driver_riscv_clint0_enable+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
204038c6:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204038ca:	fe442783          	lw	a5,-28(s0)
204038ce:	0785                	addi	a5,a5,1
204038d0:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
204038d4:	fe442703          	lw	a4,-28(s0)
204038d8:	fdc42783          	lw	a5,-36(s0)
204038dc:	faf749e3          	blt	a4,a5,2040388e <__metal_driver_riscv_clint0_enable+0x38>
204038e0:	a011                	j	204038e4 <__metal_driver_riscv_clint0_enable+0x8e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
204038e2:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
204038e4:	fe842783          	lw	a5,-24(s0)
204038e8:	cf81                	beqz	a5,20403900 <__metal_driver_riscv_clint0_enable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
204038ea:	fe842783          	lw	a5,-24(s0)
204038ee:	439c                	lw	a5,0(a5)
204038f0:	53dc                	lw	a5,36(a5)
204038f2:	fc842583          	lw	a1,-56(s0)
204038f6:	fe842503          	lw	a0,-24(s0)
204038fa:	9782                	jalr	a5
204038fc:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20403900:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:178
}
20403904:	853e                	mv	a0,a5
20403906:	50f2                	lw	ra,60(sp)
20403908:	5462                	lw	s0,56(sp)
2040390a:	6121                	addi	sp,sp,64
2040390c:	8082                	ret

2040390e <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
2040390e:	7139                	addi	sp,sp,-64
20403910:	de06                	sw	ra,60(sp)
20403912:	dc22                	sw	s0,56(sp)
20403914:	0080                	addi	s0,sp,64
20403916:	fca42623          	sw	a0,-52(s0)
2040391a:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
2040391e:	57fd                	li	a5,-1
20403920:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20403924:	fc842783          	lw	a5,-56(s0)
20403928:	cbc1                	beqz	a5,204039b8 <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
2040392a:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2040392e:	39d5                	jal	20403622 <_get_cpu_intc>
20403930:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20403934:	fcc42503          	lw	a0,-52(s0)
20403938:	b27ff0ef          	jal	ra,2040345e <__metal_driver_sifive_clint0_num_interrupts>
2040393c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20403940:	fe042223          	sw	zero,-28(s0)
20403944:	a0a1                	j	2040398c <__metal_driver_riscv_clint0_disable+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403946:	fe442583          	lw	a1,-28(s0)
2040394a:	fcc42503          	lw	a0,-52(s0)
2040394e:	b75ff0ef          	jal	ra,204034c2 <__metal_driver_sifive_clint0_interrupt_lines>
20403952:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403956:	fe442583          	lw	a1,-28(s0)
2040395a:	fcc42503          	lw	a0,-52(s0)
2040395e:	b29ff0ef          	jal	ra,20403486 <__metal_driver_sifive_clint0_interrupt_parents>
20403962:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20403966:	fe042703          	lw	a4,-32(s0)
2040396a:	fe842783          	lw	a5,-24(s0)
2040396e:	00f71863          	bne	a4,a5,2040397e <__metal_driver_riscv_clint0_disable+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20403972:	fc842703          	lw	a4,-56(s0)
20403976:	fd842783          	lw	a5,-40(s0)
2040397a:	02f70063          	beq	a4,a5,2040399a <__metal_driver_riscv_clint0_disable+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
2040397e:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20403982:	fe442783          	lw	a5,-28(s0)
20403986:	0785                	addi	a5,a5,1
20403988:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
2040398c:	fe442703          	lw	a4,-28(s0)
20403990:	fdc42783          	lw	a5,-36(s0)
20403994:	faf749e3          	blt	a4,a5,20403946 <__metal_driver_riscv_clint0_disable+0x38>
20403998:	a011                	j	2040399c <__metal_driver_riscv_clint0_disable+0x8e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
2040399a:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
2040399c:	fe842783          	lw	a5,-24(s0)
204039a0:	cf81                	beqz	a5,204039b8 <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
204039a2:	fe842783          	lw	a5,-24(s0)
204039a6:	439c                	lw	a5,0(a5)
204039a8:	579c                	lw	a5,40(a5)
204039aa:	fc842583          	lw	a1,-56(s0)
204039ae:	fe842503          	lw	a0,-24(s0)
204039b2:	9782                	jalr	a5
204039b4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
204039b8:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:208
}
204039bc:	853e                	mv	a0,a5
204039be:	50f2                	lw	ra,60(sp)
204039c0:	5462                	lw	s0,56(sp)
204039c2:	6121                	addi	sp,sp,64
204039c4:	8082                	ret

204039c6 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
204039c6:	7179                	addi	sp,sp,-48
204039c8:	d606                	sw	ra,44(sp)
204039ca:	d422                	sw	s0,40(sp)
204039cc:	1800                	addi	s0,sp,48
204039ce:	fca42e23          	sw	a0,-36(s0)
204039d2:	fcb42c23          	sw	a1,-40(s0)
204039d6:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
204039da:	57fd                	li	a5,-1
204039dc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
204039e0:	fdc42783          	lw	a5,-36(s0)
204039e4:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
204039e8:	fdc42503          	lw	a0,-36(s0)
204039ec:	a49ff0ef          	jal	ra,20403434 <__metal_driver_sifive_clint0_control_base>
204039f0:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
204039f4:	fd842703          	lw	a4,-40(s0)
204039f8:	4791                	li	a5,4
204039fa:	0cf70163          	beq	a4,a5,20403abc <__metal_driver_riscv_clint0_command_request+0xf6>
204039fe:	fd842703          	lw	a4,-40(s0)
20403a02:	4791                	li	a5,4
20403a04:	0ee7c163          	blt	a5,a4,20403ae6 <__metal_driver_riscv_clint0_command_request+0x120>
20403a08:	fd842703          	lw	a4,-40(s0)
20403a0c:	478d                	li	a5,3
20403a0e:	06f70663          	beq	a4,a5,20403a7a <__metal_driver_riscv_clint0_command_request+0xb4>
20403a12:	fd842703          	lw	a4,-40(s0)
20403a16:	478d                	li	a5,3
20403a18:	0ce7c763          	blt	a5,a4,20403ae6 <__metal_driver_riscv_clint0_command_request+0x120>
20403a1c:	fd842703          	lw	a4,-40(s0)
20403a20:	4785                	li	a5,1
20403a22:	00f70863          	beq	a4,a5,20403a32 <__metal_driver_riscv_clint0_command_request+0x6c>
20403a26:	fd842703          	lw	a4,-40(s0)
20403a2a:	4789                	li	a5,2
20403a2c:	02f70363          	beq	a4,a5,20403a52 <__metal_driver_riscv_clint0_command_request+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20403a30:	a85d                	j	20403ae6 <__metal_driver_riscv_clint0_command_request+0x120>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20403a32:	fd442783          	lw	a5,-44(s0)
20403a36:	cbd5                	beqz	a5,20403aea <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20403a38:	fe842503          	lw	a0,-24(s0)
20403a3c:	ab7ff0ef          	jal	ra,204034f2 <__metal_clint0_mtime_get>
20403a40:	872a                	mv	a4,a0
20403a42:	87ae                	mv	a5,a1
20403a44:	fd442683          	lw	a3,-44(s0)
20403a48:	c298                	sw	a4,0(a3)
20403a4a:	c2dc                	sw	a5,4(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20403a4c:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403a50:	a869                	j	20403aea <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20403a52:	fd442783          	lw	a5,-44(s0)
20403a56:	cfc1                	beqz	a5,20403aee <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20403a58:	fd442783          	lw	a5,-44(s0)
20403a5c:	439c                	lw	a5,0(a5)
20403a5e:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20403a62:	fe042783          	lw	a5,-32(s0)
20403a66:	078a                	slli	a5,a5,0x2
20403a68:	873e                	mv	a4,a5
20403a6a:	fe442783          	lw	a5,-28(s0)
20403a6e:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20403a70:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20403a74:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403a78:	a89d                	j	20403aee <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20403a7a:	fd442783          	lw	a5,-44(s0)
20403a7e:	cbb5                	beqz	a5,20403af2 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20403a80:	fd442783          	lw	a5,-44(s0)
20403a84:	439c                	lw	a5,0(a5)
20403a86:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20403a8a:	fe042783          	lw	a5,-32(s0)
20403a8e:	078a                	slli	a5,a5,0x2
20403a90:	873e                	mv	a4,a5
20403a92:	fe442783          	lw	a5,-28(s0)
20403a96:	97ba                	add	a5,a5,a4
20403a98:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20403a9a:	4785                	li	a5,1
20403a9c:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20403a9e:	0480000f          	fence	o,i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20403aa2:	fe042783          	lw	a5,-32(s0)
20403aa6:	078a                	slli	a5,a5,0x2
20403aa8:	873e                	mv	a4,a5
20403aaa:	fe442783          	lw	a5,-28(s0)
20403aae:	97ba                	add	a5,a5,a4
20403ab0:	439c                	lw	a5,0(a5)
20403ab2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20403ab6:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403aba:	a825                	j	20403af2 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
20403abc:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20403ac0:	fd442783          	lw	a5,-44(s0)
20403ac4:	cb8d                	beqz	a5,20403af6 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20403ac6:	fd442783          	lw	a5,-44(s0)
20403aca:	439c                	lw	a5,0(a5)
20403acc:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
20403ad0:	fe042783          	lw	a5,-32(s0)
20403ad4:	078a                	slli	a5,a5,0x2
20403ad6:	873e                	mv	a4,a5
20403ad8:	fe442783          	lw	a5,-28(s0)
20403adc:	97ba                	add	a5,a5,a4
20403ade:	439c                	lw	a5,0(a5)
20403ae0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403ae4:	a809                	j	20403af6 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20403ae6:	0001                	nop
20403ae8:	a801                	j	20403af8 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403aea:	0001                	nop
20403aec:	a031                	j	20403af8 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403aee:	0001                	nop
20403af0:	a021                	j	20403af8 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403af2:	0001                	nop
20403af4:	a011                	j	20403af8 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403af6:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20403af8:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:267
}
20403afc:	853e                	mv	a0,a5
20403afe:	50b2                	lw	ra,44(sp)
20403b00:	5422                	lw	s0,40(sp)
20403b02:	6145                	addi	sp,sp,48
20403b04:	8082                	ret

20403b06 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20403b06:	7179                	addi	sp,sp,-48
20403b08:	d606                	sw	ra,44(sp)
20403b0a:	d422                	sw	s0,40(sp)
20403b0c:	1800                	addi	s0,sp,48
20403b0e:	fca42e23          	sw	a0,-36(s0)
20403b12:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20403b16:	f3eff0ef          	jal	ra,20403254 <metal_cpu_get_current_hartid>
20403b1a:	87aa                	mv	a5,a0
20403b1c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
20403b20:	fec40793          	addi	a5,s0,-20
20403b24:	863e                	mv	a2,a5
20403b26:	4589                	li	a1,2
20403b28:	fdc42503          	lw	a0,-36(s0)
20403b2c:	3d69                	jal	204039c6 <__metal_driver_riscv_clint0_command_request>
20403b2e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20403b30:	853e                	mv	a0,a5
20403b32:	50b2                	lw	ra,44(sp)
20403b34:	5422                	lw	s0,40(sp)
20403b36:	6145                	addi	sp,sp,48
20403b38:	8082                	ret

20403b3a <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20403b3a:	7179                	addi	sp,sp,-48
20403b3c:	d606                	sw	ra,44(sp)
20403b3e:	d422                	sw	s0,40(sp)
20403b40:	1800                	addi	s0,sp,48
20403b42:	fca42e23          	sw	a0,-36(s0)
20403b46:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20403b4a:	f0aff0ef          	jal	ra,20403254 <metal_cpu_get_current_hartid>
20403b4e:	87aa                	mv	a5,a0
20403b50:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20403b54:	fec40793          	addi	a5,s0,-20
20403b58:	863e                	mv	a2,a5
20403b5a:	458d                	li	a1,3
20403b5c:	fdc42503          	lw	a0,-36(s0)
20403b60:	359d                	jal	204039c6 <__metal_driver_riscv_clint0_command_request>
20403b62:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20403b64:	853e                	mv	a0,a5
20403b66:	50b2                	lw	ra,44(sp)
20403b68:	5422                	lw	s0,40(sp)
20403b6a:	6145                	addi	sp,sp,48
20403b6c:	8082                	ret

20403b6e <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20403b6e:	1101                	addi	sp,sp,-32
20403b70:	ce22                	sw	s0,28(sp)
20403b72:	1000                	addi	s0,sp,32
20403b74:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403b78:	fec42703          	lw	a4,-20(s0)
20403b7c:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403b80:	00f71463          	bne	a4,a5,20403b88 <__metal_driver_cpu_hartid+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:263
		return 0;
20403b84:	4781                	li	a5,0
20403b86:	a011                	j	20403b8a <__metal_driver_cpu_hartid+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:266
	}
	else {
		return -1;
20403b88:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:268
	}
}
20403b8a:	853e                	mv	a0,a5
20403b8c:	4472                	lw	s0,28(sp)
20403b8e:	6105                	addi	sp,sp,32
20403b90:	8082                	ret

20403b92 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20403b92:	1101                	addi	sp,sp,-32
20403b94:	ce22                	sw	s0,28(sp)
20403b96:	1000                	addi	s0,sp,32
20403b98:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403b9c:	fec42703          	lw	a4,-20(s0)
20403ba0:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403ba4:	00f71763          	bne	a4,a5,20403bb2 <__metal_driver_cpu_timebase+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:273
		return 1000000;
20403ba8:	000f47b7          	lui	a5,0xf4
20403bac:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
20403bb0:	a011                	j	20403bb4 <__metal_driver_cpu_timebase+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:276
	}
	else {
		return 0;
20403bb2:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:278
	}
}
20403bb4:	853e                	mv	a0,a5
20403bb6:	4472                	lw	s0,28(sp)
20403bb8:	6105                	addi	sp,sp,32
20403bba:	8082                	ret

20403bbc <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
20403bbc:	1101                	addi	sp,sp,-32
20403bbe:	ce22                	sw	s0,28(sp)
20403bc0:	1000                	addi	s0,sp,32
20403bc2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403bc6:	fec42703          	lw	a4,-20(s0)
20403bca:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403bce:	00f71763          	bne	a4,a5,20403bdc <__metal_driver_cpu_interrupt_controller+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20403bd2:	800007b7          	lui	a5,0x80000
20403bd6:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe078>
20403bda:	a011                	j	20403bde <__metal_driver_cpu_interrupt_controller+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:286
	}
	else {
		return NULL;
20403bdc:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:288
	}
}
20403bde:	853e                	mv	a0,a5
20403be0:	4472                	lw	s0,28(sp)
20403be2:	6105                	addi	sp,sp,32
20403be4:	8082                	ret

20403be6 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20403be6:	1101                	addi	sp,sp,-32
20403be8:	ce22                	sw	s0,28(sp)
20403bea:	1000                	addi	s0,sp,32
20403bec:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403bf0:	fec42703          	lw	a4,-20(s0)
20403bf4:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403bf8:	00f71463          	bne	a4,a5,20403c00 <__metal_driver_cpu_buserror+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:303
		return NULL;
20403bfc:	4781                	li	a5,0
20403bfe:	a011                	j	20403c02 <__metal_driver_cpu_buserror+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:306
	}
	else {
		return NULL;
20403c00:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:308
	}
}
20403c02:	853e                	mv	a0,a5
20403c04:	4472                	lw	s0,28(sp)
20403c06:	6105                	addi	sp,sp,32
20403c08:	8082                	ret

20403c0a <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20403c0a:	1101                	addi	sp,sp,-32
20403c0c:	ce22                	sw	s0,28(sp)
20403c0e:	1000                	addi	s0,sp,32
20403c10:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
20403c14:	fec42783          	lw	a5,-20(s0)
20403c18:	00f04c63          	bgtz	a5,20403c30 <__metal_driver_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20403c1c:	800007b7          	lui	a5,0x80000
20403c20:	fec42703          	lw	a4,-20(s0)
20403c24:	070a                	slli	a4,a4,0x2
20403c26:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20403c2a:	97ba                	add	a5,a5,a4
20403c2c:	439c                	lw	a5,0(a5)
20403c2e:	a011                	j	20403c32 <__metal_driver_cpu_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20403c30:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:30
}
20403c32:	853e                	mv	a0,a5
20403c34:	4472                	lw	s0,28(sp)
20403c36:	6105                	addi	sp,sp,32
20403c38:	8082                	ret

20403c3a <__metal_myhart_id>:
__metal_myhart_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20403c3a:	1101                	addi	sp,sp,-32
20403c3c:	ce22                	sw	s0,28(sp)
20403c3e:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20403c40:	f14027f3          	csrr	a5,mhartid
20403c44:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20403c48:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:36
}
20403c4c:	853e                	mv	a0,a5
20403c4e:	4472                	lw	s0,28(sp)
20403c50:	6105                	addi	sp,sp,32
20403c52:	8082                	ret

20403c54 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20403c54:	1101                	addi	sp,sp,-32
20403c56:	ce22                	sw	s0,28(sp)
20403c58:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20403c5a:	47a1                	li	a5,8
20403c5c:	3007a7f3          	csrrs	a5,mstatus,a5
20403c60:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403c64:	0001                	nop
20403c66:	4472                	lw	s0,28(sp)
20403c68:	6105                	addi	sp,sp,32
20403c6a:	8082                	ret

20403c6c <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20403c6c:	1101                	addi	sp,sp,-32
20403c6e:	ce22                	sw	s0,28(sp)
20403c70:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20403c72:	47a1                	li	a5,8
20403c74:	3007b7f3          	csrrc	a5,mstatus,a5
20403c78:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403c7c:	0001                	nop
20403c7e:	4472                	lw	s0,28(sp)
20403c80:	6105                	addi	sp,sp,32
20403c82:	8082                	ret

20403c84 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20403c84:	1101                	addi	sp,sp,-32
20403c86:	ce22                	sw	s0,28(sp)
20403c88:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403c8a:	47a1                	li	a5,8
20403c8c:	3047a7f3          	csrrs	a5,mie,a5
20403c90:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403c94:	0001                	nop
20403c96:	4472                	lw	s0,28(sp)
20403c98:	6105                	addi	sp,sp,32
20403c9a:	8082                	ret

20403c9c <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
20403c9c:	1101                	addi	sp,sp,-32
20403c9e:	ce22                	sw	s0,28(sp)
20403ca0:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403ca2:	47a1                	li	a5,8
20403ca4:	3047b7f3          	csrrc	a5,mie,a5
20403ca8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403cac:	0001                	nop
20403cae:	4472                	lw	s0,28(sp)
20403cb0:	6105                	addi	sp,sp,32
20403cb2:	8082                	ret

20403cb4 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20403cb4:	1101                	addi	sp,sp,-32
20403cb6:	ce22                	sw	s0,28(sp)
20403cb8:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403cba:	08000793          	li	a5,128
20403cbe:	3047a7f3          	csrrs	a5,mie,a5
20403cc2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403cc6:	0001                	nop
20403cc8:	4472                	lw	s0,28(sp)
20403cca:	6105                	addi	sp,sp,32
20403ccc:	8082                	ret

20403cce <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
20403cce:	1101                	addi	sp,sp,-32
20403cd0:	ce22                	sw	s0,28(sp)
20403cd2:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403cd4:	08000793          	li	a5,128
20403cd8:	3047b7f3          	csrrc	a5,mie,a5
20403cdc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403ce0:	0001                	nop
20403ce2:	4472                	lw	s0,28(sp)
20403ce4:	6105                	addi	sp,sp,32
20403ce6:	8082                	ret

20403ce8 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20403ce8:	1101                	addi	sp,sp,-32
20403cea:	ce22                	sw	s0,28(sp)
20403cec:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403cee:	6785                	lui	a5,0x1
20403cf0:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403cf4:	3047a7f3          	csrrs	a5,mie,a5
20403cf8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20403cfc:	0001                	nop
20403cfe:	4472                	lw	s0,28(sp)
20403d00:	6105                	addi	sp,sp,32
20403d02:	8082                	ret

20403d04 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20403d04:	1101                	addi	sp,sp,-32
20403d06:	ce22                	sw	s0,28(sp)
20403d08:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20403d0a:	6785                	lui	a5,0x1
20403d0c:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403d10:	3047b7f3          	csrrc	a5,mie,a5
20403d14:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20403d18:	0001                	nop
20403d1a:	4472                	lw	s0,28(sp)
20403d1c:	6105                	addi	sp,sp,32
20403d1e:	8082                	ret

20403d20 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20403d20:	7179                	addi	sp,sp,-48
20403d22:	d622                	sw	s0,44(sp)
20403d24:	1800                	addi	s0,sp,48
20403d26:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20403d2a:	fdc42783          	lw	a5,-36(s0)
20403d2e:	4705                	li	a4,1
20403d30:	00f717b3          	sll	a5,a4,a5
20403d34:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20403d38:	fec42783          	lw	a5,-20(s0)
20403d3c:	3047a7f3          	csrrs	a5,mie,a5
20403d40:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:105
}
20403d44:	0001                	nop
20403d46:	5432                	lw	s0,44(sp)
20403d48:	6145                	addi	sp,sp,48
20403d4a:	8082                	ret

20403d4c <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20403d4c:	7179                	addi	sp,sp,-48
20403d4e:	d622                	sw	s0,44(sp)
20403d50:	1800                	addi	s0,sp,48
20403d52:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20403d56:	fdc42783          	lw	a5,-36(s0)
20403d5a:	4705                	li	a4,1
20403d5c:	00f717b3          	sll	a5,a4,a5
20403d60:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20403d64:	fec42783          	lw	a5,-20(s0)
20403d68:	3047b7f3          	csrrc	a5,mie,a5
20403d6c:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:111
}
20403d70:	0001                	nop
20403d72:	5432                	lw	s0,44(sp)
20403d74:	6145                	addi	sp,sp,48
20403d76:	8082                	ret

20403d78 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20403d78:	1101                	addi	sp,sp,-32
20403d7a:	ce06                	sw	ra,28(sp)
20403d7c:	cc22                	sw	s0,24(sp)
20403d7e:	1000                	addi	s0,sp,32
20403d80:	fea42623          	sw	a0,-20(s0)
20403d84:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20403d88:	06400513          	li	a0,100
20403d8c:	37d030ef          	jal	ra,20407908 <metal_shutdown>

20403d90 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20403d90:	1101                	addi	sp,sp,-32
20403d92:	ce06                	sw	ra,28(sp)
20403d94:	cc22                	sw	s0,24(sp)
20403d96:	1000                	addi	s0,sp,32
20403d98:	fea42623          	sw	a0,-20(s0)
20403d9c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20403da0:	0c800513          	li	a0,200
20403da4:	365030ef          	jal	ra,20407908 <metal_shutdown>

20403da8 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20403da8:	715d                	addi	sp,sp,-80
20403daa:	c686                	sw	ra,76(sp)
20403dac:	c496                	sw	t0,72(sp)
20403dae:	c29a                	sw	t1,68(sp)
20403db0:	c09e                	sw	t2,64(sp)
20403db2:	de22                	sw	s0,60(sp)
20403db4:	dc2a                	sw	a0,56(sp)
20403db6:	da2e                	sw	a1,52(sp)
20403db8:	d832                	sw	a2,48(sp)
20403dba:	d636                	sw	a3,44(sp)
20403dbc:	d43a                	sw	a4,40(sp)
20403dbe:	d23e                	sw	a5,36(sp)
20403dc0:	d042                	sw	a6,32(sp)
20403dc2:	ce46                	sw	a7,28(sp)
20403dc4:	cc72                	sw	t3,24(sp)
20403dc6:	ca76                	sw	t4,20(sp)
20403dc8:	c87a                	sw	t5,16(sp)
20403dca:	c67e                	sw	t6,12(sp)
20403dcc:	0880                	addi	s0,sp,80
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20403dce:	12c00513          	li	a0,300
20403dd2:	337030ef          	jal	ra,20407908 <metal_shutdown>

20403dd6 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20403dd6:	711d                	addi	sp,sp,-96
20403dd8:	ce86                	sw	ra,92(sp)
20403dda:	cc96                	sw	t0,88(sp)
20403ddc:	ca9a                	sw	t1,84(sp)
20403dde:	c89e                	sw	t2,80(sp)
20403de0:	c6a2                	sw	s0,76(sp)
20403de2:	c4aa                	sw	a0,72(sp)
20403de4:	c2ae                	sw	a1,68(sp)
20403de6:	c0b2                	sw	a2,64(sp)
20403de8:	de36                	sw	a3,60(sp)
20403dea:	dc3a                	sw	a4,56(sp)
20403dec:	da3e                	sw	a5,52(sp)
20403dee:	d842                	sw	a6,48(sp)
20403df0:	d646                	sw	a7,44(sp)
20403df2:	d472                	sw	t3,40(sp)
20403df4:	d276                	sw	t4,36(sp)
20403df6:	d07a                	sw	t5,32(sp)
20403df8:	ce7e                	sw	t6,28(sp)
20403dfa:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20403dfc:	3d3d                	jal	20403c3a <__metal_myhart_id>
20403dfe:	872a                	mv	a4,a0
20403e00:	800007b7          	lui	a5,0x80000
20403e04:	070a                	slli	a4,a4,0x2
20403e06:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20403e0a:	97ba                	add	a5,a5,a4
20403e0c:	439c                	lw	a5,0(a5)
20403e0e:	faf42623          	sw	a5,-84(s0)
20403e12:	fac42783          	lw	a5,-84(s0)
20403e16:	c785                	beqz	a5,20403e3e <metal_software_interrupt_vector_handler+0x68>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20403e18:	fac42503          	lw	a0,-84(s0)
20403e1c:	3345                	jal	20403bbc <__metal_driver_cpu_interrupt_controller>
20403e1e:	faa42423          	sw	a0,-88(s0)
20403e22:	fa842783          	lw	a5,-88(s0)
20403e26:	0e07a783          	lw	a5,224(a5)
20403e2a:	faf42223          	sw	a5,-92(s0)
20403e2e:	fa842783          	lw	a5,-88(s0)
20403e32:	0d87a783          	lw	a5,216(a5)
20403e36:	fa442583          	lw	a1,-92(s0)
20403e3a:	450d                	li	a0,3
20403e3c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:130
}
20403e3e:	0001                	nop
20403e40:	40f6                	lw	ra,92(sp)
20403e42:	42e6                	lw	t0,88(sp)
20403e44:	4356                	lw	t1,84(sp)
20403e46:	43c6                	lw	t2,80(sp)
20403e48:	4436                	lw	s0,76(sp)
20403e4a:	4526                	lw	a0,72(sp)
20403e4c:	4596                	lw	a1,68(sp)
20403e4e:	4606                	lw	a2,64(sp)
20403e50:	56f2                	lw	a3,60(sp)
20403e52:	5762                	lw	a4,56(sp)
20403e54:	57d2                	lw	a5,52(sp)
20403e56:	5842                	lw	a6,48(sp)
20403e58:	58b2                	lw	a7,44(sp)
20403e5a:	5e22                	lw	t3,40(sp)
20403e5c:	5e92                	lw	t4,36(sp)
20403e5e:	5f02                	lw	t5,32(sp)
20403e60:	4ff2                	lw	t6,28(sp)
20403e62:	6125                	addi	sp,sp,96
20403e64:	30200073          	mret

20403e68 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20403e68:	7179                	addi	sp,sp,-48
20403e6a:	d606                	sw	ra,44(sp)
20403e6c:	d422                	sw	s0,40(sp)
20403e6e:	1800                	addi	s0,sp,48
20403e70:	fca42e23          	sw	a0,-36(s0)
20403e74:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403e78:	33c9                	jal	20403c3a <__metal_myhart_id>
20403e7a:	872a                	mv	a4,a0
20403e7c:	800007b7          	lui	a5,0x80000
20403e80:	070a                	slli	a4,a4,0x2
20403e82:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20403e86:	97ba                	add	a5,a5,a4
20403e88:	439c                	lw	a5,0(a5)
20403e8a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403e8e:	342027f3          	csrr	a5,mcause
20403e92:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20403e96:	fec42783          	lw	a5,-20(s0)
20403e9a:	c795                	beqz	a5,20403ec6 <__metal_default_sw_handler+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403e9c:	fec42503          	lw	a0,-20(s0)
20403ea0:	3b31                	jal	20403bbc <__metal_driver_cpu_interrupt_controller>
20403ea2:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20403ea6:	fe842783          	lw	a5,-24(s0)
20403eaa:	3ff7f793          	andi	a5,a5,1023
20403eae:	fe442703          	lw	a4,-28(s0)
20403eb2:	0e878793          	addi	a5,a5,232
20403eb6:	078a                	slli	a5,a5,0x2
20403eb8:	97ba                	add	a5,a5,a4
20403eba:	439c                	lw	a5,0(a5)
20403ebc:	fdc42583          	lw	a1,-36(s0)
20403ec0:	fec42503          	lw	a0,-20(s0)
20403ec4:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20403ec6:	0001                	nop
20403ec8:	50b2                	lw	ra,44(sp)
20403eca:	5422                	lw	s0,40(sp)
20403ecc:	6145                	addi	sp,sp,48
20403ece:	8082                	ret

20403ed0 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20403ed0:	711d                	addi	sp,sp,-96
20403ed2:	ce86                	sw	ra,92(sp)
20403ed4:	cc96                	sw	t0,88(sp)
20403ed6:	ca9a                	sw	t1,84(sp)
20403ed8:	c89e                	sw	t2,80(sp)
20403eda:	c6a2                	sw	s0,76(sp)
20403edc:	c4aa                	sw	a0,72(sp)
20403ede:	c2ae                	sw	a1,68(sp)
20403ee0:	c0b2                	sw	a2,64(sp)
20403ee2:	de36                	sw	a3,60(sp)
20403ee4:	dc3a                	sw	a4,56(sp)
20403ee6:	da3e                	sw	a5,52(sp)
20403ee8:	d842                	sw	a6,48(sp)
20403eea:	d646                	sw	a7,44(sp)
20403eec:	d472                	sw	t3,40(sp)
20403eee:	d276                	sw	t4,36(sp)
20403ef0:	d07a                	sw	t5,32(sp)
20403ef2:	ce7e                	sw	t6,28(sp)
20403ef4:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20403ef6:	3391                	jal	20403c3a <__metal_myhart_id>
20403ef8:	872a                	mv	a4,a0
20403efa:	800007b7          	lui	a5,0x80000
20403efe:	070a                	slli	a4,a4,0x2
20403f00:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20403f04:	97ba                	add	a5,a5,a4
20403f06:	439c                	lw	a5,0(a5)
20403f08:	faf42623          	sw	a5,-84(s0)
20403f0c:	fac42783          	lw	a5,-84(s0)
20403f10:	c78d                	beqz	a5,20403f3a <metal_timer_interrupt_vector_handler+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20403f12:	fac42503          	lw	a0,-84(s0)
20403f16:	ca7ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20403f1a:	faa42423          	sw	a0,-88(s0)
20403f1e:	fa842783          	lw	a5,-88(s0)
20403f22:	1407a783          	lw	a5,320(a5)
20403f26:	faf42223          	sw	a5,-92(s0)
20403f2a:	fa842783          	lw	a5,-88(s0)
20403f2e:	1387a783          	lw	a5,312(a5)
20403f32:	fa442583          	lw	a1,-92(s0)
20403f36:	451d                	li	a0,7
20403f38:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:150
}
20403f3a:	0001                	nop
20403f3c:	40f6                	lw	ra,92(sp)
20403f3e:	42e6                	lw	t0,88(sp)
20403f40:	4356                	lw	t1,84(sp)
20403f42:	43c6                	lw	t2,80(sp)
20403f44:	4436                	lw	s0,76(sp)
20403f46:	4526                	lw	a0,72(sp)
20403f48:	4596                	lw	a1,68(sp)
20403f4a:	4606                	lw	a2,64(sp)
20403f4c:	56f2                	lw	a3,60(sp)
20403f4e:	5762                	lw	a4,56(sp)
20403f50:	57d2                	lw	a5,52(sp)
20403f52:	5842                	lw	a6,48(sp)
20403f54:	58b2                	lw	a7,44(sp)
20403f56:	5e22                	lw	t3,40(sp)
20403f58:	5e92                	lw	t4,36(sp)
20403f5a:	5f02                	lw	t5,32(sp)
20403f5c:	4ff2                	lw	t6,28(sp)
20403f5e:	6125                	addi	sp,sp,96
20403f60:	30200073          	mret

20403f64 <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403f64:	1101                	addi	sp,sp,-32
20403f66:	ce22                	sw	s0,28(sp)
20403f68:	1000                	addi	s0,sp,32
20403f6a:	fea42623          	sw	a0,-20(s0)
20403f6e:	feb42423          	sw	a1,-24(s0)
20403f72:	0001                	nop
20403f74:	4472                	lw	s0,28(sp)
20403f76:	6105                	addi	sp,sp,32
20403f78:	8082                	ret

20403f7a <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20403f7a:	7179                	addi	sp,sp,-48
20403f7c:	d606                	sw	ra,44(sp)
20403f7e:	d422                	sw	s0,40(sp)
20403f80:	1800                	addi	s0,sp,48
20403f82:	fca42e23          	sw	a0,-36(s0)
20403f86:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20403f8a:	cb1ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20403f8e:	87aa                	mv	a5,a0
20403f90:	853e                	mv	a0,a5
20403f92:	c79ff0ef          	jal	ra,20403c0a <__metal_driver_cpu_get>
20403f96:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403f9a:	fec42503          	lw	a0,-20(s0)
20403f9e:	28a010ef          	jal	ra,20405228 <__metal_driver_cpu_mtime_get>
20403fa2:	fea42023          	sw	a0,-32(s0)
20403fa6:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403faa:	fe042703          	lw	a4,-32(s0)
20403fae:	fe442783          	lw	a5,-28(s0)
20403fb2:	4529                	li	a0,10
20403fb4:	4581                	li	a1,0
20403fb6:	00a70633          	add	a2,a4,a0
20403fba:	8832                	mv	a6,a2
20403fbc:	00e83833          	sltu	a6,a6,a4
20403fc0:	00b786b3          	add	a3,a5,a1
20403fc4:	00d807b3          	add	a5,a6,a3
20403fc8:	86be                	mv	a3,a5
20403fca:	8732                	mv	a4,a2
20403fcc:	87b6                	mv	a5,a3
20403fce:	85ba                	mv	a1,a4
20403fd0:	863e                	mv	a2,a5
20403fd2:	fec42503          	lw	a0,-20(s0)
20403fd6:	2b8010ef          	jal	ra,2040528e <__metal_driver_cpu_mtimecmp_set>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403fda:	0001                	nop
20403fdc:	50b2                	lw	ra,44(sp)
20403fde:	5422                	lw	s0,40(sp)
20403fe0:	6145                	addi	sp,sp,48
20403fe2:	8082                	ret
	...

20404000 <__metal_exception_handler>:
__metal_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20404000:	7119                	addi	sp,sp,-128
20404002:	de86                	sw	ra,124(sp)
20404004:	dc96                	sw	t0,120(sp)
20404006:	da9a                	sw	t1,116(sp)
20404008:	d89e                	sw	t2,112(sp)
2040400a:	d6a2                	sw	s0,108(sp)
2040400c:	d4aa                	sw	a0,104(sp)
2040400e:	d2ae                	sw	a1,100(sp)
20404010:	d0b2                	sw	a2,96(sp)
20404012:	ceb6                	sw	a3,92(sp)
20404014:	ccba                	sw	a4,88(sp)
20404016:	cabe                	sw	a5,84(sp)
20404018:	c8c2                	sw	a6,80(sp)
2040401a:	c6c6                	sw	a7,76(sp)
2040401c:	c4f2                	sw	t3,72(sp)
2040401e:	c2f6                	sw	t4,68(sp)
20404020:	c0fa                	sw	t5,64(sp)
20404022:	de7e                	sw	t6,60(sp)
20404024:	0100                	addi	s0,sp,128
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20404026:	c15ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
2040402a:	872a                	mv	a4,a0
2040402c:	800007b7          	lui	a5,0x80000
20404030:	070a                	slli	a4,a4,0x2
20404032:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20404036:	97ba                	add	a5,a5,a4
20404038:	439c                	lw	a5,0(a5)
2040403a:	faf42623          	sw	a5,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2040403e:	342027f3          	csrr	a5,mcause
20404042:	faf42423          	sw	a5,-88(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20404046:	341027f3          	csrr	a5,mepc
2040404a:	faf42223          	sw	a5,-92(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
2040404e:	343027f3          	csrr	a5,mtval
20404052:	faf42023          	sw	a5,-96(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404056:	305027f3          	csrr	a5,mtvec
2040405a:	f8f42e23          	sw	a5,-100(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
2040405e:	fac42783          	lw	a5,-84(s0)
20404062:	cbfd                	beqz	a5,20404158 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20404064:	fac42503          	lw	a0,-84(s0)
20404068:	b55ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
2040406c:	f8a42c23          	sw	a0,-104(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20404070:	fa842783          	lw	a5,-88(s0)
20404074:	3ff7f793          	andi	a5,a5,1023
20404078:	f8f42a23          	sw	a5,-108(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
2040407c:	fa842783          	lw	a5,-88(s0)
20404080:	0a07de63          	bgez	a5,2040413c <__metal_exception_handler+0x13c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20404084:	f9442703          	lw	a4,-108(s0)
20404088:	08000793          	li	a5,128
2040408c:	02f71263          	bne	a4,a5,204040b0 <__metal_exception_handler+0xb0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20404090:	f9842783          	lw	a5,-104(s0)
20404094:	3987a783          	lw	a5,920(a5)
20404098:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2040409c:	f9842783          	lw	a5,-104(s0)
204040a0:	3907a783          	lw	a5,912(a5)
204040a4:	f8c42583          	lw	a1,-116(s0)
204040a8:	f9442503          	lw	a0,-108(s0)
204040ac:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
204040ae:	a06d                	j	20404158 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204040b0:	f9442703          	lw	a4,-108(s0)
204040b4:	47ad                	li	a5,11
204040b6:	00e7d763          	bge	a5,a4,204040c4 <__metal_exception_handler+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
204040ba:	f9c42783          	lw	a5,-100(s0)
204040be:	03f7f793          	andi	a5,a5,63
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204040c2:	ef9d                	bnez	a5,20404100 <__metal_exception_handler+0x100>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
204040c4:	f9842683          	lw	a3,-104(s0)
204040c8:	f9442703          	lw	a4,-108(s0)
204040cc:	87ba                	mv	a5,a4
204040ce:	0786                	slli	a5,a5,0x1
204040d0:	97ba                	add	a5,a5,a4
204040d2:	078e                	slli	a5,a5,0x3
204040d4:	97b6                	add	a5,a5,a3
204040d6:	0987a783          	lw	a5,152(a5)
204040da:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
204040de:	f9842683          	lw	a3,-104(s0)
204040e2:	f9442703          	lw	a4,-108(s0)
204040e6:	87ba                	mv	a5,a4
204040e8:	0786                	slli	a5,a5,0x1
204040ea:	97ba                	add	a5,a5,a4
204040ec:	078e                	slli	a5,a5,0x3
204040ee:	97b6                	add	a5,a5,a3
204040f0:	0907a783          	lw	a5,144(a5)
204040f4:	f8c42583          	lw	a1,-116(s0)
204040f8:	f9442503          	lw	a0,-108(s0)
204040fc:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
204040fe:	a8a9                	j	20404158 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20404100:	f9c42783          	lw	a5,-100(s0)
20404104:	03f7f713          	andi	a4,a5,63
20404108:	4789                	li	a5,2
2040410a:	04f71763          	bne	a4,a5,20404158 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2040410e:	307027f3          	csrr	a5,mtvt
20404112:	f8f42823          	sw	a5,-112(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404116:	f9842783          	lw	a5,-104(s0)
2040411a:	0dc7a783          	lw	a5,220(a5)
2040411e:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20404122:	f9042783          	lw	a5,-112(s0)
20404126:	439c                	lw	a5,0(a5)
20404128:	f8f42423          	sw	a5,-120(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
2040412c:	f8842783          	lw	a5,-120(s0)
20404130:	f8c42583          	lw	a1,-116(s0)
20404134:	f9442503          	lw	a0,-108(s0)
20404138:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
2040413a:	a839                	j	20404158 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
2040413c:	f9842703          	lw	a4,-104(s0)
20404140:	f9442783          	lw	a5,-108(s0)
20404144:	0e878793          	addi	a5,a5,232
20404148:	078a                	slli	a5,a5,0x2
2040414a:	97ba                	add	a5,a5,a4
2040414c:	439c                	lw	a5,0(a5)
2040414e:	f9442583          	lw	a1,-108(s0)
20404152:	fac42503          	lw	a0,-84(s0)
20404156:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20404158:	50f6                	lw	ra,124(sp)
2040415a:	52e6                	lw	t0,120(sp)
2040415c:	5356                	lw	t1,116(sp)
2040415e:	53c6                	lw	t2,112(sp)
20404160:	5436                	lw	s0,108(sp)
20404162:	5526                	lw	a0,104(sp)
20404164:	5596                	lw	a1,100(sp)
20404166:	5606                	lw	a2,96(sp)
20404168:	46f6                	lw	a3,92(sp)
2040416a:	4766                	lw	a4,88(sp)
2040416c:	47d6                	lw	a5,84(sp)
2040416e:	4846                	lw	a6,80(sp)
20404170:	48b6                	lw	a7,76(sp)
20404172:	4e26                	lw	t3,72(sp)
20404174:	4e96                	lw	t4,68(sp)
20404176:	4f06                	lw	t5,64(sp)
20404178:	5ff2                	lw	t6,60(sp)
2040417a:	6109                	addi	sp,sp,128
2040417c:	30200073          	mret
	...

204041fa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
204041fa:	711d                	addi	sp,sp,-96
204041fc:	ce86                	sw	ra,92(sp)
204041fe:	cc96                	sw	t0,88(sp)
20404200:	ca9a                	sw	t1,84(sp)
20404202:	c89e                	sw	t2,80(sp)
20404204:	c6a2                	sw	s0,76(sp)
20404206:	c4aa                	sw	a0,72(sp)
20404208:	c2ae                	sw	a1,68(sp)
2040420a:	c0b2                	sw	a2,64(sp)
2040420c:	de36                	sw	a3,60(sp)
2040420e:	dc3a                	sw	a4,56(sp)
20404210:	da3e                	sw	a5,52(sp)
20404212:	d842                	sw	a6,48(sp)
20404214:	d646                	sw	a7,44(sp)
20404216:	d472                	sw	t3,40(sp)
20404218:	d276                	sw	t4,36(sp)
2040421a:	d07a                	sw	t5,32(sp)
2040421c:	ce7e                	sw	t6,28(sp)
2040421e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20404220:	a1bff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20404224:	872a                	mv	a4,a0
20404226:	800007b7          	lui	a5,0x80000
2040422a:	070a                	slli	a4,a4,0x2
2040422c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20404230:	97ba                	add	a5,a5,a4
20404232:	439c                	lw	a5,0(a5)
20404234:	faf42623          	sw	a5,-84(s0)
20404238:	fac42783          	lw	a5,-84(s0)
2040423c:	c78d                	beqz	a5,20404266 <metal_lc0_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
2040423e:	fac42503          	lw	a0,-84(s0)
20404242:	97bff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404246:	faa42423          	sw	a0,-88(s0)
2040424a:	fa842783          	lw	a5,-88(s0)
2040424e:	2187a783          	lw	a5,536(a5)
20404252:	faf42223          	sw	a5,-92(s0)
20404256:	fa842783          	lw	a5,-88(s0)
2040425a:	2107a783          	lw	a5,528(a5)
2040425e:	fa442583          	lw	a1,-92(s0)
20404262:	4541                	li	a0,16
20404264:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:216
}
20404266:	0001                	nop
20404268:	40f6                	lw	ra,92(sp)
2040426a:	42e6                	lw	t0,88(sp)
2040426c:	4356                	lw	t1,84(sp)
2040426e:	43c6                	lw	t2,80(sp)
20404270:	4436                	lw	s0,76(sp)
20404272:	4526                	lw	a0,72(sp)
20404274:	4596                	lw	a1,68(sp)
20404276:	4606                	lw	a2,64(sp)
20404278:	56f2                	lw	a3,60(sp)
2040427a:	5762                	lw	a4,56(sp)
2040427c:	57d2                	lw	a5,52(sp)
2040427e:	5842                	lw	a6,48(sp)
20404280:	58b2                	lw	a7,44(sp)
20404282:	5e22                	lw	t3,40(sp)
20404284:	5e92                	lw	t4,36(sp)
20404286:	5f02                	lw	t5,32(sp)
20404288:	4ff2                	lw	t6,28(sp)
2040428a:	6125                	addi	sp,sp,96
2040428c:	30200073          	mret

20404290 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20404290:	711d                	addi	sp,sp,-96
20404292:	ce86                	sw	ra,92(sp)
20404294:	cc96                	sw	t0,88(sp)
20404296:	ca9a                	sw	t1,84(sp)
20404298:	c89e                	sw	t2,80(sp)
2040429a:	c6a2                	sw	s0,76(sp)
2040429c:	c4aa                	sw	a0,72(sp)
2040429e:	c2ae                	sw	a1,68(sp)
204042a0:	c0b2                	sw	a2,64(sp)
204042a2:	de36                	sw	a3,60(sp)
204042a4:	dc3a                	sw	a4,56(sp)
204042a6:	da3e                	sw	a5,52(sp)
204042a8:	d842                	sw	a6,48(sp)
204042aa:	d646                	sw	a7,44(sp)
204042ac:	d472                	sw	t3,40(sp)
204042ae:	d276                	sw	t4,36(sp)
204042b0:	d07a                	sw	t5,32(sp)
204042b2:	ce7e                	sw	t6,28(sp)
204042b4:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
204042b6:	985ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
204042ba:	872a                	mv	a4,a0
204042bc:	800007b7          	lui	a5,0x80000
204042c0:	070a                	slli	a4,a4,0x2
204042c2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
204042c6:	97ba                	add	a5,a5,a4
204042c8:	439c                	lw	a5,0(a5)
204042ca:	faf42623          	sw	a5,-84(s0)
204042ce:	fac42783          	lw	a5,-84(s0)
204042d2:	c78d                	beqz	a5,204042fc <metal_lc1_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
204042d4:	fac42503          	lw	a0,-84(s0)
204042d8:	8e5ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204042dc:	faa42423          	sw	a0,-88(s0)
204042e0:	fa842783          	lw	a5,-88(s0)
204042e4:	2307a783          	lw	a5,560(a5)
204042e8:	faf42223          	sw	a5,-92(s0)
204042ec:	fa842783          	lw	a5,-88(s0)
204042f0:	2287a783          	lw	a5,552(a5)
204042f4:	fa442583          	lw	a1,-92(s0)
204042f8:	4545                	li	a0,17
204042fa:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:221
}
204042fc:	0001                	nop
204042fe:	40f6                	lw	ra,92(sp)
20404300:	42e6                	lw	t0,88(sp)
20404302:	4356                	lw	t1,84(sp)
20404304:	43c6                	lw	t2,80(sp)
20404306:	4436                	lw	s0,76(sp)
20404308:	4526                	lw	a0,72(sp)
2040430a:	4596                	lw	a1,68(sp)
2040430c:	4606                	lw	a2,64(sp)
2040430e:	56f2                	lw	a3,60(sp)
20404310:	5762                	lw	a4,56(sp)
20404312:	57d2                	lw	a5,52(sp)
20404314:	5842                	lw	a6,48(sp)
20404316:	58b2                	lw	a7,44(sp)
20404318:	5e22                	lw	t3,40(sp)
2040431a:	5e92                	lw	t4,36(sp)
2040431c:	5f02                	lw	t5,32(sp)
2040431e:	4ff2                	lw	t6,28(sp)
20404320:	6125                	addi	sp,sp,96
20404322:	30200073          	mret

20404326 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20404326:	711d                	addi	sp,sp,-96
20404328:	ce86                	sw	ra,92(sp)
2040432a:	cc96                	sw	t0,88(sp)
2040432c:	ca9a                	sw	t1,84(sp)
2040432e:	c89e                	sw	t2,80(sp)
20404330:	c6a2                	sw	s0,76(sp)
20404332:	c4aa                	sw	a0,72(sp)
20404334:	c2ae                	sw	a1,68(sp)
20404336:	c0b2                	sw	a2,64(sp)
20404338:	de36                	sw	a3,60(sp)
2040433a:	dc3a                	sw	a4,56(sp)
2040433c:	da3e                	sw	a5,52(sp)
2040433e:	d842                	sw	a6,48(sp)
20404340:	d646                	sw	a7,44(sp)
20404342:	d472                	sw	t3,40(sp)
20404344:	d276                	sw	t4,36(sp)
20404346:	d07a                	sw	t5,32(sp)
20404348:	ce7e                	sw	t6,28(sp)
2040434a:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2040434c:	8efff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20404350:	872a                	mv	a4,a0
20404352:	800007b7          	lui	a5,0x80000
20404356:	070a                	slli	a4,a4,0x2
20404358:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
2040435c:	97ba                	add	a5,a5,a4
2040435e:	439c                	lw	a5,0(a5)
20404360:	faf42623          	sw	a5,-84(s0)
20404364:	fac42783          	lw	a5,-84(s0)
20404368:	c78d                	beqz	a5,20404392 <metal_lc2_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
2040436a:	fac42503          	lw	a0,-84(s0)
2040436e:	84fff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404372:	faa42423          	sw	a0,-88(s0)
20404376:	fa842783          	lw	a5,-88(s0)
2040437a:	2487a783          	lw	a5,584(a5)
2040437e:	faf42223          	sw	a5,-92(s0)
20404382:	fa842783          	lw	a5,-88(s0)
20404386:	2407a783          	lw	a5,576(a5)
2040438a:	fa442583          	lw	a1,-92(s0)
2040438e:	4549                	li	a0,18
20404390:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:226
}
20404392:	0001                	nop
20404394:	40f6                	lw	ra,92(sp)
20404396:	42e6                	lw	t0,88(sp)
20404398:	4356                	lw	t1,84(sp)
2040439a:	43c6                	lw	t2,80(sp)
2040439c:	4436                	lw	s0,76(sp)
2040439e:	4526                	lw	a0,72(sp)
204043a0:	4596                	lw	a1,68(sp)
204043a2:	4606                	lw	a2,64(sp)
204043a4:	56f2                	lw	a3,60(sp)
204043a6:	5762                	lw	a4,56(sp)
204043a8:	57d2                	lw	a5,52(sp)
204043aa:	5842                	lw	a6,48(sp)
204043ac:	58b2                	lw	a7,44(sp)
204043ae:	5e22                	lw	t3,40(sp)
204043b0:	5e92                	lw	t4,36(sp)
204043b2:	5f02                	lw	t5,32(sp)
204043b4:	4ff2                	lw	t6,28(sp)
204043b6:	6125                	addi	sp,sp,96
204043b8:	30200073          	mret

204043bc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
204043bc:	711d                	addi	sp,sp,-96
204043be:	ce86                	sw	ra,92(sp)
204043c0:	cc96                	sw	t0,88(sp)
204043c2:	ca9a                	sw	t1,84(sp)
204043c4:	c89e                	sw	t2,80(sp)
204043c6:	c6a2                	sw	s0,76(sp)
204043c8:	c4aa                	sw	a0,72(sp)
204043ca:	c2ae                	sw	a1,68(sp)
204043cc:	c0b2                	sw	a2,64(sp)
204043ce:	de36                	sw	a3,60(sp)
204043d0:	dc3a                	sw	a4,56(sp)
204043d2:	da3e                	sw	a5,52(sp)
204043d4:	d842                	sw	a6,48(sp)
204043d6:	d646                	sw	a7,44(sp)
204043d8:	d472                	sw	t3,40(sp)
204043da:	d276                	sw	t4,36(sp)
204043dc:	d07a                	sw	t5,32(sp)
204043de:	ce7e                	sw	t6,28(sp)
204043e0:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
204043e2:	859ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
204043e6:	872a                	mv	a4,a0
204043e8:	800007b7          	lui	a5,0x80000
204043ec:	070a                	slli	a4,a4,0x2
204043ee:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
204043f2:	97ba                	add	a5,a5,a4
204043f4:	439c                	lw	a5,0(a5)
204043f6:	faf42623          	sw	a5,-84(s0)
204043fa:	fac42783          	lw	a5,-84(s0)
204043fe:	c78d                	beqz	a5,20404428 <metal_lc3_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20404400:	fac42503          	lw	a0,-84(s0)
20404404:	fb8ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404408:	faa42423          	sw	a0,-88(s0)
2040440c:	fa842783          	lw	a5,-88(s0)
20404410:	2607a783          	lw	a5,608(a5)
20404414:	faf42223          	sw	a5,-92(s0)
20404418:	fa842783          	lw	a5,-88(s0)
2040441c:	2587a783          	lw	a5,600(a5)
20404420:	fa442583          	lw	a1,-92(s0)
20404424:	454d                	li	a0,19
20404426:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:231
}
20404428:	0001                	nop
2040442a:	40f6                	lw	ra,92(sp)
2040442c:	42e6                	lw	t0,88(sp)
2040442e:	4356                	lw	t1,84(sp)
20404430:	43c6                	lw	t2,80(sp)
20404432:	4436                	lw	s0,76(sp)
20404434:	4526                	lw	a0,72(sp)
20404436:	4596                	lw	a1,68(sp)
20404438:	4606                	lw	a2,64(sp)
2040443a:	56f2                	lw	a3,60(sp)
2040443c:	5762                	lw	a4,56(sp)
2040443e:	57d2                	lw	a5,52(sp)
20404440:	5842                	lw	a6,48(sp)
20404442:	58b2                	lw	a7,44(sp)
20404444:	5e22                	lw	t3,40(sp)
20404446:	5e92                	lw	t4,36(sp)
20404448:	5f02                	lw	t5,32(sp)
2040444a:	4ff2                	lw	t6,28(sp)
2040444c:	6125                	addi	sp,sp,96
2040444e:	30200073          	mret

20404452 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20404452:	711d                	addi	sp,sp,-96
20404454:	ce86                	sw	ra,92(sp)
20404456:	cc96                	sw	t0,88(sp)
20404458:	ca9a                	sw	t1,84(sp)
2040445a:	c89e                	sw	t2,80(sp)
2040445c:	c6a2                	sw	s0,76(sp)
2040445e:	c4aa                	sw	a0,72(sp)
20404460:	c2ae                	sw	a1,68(sp)
20404462:	c0b2                	sw	a2,64(sp)
20404464:	de36                	sw	a3,60(sp)
20404466:	dc3a                	sw	a4,56(sp)
20404468:	da3e                	sw	a5,52(sp)
2040446a:	d842                	sw	a6,48(sp)
2040446c:	d646                	sw	a7,44(sp)
2040446e:	d472                	sw	t3,40(sp)
20404470:	d276                	sw	t4,36(sp)
20404472:	d07a                	sw	t5,32(sp)
20404474:	ce7e                	sw	t6,28(sp)
20404476:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20404478:	fc2ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
2040447c:	872a                	mv	a4,a0
2040447e:	800007b7          	lui	a5,0x80000
20404482:	070a                	slli	a4,a4,0x2
20404484:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20404488:	97ba                	add	a5,a5,a4
2040448a:	439c                	lw	a5,0(a5)
2040448c:	faf42623          	sw	a5,-84(s0)
20404490:	fac42783          	lw	a5,-84(s0)
20404494:	c78d                	beqz	a5,204044be <metal_lc4_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20404496:	fac42503          	lw	a0,-84(s0)
2040449a:	f22ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
2040449e:	faa42423          	sw	a0,-88(s0)
204044a2:	fa842783          	lw	a5,-88(s0)
204044a6:	2787a783          	lw	a5,632(a5)
204044aa:	faf42223          	sw	a5,-92(s0)
204044ae:	fa842783          	lw	a5,-88(s0)
204044b2:	2707a783          	lw	a5,624(a5)
204044b6:	fa442583          	lw	a1,-92(s0)
204044ba:	4551                	li	a0,20
204044bc:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:236
}
204044be:	0001                	nop
204044c0:	40f6                	lw	ra,92(sp)
204044c2:	42e6                	lw	t0,88(sp)
204044c4:	4356                	lw	t1,84(sp)
204044c6:	43c6                	lw	t2,80(sp)
204044c8:	4436                	lw	s0,76(sp)
204044ca:	4526                	lw	a0,72(sp)
204044cc:	4596                	lw	a1,68(sp)
204044ce:	4606                	lw	a2,64(sp)
204044d0:	56f2                	lw	a3,60(sp)
204044d2:	5762                	lw	a4,56(sp)
204044d4:	57d2                	lw	a5,52(sp)
204044d6:	5842                	lw	a6,48(sp)
204044d8:	58b2                	lw	a7,44(sp)
204044da:	5e22                	lw	t3,40(sp)
204044dc:	5e92                	lw	t4,36(sp)
204044de:	5f02                	lw	t5,32(sp)
204044e0:	4ff2                	lw	t6,28(sp)
204044e2:	6125                	addi	sp,sp,96
204044e4:	30200073          	mret

204044e8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
204044e8:	711d                	addi	sp,sp,-96
204044ea:	ce86                	sw	ra,92(sp)
204044ec:	cc96                	sw	t0,88(sp)
204044ee:	ca9a                	sw	t1,84(sp)
204044f0:	c89e                	sw	t2,80(sp)
204044f2:	c6a2                	sw	s0,76(sp)
204044f4:	c4aa                	sw	a0,72(sp)
204044f6:	c2ae                	sw	a1,68(sp)
204044f8:	c0b2                	sw	a2,64(sp)
204044fa:	de36                	sw	a3,60(sp)
204044fc:	dc3a                	sw	a4,56(sp)
204044fe:	da3e                	sw	a5,52(sp)
20404500:	d842                	sw	a6,48(sp)
20404502:	d646                	sw	a7,44(sp)
20404504:	d472                	sw	t3,40(sp)
20404506:	d276                	sw	t4,36(sp)
20404508:	d07a                	sw	t5,32(sp)
2040450a:	ce7e                	sw	t6,28(sp)
2040450c:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040450e:	f2cff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20404512:	872a                	mv	a4,a0
20404514:	800007b7          	lui	a5,0x80000
20404518:	070a                	slli	a4,a4,0x2
2040451a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
2040451e:	97ba                	add	a5,a5,a4
20404520:	439c                	lw	a5,0(a5)
20404522:	faf42623          	sw	a5,-84(s0)
20404526:	fac42783          	lw	a5,-84(s0)
2040452a:	c78d                	beqz	a5,20404554 <metal_lc5_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2040452c:	fac42503          	lw	a0,-84(s0)
20404530:	e8cff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404534:	faa42423          	sw	a0,-88(s0)
20404538:	fa842783          	lw	a5,-88(s0)
2040453c:	2907a783          	lw	a5,656(a5)
20404540:	faf42223          	sw	a5,-92(s0)
20404544:	fa842783          	lw	a5,-88(s0)
20404548:	2887a783          	lw	a5,648(a5)
2040454c:	fa442583          	lw	a1,-92(s0)
20404550:	4555                	li	a0,21
20404552:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:241
}
20404554:	0001                	nop
20404556:	40f6                	lw	ra,92(sp)
20404558:	42e6                	lw	t0,88(sp)
2040455a:	4356                	lw	t1,84(sp)
2040455c:	43c6                	lw	t2,80(sp)
2040455e:	4436                	lw	s0,76(sp)
20404560:	4526                	lw	a0,72(sp)
20404562:	4596                	lw	a1,68(sp)
20404564:	4606                	lw	a2,64(sp)
20404566:	56f2                	lw	a3,60(sp)
20404568:	5762                	lw	a4,56(sp)
2040456a:	57d2                	lw	a5,52(sp)
2040456c:	5842                	lw	a6,48(sp)
2040456e:	58b2                	lw	a7,44(sp)
20404570:	5e22                	lw	t3,40(sp)
20404572:	5e92                	lw	t4,36(sp)
20404574:	5f02                	lw	t5,32(sp)
20404576:	4ff2                	lw	t6,28(sp)
20404578:	6125                	addi	sp,sp,96
2040457a:	30200073          	mret

2040457e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2040457e:	711d                	addi	sp,sp,-96
20404580:	ce86                	sw	ra,92(sp)
20404582:	cc96                	sw	t0,88(sp)
20404584:	ca9a                	sw	t1,84(sp)
20404586:	c89e                	sw	t2,80(sp)
20404588:	c6a2                	sw	s0,76(sp)
2040458a:	c4aa                	sw	a0,72(sp)
2040458c:	c2ae                	sw	a1,68(sp)
2040458e:	c0b2                	sw	a2,64(sp)
20404590:	de36                	sw	a3,60(sp)
20404592:	dc3a                	sw	a4,56(sp)
20404594:	da3e                	sw	a5,52(sp)
20404596:	d842                	sw	a6,48(sp)
20404598:	d646                	sw	a7,44(sp)
2040459a:	d472                	sw	t3,40(sp)
2040459c:	d276                	sw	t4,36(sp)
2040459e:	d07a                	sw	t5,32(sp)
204045a0:	ce7e                	sw	t6,28(sp)
204045a2:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
204045a4:	e96ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
204045a8:	872a                	mv	a4,a0
204045aa:	800007b7          	lui	a5,0x80000
204045ae:	070a                	slli	a4,a4,0x2
204045b0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
204045b4:	97ba                	add	a5,a5,a4
204045b6:	439c                	lw	a5,0(a5)
204045b8:	faf42623          	sw	a5,-84(s0)
204045bc:	fac42783          	lw	a5,-84(s0)
204045c0:	c78d                	beqz	a5,204045ea <metal_lc6_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
204045c2:	fac42503          	lw	a0,-84(s0)
204045c6:	df6ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204045ca:	faa42423          	sw	a0,-88(s0)
204045ce:	fa842783          	lw	a5,-88(s0)
204045d2:	2a87a783          	lw	a5,680(a5)
204045d6:	faf42223          	sw	a5,-92(s0)
204045da:	fa842783          	lw	a5,-88(s0)
204045de:	2a07a783          	lw	a5,672(a5)
204045e2:	fa442583          	lw	a1,-92(s0)
204045e6:	4559                	li	a0,22
204045e8:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:246
}
204045ea:	0001                	nop
204045ec:	40f6                	lw	ra,92(sp)
204045ee:	42e6                	lw	t0,88(sp)
204045f0:	4356                	lw	t1,84(sp)
204045f2:	43c6                	lw	t2,80(sp)
204045f4:	4436                	lw	s0,76(sp)
204045f6:	4526                	lw	a0,72(sp)
204045f8:	4596                	lw	a1,68(sp)
204045fa:	4606                	lw	a2,64(sp)
204045fc:	56f2                	lw	a3,60(sp)
204045fe:	5762                	lw	a4,56(sp)
20404600:	57d2                	lw	a5,52(sp)
20404602:	5842                	lw	a6,48(sp)
20404604:	58b2                	lw	a7,44(sp)
20404606:	5e22                	lw	t3,40(sp)
20404608:	5e92                	lw	t4,36(sp)
2040460a:	5f02                	lw	t5,32(sp)
2040460c:	4ff2                	lw	t6,28(sp)
2040460e:	6125                	addi	sp,sp,96
20404610:	30200073          	mret

20404614 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20404614:	711d                	addi	sp,sp,-96
20404616:	ce86                	sw	ra,92(sp)
20404618:	cc96                	sw	t0,88(sp)
2040461a:	ca9a                	sw	t1,84(sp)
2040461c:	c89e                	sw	t2,80(sp)
2040461e:	c6a2                	sw	s0,76(sp)
20404620:	c4aa                	sw	a0,72(sp)
20404622:	c2ae                	sw	a1,68(sp)
20404624:	c0b2                	sw	a2,64(sp)
20404626:	de36                	sw	a3,60(sp)
20404628:	dc3a                	sw	a4,56(sp)
2040462a:	da3e                	sw	a5,52(sp)
2040462c:	d842                	sw	a6,48(sp)
2040462e:	d646                	sw	a7,44(sp)
20404630:	d472                	sw	t3,40(sp)
20404632:	d276                	sw	t4,36(sp)
20404634:	d07a                	sw	t5,32(sp)
20404636:	ce7e                	sw	t6,28(sp)
20404638:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2040463a:	e00ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
2040463e:	872a                	mv	a4,a0
20404640:	800007b7          	lui	a5,0x80000
20404644:	070a                	slli	a4,a4,0x2
20404646:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
2040464a:	97ba                	add	a5,a5,a4
2040464c:	439c                	lw	a5,0(a5)
2040464e:	faf42623          	sw	a5,-84(s0)
20404652:	fac42783          	lw	a5,-84(s0)
20404656:	c78d                	beqz	a5,20404680 <metal_lc7_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20404658:	fac42503          	lw	a0,-84(s0)
2040465c:	d60ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404660:	faa42423          	sw	a0,-88(s0)
20404664:	fa842783          	lw	a5,-88(s0)
20404668:	2c07a783          	lw	a5,704(a5)
2040466c:	faf42223          	sw	a5,-92(s0)
20404670:	fa842783          	lw	a5,-88(s0)
20404674:	2b87a783          	lw	a5,696(a5)
20404678:	fa442583          	lw	a1,-92(s0)
2040467c:	455d                	li	a0,23
2040467e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:251
}
20404680:	0001                	nop
20404682:	40f6                	lw	ra,92(sp)
20404684:	42e6                	lw	t0,88(sp)
20404686:	4356                	lw	t1,84(sp)
20404688:	43c6                	lw	t2,80(sp)
2040468a:	4436                	lw	s0,76(sp)
2040468c:	4526                	lw	a0,72(sp)
2040468e:	4596                	lw	a1,68(sp)
20404690:	4606                	lw	a2,64(sp)
20404692:	56f2                	lw	a3,60(sp)
20404694:	5762                	lw	a4,56(sp)
20404696:	57d2                	lw	a5,52(sp)
20404698:	5842                	lw	a6,48(sp)
2040469a:	58b2                	lw	a7,44(sp)
2040469c:	5e22                	lw	t3,40(sp)
2040469e:	5e92                	lw	t4,36(sp)
204046a0:	5f02                	lw	t5,32(sp)
204046a2:	4ff2                	lw	t6,28(sp)
204046a4:	6125                	addi	sp,sp,96
204046a6:	30200073          	mret

204046aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
204046aa:	711d                	addi	sp,sp,-96
204046ac:	ce86                	sw	ra,92(sp)
204046ae:	cc96                	sw	t0,88(sp)
204046b0:	ca9a                	sw	t1,84(sp)
204046b2:	c89e                	sw	t2,80(sp)
204046b4:	c6a2                	sw	s0,76(sp)
204046b6:	c4aa                	sw	a0,72(sp)
204046b8:	c2ae                	sw	a1,68(sp)
204046ba:	c0b2                	sw	a2,64(sp)
204046bc:	de36                	sw	a3,60(sp)
204046be:	dc3a                	sw	a4,56(sp)
204046c0:	da3e                	sw	a5,52(sp)
204046c2:	d842                	sw	a6,48(sp)
204046c4:	d646                	sw	a7,44(sp)
204046c6:	d472                	sw	t3,40(sp)
204046c8:	d276                	sw	t4,36(sp)
204046ca:	d07a                	sw	t5,32(sp)
204046cc:	ce7e                	sw	t6,28(sp)
204046ce:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
204046d0:	d6aff0ef          	jal	ra,20403c3a <__metal_myhart_id>
204046d4:	872a                	mv	a4,a0
204046d6:	800007b7          	lui	a5,0x80000
204046da:	070a                	slli	a4,a4,0x2
204046dc:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
204046e0:	97ba                	add	a5,a5,a4
204046e2:	439c                	lw	a5,0(a5)
204046e4:	faf42623          	sw	a5,-84(s0)
204046e8:	fac42783          	lw	a5,-84(s0)
204046ec:	c78d                	beqz	a5,20404716 <metal_lc8_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
204046ee:	fac42503          	lw	a0,-84(s0)
204046f2:	ccaff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204046f6:	faa42423          	sw	a0,-88(s0)
204046fa:	fa842783          	lw	a5,-88(s0)
204046fe:	2d87a783          	lw	a5,728(a5)
20404702:	faf42223          	sw	a5,-92(s0)
20404706:	fa842783          	lw	a5,-88(s0)
2040470a:	2d07a783          	lw	a5,720(a5)
2040470e:	fa442583          	lw	a1,-92(s0)
20404712:	4561                	li	a0,24
20404714:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404716:	0001                	nop
20404718:	40f6                	lw	ra,92(sp)
2040471a:	42e6                	lw	t0,88(sp)
2040471c:	4356                	lw	t1,84(sp)
2040471e:	43c6                	lw	t2,80(sp)
20404720:	4436                	lw	s0,76(sp)
20404722:	4526                	lw	a0,72(sp)
20404724:	4596                	lw	a1,68(sp)
20404726:	4606                	lw	a2,64(sp)
20404728:	56f2                	lw	a3,60(sp)
2040472a:	5762                	lw	a4,56(sp)
2040472c:	57d2                	lw	a5,52(sp)
2040472e:	5842                	lw	a6,48(sp)
20404730:	58b2                	lw	a7,44(sp)
20404732:	5e22                	lw	t3,40(sp)
20404734:	5e92                	lw	t4,36(sp)
20404736:	5f02                	lw	t5,32(sp)
20404738:	4ff2                	lw	t6,28(sp)
2040473a:	6125                	addi	sp,sp,96
2040473c:	30200073          	mret

20404740 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20404740:	711d                	addi	sp,sp,-96
20404742:	ce86                	sw	ra,92(sp)
20404744:	cc96                	sw	t0,88(sp)
20404746:	ca9a                	sw	t1,84(sp)
20404748:	c89e                	sw	t2,80(sp)
2040474a:	c6a2                	sw	s0,76(sp)
2040474c:	c4aa                	sw	a0,72(sp)
2040474e:	c2ae                	sw	a1,68(sp)
20404750:	c0b2                	sw	a2,64(sp)
20404752:	de36                	sw	a3,60(sp)
20404754:	dc3a                	sw	a4,56(sp)
20404756:	da3e                	sw	a5,52(sp)
20404758:	d842                	sw	a6,48(sp)
2040475a:	d646                	sw	a7,44(sp)
2040475c:	d472                	sw	t3,40(sp)
2040475e:	d276                	sw	t4,36(sp)
20404760:	d07a                	sw	t5,32(sp)
20404762:	ce7e                	sw	t6,28(sp)
20404764:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20404766:	cd4ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
2040476a:	872a                	mv	a4,a0
2040476c:	800007b7          	lui	a5,0x80000
20404770:	070a                	slli	a4,a4,0x2
20404772:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20404776:	97ba                	add	a5,a5,a4
20404778:	439c                	lw	a5,0(a5)
2040477a:	faf42623          	sw	a5,-84(s0)
2040477e:	fac42783          	lw	a5,-84(s0)
20404782:	c78d                	beqz	a5,204047ac <metal_lc9_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404784:	fac42503          	lw	a0,-84(s0)
20404788:	c34ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
2040478c:	faa42423          	sw	a0,-88(s0)
20404790:	fa842783          	lw	a5,-88(s0)
20404794:	2f07a783          	lw	a5,752(a5)
20404798:	faf42223          	sw	a5,-92(s0)
2040479c:	fa842783          	lw	a5,-88(s0)
204047a0:	2e87a783          	lw	a5,744(a5)
204047a4:	fa442583          	lw	a1,-92(s0)
204047a8:	4565                	li	a0,25
204047aa:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:261
}
204047ac:	0001                	nop
204047ae:	40f6                	lw	ra,92(sp)
204047b0:	42e6                	lw	t0,88(sp)
204047b2:	4356                	lw	t1,84(sp)
204047b4:	43c6                	lw	t2,80(sp)
204047b6:	4436                	lw	s0,76(sp)
204047b8:	4526                	lw	a0,72(sp)
204047ba:	4596                	lw	a1,68(sp)
204047bc:	4606                	lw	a2,64(sp)
204047be:	56f2                	lw	a3,60(sp)
204047c0:	5762                	lw	a4,56(sp)
204047c2:	57d2                	lw	a5,52(sp)
204047c4:	5842                	lw	a6,48(sp)
204047c6:	58b2                	lw	a7,44(sp)
204047c8:	5e22                	lw	t3,40(sp)
204047ca:	5e92                	lw	t4,36(sp)
204047cc:	5f02                	lw	t5,32(sp)
204047ce:	4ff2                	lw	t6,28(sp)
204047d0:	6125                	addi	sp,sp,96
204047d2:	30200073          	mret

204047d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
204047d6:	711d                	addi	sp,sp,-96
204047d8:	ce86                	sw	ra,92(sp)
204047da:	cc96                	sw	t0,88(sp)
204047dc:	ca9a                	sw	t1,84(sp)
204047de:	c89e                	sw	t2,80(sp)
204047e0:	c6a2                	sw	s0,76(sp)
204047e2:	c4aa                	sw	a0,72(sp)
204047e4:	c2ae                	sw	a1,68(sp)
204047e6:	c0b2                	sw	a2,64(sp)
204047e8:	de36                	sw	a3,60(sp)
204047ea:	dc3a                	sw	a4,56(sp)
204047ec:	da3e                	sw	a5,52(sp)
204047ee:	d842                	sw	a6,48(sp)
204047f0:	d646                	sw	a7,44(sp)
204047f2:	d472                	sw	t3,40(sp)
204047f4:	d276                	sw	t4,36(sp)
204047f6:	d07a                	sw	t5,32(sp)
204047f8:	ce7e                	sw	t6,28(sp)
204047fa:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
204047fc:	c3eff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20404800:	872a                	mv	a4,a0
20404802:	800007b7          	lui	a5,0x80000
20404806:	070a                	slli	a4,a4,0x2
20404808:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
2040480c:	97ba                	add	a5,a5,a4
2040480e:	439c                	lw	a5,0(a5)
20404810:	faf42623          	sw	a5,-84(s0)
20404814:	fac42783          	lw	a5,-84(s0)
20404818:	c78d                	beqz	a5,20404842 <metal_lc10_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040481a:	fac42503          	lw	a0,-84(s0)
2040481e:	b9eff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404822:	faa42423          	sw	a0,-88(s0)
20404826:	fa842783          	lw	a5,-88(s0)
2040482a:	3087a783          	lw	a5,776(a5)
2040482e:	faf42223          	sw	a5,-92(s0)
20404832:	fa842783          	lw	a5,-88(s0)
20404836:	3007a783          	lw	a5,768(a5)
2040483a:	fa442583          	lw	a1,-92(s0)
2040483e:	4569                	li	a0,26
20404840:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:267
}
20404842:	0001                	nop
20404844:	40f6                	lw	ra,92(sp)
20404846:	42e6                	lw	t0,88(sp)
20404848:	4356                	lw	t1,84(sp)
2040484a:	43c6                	lw	t2,80(sp)
2040484c:	4436                	lw	s0,76(sp)
2040484e:	4526                	lw	a0,72(sp)
20404850:	4596                	lw	a1,68(sp)
20404852:	4606                	lw	a2,64(sp)
20404854:	56f2                	lw	a3,60(sp)
20404856:	5762                	lw	a4,56(sp)
20404858:	57d2                	lw	a5,52(sp)
2040485a:	5842                	lw	a6,48(sp)
2040485c:	58b2                	lw	a7,44(sp)
2040485e:	5e22                	lw	t3,40(sp)
20404860:	5e92                	lw	t4,36(sp)
20404862:	5f02                	lw	t5,32(sp)
20404864:	4ff2                	lw	t6,28(sp)
20404866:	6125                	addi	sp,sp,96
20404868:	30200073          	mret

2040486c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
2040486c:	711d                	addi	sp,sp,-96
2040486e:	ce86                	sw	ra,92(sp)
20404870:	cc96                	sw	t0,88(sp)
20404872:	ca9a                	sw	t1,84(sp)
20404874:	c89e                	sw	t2,80(sp)
20404876:	c6a2                	sw	s0,76(sp)
20404878:	c4aa                	sw	a0,72(sp)
2040487a:	c2ae                	sw	a1,68(sp)
2040487c:	c0b2                	sw	a2,64(sp)
2040487e:	de36                	sw	a3,60(sp)
20404880:	dc3a                	sw	a4,56(sp)
20404882:	da3e                	sw	a5,52(sp)
20404884:	d842                	sw	a6,48(sp)
20404886:	d646                	sw	a7,44(sp)
20404888:	d472                	sw	t3,40(sp)
2040488a:	d276                	sw	t4,36(sp)
2040488c:	d07a                	sw	t5,32(sp)
2040488e:	ce7e                	sw	t6,28(sp)
20404890:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404892:	ba8ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20404896:	872a                	mv	a4,a0
20404898:	800007b7          	lui	a5,0x80000
2040489c:	070a                	slli	a4,a4,0x2
2040489e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
204048a2:	97ba                	add	a5,a5,a4
204048a4:	439c                	lw	a5,0(a5)
204048a6:	faf42623          	sw	a5,-84(s0)
204048aa:	fac42783          	lw	a5,-84(s0)
204048ae:	c78d                	beqz	a5,204048d8 <metal_lc11_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
204048b0:	fac42503          	lw	a0,-84(s0)
204048b4:	b08ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204048b8:	faa42423          	sw	a0,-88(s0)
204048bc:	fa842783          	lw	a5,-88(s0)
204048c0:	3207a783          	lw	a5,800(a5)
204048c4:	faf42223          	sw	a5,-92(s0)
204048c8:	fa842783          	lw	a5,-88(s0)
204048cc:	3187a783          	lw	a5,792(a5)
204048d0:	fa442583          	lw	a1,-92(s0)
204048d4:	456d                	li	a0,27
204048d6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:273
}
204048d8:	0001                	nop
204048da:	40f6                	lw	ra,92(sp)
204048dc:	42e6                	lw	t0,88(sp)
204048de:	4356                	lw	t1,84(sp)
204048e0:	43c6                	lw	t2,80(sp)
204048e2:	4436                	lw	s0,76(sp)
204048e4:	4526                	lw	a0,72(sp)
204048e6:	4596                	lw	a1,68(sp)
204048e8:	4606                	lw	a2,64(sp)
204048ea:	56f2                	lw	a3,60(sp)
204048ec:	5762                	lw	a4,56(sp)
204048ee:	57d2                	lw	a5,52(sp)
204048f0:	5842                	lw	a6,48(sp)
204048f2:	58b2                	lw	a7,44(sp)
204048f4:	5e22                	lw	t3,40(sp)
204048f6:	5e92                	lw	t4,36(sp)
204048f8:	5f02                	lw	t5,32(sp)
204048fa:	4ff2                	lw	t6,28(sp)
204048fc:	6125                	addi	sp,sp,96
204048fe:	30200073          	mret

20404902 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404902:	711d                	addi	sp,sp,-96
20404904:	ce86                	sw	ra,92(sp)
20404906:	cc96                	sw	t0,88(sp)
20404908:	ca9a                	sw	t1,84(sp)
2040490a:	c89e                	sw	t2,80(sp)
2040490c:	c6a2                	sw	s0,76(sp)
2040490e:	c4aa                	sw	a0,72(sp)
20404910:	c2ae                	sw	a1,68(sp)
20404912:	c0b2                	sw	a2,64(sp)
20404914:	de36                	sw	a3,60(sp)
20404916:	dc3a                	sw	a4,56(sp)
20404918:	da3e                	sw	a5,52(sp)
2040491a:	d842                	sw	a6,48(sp)
2040491c:	d646                	sw	a7,44(sp)
2040491e:	d472                	sw	t3,40(sp)
20404920:	d276                	sw	t4,36(sp)
20404922:	d07a                	sw	t5,32(sp)
20404924:	ce7e                	sw	t6,28(sp)
20404926:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20404928:	b12ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
2040492c:	872a                	mv	a4,a0
2040492e:	800007b7          	lui	a5,0x80000
20404932:	070a                	slli	a4,a4,0x2
20404934:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20404938:	97ba                	add	a5,a5,a4
2040493a:	439c                	lw	a5,0(a5)
2040493c:	faf42623          	sw	a5,-84(s0)
20404940:	fac42783          	lw	a5,-84(s0)
20404944:	c78d                	beqz	a5,2040496e <metal_lc12_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20404946:	fac42503          	lw	a0,-84(s0)
2040494a:	a72ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
2040494e:	faa42423          	sw	a0,-88(s0)
20404952:	fa842783          	lw	a5,-88(s0)
20404956:	3387a783          	lw	a5,824(a5)
2040495a:	faf42223          	sw	a5,-92(s0)
2040495e:	fa842783          	lw	a5,-88(s0)
20404962:	3307a783          	lw	a5,816(a5)
20404966:	fa442583          	lw	a1,-92(s0)
2040496a:	4571                	li	a0,28
2040496c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:279
}
2040496e:	0001                	nop
20404970:	40f6                	lw	ra,92(sp)
20404972:	42e6                	lw	t0,88(sp)
20404974:	4356                	lw	t1,84(sp)
20404976:	43c6                	lw	t2,80(sp)
20404978:	4436                	lw	s0,76(sp)
2040497a:	4526                	lw	a0,72(sp)
2040497c:	4596                	lw	a1,68(sp)
2040497e:	4606                	lw	a2,64(sp)
20404980:	56f2                	lw	a3,60(sp)
20404982:	5762                	lw	a4,56(sp)
20404984:	57d2                	lw	a5,52(sp)
20404986:	5842                	lw	a6,48(sp)
20404988:	58b2                	lw	a7,44(sp)
2040498a:	5e22                	lw	t3,40(sp)
2040498c:	5e92                	lw	t4,36(sp)
2040498e:	5f02                	lw	t5,32(sp)
20404990:	4ff2                	lw	t6,28(sp)
20404992:	6125                	addi	sp,sp,96
20404994:	30200073          	mret

20404998 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404998:	711d                	addi	sp,sp,-96
2040499a:	ce86                	sw	ra,92(sp)
2040499c:	cc96                	sw	t0,88(sp)
2040499e:	ca9a                	sw	t1,84(sp)
204049a0:	c89e                	sw	t2,80(sp)
204049a2:	c6a2                	sw	s0,76(sp)
204049a4:	c4aa                	sw	a0,72(sp)
204049a6:	c2ae                	sw	a1,68(sp)
204049a8:	c0b2                	sw	a2,64(sp)
204049aa:	de36                	sw	a3,60(sp)
204049ac:	dc3a                	sw	a4,56(sp)
204049ae:	da3e                	sw	a5,52(sp)
204049b0:	d842                	sw	a6,48(sp)
204049b2:	d646                	sw	a7,44(sp)
204049b4:	d472                	sw	t3,40(sp)
204049b6:	d276                	sw	t4,36(sp)
204049b8:	d07a                	sw	t5,32(sp)
204049ba:	ce7e                	sw	t6,28(sp)
204049bc:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
204049be:	a7cff0ef          	jal	ra,20403c3a <__metal_myhart_id>
204049c2:	872a                	mv	a4,a0
204049c4:	800007b7          	lui	a5,0x80000
204049c8:	070a                	slli	a4,a4,0x2
204049ca:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
204049ce:	97ba                	add	a5,a5,a4
204049d0:	439c                	lw	a5,0(a5)
204049d2:	faf42623          	sw	a5,-84(s0)
204049d6:	fac42783          	lw	a5,-84(s0)
204049da:	c78d                	beqz	a5,20404a04 <metal_lc13_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
204049dc:	fac42503          	lw	a0,-84(s0)
204049e0:	9dcff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204049e4:	faa42423          	sw	a0,-88(s0)
204049e8:	fa842783          	lw	a5,-88(s0)
204049ec:	3507a783          	lw	a5,848(a5)
204049f0:	faf42223          	sw	a5,-92(s0)
204049f4:	fa842783          	lw	a5,-88(s0)
204049f8:	3487a783          	lw	a5,840(a5)
204049fc:	fa442583          	lw	a1,-92(s0)
20404a00:	4575                	li	a0,29
20404a02:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404a04:	0001                	nop
20404a06:	40f6                	lw	ra,92(sp)
20404a08:	42e6                	lw	t0,88(sp)
20404a0a:	4356                	lw	t1,84(sp)
20404a0c:	43c6                	lw	t2,80(sp)
20404a0e:	4436                	lw	s0,76(sp)
20404a10:	4526                	lw	a0,72(sp)
20404a12:	4596                	lw	a1,68(sp)
20404a14:	4606                	lw	a2,64(sp)
20404a16:	56f2                	lw	a3,60(sp)
20404a18:	5762                	lw	a4,56(sp)
20404a1a:	57d2                	lw	a5,52(sp)
20404a1c:	5842                	lw	a6,48(sp)
20404a1e:	58b2                	lw	a7,44(sp)
20404a20:	5e22                	lw	t3,40(sp)
20404a22:	5e92                	lw	t4,36(sp)
20404a24:	5f02                	lw	t5,32(sp)
20404a26:	4ff2                	lw	t6,28(sp)
20404a28:	6125                	addi	sp,sp,96
20404a2a:	30200073          	mret

20404a2e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
20404a2e:	711d                	addi	sp,sp,-96
20404a30:	ce86                	sw	ra,92(sp)
20404a32:	cc96                	sw	t0,88(sp)
20404a34:	ca9a                	sw	t1,84(sp)
20404a36:	c89e                	sw	t2,80(sp)
20404a38:	c6a2                	sw	s0,76(sp)
20404a3a:	c4aa                	sw	a0,72(sp)
20404a3c:	c2ae                	sw	a1,68(sp)
20404a3e:	c0b2                	sw	a2,64(sp)
20404a40:	de36                	sw	a3,60(sp)
20404a42:	dc3a                	sw	a4,56(sp)
20404a44:	da3e                	sw	a5,52(sp)
20404a46:	d842                	sw	a6,48(sp)
20404a48:	d646                	sw	a7,44(sp)
20404a4a:	d472                	sw	t3,40(sp)
20404a4c:	d276                	sw	t4,36(sp)
20404a4e:	d07a                	sw	t5,32(sp)
20404a50:	ce7e                	sw	t6,28(sp)
20404a52:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20404a54:	9e6ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20404a58:	872a                	mv	a4,a0
20404a5a:	800007b7          	lui	a5,0x80000
20404a5e:	070a                	slli	a4,a4,0x2
20404a60:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20404a64:	97ba                	add	a5,a5,a4
20404a66:	439c                	lw	a5,0(a5)
20404a68:	faf42623          	sw	a5,-84(s0)
20404a6c:	fac42783          	lw	a5,-84(s0)
20404a70:	c78d                	beqz	a5,20404a9a <metal_lc14_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20404a72:	fac42503          	lw	a0,-84(s0)
20404a76:	946ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404a7a:	faa42423          	sw	a0,-88(s0)
20404a7e:	fa842783          	lw	a5,-88(s0)
20404a82:	3687a783          	lw	a5,872(a5)
20404a86:	faf42223          	sw	a5,-92(s0)
20404a8a:	fa842783          	lw	a5,-88(s0)
20404a8e:	3607a783          	lw	a5,864(a5)
20404a92:	fa442583          	lw	a1,-92(s0)
20404a96:	4579                	li	a0,30
20404a98:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:291
}
20404a9a:	0001                	nop
20404a9c:	40f6                	lw	ra,92(sp)
20404a9e:	42e6                	lw	t0,88(sp)
20404aa0:	4356                	lw	t1,84(sp)
20404aa2:	43c6                	lw	t2,80(sp)
20404aa4:	4436                	lw	s0,76(sp)
20404aa6:	4526                	lw	a0,72(sp)
20404aa8:	4596                	lw	a1,68(sp)
20404aaa:	4606                	lw	a2,64(sp)
20404aac:	56f2                	lw	a3,60(sp)
20404aae:	5762                	lw	a4,56(sp)
20404ab0:	57d2                	lw	a5,52(sp)
20404ab2:	5842                	lw	a6,48(sp)
20404ab4:	58b2                	lw	a7,44(sp)
20404ab6:	5e22                	lw	t3,40(sp)
20404ab8:	5e92                	lw	t4,36(sp)
20404aba:	5f02                	lw	t5,32(sp)
20404abc:	4ff2                	lw	t6,28(sp)
20404abe:	6125                	addi	sp,sp,96
20404ac0:	30200073          	mret

20404ac4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20404ac4:	711d                	addi	sp,sp,-96
20404ac6:	ce86                	sw	ra,92(sp)
20404ac8:	cc96                	sw	t0,88(sp)
20404aca:	ca9a                	sw	t1,84(sp)
20404acc:	c89e                	sw	t2,80(sp)
20404ace:	c6a2                	sw	s0,76(sp)
20404ad0:	c4aa                	sw	a0,72(sp)
20404ad2:	c2ae                	sw	a1,68(sp)
20404ad4:	c0b2                	sw	a2,64(sp)
20404ad6:	de36                	sw	a3,60(sp)
20404ad8:	dc3a                	sw	a4,56(sp)
20404ada:	da3e                	sw	a5,52(sp)
20404adc:	d842                	sw	a6,48(sp)
20404ade:	d646                	sw	a7,44(sp)
20404ae0:	d472                	sw	t3,40(sp)
20404ae2:	d276                	sw	t4,36(sp)
20404ae4:	d07a                	sw	t5,32(sp)
20404ae6:	ce7e                	sw	t6,28(sp)
20404ae8:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
20404aea:	950ff0ef          	jal	ra,20403c3a <__metal_myhart_id>
20404aee:	872a                	mv	a4,a0
20404af0:	800007b7          	lui	a5,0x80000
20404af4:	070a                	slli	a4,a4,0x2
20404af6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe798>
20404afa:	97ba                	add	a5,a5,a4
20404afc:	439c                	lw	a5,0(a5)
20404afe:	faf42623          	sw	a5,-84(s0)
20404b02:	fac42783          	lw	a5,-84(s0)
20404b06:	c78d                	beqz	a5,20404b30 <metal_lc15_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404b08:	fac42503          	lw	a0,-84(s0)
20404b0c:	8b0ff0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20404b10:	faa42423          	sw	a0,-88(s0)
20404b14:	fa842783          	lw	a5,-88(s0)
20404b18:	3807a783          	lw	a5,896(a5)
20404b1c:	faf42223          	sw	a5,-92(s0)
20404b20:	fa842783          	lw	a5,-88(s0)
20404b24:	3787a783          	lw	a5,888(a5)
20404b28:	fa442583          	lw	a1,-92(s0)
20404b2c:	457d                	li	a0,31
20404b2e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:297
}
20404b30:	0001                	nop
20404b32:	40f6                	lw	ra,92(sp)
20404b34:	42e6                	lw	t0,88(sp)
20404b36:	4356                	lw	t1,84(sp)
20404b38:	43c6                	lw	t2,80(sp)
20404b3a:	4436                	lw	s0,76(sp)
20404b3c:	4526                	lw	a0,72(sp)
20404b3e:	4596                	lw	a1,68(sp)
20404b40:	4606                	lw	a2,64(sp)
20404b42:	56f2                	lw	a3,60(sp)
20404b44:	5762                	lw	a4,56(sp)
20404b46:	57d2                	lw	a5,52(sp)
20404b48:	5842                	lw	a6,48(sp)
20404b4a:	58b2                	lw	a7,44(sp)
20404b4c:	5e22                	lw	t3,40(sp)
20404b4e:	5e92                	lw	t4,36(sp)
20404b50:	5f02                	lw	t5,32(sp)
20404b52:	4ff2                	lw	t6,28(sp)
20404b54:	6125                	addi	sp,sp,96
20404b56:	30200073          	mret

20404b5a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
20404b5a:	1101                	addi	sp,sp,-32
20404b5c:	ce22                	sw	s0,28(sp)
20404b5e:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404b60:	305027f3          	csrr	a5,mtvec
20404b64:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20404b68:	fec42783          	lw	a5,-20(s0)
20404b6c:	03f7f793          	andi	a5,a5,63
20404b70:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20404b74:	fec42703          	lw	a4,-20(s0)
20404b78:	478d                	li	a5,3
20404b7a:	02f70363          	beq	a4,a5,20404ba0 <__metal_controller_interrupt_vector_mode+0x46>
20404b7e:	fec42703          	lw	a4,-20(s0)
20404b82:	478d                	li	a5,3
20404b84:	02e7e263          	bltu	a5,a4,20404ba8 <__metal_controller_interrupt_vector_mode+0x4e>
20404b88:	fec42703          	lw	a4,-20(s0)
20404b8c:	4785                	li	a5,1
20404b8e:	00f70b63          	beq	a4,a5,20404ba4 <__metal_controller_interrupt_vector_mode+0x4a>
20404b92:	fec42703          	lw	a4,-20(s0)
20404b96:	4789                	li	a5,2
20404b98:	00f71863          	bne	a4,a5,20404ba8 <__metal_controller_interrupt_vector_mode+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
20404b9c:	478d                	li	a5,3
20404b9e:	a031                	j	20404baa <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20404ba0:	4791                	li	a5,4
20404ba2:	a021                	j	20404baa <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20404ba4:	4785                	li	a5,1
20404ba6:	a011                	j	20404baa <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20404ba8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:314
}
20404baa:	853e                	mv	a0,a5
20404bac:	4472                	lw	s0,28(sp)
20404bae:	6105                	addi	sp,sp,32
20404bb0:	8082                	ret

20404bb2 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20404bb2:	7179                	addi	sp,sp,-48
20404bb4:	d622                	sw	s0,44(sp)
20404bb6:	1800                	addi	s0,sp,48
20404bb8:	fca42e23          	sw	a0,-36(s0)
20404bbc:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404bc0:	305027f3          	csrr	a5,mtvec
20404bc4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20404bc8:	fec42783          	lw	a5,-20(s0)
20404bcc:	fc07f793          	andi	a5,a5,-64
20404bd0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20404bd4:	fd842783          	lw	a5,-40(s0)
20404bd8:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
20404bdc:	fdc42703          	lw	a4,-36(s0)
20404be0:	4791                	li	a5,4
20404be2:	04f70563          	beq	a4,a5,20404c2c <__metal_controller_interrupt_vector+0x7a>
20404be6:	fdc42703          	lw	a4,-36(s0)
20404bea:	4791                	li	a5,4
20404bec:	06e7e863          	bltu	a5,a4,20404c5c <__metal_controller_interrupt_vector+0xaa>
20404bf0:	fdc42703          	lw	a4,-36(s0)
20404bf4:	478d                	li	a5,3
20404bf6:	06e7e363          	bltu	a5,a4,20404c5c <__metal_controller_interrupt_vector+0xaa>
20404bfa:	fdc42703          	lw	a4,-36(s0)
20404bfe:	4789                	li	a5,2
20404c00:	00f77b63          	bgeu	a4,a5,20404c16 <__metal_controller_interrupt_vector+0x64>
20404c04:	fdc42783          	lw	a5,-36(s0)
20404c08:	c7a1                	beqz	a5,20404c50 <__metal_controller_interrupt_vector+0x9e>
20404c0a:	fdc42703          	lw	a4,-36(s0)
20404c0e:	4785                	li	a5,1
20404c10:	02f70963          	beq	a4,a5,20404c42 <__metal_controller_interrupt_vector+0x90>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404c14:	a0a1                	j	20404c5c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404c16:	fe842783          	lw	a5,-24(s0)
20404c1a:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
20404c1e:	fec42783          	lw	a5,-20(s0)
20404c22:	0027e793          	ori	a5,a5,2
20404c26:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
20404c2a:	a80d                	j	20404c5c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404c2c:	fe842783          	lw	a5,-24(s0)
20404c30:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20404c34:	fec42783          	lw	a5,-20(s0)
20404c38:	0037e793          	ori	a5,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
20404c3c:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20404c40:	a831                	j	20404c5c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20404c42:	fe842783          	lw	a5,-24(s0)
20404c46:	0017e793          	ori	a5,a5,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
20404c4a:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
20404c4e:	a039                	j	20404c5c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20404c50:	fe842783          	lw	a5,-24(s0)
20404c54:	9bf1                	andi	a5,a5,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20404c56:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
20404c5a:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:344
}
20404c5c:	0001                	nop
20404c5e:	5432                	lw	s0,44(sp)
20404c60:	6145                	addi	sp,sp,48
20404c62:	8082                	ret

20404c64 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20404c64:	1101                	addi	sp,sp,-32
20404c66:	ce22                	sw	s0,28(sp)
20404c68:	1000                	addi	s0,sp,32
20404c6a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404c6e:	fec42703          	lw	a4,-20(s0)
20404c72:	47fd                	li	a5,31
20404c74:	02e7c663          	blt	a5,a4,20404ca0 <__metal_valid_interrupt_id+0x3c>
20404c78:	fec42703          	lw	a4,-20(s0)
20404c7c:	478d                	li	a5,3
20404c7e:	02f74963          	blt	a4,a5,20404cb0 <__metal_valid_interrupt_id+0x4c>
20404c82:	fec42783          	lw	a5,-20(s0)
20404c86:	4705                	li	a4,1
20404c88:	00f71733          	sll	a4,a4,a5
20404c8c:	77c5                	lui	a5,0xffff1
20404c8e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffee878>
20404c92:	8ff9                	and	a5,a5,a4
20404c94:	00f037b3          	snez	a5,a5
20404c98:	0ff7f793          	zext.b	a5,a5
20404c9c:	eb81                	bnez	a5,20404cac <__metal_valid_interrupt_id+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20404c9e:	a809                	j	20404cb0 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404ca0:	fec42703          	lw	a4,-20(s0)
20404ca4:	08000793          	li	a5,128
20404ca8:	00f71463          	bne	a4,a5,20404cb0 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20404cac:	4785                	li	a5,1
20404cae:	a019                	j	20404cb4 <__metal_valid_interrupt_id+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20404cb0:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20404cb2:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:374
}
20404cb4:	853e                	mv	a0,a5
20404cb6:	4472                	lw	s0,28(sp)
20404cb8:	6105                	addi	sp,sp,32
20404cba:	8082                	ret

20404cbc <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20404cbc:	7179                	addi	sp,sp,-48
20404cbe:	d606                	sw	ra,44(sp)
20404cc0:	d422                	sw	s0,40(sp)
20404cc2:	1800                	addi	s0,sp,48
20404cc4:	fca42e23          	sw	a0,-36(s0)
20404cc8:	fcb42c23          	sw	a1,-40(s0)
20404ccc:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20404cd0:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20404cd4:	fdc42783          	lw	a5,-36(s0)
20404cd8:	e399                	bnez	a5,20404cde <__metal_local_interrupt_enable+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20404cda:	57fd                	li	a5,-1
20404cdc:	a849                	j	20404d6e <__metal_local_interrupt_enable+0xb2>
20404cde:	fd842703          	lw	a4,-40(s0)
20404ce2:	47fd                	li	a5,31
20404ce4:	08e7e063          	bltu	a5,a4,20404d64 <__metal_local_interrupt_enable+0xa8>
20404ce8:	fd842783          	lw	a5,-40(s0)
20404cec:	00279713          	slli	a4,a5,0x2
20404cf0:	204007b7          	lui	a5,0x20400
20404cf4:	54c78793          	addi	a5,a5,1356 # 2040054c <__metal_driver_vtable_riscv_clint0+0x64>
20404cf8:	97ba                	add	a5,a5,a4
20404cfa:	439c                	lw	a5,0(a5)
20404cfc:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20404cfe:	fd442783          	lw	a5,-44(s0)
20404d02:	c781                	beqz	a5,20404d0a <__metal_local_interrupt_enable+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404d04:	f51fe0ef          	jal	ra,20403c54 <__metal_interrupt_global_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404d08:	a08d                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20404d0a:	f63fe0ef          	jal	ra,20403c6c <__metal_interrupt_global_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20404d0e:	a8b1                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404d10:	fd442783          	lw	a5,-44(s0)
20404d14:	c781                	beqz	a5,20404d1c <__metal_local_interrupt_enable+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404d16:	f6ffe0ef          	jal	ra,20403c84 <__metal_interrupt_software_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20404d1a:	a881                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20404d1c:	f81fe0ef          	jal	ra,20403c9c <__metal_interrupt_software_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20404d20:	a0a9                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20404d22:	fd442783          	lw	a5,-44(s0)
20404d26:	c781                	beqz	a5,20404d2e <__metal_local_interrupt_enable+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20404d28:	f8dfe0ef          	jal	ra,20403cb4 <__metal_interrupt_timer_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20404d2c:	a83d                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20404d2e:	fa1fe0ef          	jal	ra,20403cce <__metal_interrupt_timer_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20404d32:	a825                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20404d34:	fd442783          	lw	a5,-44(s0)
20404d38:	c781                	beqz	a5,20404d40 <__metal_local_interrupt_enable+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20404d3a:	faffe0ef          	jal	ra,20403ce8 <__metal_interrupt_external_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20404d3e:	a035                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20404d40:	fc5fe0ef          	jal	ra,20403d04 <__metal_interrupt_external_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20404d44:	a01d                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20404d46:	fd442783          	lw	a5,-44(s0)
20404d4a:	c799                	beqz	a5,20404d58 <__metal_local_interrupt_enable+0x9c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20404d4c:	fd842783          	lw	a5,-40(s0)
20404d50:	853e                	mv	a0,a5
20404d52:	fcffe0ef          	jal	ra,20403d20 <__metal_interrupt_local_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20404d56:	a811                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20404d58:	fd842783          	lw	a5,-40(s0)
20404d5c:	853e                	mv	a0,a5
20404d5e:	feffe0ef          	jal	ra,20403d4c <__metal_interrupt_local_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20404d62:	a021                	j	20404d6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20404d64:	57fd                	li	a5,-1
20404d66:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20404d6a:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:439
}
20404d6e:	853e                	mv	a0,a5
20404d70:	50b2                	lw	ra,44(sp)
20404d72:	5422                	lw	s0,40(sp)
20404d74:	6145                	addi	sp,sp,48
20404d76:	8082                	ret

20404d78 <__metal_exception_register>:
__metal_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20404d78:	7179                	addi	sp,sp,-48
20404d7a:	d622                	sw	s0,44(sp)
20404d7c:	1800                	addi	s0,sp,48
20404d7e:	fca42e23          	sw	a0,-36(s0)
20404d82:	fcb42c23          	sw	a1,-40(s0)
20404d86:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404d8a:	fdc42783          	lw	a5,-36(s0)
20404d8e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404d92:	fd842703          	lw	a4,-40(s0)
20404d96:	47ad                	li	a5,11
20404d98:	02e7c263          	blt	a5,a4,20404dbc <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20404d9c:	fd442783          	lw	a5,-44(s0)
20404da0:	cf91                	beqz	a5,20404dbc <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20404da2:	fec42703          	lw	a4,-20(s0)
20404da6:	fd842783          	lw	a5,-40(s0)
20404daa:	0e878793          	addi	a5,a5,232
20404dae:	078a                	slli	a5,a5,0x2
20404db0:	97ba                	add	a5,a5,a4
20404db2:	fd442703          	lw	a4,-44(s0)
20404db6:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20404db8:	4781                	li	a5,0
20404dba:	a011                	j	20404dbe <__metal_exception_register+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20404dbc:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:450
}
20404dbe:	853e                	mv	a0,a5
20404dc0:	5432                	lw	s0,44(sp)
20404dc2:	6145                	addi	sp,sp,48
20404dc4:	8082                	ret

20404dc6 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20404dc6:	7179                	addi	sp,sp,-48
20404dc8:	d606                	sw	ra,44(sp)
20404dca:	d422                	sw	s0,40(sp)
20404dcc:	1800                	addi	s0,sp,48
20404dce:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404dd2:	fdc42783          	lw	a5,-36(s0)
20404dd6:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20404dda:	fe442783          	lw	a5,-28(s0)
20404dde:	43dc                	lw	a5,4(a5)
20404de0:	e3e1                	bnez	a5,20404ea0 <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404de2:	fe042623          	sw	zero,-20(s0)
20404de6:	a0b9                	j	20404e34 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20404de8:	fe442683          	lw	a3,-28(s0)
20404dec:	fec42703          	lw	a4,-20(s0)
20404df0:	87ba                	mv	a5,a4
20404df2:	0786                	slli	a5,a5,0x1
20404df4:	97ba                	add	a5,a5,a4
20404df6:	078e                	slli	a5,a5,0x3
20404df8:	97b6                	add	a5,a5,a3
20404dfa:	0807a823          	sw	zero,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20404dfe:	fe442683          	lw	a3,-28(s0)
20404e02:	fec42703          	lw	a4,-20(s0)
20404e06:	87ba                	mv	a5,a4
20404e08:	0786                	slli	a5,a5,0x1
20404e0a:	97ba                	add	a5,a5,a4
20404e0c:	078e                	slli	a5,a5,0x3
20404e0e:	97b6                	add	a5,a5,a3
20404e10:	0807aa23          	sw	zero,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404e14:	fe442683          	lw	a3,-28(s0)
20404e18:	fec42703          	lw	a4,-20(s0)
20404e1c:	87ba                	mv	a5,a4
20404e1e:	0786                	slli	a5,a5,0x1
20404e20:	97ba                	add	a5,a5,a4
20404e22:	078e                	slli	a5,a5,0x3
20404e24:	97b6                	add	a5,a5,a3
20404e26:	0807ac23          	sw	zero,152(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404e2a:	fec42783          	lw	a5,-20(s0)
20404e2e:	0785                	addi	a5,a5,1
20404e30:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20404e34:	fec42703          	lw	a4,-20(s0)
20404e38:	47fd                	li	a5,31
20404e3a:	fae7d7e3          	bge	a5,a4,20404de8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20404e3e:	fe042423          	sw	zero,-24(s0)
20404e42:	a01d                	j	20404e68 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20404e44:	fe442703          	lw	a4,-28(s0)
20404e48:	fe842783          	lw	a5,-24(s0)
20404e4c:	0e878793          	addi	a5,a5,232
20404e50:	078a                	slli	a5,a5,0x2
20404e52:	97ba                	add	a5,a5,a4
20404e54:	20404737          	lui	a4,0x20404
20404e58:	d7870713          	addi	a4,a4,-648 # 20403d78 <__metal_default_exception_handler>
20404e5c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20404e5e:	fe842783          	lw	a5,-24(s0)
20404e62:	0785                	addi	a5,a5,1
20404e64:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20404e68:	fe842703          	lw	a4,-24(s0)
20404e6c:	47ad                	li	a5,11
20404e6e:	fce7dbe3          	bge	a5,a4,20404e44 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404e72:	305027f3          	csrr	a5,mtvec
20404e76:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20404e7a:	204007b7          	lui	a5,0x20400
20404e7e:	13878793          	addi	a5,a5,312 # 20400138 <early_trap_vector>
20404e82:	fe042703          	lw	a4,-32(s0)
20404e86:	00f71963          	bne	a4,a5,20404e98 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20404e8a:	204047b7          	lui	a5,0x20404
20404e8e:	00078593          	mv	a1,a5
20404e92:	4501                	li	a0,0
20404e94:	d1fff0ef          	jal	ra,20404bb2 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404e98:	fe442783          	lw	a5,-28(s0)
20404e9c:	4705                	li	a4,1
20404e9e:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20404ea0:	0001                	nop
20404ea2:	50b2                	lw	ra,44(sp)
20404ea4:	5422                	lw	s0,40(sp)
20404ea6:	6145                	addi	sp,sp,48
20404ea8:	8082                	ret

20404eaa <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20404eaa:	7179                	addi	sp,sp,-48
20404eac:	d606                	sw	ra,44(sp)
20404eae:	d422                	sw	s0,40(sp)
20404eb0:	1800                	addi	s0,sp,48
20404eb2:	fca42e23          	sw	a0,-36(s0)
20404eb6:	fcb42c23          	sw	a1,-40(s0)
20404eba:	fcc42a23          	sw	a2,-44(s0)
20404ebe:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20404ec2:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404ec6:	fdc42783          	lw	a5,-36(s0)
20404eca:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20404ece:	fd842503          	lw	a0,-40(s0)
20404ed2:	d93ff0ef          	jal	ra,20404c64 <__metal_valid_interrupt_id>
20404ed6:	87aa                	mv	a5,a0
20404ed8:	e399                	bnez	a5,20404ede <__metal_driver_riscv_cpu_controller_interrupt_register+0x34>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20404eda:	57d5                	li	a5,-11
20404edc:	a265                	j	20405084 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1da>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404ede:	fd842703          	lw	a4,-40(s0)
20404ee2:	08000793          	li	a5,128
20404ee6:	00f71863          	bne	a4,a5,20404ef6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20404eea:	c71ff0ef          	jal	ra,20404b5a <__metal_controller_interrupt_vector_mode>
20404eee:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404ef0:	c399                	beqz	a5,20404ef6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20404ef2:	57cd                	li	a5,-13
20404ef4:	aa41                	j	20405084 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1da>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20404ef6:	fd442783          	lw	a5,-44(s0)
20404efa:	cfb9                	beqz	a5,20404f58 <__metal_driver_riscv_cpu_controller_interrupt_register+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20404efc:	fd842703          	lw	a4,-40(s0)
20404f00:	08000793          	li	a5,128
20404f04:	00f71f63          	bne	a4,a5,20404f22 <__metal_driver_riscv_cpu_controller_interrupt_register+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404f08:	fe842783          	lw	a5,-24(s0)
20404f0c:	fd442703          	lw	a4,-44(s0)
20404f10:	38e7a823          	sw	a4,912(a5) # 20404390 <metal_lc2_interrupt_vector_handler+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20404f14:	fe842783          	lw	a5,-24(s0)
20404f18:	fd042703          	lw	a4,-48(s0)
20404f1c:	38e7ac23          	sw	a4,920(a5)
20404f20:	a285                	j	20405080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20404f22:	fe842683          	lw	a3,-24(s0)
20404f26:	fd842703          	lw	a4,-40(s0)
20404f2a:	87ba                	mv	a5,a4
20404f2c:	0786                	slli	a5,a5,0x1
20404f2e:	97ba                	add	a5,a5,a4
20404f30:	078e                	slli	a5,a5,0x3
20404f32:	97b6                	add	a5,a5,a3
20404f34:	fd442703          	lw	a4,-44(s0)
20404f38:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404f3c:	fe842683          	lw	a3,-24(s0)
20404f40:	fd842703          	lw	a4,-40(s0)
20404f44:	87ba                	mv	a5,a4
20404f46:	0786                	slli	a5,a5,0x1
20404f48:	97ba                	add	a5,a5,a4
20404f4a:	078e                	slli	a5,a5,0x3
20404f4c:	97b6                	add	a5,a5,a3
20404f4e:	fd042703          	lw	a4,-48(s0)
20404f52:	08e7ac23          	sw	a4,152(a5)
20404f56:	a22d                	j	20405080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20404f58:	fd842703          	lw	a4,-40(s0)
20404f5c:	08000793          	li	a5,128
20404f60:	0cf70163          	beq	a4,a5,20405022 <__metal_driver_riscv_cpu_controller_interrupt_register+0x178>
20404f64:	fd842703          	lw	a4,-40(s0)
20404f68:	08000793          	li	a5,128
20404f6c:	10e7c763          	blt	a5,a4,2040507a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
20404f70:	fd842703          	lw	a4,-40(s0)
20404f74:	47fd                	li	a5,31
20404f76:	10e7c263          	blt	a5,a4,2040507a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
20404f7a:	fd842703          	lw	a4,-40(s0)
20404f7e:	47c1                	li	a5,16
20404f80:	0cf75063          	bge	a4,a5,20405040 <__metal_driver_riscv_cpu_controller_interrupt_register+0x196>
20404f84:	fd842703          	lw	a4,-40(s0)
20404f88:	47ad                	li	a5,11
20404f8a:	0af70b63          	beq	a4,a5,20405040 <__metal_driver_riscv_cpu_controller_interrupt_register+0x196>
20404f8e:	fd842703          	lw	a4,-40(s0)
20404f92:	47ad                	li	a5,11
20404f94:	0ee7c363          	blt	a5,a4,2040507a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
20404f98:	fd842703          	lw	a4,-40(s0)
20404f9c:	478d                	li	a5,3
20404f9e:	00f70863          	beq	a4,a5,20404fae <__metal_driver_riscv_cpu_controller_interrupt_register+0x104>
20404fa2:	fd842703          	lw	a4,-40(s0)
20404fa6:	479d                	li	a5,7
20404fa8:	04f70063          	beq	a4,a5,20404fe8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13e>
20404fac:	a0f9                	j	2040507a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20404fae:	fe842683          	lw	a3,-24(s0)
20404fb2:	fd842703          	lw	a4,-40(s0)
20404fb6:	87ba                	mv	a5,a4
20404fb8:	0786                	slli	a5,a5,0x1
20404fba:	97ba                	add	a5,a5,a4
20404fbc:	078e                	slli	a5,a5,0x3
20404fbe:	97b6                	add	a5,a5,a3
20404fc0:	20404737          	lui	a4,0x20404
20404fc4:	e6870713          	addi	a4,a4,-408 # 20403e68 <__metal_default_sw_handler>
20404fc8:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20404fcc:	fe842683          	lw	a3,-24(s0)
20404fd0:	fd842703          	lw	a4,-40(s0)
20404fd4:	87ba                	mv	a5,a4
20404fd6:	0786                	slli	a5,a5,0x1
20404fd8:	97ba                	add	a5,a5,a4
20404fda:	078e                	slli	a5,a5,0x3
20404fdc:	97b6                	add	a5,a5,a3
20404fde:	fd042703          	lw	a4,-48(s0)
20404fe2:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20404fe6:	a869                	j	20405080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20404fe8:	fe842683          	lw	a3,-24(s0)
20404fec:	fd842703          	lw	a4,-40(s0)
20404ff0:	87ba                	mv	a5,a4
20404ff2:	0786                	slli	a5,a5,0x1
20404ff4:	97ba                	add	a5,a5,a4
20404ff6:	078e                	slli	a5,a5,0x3
20404ff8:	97b6                	add	a5,a5,a3
20404ffa:	20404737          	lui	a4,0x20404
20404ffe:	f7a70713          	addi	a4,a4,-134 # 20403f7a <__metal_default_timer_handler>
20405002:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20405006:	fe842683          	lw	a3,-24(s0)
2040500a:	fd842703          	lw	a4,-40(s0)
2040500e:	87ba                	mv	a5,a4
20405010:	0786                	slli	a5,a5,0x1
20405012:	97ba                	add	a5,a5,a4
20405014:	078e                	slli	a5,a5,0x3
20405016:	97b6                	add	a5,a5,a3
20405018:	fd042703          	lw	a4,-48(s0)
2040501c:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20405020:	a085                	j	20405080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20405022:	fe842783          	lw	a5,-24(s0)
20405026:	20404737          	lui	a4,0x20404
2040502a:	f6470713          	addi	a4,a4,-156 # 20403f64 <__metal_default_beu_handler>
2040502e:	38e7a823          	sw	a4,912(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20405032:	fe842783          	lw	a5,-24(s0)
20405036:	fd042703          	lw	a4,-48(s0)
2040503a:	38e7ac23          	sw	a4,920(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
2040503e:	a089                	j	20405080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20405040:	fe842683          	lw	a3,-24(s0)
20405044:	fd842703          	lw	a4,-40(s0)
20405048:	87ba                	mv	a5,a4
2040504a:	0786                	slli	a5,a5,0x1
2040504c:	97ba                	add	a5,a5,a4
2040504e:	078e                	slli	a5,a5,0x3
20405050:	97b6                	add	a5,a5,a3
20405052:	20404737          	lui	a4,0x20404
20405056:	d9070713          	addi	a4,a4,-624 # 20403d90 <__metal_default_interrupt_handler>
2040505a:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
2040505e:	fe842683          	lw	a3,-24(s0)
20405062:	fd842703          	lw	a4,-40(s0)
20405066:	87ba                	mv	a5,a4
20405068:	0786                	slli	a5,a5,0x1
2040506a:	97ba                	add	a5,a5,a4
2040506c:	078e                	slli	a5,a5,0x3
2040506e:	97b6                	add	a5,a5,a3
20405070:	fd042703          	lw	a4,-48(s0)
20405074:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20405078:	a021                	j	20405080 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
2040507a:	57d1                	li	a5,-12
2040507c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20405080:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:549
}
20405084:	853e                	mv	a0,a5
20405086:	50b2                	lw	ra,44(sp)
20405088:	5422                	lw	s0,40(sp)
2040508a:	6145                	addi	sp,sp,48
2040508c:	8082                	ret

2040508e <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
2040508e:	1101                	addi	sp,sp,-32
20405090:	ce06                	sw	ra,28(sp)
20405092:	cc22                	sw	s0,24(sp)
20405094:	1000                	addi	s0,sp,32
20405096:	fea42623          	sw	a0,-20(s0)
2040509a:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
2040509e:	fe842783          	lw	a5,-24(s0)
204050a2:	4605                	li	a2,1
204050a4:	85be                	mv	a1,a5
204050a6:	fec42503          	lw	a0,-20(s0)
204050aa:	c13ff0ef          	jal	ra,20404cbc <__metal_local_interrupt_enable>
204050ae:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:554
}
204050b0:	853e                	mv	a0,a5
204050b2:	40f2                	lw	ra,28(sp)
204050b4:	4462                	lw	s0,24(sp)
204050b6:	6105                	addi	sp,sp,32
204050b8:	8082                	ret

204050ba <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
204050ba:	1101                	addi	sp,sp,-32
204050bc:	ce06                	sw	ra,28(sp)
204050be:	cc22                	sw	s0,24(sp)
204050c0:	1000                	addi	s0,sp,32
204050c2:	fea42623          	sw	a0,-20(s0)
204050c6:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
204050ca:	fe842783          	lw	a5,-24(s0)
204050ce:	4601                	li	a2,0
204050d0:	85be                	mv	a1,a5
204050d2:	fec42503          	lw	a0,-20(s0)
204050d6:	be7ff0ef          	jal	ra,20404cbc <__metal_local_interrupt_enable>
204050da:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:559
}
204050dc:	853e                	mv	a0,a5
204050de:	40f2                	lw	ra,28(sp)
204050e0:	4462                	lw	s0,24(sp)
204050e2:	6105                	addi	sp,sp,32
204050e4:	8082                	ret

204050e6 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
204050e6:	1101                	addi	sp,sp,-32
204050e8:	ce06                	sw	ra,28(sp)
204050ea:	cc22                	sw	s0,24(sp)
204050ec:	1000                	addi	s0,sp,32
204050ee:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
204050f2:	a69ff0ef          	jal	ra,20404b5a <__metal_controller_interrupt_vector_mode>
204050f6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:593
}
204050f8:	853e                	mv	a0,a5
204050fa:	40f2                	lw	ra,28(sp)
204050fc:	4462                	lw	s0,24(sp)
204050fe:	6105                	addi	sp,sp,32
20405100:	8082                	ret

20405102 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20405102:	1101                	addi	sp,sp,-32
20405104:	ce06                	sw	ra,28(sp)
20405106:	cc22                	sw	s0,24(sp)
20405108:	1000                	addi	s0,sp,32
2040510a:	fea42623          	sw	a0,-20(s0)
2040510e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20405112:	fe842783          	lw	a5,-24(s0)
20405116:	eb99                	bnez	a5,2040512c <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20405118:	204047b7          	lui	a5,0x20404
2040511c:	00078593          	mv	a1,a5
20405120:	fe842503          	lw	a0,-24(s0)
20405124:	a8fff0ef          	jal	ra,20404bb2 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20405128:	4781                	li	a5,0
2040512a:	a00d                	j	2040514c <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
2040512c:	fe842703          	lw	a4,-24(s0)
20405130:	4785                	li	a5,1
20405132:	00f71c63          	bne	a4,a5,2040514a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20405136:	204087b7          	lui	a5,0x20408
2040513a:	98078593          	addi	a1,a5,-1664 # 20407980 <__metal_vector_table>
2040513e:	fe842503          	lw	a0,-24(s0)
20405142:	a71ff0ef          	jal	ra,20404bb2 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20405146:	4781                	li	a5,0
20405148:	a011                	j	2040514c <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
2040514a:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:609
}
2040514c:	853e                	mv	a0,a5
2040514e:	40f2                	lw	ra,28(sp)
20405150:	4462                	lw	s0,24(sp)
20405152:	6105                	addi	sp,sp,32
20405154:	8082                	ret

20405156 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20405156:	1101                	addi	sp,sp,-32
20405158:	ce22                	sw	s0,28(sp)
2040515a:	1000                	addi	s0,sp,32
2040515c:	fea42623          	sw	a0,-20(s0)
20405160:	feb42423          	sw	a1,-24(s0)
20405164:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20405168:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:616
}
2040516a:	853e                	mv	a0,a5
2040516c:	4472                	lw	s0,28(sp)
2040516e:	6105                	addi	sp,sp,32
20405170:	8082                	ret

20405172 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20405172:	7139                	addi	sp,sp,-64
20405174:	de22                	sw	s0,60(sp)
20405176:	0080                	addi	s0,sp,64
20405178:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
2040517c:	4501                	li	a0,0
2040517e:	4581                	li	a1,0
20405180:	fea42423          	sw	a0,-24(s0)
20405184:	feb42623          	sw	a1,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20405188:	b80025f3          	csrr	a1,mcycleh
2040518c:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20405190:	b00025f3          	csrr	a1,mcycle
20405194:	feb42023          	sw	a1,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20405198:	b80025f3          	csrr	a1,mcycleh
2040519c:	fcb42e23          	sw	a1,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
204051a0:	fe442503          	lw	a0,-28(s0)
204051a4:	fdc42583          	lw	a1,-36(s0)
204051a8:	feb510e3          	bne	a0,a1,20405188 <__metal_driver_cpu_mcycle_get+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
204051ac:	fe442583          	lw	a1,-28(s0)
204051b0:	882e                	mv	a6,a1
204051b2:	4881                	li	a7,0
204051b4:	00081793          	slli	a5,a6,0x0
204051b8:	4701                	li	a4,0
204051ba:	fe042583          	lw	a1,-32(s0)
204051be:	862e                	mv	a2,a1
204051c0:	4681                	li	a3,0
204051c2:	00c765b3          	or	a1,a4,a2
204051c6:	feb42423          	sw	a1,-24(s0)
204051ca:	8fd5                	or	a5,a5,a3
204051cc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
204051d0:	fe842703          	lw	a4,-24(s0)
204051d4:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:640
}
204051d8:	853a                	mv	a0,a4
204051da:	85be                	mv	a1,a5
204051dc:	5472                	lw	s0,60(sp)
204051de:	6121                	addi	sp,sp,64
204051e0:	8082                	ret

204051e2 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
204051e2:	7179                	addi	sp,sp,-48
204051e4:	d606                	sw	ra,44(sp)
204051e6:	d422                	sw	s0,40(sp)
204051e8:	d24a                	sw	s2,36(sp)
204051ea:	d04e                	sw	s3,32(sp)
204051ec:	1800                	addi	s0,sp,48
204051ee:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
204051f2:	fdc42783          	lw	a5,-36(s0)
204051f6:	e781                	bnez	a5,204051fe <__metal_driver_cpu_timebase_get+0x1c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
204051f8:	4901                	li	s2,0
204051fa:	4981                	li	s3,0
204051fc:	a821                	j	20405214 <__metal_driver_cpu_timebase_get+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
204051fe:	fdc42503          	lw	a0,-36(s0)
20405202:	991fe0ef          	jal	ra,20403b92 <__metal_driver_cpu_timebase>
20405206:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
2040520a:	fec42783          	lw	a5,-20(s0)
2040520e:	893e                	mv	s2,a5
20405210:	87fd                	srai	a5,a5,0x1f
20405212:	89be                	mv	s3,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:650
}
20405214:	874a                	mv	a4,s2
20405216:	87ce                	mv	a5,s3
20405218:	853a                	mv	a0,a4
2040521a:	85be                	mv	a1,a5
2040521c:	50b2                	lw	ra,44(sp)
2040521e:	5422                	lw	s0,40(sp)
20405220:	5912                	lw	s2,36(sp)
20405222:	5982                	lw	s3,32(sp)
20405224:	6145                	addi	sp,sp,48
20405226:	8082                	ret

20405228 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20405228:	7179                	addi	sp,sp,-48
2040522a:	d606                	sw	ra,44(sp)
2040522c:	d422                	sw	s0,40(sp)
2040522e:	1800                	addi	s0,sp,48
20405230:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20405234:	4781                	li	a5,0
20405236:	4801                	li	a6,0
20405238:	fef42023          	sw	a5,-32(s0)
2040523c:	ff042223          	sw	a6,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405240:	fdc42503          	lw	a0,-36(s0)
20405244:	979fe0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20405248:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
2040524c:	fec42783          	lw	a5,-20(s0)
20405250:	c78d                	beqz	a5,2040527a <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20405252:	fec42783          	lw	a5,-20(s0)
20405256:	13c7a783          	lw	a5,316(a5)
2040525a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
2040525e:	fe842783          	lw	a5,-24(s0)
20405262:	cf81                	beqz	a5,2040527a <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20405264:	fe842783          	lw	a5,-24(s0)
20405268:	439c                	lw	a5,0(a5)
2040526a:	47f8                	lw	a4,76(a5)
2040526c:	fe040793          	addi	a5,s0,-32
20405270:	863e                	mv	a2,a5
20405272:	4585                	li	a1,1
20405274:	fe842503          	lw	a0,-24(s0)
20405278:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
2040527a:	fe042703          	lw	a4,-32(s0)
2040527e:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:667
}
20405282:	853a                	mv	a0,a4
20405284:	85be                	mv	a1,a5
20405286:	50b2                	lw	ra,44(sp)
20405288:	5422                	lw	s0,40(sp)
2040528a:	6145                	addi	sp,sp,48
2040528c:	8082                	ret

2040528e <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
2040528e:	7179                	addi	sp,sp,-48
20405290:	d606                	sw	ra,44(sp)
20405292:	d422                	sw	s0,40(sp)
20405294:	d226                	sw	s1,36(sp)
20405296:	1800                	addi	s0,sp,48
20405298:	fca42e23          	sw	a0,-36(s0)
2040529c:	fcb42823          	sw	a1,-48(s0)
204052a0:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
204052a4:	57fd                	li	a5,-1
204052a6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204052aa:	fdc42503          	lw	a0,-36(s0)
204052ae:	90ffe0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204052b2:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
204052b6:	fe842783          	lw	a5,-24(s0)
204052ba:	cf8d                	beqz	a5,204052f4 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204052bc:	fe842783          	lw	a5,-24(s0)
204052c0:	13c7a783          	lw	a5,316(a5)
204052c4:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
204052c8:	fe442783          	lw	a5,-28(s0)
204052cc:	c785                	beqz	a5,204052f4 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
204052ce:	fe442783          	lw	a5,-28(s0)
204052d2:	439c                	lw	a5,0(a5)
204052d4:	4ba4                	lw	s1,80(a5)
204052d6:	fdc42503          	lw	a0,-36(s0)
204052da:	895fe0ef          	jal	ra,20403b6e <__metal_driver_cpu_hartid>
204052de:	87aa                	mv	a5,a0
204052e0:	fd042603          	lw	a2,-48(s0)
204052e4:	fd442683          	lw	a3,-44(s0)
204052e8:	85be                	mv	a1,a5
204052ea:	fe442503          	lw	a0,-28(s0)
204052ee:	9482                	jalr	s1
204052f0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
204052f4:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:685
}
204052f8:	853e                	mv	a0,a5
204052fa:	50b2                	lw	ra,44(sp)
204052fc:	5422                	lw	s0,40(sp)
204052fe:	5492                	lw	s1,36(sp)
20405300:	6145                	addi	sp,sp,48
20405302:	8082                	ret

20405304 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20405304:	1101                	addi	sp,sp,-32
20405306:	ce22                	sw	s0,28(sp)
20405308:	1000                	addi	s0,sp,32
2040530a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040530e:	800007b7          	lui	a5,0x80000
20405312:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe79c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20405316:	853e                	mv	a0,a5
20405318:	4472                	lw	s0,28(sp)
2040531a:	6105                	addi	sp,sp,32
2040531c:	8082                	ret

2040531e <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
2040531e:	1101                	addi	sp,sp,-32
20405320:	ce22                	sw	s0,28(sp)
20405322:	1000                	addi	s0,sp,32
20405324:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20405328:	479d                	li	a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:703
}
2040532a:	853e                	mv	a0,a5
2040532c:	4472                	lw	s0,28(sp)
2040532e:	6105                	addi	sp,sp,32
20405330:	8082                	ret

20405332 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20405332:	1101                	addi	sp,sp,-32
20405334:	ce22                	sw	s0,28(sp)
20405336:	1000                	addi	s0,sp,32
20405338:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040533c:	800007b7          	lui	a5,0x80000
20405340:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe79c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20405344:	853e                	mv	a0,a5
20405346:	4472                	lw	s0,28(sp)
20405348:	6105                	addi	sp,sp,32
2040534a:	8082                	ret

2040534c <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
2040534c:	1101                	addi	sp,sp,-32
2040534e:	ce22                	sw	s0,28(sp)
20405350:	1000                	addi	s0,sp,32
20405352:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20405356:	478d                	li	a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:721
}
20405358:	853e                	mv	a0,a5
2040535a:	4472                	lw	s0,28(sp)
2040535c:	6105                	addi	sp,sp,32
2040535e:	8082                	ret

20405360 <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
20405360:	7179                	addi	sp,sp,-48
20405362:	d606                	sw	ra,44(sp)
20405364:	d422                	sw	s0,40(sp)
20405366:	1800                	addi	s0,sp,48
20405368:	fca42e23          	sw	a0,-36(s0)
2040536c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
20405370:	57fd                	li	a5,-1
20405372:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405376:	fdc42503          	lw	a0,-36(s0)
2040537a:	843fe0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
2040537e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20405382:	fe842783          	lw	a5,-24(s0)
20405386:	c79d                	beqz	a5,204053b4 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20405388:	fe842783          	lw	a5,-24(s0)
2040538c:	0dc7a783          	lw	a5,220(a5)
20405390:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20405394:	fe442783          	lw	a5,-28(s0)
20405398:	cf91                	beqz	a5,204053b4 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
2040539a:	fe442783          	lw	a5,-28(s0)
2040539e:	439c                	lw	a5,0(a5)
204053a0:	47f8                	lw	a4,76(a5)
204053a2:	fd840793          	addi	a5,s0,-40
204053a6:	863e                	mv	a2,a5
204053a8:	458d                	li	a1,3
204053aa:	fe442503          	lw	a0,-28(s0)
204053ae:	9702                	jalr	a4
204053b0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
204053b4:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:738
}
204053b8:	853e                	mv	a0,a5
204053ba:	50b2                	lw	ra,44(sp)
204053bc:	5422                	lw	s0,40(sp)
204053be:	6145                	addi	sp,sp,48
204053c0:	8082                	ret

204053c2 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
204053c2:	7179                	addi	sp,sp,-48
204053c4:	d606                	sw	ra,44(sp)
204053c6:	d422                	sw	s0,40(sp)
204053c8:	1800                	addi	s0,sp,48
204053ca:	fca42e23          	sw	a0,-36(s0)
204053ce:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
204053d2:	57fd                	li	a5,-1
204053d4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204053d8:	fdc42503          	lw	a0,-36(s0)
204053dc:	fe0fe0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204053e0:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
204053e4:	fe842783          	lw	a5,-24(s0)
204053e8:	c79d                	beqz	a5,20405416 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204053ea:	fe842783          	lw	a5,-24(s0)
204053ee:	0dc7a783          	lw	a5,220(a5)
204053f2:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
204053f6:	fe442783          	lw	a5,-28(s0)
204053fa:	cf91                	beqz	a5,20405416 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
204053fc:	fe442783          	lw	a5,-28(s0)
20405400:	439c                	lw	a5,0(a5)
20405402:	47f8                	lw	a4,76(a5)
20405404:	fd840793          	addi	a5,s0,-40
20405408:	863e                	mv	a2,a5
2040540a:	4589                	li	a1,2
2040540c:	fe442503          	lw	a0,-28(s0)
20405410:	9702                	jalr	a4
20405412:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20405416:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:755
}
2040541a:	853e                	mv	a0,a5
2040541c:	50b2                	lw	ra,44(sp)
2040541e:	5422                	lw	s0,40(sp)
20405420:	6145                	addi	sp,sp,48
20405422:	8082                	ret

20405424 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20405424:	7179                	addi	sp,sp,-48
20405426:	d606                	sw	ra,44(sp)
20405428:	d422                	sw	s0,40(sp)
2040542a:	1800                	addi	s0,sp,48
2040542c:	fca42e23          	sw	a0,-36(s0)
20405430:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20405434:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405438:	fdc42503          	lw	a0,-36(s0)
2040543c:	f80fe0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20405440:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20405444:	fe842783          	lw	a5,-24(s0)
20405448:	c79d                	beqz	a5,20405476 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
2040544a:	fe842783          	lw	a5,-24(s0)
2040544e:	0dc7a783          	lw	a5,220(a5)
20405452:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20405456:	fe442783          	lw	a5,-28(s0)
2040545a:	cf91                	beqz	a5,20405476 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
2040545c:	fe442783          	lw	a5,-28(s0)
20405460:	439c                	lw	a5,0(a5)
20405462:	47f8                	lw	a4,76(a5)
20405464:	fd840793          	addi	a5,s0,-40
20405468:	863e                	mv	a2,a5
2040546a:	4591                	li	a1,4
2040546c:	fe442503          	lw	a0,-28(s0)
20405470:	9702                	jalr	a4
20405472:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20405476:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:772
}
2040547a:	853e                	mv	a0,a5
2040547c:	50b2                	lw	ra,44(sp)
2040547e:	5422                	lw	s0,40(sp)
20405480:	6145                	addi	sp,sp,48
20405482:	8082                	ret

20405484 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20405484:	1101                	addi	sp,sp,-32
20405486:	ce06                	sw	ra,28(sp)
20405488:	cc22                	sw	s0,24(sp)
2040548a:	1000                	addi	s0,sp,32
2040548c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20405490:	fec42503          	lw	a0,-20(s0)
20405494:	f28fe0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
20405498:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:777
}
2040549a:	853e                	mv	a0,a5
2040549c:	40f2                	lw	ra,28(sp)
2040549e:	4462                	lw	s0,24(sp)
204054a0:	6105                	addi	sp,sp,32
204054a2:	8082                	ret

204054a4 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
204054a4:	7179                	addi	sp,sp,-48
204054a6:	d606                	sw	ra,44(sp)
204054a8:	d422                	sw	s0,40(sp)
204054aa:	1800                	addi	s0,sp,48
204054ac:	fca42e23          	sw	a0,-36(s0)
204054b0:	fcb42c23          	sw	a1,-40(s0)
204054b4:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204054b8:	fdc42503          	lw	a0,-36(s0)
204054bc:	f00fe0ef          	jal	ra,20403bbc <__metal_driver_cpu_interrupt_controller>
204054c0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
204054c4:	fec42783          	lw	a5,-20(s0)
204054c8:	cb99                	beqz	a5,204054de <__metal_driver_cpu_exception_register+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
204054ca:	fd442603          	lw	a2,-44(s0)
204054ce:	fd842583          	lw	a1,-40(s0)
204054d2:	fec42503          	lw	a0,-20(s0)
204054d6:	8a3ff0ef          	jal	ra,20404d78 <__metal_exception_register>
204054da:	87aa                	mv	a5,a0
204054dc:	a011                	j	204054e0 <__metal_driver_cpu_exception_register+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
204054de:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:808
}
204054e0:	853e                	mv	a0,a5
204054e2:	50b2                	lw	ra,44(sp)
204054e4:	5422                	lw	s0,40(sp)
204054e6:	6145                	addi	sp,sp,48
204054e8:	8082                	ret

204054ea <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
204054ea:	1101                	addi	sp,sp,-32
204054ec:	ce22                	sw	s0,28(sp)
204054ee:	1000                	addi	s0,sp,32
204054f0:	fea42623          	sw	a0,-20(s0)
204054f4:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
204054f8:	fe842783          	lw	a5,-24(s0)
204054fc:	0007d783          	lhu	a5,0(a5)
20405500:	0037f713          	andi	a4,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20405504:	478d                	li	a5,3
20405506:	00f71463          	bne	a4,a5,2040550e <__metal_driver_cpu_get_instruction_length+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
2040550a:	4791                	li	a5,4
2040550c:	a011                	j	20405510 <__metal_driver_cpu_get_instruction_length+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2040550e:	4789                	li	a5,2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20405510:	853e                	mv	a0,a5
20405512:	4472                	lw	s0,28(sp)
20405514:	6105                	addi	sp,sp,32
20405516:	8082                	ret

20405518 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20405518:	7179                	addi	sp,sp,-48
2040551a:	d622                	sw	s0,44(sp)
2040551c:	1800                	addi	s0,sp,48
2040551e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20405522:	341027f3          	csrr	a5,mepc
20405526:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
2040552a:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:827
}
2040552e:	853e                	mv	a0,a5
20405530:	5432                	lw	s0,44(sp)
20405532:	6145                	addi	sp,sp,48
20405534:	8082                	ret

20405536 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20405536:	1101                	addi	sp,sp,-32
20405538:	ce22                	sw	s0,28(sp)
2040553a:	1000                	addi	s0,sp,32
2040553c:	fea42623          	sw	a0,-20(s0)
20405540:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20405544:	fe842783          	lw	a5,-24(s0)
20405548:	34179073          	csrw	mepc,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2040554c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:832
}
2040554e:	853e                	mv	a0,a5
20405550:	4472                	lw	s0,28(sp)
20405552:	6105                	addi	sp,sp,32
20405554:	8082                	ret

20405556 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20405556:	1101                	addi	sp,sp,-32
20405558:	ce06                	sw	ra,28(sp)
2040555a:	cc22                	sw	s0,24(sp)
2040555c:	1000                	addi	s0,sp,32
2040555e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20405562:	fec42503          	lw	a0,-20(s0)
20405566:	e80fe0ef          	jal	ra,20403be6 <__metal_driver_cpu_buserror>
2040556a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:836
}
2040556c:	853e                	mv	a0,a5
2040556e:	40f2                	lw	ra,28(sp)
20405570:	4462                	lw	s0,24(sp)
20405572:	6105                	addi	sp,sp,32
20405574:	8082                	ret

20405576 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20405576:	1101                	addi	sp,sp,-32
20405578:	ce22                	sw	s0,28(sp)
2040557a:	1000                	addi	s0,sp,32
2040557c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20405580:	fec42703          	lw	a4,-20(s0)
20405584:	800007b7          	lui	a5,0x80000
20405588:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe448>
2040558c:	00f71563          	bne	a4,a5,20405596 <__metal_driver_sifive_plic0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20405590:	0c0007b7          	lui	a5,0xc000
20405594:	a011                	j	20405598 <__metal_driver_sifive_plic0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:319
	}
	else {
		return 0;
20405596:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:321
	}
}
20405598:	853e                	mv	a0,a5
2040559a:	4472                	lw	s0,28(sp)
2040559c:	6105                	addi	sp,sp,32
2040559e:	8082                	ret

204055a0 <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
204055a0:	1101                	addi	sp,sp,-32
204055a2:	ce22                	sw	s0,28(sp)
204055a4:	1000                	addi	s0,sp,32
204055a6:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204055aa:	fec42703          	lw	a4,-20(s0)
204055ae:	800007b7          	lui	a5,0x80000
204055b2:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe448>
204055b6:	00f71463          	bne	a4,a5,204055be <__metal_driver_sifive_plic0_num_interrupts+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
204055ba:	47ed                	li	a5,27
204055bc:	a011                	j	204055c0 <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:339
	}
	else {
		return 0;
204055be:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:341
	}
}
204055c0:	853e                	mv	a0,a5
204055c2:	4472                	lw	s0,28(sp)
204055c4:	6105                	addi	sp,sp,32
204055c6:	8082                	ret

204055c8 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
204055c8:	1101                	addi	sp,sp,-32
204055ca:	ce22                	sw	s0,28(sp)
204055cc:	1000                	addi	s0,sp,32
204055ce:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204055d2:	fec42703          	lw	a4,-20(s0)
204055d6:	800007b7          	lui	a5,0x80000
204055da:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe448>
204055de:	00f71463          	bne	a4,a5,204055e6 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
204055e2:	479d                	li	a5,7
204055e4:	a011                	j	204055e8 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:349
	}
	else {
		return 0;
204055e6:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:351
	}
}
204055e8:	853e                	mv	a0,a5
204055ea:	4472                	lw	s0,28(sp)
204055ec:	6105                	addi	sp,sp,32
204055ee:	8082                	ret

204055f0 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204055f0:	1101                	addi	sp,sp,-32
204055f2:	ce22                	sw	s0,28(sp)
204055f4:	1000                	addi	s0,sp,32
204055f6:	fea42623          	sw	a0,-20(s0)
204055fa:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:355
	if (idx == 0) {
204055fe:	fe842783          	lw	a5,-24(s0)
20405602:	e791                	bnez	a5,2040560e <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405604:	800007b7          	lui	a5,0x80000
20405608:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe078>
2040560c:	a011                	j	20405610 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:359
	}
	else {
		return NULL;
2040560e:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:361
	}
}
20405610:	853e                	mv	a0,a5
20405612:	4472                	lw	s0,28(sp)
20405614:	6105                	addi	sp,sp,32
20405616:	8082                	ret

20405618 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20405618:	1101                	addi	sp,sp,-32
2040561a:	ce22                	sw	s0,28(sp)
2040561c:	1000                	addi	s0,sp,32
2040561e:	fea42623          	sw	a0,-20(s0)
20405622:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:365
	if (idx == 0) {
20405626:	fe842783          	lw	a5,-24(s0)
2040562a:	e399                	bnez	a5,20405630 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:366
		return 11;
2040562c:	47ad                	li	a5,11
2040562e:	a011                	j	20405632 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:369
	}
	else {
		return 0;
20405630:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:371
	}
}
20405632:	853e                	mv	a0,a5
20405634:	4472                	lw	s0,28(sp)
20405636:	6105                	addi	sp,sp,32
20405638:	8082                	ret

2040563a <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2040563a:	1101                	addi	sp,sp,-32
2040563c:	ce22                	sw	s0,28(sp)
2040563e:	1000                	addi	s0,sp,32
20405640:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:375
	if (hartid == 0) {
20405644:	fec42783          	lw	a5,-20(s0)
20405648:	e399                	bnez	a5,2040564e <__metal_driver_sifive_plic0_context_ids+0x14>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:376
		return 0;
2040564a:	4781                	li	a5,0
2040564c:	a011                	j	20405650 <__metal_driver_sifive_plic0_context_ids+0x16>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:379
	}
	else {
		return -1;
2040564e:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:381
	}
}
20405650:	853e                	mv	a0,a5
20405652:	4472                	lw	s0,28(sp)
20405654:	6105                	addi	sp,sp,32
20405656:	8082                	ret

20405658 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20405658:	7179                	addi	sp,sp,-48
2040565a:	d606                	sw	ra,44(sp)
2040565c:	d422                	sw	s0,40(sp)
2040565e:	1800                	addi	s0,sp,48
20405660:	fca42e23          	sw	a0,-36(s0)
20405664:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405668:	fdc42503          	lw	a0,-36(s0)
2040566c:	3729                	jal	20405576 <__metal_driver_sifive_plic0_control_base>
2040566e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20405672:	fd842783          	lw	a5,-40(s0)
20405676:	00c79713          	slli	a4,a5,0xc
2040567a:	fec42783          	lw	a5,-20(s0)
2040567e:	973e                	add	a4,a4,a5
20405680:	002007b7          	lui	a5,0x200
20405684:	0791                	addi	a5,a5,4
20405686:	97ba                	add	a5,a5,a4
20405688:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
2040568a:	853e                	mv	a0,a5
2040568c:	50b2                	lw	ra,44(sp)
2040568e:	5422                	lw	s0,40(sp)
20405690:	6145                	addi	sp,sp,48
20405692:	8082                	ret

20405694 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20405694:	7179                	addi	sp,sp,-48
20405696:	d606                	sw	ra,44(sp)
20405698:	d422                	sw	s0,40(sp)
2040569a:	1800                	addi	s0,sp,48
2040569c:	fca42e23          	sw	a0,-36(s0)
204056a0:	fcb42c23          	sw	a1,-40(s0)
204056a4:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204056a8:	fdc42503          	lw	a0,-36(s0)
204056ac:	35e9                	jal	20405576 <__metal_driver_sifive_plic0_control_base>
204056ae:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
204056b2:	fd842783          	lw	a5,-40(s0)
204056b6:	00c79713          	slli	a4,a5,0xc
204056ba:	fec42783          	lw	a5,-20(s0)
204056be:	973e                	add	a4,a4,a5
204056c0:	002007b7          	lui	a5,0x200
204056c4:	0791                	addi	a5,a5,4
204056c6:	97ba                	add	a5,a5,a4
204056c8:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
204056ca:	fd442783          	lw	a5,-44(s0)
204056ce:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:35
}
204056d0:	0001                	nop
204056d2:	50b2                	lw	ra,44(sp)
204056d4:	5422                	lw	s0,40(sp)
204056d6:	6145                	addi	sp,sp,48
204056d8:	8082                	ret

204056da <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
204056da:	7179                	addi	sp,sp,-48
204056dc:	d606                	sw	ra,44(sp)
204056de:	d422                	sw	s0,40(sp)
204056e0:	1800                	addi	s0,sp,48
204056e2:	fca42e23          	sw	a0,-36(s0)
204056e6:	fcb42c23          	sw	a1,-40(s0)
204056ea:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204056ee:	fdc42503          	lw	a0,-36(s0)
204056f2:	e85ff0ef          	jal	ra,20405576 <__metal_driver_sifive_plic0_control_base>
204056f6:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
204056fa:	fd842783          	lw	a5,-40(s0)
204056fe:	00c79713          	slli	a4,a5,0xc
20405702:	fec42783          	lw	a5,-20(s0)
20405706:	973e                	add	a4,a4,a5
20405708:	002007b7          	lui	a5,0x200
2040570c:	97ba                	add	a5,a5,a4
2040570e:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20405710:	fd442783          	lw	a5,-44(s0)
20405714:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20405716:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405718:	853e                	mv	a0,a5
2040571a:	50b2                	lw	ra,44(sp)
2040571c:	5422                	lw	s0,40(sp)
2040571e:	6145                	addi	sp,sp,48
20405720:	8082                	ret

20405722 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20405722:	7179                	addi	sp,sp,-48
20405724:	d606                	sw	ra,44(sp)
20405726:	d422                	sw	s0,40(sp)
20405728:	1800                	addi	s0,sp,48
2040572a:	fca42e23          	sw	a0,-36(s0)
2040572e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20405732:	fdc42503          	lw	a0,-36(s0)
20405736:	e41ff0ef          	jal	ra,20405576 <__metal_driver_sifive_plic0_control_base>
2040573a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
2040573e:	fd842783          	lw	a5,-40(s0)
20405742:	00c79713          	slli	a4,a5,0xc
20405746:	fec42783          	lw	a5,-20(s0)
2040574a:	973e                	add	a4,a4,a5
2040574c:	002007b7          	lui	a5,0x200
20405750:	97ba                	add	a5,a5,a4
20405752:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20405754:	853e                	mv	a0,a5
20405756:	50b2                	lw	ra,44(sp)
20405758:	5422                	lw	s0,40(sp)
2040575a:	6145                	addi	sp,sp,48
2040575c:	8082                	ret

2040575e <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
2040575e:	7179                	addi	sp,sp,-48
20405760:	d606                	sw	ra,44(sp)
20405762:	d422                	sw	s0,40(sp)
20405764:	1800                	addi	s0,sp,48
20405766:	fca42e23          	sw	a0,-36(s0)
2040576a:	fcb42c23          	sw	a1,-40(s0)
2040576e:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405772:	fdc42503          	lw	a0,-36(s0)
20405776:	e01ff0ef          	jal	ra,20405576 <__metal_driver_sifive_plic0_control_base>
2040577a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
2040577e:	fdc42503          	lw	a0,-36(s0)
20405782:	e47ff0ef          	jal	ra,204055c8 <__metal_driver_sifive_plic0_max_priority>
20405786:	87aa                	mv	a5,a0
20405788:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
2040578c:	fe842783          	lw	a5,-24(s0)
20405790:	c785                	beqz	a5,204057b8 <__metal_driver_riscv_plic0_set_priority+0x5a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405792:	fd442703          	lw	a4,-44(s0)
20405796:	fe842783          	lw	a5,-24(s0)
2040579a:	00f77f63          	bgeu	a4,a5,204057b8 <__metal_driver_riscv_plic0_set_priority+0x5a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
2040579e:	fd842783          	lw	a5,-40(s0)
204057a2:	078a                	slli	a5,a5,0x2
204057a4:	873e                	mv	a4,a5
204057a6:	fec42783          	lw	a5,-20(s0)
204057aa:	97ba                	add	a5,a5,a4
204057ac:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
204057ae:	fd442783          	lw	a5,-44(s0)
204057b2:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
204057b4:	4781                	li	a5,0
204057b6:	a011                	j	204057ba <__metal_driver_riscv_plic0_set_priority+0x5c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
204057b8:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:72
}
204057ba:	853e                	mv	a0,a5
204057bc:	50b2                	lw	ra,44(sp)
204057be:	5422                	lw	s0,40(sp)
204057c0:	6145                	addi	sp,sp,48
204057c2:	8082                	ret

204057c4 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
204057c4:	7179                	addi	sp,sp,-48
204057c6:	d606                	sw	ra,44(sp)
204057c8:	d422                	sw	s0,40(sp)
204057ca:	1800                	addi	s0,sp,48
204057cc:	fca42e23          	sw	a0,-36(s0)
204057d0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204057d4:	fdc42503          	lw	a0,-36(s0)
204057d8:	d9fff0ef          	jal	ra,20405576 <__metal_driver_sifive_plic0_control_base>
204057dc:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
204057e0:	fd842783          	lw	a5,-40(s0)
204057e4:	078a                	slli	a5,a5,0x2
204057e6:	873e                	mv	a4,a5
204057e8:	fec42783          	lw	a5,-20(s0)
204057ec:	97ba                	add	a5,a5,a4
204057ee:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
204057f0:	853e                	mv	a0,a5
204057f2:	50b2                	lw	ra,44(sp)
204057f4:	5422                	lw	s0,40(sp)
204057f6:	6145                	addi	sp,sp,48
204057f8:	8082                	ret

204057fa <__metal_plic0_enable>:
__metal_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
204057fa:	7179                	addi	sp,sp,-48
204057fc:	d606                	sw	ra,44(sp)
204057fe:	d422                	sw	s0,40(sp)
20405800:	1800                	addi	s0,sp,48
20405802:	fca42e23          	sw	a0,-36(s0)
20405806:	fcb42c23          	sw	a1,-40(s0)
2040580a:	fcc42a23          	sw	a2,-44(s0)
2040580e:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405812:	fdc42503          	lw	a0,-36(s0)
20405816:	d61ff0ef          	jal	ra,20405576 <__metal_driver_sifive_plic0_control_base>
2040581a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
2040581e:	fd842783          	lw	a5,-40(s0)
20405822:	00779713          	slli	a4,a5,0x7
20405826:	fec42783          	lw	a5,-20(s0)
2040582a:	97ba                	add	a5,a5,a4
2040582c:	fd442703          	lw	a4,-44(s0)
20405830:	8715                	srai	a4,a4,0x5
20405832:	070a                	slli	a4,a4,0x2
20405834:	973e                	add	a4,a4,a5
20405836:	6789                	lui	a5,0x2
20405838:	97ba                	add	a5,a5,a4
2040583a:	439c                	lw	a5,0(a5)
2040583c:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405840:	fd042783          	lw	a5,-48(s0)
20405844:	cf81                	beqz	a5,2040585c <__metal_plic0_enable+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20405846:	fd442783          	lw	a5,-44(s0)
2040584a:	8bfd                	andi	a5,a5,31
2040584c:	4705                	li	a4,1
2040584e:	00f717b3          	sll	a5,a4,a5
20405852:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20405854:	fe842783          	lw	a5,-24(s0)
20405858:	8fd9                	or	a5,a5,a4
2040585a:	a829                	j	20405874 <__metal_plic0_enable+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
2040585c:	fd442783          	lw	a5,-44(s0)
20405860:	8bfd                	andi	a5,a5,31
20405862:	4705                	li	a4,1
20405864:	00f717b3          	sll	a5,a4,a5
20405868:	fff7c793          	not	a5,a5
2040586c:	873e                	mv	a4,a5
2040586e:	fe842783          	lw	a5,-24(s0)
20405872:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20405874:	fd842703          	lw	a4,-40(s0)
20405878:	00771693          	slli	a3,a4,0x7
2040587c:	fec42703          	lw	a4,-20(s0)
20405880:	9736                	add	a4,a4,a3
20405882:	fd442683          	lw	a3,-44(s0)
20405886:	8695                	srai	a3,a3,0x5
20405888:	068a                	slli	a3,a3,0x2
2040588a:	96ba                	add	a3,a3,a4
2040588c:	6709                	lui	a4,0x2
2040588e:	9736                	add	a4,a4,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20405890:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405892:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405894:	853e                	mv	a0,a5
20405896:	50b2                	lw	ra,44(sp)
20405898:	5422                	lw	s0,40(sp)
2040589a:	6145                	addi	sp,sp,48
2040589c:	8082                	ret

2040589e <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
2040589e:	1101                	addi	sp,sp,-32
204058a0:	ce06                	sw	ra,28(sp)
204058a2:	cc22                	sw	s0,24(sp)
204058a4:	1000                	addi	s0,sp,32
204058a6:	fea42623          	sw	a0,-20(s0)
204058aa:	feb42423          	sw	a1,-24(s0)
204058ae:	12c00513          	li	a0,300
204058b2:	056020ef          	jal	ra,20407908 <metal_shutdown>

204058b6 <__metal_plic0_handler>:
__metal_plic0_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
204058b6:	7179                	addi	sp,sp,-48
204058b8:	d606                	sw	ra,44(sp)
204058ba:	d422                	sw	s0,40(sp)
204058bc:	1800                	addi	s0,sp,48
204058be:	fca42e23          	sw	a0,-36(s0)
204058c2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
204058c6:	fd842783          	lw	a5,-40(s0)
204058ca:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
204058ce:	b6cfe0ef          	jal	ra,20403c3a <__metal_myhart_id>
204058d2:	87aa                	mv	a5,a0
204058d4:	853e                	mv	a0,a5
204058d6:	d65ff0ef          	jal	ra,2040563a <__metal_driver_sifive_plic0_context_ids>
204058da:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
204058de:	fe842583          	lw	a1,-24(s0)
204058e2:	fec42503          	lw	a0,-20(s0)
204058e6:	d73ff0ef          	jal	ra,20405658 <__metal_plic0_claim_interrupt>
204058ea:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
204058ee:	fec42503          	lw	a0,-20(s0)
204058f2:	cafff0ef          	jal	ra,204055a0 <__metal_driver_sifive_plic0_num_interrupts>
204058f6:	87aa                	mv	a5,a0
204058f8:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
204058fc:	fe442703          	lw	a4,-28(s0)
20405900:	fe042783          	lw	a5,-32(s0)
20405904:	04f77263          	bgeu	a4,a5,20405948 <__metal_plic0_handler+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20405908:	fec42703          	lw	a4,-20(s0)
2040590c:	fe442783          	lw	a5,-28(s0)
20405910:	078a                	slli	a5,a5,0x2
20405912:	97ba                	add	a5,a5,a4
20405914:	479c                	lw	a5,8(a5)
20405916:	cb8d                	beqz	a5,20405948 <__metal_plic0_handler+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20405918:	fec42703          	lw	a4,-20(s0)
2040591c:	fe442783          	lw	a5,-28(s0)
20405920:	078a                	slli	a5,a5,0x2
20405922:	97ba                	add	a5,a5,a4
20405924:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20405928:	fe442603          	lw	a2,-28(s0)
2040592c:	fec42683          	lw	a3,-20(s0)
20405930:	fe442703          	lw	a4,-28(s0)
20405934:	87ba                	mv	a5,a4
20405936:	0786                	slli	a5,a5,0x1
20405938:	97ba                	add	a5,a5,a4
2040593a:	078e                	slli	a5,a5,0x3
2040593c:	97b6                	add	a5,a5,a3
2040593e:	0887a783          	lw	a5,136(a5)
20405942:	85be                	mv	a1,a5
20405944:	8532                	mv	a0,a2
20405946:	9802                	jalr	a6
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20405948:	fe442603          	lw	a2,-28(s0)
2040594c:	fe842583          	lw	a1,-24(s0)
20405950:	fec42503          	lw	a0,-20(s0)
20405954:	d41ff0ef          	jal	ra,20405694 <__metal_plic0_complete_interrupt>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:121
}
20405958:	0001                	nop
2040595a:	50b2                	lw	ra,44(sp)
2040595c:	5422                	lw	s0,40(sp)
2040595e:	6145                	addi	sp,sp,48
20405960:	8082                	ret

20405962 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20405962:	7139                	addi	sp,sp,-64
20405964:	de06                	sw	ra,60(sp)
20405966:	dc22                	sw	s0,56(sp)
20405968:	0080                	addi	s0,sp,64
2040596a:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040596e:	fcc42783          	lw	a5,-52(s0)
20405972:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20405976:	fe442783          	lw	a5,-28(s0)
2040597a:	43dc                	lw	a5,4(a5)
2040597c:	12079c63          	bnez	a5,20405ab4 <__metal_driver_riscv_plic0_init+0x152>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405980:	fe042623          	sw	zero,-20(s0)
20405984:	a205                	j	20405aa4 <__metal_driver_riscv_plic0_init+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20405986:	fcc42503          	lw	a0,-52(s0)
2040598a:	c17ff0ef          	jal	ra,204055a0 <__metal_driver_sifive_plic0_num_interrupts>
2040598e:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20405992:	fec42583          	lw	a1,-20(s0)
20405996:	fcc42503          	lw	a0,-52(s0)
2040599a:	c57ff0ef          	jal	ra,204055f0 <__metal_driver_sifive_plic0_interrupt_parents>
2040599e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
204059a2:	fec42583          	lw	a1,-20(s0)
204059a6:	fcc42503          	lw	a0,-52(s0)
204059aa:	c6fff0ef          	jal	ra,20405618 <__metal_driver_sifive_plic0_interrupt_lines>
204059ae:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
204059b2:	fdc42783          	lw	a5,-36(s0)
204059b6:	439c                	lw	a5,0(a5)
204059b8:	439c                	lw	a5,0(a5)
204059ba:	fdc42503          	lw	a0,-36(s0)
204059be:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204059c0:	fe042423          	sw	zero,-24(s0)
204059c4:	a895                	j	20405a38 <__metal_driver_riscv_plic0_init+0xd6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
204059c6:	4681                	li	a3,0
204059c8:	fe842603          	lw	a2,-24(s0)
204059cc:	fec42583          	lw	a1,-20(s0)
204059d0:	fe442503          	lw	a0,-28(s0)
204059d4:	e27ff0ef          	jal	ra,204057fa <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
204059d8:	fe842703          	lw	a4,-24(s0)
204059dc:	fe042783          	lw	a5,-32(s0)
204059e0:	04f75763          	bge	a4,a5,20405a2e <__metal_driver_riscv_plic0_init+0xcc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
204059e4:	4601                	li	a2,0
204059e6:	fe842583          	lw	a1,-24(s0)
204059ea:	fcc42503          	lw	a0,-52(s0)
204059ee:	d71ff0ef          	jal	ra,2040575e <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
204059f2:	fe442703          	lw	a4,-28(s0)
204059f6:	fe842783          	lw	a5,-24(s0)
204059fa:	078a                	slli	a5,a5,0x2
204059fc:	97ba                	add	a5,a5,a4
204059fe:	0007a423          	sw	zero,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20405a02:	fe442683          	lw	a3,-28(s0)
20405a06:	fe842703          	lw	a4,-24(s0)
20405a0a:	87ba                	mv	a5,a4
20405a0c:	0786                	slli	a5,a5,0x1
20405a0e:	97ba                	add	a5,a5,a4
20405a10:	078e                	slli	a5,a5,0x3
20405a12:	97b6                	add	a5,a5,a3
20405a14:	0807a223          	sw	zero,132(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20405a18:	fe442683          	lw	a3,-28(s0)
20405a1c:	fe842703          	lw	a4,-24(s0)
20405a20:	87ba                	mv	a5,a4
20405a22:	0786                	slli	a5,a5,0x1
20405a24:	97ba                	add	a5,a5,a4
20405a26:	078e                	slli	a5,a5,0x3
20405a28:	97b6                	add	a5,a5,a3
20405a2a:	0807a423          	sw	zero,136(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405a2e:	fe842783          	lw	a5,-24(s0)
20405a32:	0785                	addi	a5,a5,1
20405a34:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
20405a38:	fe842703          	lw	a4,-24(s0)
20405a3c:	3ff00793          	li	a5,1023
20405a40:	f8e7d3e3          	bge	a5,a4,204059c6 <__metal_driver_riscv_plic0_init+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20405a44:	4601                	li	a2,0
20405a46:	fec42583          	lw	a1,-20(s0)
20405a4a:	fcc42503          	lw	a0,-52(s0)
20405a4e:	c8dff0ef          	jal	ra,204056da <__metal_plic0_set_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20405a52:	fdc42783          	lw	a5,-36(s0)
20405a56:	439c                	lw	a5,0(a5)
20405a58:	4fdc                	lw	a5,28(a5)
20405a5a:	fe442683          	lw	a3,-28(s0)
20405a5e:	4601                	li	a2,0
20405a60:	fd842583          	lw	a1,-40(s0)
20405a64:	fdc42503          	lw	a0,-36(s0)
20405a68:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
20405a6a:	fdc42783          	lw	a5,-36(s0)
20405a6e:	439c                	lw	a5,0(a5)
20405a70:	4fd8                	lw	a4,28(a5)
20405a72:	fe442683          	lw	a3,-28(s0)
20405a76:	204067b7          	lui	a5,0x20406
20405a7a:	8b678613          	addi	a2,a5,-1866 # 204058b6 <__metal_plic0_handler>
20405a7e:	fd842583          	lw	a1,-40(s0)
20405a82:	fdc42503          	lw	a0,-36(s0)
20405a86:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
20405a88:	fdc42783          	lw	a5,-36(s0)
20405a8c:	439c                	lw	a5,0(a5)
20405a8e:	53dc                	lw	a5,36(a5)
20405a90:	fd842583          	lw	a1,-40(s0)
20405a94:	fdc42503          	lw	a0,-36(s0)
20405a98:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20405a9a:	fec42783          	lw	a5,-20(s0)
20405a9e:	0785                	addi	a5,a5,1
20405aa0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20405aa4:	fec42783          	lw	a5,-20(s0)
20405aa8:	ecf05fe3          	blez	a5,20405986 <__metal_driver_riscv_plic0_init+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
20405aac:	fe442783          	lw	a5,-28(s0)
20405ab0:	4705                	li	a4,1
20405ab2:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20405ab4:	0001                	nop
20405ab6:	50f2                	lw	ra,60(sp)
20405ab8:	5462                	lw	s0,56(sp)
20405aba:	6121                	addi	sp,sp,64
20405abc:	8082                	ret

20405abe <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20405abe:	7179                	addi	sp,sp,-48
20405ac0:	d606                	sw	ra,44(sp)
20405ac2:	d422                	sw	s0,40(sp)
20405ac4:	1800                	addi	s0,sp,48
20405ac6:	fca42e23          	sw	a0,-36(s0)
20405aca:	fcb42c23          	sw	a1,-40(s0)
20405ace:	fcc42a23          	sw	a2,-44(s0)
20405ad2:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405ad6:	fdc42783          	lw	a5,-36(s0)
20405ada:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405ade:	fdc42503          	lw	a0,-36(s0)
20405ae2:	abfff0ef          	jal	ra,204055a0 <__metal_driver_sifive_plic0_num_interrupts>
20405ae6:	872a                	mv	a4,a0
20405ae8:	fd842783          	lw	a5,-40(s0)
20405aec:	00e7c463          	blt	a5,a4,20405af4 <__metal_driver_riscv_plic0_register+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20405af0:	57fd                	li	a5,-1
20405af2:	a051                	j	20405b76 <__metal_driver_riscv_plic0_register+0xb8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20405af4:	fd442783          	lw	a5,-44(s0)
20405af8:	cf9d                	beqz	a5,20405b36 <__metal_driver_riscv_plic0_register+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
20405afa:	4609                	li	a2,2
20405afc:	fd842583          	lw	a1,-40(s0)
20405b00:	fdc42503          	lw	a0,-36(s0)
20405b04:	c5bff0ef          	jal	ra,2040575e <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
20405b08:	fec42703          	lw	a4,-20(s0)
20405b0c:	fd842783          	lw	a5,-40(s0)
20405b10:	078a                	slli	a5,a5,0x2
20405b12:	97ba                	add	a5,a5,a4
20405b14:	fd442703          	lw	a4,-44(s0)
20405b18:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
20405b1a:	fec42683          	lw	a3,-20(s0)
20405b1e:	fd842703          	lw	a4,-40(s0)
20405b22:	87ba                	mv	a5,a4
20405b24:	0786                	slli	a5,a5,0x1
20405b26:	97ba                	add	a5,a5,a4
20405b28:	078e                	slli	a5,a5,0x3
20405b2a:	97b6                	add	a5,a5,a3
20405b2c:	fd042703          	lw	a4,-48(s0)
20405b30:	08e7a423          	sw	a4,136(a5)
20405b34:	a081                	j	20405b74 <__metal_driver_riscv_plic0_register+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20405b36:	4605                	li	a2,1
20405b38:	fd842583          	lw	a1,-40(s0)
20405b3c:	fdc42503          	lw	a0,-36(s0)
20405b40:	c1fff0ef          	jal	ra,2040575e <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20405b44:	fec42703          	lw	a4,-20(s0)
20405b48:	fd842783          	lw	a5,-40(s0)
20405b4c:	078a                	slli	a5,a5,0x2
20405b4e:	97ba                	add	a5,a5,a4
20405b50:	20406737          	lui	a4,0x20406
20405b54:	89e70713          	addi	a4,a4,-1890 # 2040589e <__metal_plic0_default_handler>
20405b58:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
20405b5a:	fec42683          	lw	a3,-20(s0)
20405b5e:	fd842703          	lw	a4,-40(s0)
20405b62:	87ba                	mv	a5,a4
20405b64:	0786                	slli	a5,a5,0x1
20405b66:	97ba                	add	a5,a5,a4
20405b68:	078e                	slli	a5,a5,0x3
20405b6a:	97b6                	add	a5,a5,a3
20405b6c:	fd042703          	lw	a4,-48(s0)
20405b70:	08e7a223          	sw	a4,132(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20405b74:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:185
}
20405b76:	853e                	mv	a0,a5
20405b78:	50b2                	lw	ra,44(sp)
20405b7a:	5422                	lw	s0,40(sp)
20405b7c:	6145                	addi	sp,sp,48
20405b7e:	8082                	ret

20405b80 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20405b80:	7179                	addi	sp,sp,-48
20405b82:	d606                	sw	ra,44(sp)
20405b84:	d422                	sw	s0,40(sp)
20405b86:	1800                	addi	s0,sp,48
20405b88:	fca42e23          	sw	a0,-36(s0)
20405b8c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405b90:	fdc42783          	lw	a5,-36(s0)
20405b94:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405b98:	fdc42503          	lw	a0,-36(s0)
20405b9c:	a05ff0ef          	jal	ra,204055a0 <__metal_driver_sifive_plic0_num_interrupts>
20405ba0:	872a                	mv	a4,a0
20405ba2:	fd842783          	lw	a5,-40(s0)
20405ba6:	00e7c463          	blt	a5,a4,20405bae <__metal_driver_riscv_plic0_enable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
20405baa:	57fd                	li	a5,-1
20405bac:	a829                	j	20405bc6 <__metal_driver_riscv_plic0_enable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405bae:	88cfe0ef          	jal	ra,20403c3a <__metal_myhart_id>
20405bb2:	87aa                	mv	a5,a0
20405bb4:	4685                	li	a3,1
20405bb6:	fd842603          	lw	a2,-40(s0)
20405bba:	85be                	mv	a1,a5
20405bbc:	fec42503          	lw	a0,-20(s0)
20405bc0:	c3bff0ef          	jal	ra,204057fa <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20405bc4:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:197
}
20405bc6:	853e                	mv	a0,a5
20405bc8:	50b2                	lw	ra,44(sp)
20405bca:	5422                	lw	s0,40(sp)
20405bcc:	6145                	addi	sp,sp,48
20405bce:	8082                	ret

20405bd0 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20405bd0:	7179                	addi	sp,sp,-48
20405bd2:	d606                	sw	ra,44(sp)
20405bd4:	d422                	sw	s0,40(sp)
20405bd6:	1800                	addi	s0,sp,48
20405bd8:	fca42e23          	sw	a0,-36(s0)
20405bdc:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405be0:	fdc42783          	lw	a5,-36(s0)
20405be4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405be8:	fdc42503          	lw	a0,-36(s0)
20405bec:	9b5ff0ef          	jal	ra,204055a0 <__metal_driver_sifive_plic0_num_interrupts>
20405bf0:	872a                	mv	a4,a0
20405bf2:	fd842783          	lw	a5,-40(s0)
20405bf6:	00e7c463          	blt	a5,a4,20405bfe <__metal_driver_riscv_plic0_disable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
20405bfa:	57fd                	li	a5,-1
20405bfc:	a829                	j	20405c16 <__metal_driver_riscv_plic0_disable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20405bfe:	83cfe0ef          	jal	ra,20403c3a <__metal_myhart_id>
20405c02:	87aa                	mv	a5,a0
20405c04:	4681                	li	a3,0
20405c06:	fd842603          	lw	a2,-40(s0)
20405c0a:	85be                	mv	a1,a5
20405c0c:	fec42503          	lw	a0,-20(s0)
20405c10:	bebff0ef          	jal	ra,204057fa <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20405c14:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:208
}
20405c16:	853e                	mv	a0,a5
20405c18:	50b2                	lw	ra,44(sp)
20405c1a:	5422                	lw	s0,40(sp)
20405c1c:	6145                	addi	sp,sp,48
20405c1e:	8082                	ret

20405c20 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405c20:	1101                	addi	sp,sp,-32
20405c22:	ce06                	sw	ra,28(sp)
20405c24:	cc22                	sw	s0,24(sp)
20405c26:	1000                	addi	s0,sp,32
20405c28:	fea42623          	sw	a0,-20(s0)
20405c2c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20405c30:	80afe0ef          	jal	ra,20403c3a <__metal_myhart_id>
20405c34:	87aa                	mv	a5,a0
20405c36:	fe842603          	lw	a2,-24(s0)
20405c3a:	85be                	mv	a1,a5
20405c3c:	fec42503          	lw	a0,-20(s0)
20405c40:	a9bff0ef          	jal	ra,204056da <__metal_plic0_set_threshold>
20405c44:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20405c46:	853e                	mv	a0,a5
20405c48:	40f2                	lw	ra,28(sp)
20405c4a:	4462                	lw	s0,24(sp)
20405c4c:	6105                	addi	sp,sp,32
20405c4e:	8082                	ret

20405c50 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20405c50:	1101                	addi	sp,sp,-32
20405c52:	ce06                	sw	ra,28(sp)
20405c54:	cc22                	sw	s0,24(sp)
20405c56:	1000                	addi	s0,sp,32
20405c58:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20405c5c:	fdffd0ef          	jal	ra,20403c3a <__metal_myhart_id>
20405c60:	87aa                	mv	a5,a0
20405c62:	85be                	mv	a1,a5
20405c64:	fec42503          	lw	a0,-20(s0)
20405c68:	abbff0ef          	jal	ra,20405722 <__metal_plic0_get_threshold>
20405c6c:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:219
}
20405c6e:	853e                	mv	a0,a5
20405c70:	40f2                	lw	ra,28(sp)
20405c72:	4462                	lw	s0,24(sp)
20405c74:	6105                	addi	sp,sp,32
20405c76:	8082                	ret

20405c78 <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
20405c78:	7179                	addi	sp,sp,-48
20405c7a:	d606                	sw	ra,44(sp)
20405c7c:	d422                	sw	s0,40(sp)
20405c7e:	1800                	addi	s0,sp,48
20405c80:	fca42e23          	sw	a0,-36(s0)
20405c84:	fcb42c23          	sw	a1,-40(s0)
20405c88:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20405c8c:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405c90:	fdc42783          	lw	a5,-36(s0)
20405c94:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405c98:	fdc42503          	lw	a0,-36(s0)
20405c9c:	905ff0ef          	jal	ra,204055a0 <__metal_driver_sifive_plic0_num_interrupts>
20405ca0:	872a                	mv	a4,a0
20405ca2:	fd442783          	lw	a5,-44(s0)
20405ca6:	00e7c863          	blt	a5,a4,20405cb6 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20405caa:	57fd                	li	a5,-1
20405cac:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405cb0:	fe442783          	lw	a5,-28(s0)
20405cb4:	a899                	j	20405d0a <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20405cb6:	fe042623          	sw	zero,-20(s0)
20405cba:	a099                	j	20405d00 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20405cbc:	fec42783          	lw	a5,-20(s0)
20405cc0:	c795                	beqz	a5,20405cec <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20405cc2:	4685                	li	a3,1
20405cc4:	fd442603          	lw	a2,-44(s0)
20405cc8:	fec42583          	lw	a1,-20(s0)
20405ccc:	fe842503          	lw	a0,-24(s0)
20405cd0:	b2bff0ef          	jal	ra,204057fa <__metal_plic0_enable>
20405cd4:	87aa                	mv	a5,a0
20405cd6:	0017f713          	andi	a4,a5,1
20405cda:	fec42783          	lw	a5,-20(s0)
20405cde:	00f71733          	sll	a4,a4,a5
20405ce2:	fe442783          	lw	a5,-28(s0)
20405ce6:	8fd9                	or	a5,a5,a4
20405ce8:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405cec:	fec42783          	lw	a5,-20(s0)
20405cf0:	0785                	addi	a5,a5,1
20405cf2:	fef42623          	sw	a5,-20(s0)
20405cf6:	fd842783          	lw	a5,-40(s0)
20405cfa:	8385                	srli	a5,a5,0x1
20405cfc:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20405d00:	fd842783          	lw	a5,-40(s0)
20405d04:	ffc5                	bnez	a5,20405cbc <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20405d06:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20405d0a:	853e                	mv	a0,a5
20405d0c:	50b2                	lw	ra,44(sp)
20405d0e:	5422                	lw	s0,40(sp)
20405d10:	6145                	addi	sp,sp,48
20405d12:	8082                	ret

20405d14 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20405d14:	7179                	addi	sp,sp,-48
20405d16:	d606                	sw	ra,44(sp)
20405d18:	d422                	sw	s0,40(sp)
20405d1a:	1800                	addi	s0,sp,48
20405d1c:	fca42e23          	sw	a0,-36(s0)
20405d20:	fcb42c23          	sw	a1,-40(s0)
20405d24:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20405d28:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405d2c:	fdc42783          	lw	a5,-36(s0)
20405d30:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405d34:	fdc42503          	lw	a0,-36(s0)
20405d38:	869ff0ef          	jal	ra,204055a0 <__metal_driver_sifive_plic0_num_interrupts>
20405d3c:	872a                	mv	a4,a0
20405d3e:	fd442783          	lw	a5,-44(s0)
20405d42:	00e7c863          	blt	a5,a4,20405d52 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20405d46:	57fd                	li	a5,-1
20405d48:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20405d4c:	fe442783          	lw	a5,-28(s0)
20405d50:	a899                	j	20405da6 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20405d52:	fe042623          	sw	zero,-20(s0)
20405d56:	a099                	j	20405d9c <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20405d58:	fec42783          	lw	a5,-20(s0)
20405d5c:	c795                	beqz	a5,20405d88 <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20405d5e:	4681                	li	a3,0
20405d60:	fd442603          	lw	a2,-44(s0)
20405d64:	fec42583          	lw	a1,-20(s0)
20405d68:	fe842503          	lw	a0,-24(s0)
20405d6c:	a8fff0ef          	jal	ra,204057fa <__metal_plic0_enable>
20405d70:	87aa                	mv	a5,a0
20405d72:	0017f713          	andi	a4,a5,1
20405d76:	fec42783          	lw	a5,-20(s0)
20405d7a:	00f71733          	sll	a4,a4,a5
20405d7e:	fe442783          	lw	a5,-28(s0)
20405d82:	8fd9                	or	a5,a5,a4
20405d84:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405d88:	fec42783          	lw	a5,-20(s0)
20405d8c:	0785                	addi	a5,a5,1
20405d8e:	fef42623          	sw	a5,-20(s0)
20405d92:	fd842783          	lw	a5,-40(s0)
20405d96:	8385                	srli	a5,a5,0x1
20405d98:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20405d9c:	fd842783          	lw	a5,-40(s0)
20405da0:	ffc5                	bnez	a5,20405d58 <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405da2:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20405da6:	853e                	mv	a0,a5
20405da8:	50b2                	lw	ra,44(sp)
20405daa:	5422                	lw	s0,40(sp)
20405dac:	6145                	addi	sp,sp,48
20405dae:	8082                	ret

20405db0 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405db0:	7179                	addi	sp,sp,-48
20405db2:	d606                	sw	ra,44(sp)
20405db4:	d422                	sw	s0,40(sp)
20405db6:	1800                	addi	s0,sp,48
20405db8:	fca42e23          	sw	a0,-36(s0)
20405dbc:	fcb42c23          	sw	a1,-40(s0)
20405dc0:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20405dc4:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20405dc8:	fe042623          	sw	zero,-20(s0)
20405dcc:	a091                	j	20405e10 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20405dce:	fec42783          	lw	a5,-20(s0)
20405dd2:	c78d                	beqz	a5,20405dfc <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20405dd4:	fd442603          	lw	a2,-44(s0)
20405dd8:	fec42583          	lw	a1,-20(s0)
20405ddc:	fdc42503          	lw	a0,-36(s0)
20405de0:	8fbff0ef          	jal	ra,204056da <__metal_plic0_set_threshold>
20405de4:	87aa                	mv	a5,a0
20405de6:	0017f713          	andi	a4,a5,1
20405dea:	fec42783          	lw	a5,-20(s0)
20405dee:	00f71733          	sll	a4,a4,a5
20405df2:	fe842783          	lw	a5,-24(s0)
20405df6:	8fd9                	or	a5,a5,a4
20405df8:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405dfc:	fec42783          	lw	a5,-20(s0)
20405e00:	0785                	addi	a5,a5,1
20405e02:	fef42623          	sw	a5,-20(s0)
20405e06:	fd842783          	lw	a5,-40(s0)
20405e0a:	8385                	srli	a5,a5,0x1
20405e0c:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20405e10:	fd842783          	lw	a5,-40(s0)
20405e14:	ffcd                	bnez	a5,20405dce <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20405e16:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:281
}
20405e1a:	853e                	mv	a0,a5
20405e1c:	50b2                	lw	ra,44(sp)
20405e1e:	5422                	lw	s0,40(sp)
20405e20:	6145                	addi	sp,sp,48
20405e22:	8082                	ret

20405e24 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20405e24:	1101                	addi	sp,sp,-32
20405e26:	ce06                	sw	ra,28(sp)
20405e28:	cc22                	sw	s0,24(sp)
20405e2a:	1000                	addi	s0,sp,32
20405e2c:	fea42623          	sw	a0,-20(s0)
20405e30:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20405e34:	fe842583          	lw	a1,-24(s0)
20405e38:	fec42503          	lw	a0,-20(s0)
20405e3c:	8e7ff0ef          	jal	ra,20405722 <__metal_plic0_get_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20405e40:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:287
}
20405e42:	853e                	mv	a0,a5
20405e44:	40f2                	lw	ra,28(sp)
20405e46:	4462                	lw	s0,24(sp)
20405e48:	6105                	addi	sp,sp,32
20405e4a:	8082                	ret

20405e4c <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20405e4c:	1101                	addi	sp,sp,-32
20405e4e:	ce22                	sw	s0,28(sp)
20405e50:	1000                	addi	s0,sp,32
20405e52:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20405e56:	800007b7          	lui	a5,0x80000
20405e5a:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe05c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1039
}
20405e5e:	853e                	mv	a0,a5
20405e60:	4472                	lw	s0,28(sp)
20405e62:	6105                	addi	sp,sp,32
20405e64:	8082                	ret

20405e66 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20405e66:	1101                	addi	sp,sp,-32
20405e68:	ce22                	sw	s0,28(sp)
20405e6a:	1000                	addi	s0,sp,32
20405e6c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405e70:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1044
}
20405e74:	853e                	mv	a0,a5
20405e76:	4472                	lw	s0,28(sp)
20405e78:	6105                	addi	sp,sp,32
20405e7a:	8082                	ret

20405e7c <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20405e7c:	1101                	addi	sp,sp,-32
20405e7e:	ce22                	sw	s0,28(sp)
20405e80:	1000                	addi	s0,sp,32
20405e82:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20405e86:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1054
}
20405e88:	853e                	mv	a0,a5
20405e8a:	4472                	lw	s0,28(sp)
20405e8c:	6105                	addi	sp,sp,32
20405e8e:	8082                	ret

20405e90 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405e90:	1141                	addi	sp,sp,-16
20405e92:	c622                	sw	s0,12(sp)
20405e94:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405e96:	204017b7          	lui	a5,0x20401
20405e9a:	03478793          	addi	a5,a5,52 # 20401034 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405e9e:	853e                	mv	a0,a5
20405ea0:	4432                	lw	s0,12(sp)
20405ea2:	0141                	addi	sp,sp,16
20405ea4:	8082                	ret

20405ea6 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405ea6:	7139                	addi	sp,sp,-64
20405ea8:	de06                	sw	ra,60(sp)
20405eaa:	dc22                	sw	s0,56(sp)
20405eac:	0080                	addi	s0,sp,64
20405eae:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405eb2:	fcc42503          	lw	a0,-52(s0)
20405eb6:	3f59                	jal	20405e4c <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20405eb8:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20405ebc:	fcc42503          	lw	a0,-52(s0)
20405ec0:	3f75                	jal	20405e7c <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20405ec2:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20405ec6:	fcc42503          	lw	a0,-52(s0)
20405eca:	3f71                	jal	20405e66 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20405ecc:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405ed0:	37c1                	jal	20405e90 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405ed2:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20405ed6:	fe042783          	lw	a5,-32(s0)
20405eda:	439c                	lw	a5,0(a5)
20405edc:	fe842583          	lw	a1,-24(s0)
20405ee0:	fe442503          	lw	a0,-28(s0)
20405ee4:	9782                	jalr	a5
20405ee6:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20405eea:	fdc42703          	lw	a4,-36(s0)
20405eee:	400007b7          	lui	a5,0x40000
20405ef2:	8ff9                	and	a5,a5,a4
20405ef4:	e399                	bnez	a5,20405efa <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20405ef6:	57fd                	li	a5,-1
20405ef8:	a025                	j	20405f20 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20405efa:	fdc42783          	lw	a5,-36(s0)
20405efe:	0007c463          	bltz	a5,20405f06 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20405f02:	57fd                	li	a5,-1
20405f04:	a831                	j	20405f20 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20405f06:	fec42503          	lw	a0,-20(s0)
20405f0a:	107010ef          	jal	ra,20407810 <metal_clock_get_rate_hz>
20405f0e:	87aa                	mv	a5,a0
20405f10:	873e                	mv	a4,a5
20405f12:	fdc42783          	lw	a5,-36(s0)
20405f16:	03f7f793          	andi	a5,a5,63
20405f1a:	0785                	addi	a5,a5,1
20405f1c:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405f20:	853e                	mv	a0,a5
20405f22:	50f2                	lw	ra,60(sp)
20405f24:	5462                	lw	s0,56(sp)
20405f26:	6121                	addi	sp,sp,64
20405f28:	8082                	ret

20405f2a <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405f2a:	1101                	addi	sp,sp,-32
20405f2c:	ce06                	sw	ra,28(sp)
20405f2e:	cc22                	sw	s0,24(sp)
20405f30:	1000                	addi	s0,sp,32
20405f32:	fea42623          	sw	a0,-20(s0)
20405f36:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20405f3a:	fec42503          	lw	a0,-20(s0)
20405f3e:	37a5                	jal	20405ea6 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405f40:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405f42:	853e                	mv	a0,a5
20405f44:	40f2                	lw	ra,28(sp)
20405f46:	4462                	lw	s0,24(sp)
20405f48:	6105                	addi	sp,sp,32
20405f4a:	8082                	ret

20405f4c <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1060
{
20405f4c:	1101                	addi	sp,sp,-32
20405f4e:	ce22                	sw	s0,28(sp)
20405f50:	1000                	addi	s0,sp,32
20405f52:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20405f56:	800007b7          	lui	a5,0x80000
20405f5a:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe050>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1062
}
20405f5e:	853e                	mv	a0,a5
20405f60:	4472                	lw	s0,28(sp)
20405f62:	6105                	addi	sp,sp,32
20405f64:	8082                	ret

20405f66 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1065
{
20405f66:	1101                	addi	sp,sp,-32
20405f68:	ce22                	sw	s0,28(sp)
20405f6a:	1000                	addi	s0,sp,32
20405f6c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405f70:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1067
}
20405f74:	853e                	mv	a0,a5
20405f76:	4472                	lw	s0,28(sp)
20405f78:	6105                	addi	sp,sp,32
20405f7a:	8082                	ret

20405f7c <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1070
{
20405f7c:	1101                	addi	sp,sp,-32
20405f7e:	ce22                	sw	s0,28(sp)
20405f80:	1000                	addi	s0,sp,32
20405f82:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20405f86:	4791                	li	a5,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1072
}
20405f88:	853e                	mv	a0,a5
20405f8a:	4472                	lw	s0,28(sp)
20405f8c:	6105                	addi	sp,sp,32
20405f8e:	8082                	ret

20405f90 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
20405f90:	1141                	addi	sp,sp,-16
20405f92:	c622                	sw	s0,12(sp)
20405f94:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405f96:	204017b7          	lui	a5,0x20401
20405f9a:	03478793          	addi	a5,a5,52 # 20401034 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405f9e:	853e                	mv	a0,a5
20405fa0:	4432                	lw	s0,12(sp)
20405fa2:	0141                	addi	sp,sp,16
20405fa4:	8082                	ret

20405fa6 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405fa6:	7139                	addi	sp,sp,-64
20405fa8:	de06                	sw	ra,60(sp)
20405faa:	dc22                	sw	s0,56(sp)
20405fac:	0080                	addi	s0,sp,64
20405fae:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405fb2:	fcc42503          	lw	a0,-52(s0)
20405fb6:	3f59                	jal	20405f4c <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20405fb8:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20405fbc:	fcc42503          	lw	a0,-52(s0)
20405fc0:	3f75                	jal	20405f7c <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20405fc2:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405fc6:	fcc42503          	lw	a0,-52(s0)
20405fca:	3f71                	jal	20405f66 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20405fcc:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405fd0:	37c1                	jal	20405f90 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405fd2:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405fd6:	fe042783          	lw	a5,-32(s0)
20405fda:	439c                	lw	a5,0(a5)
20405fdc:	fe842583          	lw	a1,-24(s0)
20405fe0:	fe442503          	lw	a0,-28(s0)
20405fe4:	9782                	jalr	a5
20405fe6:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20405fea:	fdc42703          	lw	a4,-36(s0)
20405fee:	400007b7          	lui	a5,0x40000
20405ff2:	8ff9                	and	a5,a5,a4
20405ff4:	e399                	bnez	a5,20405ffa <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20405ff6:	57fd                	li	a5,-1
20405ff8:	a821                	j	20406010 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20405ffa:	fdc42783          	lw	a5,-36(s0)
20405ffe:	0007c463          	bltz	a5,20406006 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20406002:	57fd                	li	a5,-1
20406004:	a031                	j	20406010 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20406006:	fec42503          	lw	a0,-20(s0)
2040600a:	007010ef          	jal	ra,20407810 <metal_clock_get_rate_hz>
2040600e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20406010:	853e                	mv	a0,a5
20406012:	50f2                	lw	ra,60(sp)
20406014:	5462                	lw	s0,56(sp)
20406016:	6121                	addi	sp,sp,64
20406018:	8082                	ret

2040601a <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2040601a:	1101                	addi	sp,sp,-32
2040601c:	ce06                	sw	ra,28(sp)
2040601e:	cc22                	sw	s0,24(sp)
20406020:	1000                	addi	s0,sp,32
20406022:	fea42623          	sw	a0,-20(s0)
20406026:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
2040602a:	fec42503          	lw	a0,-20(s0)
2040602e:	3fa5                	jal	20405fa6 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20406030:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20406032:	853e                	mv	a0,a5
20406034:	40f2                	lw	ra,28(sp)
20406036:	4462                	lw	s0,24(sp)
20406038:	6105                	addi	sp,sp,32
2040603a:	8082                	ret

2040603c <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1121
{
2040603c:	1101                	addi	sp,sp,-32
2040603e:	ce22                	sw	s0,28(sp)
20406040:	1000                	addi	s0,sp,32
20406042:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20406046:	800007b7          	lui	a5,0x80000
2040604a:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xffffe768>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1123
}
2040604e:	853e                	mv	a0,a5
20406050:	4472                	lw	s0,28(sp)
20406052:	6105                	addi	sp,sp,32
20406054:	8082                	ret

20406056 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1126
{
20406056:	1101                	addi	sp,sp,-32
20406058:	ce22                	sw	s0,28(sp)
2040605a:	1000                	addi	s0,sp,32
2040605c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20406060:	800007b7          	lui	a5,0x80000
20406064:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xffffe774>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1128
}
20406068:	853e                	mv	a0,a5
2040606a:	4472                	lw	s0,28(sp)
2040606c:	6105                	addi	sp,sp,32
2040606e:	8082                	ret

20406070 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1131
{
20406070:	1101                	addi	sp,sp,-32
20406072:	ce22                	sw	s0,28(sp)
20406074:	1000                	addi	s0,sp,32
20406076:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2040607a:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1133
}
2040607e:	853e                	mv	a0,a5
20406080:	4472                	lw	s0,28(sp)
20406082:	6105                	addi	sp,sp,32
20406084:	8082                	ret

20406086 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1136
{
20406086:	1101                	addi	sp,sp,-32
20406088:	ce22                	sw	s0,28(sp)
2040608a:	1000                	addi	s0,sp,32
2040608c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20406090:	47b1                	li	a5,12
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1138
}
20406092:	853e                	mv	a0,a5
20406094:	4472                	lw	s0,28(sp)
20406096:	6105                	addi	sp,sp,32
20406098:	8082                	ret

2040609a <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1141
{
2040609a:	1141                	addi	sp,sp,-16
2040609c:	c622                	sw	s0,12(sp)
2040609e:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
204060a0:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1143
}
204060a4:	853e                	mv	a0,a5
204060a6:	4432                	lw	s0,12(sp)
204060a8:	0141                	addi	sp,sp,16
204060aa:	8082                	ret

204060ac <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1146
{
204060ac:	1141                	addi	sp,sp,-16
204060ae:	c622                	sw	s0,12(sp)
204060b0:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
204060b2:	47a1                	li	a5,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1148
}
204060b4:	853e                	mv	a0,a5
204060b6:	4432                	lw	s0,12(sp)
204060b8:	0141                	addi	sp,sp,16
204060ba:	8082                	ret

204060bc <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1151
{
204060bc:	1141                	addi	sp,sp,-16
204060be:	c622                	sw	s0,12(sp)
204060c0:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1152
		return 16000000;
204060c2:	00f427b7          	lui	a5,0xf42
204060c6:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1153
}
204060ca:	853e                	mv	a0,a5
204060cc:	4432                	lw	s0,12(sp)
204060ce:	0141                	addi	sp,sp,16
204060d0:	8082                	ret

204060d2 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1159
{
204060d2:	1141                	addi	sp,sp,-16
204060d4:	c622                	sw	s0,12(sp)
204060d6:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
204060d8:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1161
}
204060dc:	853e                	mv	a0,a5
204060de:	4432                	lw	s0,12(sp)
204060e0:	0141                	addi	sp,sp,16
204060e2:	8082                	ret

204060e4 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
204060e4:	1141                	addi	sp,sp,-16
204060e6:	c622                	sw	s0,12(sp)
204060e8:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
204060ea:	204017b7          	lui	a5,0x20401
204060ee:	03478793          	addi	a5,a5,52 # 20401034 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
204060f2:	853e                	mv	a0,a5
204060f4:	4432                	lw	s0,12(sp)
204060f6:	0141                	addi	sp,sp,16
204060f8:	8082                	ret

204060fa <get_pll_config_freq>:
get_pll_config_freq():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
204060fa:	1101                	addi	sp,sp,-32
204060fc:	ce22                	sw	s0,28(sp)
204060fe:	1000                	addi	s0,sp,32
20406100:	fea42623          	sw	a0,-20(s0)
20406104:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20406108:	fe842783          	lw	a5,-24(s0)
2040610c:	479c                	lw	a5,8(a5)
2040610e:	fec42703          	lw	a4,-20(s0)
20406112:	00f76963          	bltu	a4,a5,20406124 <get_pll_config_freq+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20406116:	fe842783          	lw	a5,-24(s0)
2040611a:	47dc                	lw	a5,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
2040611c:	fec42703          	lw	a4,-20(s0)
20406120:	00e7f463          	bgeu	a5,a4,20406128 <get_pll_config_freq+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20406124:	57fd                	li	a5,-1
20406126:	a829                	j	20406140 <get_pll_config_freq+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20406128:	fe842783          	lw	a5,-24(s0)
2040612c:	4398                	lw	a4,0(a5)
2040612e:	fec42783          	lw	a5,-20(s0)
20406132:	02f70733          	mul	a4,a4,a5
20406136:	fe842783          	lw	a5,-24(s0)
2040613a:	43dc                	lw	a5,4(a5)
2040613c:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20406140:	853e                	mv	a0,a5
20406142:	4472                	lw	s0,28(sp)
20406144:	6105                	addi	sp,sp,32
20406146:	8082                	ret

20406148 <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20406148:	7139                	addi	sp,sp,-64
2040614a:	de06                	sw	ra,60(sp)
2040614c:	dc22                	sw	s0,56(sp)
2040614e:	0080                	addi	s0,sp,64
20406150:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20406154:	fcc42783          	lw	a5,-52(s0)
20406158:	853e                	mv	a0,a5
2040615a:	efdff0ef          	jal	ra,20406056 <__metal_driver_sifive_fe310_g000_pll_pllref>
2040615e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20406162:	f5bff0ef          	jal	ra,204060bc <__metal_driver_sifive_fe310_g000_pll_init_rate>
20406166:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
2040616a:	f43ff0ef          	jal	ra,204060ac <__metal_driver_sifive_fe310_g000_pll_config_offset>
2040616e:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20406172:	f61ff0ef          	jal	ra,204060d2 <__metal_driver_sifive_fe310_g000_prci_base>
20406176:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2040617a:	fe042703          	lw	a4,-32(s0)
2040617e:	fe442783          	lw	a5,-28(s0)
20406182:	97ba                	add	a5,a5,a4
20406184:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20406188:	fcc42783          	lw	a5,-52(s0)
2040618c:	43dc                	lw	a5,4(a5)
2040618e:	853e                	mv	a0,a5
20406190:	5ea010ef          	jal	ra,2040777a <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20406194:	fdc42783          	lw	a5,-36(s0)
20406198:	4398                	lw	a4,0(a5)
2040619a:	67c1                	lui	a5,0x10
2040619c:	8ff9                	and	a5,a5,a4
2040619e:	cb91                	beqz	a5,204061b2 <__metal_driver_sifive_fe310_g000_pll_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
204061a0:	fdc42783          	lw	a5,-36(s0)
204061a4:	4398                	lw	a4,0(a5)
204061a6:	77c1                	lui	a5,0xffff0
204061a8:	17fd                	addi	a5,a5,-1
204061aa:	8f7d                	and	a4,a4,a5
204061ac:	fdc42783          	lw	a5,-36(s0)
204061b0:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
204061b2:	fec42783          	lw	a5,-20(s0)
204061b6:	cb91                	beqz	a5,204061ca <__metal_driver_sifive_fe310_g000_pll_init+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
204061b8:	fdc42783          	lw	a5,-36(s0)
204061bc:	4398                	lw	a4,0(a5)
204061be:	000207b7          	lui	a5,0x20
204061c2:	8f5d                	or	a4,a4,a5
204061c4:	fdc42783          	lw	a5,-36(s0)
204061c8:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
204061ca:	fcc42783          	lw	a5,-52(s0)
204061ce:	439c                	lw	a5,0(a5)
204061d0:	43d8                	lw	a4,4(a5)
204061d2:	fcc42783          	lw	a5,-52(s0)
204061d6:	fe842583          	lw	a1,-24(s0)
204061da:	853e                	mv	a0,a5
204061dc:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
204061de:	fcc42783          	lw	a5,-52(s0)
204061e2:	479c                	lw	a5,8(a5)
204061e4:	853e                	mv	a0,a5
204061e6:	594010ef          	jal	ra,2040777a <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
204061ea:	0001                	nop
204061ec:	50f2                	lw	ra,60(sp)
204061ee:	5462                	lw	s0,56(sp)
204061f0:	6121                	addi	sp,sp,64
204061f2:	8082                	ret

204061f4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
204061f4:	711d                	addi	sp,sp,-96
204061f6:	ce86                	sw	ra,92(sp)
204061f8:	cca2                	sw	s0,88(sp)
204061fa:	1080                	addi	s0,sp,96
204061fc:	faa42623          	sw	a0,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20406200:	fac42503          	lw	a0,-84(s0)
20406204:	e53ff0ef          	jal	ra,20406056 <__metal_driver_sifive_fe310_g000_pll_pllref>
20406208:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
2040620c:	fac42503          	lw	a0,-84(s0)
20406210:	e2dff0ef          	jal	ra,2040603c <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20406214:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20406218:	fac42503          	lw	a0,-84(s0)
2040621c:	e91ff0ef          	jal	ra,204060ac <__metal_driver_sifive_fe310_g000_pll_config_offset>
20406220:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20406224:	fac42503          	lw	a0,-84(s0)
20406228:	e73ff0ef          	jal	ra,2040609a <__metal_driver_sifive_fe310_g000_pll_config_base>
2040622c:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20406230:	fac42503          	lw	a0,-84(s0)
20406234:	e53ff0ef          	jal	ra,20406086 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20406238:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
2040623c:	fac42503          	lw	a0,-84(s0)
20406240:	e31ff0ef          	jal	ra,20406070 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20406244:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20406248:	e9dff0ef          	jal	ra,204060e4 <__metal_driver_sifive_fe310_g000_prci_vtable>
2040624c:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20406250:	fd442783          	lw	a5,-44(s0)
20406254:	439c                	lw	a5,0(a5)
20406256:	fe442583          	lw	a1,-28(s0)
2040625a:	fe042503          	lw	a0,-32(s0)
2040625e:	9782                	jalr	a5
20406260:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20406264:	fd442783          	lw	a5,-44(s0)
20406268:	439c                	lw	a5,0(a5)
2040626a:	fdc42583          	lw	a1,-36(s0)
2040626e:	fd842503          	lw	a0,-40(s0)
20406272:	9782                	jalr	a5
20406274:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20406278:	fd042703          	lw	a4,-48(s0)
2040627c:	67c1                	lui	a5,0x10
2040627e:	8f7d                	and	a4,a4,a5
20406280:	67c1                	lui	a5,0x10
20406282:	00f77863          	bgeu	a4,a5,20406292 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20406286:	fe842503          	lw	a0,-24(s0)
2040628a:	586010ef          	jal	ra,20407810 <metal_clock_get_rate_hz>
2040628e:	87aa                	mv	a5,a0
20406290:	a8e1                	j	20406368 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20406292:	fd042703          	lw	a4,-48(s0)
20406296:	000207b7          	lui	a5,0x20
2040629a:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
2040629c:	000207b7          	lui	a5,0x20
204062a0:	00f76563          	bltu	a4,a5,204062aa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
204062a4:	fec42783          	lw	a5,-20(s0)
204062a8:	a019                	j	204062ae <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xba>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
204062aa:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
204062ae:	853e                	mv	a0,a5
204062b0:	560010ef          	jal	ra,20407810 <metal_clock_get_rate_hz>
204062b4:	fca42423          	sw	a0,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
204062b8:	fd042703          	lw	a4,-48(s0)
204062bc:	000407b7          	lui	a5,0x40
204062c0:	8f7d                	and	a4,a4,a5
204062c2:	000407b7          	lui	a5,0x40
204062c6:	00f76563          	bltu	a4,a5,204062d0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xdc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
204062ca:	fc842783          	lw	a5,-56(s0)
204062ce:	a869                	j	20406368 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
204062d0:	fd042783          	lw	a5,-48(s0)
204062d4:	8b9d                	andi	a5,a5,7
204062d6:	0785                	addi	a5,a5,1
204062d8:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
204062dc:	fd042783          	lw	a5,-48(s0)
204062e0:	3f07f793          	andi	a5,a5,1008
204062e4:	8391                	srli	a5,a5,0x4
204062e6:	0785                	addi	a5,a5,1
204062e8:	0786                	slli	a5,a5,0x1
204062ea:	fcf42023          	sw	a5,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
204062ee:	fd042703          	lw	a4,-48(s0)
204062f2:	6785                	lui	a5,0x1
204062f4:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204062f8:	8f7d                	and	a4,a4,a5
204062fa:	3ff00793          	li	a5,1023
204062fe:	00e7e463          	bltu	a5,a4,20406306 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x112>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20406302:	57fd                	li	a5,-1
20406304:	a095                	j	20406368 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20406306:	fd042703          	lw	a4,-48(s0)
2040630a:	6785                	lui	a5,0x1
2040630c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20406310:	8ff9                	and	a5,a5,a4
20406312:	83a9                	srli	a5,a5,0xa
20406314:	4705                	li	a4,1
20406316:	00f717b3          	sll	a5,a4,a5
2040631a:	faf42e23          	sw	a5,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
2040631e:	fc842703          	lw	a4,-56(s0)
20406322:	fc442783          	lw	a5,-60(s0)
20406326:	02f74733          	div	a4,a4,a5
2040632a:	fc042783          	lw	a5,-64(s0)
2040632e:	02f70733          	mul	a4,a4,a5
20406332:	fbc42783          	lw	a5,-68(s0)
20406336:	02f747b3          	div	a5,a4,a5
2040633a:	faf42c23          	sw	a5,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2040633e:	fcc42783          	lw	a5,-52(s0)
20406342:	1007f713          	andi	a4,a5,256
20406346:	0ff00793          	li	a5,255
2040634a:	00e7f563          	bgeu	a5,a4,20406354 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x160>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2040634e:	fb842783          	lw	a5,-72(s0)
20406352:	a819                	j	20406368 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x174>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20406354:	fb842703          	lw	a4,-72(s0)
20406358:	fcc42783          	lw	a5,-52(s0)
2040635c:	03f7f793          	andi	a5,a5,63
20406360:	0785                	addi	a5,a5,1
20406362:	0786                	slli	a5,a5,0x1
20406364:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20406368:	853e                	mv	a0,a5
2040636a:	40f6                	lw	ra,92(sp)
2040636c:	4466                	lw	s0,88(sp)
2040636e:	6125                	addi	sp,sp,96
20406370:	8082                	ret

20406372 <find_closest_config>:
find_closest_config():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
20406372:	7139                	addi	sp,sp,-64
20406374:	de06                	sw	ra,60(sp)
20406376:	dc22                	sw	s0,56(sp)
20406378:	0080                	addi	s0,sp,64
2040637a:	fca42623          	sw	a0,-52(s0)
2040637e:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
20406382:	57fd                	li	a5,-1
20406384:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20406388:	800007b7          	lui	a5,0x80000
2040638c:	fff7c793          	not	a5,a5
20406390:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20406394:	04300793          	li	a5,67
20406398:	fef42223          	sw	a5,-28(s0)
2040639c:	a0b5                	j	20406408 <find_closest_config+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
2040639e:	fcc42683          	lw	a3,-52(s0)
204063a2:	fe442783          	lw	a5,-28(s0)
204063a6:	00579713          	slli	a4,a5,0x5
204063aa:	204007b7          	lui	a5,0x20400
204063ae:	6d878793          	addi	a5,a5,1752 # 204006d8 <pll_configs>
204063b2:	97ba                	add	a5,a5,a4
204063b4:	85be                	mv	a1,a5
204063b6:	8536                	mv	a0,a3
204063b8:	d43ff0ef          	jal	ra,204060fa <get_pll_config_freq>
204063bc:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
204063c0:	fe042703          	lw	a4,-32(s0)
204063c4:	57fd                	li	a5,-1
204063c6:	02f70c63          	beq	a4,a5,204063fe <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
204063ca:	fe042703          	lw	a4,-32(s0)
204063ce:	fc842783          	lw	a5,-56(s0)
204063d2:	8f1d                	sub	a4,a4,a5
204063d4:	41f75793          	srai	a5,a4,0x1f
204063d8:	8f3d                	xor	a4,a4,a5
204063da:	40f707b3          	sub	a5,a4,a5
204063de:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
204063e2:	fdc42703          	lw	a4,-36(s0)
204063e6:	fe842783          	lw	a5,-24(s0)
204063ea:	00f75a63          	bge	a4,a5,204063fe <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
204063ee:	fe442783          	lw	a5,-28(s0)
204063f2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
204063f6:	fdc42783          	lw	a5,-36(s0)
204063fa:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
204063fe:	fe442783          	lw	a5,-28(s0)
20406402:	17fd                	addi	a5,a5,-1
20406404:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20406408:	fe442783          	lw	a5,-28(s0)
2040640c:	f807d9e3          	bgez	a5,2040639e <find_closest_config+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20406410:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
20406414:	853e                	mv	a0,a5
20406416:	50f2                	lw	ra,60(sp)
20406418:	5462                	lw	s0,56(sp)
2040641a:	6121                	addi	sp,sp,64
2040641c:	8082                	ret

2040641e <configure_pll>:
configure_pll():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
2040641e:	7179                	addi	sp,sp,-48
20406420:	d606                	sw	ra,44(sp)
20406422:	d422                	sw	s0,40(sp)
20406424:	1800                	addi	s0,sp,48
20406426:	fca42e23          	sw	a0,-36(s0)
2040642a:	fcb42c23          	sw	a1,-40(s0)
2040642e:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
20406432:	fdc42783          	lw	a5,-36(s0)
20406436:	439c                	lw	a5,0(a5)
20406438:	ff87f713          	andi	a4,a5,-8
2040643c:	fdc42783          	lw	a5,-36(s0)
20406440:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20406442:	fdc42783          	lw	a5,-36(s0)
20406446:	4398                	lw	a4,0(a5)
20406448:	fd442783          	lw	a5,-44(s0)
2040644c:	4b9c                	lw	a5,16(a5)
2040644e:	8b9d                	andi	a5,a5,7
20406450:	8f5d                	or	a4,a4,a5
20406452:	fdc42783          	lw	a5,-36(s0)
20406456:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20406458:	fdc42783          	lw	a5,-36(s0)
2040645c:	439c                	lw	a5,0(a5)
2040645e:	c0f7f713          	andi	a4,a5,-1009
20406462:	fdc42783          	lw	a5,-36(s0)
20406466:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20406468:	fdc42783          	lw	a5,-36(s0)
2040646c:	4398                	lw	a4,0(a5)
2040646e:	fd442783          	lw	a5,-44(s0)
20406472:	4bdc                	lw	a5,20(a5)
20406474:	0792                	slli	a5,a5,0x4
20406476:	3f07f793          	andi	a5,a5,1008
2040647a:	8f5d                	or	a4,a4,a5
2040647c:	fdc42783          	lw	a5,-36(s0)
20406480:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20406482:	fdc42783          	lw	a5,-36(s0)
20406486:	4398                	lw	a4,0(a5)
20406488:	77fd                	lui	a5,0xfffff
2040648a:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd3ef>
2040648e:	8f7d                	and	a4,a4,a5
20406490:	fdc42783          	lw	a5,-36(s0)
20406494:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20406496:	fdc42783          	lw	a5,-36(s0)
2040649a:	4398                	lw	a4,0(a5)
2040649c:	fd442783          	lw	a5,-44(s0)
204064a0:	4f9c                	lw	a5,24(a5)
204064a2:	00a79693          	slli	a3,a5,0xa
204064a6:	6785                	lui	a5,0x1
204064a8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204064ac:	8ff5                	and	a5,a5,a3
204064ae:	8f5d                	or	a4,a4,a5
204064b0:	fdc42783          	lw	a5,-36(s0)
204064b4:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
204064b6:	fd442783          	lw	a5,-44(s0)
204064ba:	4fdc                	lw	a5,28(a5)
204064bc:	0207db63          	bgez	a5,204064f2 <configure_pll+0xd4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
204064c0:	fd842783          	lw	a5,-40(s0)
204064c4:	439c                	lw	a5,0(a5)
204064c6:	1007e713          	ori	a4,a5,256
204064ca:	fd842783          	lw	a5,-40(s0)
204064ce:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
204064d0:	fd842783          	lw	a5,-40(s0)
204064d4:	439c                	lw	a5,0(a5)
204064d6:	fc07f713          	andi	a4,a5,-64
204064da:	fd842783          	lw	a5,-40(s0)
204064de:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
204064e0:	fd842783          	lw	a5,-40(s0)
204064e4:	439c                	lw	a5,0(a5)
204064e6:	0017e713          	ori	a4,a5,1
204064ea:	fd842783          	lw	a5,-40(s0)
204064ee:	c398                	sw	a4,0(a5)
204064f0:	a82d                	j	2040652a <configure_pll+0x10c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
204064f2:	fd842783          	lw	a5,-40(s0)
204064f6:	439c                	lw	a5,0(a5)
204064f8:	eff7f713          	andi	a4,a5,-257
204064fc:	fd842783          	lw	a5,-40(s0)
20406500:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20406502:	fd842783          	lw	a5,-40(s0)
20406506:	439c                	lw	a5,0(a5)
20406508:	fc07f713          	andi	a4,a5,-64
2040650c:	fd842783          	lw	a5,-40(s0)
20406510:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20406512:	fd842783          	lw	a5,-40(s0)
20406516:	4398                	lw	a4,0(a5)
20406518:	fd442783          	lw	a5,-44(s0)
2040651c:	4fdc                	lw	a5,28(a5)
2040651e:	03f7f793          	andi	a5,a5,63
20406522:	8f5d                	or	a4,a4,a5
20406524:	fd842783          	lw	a5,-40(s0)
20406528:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
2040652a:	fdc42783          	lw	a5,-36(s0)
2040652e:	4398                	lw	a4,0(a5)
20406530:	fffc07b7          	lui	a5,0xfffc0
20406534:	17fd                	addi	a5,a5,-1
20406536:	8f7d                	and	a4,a4,a5
20406538:	fdc42783          	lw	a5,-36(s0)
2040653c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
2040653e:	fe040793          	addi	a5,s0,-32
20406542:	863e                	mv	a2,a5
20406544:	4585                	li	a1,1
20406546:	800007b7          	lui	a5,0x80000
2040654a:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe79c>
2040654e:	c78fd0ef          	jal	ra,204039c6 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20406552:	fe042603          	lw	a2,-32(s0)
20406556:	fe442683          	lw	a3,-28(s0)
2040655a:	4511                	li	a0,4
2040655c:	4581                	li	a1,0
2040655e:	00a60733          	add	a4,a2,a0
20406562:	883a                	mv	a6,a4
20406564:	00c83833          	sltu	a6,a6,a2
20406568:	00b687b3          	add	a5,a3,a1
2040656c:	00f806b3          	add	a3,a6,a5
20406570:	87b6                	mv	a5,a3
20406572:	fee42423          	sw	a4,-24(s0)
20406576:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2040657a:	a819                	j	20406590 <configure_pll+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
2040657c:	fe040793          	addi	a5,s0,-32
20406580:	863e                	mv	a2,a5
20406582:	4585                	li	a1,1
20406584:	800007b7          	lui	a5,0x80000
20406588:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe79c>
2040658c:	c3afd0ef          	jal	ra,204039c6 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20406590:	fe042703          	lw	a4,-32(s0)
20406594:	fe442783          	lw	a5,-28(s0)
20406598:	fec42683          	lw	a3,-20(s0)
2040659c:	863e                	mv	a2,a5
2040659e:	00c6ec63          	bltu	a3,a2,204065b6 <configure_pll+0x198>
204065a2:	fec42683          	lw	a3,-20(s0)
204065a6:	863e                	mv	a2,a5
204065a8:	fcc69ae3          	bne	a3,a2,2040657c <configure_pll+0x15e>
204065ac:	fe842683          	lw	a3,-24(s0)
204065b0:	87ba                	mv	a5,a4
204065b2:	fcf6f5e3          	bgeu	a3,a5,2040657c <configure_pll+0x15e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
204065b6:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
204065b8:	fdc42783          	lw	a5,-36(s0)
204065bc:	439c                	lw	a5,0(a5)
204065be:	fe07dde3          	bgez	a5,204065b8 <configure_pll+0x19a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
204065c2:	0001                	nop
204065c4:	0001                	nop
204065c6:	50b2                	lw	ra,44(sp)
204065c8:	5422                	lw	s0,40(sp)
204065ca:	6145                	addi	sp,sp,48
204065cc:	8082                	ret

204065ce <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
204065ce:	715d                	addi	sp,sp,-80
204065d0:	c686                	sw	ra,76(sp)
204065d2:	c4a2                	sw	s0,72(sp)
204065d4:	0880                	addi	s0,sp,80
204065d6:	faa42e23          	sw	a0,-68(s0)
204065da:	fab42c23          	sw	a1,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204065de:	fbc42503          	lw	a0,-68(s0)
204065e2:	a75ff0ef          	jal	ra,20406056 <__metal_driver_sifive_fe310_g000_pll_pllref>
204065e6:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204065ea:	fbc42503          	lw	a0,-68(s0)
204065ee:	a4fff0ef          	jal	ra,2040603c <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204065f2:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204065f6:	fbc42503          	lw	a0,-68(s0)
204065fa:	ab3ff0ef          	jal	ra,204060ac <__metal_driver_sifive_fe310_g000_pll_config_offset>
204065fe:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20406602:	fbc42503          	lw	a0,-68(s0)
20406606:	a81ff0ef          	jal	ra,20406086 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
2040660a:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2040660e:	ac5ff0ef          	jal	ra,204060d2 <__metal_driver_sifive_fe310_g000_prci_base>
20406612:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20406616:	fdc42703          	lw	a4,-36(s0)
2040661a:	fe442783          	lw	a5,-28(s0)
2040661e:	97ba                	add	a5,a5,a4
20406620:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20406624:	fdc42703          	lw	a4,-36(s0)
20406628:	fe042783          	lw	a5,-32(s0)
2040662c:	97ba                	add	a5,a5,a4
2040662e:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20406632:	fd842783          	lw	a5,-40(s0)
20406636:	4398                	lw	a4,0(a5)
20406638:	67c1                	lui	a5,0x10
2040663a:	8ff9                	and	a5,a5,a4
2040663c:	cb91                	beqz	a5,20406650 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040663e:	fd842783          	lw	a5,-40(s0)
20406642:	4398                	lw	a4,0(a5)
20406644:	77c1                	lui	a5,0xffff0
20406646:	17fd                	addi	a5,a5,-1
20406648:	8f7d                	and	a4,a4,a5
2040664a:	fd842783          	lw	a5,-40(s0)
2040664e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20406650:	fd842783          	lw	a5,-40(s0)
20406654:	4398                	lw	a4,0(a5)
20406656:	000207b7          	lui	a5,0x20
2040665a:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
2040665c:	c781                	beqz	a5,20406664 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
2040665e:	fec42783          	lw	a5,-20(s0)
20406662:	a019                	j	20406668 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20406664:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20406668:	853e                	mv	a0,a5
2040666a:	1a6010ef          	jal	ra,20407810 <metal_clock_get_rate_hz>
2040666e:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20406672:	fd042703          	lw	a4,-48(s0)
20406676:	87ba                	mv	a5,a4
20406678:	0786                	slli	a5,a5,0x1
2040667a:	97ba                	add	a5,a5,a4
2040667c:	41f7d713          	srai	a4,a5,0x1f
20406680:	8b0d                	andi	a4,a4,3
20406682:	97ba                	add	a5,a5,a4
20406684:	8789                	srai	a5,a5,0x2
20406686:	873e                	mv	a4,a5
20406688:	fb842783          	lw	a5,-72(s0)
2040668c:	02e7cb63          	blt	a5,a4,204066c2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20406690:	fd042703          	lw	a4,-48(s0)
20406694:	87ba                	mv	a5,a4
20406696:	078a                	slli	a5,a5,0x2
20406698:	97ba                	add	a5,a5,a4
2040669a:	41f7d713          	srai	a4,a5,0x1f
2040669e:	8b0d                	andi	a4,a4,3
204066a0:	97ba                	add	a5,a5,a4
204066a2:	8789                	srai	a5,a5,0x2
204066a4:	873e                	mv	a4,a5
204066a6:	fb842783          	lw	a5,-72(s0)
204066aa:	00f74c63          	blt	a4,a5,204066c2 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204066ae:	fd842783          	lw	a5,-40(s0)
204066b2:	4398                	lw	a4,0(a5)
204066b4:	000407b7          	lui	a5,0x40
204066b8:	8f5d                	or	a4,a4,a5
204066ba:	fd842783          	lw	a5,-40(s0)
204066be:	c398                	sw	a4,0(a5)
204066c0:	a881                	j	20406710 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
204066c2:	fb842583          	lw	a1,-72(s0)
204066c6:	fd042503          	lw	a0,-48(s0)
204066ca:	ca9ff0ef          	jal	ra,20406372 <find_closest_config>
204066ce:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
204066d2:	fcc42703          	lw	a4,-52(s0)
204066d6:	57fd                	li	a5,-1
204066d8:	02f70363          	beq	a4,a5,204066fe <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
204066dc:	fcc42783          	lw	a5,-52(s0)
204066e0:	00579713          	slli	a4,a5,0x5
204066e4:	204007b7          	lui	a5,0x20400
204066e8:	6d878793          	addi	a5,a5,1752 # 204006d8 <pll_configs>
204066ec:	97ba                	add	a5,a5,a4
204066ee:	863e                	mv	a2,a5
204066f0:	fd442583          	lw	a1,-44(s0)
204066f4:	fd842503          	lw	a0,-40(s0)
204066f8:	d27ff0ef          	jal	ra,2040641e <configure_pll>
204066fc:	a811                	j	20406710 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
204066fe:	fd842783          	lw	a5,-40(s0)
20406702:	4398                	lw	a4,0(a5)
20406704:	000407b7          	lui	a5,0x40
20406708:	8f5d                	or	a4,a4,a5
2040670a:	fd842783          	lw	a5,-40(s0)
2040670e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20406710:	fd842783          	lw	a5,-40(s0)
20406714:	4398                	lw	a4,0(a5)
20406716:	67c1                	lui	a5,0x10
20406718:	8f5d                	or	a4,a4,a5
2040671a:	fd842783          	lw	a5,-40(s0)
2040671e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20406720:	fbc42503          	lw	a0,-68(s0)
20406724:	ad1ff0ef          	jal	ra,204061f4 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20406728:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
2040672a:	853e                	mv	a0,a5
2040672c:	40b6                	lw	ra,76(sp)
2040672e:	4426                	lw	s0,72(sp)
20406730:	6161                	addi	sp,sp,80
20406732:	8082                	ret

20406734 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1159
{
20406734:	1141                	addi	sp,sp,-16
20406736:	c622                	sw	s0,12(sp)
20406738:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
2040673a:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1161
}
2040673e:	853e                	mv	a0,a5
20406740:	4432                	lw	s0,12(sp)
20406742:	0141                	addi	sp,sp,16
20406744:	8082                	ret

20406746 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20406746:	7179                	addi	sp,sp,-48
20406748:	d606                	sw	ra,44(sp)
2040674a:	d422                	sw	s0,40(sp)
2040674c:	1800                	addi	s0,sp,48
2040674e:	fca42e23          	sw	a0,-36(s0)
20406752:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406756:	3ff9                	jal	20406734 <__metal_driver_sifive_fe310_g000_prci_base>
20406758:	87aa                	mv	a5,a0
2040675a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
2040675e:	fd842703          	lw	a4,-40(s0)
20406762:	fec42783          	lw	a5,-20(s0)
20406766:	97ba                	add	a5,a5,a4
20406768:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
2040676a:	853e                	mv	a0,a5
2040676c:	50b2                	lw	ra,44(sp)
2040676e:	5422                	lw	s0,40(sp)
20406770:	6145                	addi	sp,sp,48
20406772:	8082                	ret

20406774 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20406774:	7179                	addi	sp,sp,-48
20406776:	d606                	sw	ra,44(sp)
20406778:	d422                	sw	s0,40(sp)
2040677a:	1800                	addi	s0,sp,48
2040677c:	fca42e23          	sw	a0,-36(s0)
20406780:	fcb42c23          	sw	a1,-40(s0)
20406784:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20406788:	fadff0ef          	jal	ra,20406734 <__metal_driver_sifive_fe310_g000_prci_base>
2040678c:	87aa                	mv	a5,a0
2040678e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20406792:	fd842703          	lw	a4,-40(s0)
20406796:	fec42783          	lw	a5,-20(s0)
2040679a:	97ba                	add	a5,a5,a4
2040679c:	873e                	mv	a4,a5
2040679e:	fd442783          	lw	a5,-44(s0)
204067a2:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
204067a4:	853e                	mv	a0,a5
204067a6:	50b2                	lw	ra,44(sp)
204067a8:	5422                	lw	s0,40(sp)
204067aa:	6145                	addi	sp,sp,48
204067ac:	8082                	ret

204067ae <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:474
{
204067ae:	1101                	addi	sp,sp,-32
204067b0:	ce22                	sw	s0,28(sp)
204067b2:	1000                	addi	s0,sp,32
204067b4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204067b8:	fec42703          	lw	a4,-20(s0)
204067bc:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204067c0:	00f71563          	bne	a4,a5,204067ca <__metal_driver_sifive_gpio0_base+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
204067c4:	100127b7          	lui	a5,0x10012
204067c8:	a011                	j	204067cc <__metal_driver_sifive_gpio0_base+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:479
		return 0;
204067ca:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:481
}
204067cc:	853e                	mv	a0,a5
204067ce:	4472                	lw	s0,28(sp)
204067d0:	6105                	addi	sp,sp,32
204067d2:	8082                	ret

204067d4 <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:504
{
204067d4:	1101                	addi	sp,sp,-32
204067d6:	ce22                	sw	s0,28(sp)
204067d8:	1000                	addi	s0,sp,32
204067da:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
204067de:	fec42703          	lw	a4,-20(s0)
204067e2:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204067e6:	00f71763          	bne	a4,a5,204067f4 <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204067ea:	800007b7          	lui	a5,0x80000
204067ee:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe448>
204067f2:	a011                	j	204067f6 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:509
		return 0;
204067f4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:511
}
204067f6:	853e                	mv	a0,a5
204067f8:	4472                	lw	s0,28(sp)
204067fa:	6105                	addi	sp,sp,32
204067fc:	8082                	ret

204067fe <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:514
{
204067fe:	1101                	addi	sp,sp,-32
20406800:	ce22                	sw	s0,28(sp)
20406802:	1000                	addi	s0,sp,32
20406804:	fea42623          	sw	a0,-20(s0)
20406808:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
2040680c:	fec42703          	lw	a4,-20(s0)
20406810:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406814:	00f71763          	bne	a4,a5,20406822 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:515 (discriminator 1)
20406818:	fe842783          	lw	a5,-24(s0)
2040681c:	e399                	bnez	a5,20406822 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:516
		return 7;
2040681e:	479d                	li	a5,7
20406820:	a269                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20406822:	fec42703          	lw	a4,-20(s0)
20406826:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040682a:	00f71963          	bne	a4,a5,2040683c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:518 (discriminator 1)
2040682e:	fe842703          	lw	a4,-24(s0)
20406832:	4785                	li	a5,1
20406834:	00f71463          	bne	a4,a5,2040683c <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:519
		return 8;
20406838:	47a1                	li	a5,8
2040683a:	aa85                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
2040683c:	fec42703          	lw	a4,-20(s0)
20406840:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406844:	00f71963          	bne	a4,a5,20406856 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
20406848:	fe842703          	lw	a4,-24(s0)
2040684c:	4789                	li	a5,2
2040684e:	00f71463          	bne	a4,a5,20406856 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:522
		return 9;
20406852:	47a5                	li	a5,9
20406854:	aa99                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20406856:	fec42703          	lw	a4,-20(s0)
2040685a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040685e:	00f71963          	bne	a4,a5,20406870 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
20406862:	fe842703          	lw	a4,-24(s0)
20406866:	478d                	li	a5,3
20406868:	00f71463          	bne	a4,a5,20406870 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:525
		return 10;
2040686c:	47a9                	li	a5,10
2040686e:	aa35                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20406870:	fec42703          	lw	a4,-20(s0)
20406874:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406878:	00f71963          	bne	a4,a5,2040688a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
2040687c:	fe842703          	lw	a4,-24(s0)
20406880:	4791                	li	a5,4
20406882:	00f71463          	bne	a4,a5,2040688a <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:528
		return 11;
20406886:	47ad                	li	a5,11
20406888:	a20d                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
2040688a:	fec42703          	lw	a4,-20(s0)
2040688e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406892:	00f71963          	bne	a4,a5,204068a4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
20406896:	fe842703          	lw	a4,-24(s0)
2040689a:	4795                	li	a5,5
2040689c:	00f71463          	bne	a4,a5,204068a4 <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:531
		return 12;
204068a0:	47b1                	li	a5,12
204068a2:	a221                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
204068a4:	fec42703          	lw	a4,-20(s0)
204068a8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204068ac:	00f71963          	bne	a4,a5,204068be <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
204068b0:	fe842703          	lw	a4,-24(s0)
204068b4:	4799                	li	a5,6
204068b6:	00f71463          	bne	a4,a5,204068be <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:534
		return 13;
204068ba:	47b5                	li	a5,13
204068bc:	a0fd                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
204068be:	fec42703          	lw	a4,-20(s0)
204068c2:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204068c6:	00f71963          	bne	a4,a5,204068d8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
204068ca:	fe842703          	lw	a4,-24(s0)
204068ce:	479d                	li	a5,7
204068d0:	00f71463          	bne	a4,a5,204068d8 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:537
		return 14;
204068d4:	47b9                	li	a5,14
204068d6:	a8d1                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
204068d8:	fec42703          	lw	a4,-20(s0)
204068dc:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204068e0:	00f71963          	bne	a4,a5,204068f2 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
204068e4:	fe842703          	lw	a4,-24(s0)
204068e8:	47a1                	li	a5,8
204068ea:	00f71463          	bne	a4,a5,204068f2 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:540
		return 15;
204068ee:	47bd                	li	a5,15
204068f0:	a86d                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
204068f2:	fec42703          	lw	a4,-20(s0)
204068f6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204068fa:	00f71963          	bne	a4,a5,2040690c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
204068fe:	fe842703          	lw	a4,-24(s0)
20406902:	47a5                	li	a5,9
20406904:	00f71463          	bne	a4,a5,2040690c <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:543
		return 16;
20406908:	47c1                	li	a5,16
2040690a:	a045                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
2040690c:	fec42703          	lw	a4,-20(s0)
20406910:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406914:	00f71963          	bne	a4,a5,20406926 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
20406918:	fe842703          	lw	a4,-24(s0)
2040691c:	47a9                	li	a5,10
2040691e:	00f71463          	bne	a4,a5,20406926 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:546
		return 17;
20406922:	47c5                	li	a5,17
20406924:	a059                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20406926:	fec42703          	lw	a4,-20(s0)
2040692a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040692e:	00f71963          	bne	a4,a5,20406940 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
20406932:	fe842703          	lw	a4,-24(s0)
20406936:	47ad                	li	a5,11
20406938:	00f71463          	bne	a4,a5,20406940 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:549
		return 18;
2040693c:	47c9                	li	a5,18
2040693e:	a0b5                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20406940:	fec42703          	lw	a4,-20(s0)
20406944:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406948:	00f71963          	bne	a4,a5,2040695a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
2040694c:	fe842703          	lw	a4,-24(s0)
20406950:	47b1                	li	a5,12
20406952:	00f71463          	bne	a4,a5,2040695a <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:552
		return 19;
20406956:	47cd                	li	a5,19
20406958:	a889                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
2040695a:	fec42703          	lw	a4,-20(s0)
2040695e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406962:	00f71963          	bne	a4,a5,20406974 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
20406966:	fe842703          	lw	a4,-24(s0)
2040696a:	47b5                	li	a5,13
2040696c:	00f71463          	bne	a4,a5,20406974 <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:555
		return 20;
20406970:	47d1                	li	a5,20
20406972:	a825                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20406974:	fec42703          	lw	a4,-20(s0)
20406978:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040697c:	00f71963          	bne	a4,a5,2040698e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
20406980:	fe842703          	lw	a4,-24(s0)
20406984:	47b9                	li	a5,14
20406986:	00f71463          	bne	a4,a5,2040698e <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:558
		return 21;
2040698a:	47d5                	li	a5,21
2040698c:	a839                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
2040698e:	fec42703          	lw	a4,-20(s0)
20406992:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406996:	00f71963          	bne	a4,a5,204069a8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
2040699a:	fe842703          	lw	a4,-24(s0)
2040699e:	47bd                	li	a5,15
204069a0:	00f71463          	bne	a4,a5,204069a8 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:561
		return 22;
204069a4:	47d9                	li	a5,22
204069a6:	a011                	j	204069aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:564
		return 0;
204069a8:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:566
}
204069aa:	853e                	mv	a0,a5
204069ac:	4472                	lw	s0,28(sp)
204069ae:	6105                	addi	sp,sp,32
204069b0:	8082                	ret

204069b2 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
204069b2:	7179                	addi	sp,sp,-48
204069b4:	d606                	sw	ra,44(sp)
204069b6:	d422                	sw	s0,40(sp)
204069b8:	1800                	addi	s0,sp,48
204069ba:	fca42e23          	sw	a0,-36(s0)
204069be:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204069c2:	fdc42503          	lw	a0,-36(s0)
204069c6:	de9ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
204069ca:	87aa                	mv	a5,a0
204069cc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
204069d0:	fec42783          	lw	a5,-20(s0)
204069d4:	0791                	addi	a5,a5,4
204069d6:	4398                	lw	a4,0(a5)
204069d8:	fd842783          	lw	a5,-40(s0)
204069dc:	fec42683          	lw	a3,-20(s0)
204069e0:	0691                	addi	a3,a3,4
204069e2:	8fd9                	or	a5,a5,a4
204069e4:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
204069e6:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:20
}
204069e8:	853e                	mv	a0,a5
204069ea:	50b2                	lw	ra,44(sp)
204069ec:	5422                	lw	s0,40(sp)
204069ee:	6145                	addi	sp,sp,48
204069f0:	8082                	ret

204069f2 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
204069f2:	7179                	addi	sp,sp,-48
204069f4:	d606                	sw	ra,44(sp)
204069f6:	d422                	sw	s0,40(sp)
204069f8:	1800                	addi	s0,sp,48
204069fa:	fca42e23          	sw	a0,-36(s0)
204069fe:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406a02:	fdc42503          	lw	a0,-36(s0)
20406a06:	da9ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406a0a:	87aa                	mv	a5,a0
20406a0c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20406a10:	fec42783          	lw	a5,-20(s0)
20406a14:	0791                	addi	a5,a5,4
20406a16:	439c                	lw	a5,0(a5)
20406a18:	fd842703          	lw	a4,-40(s0)
20406a1c:	fff74713          	not	a4,a4
20406a20:	86ba                	mv	a3,a4
20406a22:	fec42703          	lw	a4,-20(s0)
20406a26:	0711                	addi	a4,a4,4
20406a28:	8ff5                	and	a5,a5,a3
20406a2a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20406a2c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20406a2e:	853e                	mv	a0,a5
20406a30:	50b2                	lw	ra,44(sp)
20406a32:	5422                	lw	s0,40(sp)
20406a34:	6145                	addi	sp,sp,48
20406a36:	8082                	ret

20406a38 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20406a38:	7179                	addi	sp,sp,-48
20406a3a:	d606                	sw	ra,44(sp)
20406a3c:	d422                	sw	s0,40(sp)
20406a3e:	1800                	addi	s0,sp,48
20406a40:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406a44:	fdc42503          	lw	a0,-36(s0)
20406a48:	d67ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406a4c:	87aa                	mv	a5,a0
20406a4e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
20406a52:	fec42783          	lw	a5,-20(s0)
20406a56:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20406a58:	853e                	mv	a0,a5
20406a5a:	50b2                	lw	ra,44(sp)
20406a5c:	5422                	lw	s0,40(sp)
20406a5e:	6145                	addi	sp,sp,48
20406a60:	8082                	ret

20406a62 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
20406a62:	7179                	addi	sp,sp,-48
20406a64:	d606                	sw	ra,44(sp)
20406a66:	d422                	sw	s0,40(sp)
20406a68:	1800                	addi	s0,sp,48
20406a6a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406a6e:	fdc42503          	lw	a0,-36(s0)
20406a72:	d3dff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406a76:	87aa                	mv	a5,a0
20406a78:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20406a7c:	fec42783          	lw	a5,-20(s0)
20406a80:	07b1                	addi	a5,a5,12
20406a82:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20406a84:	853e                	mv	a0,a5
20406a86:	50b2                	lw	ra,44(sp)
20406a88:	5422                	lw	s0,40(sp)
20406a8a:	6145                	addi	sp,sp,48
20406a8c:	8082                	ret

20406a8e <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20406a8e:	7179                	addi	sp,sp,-48
20406a90:	d606                	sw	ra,44(sp)
20406a92:	d422                	sw	s0,40(sp)
20406a94:	1800                	addi	s0,sp,48
20406a96:	fca42e23          	sw	a0,-36(s0)
20406a9a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406a9e:	fdc42503          	lw	a0,-36(s0)
20406aa2:	d0dff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406aa6:	87aa                	mv	a5,a0
20406aa8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20406aac:	fec42783          	lw	a5,-20(s0)
20406ab0:	07a1                	addi	a5,a5,8
20406ab2:	439c                	lw	a5,0(a5)
20406ab4:	fd842703          	lw	a4,-40(s0)
20406ab8:	fff74713          	not	a4,a4
20406abc:	86ba                	mv	a3,a4
20406abe:	fec42703          	lw	a4,-20(s0)
20406ac2:	0721                	addi	a4,a4,8
20406ac4:	8ff5                	and	a5,a5,a3
20406ac6:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20406ac8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406aca:	853e                	mv	a0,a5
20406acc:	50b2                	lw	ra,44(sp)
20406ace:	5422                	lw	s0,40(sp)
20406ad0:	6145                	addi	sp,sp,48
20406ad2:	8082                	ret

20406ad4 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20406ad4:	7179                	addi	sp,sp,-48
20406ad6:	d606                	sw	ra,44(sp)
20406ad8:	d422                	sw	s0,40(sp)
20406ada:	1800                	addi	s0,sp,48
20406adc:	fca42e23          	sw	a0,-36(s0)
20406ae0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406ae4:	fdc42503          	lw	a0,-36(s0)
20406ae8:	cc7ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406aec:	87aa                	mv	a5,a0
20406aee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20406af2:	fec42783          	lw	a5,-20(s0)
20406af6:	07a1                	addi	a5,a5,8
20406af8:	4398                	lw	a4,0(a5)
20406afa:	fd842783          	lw	a5,-40(s0)
20406afe:	fec42683          	lw	a3,-20(s0)
20406b02:	06a1                	addi	a3,a3,8
20406b04:	8fd9                	or	a5,a5,a4
20406b06:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
20406b08:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20406b0a:	853e                	mv	a0,a5
20406b0c:	50b2                	lw	ra,44(sp)
20406b0e:	5422                	lw	s0,40(sp)
20406b10:	6145                	addi	sp,sp,48
20406b12:	8082                	ret

20406b14 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
20406b14:	7179                	addi	sp,sp,-48
20406b16:	d606                	sw	ra,44(sp)
20406b18:	d422                	sw	s0,40(sp)
20406b1a:	1800                	addi	s0,sp,48
20406b1c:	fca42e23          	sw	a0,-36(s0)
20406b20:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406b24:	fdc42503          	lw	a0,-36(s0)
20406b28:	c87ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406b2c:	87aa                	mv	a5,a0
20406b2e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20406b32:	fec42783          	lw	a5,-20(s0)
20406b36:	07b1                	addi	a5,a5,12
20406b38:	4398                	lw	a4,0(a5)
20406b3a:	fd842783          	lw	a5,-40(s0)
20406b3e:	fec42683          	lw	a3,-20(s0)
20406b42:	06b1                	addi	a3,a3,12
20406b44:	8fd9                	or	a5,a5,a4
20406b46:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20406b48:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20406b4a:	853e                	mv	a0,a5
20406b4c:	50b2                	lw	ra,44(sp)
20406b4e:	5422                	lw	s0,40(sp)
20406b50:	6145                	addi	sp,sp,48
20406b52:	8082                	ret

20406b54 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
20406b54:	7179                	addi	sp,sp,-48
20406b56:	d606                	sw	ra,44(sp)
20406b58:	d422                	sw	s0,40(sp)
20406b5a:	1800                	addi	s0,sp,48
20406b5c:	fca42e23          	sw	a0,-36(s0)
20406b60:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406b64:	fdc42503          	lw	a0,-36(s0)
20406b68:	c47ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406b6c:	87aa                	mv	a5,a0
20406b6e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20406b72:	fec42783          	lw	a5,-20(s0)
20406b76:	07b1                	addi	a5,a5,12
20406b78:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20406b7a:	fd842703          	lw	a4,-40(s0)
20406b7e:	fff74713          	not	a4,a4
20406b82:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20406b84:	fec42703          	lw	a4,-20(s0)
20406b88:	0731                	addi	a4,a4,12
20406b8a:	8ff5                	and	a5,a5,a3
20406b8c:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20406b8e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20406b90:	853e                	mv	a0,a5
20406b92:	50b2                	lw	ra,44(sp)
20406b94:	5422                	lw	s0,40(sp)
20406b96:	6145                	addi	sp,sp,48
20406b98:	8082                	ret

20406b9a <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406b9a:	7179                	addi	sp,sp,-48
20406b9c:	d606                	sw	ra,44(sp)
20406b9e:	d422                	sw	s0,40(sp)
20406ba0:	1800                	addi	s0,sp,48
20406ba2:	fca42e23          	sw	a0,-36(s0)
20406ba6:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406baa:	fdc42503          	lw	a0,-36(s0)
20406bae:	c01ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406bb2:	87aa                	mv	a5,a0
20406bb4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20406bb8:	fec42783          	lw	a5,-20(s0)
20406bbc:	07b1                	addi	a5,a5,12
20406bbe:	4398                	lw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406bc0:	fd842783          	lw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406bc4:	fec42683          	lw	a3,-20(s0)
20406bc8:	06b1                	addi	a3,a3,12
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406bca:	8fb9                	xor	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406bcc:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20406bce:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20406bd0:	853e                	mv	a0,a5
20406bd2:	50b2                	lw	ra,44(sp)
20406bd4:	5422                	lw	s0,40(sp)
20406bd6:	6145                	addi	sp,sp,48
20406bd8:	8082                	ret

20406bda <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20406bda:	7179                	addi	sp,sp,-48
20406bdc:	d606                	sw	ra,44(sp)
20406bde:	d422                	sw	s0,40(sp)
20406be0:	1800                	addi	s0,sp,48
20406be2:	fca42e23          	sw	a0,-36(s0)
20406be6:	fcb42c23          	sw	a1,-40(s0)
20406bea:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406bee:	fdc42503          	lw	a0,-36(s0)
20406bf2:	bbdff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406bf6:	87aa                	mv	a5,a0
20406bf8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20406bfc:	fec42783          	lw	a5,-20(s0)
20406c00:	03c78793          	addi	a5,a5,60
20406c04:	4398                	lw	a4,0(a5)
20406c06:	fd842783          	lw	a5,-40(s0)
20406c0a:	fec42683          	lw	a3,-20(s0)
20406c0e:	03c68693          	addi	a3,a3,60
20406c12:	8fd9                	or	a5,a5,a4
20406c14:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20406c16:	fec42783          	lw	a5,-20(s0)
20406c1a:	03878793          	addi	a5,a5,56
20406c1e:	4398                	lw	a4,0(a5)
20406c20:	fd442783          	lw	a5,-44(s0)
20406c24:	fec42683          	lw	a3,-20(s0)
20406c28:	03868693          	addi	a3,a3,56
20406c2c:	8fd9                	or	a5,a5,a4
20406c2e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20406c30:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406c32:	853e                	mv	a0,a5
20406c34:	50b2                	lw	ra,44(sp)
20406c36:	5422                	lw	s0,40(sp)
20406c38:	6145                	addi	sp,sp,48
20406c3a:	8082                	ret

20406c3c <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20406c3c:	7179                	addi	sp,sp,-48
20406c3e:	d606                	sw	ra,44(sp)
20406c40:	d422                	sw	s0,40(sp)
20406c42:	1800                	addi	s0,sp,48
20406c44:	fca42e23          	sw	a0,-36(s0)
20406c48:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406c4c:	fdc42503          	lw	a0,-36(s0)
20406c50:	b5fff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406c54:	87aa                	mv	a5,a0
20406c56:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406c5a:	fec42783          	lw	a5,-20(s0)
20406c5e:	03878793          	addi	a5,a5,56
20406c62:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20406c64:	fd842703          	lw	a4,-40(s0)
20406c68:	fff74713          	not	a4,a4
20406c6c:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406c6e:	fec42703          	lw	a4,-20(s0)
20406c72:	03870713          	addi	a4,a4,56
20406c76:	8ff5                	and	a5,a5,a3
20406c78:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20406c7a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20406c7c:	853e                	mv	a0,a5
20406c7e:	50b2                	lw	ra,44(sp)
20406c80:	5422                	lw	s0,40(sp)
20406c82:	6145                	addi	sp,sp,48
20406c84:	8082                	ret

20406c86 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20406c86:	7179                	addi	sp,sp,-48
20406c88:	d606                	sw	ra,44(sp)
20406c8a:	d422                	sw	s0,40(sp)
20406c8c:	1800                	addi	s0,sp,48
20406c8e:	fca42e23          	sw	a0,-36(s0)
20406c92:	fcb42c23          	sw	a1,-40(s0)
20406c96:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406c9a:	fdc42503          	lw	a0,-36(s0)
20406c9e:	b11ff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406ca2:	87aa                	mv	a5,a0
20406ca4:	fef42623          	sw	a5,-20(s0)
20406ca8:	fd442703          	lw	a4,-44(s0)
20406cac:	479d                	li	a5,7
20406cae:	1ce7e963          	bltu	a5,a4,20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406cb2:	fd442783          	lw	a5,-44(s0)
20406cb6:	00279713          	slli	a4,a5,0x2
20406cba:	204017b7          	lui	a5,0x20401
20406cbe:	f6478793          	addi	a5,a5,-156 # 20400f64 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20406cc2:	97ba                	add	a5,a5,a4
20406cc4:	439c                	lw	a5,0(a5)
20406cc6:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406cc8:	fec42783          	lw	a5,-20(s0)
20406ccc:	07e1                	addi	a5,a5,24
20406cce:	439c                	lw	a5,0(a5)
20406cd0:	fd842703          	lw	a4,-40(s0)
20406cd4:	fff74713          	not	a4,a4
20406cd8:	86ba                	mv	a3,a4
20406cda:	fec42703          	lw	a4,-20(s0)
20406cde:	0761                	addi	a4,a4,24
20406ce0:	8ff5                	and	a5,a5,a3
20406ce2:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20406ce4:	fec42783          	lw	a5,-20(s0)
20406ce8:	02078793          	addi	a5,a5,32
20406cec:	439c                	lw	a5,0(a5)
20406cee:	fd842703          	lw	a4,-40(s0)
20406cf2:	fff74713          	not	a4,a4
20406cf6:	86ba                	mv	a3,a4
20406cf8:	fec42703          	lw	a4,-20(s0)
20406cfc:	02070713          	addi	a4,a4,32
20406d00:	8ff5                	and	a5,a5,a3
20406d02:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20406d04:	fec42783          	lw	a5,-20(s0)
20406d08:	02878793          	addi	a5,a5,40
20406d0c:	439c                	lw	a5,0(a5)
20406d0e:	fd842703          	lw	a4,-40(s0)
20406d12:	fff74713          	not	a4,a4
20406d16:	86ba                	mv	a3,a4
20406d18:	fec42703          	lw	a4,-20(s0)
20406d1c:	02870713          	addi	a4,a4,40
20406d20:	8ff5                	and	a5,a5,a3
20406d22:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20406d24:	fec42783          	lw	a5,-20(s0)
20406d28:	03078793          	addi	a5,a5,48
20406d2c:	439c                	lw	a5,0(a5)
20406d2e:	fd842703          	lw	a4,-40(s0)
20406d32:	fff74713          	not	a4,a4
20406d36:	86ba                	mv	a3,a4
20406d38:	fec42703          	lw	a4,-20(s0)
20406d3c:	03070713          	addi	a4,a4,48
20406d40:	8ff5                	and	a5,a5,a3
20406d42:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20406d44:	aa35                	j	20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406d46:	fec42783          	lw	a5,-20(s0)
20406d4a:	07e1                	addi	a5,a5,24
20406d4c:	4398                	lw	a4,0(a5)
20406d4e:	fd842783          	lw	a5,-40(s0)
20406d52:	fec42683          	lw	a3,-20(s0)
20406d56:	06e1                	addi	a3,a3,24
20406d58:	8fd9                	or	a5,a5,a4
20406d5a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20406d5c:	a215                	j	20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406d5e:	fec42783          	lw	a5,-20(s0)
20406d62:	02078793          	addi	a5,a5,32
20406d66:	4398                	lw	a4,0(a5)
20406d68:	fd842783          	lw	a5,-40(s0)
20406d6c:	fec42683          	lw	a3,-20(s0)
20406d70:	02068693          	addi	a3,a3,32
20406d74:	8fd9                	or	a5,a5,a4
20406d76:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20406d78:	a221                	j	20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406d7a:	fec42783          	lw	a5,-20(s0)
20406d7e:	07e1                	addi	a5,a5,24
20406d80:	4398                	lw	a4,0(a5)
20406d82:	fd842783          	lw	a5,-40(s0)
20406d86:	fec42683          	lw	a3,-20(s0)
20406d8a:	06e1                	addi	a3,a3,24
20406d8c:	8fd9                	or	a5,a5,a4
20406d8e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406d90:	fec42783          	lw	a5,-20(s0)
20406d94:	02078793          	addi	a5,a5,32
20406d98:	4398                	lw	a4,0(a5)
20406d9a:	fd842783          	lw	a5,-40(s0)
20406d9e:	fec42683          	lw	a3,-20(s0)
20406da2:	02068693          	addi	a3,a3,32
20406da6:	8fd9                	or	a5,a5,a4
20406da8:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20406daa:	a8d9                	j	20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406dac:	fec42783          	lw	a5,-20(s0)
20406db0:	02878793          	addi	a5,a5,40
20406db4:	4398                	lw	a4,0(a5)
20406db6:	fd842783          	lw	a5,-40(s0)
20406dba:	fec42683          	lw	a3,-20(s0)
20406dbe:	02868693          	addi	a3,a3,40
20406dc2:	8fd9                	or	a5,a5,a4
20406dc4:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406dc6:	a86d                	j	20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406dc8:	fec42783          	lw	a5,-20(s0)
20406dcc:	03078793          	addi	a5,a5,48
20406dd0:	4398                	lw	a4,0(a5)
20406dd2:	fd842783          	lw	a5,-40(s0)
20406dd6:	fec42683          	lw	a3,-20(s0)
20406dda:	03068693          	addi	a3,a3,48
20406dde:	8fd9                	or	a5,a5,a4
20406de0:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20406de2:	a879                	j	20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406de4:	fec42783          	lw	a5,-20(s0)
20406de8:	02878793          	addi	a5,a5,40
20406dec:	4398                	lw	a4,0(a5)
20406dee:	fd842783          	lw	a5,-40(s0)
20406df2:	fec42683          	lw	a3,-20(s0)
20406df6:	02868693          	addi	a3,a3,40
20406dfa:	8fd9                	or	a5,a5,a4
20406dfc:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406dfe:	fec42783          	lw	a5,-20(s0)
20406e02:	03078793          	addi	a5,a5,48
20406e06:	4398                	lw	a4,0(a5)
20406e08:	fd842783          	lw	a5,-40(s0)
20406e0c:	fec42683          	lw	a3,-20(s0)
20406e10:	03068693          	addi	a3,a3,48
20406e14:	8fd9                	or	a5,a5,a4
20406e16:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20406e18:	a0a5                	j	20406e80 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406e1a:	fec42783          	lw	a5,-20(s0)
20406e1e:	07e1                	addi	a5,a5,24
20406e20:	4398                	lw	a4,0(a5)
20406e22:	fd842783          	lw	a5,-40(s0)
20406e26:	fec42683          	lw	a3,-20(s0)
20406e2a:	06e1                	addi	a3,a3,24
20406e2c:	8fd9                	or	a5,a5,a4
20406e2e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406e30:	fec42783          	lw	a5,-20(s0)
20406e34:	02078793          	addi	a5,a5,32
20406e38:	4398                	lw	a4,0(a5)
20406e3a:	fd842783          	lw	a5,-40(s0)
20406e3e:	fec42683          	lw	a3,-20(s0)
20406e42:	02068693          	addi	a3,a3,32
20406e46:	8fd9                	or	a5,a5,a4
20406e48:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406e4a:	fec42783          	lw	a5,-20(s0)
20406e4e:	02878793          	addi	a5,a5,40
20406e52:	4398                	lw	a4,0(a5)
20406e54:	fd842783          	lw	a5,-40(s0)
20406e58:	fec42683          	lw	a3,-20(s0)
20406e5c:	02868693          	addi	a3,a3,40
20406e60:	8fd9                	or	a5,a5,a4
20406e62:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406e64:	fec42783          	lw	a5,-20(s0)
20406e68:	03078793          	addi	a5,a5,48
20406e6c:	4398                	lw	a4,0(a5)
20406e6e:	fd842783          	lw	a5,-40(s0)
20406e72:	fec42683          	lw	a3,-20(s0)
20406e76:	03068693          	addi	a3,a3,48
20406e7a:	8fd9                	or	a5,a5,a4
20406e7c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20406e7e:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20406e80:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20406e82:	853e                	mv	a0,a5
20406e84:	50b2                	lw	ra,44(sp)
20406e86:	5422                	lw	s0,40(sp)
20406e88:	6145                	addi	sp,sp,48
20406e8a:	8082                	ret

20406e8c <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20406e8c:	7179                	addi	sp,sp,-48
20406e8e:	d606                	sw	ra,44(sp)
20406e90:	d422                	sw	s0,40(sp)
20406e92:	1800                	addi	s0,sp,48
20406e94:	fca42e23          	sw	a0,-36(s0)
20406e98:	fcb42c23          	sw	a1,-40(s0)
20406e9c:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406ea0:	fdc42503          	lw	a0,-36(s0)
20406ea4:	90bff0ef          	jal	ra,204067ae <__metal_driver_sifive_gpio0_base>
20406ea8:	87aa                	mv	a5,a0
20406eaa:	fef42623          	sw	a5,-20(s0)
20406eae:	fd442703          	lw	a4,-44(s0)
20406eb2:	479d                	li	a5,7
20406eb4:	14e7ea63          	bltu	a5,a4,20407008 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20406eb8:	fd442783          	lw	a5,-44(s0)
20406ebc:	00279713          	slli	a4,a5,0x2
20406ec0:	204017b7          	lui	a5,0x20401
20406ec4:	f8478793          	addi	a5,a5,-124 # 20400f84 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20406ec8:	97ba                	add	a5,a5,a4
20406eca:	439c                	lw	a5,0(a5)
20406ecc:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406ece:	fec42783          	lw	a5,-20(s0)
20406ed2:	07f1                	addi	a5,a5,28
20406ed4:	4398                	lw	a4,0(a5)
20406ed6:	fd842783          	lw	a5,-40(s0)
20406eda:	fec42683          	lw	a3,-20(s0)
20406ede:	06f1                	addi	a3,a3,28
20406ee0:	8fd9                	or	a5,a5,a4
20406ee2:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20406ee4:	a215                	j	20407008 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406ee6:	fec42783          	lw	a5,-20(s0)
20406eea:	02478793          	addi	a5,a5,36
20406eee:	4398                	lw	a4,0(a5)
20406ef0:	fd842783          	lw	a5,-40(s0)
20406ef4:	fec42683          	lw	a3,-20(s0)
20406ef8:	02468693          	addi	a3,a3,36
20406efc:	8fd9                	or	a5,a5,a4
20406efe:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20406f00:	a221                	j	20407008 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406f02:	fec42783          	lw	a5,-20(s0)
20406f06:	07f1                	addi	a5,a5,28
20406f08:	4398                	lw	a4,0(a5)
20406f0a:	fd842783          	lw	a5,-40(s0)
20406f0e:	fec42683          	lw	a3,-20(s0)
20406f12:	06f1                	addi	a3,a3,28
20406f14:	8fd9                	or	a5,a5,a4
20406f16:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406f18:	fec42783          	lw	a5,-20(s0)
20406f1c:	02478793          	addi	a5,a5,36
20406f20:	4398                	lw	a4,0(a5)
20406f22:	fd842783          	lw	a5,-40(s0)
20406f26:	fec42683          	lw	a3,-20(s0)
20406f2a:	02468693          	addi	a3,a3,36
20406f2e:	8fd9                	or	a5,a5,a4
20406f30:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406f32:	a8d9                	j	20407008 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406f34:	fec42783          	lw	a5,-20(s0)
20406f38:	02c78793          	addi	a5,a5,44
20406f3c:	4398                	lw	a4,0(a5)
20406f3e:	fd842783          	lw	a5,-40(s0)
20406f42:	fec42683          	lw	a3,-20(s0)
20406f46:	02c68693          	addi	a3,a3,44
20406f4a:	8fd9                	or	a5,a5,a4
20406f4c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20406f4e:	a86d                	j	20407008 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406f50:	fec42783          	lw	a5,-20(s0)
20406f54:	03478793          	addi	a5,a5,52
20406f58:	4398                	lw	a4,0(a5)
20406f5a:	fd842783          	lw	a5,-40(s0)
20406f5e:	fec42683          	lw	a3,-20(s0)
20406f62:	03468693          	addi	a3,a3,52
20406f66:	8fd9                	or	a5,a5,a4
20406f68:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20406f6a:	a879                	j	20407008 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406f6c:	fec42783          	lw	a5,-20(s0)
20406f70:	02c78793          	addi	a5,a5,44
20406f74:	4398                	lw	a4,0(a5)
20406f76:	fd842783          	lw	a5,-40(s0)
20406f7a:	fec42683          	lw	a3,-20(s0)
20406f7e:	02c68693          	addi	a3,a3,44
20406f82:	8fd9                	or	a5,a5,a4
20406f84:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406f86:	fec42783          	lw	a5,-20(s0)
20406f8a:	03478793          	addi	a5,a5,52
20406f8e:	4398                	lw	a4,0(a5)
20406f90:	fd842783          	lw	a5,-40(s0)
20406f94:	fec42683          	lw	a3,-20(s0)
20406f98:	03468693          	addi	a3,a3,52
20406f9c:	8fd9                	or	a5,a5,a4
20406f9e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20406fa0:	a0a5                	j	20407008 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406fa2:	fec42783          	lw	a5,-20(s0)
20406fa6:	07f1                	addi	a5,a5,28
20406fa8:	4398                	lw	a4,0(a5)
20406faa:	fd842783          	lw	a5,-40(s0)
20406fae:	fec42683          	lw	a3,-20(s0)
20406fb2:	06f1                	addi	a3,a3,28
20406fb4:	8fd9                	or	a5,a5,a4
20406fb6:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406fb8:	fec42783          	lw	a5,-20(s0)
20406fbc:	02478793          	addi	a5,a5,36
20406fc0:	4398                	lw	a4,0(a5)
20406fc2:	fd842783          	lw	a5,-40(s0)
20406fc6:	fec42683          	lw	a3,-20(s0)
20406fca:	02468693          	addi	a3,a3,36
20406fce:	8fd9                	or	a5,a5,a4
20406fd0:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406fd2:	fec42783          	lw	a5,-20(s0)
20406fd6:	02c78793          	addi	a5,a5,44
20406fda:	4398                	lw	a4,0(a5)
20406fdc:	fd842783          	lw	a5,-40(s0)
20406fe0:	fec42683          	lw	a3,-20(s0)
20406fe4:	02c68693          	addi	a3,a3,44
20406fe8:	8fd9                	or	a5,a5,a4
20406fea:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406fec:	fec42783          	lw	a5,-20(s0)
20406ff0:	03478793          	addi	a5,a5,52
20406ff4:	4398                	lw	a4,0(a5)
20406ff6:	fd842783          	lw	a5,-40(s0)
20406ffa:	fec42683          	lw	a3,-20(s0)
20406ffe:	03468693          	addi	a3,a3,52
20407002:	8fd9                	or	a5,a5,a4
20407004:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20407006:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20407008:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:222
}
2040700a:	853e                	mv	a0,a5
2040700c:	50b2                	lw	ra,44(sp)
2040700e:	5422                	lw	s0,40(sp)
20407010:	6145                	addi	sp,sp,48
20407012:	8082                	ret

20407014 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20407014:	1101                	addi	sp,sp,-32
20407016:	ce06                	sw	ra,28(sp)
20407018:	cc22                	sw	s0,24(sp)
2040701a:	1000                	addi	s0,sp,32
2040701c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20407020:	fec42503          	lw	a0,-20(s0)
20407024:	fb0ff0ef          	jal	ra,204067d4 <__metal_driver_sifive_gpio0_interrupt_parent>
20407028:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:227
}
2040702a:	853e                	mv	a0,a5
2040702c:	40f2                	lw	ra,28(sp)
2040702e:	4462                	lw	s0,24(sp)
20407030:	6105                	addi	sp,sp,32
20407032:	8082                	ret

20407034 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20407034:	7179                	addi	sp,sp,-48
20407036:	d606                	sw	ra,44(sp)
20407038:	d422                	sw	s0,40(sp)
2040703a:	1800                	addi	s0,sp,48
2040703c:	fca42e23          	sw	a0,-36(s0)
20407040:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20407044:	fd842583          	lw	a1,-40(s0)
20407048:	fdc42503          	lw	a0,-36(s0)
2040704c:	fb2ff0ef          	jal	ra,204067fe <__metal_driver_sifive_gpio0_interrupt_lines>
20407050:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20407054:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20407058:	853e                	mv	a0,a5
2040705a:	50b2                	lw	ra,44(sp)
2040705c:	5422                	lw	s0,40(sp)
2040705e:	6145                	addi	sp,sp,48
20407060:	8082                	ret

20407062 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:863
{
20407062:	1101                	addi	sp,sp,-32
20407064:	ce22                	sw	s0,28(sp)
20407066:	1000                	addi	s0,sp,32
20407068:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
2040706c:	fec42703          	lw	a4,-20(s0)
20407070:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20407074:	00f71563          	bne	a4,a5,2040707e <__metal_driver_sifive_test0_base+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20407078:	001007b7          	lui	a5,0x100
2040707c:	a011                	j	20407080 <__metal_driver_sifive_test0_base+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:868
		return 0;
2040707e:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:870
}
20407080:	853e                	mv	a0,a5
20407082:	4472                	lw	s0,28(sp)
20407084:	6105                	addi	sp,sp,32
20407086:	8082                	ret

20407088 <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20407088:	7179                	addi	sp,sp,-48
2040708a:	d606                	sw	ra,44(sp)
2040708c:	d422                	sw	s0,40(sp)
2040708e:	1800                	addi	s0,sp,48
20407090:	fca42e23          	sw	a0,-36(s0)
20407094:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20407098:	fdc42503          	lw	a0,-36(s0)
2040709c:	fc7ff0ef          	jal	ra,20407062 <__metal_driver_sifive_test0_base>
204070a0:	87aa                	mv	a5,a0
204070a2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
204070a6:	fd842783          	lw	a5,-40(s0)
204070aa:	01079713          	slli	a4,a5,0x10
204070ae:	fd842783          	lw	a5,-40(s0)
204070b2:	e789                	bnez	a5,204070bc <__metal_driver_sifive_test0_exit+0x34>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
204070b4:	6795                	lui	a5,0x5
204070b6:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
204070ba:	a021                	j	204070c2 <__metal_driver_sifive_test0_exit+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
204070bc:	678d                	lui	a5,0x3
204070be:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
204070c2:	97ba                	add	a5,a5,a4
204070c4:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
204070c8:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
204070cc:	fe842703          	lw	a4,-24(s0)
204070d0:	c398                	sw	a4,0(a5)
204070d2:	bfdd                	j	204070c8 <__metal_driver_sifive_test0_exit+0x40>

204070d4 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:888
{
204070d4:	1101                	addi	sp,sp,-32
204070d6:	ce22                	sw	s0,28(sp)
204070d8:	1000                	addi	s0,sp,32
204070da:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204070de:	fec42703          	lw	a4,-20(s0)
204070e2:	800007b7          	lui	a5,0x80000
204070e6:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
204070ea:	00f71563          	bne	a4,a5,204070f4 <__metal_driver_sifive_uart0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
204070ee:	100137b7          	lui	a5,0x10013
204070f2:	a011                	j	204070f6 <__metal_driver_sifive_uart0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:893
		return 0;
204070f4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:895
}
204070f6:	853e                	mv	a0,a5
204070f8:	4472                	lw	s0,28(sp)
204070fa:	6105                	addi	sp,sp,32
204070fc:	8082                	ret

204070fe <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:918
{
204070fe:	1101                	addi	sp,sp,-32
20407100:	ce22                	sw	s0,28(sp)
20407102:	1000                	addi	s0,sp,32
20407104:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407108:	fec42703          	lw	a4,-20(s0)
2040710c:	800007b7          	lui	a5,0x80000
20407110:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
20407114:	00f71763          	bne	a4,a5,20407122 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20407118:	800007b7          	lui	a5,0x80000
2040711c:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe448>
20407120:	a011                	j	20407124 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:923
		return 0;
20407122:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:925
}
20407124:	853e                	mv	a0,a5
20407126:	4472                	lw	s0,28(sp)
20407128:	6105                	addi	sp,sp,32
2040712a:	8082                	ret

2040712c <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:928
{
2040712c:	1101                	addi	sp,sp,-32
2040712e:	ce22                	sw	s0,28(sp)
20407130:	1000                	addi	s0,sp,32
20407132:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20407136:	fec42703          	lw	a4,-20(s0)
2040713a:	800007b7          	lui	a5,0x80000
2040713e:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
20407142:	00f71463          	bne	a4,a5,2040714a <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:930
		return 5;
20407146:	4795                	li	a5,5
20407148:	a011                	j	2040714c <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:933
		return 0;
2040714a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:935
}
2040714c:	853e                	mv	a0,a5
2040714e:	4472                	lw	s0,28(sp)
20407150:	6105                	addi	sp,sp,32
20407152:	8082                	ret

20407154 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:938
{
20407154:	1101                	addi	sp,sp,-32
20407156:	ce22                	sw	s0,28(sp)
20407158:	1000                	addi	s0,sp,32
2040715a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040715e:	fec42703          	lw	a4,-20(s0)
20407162:	800007b7          	lui	a5,0x80000
20407166:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
2040716a:	00f71763          	bne	a4,a5,20407178 <__metal_driver_sifive_uart0_clock+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
2040716e:	800007b7          	lui	a5,0x80000
20407172:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe780>
20407176:	a011                	j	2040717a <__metal_driver_sifive_uart0_clock+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:943
		return 0;
20407178:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:945
}
2040717a:	853e                	mv	a0,a5
2040717c:	4472                	lw	s0,28(sp)
2040717e:	6105                	addi	sp,sp,32
20407180:	8082                	ret

20407182 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:948
{
20407182:	1101                	addi	sp,sp,-32
20407184:	ce22                	sw	s0,28(sp)
20407186:	1000                	addi	s0,sp,32
20407188:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040718c:	fec42703          	lw	a4,-20(s0)
20407190:	800007b7          	lui	a5,0x80000
20407194:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
20407198:	00f71563          	bne	a4,a5,204071a2 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
2040719c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204071a0:	a011                	j	204071a4 <__metal_driver_sifive_uart0_pinmux+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:953
		return 0;
204071a2:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:955
}
204071a4:	853e                	mv	a0,a5
204071a6:	4472                	lw	s0,28(sp)
204071a8:	6105                	addi	sp,sp,32
204071aa:	8082                	ret

204071ac <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:958
{
204071ac:	1101                	addi	sp,sp,-32
204071ae:	ce22                	sw	s0,28(sp)
204071b0:	1000                	addi	s0,sp,32
204071b2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204071b6:	fec42703          	lw	a4,-20(s0)
204071ba:	800007b7          	lui	a5,0x80000
204071be:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
204071c2:	00f71463          	bne	a4,a5,204071ca <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:960
		return 0;
204071c6:	4781                	li	a5,0
204071c8:	a011                	j	204071cc <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:963
		return 0;
204071ca:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:965
}
204071cc:	853e                	mv	a0,a5
204071ce:	4472                	lw	s0,28(sp)
204071d0:	6105                	addi	sp,sp,32
204071d2:	8082                	ret

204071d4 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:968
{
204071d4:	1101                	addi	sp,sp,-32
204071d6:	ce22                	sw	s0,28(sp)
204071d8:	1000                	addi	s0,sp,32
204071da:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204071de:	fec42703          	lw	a4,-20(s0)
204071e2:	800007b7          	lui	a5,0x80000
204071e6:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe748>
204071ea:	00f71563          	bne	a4,a5,204071f4 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:970
		return 196608;
204071ee:	000307b7          	lui	a5,0x30
204071f2:	a011                	j	204071f6 <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:973
		return 0;
204071f4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:975
}
204071f6:	853e                	mv	a0,a5
204071f8:	4472                	lw	s0,28(sp)
204071fa:	6105                	addi	sp,sp,32
204071fc:	8082                	ret

204071fe <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
204071fe:	1101                	addi	sp,sp,-32
20407200:	ce06                	sw	ra,28(sp)
20407202:	cc22                	sw	s0,24(sp)
20407204:	1000                	addi	s0,sp,32
20407206:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
2040720a:	fec42503          	lw	a0,-20(s0)
2040720e:	ef1ff0ef          	jal	ra,204070fe <__metal_driver_sifive_uart0_interrupt_parent>
20407212:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:39
}
20407214:	853e                	mv	a0,a5
20407216:	40f2                	lw	ra,28(sp)
20407218:	4462                	lw	s0,24(sp)
2040721a:	6105                	addi	sp,sp,32
2040721c:	8082                	ret

2040721e <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
2040721e:	1101                	addi	sp,sp,-32
20407220:	ce06                	sw	ra,28(sp)
20407222:	cc22                	sw	s0,24(sp)
20407224:	1000                	addi	s0,sp,32
20407226:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
2040722a:	fec42503          	lw	a0,-20(s0)
2040722e:	effff0ef          	jal	ra,2040712c <__metal_driver_sifive_uart0_interrupt_line>
20407232:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:43
}
20407234:	853e                	mv	a0,a5
20407236:	40f2                	lw	ra,28(sp)
20407238:	4462                	lw	s0,24(sp)
2040723a:	6105                	addi	sp,sp,32
2040723c:	8082                	ret

2040723e <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
2040723e:	7179                	addi	sp,sp,-48
20407240:	d606                	sw	ra,44(sp)
20407242:	d422                	sw	s0,40(sp)
20407244:	1800                	addi	s0,sp,48
20407246:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040724a:	fdc42503          	lw	a0,-36(s0)
2040724e:	e87ff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
20407252:	87aa                	mv	a5,a0
20407254:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20407258:	fec42783          	lw	a5,-20(s0)
2040725c:	07c1                	addi	a5,a5,16
2040725e:	439c                	lw	a5,0(a5)
20407260:	fec42703          	lw	a4,-20(s0)
20407264:	0741                	addi	a4,a4,16
20407266:	0017e793          	ori	a5,a5,1
2040726a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
2040726c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:50
}
2040726e:	853e                	mv	a0,a5
20407270:	50b2                	lw	ra,44(sp)
20407272:	5422                	lw	s0,40(sp)
20407274:	6145                	addi	sp,sp,48
20407276:	8082                	ret

20407278 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20407278:	7179                	addi	sp,sp,-48
2040727a:	d606                	sw	ra,44(sp)
2040727c:	d422                	sw	s0,40(sp)
2040727e:	1800                	addi	s0,sp,48
20407280:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407284:	fdc42503          	lw	a0,-36(s0)
20407288:	e4dff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
2040728c:	87aa                	mv	a5,a0
2040728e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20407292:	fec42783          	lw	a5,-20(s0)
20407296:	07c1                	addi	a5,a5,16
20407298:	439c                	lw	a5,0(a5)
2040729a:	fec42703          	lw	a4,-20(s0)
2040729e:	0741                	addi	a4,a4,16
204072a0:	9bf9                	andi	a5,a5,-2
204072a2:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
204072a4:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:57
}
204072a6:	853e                	mv	a0,a5
204072a8:	50b2                	lw	ra,44(sp)
204072aa:	5422                	lw	s0,40(sp)
204072ac:	6145                	addi	sp,sp,48
204072ae:	8082                	ret

204072b0 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
204072b0:	7179                	addi	sp,sp,-48
204072b2:	d606                	sw	ra,44(sp)
204072b4:	d422                	sw	s0,40(sp)
204072b6:	1800                	addi	s0,sp,48
204072b8:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204072bc:	fdc42503          	lw	a0,-36(s0)
204072c0:	e15ff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
204072c4:	87aa                	mv	a5,a0
204072c6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
204072ca:	fec42783          	lw	a5,-20(s0)
204072ce:	07c1                	addi	a5,a5,16
204072d0:	439c                	lw	a5,0(a5)
204072d2:	fec42703          	lw	a4,-20(s0)
204072d6:	0741                	addi	a4,a4,16
204072d8:	0027e793          	ori	a5,a5,2
204072dc:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
204072de:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:64
}
204072e0:	853e                	mv	a0,a5
204072e2:	50b2                	lw	ra,44(sp)
204072e4:	5422                	lw	s0,40(sp)
204072e6:	6145                	addi	sp,sp,48
204072e8:	8082                	ret

204072ea <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
204072ea:	7179                	addi	sp,sp,-48
204072ec:	d606                	sw	ra,44(sp)
204072ee:	d422                	sw	s0,40(sp)
204072f0:	1800                	addi	s0,sp,48
204072f2:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204072f6:	fdc42503          	lw	a0,-36(s0)
204072fa:	ddbff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
204072fe:	87aa                	mv	a5,a0
20407300:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20407304:	fec42783          	lw	a5,-20(s0)
20407308:	07c1                	addi	a5,a5,16
2040730a:	439c                	lw	a5,0(a5)
2040730c:	fec42703          	lw	a4,-20(s0)
20407310:	0741                	addi	a4,a4,16
20407312:	9bf5                	andi	a5,a5,-3
20407314:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
20407316:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:71
}
20407318:	853e                	mv	a0,a5
2040731a:	50b2                	lw	ra,44(sp)
2040731c:	5422                	lw	s0,40(sp)
2040731e:	6145                	addi	sp,sp,48
20407320:	8082                	ret

20407322 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20407322:	7179                	addi	sp,sp,-48
20407324:	d606                	sw	ra,44(sp)
20407326:	d422                	sw	s0,40(sp)
20407328:	1800                	addi	s0,sp,48
2040732a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040732e:	fdc42503          	lw	a0,-36(s0)
20407332:	da3ff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
20407336:	87aa                	mv	a5,a0
20407338:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
2040733c:	fec42783          	lw	a5,-20(s0)
20407340:	439c                	lw	a5,0(a5)
20407342:	83fd                	srli	a5,a5,0x1f
20407344:	0ff7f793          	zext.b	a5,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:77
}
20407348:	853e                	mv	a0,a5
2040734a:	50b2                	lw	ra,44(sp)
2040734c:	5422                	lw	s0,40(sp)
2040734e:	6145                	addi	sp,sp,48
20407350:	8082                	ret

20407352 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20407352:	7179                	addi	sp,sp,-48
20407354:	d606                	sw	ra,44(sp)
20407356:	d422                	sw	s0,40(sp)
20407358:	1800                	addi	s0,sp,48
2040735a:	fca42e23          	sw	a0,-36(s0)
2040735e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407362:	fdc42503          	lw	a0,-36(s0)
20407366:	d6fff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
2040736a:	87aa                	mv	a5,a0
2040736c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20407370:	fec42783          	lw	a5,-20(s0)
20407374:	07a1                	addi	a5,a5,8
20407376:	4398                	lw	a4,0(a5)
20407378:	fd842783          	lw	a5,-40(s0)
2040737c:	01079693          	slli	a3,a5,0x10
20407380:	000707b7          	lui	a5,0x70
20407384:	8ff5                	and	a5,a5,a3
20407386:	fec42683          	lw	a3,-20(s0)
2040738a:	06a1                	addi	a3,a3,8
2040738c:	8fd9                	or	a5,a5,a4
2040738e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20407390:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:85
}
20407392:	853e                	mv	a0,a5
20407394:	50b2                	lw	ra,44(sp)
20407396:	5422                	lw	s0,40(sp)
20407398:	6145                	addi	sp,sp,48
2040739a:	8082                	ret

2040739c <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
2040739c:	7179                	addi	sp,sp,-48
2040739e:	d606                	sw	ra,44(sp)
204073a0:	d422                	sw	s0,40(sp)
204073a2:	1800                	addi	s0,sp,48
204073a4:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204073a8:	fdc42503          	lw	a0,-36(s0)
204073ac:	d29ff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
204073b0:	87aa                	mv	a5,a0
204073b2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
204073b6:	fec42783          	lw	a5,-20(s0)
204073ba:	07a1                	addi	a5,a5,8
204073bc:	439c                	lw	a5,0(a5)
204073be:	83c1                	srli	a5,a5,0x10
204073c0:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:91
}
204073c2:	853e                	mv	a0,a5
204073c4:	50b2                	lw	ra,44(sp)
204073c6:	5422                	lw	s0,40(sp)
204073c8:	6145                	addi	sp,sp,48
204073ca:	8082                	ret

204073cc <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
204073cc:	7179                	addi	sp,sp,-48
204073ce:	d606                	sw	ra,44(sp)
204073d0:	d422                	sw	s0,40(sp)
204073d2:	1800                	addi	s0,sp,48
204073d4:	fca42e23          	sw	a0,-36(s0)
204073d8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204073dc:	fdc42503          	lw	a0,-36(s0)
204073e0:	cf5ff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
204073e4:	87aa                	mv	a5,a0
204073e6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
204073ea:	fec42783          	lw	a5,-20(s0)
204073ee:	07b1                	addi	a5,a5,12
204073f0:	4398                	lw	a4,0(a5)
204073f2:	fd842783          	lw	a5,-40(s0)
204073f6:	01079693          	slli	a3,a5,0x10
204073fa:	000707b7          	lui	a5,0x70
204073fe:	8ff5                	and	a5,a5,a3
20407400:	fec42683          	lw	a3,-20(s0)
20407404:	06b1                	addi	a3,a3,12
20407406:	8fd9                	or	a5,a5,a4
20407408:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
2040740a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:99
}
2040740c:	853e                	mv	a0,a5
2040740e:	50b2                	lw	ra,44(sp)
20407410:	5422                	lw	s0,40(sp)
20407412:	6145                	addi	sp,sp,48
20407414:	8082                	ret

20407416 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
20407416:	7179                	addi	sp,sp,-48
20407418:	d606                	sw	ra,44(sp)
2040741a:	d422                	sw	s0,40(sp)
2040741c:	1800                	addi	s0,sp,48
2040741e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407422:	fdc42503          	lw	a0,-36(s0)
20407426:	cafff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
2040742a:	87aa                	mv	a5,a0
2040742c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20407430:	fec42783          	lw	a5,-20(s0)
20407434:	07b1                	addi	a5,a5,12
20407436:	439c                	lw	a5,0(a5)
20407438:	83c1                	srli	a5,a5,0x10
2040743a:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:105
}
2040743c:	853e                	mv	a0,a5
2040743e:	50b2                	lw	ra,44(sp)
20407440:	5422                	lw	s0,40(sp)
20407442:	6145                	addi	sp,sp,48
20407444:	8082                	ret

20407446 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20407446:	7179                	addi	sp,sp,-48
20407448:	d606                	sw	ra,44(sp)
2040744a:	d422                	sw	s0,40(sp)
2040744c:	1800                	addi	s0,sp,48
2040744e:	fca42e23          	sw	a0,-36(s0)
20407452:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407456:	fdc42503          	lw	a0,-36(s0)
2040745a:	c7bff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
2040745e:	87aa                	mv	a5,a0
20407460:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20407464:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20407466:	fdc42503          	lw	a0,-36(s0)
2040746a:	eb9ff0ef          	jal	ra,20407322 <__metal_driver_sifive_uart0_txready>
2040746e:	87aa                	mv	a5,a0
20407470:	fbfd                	bnez	a5,20407466 <__metal_driver_sifive_uart0_putc+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20407472:	fec42783          	lw	a5,-20(s0)
20407476:	fd842703          	lw	a4,-40(s0)
2040747a:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2040747c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:115
}
2040747e:	853e                	mv	a0,a5
20407480:	50b2                	lw	ra,44(sp)
20407482:	5422                	lw	s0,40(sp)
20407484:	6145                	addi	sp,sp,48
20407486:	8082                	ret

20407488 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20407488:	7179                	addi	sp,sp,-48
2040748a:	d606                	sw	ra,44(sp)
2040748c:	d422                	sw	s0,40(sp)
2040748e:	1800                	addi	s0,sp,48
20407490:	fca42e23          	sw	a0,-36(s0)
20407494:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407498:	fdc42503          	lw	a0,-36(s0)
2040749c:	c39ff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
204074a0:	87aa                	mv	a5,a0
204074a2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
204074a6:	fec42783          	lw	a5,-20(s0)
204074aa:	0791                	addi	a5,a5,4
204074ac:	439c                	lw	a5,0(a5)
204074ae:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
204074b2:	fe842783          	lw	a5,-24(s0)
204074b6:	0007d763          	bgez	a5,204074c4 <__metal_driver_sifive_uart0_getc+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
204074ba:	fd842783          	lw	a5,-40(s0)
204074be:	577d                	li	a4,-1
204074c0:	c398                	sw	a4,0(a5)
204074c2:	a801                	j	204074d2 <__metal_driver_sifive_uart0_getc+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
204074c4:	fe842783          	lw	a5,-24(s0)
204074c8:	0ff7f713          	zext.b	a4,a5
204074cc:	fd842783          	lw	a5,-40(s0)
204074d0:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
204074d2:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:129
}
204074d4:	853e                	mv	a0,a5
204074d6:	50b2                	lw	ra,44(sp)
204074d8:	5422                	lw	s0,40(sp)
204074da:	6145                	addi	sp,sp,48
204074dc:	8082                	ret

204074de <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
204074de:	7179                	addi	sp,sp,-48
204074e0:	d622                	sw	s0,44(sp)
204074e2:	1800                	addi	s0,sp,48
204074e4:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
204074e8:	fdc42783          	lw	a5,-36(s0)
204074ec:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
204074f0:	fec42783          	lw	a5,-20(s0)
204074f4:	43dc                	lw	a5,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:134
}
204074f6:	853e                	mv	a0,a5
204074f8:	5432                	lw	s0,44(sp)
204074fa:	6145                	addi	sp,sp,48
204074fc:	8082                	ret

204074fe <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
204074fe:	7179                	addi	sp,sp,-48
20407500:	d606                	sw	ra,44(sp)
20407502:	d422                	sw	s0,40(sp)
20407504:	1800                	addi	s0,sp,48
20407506:	fca42e23          	sw	a0,-36(s0)
2040750a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040750e:	fdc42783          	lw	a5,-36(s0)
20407512:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20407516:	fdc42503          	lw	a0,-36(s0)
2040751a:	bbbff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
2040751e:	87aa                	mv	a5,a0
20407520:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407524:	fdc42503          	lw	a0,-36(s0)
20407528:	c2dff0ef          	jal	ra,20407154 <__metal_driver_sifive_uart0_clock>
2040752c:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20407530:	fd842703          	lw	a4,-40(s0)
20407534:	fec42783          	lw	a5,-20(s0)
20407538:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
2040753a:	fe442783          	lw	a5,-28(s0)
2040753e:	cbb1                	beqz	a5,20407592 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20407540:	fe442783          	lw	a5,-28(s0)
20407544:	439c                	lw	a5,0(a5)
20407546:	439c                	lw	a5,0(a5)
20407548:	fe442503          	lw	a0,-28(s0)
2040754c:	9782                	jalr	a5
2040754e:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20407552:	fe042703          	lw	a4,-32(s0)
20407556:	fd842783          	lw	a5,-40(s0)
2040755a:	02f747b3          	div	a5,a4,a5
2040755e:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20407562:	fe842783          	lw	a5,-24(s0)
20407566:	07e1                	addi	a5,a5,24
20407568:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
2040756a:	fe842783          	lw	a5,-24(s0)
2040756e:	07a1                	addi	a5,a5,8
20407570:	439c                	lw	a5,0(a5)
20407572:	fe842703          	lw	a4,-24(s0)
20407576:	0721                	addi	a4,a4,8
20407578:	0017e793          	ori	a5,a5,1
2040757c:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
2040757e:	fe842783          	lw	a5,-24(s0)
20407582:	07b1                	addi	a5,a5,12
20407584:	439c                	lw	a5,0(a5)
20407586:	fe842703          	lw	a4,-24(s0)
2040758a:	0731                	addi	a4,a4,12
2040758c:	0017e793          	ori	a5,a5,1
20407590:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20407592:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:151
}
20407594:	853e                	mv	a0,a5
20407596:	50b2                	lw	ra,44(sp)
20407598:	5422                	lw	s0,40(sp)
2040759a:	6145                	addi	sp,sp,48
2040759c:	8082                	ret

2040759e <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
2040759e:	7139                	addi	sp,sp,-64
204075a0:	de06                	sw	ra,60(sp)
204075a2:	dc22                	sw	s0,56(sp)
204075a4:	0080                	addi	s0,sp,64
204075a6:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
204075aa:	fcc42783          	lw	a5,-52(s0)
204075ae:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
204075b2:	fcc42503          	lw	a0,-52(s0)
204075b6:	b1fff0ef          	jal	ra,204070d4 <__metal_driver_sifive_uart0_control_base>
204075ba:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
204075bc:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
204075c0:	fcc42503          	lw	a0,-52(s0)
204075c4:	b91ff0ef          	jal	ra,20407154 <__metal_driver_sifive_uart0_clock>
204075c8:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
204075cc:	fe842783          	lw	a5,-24(s0)
204075d0:	07a1                	addi	a5,a5,8
204075d2:	4398                	lw	a4,0(a5)
204075d4:	fe842783          	lw	a5,-24(s0)
204075d8:	07a1                	addi	a5,a5,8
204075da:	86be                	mv	a3,a5
204075dc:	fff907b7          	lui	a5,0xfff90
204075e0:	17fd                	addi	a5,a5,-1
204075e2:	8ff9                	and	a5,a5,a4
204075e4:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
204075e6:	fe842783          	lw	a5,-24(s0)
204075ea:	07a1                	addi	a5,a5,8
204075ec:	4398                	lw	a4,0(a5)
204075ee:	fe842783          	lw	a5,-24(s0)
204075f2:	07a1                	addi	a5,a5,8
204075f4:	86be                	mv	a3,a5
204075f6:	67c1                	lui	a5,0x10
204075f8:	8fd9                	or	a5,a5,a4
204075fa:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
204075fc:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
204075fe:	fe842783          	lw	a5,-24(s0)
20407602:	07d1                	addi	a5,a5,20
20407604:	439c                	lw	a5,0(a5)
20407606:	8b85                	andi	a5,a5,1
20407608:	dbfd                	beqz	a5,204075fe <pre_rate_change_callback_func+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2040760a:	fe842783          	lw	a5,-24(s0)
2040760e:	07a1                	addi	a5,a5,8
20407610:	439c                	lw	a5,0(a5)
20407612:	8b89                	andi	a5,a5,2
20407614:	c399                	beqz	a5,2040761a <pre_rate_change_callback_func+0x7c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20407616:	47a5                	li	a5,9
20407618:	a011                	j	2040761c <pre_rate_change_callback_func+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
2040761a:	47a9                	li	a5,10
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
2040761c:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20407620:	fe442783          	lw	a5,-28(s0)
20407624:	439c                	lw	a5,0(a5)
20407626:	439c                	lw	a5,0(a5)
20407628:	fe442503          	lw	a0,-28(s0)
2040762c:	9782                	jalr	a5
2040762e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20407632:	fe042703          	lw	a4,-32(s0)
20407636:	fdc42783          	lw	a5,-36(s0)
2040763a:	02f707b3          	mul	a5,a4,a5
2040763e:	873e                	mv	a4,a5
20407640:	fec42783          	lw	a5,-20(s0)
20407644:	43dc                	lw	a5,4(a5)
20407646:	02f757b3          	divu	a5,a4,a5
2040764a:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2040764e:	fc042a23          	sw	zero,-44(s0)
20407652:	a039                	j	20407660 <pre_rate_change_callback_func+0xc2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20407654:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20407656:	fd442783          	lw	a5,-44(s0)
2040765a:	0785                	addi	a5,a5,1
2040765c:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20407660:	fd442783          	lw	a5,-44(s0)
20407664:	fd842703          	lw	a4,-40(s0)
20407668:	fee7c6e3          	blt	a5,a4,20407654 <pre_rate_change_callback_func+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:180
}
2040766c:	0001                	nop
2040766e:	0001                	nop
20407670:	50f2                	lw	ra,60(sp)
20407672:	5462                	lw	s0,56(sp)
20407674:	6121                	addi	sp,sp,64
20407676:	8082                	ret

20407678 <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20407678:	7179                	addi	sp,sp,-48
2040767a:	d606                	sw	ra,44(sp)
2040767c:	d422                	sw	s0,40(sp)
2040767e:	1800                	addi	s0,sp,48
20407680:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20407684:	fdc42783          	lw	a5,-36(s0)
20407688:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2040768c:	fec42703          	lw	a4,-20(s0)
20407690:	fec42783          	lw	a5,-20(s0)
20407694:	43dc                	lw	a5,4(a5)
20407696:	85be                	mv	a1,a5
20407698:	853a                	mv	a0,a4
2040769a:	d6dfb0ef          	jal	ra,20403406 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:185
}
2040769e:	0001                	nop
204076a0:	50b2                	lw	ra,44(sp)
204076a2:	5422                	lw	s0,40(sp)
204076a4:	6145                	addi	sp,sp,48
204076a6:	8082                	ret

204076a8 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
204076a8:	7139                	addi	sp,sp,-64
204076aa:	de06                	sw	ra,60(sp)
204076ac:	dc22                	sw	s0,56(sp)
204076ae:	0080                	addi	s0,sp,64
204076b0:	fca42623          	sw	a0,-52(s0)
204076b4:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
204076b8:	fcc42783          	lw	a5,-52(s0)
204076bc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
204076c0:	fcc42503          	lw	a0,-52(s0)
204076c4:	a91ff0ef          	jal	ra,20407154 <__metal_driver_sifive_uart0_clock>
204076c8:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
204076cc:	fcc42503          	lw	a0,-52(s0)
204076d0:	ab3ff0ef          	jal	ra,20407182 <__metal_driver_sifive_uart0_pinmux>
204076d4:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
204076d8:	fe842783          	lw	a5,-24(s0)
204076dc:	c7b9                	beqz	a5,2040772a <__metal_driver_sifive_uart0_init+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
204076de:	fec42783          	lw	a5,-20(s0)
204076e2:	20407737          	lui	a4,0x20407
204076e6:	59e70713          	addi	a4,a4,1438 # 2040759e <pre_rate_change_callback_func>
204076ea:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
204076ec:	fec42783          	lw	a5,-20(s0)
204076f0:	fcc42703          	lw	a4,-52(s0)
204076f4:	c7d8                	sw	a4,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
204076f6:	fec42783          	lw	a5,-20(s0)
204076fa:	07a1                	addi	a5,a5,8
204076fc:	85be                	mv	a1,a5
204076fe:	fe842503          	lw	a0,-24(s0)
20407702:	2241                	jal	20407882 <metal_clock_register_pre_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20407704:	fec42783          	lw	a5,-20(s0)
20407708:	20407737          	lui	a4,0x20407
2040770c:	67870713          	addi	a4,a4,1656 # 20407678 <post_rate_change_callback_func>
20407710:	cbd8                	sw	a4,20(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20407712:	fec42783          	lw	a5,-20(s0)
20407716:	fcc42703          	lw	a4,-52(s0)
2040771a:	cf98                	sw	a4,24(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
2040771c:	fec42783          	lw	a5,-20(s0)
20407720:	07d1                	addi	a5,a5,20
20407722:	85be                	mv	a1,a5
20407724:	fe842503          	lw	a0,-24(s0)
20407728:	2271                	jal	204078b4 <metal_clock_register_post_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040772a:	fec42783          	lw	a5,-20(s0)
2040772e:	fc842583          	lw	a1,-56(s0)
20407732:	853e                	mv	a0,a5
20407734:	cd3fb0ef          	jal	ra,20403406 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20407738:	fe442783          	lw	a5,-28(s0)
2040773c:	cb95                	beqz	a5,20407770 <__metal_driver_sifive_uart0_init+0xc8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
2040773e:	fcc42503          	lw	a0,-52(s0)
20407742:	a6bff0ef          	jal	ra,204071ac <__metal_driver_sifive_uart0_pinmux_output_selector>
20407746:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20407748:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
2040774c:	fcc42503          	lw	a0,-52(s0)
20407750:	a85ff0ef          	jal	ra,204071d4 <__metal_driver_sifive_uart0_pinmux_source_selector>
20407754:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20407756:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
2040775a:	fe442783          	lw	a5,-28(s0)
2040775e:	439c                	lw	a5,0(a5)
20407760:	53dc                	lw	a5,36(a5)
20407762:	fdc42603          	lw	a2,-36(s0)
20407766:	fe042583          	lw	a1,-32(s0)
2040776a:	fe442503          	lw	a0,-28(s0)
2040776e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20407770:	0001                	nop
20407772:	50f2                	lw	ra,60(sp)
20407774:	5462                	lw	s0,56(sp)
20407776:	6121                	addi	sp,sp,64
20407778:	8082                	ret

2040777a <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
2040777a:	7179                	addi	sp,sp,-48
2040777c:	d606                	sw	ra,44(sp)
2040777e:	d422                	sw	s0,40(sp)
20407780:	1800                	addi	s0,sp,48
20407782:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20407786:	fdc42783          	lw	a5,-36(s0)
2040778a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:52
    while (current) {
2040778e:	a831                	j	204077aa <_metal_clock_call_all_callbacks+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20407790:	fec42783          	lw	a5,-20(s0)
20407794:	4398                	lw	a4,0(a5)
20407796:	fec42783          	lw	a5,-20(s0)
2040779a:	43dc                	lw	a5,4(a5)
2040779c:	853e                	mv	a0,a5
2040779e:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:54
        current = current->_next;
204077a0:	fec42783          	lw	a5,-20(s0)
204077a4:	479c                	lw	a5,8(a5)
204077a6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:52
    while (current) {
204077aa:	fec42783          	lw	a5,-20(s0)
204077ae:	f3ed                	bnez	a5,20407790 <_metal_clock_call_all_callbacks+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:56
    }
}
204077b0:	0001                	nop
204077b2:	0001                	nop
204077b4:	50b2                	lw	ra,44(sp)
204077b6:	5422                	lw	s0,40(sp)
204077b8:	6145                	addi	sp,sp,48
204077ba:	8082                	ret

204077bc <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
204077bc:	7179                	addi	sp,sp,-48
204077be:	d622                	sw	s0,44(sp)
204077c0:	1800                	addi	s0,sp,48
204077c2:	fca42e23          	sw	a0,-36(s0)
204077c6:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
204077ca:	fd842783          	lw	a5,-40(s0)
204077ce:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:66

    if (!list) {
204077d2:	fdc42783          	lw	a5,-36(s0)
204077d6:	e781                	bnez	a5,204077de <_metal_clock_append_to_callbacks+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:67
        return cb;
204077d8:	fd842783          	lw	a5,-40(s0)
204077dc:	a035                	j	20407808 <_metal_clock_append_to_callbacks+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
204077de:	fdc42783          	lw	a5,-36(s0)
204077e2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
204077e6:	a031                	j	204077f2 <_metal_clock_append_to_callbacks+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:73
        current = current->_next;
204077e8:	fec42783          	lw	a5,-20(s0)
204077ec:	479c                	lw	a5,8(a5)
204077ee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
204077f2:	fec42783          	lw	a5,-20(s0)
204077f6:	479c                	lw	a5,8(a5)
204077f8:	fbe5                	bnez	a5,204077e8 <_metal_clock_append_to_callbacks+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
204077fa:	fec42783          	lw	a5,-20(s0)
204077fe:	fd842703          	lw	a4,-40(s0)
20407802:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:78

    return list;
20407804:	fdc42783          	lw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:79
}
20407808:	853e                	mv	a0,a5
2040780a:	5432                	lw	s0,44(sp)
2040780c:	6145                	addi	sp,sp,48
2040780e:	8082                	ret

20407810 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20407810:	1101                	addi	sp,sp,-32
20407812:	ce06                	sw	ra,28(sp)
20407814:	cc22                	sw	s0,24(sp)
20407816:	1000                	addi	s0,sp,32
20407818:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
2040781c:	fec42783          	lw	a5,-20(s0)
20407820:	439c                	lw	a5,0(a5)
20407822:	439c                	lw	a5,0(a5)
20407824:	fec42503          	lw	a0,-20(s0)
20407828:	9782                	jalr	a5
2040782a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:112
}
2040782c:	853e                	mv	a0,a5
2040782e:	40f2                	lw	ra,28(sp)
20407830:	4462                	lw	s0,24(sp)
20407832:	6105                	addi	sp,sp,32
20407834:	8082                	ret

20407836 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20407836:	7179                	addi	sp,sp,-48
20407838:	d606                	sw	ra,44(sp)
2040783a:	d422                	sw	s0,40(sp)
2040783c:	1800                	addi	s0,sp,48
2040783e:	fca42e23          	sw	a0,-36(s0)
20407842:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20407846:	fdc42783          	lw	a5,-36(s0)
2040784a:	43dc                	lw	a5,4(a5)
2040784c:	853e                	mv	a0,a5
2040784e:	f2dff0ef          	jal	ra,2040777a <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20407852:	fdc42783          	lw	a5,-36(s0)
20407856:	439c                	lw	a5,0(a5)
20407858:	43dc                	lw	a5,4(a5)
2040785a:	fd842583          	lw	a1,-40(s0)
2040785e:	fdc42503          	lw	a0,-36(s0)
20407862:	9782                	jalr	a5
20407864:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20407868:	fdc42783          	lw	a5,-36(s0)
2040786c:	479c                	lw	a5,8(a5)
2040786e:	853e                	mv	a0,a5
20407870:	f0bff0ef          	jal	ra,2040777a <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:135

    return out;
20407874:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:136
}
20407878:	853e                	mv	a0,a5
2040787a:	50b2                	lw	ra,44(sp)
2040787c:	5422                	lw	s0,40(sp)
2040787e:	6145                	addi	sp,sp,48
20407880:	8082                	ret

20407882 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20407882:	1101                	addi	sp,sp,-32
20407884:	ce06                	sw	ra,28(sp)
20407886:	cc22                	sw	s0,24(sp)
20407888:	1000                	addi	s0,sp,32
2040788a:	fea42623          	sw	a0,-20(s0)
2040788e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20407892:	fec42783          	lw	a5,-20(s0)
20407896:	43dc                	lw	a5,4(a5)
20407898:	fe842583          	lw	a1,-24(s0)
2040789c:	853e                	mv	a0,a5
2040789e:	f1fff0ef          	jal	ra,204077bc <_metal_clock_append_to_callbacks>
204078a2:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
204078a4:	fec42783          	lw	a5,-20(s0)
204078a8:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:149
}
204078aa:	0001                	nop
204078ac:	40f2                	lw	ra,28(sp)
204078ae:	4462                	lw	s0,24(sp)
204078b0:	6105                	addi	sp,sp,32
204078b2:	8082                	ret

204078b4 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
204078b4:	1101                	addi	sp,sp,-32
204078b6:	ce06                	sw	ra,28(sp)
204078b8:	cc22                	sw	s0,24(sp)
204078ba:	1000                	addi	s0,sp,32
204078bc:	fea42623          	sw	a0,-20(s0)
204078c0:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
204078c4:	fec42783          	lw	a5,-20(s0)
204078c8:	479c                	lw	a5,8(a5)
204078ca:	fe842583          	lw	a1,-24(s0)
204078ce:	853e                	mv	a0,a5
204078d0:	eedff0ef          	jal	ra,204077bc <_metal_clock_append_to_callbacks>
204078d4:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
204078d6:	fec42783          	lw	a5,-20(s0)
204078da:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:162
}
204078dc:	0001                	nop
204078de:	40f2                	lw	ra,28(sp)
204078e0:	4462                	lw	s0,24(sp)
204078e2:	6105                	addi	sp,sp,32
204078e4:	8082                	ret

204078e6 <__metal_shutdown_exit>:
__metal_shutdown_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
204078e6:	1101                	addi	sp,sp,-32
204078e8:	ce06                	sw	ra,28(sp)
204078ea:	cc22                	sw	s0,24(sp)
204078ec:	1000                	addi	s0,sp,32
204078ee:	fea42623          	sw	a0,-20(s0)
204078f2:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
204078f6:	fec42783          	lw	a5,-20(s0)
204078fa:	439c                	lw	a5,0(a5)
204078fc:	439c                	lw	a5,0(a5)
204078fe:	fe842583          	lw	a1,-24(s0)
20407902:	fec42503          	lw	a0,-20(s0)
20407906:	9782                	jalr	a5

20407908 <metal_shutdown>:
metal_shutdown():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
20407908:	1101                	addi	sp,sp,-32
2040790a:	ce06                	sw	ra,28(sp)
2040790c:	cc22                	sw	s0,24(sp)
2040790e:	1000                	addi	s0,sp,32
20407910:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
20407914:	fec42583          	lw	a1,-20(s0)
20407918:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
2040791c:	fcbff0ef          	jal	ra,204078e6 <__metal_shutdown_exit>
	...

20407980 <__metal_vector_table>:
IRQ_0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407980:	c28fc06f          	j	20403da8 <metal_interrupt_vector_handler>

20407984 <IRQ_1>:
IRQ_1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407984:	c24fc06f          	j	20403da8 <metal_interrupt_vector_handler>

20407988 <IRQ_2>:
IRQ_2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407988:	c20fc06f          	j	20403da8 <metal_interrupt_vector_handler>

2040798c <IRQ_3>:
IRQ_3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040798c:	c4afc06f          	j	20403dd6 <metal_software_interrupt_vector_handler>

20407990 <IRQ_4>:
IRQ_4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407990:	c18fc06f          	j	20403da8 <metal_interrupt_vector_handler>

20407994 <IRQ_5>:
IRQ_5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407994:	c14fc06f          	j	20403da8 <metal_interrupt_vector_handler>

20407998 <IRQ_6>:
IRQ_6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407998:	c10fc06f          	j	20403da8 <metal_interrupt_vector_handler>

2040799c <IRQ_7>:
IRQ_7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040799c:	d34fc06f          	j	20403ed0 <metal_timer_interrupt_vector_handler>

204079a0 <IRQ_8>:
IRQ_8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
204079a0:	c08fc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079a4 <IRQ_9>:
IRQ_9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
204079a4:	c04fc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079a8 <IRQ_10>:
IRQ_10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
204079a8:	c00fc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079ac <IRQ_11>:
IRQ_11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
204079ac:	bfcfc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079b0 <IRQ_12>:
IRQ_12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
204079b0:	bf8fc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079b4 <IRQ_13>:
IRQ_13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
204079b4:	bf4fc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079b8 <IRQ_14>:
IRQ_14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
204079b8:	bf0fc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079bc <IRQ_15>:
IRQ_15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
204079bc:	becfc06f          	j	20403da8 <metal_interrupt_vector_handler>

204079c0 <IRQ_LC0>:
IRQ_LC0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
204079c0:	83bfc06f          	j	204041fa <metal_lc0_interrupt_vector_handler>

204079c4 <IRQ_LC1>:
IRQ_LC1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
204079c4:	8cdfc06f          	j	20404290 <metal_lc1_interrupt_vector_handler>

204079c8 <IRQ_LC2>:
IRQ_LC2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
204079c8:	95ffc06f          	j	20404326 <metal_lc2_interrupt_vector_handler>

204079cc <IRQ_LC3>:
IRQ_LC3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
204079cc:	9f1fc06f          	j	204043bc <metal_lc3_interrupt_vector_handler>

204079d0 <IRQ_LC4>:
IRQ_LC4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
204079d0:	a83fc06f          	j	20404452 <metal_lc4_interrupt_vector_handler>

204079d4 <IRQ_LC5>:
IRQ_LC5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
204079d4:	b15fc06f          	j	204044e8 <metal_lc5_interrupt_vector_handler>

204079d8 <IRQ_LC6>:
IRQ_LC6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
204079d8:	ba7fc06f          	j	2040457e <metal_lc6_interrupt_vector_handler>

204079dc <IRQ_LC7>:
IRQ_LC7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
204079dc:	c39fc06f          	j	20404614 <metal_lc7_interrupt_vector_handler>

204079e0 <IRQ_LC8>:
IRQ_LC8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
204079e0:	ccbfc06f          	j	204046aa <metal_lc8_interrupt_vector_handler>

204079e4 <IRQ_LC9>:
IRQ_LC9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
204079e4:	d5dfc06f          	j	20404740 <metal_lc9_interrupt_vector_handler>

204079e8 <IRQ_LC10>:
IRQ_LC10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
204079e8:	deffc06f          	j	204047d6 <metal_lc10_interrupt_vector_handler>

204079ec <IRQ_LC11>:
IRQ_LC11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
204079ec:	e81fc06f          	j	2040486c <metal_lc11_interrupt_vector_handler>

204079f0 <IRQ_LC12>:
IRQ_LC12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
204079f0:	f13fc06f          	j	20404902 <metal_lc12_interrupt_vector_handler>

204079f4 <IRQ_LC13>:
IRQ_LC13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
204079f4:	fa5fc06f          	j	20404998 <metal_lc13_interrupt_vector_handler>

204079f8 <IRQ_LC14>:
IRQ_LC14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
204079f8:	836fd06f          	j	20404a2e <metal_lc14_interrupt_vector_handler>

204079fc <IRQ_LC15>:
IRQ_LC15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
204079fc:	8c8fd06f          	j	20404ac4 <metal_lc15_interrupt_vector_handler>

20407a00 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:180
{
20407a00:	1101                	addi	sp,sp,-32
20407a02:	ce22                	sw	s0,28(sp)
20407a04:	1000                	addi	s0,sp,32
20407a06:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
20407a0a:	fec42703          	lw	a4,-20(s0)
20407a0e:	800007b7          	lui	a5,0x80000
20407a12:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe050>
20407a16:	00f71763          	bne	a4,a5,20407a24 <__metal_driver_fixed_clock_rate+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
20407a1a:	00f427b7          	lui	a5,0xf42
20407a1e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20407a22:	a825                	j	20407a5a <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20407a24:	fec42703          	lw	a4,-20(s0)
20407a28:	800007b7          	lui	a5,0x80000
20407a2c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe05c>
20407a30:	00f71763          	bne	a4,a5,20407a3e <__metal_driver_fixed_clock_rate+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20407a34:	044aa7b7          	lui	a5,0x44aa
20407a38:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
20407a3c:	a839                	j	20407a5a <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
20407a3e:	fec42703          	lw	a4,-20(s0)
20407a42:	800007b7          	lui	a5,0x80000
20407a46:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe068>
20407a4a:	00f71763          	bne	a4,a5,20407a58 <__metal_driver_fixed_clock_rate+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
20407a4e:	01e857b7          	lui	a5,0x1e85
20407a52:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20407a56:	a011                	j	20407a5a <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:191
		return 0;
20407a58:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:193
}
20407a5a:	853e                	mv	a0,a5
20407a5c:	4472                	lw	s0,28(sp)
20407a5e:	6105                	addi	sp,sp,32
20407a60:	8082                	ret

20407a62 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20407a62:	1101                	addi	sp,sp,-32
20407a64:	ce06                	sw	ra,28(sp)
20407a66:	cc22                	sw	s0,24(sp)
20407a68:	1000                	addi	s0,sp,32
20407a6a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
20407a6e:	fec42503          	lw	a0,-20(s0)
20407a72:	f8fff0ef          	jal	ra,20407a00 <__metal_driver_fixed_clock_rate>
20407a76:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:14
}
20407a78:	853e                	mv	a0,a5
20407a7a:	40f2                	lw	ra,28(sp)
20407a7c:	4462                	lw	s0,24(sp)
20407a7e:	6105                	addi	sp,sp,32
20407a80:	8082                	ret

20407a82 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407a82:	1101                	addi	sp,sp,-32
20407a84:	ce06                	sw	ra,28(sp)
20407a86:	cc22                	sw	s0,24(sp)
20407a88:	1000                	addi	s0,sp,32
20407a8a:	fea42623          	sw	a0,-20(s0)
20407a8e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407a92:	fec42503          	lw	a0,-20(s0)
20407a96:	fcdff0ef          	jal	ra,20407a62 <__metal_driver_fixed_clock_get_rate_hz>
20407a9a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:19
}
20407a9c:	853e                	mv	a0,a5
20407a9e:	40f2                	lw	ra,28(sp)
20407aa0:	4462                	lw	s0,24(sp)
20407aa2:	6105                	addi	sp,sp,32
20407aa4:	8082                	ret

20407aa6 <_exit>:
_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20407aa6:	1101                	addi	sp,sp,-32
20407aa8:	ce06                	sw	ra,28(sp)
20407aaa:	cc22                	sw	s0,24(sp)
20407aac:	1000                	addi	s0,sp,32
20407aae:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20407ab2:	fec42503          	lw	a0,-20(s0)
20407ab6:	e53ff0ef          	jal	ra,20407908 <metal_shutdown>
