
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/src/debug/empty.elf:     file format elf32-littleriscv
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00001048 memsz 0x00001048 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x20407840 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00001958 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002080 vaddr 0x20401080 paddr 0x20401080 align 2**12
         filesz 0x000067ba memsz 0x000067ba flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e0  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000ce0  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000067ba  20401080  20401080  00002080  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  20407840  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000d4c  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  80001520  80001520  000097c8  2**4  ALLOC
  8 .heap             00000800  80001920  80001920  000097c8  2**3  ALLOC
  9 .debug_info       0001fc5c  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     000031d9  00000000  00000000  00029424  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000d50  00000000  00000000  0002c600  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000ae0  00000000  00000000  0002d350  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000ba2d  00000000  00000000  0002de30  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004fab  00000000  00000000  0003985d  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003e808  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003e838  2**0  CONTENTS, READONLY
 17 .debug_frame      00003398  00000000  00000000  0003e868  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401080 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80001520 l    d  .stack	00000000 .stack
80001920 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c4 l     F .init	00000000 __metal_memory_scrub
20400132 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400244 l       .init	00000000 _skip_init
204004d4 l       .rodata	00000000 argv
204004d8 l       .rodata	00000000 envp
204004dc l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20405dae l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20405dc8 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20405de2 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20405df8 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20405e0c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20405e1e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20405e2e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20405e44 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20405e56 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
204006d8 l     O .rodata	00000880 pll_configs
20405e6c l     F .text	0000004e get_pll_config_freq
204060da l     F .text	000000ac find_closest_config
20406186 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 trap.c
00000000 l    df *ABS*	00000000 semaphore.c
00000000 l    df *ABS*	00000000 findfp.c
20401f8e l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
2040235a l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20403160 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
2040318a l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
204031b2 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
204031ee l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
2040334e l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20403898 l     F .text	00000024 __metal_driver_cpu_hartid
204038bc l     F .text	0000002a __metal_driver_cpu_timebase
204038e6 l     F .text	0000002a __metal_driver_cpu_interrupt_controller
20403910 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
204052f4 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2040531e l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20405346 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
2040536e l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20405396 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
204053b8 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20406514 l     F .text	00000026 __metal_driver_sifive_gpio0_base
2040653a l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20406564 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20406e38 l     F .text	0000002a __metal_driver_sifive_uart0_control_base
20406e62 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
20406e90 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
20406eb8 l     F .text	0000002e __metal_driver_sifive_uart0_clock
20406ee6 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20406f10 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
20406f38 l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20407302 l     F .text	000000da pre_rate_change_callback_func
204073dc l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20405bbe l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20405bd8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20405bee l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405c02 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20405cbe l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20405cd8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20405cee l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405d02 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2040649c l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
20406dc8 l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407780 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 kernel.c
20401080 l     F .text	0000001a r_mie
2040109a l     F .text	0000001a w_mie
204010b4 l     F .text	0000001a w_mtvec
204010ce l     F .text	0000002e intr_on
204010fc l     F .text	00000026 intr_off
800007c8 l     O .bss	00000004 i.0
00000000 l    df *ABS*	00000000 queue.c
00000000 l    df *ABS*	00000000 task.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007fc l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007f4 l     O .bss	00000004 init_done.1
800007f8 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20407700 l       .text	00000000 IRQ_0
20407704 l       .text	00000000 IRQ_1
20407708 l       .text	00000000 IRQ_2
2040770c l       .text	00000000 IRQ_3
20407710 l       .text	00000000 IRQ_4
20407714 l       .text	00000000 IRQ_5
20407718 l       .text	00000000 IRQ_6
2040771c l       .text	00000000 IRQ_7
20407720 l       .text	00000000 IRQ_8
20407724 l       .text	00000000 IRQ_9
20407728 l       .text	00000000 IRQ_10
2040772c l       .text	00000000 IRQ_11
20407730 l       .text	00000000 IRQ_12
20407734 l       .text	00000000 IRQ_13
20407738 l       .text	00000000 IRQ_14
2040773c l       .text	00000000 IRQ_15
20407740 l       .text	00000000 IRQ_LC0
20407744 l       .text	00000000 IRQ_LC1
20407748 l       .text	00000000 IRQ_LC2
2040774c l       .text	00000000 IRQ_LC3
20407750 l       .text	00000000 IRQ_LC4
20407754 l       .text	00000000 IRQ_LC5
20407758 l       .text	00000000 IRQ_LC6
2040775c l       .text	00000000 IRQ_LC7
20407760 l       .text	00000000 IRQ_LC8
20407764 l       .text	00000000 IRQ_LC9
20407768 l       .text	00000000 IRQ_LC10
2040776c l       .text	00000000 IRQ_LC11
20407770 l       .text	00000000 IRQ_LC12
20407774 l       .text	00000000 IRQ_LC13
20407778 l       .text	00000000 IRQ_LC14
2040777c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
20400fe0 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
204027a4 g     F .text	0000002e _isatty_r
204041d2  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401b04 g     F .text	000000da _puts_r
204027d2 g     F .text	00000032 _lseek_r
20407574 g     F .text	00000026 metal_clock_get_rate_hz
20407262 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
2040352a g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
204070b6 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
2040413c  w    F .text	00000096 metal_lc3_interrupt_vector_handler
204013d8 g     F .text	0000005a insertFirst
204049e4 g     F .text	00000058 __metal_valid_interrupt_id
20401486 g     F .text	00000090 delete
20401ac6 g     F .text	0000003e printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
20404e64 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
20407520 g     F .text	00000054 _metal_clock_append_to_callbacks
20405412 g     F .text	00000046 __metal_plic0_complete_interrupt
2040183a g     F .text	00000046 semaphore_signal
20404c2a g     F .text	000001e2 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
204026d8 g     F .text	00000036 __sseek
20402046 g     F .text	0000006a __sinit
20401c1a g     F .text	000000c0 __swbuf_r
800007c8 g       .data	00000000 __tls_base
20402000 g     F .text	00000046 __sfmoreglue
204016d0 g     F .text	00000030 queue_deleteFirst
20402358 g     F .text	00000002 __malloc_unlock
20407670 g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
204069a2 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
204004e8 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80001514 g       .bss	00000000 metal_segment_bss_target_end
2040321e g     F .text	0000009a __metal_clint0_mtime_get
20405268 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
2040717a g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20406758 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
800007dc g     O .bss	00000004 count2
20406dee g     F .text	0000004a __metal_driver_sifive_test0_exit
2040121e g     F .text	00000050 task_wait
20402d8e g     F .text	0000000a __errno
20401676 g     F .text	0000005a queue_insertFirst
80000000 g       .rodata	00000000 metal_segment_itim_target_start
20407086 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20407014 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
204011fe g     F .text	00000020 task_end
20400146 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
204032b8 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20402774 g     F .text	00000030 _fstat_r
20406bf2 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80001510 g     O .bss	00000004 semaphore
800007ec g     O .bss	00000004 errno
20405f5e g     F .text	0000017c __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
204075e6 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
204044c0  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000d0  w    F .init	00000000 __metal_before_start
2040308a  w    F .text	00000014 metal_init_run
20400674 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
20400630 g     O .rodata	00000044 __metal_driver_vtable_cpu
20403132 g     F .text	0000002e metal_uart_set_baud_rate
2040740c g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20404ef0 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400f58 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80001920 g       .heap	00000000 metal_segment_heap_target_start
20401ff6 g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
2040442a  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20406336 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405b22 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20401bde g     F .text	0000000c puts
20404718  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20403aa2 g     F .text	00000018 __metal_default_exception_handler
20401936 g     F .text	0000000c malloc
20402bee g     F .text	00000026 _fstat
20403864 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20404e80 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20401634 g     F .text	00000042 handle_trap
20403934 g     F .text	00000030 __metal_driver_cpu_get
204005cc g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
20403996 g     F .text	00000018 __metal_interrupt_global_disable
20405b96 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20404394  w    F .text	00000096 metal_lc7_interrupt_vector_handler
204017ea g     F .text	00000050 semaphore_wait
20404556  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20401bea g     F .text	00000030 _sbrk_r
20405942 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20404af8 g     F .text	0000004e __metal_exception_register
20402f9a g     F .text	00000078 metal_init
20402b9a g     F .text	00000032 _read_r
20405082 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2040683a g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
20401516 g     F .text	0000007c handle_interrupt
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20403b92 g     F .text	00000068 __metal_default_sw_handler
20407618 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
20406f62 g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20402c14 g     F .text	00000020 _isatty
20406900 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20406fa2 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20401040 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20401020 g     O .rodata	00000004 _global_impure_ptr
20403bfa  w    F .text	00000092 metal_timer_interrupt_vector_handler
20402df8 g     F .text	0000005e __libc_init_array
2040687a g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
204045ec  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20405d8c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20404e0c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20402c88 g     F .text	0000008e _sbrk
204067f4 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
204074de g     F .text	00000042 _metal_clock_call_all_callbacks
20401894 g     F .text	00000000 switch_to
204002be g     F .init	00000002 _init
204039f8 g     F .text	0000001a __metal_interrupt_timer_disable
204069ec g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
20405140 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400fa4 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20406fdc g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20406940 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402dc2 g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
20406d7a g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20403012 g     F .text	00000078 metal_fini
204050ca g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
204052d4 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
20403a4a g     F .text	0000002c __metal_interrupt_local_enable
20403830 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
204030b2 g     F .text	00000026 metal_tty_putc
204012b6 g     F .text	0000004a timer_init
20405612 g     F .text	00000018 __metal_plic0_default_handler
20402d16  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
204017b4 g     F .text	00000036 semaphore_init
20405992 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403c8c g     F .text	00000016 __metal_default_beu_handler
204003e0 g     O .rodata	00000020 __sf_fake_stderr
20403a2e g     F .text	0000001c __metal_interrupt_external_disable
20406f82 g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20404ed4 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
800007cc g     O .bss	00000004 head
20404b46 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
20402384 g     F .text	00000042 __sfputs_r
20405222 g     F .text	00000046 __metal_driver_cpu_exception_register
204039ae g     F .text	00000018 __metal_interrupt_software_enable
20404010  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20402804 g     F .text	0000001a memchr
20401744 g     F .text	0000001c task1
20401942 g     F .text	000000a6 _free_r
800007f0 g     O .bss	00000004 _global_atexit
204054d8 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
204048da g     F .text	00000058 __metal_controller_interrupt_vector_mode
20402ed2 g     F .text	000000c8 __call_exitprocs
80001920 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400154 g     F .init	00000000 _start
20401760 g     F .text	0000002a task2
20401374 g     F .text	00000064 printList
20405c18 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20402c34 g     F .text	0000002a _lseek
20405202 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20405296 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
800007d0 g     O .bss	00000004 queue_head
20403a12 g     F .text	0000001c __metal_interrupt_external_enable
20402e56 g     F .text	0000007c __register_exitproc
204071aa g     F .text	00000042 __metal_driver_sifive_uart0_putc
80000888 g     O .bss	00000004 current_ptr
204056d6 g     F .text	0000015a __metal_driver_riscv_plic0_init
204058f2 g     F .text	00000050 __metal_driver_riscv_plic0_enable
204067c8 g     F .text	0000002c __metal_driver_sifive_gpio0_output
204042fe  w    F .text	00000096 metal_lc6_interrupt_vector_handler
20403964 g     F .text	0000001a __metal_myhart_id
20406d9a g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20401432 g     F .text	00000054 find
20403b00  w    F .text	00000092 metal_software_interrupt_vector_handler
20404e38 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20402746 g     F .text	0000002e _close_r
20407242 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20401700 g     F .text	00000044 task
20401154 g     F .text	000000aa task_create
2040340c g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401cda g     F .text	0000010a __swsetup_r
204020b0 g     F .text	0000009c __sfp
2040759a g     F .text	0000004c metal_clock_set_rate_hz
2040265a g     F .text	00000030 __sread
800007e0 g     O .bss	00000004 count3
20406718 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002c0  w    F .init	00000000 secondary_main
20403ad2  w    F .text	0000002e metal_interrupt_vector_handler
20402356 g     F .text	00000002 __malloc_lock
2040704e g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401f2a g     F .text	00000064 _fflush_r
2040549e g     F .text	0000003a __metal_plic0_get_threshold
204064ae g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
20400400 g     O .rodata	00000020 __sf_fake_stdin
20404a3c g     F .text	000000bc __metal_local_interrupt_enable
204036f0 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
204022ae g     F .text	000000a8 memset
20404268  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20401340 g     F .text	00000034 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20407130 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20401024 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
204050de g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
204051a2 g     F .text	00000060 __metal_driver_cpu_get_msip
204076da g     F .text	00000018 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
204052b4 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
204053d6 g     F .text	0000003c __metal_plic0_claim_interrupt
20407100 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
2040270e g     F .text	00000006 __sclose
20404682  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008e g     F .init	00000000 metal_mem_scrub
20401880 g     F .text	00000000 osSchedulerLaunch
204019e8 g     F .text	000000de _malloc_r
2040350e g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
8000088c g     O .bss	00000004 temp_ptr
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
20404f60 g     F .text	00000046 __metal_driver_cpu_timebase_get
20405a86 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
2040769e g     F .text	0000001a metal_cpu_get_current_hartid
20405d18 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20407700 g       .text	00000000 __metal_vector_table
20401048 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
800007d4 g     O .bss	00000004 count
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
204002be g     F .init	00000002 _fini
20401ac6 g     F .text	0000003e iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20401300 g     F .text	00000040 scheduler_RoundRobin
2040553a g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
2040397e g     F .text	00000018 __metal_interrupt_global_enable
20402d84 g     F .text	0000000a atexit
20402714 g     F .text	00000032 _write_r
800007d8 g     O .bss	00000004 count1
204039de g     F .text	0000001a __metal_interrupt_timer_enable
204071ec g     F .text	00000056 __metal_driver_sifive_uart0_getc
20403638 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
2040281e g     F .text	0000010c _printf_common
800007a0 g     O .data	00000004 _impure_ptr
2040500c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401de4 g     F .text	00000146 __sflush_r
80000890 g     O .bss	00000c80 PCB_STACK
204076b8 g     F .text	00000022 __metal_shutdown_exit
204059c2 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20405eba g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
204064dc g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
204077e2 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
20403582 g     F .text	000000b6 __metal_driver_riscv_clint0_enable
2040103c g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
20401592 g     F .text	000000a2 handle_exception
20407840 g       *ABS*	00000000 metal_segment_data_source_start
20400138 g       .init	00000000 early_trap_vector
80002120 g       .heap	00000000 metal_segment_heap_target_end
20404932 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
204021b6 g     F .text	0000005a __swhatbuf_r
204068ba g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20403ca2 g     F .text	00000068 __metal_default_timer_handler
20402d16 g     F .text	0000006e _write
20401122 g     F .text	00000032 stack_init
2040562a g     F .text	000000ac __metal_plic0_handler
204040a6  w    F .text	00000096 metal_lc2_interrupt_vector_handler
20404844  w    F .text	00000096 metal_lc15_interrupt_vector_handler
2040764a g     F .text	00000026 metal_cpu_interrupt_controller
800007c0 g     O .data	00000004 __metal_dt_test_100000
2040268a g     F .text	0000004e __swrite
20402d98 g     F .text	0000002a exit
204023c6 g     F .text	00000294 _vfiprintf_r
2040214c g     F .text	0000006a _fwalk_reent
20407802 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20401048 g       *ABS*	00000000 metal_segment_lim_source_start
20400420 g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
20403aba g     F .text	00000018 __metal_default_interrupt_handler
20403104 g     F .text	0000002e metal_uart_putc
20402c5e g     F .text	0000002a _read
2040309e  w    F .text	00000014 metal_fini_run
2040679e g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403d80 g     F .text	00000180 __metal_exception_handler
20403f7a  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20407826 g     F .text	00000014 _exit
20404fa6 g     F .text	00000066 __metal_driver_cpu_mtime_get
20402210 g     F .text	0000009e __smakebuf_r
204034e6 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
2040292a g     F .text	00000270 _printf_i
800007e8 g     O .bss	00000004 __malloc_sbrk_start
204047ae  w    F .text	00000096 metal_lc14_interrupt_vector_handler
2040102c g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20403384 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007e4 g     O .bss	00000004 __malloc_free_list
2040178a g     F .text	0000002a task3
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
204023c6 g     F .text	00000294 _vfprintf_r
2040126e g     F .text	00000026 task_unlock
2040509c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
2040556e g     F .text	000000a4 __metal_plic0_enable
2040008c  w      .init	00000000 __register_frame_info
20405c9c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
204050b0 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20403a76 g     F .text	0000002c __metal_interrupt_local_disable
204039c6 g     F .text	00000018 __metal_interrupt_software_disable
204030d8 g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
20405458 g     F .text	00000046 __metal_plic0_set_threshold
204059ea g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20402bcc g     F .text	00000022 _close
20401034 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
20401294 g     F .text	00000022 kernel_launch
20405830 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11828293          	addi	t0,t0,280 # 20400138 <early_trap_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011663          	bnez	sp,2040003c <_enter+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	5fc02117          	auipc	sp,0x5fc02
20400038:	8ec10113          	addi	sp,sp,-1812 # 80001920 <_sp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2040003c:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:60
    li t0, 0
20400040:	4281                	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:61
    la t1, __stack_size
20400042:	40000313          	li	t1,1024
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400046:	ff017113          	andi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2040004a:	00a28563          	beq	t0,a0,20400054 <_enter+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004e:	911a                	add	sp,sp,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20400050:	0285                	addi	t0,t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:67
    j 1b
20400052:	bfd5                	j	20400046 <_enter+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400054:	00000097          	auipc	ra,0x0
20400058:	07c08093          	addi	ra,ra,124 # 204000d0 <__metal_before_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:77
    beqz ra, 1f
2040005c:	00008363          	beqz	ra,20400062 <_enter+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:78
    jalr ra
20400060:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20400062:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:85
    li a1, 0
20400066:	4581                	li	a1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:86
    li a2, 0
20400068:	4601                	li	a2,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:87
    call _start
2040006a:	20ed                	jal	20400154 <_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2040006c:	00000093          	li	ra,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:93
    beqz ra, 1f
20400070:	00008363          	beqz	ra,20400076 <_enter+0x76>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:94
    jalr ra
20400074:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400076:	00000297          	auipc	t0,0x0
2040007a:	00c28293          	addi	t0,t0,12 # 20400082 <_enter+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007e:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20400082:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:103
     j 1b
20400086:	bff5                	j	20400082 <_enter+0x82>
20400088:	0000                	unimp
	...

2040008c <__register_frame_info>:
__register_frame_info():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2040008c:	8082                	ret

2040008e <metal_mem_scrub>:
metal_mem_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008e:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20400090:	3006b373          	csrrc	t1,mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400094:	4291                	li	t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400096:	0055c563          	blt	a1,t0,204000a0 <metal_mem_scrub+0x12>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
2040009a:	00357613          	andi	a2,a0,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009e:	ca11                	beqz	a2,204000b2 <metal_mem_scrub+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
204000a0:	00050023          	sb	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a4:	0505                	addi	a0,a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a6:	15fd                	addi	a1,a1,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a8:	feb047e3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000ac:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:39
    ret
204000b0:	8082                	ret
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000b2:	00052023          	sw	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b6:	0511                	addi	a0,a0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b8:	15f1                	addi	a1,a1,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000ba:	fcb04ee3          	bgtz	a1,20400096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000be:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:46
    ret
204000c2:	8082                	ret

204000c4 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c4:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c8:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000ca:	fe734de3          	blt	t1,t2,204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ce:	8082                	ret

204000d0 <__metal_before_start>:
__metal_before_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000d0:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000d2:	dfc00297          	auipc	t0,0xdfc00
204000d6:	f2e28293          	addi	t0,t0,-210 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000da:	04028c63          	beqz	t0,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000de:	dfc00297          	auipc	t0,0xdfc00
204000e2:	f2228293          	addi	t0,t0,-222 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e6:	f14027f3          	csrr	a5,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000ea:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000ec:	3006b073          	csrc	mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000f0:	830a                	mv	t1,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000f2:	dfc00397          	auipc	t2,0xdfc00
204000f6:	30e38393          	addi	t2,t2,782 # 400 <__stack_size>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000fa:	938a                	add	t2,t2,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000fc:	00730363          	beq	t1,t2,20400102 <__metal_before_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20400100:	37d1                	jal	204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20400102:	02579863          	bne	a5,t0,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400106:	5fc00317          	auipc	t1,0x5fc00
2040010a:	efa30313          	addi	t1,t1,-262 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010e:	5fc00397          	auipc	t2,0x5fc00
20400112:	6ba38393          	addi	t2,t2,1722 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400116:	00730363          	beq	t1,t2,2040011c <__metal_before_start+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
2040011a:	376d                	jal	204000c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
2040011c:	5fc00317          	auipc	t1,0x5fc00
20400120:	ee430313          	addi	t1,t1,-284 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400124:	5fc00397          	auipc	t2,0x5fc00
20400128:	edc38393          	addi	t2,t2,-292 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
2040012c:	00730363          	beq	t1,t2,20400132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20400130:	3f51                	jal	204000c4 <__metal_memory_scrub>

20400132 <skip_scrub>:
skip_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20400132:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/scrub.S:130
    ret
20400134:	8082                	ret
	...

20400138 <early_trap_vector>:
early_trap_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400138:	342022f3          	csrr	t0,mcause
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:65
    csrr t1, mepc
2040013c:	34102373          	csrr	t1,mepc
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:66
    csrr t2, mtval
20400140:	343023f3          	csrr	t2,mtval
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/trap.S:67
    j early_trap_vector
20400144:	bfd5                	j	20400138 <early_trap_vector>

20400146 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400146:	1141                	addi	sp,sp,-16
20400148:	c622                	sw	s0,12(sp)
2040014a:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
2040014c:	0001                	nop
2040014e:	4432                	lw	s0,12(sp)
20400150:	0141                	addi	sp,sp,16
20400152:	8082                	ret

20400154 <_start>:
_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400154:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400156:	5fc01197          	auipc	gp,0x5fc01
2040015a:	e4a18193          	addi	gp,gp,-438 # 80000fa0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015e:	00000293          	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20400162:	0e551163          	bne	a0,t0,20400244 <_skip_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400166:	00007297          	auipc	t0,0x7
2040016a:	6da28293          	addi	t0,t0,1754 # 20407840 <metal_segment_data_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016e:	5fc00317          	auipc	t1,0x5fc00
20400172:	e9230313          	addi	t1,t1,-366 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400176:	5fc00397          	auipc	t2,0x5fc00
2040017a:	65238393          	addi	t2,t2,1618 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017e:	00628c63          	beq	t0,t1,20400196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20400182:	00735a63          	bge	t1,t2,20400196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400186:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2040018a:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
2040018c:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20400190:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20400192:	fe734ae3          	blt	t1,t2,20400186 <_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400196:	00001297          	auipc	t0,0x1
2040019a:	eb228293          	addi	t0,t0,-334 # 20401048 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019e:	5fc00317          	auipc	t1,0x5fc00
204001a2:	e6230313          	addi	t1,t1,-414 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a6:	5fc00397          	auipc	t2,0x5fc00
204001aa:	e5a38393          	addi	t2,t2,-422 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001ae:	00628c63          	beq	t0,t1,204001c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001b2:	00735a63          	bge	t1,t2,204001c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b6:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001ba:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001bc:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001c0:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001c2:	fe734ae3          	blt	t1,t2,204001b6 <_start+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c6:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001ca:	00001297          	auipc	t0,0x1
204001ce:	e7e28293          	addi	t0,t0,-386 # 20401048 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001d2:	5fc00317          	auipc	t1,0x5fc00
204001d6:	e2e30313          	addi	t1,t1,-466 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001da:	5fc00397          	auipc	t2,0x5fc00
204001de:	e2638393          	addi	t2,t2,-474 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001e2:	00628c63          	beq	t0,t1,204001fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e6:	00735a63          	bge	t1,t2,204001fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001ea:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ee:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001f0:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f4:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f6:	fe734ae3          	blt	t1,t2,204001ea <_start+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001fa:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fe:	5fc00317          	auipc	t1,0x5fc00
20400202:	5ca30313          	addi	t1,t1,1482 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400206:	57418393          	addi	t2,gp,1396 # 80001514 <metal_segment_bss_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2040020a:	00735763          	bge	t1,t2,20400218 <_start+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020e:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20400212:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400214:	fe734de3          	blt	t1,t2,2040020e <_start+0xba>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400218:	5fc00217          	auipc	tp,0x5fc00
2040021c:	5b020213          	addi	tp,tp,1456 # 800007c8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20400220:	c211                	beqz	a2,20400224 <_start+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:167
  jalr a2
20400222:	9602                	jalr	a2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400224:	00003517          	auipc	a0,0x3
20400228:	b9e50513          	addi	a0,a0,-1122 # 20402dc2 <__libc_fini_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:172
  call atexit
2040022c:	359020ef          	jal	ra,20402d84 <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20400230:	3c9020ef          	jal	ra,20402df8 <__libc_init_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400234:	00003517          	auipc	a0,0x3
20400238:	e6a50513          	addi	a0,a0,-406 # 2040309e <metal_fini_run>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:178
  call atexit
2040023c:	349020ef          	jal	ra,20402d84 <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20400240:	64b020ef          	jal	ra,2040308a <metal_init_run>

20400244 <_skip_init>:
_skip_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400244:	3709                	jal	20400146 <__metal_synchronize_harts>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400246:	56fd                	li	a3,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400248:	3046b073          	csrc	mie,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
2040024c:	3446b073          	csrc	mip,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20400250:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400254:	00042737          	lui	a4,0x42
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400258:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2040025a:	c709                	beqz	a4,20400264 <_skip_init+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
2040025c:	3036b073          	csrc	mideleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20400260:	3026b073          	csrc	medeleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400264:	00040737          	lui	a4,0x40
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400268:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2040026a:	c319                	beqz	a4,20400270 <_skip_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
2040026c:	1806b073          	csrc	satp,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20400270:	6741                	lui	a4,0x10
20400272:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400276:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400278:	cb89                	beqz	a5,2040028a <_skip_init+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
2040027a:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027e:	6709                	lui	a4,0x2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20400280:	8fd9                	or	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20400282:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400286:	00305073          	csrwi	fcsr,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
2040028a:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028e:	00200737          	lui	a4,0x200
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20400292:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400294:	c799                	beqz	a5,204002a2 <_skip_init+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400296:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
2040029a:	2007e793          	ori	a5,a5,512
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029e:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
204002a2:	4505                	li	a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a4:	00000597          	auipc	a1,0x0
204002a8:	23058593          	addi	a1,a1,560 # 204004d4 <argv>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002ac:	00000617          	auipc	a2,0x0
204002b0:	22c60613          	addi	a2,a2,556 # 204004d8 <envp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b4:	2031                	jal	204002c0 <secondary_main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b6:	2e3020ef          	jal	ra,20402d98 <exit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002ba:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:248
  ret
204002bc:	8082                	ret

204002be <_fini>:
_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002be:	8082                	ret

204002c0 <secondary_main>:
secondary_main():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002c0:	1141                	addi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002c2:	c206                	sw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c4:	f14022f3          	csrr	t0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c8:	00000313          	li	t1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002cc:	00628563          	beq	t0,t1,204002d6 <secondary_main+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002d0:	10500073          	wfi
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:282
  j 1b
204002d4:	bff5                	j	204002d0 <secondary_main+0x10>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d6:	06a010ef          	jal	ra,20401340 <main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002da:	4092                	lw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002dc:	0141                	addi	sp,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/crt0.S:291
  ret
204002de:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20400302:	5d7020ef          	jal	ra,204030d8 <metal_uart_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	317050ef          	jal	ra,20405e2e <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe670>
2040032e:	38d050ef          	jal	ra,20405eba <__metal_driver_sifive_fe310_g000_pll_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	2eb050ef          	jal	ra,20405e2e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe670>
20400358:	242070ef          	jal	ra,2040759a <metal_clock_set_rate_hz>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401080 <r_mie>:
r_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:99

// Machine-mode Interrupt Enable
#define MIE_MEIE (1L << 11)  // external
#define MIE_MTIE (1L << 7)   // timer
#define MIE_MSIE (1L << 3)   // software
static inline uint32_t r_mie() {
20401080:	1101                	addi	sp,sp,-32
20401082:	ce22                	sw	s0,28(sp)
20401084:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:101
    uint32_t x;
    asm volatile("csrr %0, mie" : "=r"(x));
20401086:	304027f3          	csrr	a5,mie
2040108a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:102
    return x;
2040108e:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:103
}
20401092:	853e                	mv	a0,a5
20401094:	4472                	lw	s0,28(sp)
20401096:	6105                	addi	sp,sp,32
20401098:	8082                	ret

2040109a <w_mie>:
w_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:105

static inline void w_mie(uint32_t x) {
2040109a:	1101                	addi	sp,sp,-32
2040109c:	ce22                	sw	s0,28(sp)
2040109e:	1000                	addi	s0,sp,32
204010a0:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
204010a4:	fec42783          	lw	a5,-20(s0)
204010a8:	30479073          	csrw	mie,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:107
}
204010ac:	0001                	nop
204010ae:	4472                	lw	s0,28(sp)
204010b0:	6105                	addi	sp,sp,32
204010b2:	8082                	ret

204010b4 <w_mtvec>:
w_mtvec():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:157
    asm volatile("csrr %0, stvec" : "=r"(x));
    return x;
}

// Machine-mode interrupt vector
static inline void w_mtvec(uint32_t x) {
204010b4:	1101                	addi	sp,sp,-32
204010b6:	ce22                	sw	s0,28(sp)
204010b8:	1000                	addi	s0,sp,32
204010ba:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:158
    asm volatile("csrw mtvec, %0" : : "r"(x));
204010be:	fec42783          	lw	a5,-20(s0)
204010c2:	30579073          	csrw	mtvec,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:159
}
204010c6:	0001                	nop
204010c8:	4472                	lw	s0,28(sp)
204010ca:	6105                	addi	sp,sp,32
204010cc:	8082                	ret

204010ce <intr_on>:
intr_on():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:224
//Interrupts on and off by JJRH
#define INTERRUPT_ON (1 << 7)
#define INTERRUPT_OFF (0 << 7)

// enable device interrupts by JJRH
static inline void intr_on() {
204010ce:	1101                	addi	sp,sp,-32
204010d0:	ce06                	sw	ra,28(sp)
204010d2:	cc22                	sw	s0,24(sp)
204010d4:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:225
	uint32_t mie = r_mie();
204010d6:	376d                	jal	20401080 <r_mie>
204010d8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:226
	mie |= INTERRUPT_ON;
204010dc:	fec42783          	lw	a5,-20(s0)
204010e0:	0807e793          	ori	a5,a5,128
204010e4:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
204010e8:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:228
	w_mie(mie);
204010ec:	fec42503          	lw	a0,-20(s0)
204010f0:	376d                	jal	2040109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:229
}
204010f2:	0001                	nop
204010f4:	40f2                	lw	ra,28(sp)
204010f6:	4462                	lw	s0,24(sp)
204010f8:	6105                	addi	sp,sp,32
204010fa:	8082                	ret

204010fc <intr_off>:
intr_off():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:240

// disable device interrupts
//static inline void intr_off() { w_sstatus(r_sstatus() & ~SSTATUS_SIE); }

// disable device interrupts  by JJRH
static inline void intr_off() {
204010fc:	1101                	addi	sp,sp,-32
204010fe:	ce06                	sw	ra,28(sp)
20401100:	cc22                	sw	s0,24(sp)
20401102:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:241
	uint32_t mie = r_mie();
20401104:	3fb5                	jal	20401080 <r_mie>
20401106:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:242
	mie &= INTERRUPT_OFF;
2040110a:	fe042623          	sw	zero,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
2040110e:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:244
	w_mie(mie);
20401112:	fec42503          	lw	a0,-20(s0)
20401116:	3751                	jal	2040109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/riscv.h:245
}
20401118:	0001                	nop
2040111a:	40f2                	lw	ra,28(sp)
2040111c:	4462                	lw	s0,24(sp)
2040111e:	6105                	addi	sp,sp,32
20401120:	8082                	ret

20401122 <stack_init>:
stack_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:22
extern void switch_to(void);
extern void osSchedulerLaunch(void);

int32_t PCB_STACK[NUM_OF_THREADS][STACKSIZE];

void stack_init(int i){
20401122:	1101                	addi	sp,sp,-32
20401124:	ce22                	sw	s0,28(sp)
20401126:	1000                	addi	s0,sp,32
20401128:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:23
	temp_ptr->stackPt = &PCB_STACK[i][STACKSIZE];
2040112c:	8ec1a783          	lw	a5,-1812(gp) # 8000088c <temp_ptr>
20401130:	fec42703          	lw	a4,-20(s0)
20401134:	00170693          	addi	a3,a4,1 # 200001 <__heap_size+0x1ff801>
20401138:	32000713          	li	a4,800
2040113c:	02e686b3          	mul	a3,a3,a4
20401140:	80001737          	lui	a4,0x80001
20401144:	89070713          	addi	a4,a4,-1904 # 80000890 <metal_segment_heap_target_end+0xffffe770>
20401148:	9736                	add	a4,a4,a3
2040114a:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:25
	//PCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;
}
2040114c:	0001                	nop
2040114e:	4472                	lw	s0,28(sp)
20401150:	6105                	addi	sp,sp,32
20401152:	8082                	ret

20401154 <task_create>:
task_create():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:27

int task_create(void(*task)(void)/*, void(*task1)(void), void(*task2)(void), void(*task3)(void)*/){
20401154:	1101                	addi	sp,sp,-32
20401156:	ce06                	sw	ra,28(sp)
20401158:	cc22                	sw	s0,24(sp)
2040115a:	1000                	addi	s0,sp,32
2040115c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:28
	intr_off();
20401160:	3f71                	jal	204010fc <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:30
	static uint32_t i=0;
	temp_ptr = insertFirst(i, ready);
20401162:	800007b7          	lui	a5,0x80000
20401166:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
2040116a:	4581                	li	a1,0
2040116c:	853e                	mv	a0,a5
2040116e:	24ad                	jal	204013d8 <insertFirst>
20401170:	872a                	mv	a4,a0
20401172:	8ee1a623          	sw	a4,-1812(gp) # 8000088c <temp_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:31
	if(temp_ptr->id==0) current_ptr = temp_ptr;
20401176:	8ec1a783          	lw	a5,-1812(gp) # 8000088c <temp_ptr>
2040117a:	479c                	lw	a5,8(a5)
2040117c:	e789                	bnez	a5,20401186 <task_create+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:31 (discriminator 1)
2040117e:	8ec1a703          	lw	a4,-1812(gp) # 8000088c <temp_ptr>
20401182:	8ee1a423          	sw	a4,-1816(gp) # 80000888 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:32
	stack_init(temp_ptr->id);
20401186:	8ec1a783          	lw	a5,-1812(gp) # 8000088c <temp_ptr>
2040118a:	479c                	lw	a5,8(a5)
2040118c:	853e                	mv	a0,a5
2040118e:	3f51                	jal	20401122 <stack_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:33
	PCB_STACK[i][STACKSIZE] = (int32_t)(task);
20401190:	800007b7          	lui	a5,0x80000
20401194:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
20401198:	fec42703          	lw	a4,-20(s0)
2040119c:	800016b7          	lui	a3,0x80001
204011a0:	89068693          	addi	a3,a3,-1904 # 80000890 <metal_segment_heap_target_end+0xffffe770>
204011a4:	00178613          	addi	a2,a5,1
204011a8:	32000793          	li	a5,800
204011ac:	02f607b3          	mul	a5,a2,a5
204011b0:	97b6                	add	a5,a5,a3
204011b2:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:34
	PCB_STACK[i][STACKSIZE-1] = (int32_t)(task);
204011b4:	800007b7          	lui	a5,0x80000
204011b8:	7c87a603          	lw	a2,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
204011bc:	fec42703          	lw	a4,-20(s0)
204011c0:	800017b7          	lui	a5,0x80001
204011c4:	89078693          	addi	a3,a5,-1904 # 80000890 <metal_segment_heap_target_end+0xffffe770>
204011c8:	32000793          	li	a5,800
204011cc:	02f607b3          	mul	a5,a2,a5
204011d0:	97b6                	add	a5,a5,a3
204011d2:	30e7ae23          	sw	a4,796(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:35
	i++;
204011d6:	800007b7          	lui	a5,0x80000
204011da:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
204011de:	00178713          	addi	a4,a5,1
204011e2:	800007b7          	lui	a5,0x80000
204011e6:	7ce7a423          	sw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:36
	intr_on();
204011ea:	35d5                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:37
	return i;
204011ec:	800007b7          	lui	a5,0x80000
204011f0:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xffffe6a8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:38
}
204011f4:	853e                	mv	a0,a5
204011f6:	40f2                	lw	ra,28(sp)
204011f8:	4462                	lw	s0,24(sp)
204011fa:	6105                	addi	sp,sp,32
204011fc:	8082                	ret

204011fe <task_end>:
task_end():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:40

void task_end(void){
204011fe:	1141                	addi	sp,sp,-16
20401200:	c606                	sw	ra,12(sp)
20401202:	c422                	sw	s0,8(sp)
20401204:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:41
	intr_off();
20401206:	3ddd                	jal	204010fc <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:42
	delete(current_ptr->id);
20401208:	8e81a783          	lw	a5,-1816(gp) # 80000888 <current_ptr>
2040120c:	479c                	lw	a5,8(a5)
2040120e:	853e                	mv	a0,a5
20401210:	2c9d                	jal	20401486 <delete>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:43
	intr_on();
20401212:	3d75                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:44
}
20401214:	0001                	nop
20401216:	40b2                	lw	ra,12(sp)
20401218:	4422                	lw	s0,8(sp)
2040121a:	0141                	addi	sp,sp,16
2040121c:	8082                	ret

2040121e <task_wait>:
task_wait():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:46

void task_wait(struct pcb *queue){
2040121e:	1101                	addi	sp,sp,-32
20401220:	ce06                	sw	ra,28(sp)
20401222:	cc22                	sw	s0,24(sp)
20401224:	1000                	addi	s0,sp,32
20401226:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:48
	//intr_off();
	queue = delete(current_ptr->id);
2040122a:	8e81a783          	lw	a5,-1816(gp) # 80000888 <current_ptr>
2040122e:	479c                	lw	a5,8(a5)
20401230:	853e                	mv	a0,a5
20401232:	2c91                	jal	20401486 <delete>
20401234:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:49
	queue->Current_state = waiting;
20401238:	fec42783          	lw	a5,-20(s0)
2040123c:	4709                	li	a4,2
2040123e:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:50
	temp_ptr = queue_insertFirst(queue->id, queue->Current_state);
20401240:	fec42783          	lw	a5,-20(s0)
20401244:	4798                	lw	a4,8(a5)
20401246:	fec42783          	lw	a5,-20(s0)
2040124a:	47dc                	lw	a5,12(a5)
2040124c:	85be                	mv	a1,a5
2040124e:	853a                	mv	a0,a4
20401250:	211d                	jal	20401676 <queue_insertFirst>
20401252:	872a                	mv	a4,a0
20401254:	8ee1a623          	sw	a4,-1812(gp) # 8000088c <temp_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:51
	temp_ptr->stackPt = queue->stackPt;
20401258:	8ec1a783          	lw	a5,-1812(gp) # 8000088c <temp_ptr>
2040125c:	fec42703          	lw	a4,-20(s0)
20401260:	4318                	lw	a4,0(a4)
20401262:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:53
	//intr_on();
}
20401264:	0001                	nop
20401266:	40f2                	lw	ra,28(sp)
20401268:	4462                	lw	s0,24(sp)
2040126a:	6105                	addi	sp,sp,32
2040126c:	8082                	ret

2040126e <task_unlock>:
task_unlock():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:55

void task_unlock(){
2040126e:	1141                	addi	sp,sp,-16
20401270:	c606                	sw	ra,12(sp)
20401272:	c422                	sw	s0,8(sp)
20401274:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:56
	temp_ptr = queue_deleteFirst();
20401276:	29a9                	jal	204016d0 <queue_deleteFirst>
20401278:	872a                	mv	a4,a0
2040127a:	8ee1a623          	sw	a4,-1812(gp) # 8000088c <temp_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:57
	insertFirst(temp_ptr->id, ready);
2040127e:	8ec1a783          	lw	a5,-1812(gp) # 8000088c <temp_ptr>
20401282:	479c                	lw	a5,8(a5)
20401284:	4581                	li	a1,0
20401286:	853e                	mv	a0,a5
20401288:	2a81                	jal	204013d8 <insertFirst>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:58
}
2040128a:	0001                	nop
2040128c:	40b2                	lw	ra,12(sp)
2040128e:	4422                	lw	s0,8(sp)
20401290:	0141                	addi	sp,sp,16
20401292:	8082                	ret

20401294 <kernel_launch>:
kernel_launch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:60

void kernel_launch(void){
20401294:	1141                	addi	sp,sp,-16
20401296:	c606                	sw	ra,12(sp)
20401298:	c422                	sw	s0,8(sp)
2040129a:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:61
	w_mtvec((uint32_t)switch_to);
2040129c:	204027b7          	lui	a5,0x20402
204012a0:	89478793          	addi	a5,a5,-1900 # 20401894 <switch_to>
204012a4:	853e                	mv	a0,a5
204012a6:	3539                	jal	204010b4 <w_mtvec>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:62
	timer_init();
204012a8:	2039                	jal	204012b6 <timer_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:63
	osSchedulerLaunch();
204012aa:	2bd9                	jal	20401880 <osSchedulerLaunch>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:64
}
204012ac:	0001                	nop
204012ae:	40b2                	lw	ra,12(sp)
204012b0:	4422                	lw	s0,8(sp)
204012b2:	0141                	addi	sp,sp,16
204012b4:	8082                	ret

204012b6 <timer_init>:
timer_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:66

void timer_init(void) {
204012b6:	1141                	addi	sp,sp,-16
204012b8:	c606                	sw	ra,12(sp)
204012ba:	c422                	sw	s0,8(sp)
204012bc:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:67
	*MTIMECMP = *MTIME + 0xfffff * 5;
204012be:	0200c7b7          	lui	a5,0x200c
204012c2:	17e1                	addi	a5,a5,-8
204012c4:	4398                	lw	a4,0(a5)
204012c6:	43dc                	lw	a5,4(a5)
204012c8:	02004837          	lui	a6,0x2004
204012cc:	00500537          	lui	a0,0x500
204012d0:	156d                	addi	a0,a0,-5
204012d2:	4581                	li	a1,0
204012d4:	00a70633          	add	a2,a4,a0
204012d8:	88b2                	mv	a7,a2
204012da:	00e8b8b3          	sltu	a7,a7,a4
204012de:	00b786b3          	add	a3,a5,a1
204012e2:	00d887b3          	add	a5,a7,a3
204012e6:	86be                	mv	a3,a5
204012e8:	8732                	mv	a4,a2
204012ea:	87b6                	mv	a5,a3
204012ec:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
204012f0:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:68
	intr_on();
204012f4:	3be9                	jal	204010ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:69
}
204012f6:	0001                	nop
204012f8:	40b2                	lw	ra,12(sp)
204012fa:	4422                	lw	s0,8(sp)
204012fc:	0141                	addi	sp,sp,16
204012fe:	8082                	ret

20401300 <scheduler_RoundRobin>:
scheduler_RoundRobin():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:71

void scheduler_RoundRobin(void){
20401300:	1141                	addi	sp,sp,-16
20401302:	c606                	sw	ra,12(sp)
20401304:	c422                	sw	s0,8(sp)
20401306:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:72
	current_ptr->Current_state = ready;
20401308:	8e81a783          	lw	a5,-1816(gp) # 80000888 <current_ptr>
2040130c:	0007a623          	sw	zero,12(a5) # 200c00c <__heap_size+0x200b80c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:73
	if(current_ptr->nextPt == NULL)
20401310:	8e81a783          	lw	a5,-1816(gp) # 80000888 <current_ptr>
20401314:	43dc                	lw	a5,4(a5)
20401316:	e799                	bnez	a5,20401324 <scheduler_RoundRobin+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:74
		current_ptr = find(3);
20401318:	450d                	li	a0,3
2040131a:	2a21                	jal	20401432 <find>
2040131c:	872a                	mv	a4,a0
2040131e:	8ee1a423          	sw	a4,-1816(gp) # 80000888 <current_ptr>
20401322:	a031                	j	2040132e <scheduler_RoundRobin+0x2e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:76
	else
		current_ptr = current_ptr->nextPt;
20401324:	8e81a783          	lw	a5,-1816(gp) # 80000888 <current_ptr>
20401328:	43d8                	lw	a4,4(a5)
2040132a:	8ee1a423          	sw	a4,-1816(gp) # 80000888 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:77
		current_ptr->Current_state = running;
2040132e:	8e81a783          	lw	a5,-1816(gp) # 80000888 <current_ptr>
20401332:	4705                	li	a4,1
20401334:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.c:78
}
20401336:	0001                	nop
20401338:	40b2                	lw	ra,12(sp)
2040133a:	4422                	lw	s0,8(sp)
2040133c:	0141                	addi	sp,sp,16
2040133e:	8082                	ret

20401340 <main>:
main():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:13
#include "list.h"
#include "task.h"



int main() {
20401340:	1141                	addi	sp,sp,-16
20401342:	c606                	sw	ra,12(sp)
20401344:	c422                	sw	s0,8(sp)
20401346:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:14
	semaphore_init(&semaphore, 0);
20401348:	4581                	li	a1,0
2040134a:	57018513          	addi	a0,gp,1392 # 80001510 <semaphore>
2040134e:	219d                	jal	204017b4 <semaphore_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:15
	printf("RISC-V Kernel\n");
20401350:	204007b7          	lui	a5,0x20400
20401354:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
20401358:	087000ef          	jal	ra,20401bde <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:16
	task_create(&task);
2040135c:	204017b7          	lui	a5,0x20401
20401360:	70078513          	addi	a0,a5,1792 # 20401700 <task>
20401364:	3bc5                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:17
	kernel_launch();
20401366:	373d                	jal	20401294 <kernel_launch>
20401368:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/main.c:19
	//asm volatile("wfi");
}
2040136a:	853e                	mv	a0,a5
2040136c:	40b2                	lw	ra,12(sp)
2040136e:	4422                	lw	s0,8(sp)
20401370:	0141                	addi	sp,sp,16
20401372:	8082                	ret

20401374 <printList>:
printList():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:14

struct pcb *head = NULL;
struct pcb *current = NULL;

//display the list
void printList() {
20401374:	1101                	addi	sp,sp,-32
20401376:	ce06                	sw	ra,28(sp)
20401378:	cc22                	sw	s0,24(sp)
2040137a:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:15
   struct pcb *ptr = head;
2040137c:	800007b7          	lui	a5,0x80000
20401380:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401384:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:16
   printf("\n[ ");
20401388:	204007b7          	lui	a5,0x20400
2040138c:	37878513          	addi	a0,a5,888 # 20400378 <use_hfxosc+0x3c>
20401390:	736000ef          	jal	ra,20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:19

   //start from the beginning
   while(ptr != NULL) {
20401394:	a025                	j	204013bc <printList+0x48>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:20
      printf("(ID: %d, State: %d) ", ptr->id ,ptr->Current_state);
20401396:	fec42783          	lw	a5,-20(s0)
2040139a:	4798                	lw	a4,8(a5)
2040139c:	fec42783          	lw	a5,-20(s0)
204013a0:	47dc                	lw	a5,12(a5)
204013a2:	863e                	mv	a2,a5
204013a4:	85ba                	mv	a1,a4
204013a6:	204007b7          	lui	a5,0x20400
204013aa:	37c78513          	addi	a0,a5,892 # 2040037c <use_hfxosc+0x40>
204013ae:	718000ef          	jal	ra,20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:21
      ptr = ptr->nextPt;
204013b2:	fec42783          	lw	a5,-20(s0)
204013b6:	43dc                	lw	a5,4(a5)
204013b8:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:19
   while(ptr != NULL) {
204013bc:	fec42783          	lw	a5,-20(s0)
204013c0:	fbf9                	bnez	a5,20401396 <printList+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:24
   }

   printf(" ]");
204013c2:	204007b7          	lui	a5,0x20400
204013c6:	39478513          	addi	a0,a5,916 # 20400394 <use_hfxosc+0x58>
204013ca:	6fc000ef          	jal	ra,20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:25
}
204013ce:	0001                	nop
204013d0:	40f2                	lw	ra,28(sp)
204013d2:	4462                	lw	s0,24(sp)
204013d4:	6105                	addi	sp,sp,32
204013d6:	8082                	ret

204013d8 <insertFirst>:
insertFirst():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:28

//insert link at the first location
struct pcb* insertFirst(int id, int Current_state) {
204013d8:	7179                	addi	sp,sp,-48
204013da:	d606                	sw	ra,44(sp)
204013dc:	d422                	sw	s0,40(sp)
204013de:	1800                	addi	s0,sp,48
204013e0:	fca42e23          	sw	a0,-36(s0)
204013e4:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:30
   //create a link
   struct pcb *link = (struct pcb*) malloc(sizeof(struct pcb));
204013e8:	4541                	li	a0,16
204013ea:	23b1                	jal	20401936 <malloc>
204013ec:	87aa                	mv	a5,a0
204013ee:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:32

   link->id = id;
204013f2:	fec42783          	lw	a5,-20(s0)
204013f6:	fdc42703          	lw	a4,-36(s0)
204013fa:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:33
   link->Current_state = Current_state;
204013fc:	fd842703          	lw	a4,-40(s0)
20401400:	fec42783          	lw	a5,-20(s0)
20401404:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:36

   //point it to old first pcb
   link->nextPt = head;
20401406:	800007b7          	lui	a5,0x80000
2040140a:	7cc7a703          	lw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
2040140e:	fec42783          	lw	a5,-20(s0)
20401412:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:39

   //point first to new first pcb
   head = link;
20401414:	800007b7          	lui	a5,0x80000
20401418:	fec42703          	lw	a4,-20(s0)
2040141c:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:41

   return head;
20401420:	800007b7          	lui	a5,0x80000
20401424:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:42
}
20401428:	853e                	mv	a0,a5
2040142a:	50b2                	lw	ra,44(sp)
2040142c:	5422                	lw	s0,40(sp)
2040142e:	6145                	addi	sp,sp,48
20401430:	8082                	ret

20401432 <find>:
find():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:80

   return length;
}

//find a link with given id
struct pcb* find(int id) {
20401432:	7179                	addi	sp,sp,-48
20401434:	d622                	sw	s0,44(sp)
20401436:	1800                	addi	s0,sp,48
20401438:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:83

   //start from the first link
   struct pcb* current = head;
2040143c:	800007b7          	lui	a5,0x80000
20401440:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401444:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:86

   //if list is empty
   if(head == NULL) {
20401448:	800007b7          	lui	a5,0x80000
2040144c:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401450:	ef91                	bnez	a5,2040146c <find+0x3a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:87
      return NULL;
20401452:	4781                	li	a5,0
20401454:	a02d                	j	2040147e <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:94

   //navigate through list
   while(current->id != id) {

      //if it is last pcb
      if(current->nextPt == NULL) {
20401456:	fec42783          	lw	a5,-20(s0)
2040145a:	43dc                	lw	a5,4(a5)
2040145c:	e399                	bnez	a5,20401462 <find+0x30>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:95
         return NULL;
2040145e:	4781                	li	a5,0
20401460:	a839                	j	2040147e <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:98
      } else {
         //go to next link
         current = current->nextPt;
20401462:	fec42783          	lw	a5,-20(s0)
20401466:	43dc                	lw	a5,4(a5)
20401468:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:91
   while(current->id != id) {
2040146c:	fec42783          	lw	a5,-20(s0)
20401470:	479c                	lw	a5,8(a5)
20401472:	fdc42703          	lw	a4,-36(s0)
20401476:	fef710e3          	bne	a4,a5,20401456 <find+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:103
      }
   }

   //if Current_state found, return the current Link
   return current;
2040147a:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:104
}
2040147e:	853e                	mv	a0,a5
20401480:	5432                	lw	s0,44(sp)
20401482:	6145                	addi	sp,sp,48
20401484:	8082                	ret

20401486 <delete>:
delete():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:107

//delete a link with given id
struct pcb* delete(int id) {
20401486:	7179                	addi	sp,sp,-48
20401488:	d622                	sw	s0,44(sp)
2040148a:	1800                	addi	s0,sp,48
2040148c:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:110

   //start from the first link
   struct pcb* current = head;
20401490:	800007b7          	lui	a5,0x80000
20401494:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
20401498:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:111
   struct pcb* previous = NULL;
2040149c:	fe042423          	sw	zero,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:114

   //if list is empty
   if(head == NULL) {
204014a0:	800007b7          	lui	a5,0x80000
204014a4:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
204014a8:	e395                	bnez	a5,204014cc <delete+0x46>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:115
      return NULL;
204014aa:	4781                	li	a5,0
204014ac:	a08d                	j	2040150e <delete+0x88>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:122

   //navigate through list
   while(current->id != id) {

      //if it is last pcb
      if(current->nextPt == NULL) {
204014ae:	fec42783          	lw	a5,-20(s0)
204014b2:	43dc                	lw	a5,4(a5)
204014b4:	e399                	bnez	a5,204014ba <delete+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:123
         return NULL;
204014b6:	4781                	li	a5,0
204014b8:	a899                	j	2040150e <delete+0x88>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:126
      } else {
         //store reference to current link
         previous = current;
204014ba:	fec42783          	lw	a5,-20(s0)
204014be:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:128
         //move to next link
         current = current->nextPt;
204014c2:	fec42783          	lw	a5,-20(s0)
204014c6:	43dc                	lw	a5,4(a5)
204014c8:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:119
   while(current->id != id) {
204014cc:	fec42783          	lw	a5,-20(s0)
204014d0:	479c                	lw	a5,8(a5)
204014d2:	fdc42703          	lw	a4,-36(s0)
204014d6:	fcf71ce3          	bne	a4,a5,204014ae <delete+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:133
      }
   }

   //found a match, update the link
   if(current == head) {
204014da:	800007b7          	lui	a5,0x80000
204014de:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
204014e2:	fec42703          	lw	a4,-20(s0)
204014e6:	00f71c63          	bne	a4,a5,204014fe <delete+0x78>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:135
      //change first to point to next link
      head = head->nextPt;
204014ea:	800007b7          	lui	a5,0x80000
204014ee:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
204014f2:	43d8                	lw	a4,4(a5)
204014f4:	800007b7          	lui	a5,0x80000
204014f8:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xffffe6ac>
204014fc:	a039                	j	2040150a <delete+0x84>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:138
   } else {
      //bypass the current link
      previous->nextPt = current->nextPt;
204014fe:	fec42783          	lw	a5,-20(s0)
20401502:	43d8                	lw	a4,4(a5)
20401504:	fe842783          	lw	a5,-24(s0)
20401508:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:141
   }

   return current;
2040150a:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/list.c:142
}
2040150e:	853e                	mv	a0,a5
20401510:	5432                	lw	s0,44(sp)
20401512:	6145                	addi	sp,sp,48
20401514:	8082                	ret

20401516 <handle_interrupt>:
handle_interrupt():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:14

#define CLINT_BASE 0x2000000
#define MTIME (volatile unsigned long long int *)(CLINT_BASE + 0xbff8)
#define MTIMECMP (volatile unsigned long long int *)(CLINT_BASE + 0x4000)

void handle_interrupt(uint32_t mcause) {
20401516:	1101                	addi	sp,sp,-32
20401518:	ce06                	sw	ra,28(sp)
2040151a:	cc22                	sw	s0,24(sp)
2040151c:	1000                	addi	s0,sp,32
2040151e:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:15
    if ((mcause << 1 >> 1) == 0x7) {
20401522:	fec42703          	lw	a4,-20(s0)
20401526:	800007b7          	lui	a5,0x80000
2040152a:	fff7c793          	not	a5,a5
2040152e:	8f7d                	and	a4,a4,a5
20401530:	479d                	li	a5,7
20401532:	02f71e63          	bne	a4,a5,2040156e <handle_interrupt+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:17
        //printf("  Switch context \n");
        *MTIMECMP = *MTIME + 0xfffff * 5;
20401536:	0200c7b7          	lui	a5,0x200c
2040153a:	17e1                	addi	a5,a5,-8
2040153c:	4398                	lw	a4,0(a5)
2040153e:	43dc                	lw	a5,4(a5)
20401540:	02004837          	lui	a6,0x2004
20401544:	00500537          	lui	a0,0x500
20401548:	156d                	addi	a0,a0,-5
2040154a:	4581                	li	a1,0
2040154c:	00a70633          	add	a2,a4,a0
20401550:	88b2                	mv	a7,a2
20401552:	00e8b8b3          	sltu	a7,a7,a4
20401556:	00b786b3          	add	a3,a5,a1
2040155a:	00d887b3          	add	a5,a7,a3
2040155e:	86be                	mv	a3,a5
20401560:	8732                	mv	a4,a2
20401562:	87b6                	mv	a5,a3
20401564:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
20401568:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:24
    } else {
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1)
            ;
    }
}
2040156c:	a839                	j	2040158a <handle_interrupt+0x74>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:20
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
2040156e:	fec42703          	lw	a4,-20(s0)
20401572:	800007b7          	lui	a5,0x80000
20401576:	fff7c793          	not	a5,a5
2040157a:	8ff9                	and	a5,a5,a4
2040157c:	85be                	mv	a1,a5
2040157e:	204007b7          	lui	a5,0x20400
20401582:	39878513          	addi	a0,a5,920 # 20400398 <use_hfxosc+0x5c>
20401586:	2381                	jal	20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:21 (discriminator 1)
        while (1)
20401588:	a001                	j	20401588 <handle_interrupt+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:24
}
2040158a:	40f2                	lw	ra,28(sp)
2040158c:	4462                	lw	s0,24(sp)
2040158e:	6105                	addi	sp,sp,32
20401590:	8082                	ret

20401592 <handle_exception>:
handle_exception():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:26

void handle_exception(uint32_t mcause) {
20401592:	7179                	addi	sp,sp,-48
20401594:	d606                	sw	ra,44(sp)
20401596:	d422                	sw	s0,40(sp)
20401598:	1800                	addi	s0,sp,48
2040159a:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:29
    unsigned long long int mie;

    if (mcause == 0x8) {
2040159e:	fdc42703          	lw	a4,-36(s0)
204015a2:	47a1                	li	a5,8
204015a4:	06f71663          	bne	a4,a5,20401610 <handle_exception+0x7e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:30
        *MTIMECMP = *MTIME + 0xfffff * 25;
204015a8:	0200c7b7          	lui	a5,0x200c
204015ac:	17e1                	addi	a5,a5,-8
204015ae:	4398                	lw	a4,0(a5)
204015b0:	43dc                	lw	a5,4(a5)
204015b2:	02004837          	lui	a6,0x2004
204015b6:	01900537          	lui	a0,0x1900
204015ba:	151d                	addi	a0,a0,-25
204015bc:	4581                	li	a1,0
204015be:	00a70633          	add	a2,a4,a0
204015c2:	88b2                	mv	a7,a2
204015c4:	00e8b8b3          	sltu	a7,a7,a4
204015c8:	00b786b3          	add	a3,a5,a1
204015cc:	00d887b3          	add	a5,a7,a3
204015d0:	86be                	mv	a3,a5
204015d2:	8732                	mv	a4,a2
204015d4:	87b6                	mv	a5,a3
204015d6:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
204015da:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:32

        asm volatile("csrr %0, mie" : "=r"(mie));
204015de:	30402773          	csrr	a4,mie
204015e2:	fee42423          	sw	a4,-24(s0)
204015e6:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:33
        mie |= (1 << 7);
204015ea:	fe842783          	lw	a5,-24(s0)
204015ee:	0807e793          	ori	a5,a5,128
204015f2:	fef42423          	sw	a5,-24(s0)
204015f6:	fec42783          	lw	a5,-20(s0)
204015fa:	0007e793          	ori	a5,a5,0
204015fe:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:34
        asm volatile("csrw mie, %0" : "=r"(mie));
20401602:	30471073          	csrw	mie,a4
20401606:	fee42423          	sw	a4,-24(s0)
2040160a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:40
    } else {
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1){
        };
    }
}
2040160e:	a839                	j	2040162c <handle_exception+0x9a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:36
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
20401610:	fdc42703          	lw	a4,-36(s0)
20401614:	800007b7          	lui	a5,0x80000
20401618:	fff7c793          	not	a5,a5
2040161c:	8ff9                	and	a5,a5,a4
2040161e:	85be                	mv	a1,a5
20401620:	204007b7          	lui	a5,0x20400
20401624:	39878513          	addi	a0,a5,920 # 20400398 <use_hfxosc+0x5c>
20401628:	2979                	jal	20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:37 (discriminator 1)
        while (1){
2040162a:	a001                	j	2040162a <handle_exception+0x98>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:40
}
2040162c:	50b2                	lw	ra,44(sp)
2040162e:	5422                	lw	s0,40(sp)
20401630:	6145                	addi	sp,sp,48
20401632:	8082                	ret

20401634 <handle_trap>:
handle_trap():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:42

void handle_trap() {
20401634:	1101                	addi	sp,sp,-32
20401636:	ce06                	sw	ra,28(sp)
20401638:	cc22                	sw	s0,24(sp)
2040163a:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:44
    uint32_t mcause, mepc;
    asm volatile("csrr %0, mcause" : "=r"(mcause));
2040163c:	342027f3          	csrr	a5,mcause
20401640:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:45
    asm volatile("csrr %0, mepc" : "=r"(mepc));
20401644:	341027f3          	csrr	a5,mepc
20401648:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:47

    if (mcause >> 31) {
2040164c:	fec42783          	lw	a5,-20(s0)
20401650:	0007d663          	bgez	a5,2040165c <handle_trap+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:48
        handle_interrupt(mcause);
20401654:	fec42503          	lw	a0,-20(s0)
20401658:	3d7d                	jal	20401516 <handle_interrupt>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:55
        handle_exception(mcause);
        asm volatile("csrr t0, mepc");
        asm volatile("addi t0, t0, 0x4");
        asm volatile("csrw mepc, t0");
    }
}
2040165a:	a809                	j	2040166c <handle_trap+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:50
        handle_exception(mcause);
2040165c:	fec42503          	lw	a0,-20(s0)
20401660:	3f0d                	jal	20401592 <handle_exception>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:51
        asm volatile("csrr t0, mepc");
20401662:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:52
        asm volatile("addi t0, t0, 0x4");
20401666:	0291                	addi	t0,t0,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:53
        asm volatile("csrw mepc, t0");
20401668:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/trap.c:55
}
2040166c:	0001                	nop
2040166e:	40f2                	lw	ra,28(sp)
20401670:	4462                	lw	s0,24(sp)
20401672:	6105                	addi	sp,sp,32
20401674:	8082                	ret

20401676 <queue_insertFirst>:
queue_insertFirst():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:27

   printf(" ]");
}

//insert link at the first location
struct pcb* queue_insertFirst(int id, int Current_state) {
20401676:	7179                	addi	sp,sp,-48
20401678:	d606                	sw	ra,44(sp)
2040167a:	d422                	sw	s0,40(sp)
2040167c:	1800                	addi	s0,sp,48
2040167e:	fca42e23          	sw	a0,-36(s0)
20401682:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:29
   //create a link
   struct pcb *link = (struct pcb*) malloc(sizeof(struct pcb));
20401686:	4541                	li	a0,16
20401688:	247d                	jal	20401936 <malloc>
2040168a:	87aa                	mv	a5,a0
2040168c:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:31

   link->id = id;
20401690:	fec42783          	lw	a5,-20(s0)
20401694:	fdc42703          	lw	a4,-36(s0)
20401698:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:32
   link->Current_state = Current_state;
2040169a:	fd842703          	lw	a4,-40(s0)
2040169e:	fec42783          	lw	a5,-20(s0)
204016a2:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:35

   //point it to old first pcb
   link->nextPt = queue_head;
204016a4:	800007b7          	lui	a5,0x80000
204016a8:	7d07a703          	lw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
204016ac:	fec42783          	lw	a5,-20(s0)
204016b0:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:38

   //point first to new first pcb
   queue_head = link;
204016b2:	800007b7          	lui	a5,0x80000
204016b6:	fec42703          	lw	a4,-20(s0)
204016ba:	7ce7a823          	sw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:40

   return queue_head;
204016be:	800007b7          	lui	a5,0x80000
204016c2:	7d07a783          	lw	a5,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:41
}
204016c6:	853e                	mv	a0,a5
204016c8:	50b2                	lw	ra,44(sp)
204016ca:	5422                	lw	s0,40(sp)
204016cc:	6145                	addi	sp,sp,48
204016ce:	8082                	ret

204016d0 <queue_deleteFirst>:
queue_deleteFirst():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:50
//	struct pcb *tempLink = queue_head;
//	return tempLink;
//}

//delete first item
struct pcb* queue_deleteFirst() {
204016d0:	1101                	addi	sp,sp,-32
204016d2:	ce22                	sw	s0,28(sp)
204016d4:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:53

   //save reference to first link
   struct pcb *tempLink = queue_head;
204016d6:	800007b7          	lui	a5,0x80000
204016da:	7d07a783          	lw	a5,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
204016de:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:56

   //mark next to first link as first
   queue_head = queue_head->nextPt;
204016e2:	800007b7          	lui	a5,0x80000
204016e6:	7d07a783          	lw	a5,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
204016ea:	43d8                	lw	a4,4(a5)
204016ec:	800007b7          	lui	a5,0x80000
204016f0:	7ce7a823          	sw	a4,2000(a5) # 800007d0 <metal_segment_heap_target_end+0xffffe6b0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:59

   //return the deleted link
   return tempLink;
204016f4:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/queue.c:60
}
204016f8:	853e                	mv	a0,a5
204016fa:	4472                	lw	s0,28(sp)
204016fc:	6105                	addi	sp,sp,32
204016fe:	8082                	ret

20401700 <task>:
task():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:12

#include "task.h"

int32_t count = 0, count1= 0, count2= 0, count3= 0;

void task(void){
20401700:	1141                	addi	sp,sp,-16
20401702:	c606                	sw	ra,12(sp)
20401704:	c422                	sw	s0,8(sp)
20401706:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:14 (discriminator 1)
	while(1){
		count++;
20401708:	800007b7          	lui	a5,0x80000
2040170c:	7d47a783          	lw	a5,2004(a5) # 800007d4 <metal_segment_heap_target_end+0xffffe6b4>
20401710:	00178713          	addi	a4,a5,1
20401714:	800007b7          	lui	a5,0x80000
20401718:	7ce7aa23          	sw	a4,2004(a5) # 800007d4 <metal_segment_heap_target_end+0xffffe6b4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:15 (discriminator 1)
		task_create(&task1);
2040171c:	204017b7          	lui	a5,0x20401
20401720:	74478513          	addi	a0,a5,1860 # 20401744 <task1>
20401724:	3c05                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:16 (discriminator 1)
		task_create(&task2);
20401726:	204017b7          	lui	a5,0x20401
2040172a:	76078513          	addi	a0,a5,1888 # 20401760 <task2>
2040172e:	341d                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:17 (discriminator 1)
		task_create(&task3);
20401730:	204017b7          	lui	a5,0x20401
20401734:	78a78513          	addi	a0,a5,1930 # 2040178a <task3>
20401738:	3c31                	jal	20401154 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:18 (discriminator 1)
		printList();
2040173a:	392d                	jal	20401374 <printList>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:19 (discriminator 1)
		task_end();
2040173c:	34c9                	jal	204011fe <task_end>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:20 (discriminator 1)
		asm volatile("wfi");
2040173e:	10500073          	wfi
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:14 (discriminator 1)
		count++;
20401742:	b7d9                	j	20401708 <task+0x8>

20401744 <task1>:
task1():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:26
		//printf("task 0 counter: %d\n", count);
	}
}


void task1(void){
20401744:	1141                	addi	sp,sp,-16
20401746:	c622                	sw	s0,12(sp)
20401748:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:28 (discriminator 1)
	while(1){
		count1++;
2040174a:	800007b7          	lui	a5,0x80000
2040174e:	7d87a783          	lw	a5,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6b8>
20401752:	00178713          	addi	a4,a5,1
20401756:	800007b7          	lui	a5,0x80000
2040175a:	7ce7ac23          	sw	a4,2008(a5) # 800007d8 <metal_segment_heap_target_end+0xffffe6b8>
2040175e:	b7f5                	j	2040174a <task1+0x6>

20401760 <task2>:
task2():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:36
//		}
		//printf("task 1 counter: %d\n", count1);
	}
}

void task2(void){
20401760:	1141                	addi	sp,sp,-16
20401762:	c606                	sw	ra,12(sp)
20401764:	c422                	sw	s0,8(sp)
20401766:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:38 (discriminator 1)
	while(1){
		semaphore_wait(&semaphore);
20401768:	57018513          	addi	a0,gp,1392 # 80001510 <semaphore>
2040176c:	28bd                	jal	204017ea <semaphore_wait>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:39 (discriminator 1)
		count2++;
2040176e:	800007b7          	lui	a5,0x80000
20401772:	7dc7a783          	lw	a5,2012(a5) # 800007dc <metal_segment_heap_target_end+0xffffe6bc>
20401776:	00178713          	addi	a4,a5,1
2040177a:	800007b7          	lui	a5,0x80000
2040177e:	7ce7ae23          	sw	a4,2012(a5) # 800007dc <metal_segment_heap_target_end+0xffffe6bc>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:41 (discriminator 1)
		//printf("task 2 counter: %d\n", count2);
		semaphore_signal(&semaphore);
20401782:	57018513          	addi	a0,gp,1392 # 80001510 <semaphore>
20401786:	2855                	jal	2040183a <semaphore_signal>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:38 (discriminator 1)
		semaphore_wait(&semaphore);
20401788:	b7c5                	j	20401768 <task2+0x8>

2040178a <task3>:
task3():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:45
	}
}

void task3(void){
2040178a:	1141                	addi	sp,sp,-16
2040178c:	c606                	sw	ra,12(sp)
2040178e:	c422                	sw	s0,8(sp)
20401790:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:47 (discriminator 1)
	while(1){
		semaphore_wait(&semaphore);
20401792:	57018513          	addi	a0,gp,1392 # 80001510 <semaphore>
20401796:	2891                	jal	204017ea <semaphore_wait>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:48 (discriminator 1)
		count3++;
20401798:	800007b7          	lui	a5,0x80000
2040179c:	7e07a783          	lw	a5,2016(a5) # 800007e0 <metal_segment_heap_target_end+0xffffe6c0>
204017a0:	00178713          	addi	a4,a5,1
204017a4:	800007b7          	lui	a5,0x80000
204017a8:	7ee7a023          	sw	a4,2016(a5) # 800007e0 <metal_segment_heap_target_end+0xffffe6c0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:50 (discriminator 1)
		//printf("task 3 counter: %d\n", count3);
		semaphore_signal(&semaphore);
204017ac:	57018513          	addi	a0,gp,1392 # 80001510 <semaphore>
204017b0:	2069                	jal	2040183a <semaphore_signal>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/task.c:47 (discriminator 1)
		semaphore_wait(&semaphore);
204017b2:	b7c5                	j	20401792 <task3+0x8>

204017b4 <semaphore_init>:
semaphore_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:12

#include "semaphore.h"

extern void switch_to(void);

void semaphore_init(semaphore_t *semaphore, int32_t value){
204017b4:	1101                	addi	sp,sp,-32
204017b6:	ce06                	sw	ra,28(sp)
204017b8:	cc22                	sw	s0,24(sp)
204017ba:	1000                	addi	s0,sp,32
204017bc:	fea42623          	sw	a0,-20(s0)
204017c0:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:13
	semaphore->value = value;
204017c4:	fec42783          	lw	a5,-20(s0)
204017c8:	fe842703          	lw	a4,-24(s0)
204017cc:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:14
	printf("test: %d\n", semaphore->value);
204017ce:	fec42783          	lw	a5,-20(s0)
204017d2:	439c                	lw	a5,0(a5)
204017d4:	85be                	mv	a1,a5
204017d6:	204007b7          	lui	a5,0x20400
204017da:	3b078513          	addi	a0,a5,944 # 204003b0 <use_hfxosc+0x74>
204017de:	24e5                	jal	20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:15
}
204017e0:	0001                	nop
204017e2:	40f2                	lw	ra,28(sp)
204017e4:	4462                	lw	s0,24(sp)
204017e6:	6105                	addi	sp,sp,32
204017e8:	8082                	ret

204017ea <semaphore_wait>:
semaphore_wait():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:17

void semaphore_wait(semaphore_t *semaphore){
204017ea:	1101                	addi	sp,sp,-32
204017ec:	ce06                	sw	ra,28(sp)
204017ee:	cc22                	sw	s0,24(sp)
204017f0:	1000                	addi	s0,sp,32
204017f2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:19
	//intr_off();
	semaphore->value --;
204017f6:	fec42783          	lw	a5,-20(s0)
204017fa:	439c                	lw	a5,0(a5)
204017fc:	fff78713          	addi	a4,a5,-1
20401800:	fec42783          	lw	a5,-20(s0)
20401804:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:20
	printf("test_wait: %d\n", &semaphore->value);
20401806:	fec42783          	lw	a5,-20(s0)
2040180a:	85be                	mv	a1,a5
2040180c:	204007b7          	lui	a5,0x20400
20401810:	3bc78513          	addi	a0,a5,956 # 204003bc <use_hfxosc+0x80>
20401814:	2c4d                	jal	20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:21
	while(semaphore->value < 0){
20401816:	a039                	j	20401824 <semaphore_wait+0x3a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:22
		task_wait(semaphore->queue);
20401818:	fec42783          	lw	a5,-20(s0)
2040181c:	43dc                	lw	a5,4(a5)
2040181e:	853e                	mv	a0,a5
20401820:	3afd                	jal	2040121e <task_wait>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:23
		switch_to();
20401822:	288d                	jal	20401894 <switch_to>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:21
	while(semaphore->value < 0){
20401824:	fec42783          	lw	a5,-20(s0)
20401828:	439c                	lw	a5,0(a5)
2040182a:	fe07c7e3          	bltz	a5,20401818 <semaphore_wait+0x2e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:26
	}
	//intr_on();
}
2040182e:	0001                	nop
20401830:	0001                	nop
20401832:	40f2                	lw	ra,28(sp)
20401834:	4462                	lw	s0,24(sp)
20401836:	6105                	addi	sp,sp,32
20401838:	8082                	ret

2040183a <semaphore_signal>:
semaphore_signal():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:28

void semaphore_signal(semaphore_t *semaphore){
2040183a:	1101                	addi	sp,sp,-32
2040183c:	ce06                	sw	ra,28(sp)
2040183e:	cc22                	sw	s0,24(sp)
20401840:	1000                	addi	s0,sp,32
20401842:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:30
	//intr_off();
	semaphore->value ++;
20401846:	fec42783          	lw	a5,-20(s0)
2040184a:	439c                	lw	a5,0(a5)
2040184c:	00178713          	addi	a4,a5,1
20401850:	fec42783          	lw	a5,-20(s0)
20401854:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:31
	printf("test_signal: %d\n", semaphore->value);
20401856:	fec42783          	lw	a5,-20(s0)
2040185a:	439c                	lw	a5,0(a5)
2040185c:	85be                	mv	a1,a5
2040185e:	204007b7          	lui	a5,0x20400
20401862:	3cc78513          	addi	a0,a5,972 # 204003cc <use_hfxosc+0x90>
20401866:	2485                	jal	20401ac6 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:32
	if(semaphore->value <= 0){
20401868:	fec42783          	lw	a5,-20(s0)
2040186c:	439c                	lw	a5,0(a5)
2040186e:	00f04463          	bgtz	a5,20401876 <semaphore_signal+0x3c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:33
		task_unlock();
20401872:	3af5                	jal	2040126e <task_unlock>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:34
		switch_to();
20401874:	2005                	jal	20401894 <switch_to>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/semaphore.c:37
	}
	//intr_on();
}
20401876:	0001                	nop
20401878:	40f2                	lw	ra,28(sp)
2040187a:	4462                	lw	s0,24(sp)
2040187c:	6105                	addi	sp,sp,32
2040187e:	8082                	ret

20401880 <osSchedulerLaunch>:
osSchedulerLaunch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:6
.section .text
.global osSchedulerLaunch
.type osSchedulerLaunch, @function
.extern current_ptr
osSchedulerLaunch:
    lw t0, current_ptr   # Load currentPt into T0
20401880:	8e81a283          	lw	t0,-1816(gp) # 80000888 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:7
    lw t1, (t0)
20401884:	0002a303          	lw	t1,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:8
    lw sp, (t0)        # t1 = &t0
20401888:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:9
    lw ra, (sp)
2040188c:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:10
    addi sp, sp, -132   # make a stack frame
2040188e:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:11
    ret
20401892:	8082                	ret

20401894 <switch_to>:
switch_to():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:20
.global switch_to
.type switch_to, @function
.align 2
switch_to:

    call handle_trap
20401894:	3345                	jal	20401634 <handle_trap>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:21
    mv tp, sp
20401896:	820a                	mv	tp,sp
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:22
    mv sp, fp
20401898:	8122                	mv	sp,s0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:24
    #Push register
    sw ra, (sp)
2040189a:	c006                	sw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:25
    sw sp, 4(sp)
2040189c:	c20a                	sw	sp,4(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:26
    sw gp, 8(sp)
2040189e:	c40e                	sw	gp,8(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:27
    sw tp, 12(sp)
204018a0:	c612                	sw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:28
    sw t0, 16(sp)
204018a2:	c816                	sw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:29
    sw t1, 20(sp)
204018a4:	ca1a                	sw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:30
    sw t2, 24(sp)
204018a6:	cc1e                	sw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:31
    sw t3, 28(sp)
204018a8:	ce72                	sw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:32
    sw s0, 32(sp)
204018aa:	d022                	sw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:33
    sw s1, 36(sp)
204018ac:	d226                	sw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:34
    sw a0, 40(sp)
204018ae:	d42a                	sw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:35
    sw a1, 44(sp)
204018b0:	d62e                	sw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:36
    sw a2, 48(sp)
204018b2:	d832                	sw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:37
    sw a3, 52(sp)
204018b4:	da36                	sw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:38
    sw a4, 56(sp)
204018b6:	dc3a                	sw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:39
    sw a5, 60(sp)
204018b8:	de3e                	sw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:40
    sw a6, 64(sp)
204018ba:	c0c2                	sw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:41
    sw a7, 68(sp)
204018bc:	c2c6                	sw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:42
    sw s2, 72(sp)
204018be:	c4ca                	sw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:43
    sw s3, 76(sp)
204018c0:	c6ce                	sw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:44
    sw s4, 80(sp)
204018c2:	c8d2                	sw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:45
    sw s5, 84(sp)
204018c4:	cad6                	sw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:46
    sw s6, 88(sp)
204018c6:	ccda                	sw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:47
    sw s7, 92(sp)
204018c8:	cede                	sw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:48
    sw s8, 96(sp)
204018ca:	d0e2                	sw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:49
    sw s9, 100(sp)
204018cc:	d2e6                	sw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:50
    sw s10,104(sp)
204018ce:	d4ea                	sw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:51
    sw s11,108(sp)
204018d0:	d6ee                	sw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:52
    sw t3, 112(sp)
204018d2:	d8f2                	sw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:53
    sw t4, 116(sp)
204018d4:	daf6                	sw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:54
    sw t5, 120(sp)
204018d6:	dcfa                	sw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:55
    sw t6, 124(sp)
204018d8:	defe                	sw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:56
    csrr t0, mepc
204018da:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:57
    sw t0, 132(sp)
204018de:	c316                	sw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:72
    #addi sp, sp, -132  # make a stack frame
    #lw t0, 132(sp)     # load mepc
    #csrw mepc, t0

    #Switch context in c
    call scheduler_RoundRobin
204018e0:	3405                	jal	20401300 <scheduler_RoundRobin>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:73
    lw t0, current_ptr   # Load currentPt into T0
204018e2:	8e81a283          	lw	t0,-1816(gp) # 80000888 <current_ptr>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:74
    lw sp, (t0)
204018e6:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:75
    addi sp, sp, -132    # make a stack frame
204018ea:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:76
    lw t0, 132(sp)       # load mepc
204018ee:	429a                	lw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:77
    csrw mepc, t0
204018f0:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:81


    #Pop register
    lw ra, (sp)
204018f4:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:84
    #lw sp, 4(sp)
    #lw gp, 8(sp)
    lw tp, 12(sp)
204018f6:	4232                	lw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:85
    lw t0, 16(sp)
204018f8:	42c2                	lw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:86
    lw t1, 20(sp)
204018fa:	4352                	lw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:87
    lw t2, 24(sp)
204018fc:	43e2                	lw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:88
    lw t3, 28(sp)
204018fe:	4e72                	lw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:89
    lw s0, 32(sp)
20401900:	5402                	lw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:90
    lw s1, 36(sp)
20401902:	5492                	lw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:91
    lw a0, 40(sp)
20401904:	5522                	lw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:92
    lw a1, 44(sp)
20401906:	55b2                	lw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:93
    lw a2, 48(sp)
20401908:	5642                	lw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:94
    lw a3, 52(sp)
2040190a:	56d2                	lw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:95
    lw a4, 56(sp)
2040190c:	5762                	lw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:96
    lw a5, 60(sp)
2040190e:	57f2                	lw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:97
    lw a6, 64(sp)
20401910:	4806                	lw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:98
    lw a7, 68(sp)
20401912:	4896                	lw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:99
    lw s2, 72(sp)
20401914:	4926                	lw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:100
    lw s3, 76(sp)
20401916:	49b6                	lw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:101
    lw s4, 80(sp)
20401918:	4a46                	lw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:102
    lw s5, 84(sp)
2040191a:	4ad6                	lw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:103
    lw s6, 88(sp)
2040191c:	4b66                	lw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:104
    lw s7, 92(sp)
2040191e:	4bf6                	lw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:105
    lw s8, 96(sp)
20401920:	5c06                	lw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:106
    lw s9, 100(sp)
20401922:	5c96                	lw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:107
    lw s10,104(sp)
20401924:	5d26                	lw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:108
    lw s11,108(sp)
20401926:	5db6                	lw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:109
    lw t3, 112(sp)
20401928:	5e46                	lw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:110
    lw t4, 116(sp)
2040192a:	5ed6                	lw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:111
    lw t5, 120(sp)
2040192c:	5f66                	lw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:112
    lw t6, 124(sp)
2040192e:	5ff6                	lw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\src/kernel.S:114

    mret
20401930:	30200073          	mret
	...

20401936 <malloc>:
malloc():
20401936:	85aa                	mv	a1,a0
20401938:	5fbff517          	auipc	a0,0x5fbff
2040193c:	e6852503          	lw	a0,-408(a0) # 800007a0 <_impure_ptr>
20401940:	a065                	j	204019e8 <_malloc_r>

20401942 <_free_r>:
_free_r():
20401942:	c1d5                	beqz	a1,204019e6 <_free_r+0xa4>
20401944:	ffc5a783          	lw	a5,-4(a1)
20401948:	1101                	addi	sp,sp,-32
2040194a:	cc22                	sw	s0,24(sp)
2040194c:	ce06                	sw	ra,28(sp)
2040194e:	ffc58413          	addi	s0,a1,-4
20401952:	0007d363          	bgez	a5,20401958 <_free_r+0x16>
20401956:	943e                	add	s0,s0,a5
20401958:	c62a                	sw	a0,12(sp)
2040195a:	1fd000ef          	jal	ra,20402356 <__malloc_lock>
2040195e:	5fbff717          	auipc	a4,0x5fbff
20401962:	e8670713          	addi	a4,a4,-378 # 800007e4 <__malloc_free_list>
20401966:	431c                	lw	a5,0(a4)
20401968:	4532                	lw	a0,12(sp)
2040196a:	eb89                	bnez	a5,2040197c <_free_r+0x3a>
2040196c:	00042223          	sw	zero,4(s0)
20401970:	c300                	sw	s0,0(a4)
20401972:	4462                	lw	s0,24(sp)
20401974:	40f2                	lw	ra,28(sp)
20401976:	6105                	addi	sp,sp,32
20401978:	1e10006f          	j	20402358 <__malloc_unlock>
2040197c:	00f47d63          	bgeu	s0,a5,20401996 <_free_r+0x54>
20401980:	4010                	lw	a2,0(s0)
20401982:	00c406b3          	add	a3,s0,a2
20401986:	00d79663          	bne	a5,a3,20401992 <_free_r+0x50>
2040198a:	4394                	lw	a3,0(a5)
2040198c:	43dc                	lw	a5,4(a5)
2040198e:	96b2                	add	a3,a3,a2
20401990:	c014                	sw	a3,0(s0)
20401992:	c05c                	sw	a5,4(s0)
20401994:	bff1                	j	20401970 <_free_r+0x2e>
20401996:	873e                	mv	a4,a5
20401998:	43dc                	lw	a5,4(a5)
2040199a:	c399                	beqz	a5,204019a0 <_free_r+0x5e>
2040199c:	fef47de3          	bgeu	s0,a5,20401996 <_free_r+0x54>
204019a0:	4314                	lw	a3,0(a4)
204019a2:	00d70633          	add	a2,a4,a3
204019a6:	00861f63          	bne	a2,s0,204019c4 <_free_r+0x82>
204019aa:	4010                	lw	a2,0(s0)
204019ac:	96b2                	add	a3,a3,a2
204019ae:	c314                	sw	a3,0(a4)
204019b0:	00d70633          	add	a2,a4,a3
204019b4:	fac79fe3          	bne	a5,a2,20401972 <_free_r+0x30>
204019b8:	4390                	lw	a2,0(a5)
204019ba:	43dc                	lw	a5,4(a5)
204019bc:	96b2                	add	a3,a3,a2
204019be:	c314                	sw	a3,0(a4)
204019c0:	c35c                	sw	a5,4(a4)
204019c2:	bf45                	j	20401972 <_free_r+0x30>
204019c4:	00c47563          	bgeu	s0,a2,204019ce <_free_r+0x8c>
204019c8:	47b1                	li	a5,12
204019ca:	c11c                	sw	a5,0(a0)
204019cc:	b75d                	j	20401972 <_free_r+0x30>
204019ce:	4010                	lw	a2,0(s0)
204019d0:	00c406b3          	add	a3,s0,a2
204019d4:	00d79663          	bne	a5,a3,204019e0 <_free_r+0x9e>
204019d8:	4394                	lw	a3,0(a5)
204019da:	43dc                	lw	a5,4(a5)
204019dc:	96b2                	add	a3,a3,a2
204019de:	c014                	sw	a3,0(s0)
204019e0:	c05c                	sw	a5,4(s0)
204019e2:	c340                	sw	s0,4(a4)
204019e4:	b779                	j	20401972 <_free_r+0x30>
204019e6:	8082                	ret

204019e8 <_malloc_r>:
_malloc_r():
204019e8:	1101                	addi	sp,sp,-32
204019ea:	ca26                	sw	s1,20(sp)
204019ec:	00358493          	addi	s1,a1,3
204019f0:	98f1                	andi	s1,s1,-4
204019f2:	c84a                	sw	s2,16(sp)
204019f4:	ce06                	sw	ra,28(sp)
204019f6:	cc22                	sw	s0,24(sp)
204019f8:	c64e                	sw	s3,12(sp)
204019fa:	04a1                	addi	s1,s1,8
204019fc:	47b1                	li	a5,12
204019fe:	892a                	mv	s2,a0
20401a00:	04f4f663          	bgeu	s1,a5,20401a4c <_malloc_r+0x64>
20401a04:	44b1                	li	s1,12
20401a06:	04b4e563          	bltu	s1,a1,20401a50 <_malloc_r+0x68>
20401a0a:	854a                	mv	a0,s2
20401a0c:	14b000ef          	jal	ra,20402356 <__malloc_lock>
20401a10:	5fbff697          	auipc	a3,0x5fbff
20401a14:	dd468693          	addi	a3,a3,-556 # 800007e4 <__malloc_free_list>
20401a18:	4298                	lw	a4,0(a3)
20401a1a:	843a                	mv	s0,a4
20401a1c:	e429                	bnez	s0,20401a66 <_malloc_r+0x7e>
20401a1e:	5fbff417          	auipc	s0,0x5fbff
20401a22:	dca40413          	addi	s0,s0,-566 # 800007e8 <__malloc_sbrk_start>
20401a26:	401c                	lw	a5,0(s0)
20401a28:	e789                	bnez	a5,20401a32 <_malloc_r+0x4a>
20401a2a:	4581                	li	a1,0
20401a2c:	854a                	mv	a0,s2
20401a2e:	2a75                	jal	20401bea <_sbrk_r>
20401a30:	c008                	sw	a0,0(s0)
20401a32:	85a6                	mv	a1,s1
20401a34:	854a                	mv	a0,s2
20401a36:	2a55                	jal	20401bea <_sbrk_r>
20401a38:	59fd                	li	s3,-1
20401a3a:	07351a63          	bne	a0,s3,20401aae <_malloc_r+0xc6>
20401a3e:	47b1                	li	a5,12
20401a40:	00f92023          	sw	a5,0(s2)
20401a44:	854a                	mv	a0,s2
20401a46:	113000ef          	jal	ra,20402358 <__malloc_unlock>
20401a4a:	a031                	j	20401a56 <_malloc_r+0x6e>
20401a4c:	fa04dde3          	bgez	s1,20401a06 <_malloc_r+0x1e>
20401a50:	47b1                	li	a5,12
20401a52:	00f92023          	sw	a5,0(s2)
20401a56:	4501                	li	a0,0
20401a58:	40f2                	lw	ra,28(sp)
20401a5a:	4462                	lw	s0,24(sp)
20401a5c:	44d2                	lw	s1,20(sp)
20401a5e:	4942                	lw	s2,16(sp)
20401a60:	49b2                	lw	s3,12(sp)
20401a62:	6105                	addi	sp,sp,32
20401a64:	8082                	ret
20401a66:	401c                	lw	a5,0(s0)
20401a68:	8f85                	sub	a5,a5,s1
20401a6a:	0207cf63          	bltz	a5,20401aa8 <_malloc_r+0xc0>
20401a6e:	462d                	li	a2,11
20401a70:	00f67663          	bgeu	a2,a5,20401a7c <_malloc_r+0x94>
20401a74:	c01c                	sw	a5,0(s0)
20401a76:	943e                	add	s0,s0,a5
20401a78:	c004                	sw	s1,0(s0)
20401a7a:	a029                	j	20401a84 <_malloc_r+0x9c>
20401a7c:	405c                	lw	a5,4(s0)
20401a7e:	02871363          	bne	a4,s0,20401aa4 <_malloc_r+0xbc>
20401a82:	c29c                	sw	a5,0(a3)
20401a84:	854a                	mv	a0,s2
20401a86:	0d3000ef          	jal	ra,20402358 <__malloc_unlock>
20401a8a:	00b40513          	addi	a0,s0,11
20401a8e:	00440793          	addi	a5,s0,4
20401a92:	9961                	andi	a0,a0,-8
20401a94:	40f50733          	sub	a4,a0,a5
20401a98:	fcf500e3          	beq	a0,a5,20401a58 <_malloc_r+0x70>
20401a9c:	943a                	add	s0,s0,a4
20401a9e:	8f89                	sub	a5,a5,a0
20401aa0:	c01c                	sw	a5,0(s0)
20401aa2:	bf5d                	j	20401a58 <_malloc_r+0x70>
20401aa4:	c35c                	sw	a5,4(a4)
20401aa6:	bff9                	j	20401a84 <_malloc_r+0x9c>
20401aa8:	8722                	mv	a4,s0
20401aaa:	4040                	lw	s0,4(s0)
20401aac:	bf85                	j	20401a1c <_malloc_r+0x34>
20401aae:	00350413          	addi	s0,a0,3
20401ab2:	9871                	andi	s0,s0,-4
20401ab4:	fc8502e3          	beq	a0,s0,20401a78 <_malloc_r+0x90>
20401ab8:	40a405b3          	sub	a1,s0,a0
20401abc:	854a                	mv	a0,s2
20401abe:	2235                	jal	20401bea <_sbrk_r>
20401ac0:	fb351ce3          	bne	a0,s3,20401a78 <_malloc_r+0x90>
20401ac4:	bfad                	j	20401a3e <_malloc_r+0x56>

20401ac6 <iprintf>:
printf():
20401ac6:	715d                	addi	sp,sp,-80
20401ac8:	d422                	sw	s0,40(sp)
20401aca:	d606                	sw	ra,44(sp)
20401acc:	842a                	mv	s0,a0
20401ace:	da2e                	sw	a1,52(sp)
20401ad0:	dc32                	sw	a2,56(sp)
20401ad2:	de36                	sw	a3,60(sp)
20401ad4:	c0ba                	sw	a4,64(sp)
20401ad6:	c2be                	sw	a5,68(sp)
20401ad8:	c4c2                	sw	a6,72(sp)
20401ada:	c6c6                	sw	a7,76(sp)
20401adc:	5fbff517          	auipc	a0,0x5fbff
20401ae0:	cc452503          	lw	a0,-828(a0) # 800007a0 <_impure_ptr>
20401ae4:	c511                	beqz	a0,20401af0 <iprintf+0x2a>
20401ae6:	4d1c                	lw	a5,24(a0)
20401ae8:	e781                	bnez	a5,20401af0 <iprintf+0x2a>
20401aea:	c62a                	sw	a0,12(sp)
20401aec:	2ba9                	jal	20402046 <__sinit>
20401aee:	4532                	lw	a0,12(sp)
20401af0:	450c                	lw	a1,8(a0)
20401af2:	1854                	addi	a3,sp,52
20401af4:	8622                	mv	a2,s0
20401af6:	ce36                	sw	a3,28(sp)
20401af8:	0cf000ef          	jal	ra,204023c6 <_vfiprintf_r>
20401afc:	50b2                	lw	ra,44(sp)
20401afe:	5422                	lw	s0,40(sp)
20401b00:	6161                	addi	sp,sp,80
20401b02:	8082                	ret

20401b04 <_puts_r>:
_puts_r():
20401b04:	1101                	addi	sp,sp,-32
20401b06:	ca26                	sw	s1,20(sp)
20401b08:	c84a                	sw	s2,16(sp)
20401b0a:	ce06                	sw	ra,28(sp)
20401b0c:	cc22                	sw	s0,24(sp)
20401b0e:	c64e                	sw	s3,12(sp)
20401b10:	c452                	sw	s4,8(sp)
20401b12:	84aa                	mv	s1,a0
20401b14:	892e                	mv	s2,a1
20401b16:	c501                	beqz	a0,20401b1e <_puts_r+0x1a>
20401b18:	4d1c                	lw	a5,24(a0)
20401b1a:	e391                	bnez	a5,20401b1e <_puts_r+0x1a>
20401b1c:	232d                	jal	20402046 <__sinit>
20401b1e:	4c9c                	lw	a5,24(s1)
20401b20:	4480                	lw	s0,8(s1)
20401b22:	e399                	bnez	a5,20401b28 <_puts_r+0x24>
20401b24:	8526                	mv	a0,s1
20401b26:	2305                	jal	20402046 <__sinit>
20401b28:	fffff797          	auipc	a5,0xfffff
20401b2c:	8d878793          	addi	a5,a5,-1832 # 20400400 <__sf_fake_stdin>
20401b30:	02f41c63          	bne	s0,a5,20401b68 <_puts_r+0x64>
20401b34:	40c0                	lw	s0,4(s1)
20401b36:	00c45783          	lhu	a5,12(s0)
20401b3a:	8ba1                	andi	a5,a5,8
20401b3c:	c7b1                	beqz	a5,20401b88 <_puts_r+0x84>
20401b3e:	481c                	lw	a5,16(s0)
20401b40:	c7a1                	beqz	a5,20401b88 <_puts_r+0x84>
20401b42:	59fd                	li	s3,-1
20401b44:	4a29                	li	s4,10
20401b46:	441c                	lw	a5,8(s0)
20401b48:	00094583          	lbu	a1,0(s2)
20401b4c:	17fd                	addi	a5,a5,-1
20401b4e:	e9b1                	bnez	a1,20401ba2 <_puts_r+0x9e>
20401b50:	c41c                	sw	a5,8(s0)
20401b52:	0607de63          	bgez	a5,20401bce <_puts_r+0xca>
20401b56:	8622                	mv	a2,s0
20401b58:	45a9                	li	a1,10
20401b5a:	8526                	mv	a0,s1
20401b5c:	287d                	jal	20401c1a <__swbuf_r>
20401b5e:	57fd                	li	a5,-1
20401b60:	02f50863          	beq	a0,a5,20401b90 <_puts_r+0x8c>
20401b64:	4529                	li	a0,10
20401b66:	a035                	j	20401b92 <_puts_r+0x8e>
20401b68:	fffff797          	auipc	a5,0xfffff
20401b6c:	8b878793          	addi	a5,a5,-1864 # 20400420 <__sf_fake_stdout>
20401b70:	00f41463          	bne	s0,a5,20401b78 <_puts_r+0x74>
20401b74:	4480                	lw	s0,8(s1)
20401b76:	b7c1                	j	20401b36 <_puts_r+0x32>
20401b78:	fffff797          	auipc	a5,0xfffff
20401b7c:	86878793          	addi	a5,a5,-1944 # 204003e0 <__sf_fake_stderr>
20401b80:	faf41be3          	bne	s0,a5,20401b36 <_puts_r+0x32>
20401b84:	44c0                	lw	s0,12(s1)
20401b86:	bf45                	j	20401b36 <_puts_r+0x32>
20401b88:	85a2                	mv	a1,s0
20401b8a:	8526                	mv	a0,s1
20401b8c:	22b9                	jal	20401cda <__swsetup_r>
20401b8e:	d955                	beqz	a0,20401b42 <_puts_r+0x3e>
20401b90:	557d                	li	a0,-1
20401b92:	40f2                	lw	ra,28(sp)
20401b94:	4462                	lw	s0,24(sp)
20401b96:	44d2                	lw	s1,20(sp)
20401b98:	4942                	lw	s2,16(sp)
20401b9a:	49b2                	lw	s3,12(sp)
20401b9c:	4a22                	lw	s4,8(sp)
20401b9e:	6105                	addi	sp,sp,32
20401ba0:	8082                	ret
20401ba2:	c41c                	sw	a5,8(s0)
20401ba4:	0905                	addi	s2,s2,1
20401ba6:	0007d763          	bgez	a5,20401bb4 <_puts_r+0xb0>
20401baa:	4c18                	lw	a4,24(s0)
20401bac:	00e7cb63          	blt	a5,a4,20401bc2 <_puts_r+0xbe>
20401bb0:	01458963          	beq	a1,s4,20401bc2 <_puts_r+0xbe>
20401bb4:	401c                	lw	a5,0(s0)
20401bb6:	00178713          	addi	a4,a5,1
20401bba:	c018                	sw	a4,0(s0)
20401bbc:	00b78023          	sb	a1,0(a5)
20401bc0:	b759                	j	20401b46 <_puts_r+0x42>
20401bc2:	8622                	mv	a2,s0
20401bc4:	8526                	mv	a0,s1
20401bc6:	2891                	jal	20401c1a <__swbuf_r>
20401bc8:	f7351fe3          	bne	a0,s3,20401b46 <_puts_r+0x42>
20401bcc:	b7d1                	j	20401b90 <_puts_r+0x8c>
20401bce:	401c                	lw	a5,0(s0)
20401bd0:	00178713          	addi	a4,a5,1
20401bd4:	c018                	sw	a4,0(s0)
20401bd6:	4729                	li	a4,10
20401bd8:	00e78023          	sb	a4,0(a5)
20401bdc:	b761                	j	20401b64 <_puts_r+0x60>

20401bde <puts>:
puts():
20401bde:	85aa                	mv	a1,a0
20401be0:	5fbff517          	auipc	a0,0x5fbff
20401be4:	bc052503          	lw	a0,-1088(a0) # 800007a0 <_impure_ptr>
20401be8:	bf31                	j	20401b04 <_puts_r>

20401bea <_sbrk_r>:
_sbrk_r():
20401bea:	1141                	addi	sp,sp,-16
20401bec:	c422                	sw	s0,8(sp)
20401bee:	842a                	mv	s0,a0
20401bf0:	852e                	mv	a0,a1
20401bf2:	5fbff797          	auipc	a5,0x5fbff
20401bf6:	be07ad23          	sw	zero,-1030(a5) # 800007ec <errno>
20401bfa:	c606                	sw	ra,12(sp)
20401bfc:	08c010ef          	jal	ra,20402c88 <_sbrk>
20401c00:	57fd                	li	a5,-1
20401c02:	00f51863          	bne	a0,a5,20401c12 <_sbrk_r+0x28>
20401c06:	5fbff797          	auipc	a5,0x5fbff
20401c0a:	be67a783          	lw	a5,-1050(a5) # 800007ec <errno>
20401c0e:	c391                	beqz	a5,20401c12 <_sbrk_r+0x28>
20401c10:	c01c                	sw	a5,0(s0)
20401c12:	40b2                	lw	ra,12(sp)
20401c14:	4422                	lw	s0,8(sp)
20401c16:	0141                	addi	sp,sp,16
20401c18:	8082                	ret

20401c1a <__swbuf_r>:
__swbuf_r():
20401c1a:	1101                	addi	sp,sp,-32
20401c1c:	cc22                	sw	s0,24(sp)
20401c1e:	ca26                	sw	s1,20(sp)
20401c20:	c84a                	sw	s2,16(sp)
20401c22:	ce06                	sw	ra,28(sp)
20401c24:	c64e                	sw	s3,12(sp)
20401c26:	84aa                	mv	s1,a0
20401c28:	892e                	mv	s2,a1
20401c2a:	8432                	mv	s0,a2
20401c2c:	c501                	beqz	a0,20401c34 <__swbuf_r+0x1a>
20401c2e:	4d1c                	lw	a5,24(a0)
20401c30:	e391                	bnez	a5,20401c34 <__swbuf_r+0x1a>
20401c32:	2911                	jal	20402046 <__sinit>
20401c34:	ffffe797          	auipc	a5,0xffffe
20401c38:	7cc78793          	addi	a5,a5,1996 # 20400400 <__sf_fake_stdin>
20401c3c:	06f41963          	bne	s0,a5,20401cae <__swbuf_r+0x94>
20401c40:	40c0                	lw	s0,4(s1)
20401c42:	4c1c                	lw	a5,24(s0)
20401c44:	c41c                	sw	a5,8(s0)
20401c46:	00c45783          	lhu	a5,12(s0)
20401c4a:	8ba1                	andi	a5,a5,8
20401c4c:	c3c9                	beqz	a5,20401cce <__swbuf_r+0xb4>
20401c4e:	481c                	lw	a5,16(s0)
20401c50:	cfbd                	beqz	a5,20401cce <__swbuf_r+0xb4>
20401c52:	481c                	lw	a5,16(s0)
20401c54:	4008                	lw	a0,0(s0)
20401c56:	0ff97993          	zext.b	s3,s2
20401c5a:	0ff97913          	zext.b	s2,s2
20401c5e:	8d1d                	sub	a0,a0,a5
20401c60:	485c                	lw	a5,20(s0)
20401c62:	00f54663          	blt	a0,a5,20401c6e <__swbuf_r+0x54>
20401c66:	85a2                	mv	a1,s0
20401c68:	8526                	mv	a0,s1
20401c6a:	24c1                	jal	20401f2a <_fflush_r>
20401c6c:	e52d                	bnez	a0,20401cd6 <__swbuf_r+0xbc>
20401c6e:	441c                	lw	a5,8(s0)
20401c70:	0505                	addi	a0,a0,1
20401c72:	17fd                	addi	a5,a5,-1
20401c74:	c41c                	sw	a5,8(s0)
20401c76:	401c                	lw	a5,0(s0)
20401c78:	00178713          	addi	a4,a5,1
20401c7c:	c018                	sw	a4,0(s0)
20401c7e:	01378023          	sb	s3,0(a5)
20401c82:	485c                	lw	a5,20(s0)
20401c84:	00a78963          	beq	a5,a0,20401c96 <__swbuf_r+0x7c>
20401c88:	00c45783          	lhu	a5,12(s0)
20401c8c:	8b85                	andi	a5,a5,1
20401c8e:	cb81                	beqz	a5,20401c9e <__swbuf_r+0x84>
20401c90:	47a9                	li	a5,10
20401c92:	00f91663          	bne	s2,a5,20401c9e <__swbuf_r+0x84>
20401c96:	85a2                	mv	a1,s0
20401c98:	8526                	mv	a0,s1
20401c9a:	2c41                	jal	20401f2a <_fflush_r>
20401c9c:	ed0d                	bnez	a0,20401cd6 <__swbuf_r+0xbc>
20401c9e:	40f2                	lw	ra,28(sp)
20401ca0:	4462                	lw	s0,24(sp)
20401ca2:	44d2                	lw	s1,20(sp)
20401ca4:	49b2                	lw	s3,12(sp)
20401ca6:	854a                	mv	a0,s2
20401ca8:	4942                	lw	s2,16(sp)
20401caa:	6105                	addi	sp,sp,32
20401cac:	8082                	ret
20401cae:	ffffe797          	auipc	a5,0xffffe
20401cb2:	77278793          	addi	a5,a5,1906 # 20400420 <__sf_fake_stdout>
20401cb6:	00f41463          	bne	s0,a5,20401cbe <__swbuf_r+0xa4>
20401cba:	4480                	lw	s0,8(s1)
20401cbc:	b759                	j	20401c42 <__swbuf_r+0x28>
20401cbe:	ffffe797          	auipc	a5,0xffffe
20401cc2:	72278793          	addi	a5,a5,1826 # 204003e0 <__sf_fake_stderr>
20401cc6:	f6f41ee3          	bne	s0,a5,20401c42 <__swbuf_r+0x28>
20401cca:	44c0                	lw	s0,12(s1)
20401ccc:	bf9d                	j	20401c42 <__swbuf_r+0x28>
20401cce:	85a2                	mv	a1,s0
20401cd0:	8526                	mv	a0,s1
20401cd2:	2021                	jal	20401cda <__swsetup_r>
20401cd4:	dd3d                	beqz	a0,20401c52 <__swbuf_r+0x38>
20401cd6:	597d                	li	s2,-1
20401cd8:	b7d9                	j	20401c9e <__swbuf_r+0x84>

20401cda <__swsetup_r>:
__swsetup_r():
20401cda:	1141                	addi	sp,sp,-16
20401cdc:	c422                	sw	s0,8(sp)
20401cde:	c226                	sw	s1,4(sp)
20401ce0:	c04a                	sw	s2,0(sp)
20401ce2:	c606                	sw	ra,12(sp)
20401ce4:	5fbff497          	auipc	s1,0x5fbff
20401ce8:	abc4a483          	lw	s1,-1348(s1) # 800007a0 <_impure_ptr>
20401cec:	892a                	mv	s2,a0
20401cee:	842e                	mv	s0,a1
20401cf0:	c489                	beqz	s1,20401cfa <__swsetup_r+0x20>
20401cf2:	4c9c                	lw	a5,24(s1)
20401cf4:	e399                	bnez	a5,20401cfa <__swsetup_r+0x20>
20401cf6:	8526                	mv	a0,s1
20401cf8:	26b9                	jal	20402046 <__sinit>
20401cfa:	ffffe797          	auipc	a5,0xffffe
20401cfe:	70678793          	addi	a5,a5,1798 # 20400400 <__sf_fake_stdin>
20401d02:	02f41763          	bne	s0,a5,20401d30 <__swsetup_r+0x56>
20401d06:	40c0                	lw	s0,4(s1)
20401d08:	00c41783          	lh	a5,12(s0)
20401d0c:	01079713          	slli	a4,a5,0x10
20401d10:	0087f693          	andi	a3,a5,8
20401d14:	8341                	srli	a4,a4,0x10
20401d16:	eaad                	bnez	a3,20401d88 <__swsetup_r+0xae>
20401d18:	01077693          	andi	a3,a4,16
20401d1c:	ea95                	bnez	a3,20401d50 <__swsetup_r+0x76>
20401d1e:	4725                	li	a4,9
20401d20:	00e92023          	sw	a4,0(s2)
20401d24:	0407e793          	ori	a5,a5,64
20401d28:	00f41623          	sh	a5,12(s0)
20401d2c:	557d                	li	a0,-1
20401d2e:	a871                	j	20401dca <__swsetup_r+0xf0>
20401d30:	ffffe797          	auipc	a5,0xffffe
20401d34:	6f078793          	addi	a5,a5,1776 # 20400420 <__sf_fake_stdout>
20401d38:	00f41463          	bne	s0,a5,20401d40 <__swsetup_r+0x66>
20401d3c:	4480                	lw	s0,8(s1)
20401d3e:	b7e9                	j	20401d08 <__swsetup_r+0x2e>
20401d40:	ffffe797          	auipc	a5,0xffffe
20401d44:	6a078793          	addi	a5,a5,1696 # 204003e0 <__sf_fake_stderr>
20401d48:	fcf410e3          	bne	s0,a5,20401d08 <__swsetup_r+0x2e>
20401d4c:	44c0                	lw	s0,12(s1)
20401d4e:	bf6d                	j	20401d08 <__swsetup_r+0x2e>
20401d50:	8b11                	andi	a4,a4,4
20401d52:	c70d                	beqz	a4,20401d7c <__swsetup_r+0xa2>
20401d54:	584c                	lw	a1,52(s0)
20401d56:	c989                	beqz	a1,20401d68 <__swsetup_r+0x8e>
20401d58:	04440793          	addi	a5,s0,68
20401d5c:	00f58463          	beq	a1,a5,20401d64 <__swsetup_r+0x8a>
20401d60:	854a                	mv	a0,s2
20401d62:	36c5                	jal	20401942 <_free_r>
20401d64:	02042a23          	sw	zero,52(s0)
20401d68:	00c45783          	lhu	a5,12(s0)
20401d6c:	00042223          	sw	zero,4(s0)
20401d70:	fdb7f793          	andi	a5,a5,-37
20401d74:	00f41623          	sh	a5,12(s0)
20401d78:	481c                	lw	a5,16(s0)
20401d7a:	c01c                	sw	a5,0(s0)
20401d7c:	00c45783          	lhu	a5,12(s0)
20401d80:	0087e793          	ori	a5,a5,8
20401d84:	00f41623          	sh	a5,12(s0)
20401d88:	481c                	lw	a5,16(s0)
20401d8a:	ef81                	bnez	a5,20401da2 <__swsetup_r+0xc8>
20401d8c:	00c45783          	lhu	a5,12(s0)
20401d90:	20000713          	li	a4,512
20401d94:	2807f793          	andi	a5,a5,640
20401d98:	00e78563          	beq	a5,a4,20401da2 <__swsetup_r+0xc8>
20401d9c:	85a2                	mv	a1,s0
20401d9e:	854a                	mv	a0,s2
20401da0:	2985                	jal	20402210 <__smakebuf_r>
20401da2:	00c41783          	lh	a5,12(s0)
20401da6:	01079713          	slli	a4,a5,0x10
20401daa:	0017f693          	andi	a3,a5,1
20401dae:	8341                	srli	a4,a4,0x10
20401db0:	c29d                	beqz	a3,20401dd6 <__swsetup_r+0xfc>
20401db2:	4854                	lw	a3,20(s0)
20401db4:	00042423          	sw	zero,8(s0)
20401db8:	40d006b3          	neg	a3,a3
20401dbc:	cc14                	sw	a3,24(s0)
20401dbe:	4814                	lw	a3,16(s0)
20401dc0:	4501                	li	a0,0
20401dc2:	e681                	bnez	a3,20401dca <__swsetup_r+0xf0>
20401dc4:	08077713          	andi	a4,a4,128
20401dc8:	ff31                	bnez	a4,20401d24 <__swsetup_r+0x4a>
20401dca:	40b2                	lw	ra,12(sp)
20401dcc:	4422                	lw	s0,8(sp)
20401dce:	4492                	lw	s1,4(sp)
20401dd0:	4902                	lw	s2,0(sp)
20401dd2:	0141                	addi	sp,sp,16
20401dd4:	8082                	ret
20401dd6:	00277693          	andi	a3,a4,2
20401dda:	4601                	li	a2,0
20401ddc:	e291                	bnez	a3,20401de0 <__swsetup_r+0x106>
20401dde:	4850                	lw	a2,20(s0)
20401de0:	c410                	sw	a2,8(s0)
20401de2:	bff1                	j	20401dbe <__swsetup_r+0xe4>

20401de4 <__sflush_r>:
__sflush_r():
20401de4:	00c5d783          	lhu	a5,12(a1)
20401de8:	1101                	addi	sp,sp,-32
20401dea:	cc22                	sw	s0,24(sp)
20401dec:	ca26                	sw	s1,20(sp)
20401dee:	ce06                	sw	ra,28(sp)
20401df0:	c84a                	sw	s2,16(sp)
20401df2:	c64e                	sw	s3,12(sp)
20401df4:	0087f713          	andi	a4,a5,8
20401df8:	84aa                	mv	s1,a0
20401dfa:	842e                	mv	s0,a1
20401dfc:	e375                	bnez	a4,20401ee0 <__sflush_r+0xfc>
20401dfe:	41d8                	lw	a4,4(a1)
20401e00:	00e04763          	bgtz	a4,20401e0e <__sflush_r+0x2a>
20401e04:	41b8                	lw	a4,64(a1)
20401e06:	00e04463          	bgtz	a4,20401e0e <__sflush_r+0x2a>
20401e0a:	4501                	li	a0,0
20401e0c:	a875                	j	20401ec8 <__sflush_r+0xe4>
20401e0e:	5458                	lw	a4,44(s0)
20401e10:	df6d                	beqz	a4,20401e0a <__sflush_r+0x26>
20401e12:	6685                	lui	a3,0x1
20401e14:	0004a903          	lw	s2,0(s1)
20401e18:	8ff5                	and	a5,a5,a3
20401e1a:	0004a023          	sw	zero,0(s1)
20401e1e:	cfa5                	beqz	a5,20401e96 <__sflush_r+0xb2>
20401e20:	4868                	lw	a0,84(s0)
20401e22:	00c45783          	lhu	a5,12(s0)
20401e26:	8b91                	andi	a5,a5,4
20401e28:	c799                	beqz	a5,20401e36 <__sflush_r+0x52>
20401e2a:	405c                	lw	a5,4(s0)
20401e2c:	8d1d                	sub	a0,a0,a5
20401e2e:	585c                	lw	a5,52(s0)
20401e30:	c399                	beqz	a5,20401e36 <__sflush_r+0x52>
20401e32:	403c                	lw	a5,64(s0)
20401e34:	8d1d                	sub	a0,a0,a5
20401e36:	545c                	lw	a5,44(s0)
20401e38:	500c                	lw	a1,32(s0)
20401e3a:	862a                	mv	a2,a0
20401e3c:	4681                	li	a3,0
20401e3e:	8526                	mv	a0,s1
20401e40:	9782                	jalr	a5
20401e42:	57fd                	li	a5,-1
20401e44:	00c45703          	lhu	a4,12(s0)
20401e48:	00f51d63          	bne	a0,a5,20401e62 <__sflush_r+0x7e>
20401e4c:	4094                	lw	a3,0(s1)
20401e4e:	47f5                	li	a5,29
20401e50:	08d7e363          	bltu	a5,a3,20401ed6 <__sflush_r+0xf2>
20401e54:	204007b7          	lui	a5,0x20400
20401e58:	0785                	addi	a5,a5,1
20401e5a:	00d7d7b3          	srl	a5,a5,a3
20401e5e:	8b85                	andi	a5,a5,1
20401e60:	cbbd                	beqz	a5,20401ed6 <__sflush_r+0xf2>
20401e62:	481c                	lw	a5,16(s0)
20401e64:	00042223          	sw	zero,4(s0)
20401e68:	c01c                	sw	a5,0(s0)
20401e6a:	6785                	lui	a5,0x1
20401e6c:	8f7d                	and	a4,a4,a5
20401e6e:	c719                	beqz	a4,20401e7c <__sflush_r+0x98>
20401e70:	57fd                	li	a5,-1
20401e72:	00f51463          	bne	a0,a5,20401e7a <__sflush_r+0x96>
20401e76:	409c                	lw	a5,0(s1)
20401e78:	e391                	bnez	a5,20401e7c <__sflush_r+0x98>
20401e7a:	c868                	sw	a0,84(s0)
20401e7c:	584c                	lw	a1,52(s0)
20401e7e:	0124a023          	sw	s2,0(s1)
20401e82:	d5c1                	beqz	a1,20401e0a <__sflush_r+0x26>
20401e84:	04440793          	addi	a5,s0,68
20401e88:	00f58463          	beq	a1,a5,20401e90 <__sflush_r+0xac>
20401e8c:	8526                	mv	a0,s1
20401e8e:	3c55                	jal	20401942 <_free_r>
20401e90:	02042a23          	sw	zero,52(s0)
20401e94:	bf9d                	j	20401e0a <__sflush_r+0x26>
20401e96:	500c                	lw	a1,32(s0)
20401e98:	4685                	li	a3,1
20401e9a:	4601                	li	a2,0
20401e9c:	8526                	mv	a0,s1
20401e9e:	9702                	jalr	a4
20401ea0:	57fd                	li	a5,-1
20401ea2:	f8f510e3          	bne	a0,a5,20401e22 <__sflush_r+0x3e>
20401ea6:	409c                	lw	a5,0(s1)
20401ea8:	dfad                	beqz	a5,20401e22 <__sflush_r+0x3e>
20401eaa:	4775                	li	a4,29
20401eac:	00e78563          	beq	a5,a4,20401eb6 <__sflush_r+0xd2>
20401eb0:	4759                	li	a4,22
20401eb2:	00e79563          	bne	a5,a4,20401ebc <__sflush_r+0xd8>
20401eb6:	0124a023          	sw	s2,0(s1)
20401eba:	bf81                	j	20401e0a <__sflush_r+0x26>
20401ebc:	00c45783          	lhu	a5,12(s0)
20401ec0:	0407e793          	ori	a5,a5,64
20401ec4:	00f41623          	sh	a5,12(s0)
20401ec8:	40f2                	lw	ra,28(sp)
20401eca:	4462                	lw	s0,24(sp)
20401ecc:	44d2                	lw	s1,20(sp)
20401ece:	4942                	lw	s2,16(sp)
20401ed0:	49b2                	lw	s3,12(sp)
20401ed2:	6105                	addi	sp,sp,32
20401ed4:	8082                	ret
20401ed6:	04076713          	ori	a4,a4,64
20401eda:	00e41623          	sh	a4,12(s0)
20401ede:	b7ed                	j	20401ec8 <__sflush_r+0xe4>
20401ee0:	0105a983          	lw	s3,16(a1)
20401ee4:	f20983e3          	beqz	s3,20401e0a <__sflush_r+0x26>
20401ee8:	0005a903          	lw	s2,0(a1)
20401eec:	8b8d                	andi	a5,a5,3
20401eee:	0135a023          	sw	s3,0(a1)
20401ef2:	41390933          	sub	s2,s2,s3
20401ef6:	4701                	li	a4,0
20401ef8:	e391                	bnez	a5,20401efc <__sflush_r+0x118>
20401efa:	49d8                	lw	a4,20(a1)
20401efc:	c418                	sw	a4,8(s0)
20401efe:	f12056e3          	blez	s2,20401e0a <__sflush_r+0x26>
20401f02:	541c                	lw	a5,40(s0)
20401f04:	500c                	lw	a1,32(s0)
20401f06:	86ca                	mv	a3,s2
20401f08:	864e                	mv	a2,s3
20401f0a:	8526                	mv	a0,s1
20401f0c:	9782                	jalr	a5
20401f0e:	00a04a63          	bgtz	a0,20401f22 <__sflush_r+0x13e>
20401f12:	00c45783          	lhu	a5,12(s0)
20401f16:	557d                	li	a0,-1
20401f18:	0407e793          	ori	a5,a5,64
20401f1c:	00f41623          	sh	a5,12(s0)
20401f20:	b765                	j	20401ec8 <__sflush_r+0xe4>
20401f22:	99aa                	add	s3,s3,a0
20401f24:	40a90933          	sub	s2,s2,a0
20401f28:	bfd9                	j	20401efe <__sflush_r+0x11a>

20401f2a <_fflush_r>:
_fflush_r():
20401f2a:	499c                	lw	a5,16(a1)
20401f2c:	cfb9                	beqz	a5,20401f8a <_fflush_r+0x60>
20401f2e:	1101                	addi	sp,sp,-32
20401f30:	cc22                	sw	s0,24(sp)
20401f32:	ce06                	sw	ra,28(sp)
20401f34:	842a                	mv	s0,a0
20401f36:	c511                	beqz	a0,20401f42 <_fflush_r+0x18>
20401f38:	4d1c                	lw	a5,24(a0)
20401f3a:	e781                	bnez	a5,20401f42 <_fflush_r+0x18>
20401f3c:	c62e                	sw	a1,12(sp)
20401f3e:	2221                	jal	20402046 <__sinit>
20401f40:	45b2                	lw	a1,12(sp)
20401f42:	ffffe797          	auipc	a5,0xffffe
20401f46:	4be78793          	addi	a5,a5,1214 # 20400400 <__sf_fake_stdin>
20401f4a:	00f59b63          	bne	a1,a5,20401f60 <_fflush_r+0x36>
20401f4e:	404c                	lw	a1,4(s0)
20401f50:	00c59783          	lh	a5,12(a1)
20401f54:	c795                	beqz	a5,20401f80 <_fflush_r+0x56>
20401f56:	8522                	mv	a0,s0
20401f58:	4462                	lw	s0,24(sp)
20401f5a:	40f2                	lw	ra,28(sp)
20401f5c:	6105                	addi	sp,sp,32
20401f5e:	b559                	j	20401de4 <__sflush_r>
20401f60:	ffffe797          	auipc	a5,0xffffe
20401f64:	4c078793          	addi	a5,a5,1216 # 20400420 <__sf_fake_stdout>
20401f68:	00f59463          	bne	a1,a5,20401f70 <_fflush_r+0x46>
20401f6c:	440c                	lw	a1,8(s0)
20401f6e:	b7cd                	j	20401f50 <_fflush_r+0x26>
20401f70:	ffffe797          	auipc	a5,0xffffe
20401f74:	47078793          	addi	a5,a5,1136 # 204003e0 <__sf_fake_stderr>
20401f78:	fcf59ce3          	bne	a1,a5,20401f50 <_fflush_r+0x26>
20401f7c:	444c                	lw	a1,12(s0)
20401f7e:	bfc9                	j	20401f50 <_fflush_r+0x26>
20401f80:	40f2                	lw	ra,28(sp)
20401f82:	4462                	lw	s0,24(sp)
20401f84:	4501                	li	a0,0
20401f86:	6105                	addi	sp,sp,32
20401f88:	8082                	ret
20401f8a:	4501                	li	a0,0
20401f8c:	8082                	ret

20401f8e <std>:
std():
20401f8e:	1141                	addi	sp,sp,-16
20401f90:	c422                	sw	s0,8(sp)
20401f92:	c606                	sw	ra,12(sp)
20401f94:	842a                	mv	s0,a0
20401f96:	00b51623          	sh	a1,12(a0)
20401f9a:	00c51723          	sh	a2,14(a0)
20401f9e:	00052023          	sw	zero,0(a0)
20401fa2:	00052223          	sw	zero,4(a0)
20401fa6:	00052423          	sw	zero,8(a0)
20401faa:	06052223          	sw	zero,100(a0)
20401fae:	00052823          	sw	zero,16(a0)
20401fb2:	00052a23          	sw	zero,20(a0)
20401fb6:	00052c23          	sw	zero,24(a0)
20401fba:	4621                	li	a2,8
20401fbc:	4581                	li	a1,0
20401fbe:	05c50513          	addi	a0,a0,92
20401fc2:	24f5                	jal	204022ae <memset>
20401fc4:	00000797          	auipc	a5,0x0
20401fc8:	69678793          	addi	a5,a5,1686 # 2040265a <__sread>
20401fcc:	d05c                	sw	a5,36(s0)
20401fce:	00000797          	auipc	a5,0x0
20401fd2:	6bc78793          	addi	a5,a5,1724 # 2040268a <__swrite>
20401fd6:	d41c                	sw	a5,40(s0)
20401fd8:	00000797          	auipc	a5,0x0
20401fdc:	70078793          	addi	a5,a5,1792 # 204026d8 <__sseek>
20401fe0:	d45c                	sw	a5,44(s0)
20401fe2:	00000797          	auipc	a5,0x0
20401fe6:	72c78793          	addi	a5,a5,1836 # 2040270e <__sclose>
20401fea:	40b2                	lw	ra,12(sp)
20401fec:	d000                	sw	s0,32(s0)
20401fee:	d81c                	sw	a5,48(s0)
20401ff0:	4422                	lw	s0,8(sp)
20401ff2:	0141                	addi	sp,sp,16
20401ff4:	8082                	ret

20401ff6 <_cleanup_r>:
_cleanup_r():
20401ff6:	00000597          	auipc	a1,0x0
20401ffa:	f3458593          	addi	a1,a1,-204 # 20401f2a <_fflush_r>
20401ffe:	a2b9                	j	2040214c <_fwalk_reent>

20402000 <__sfmoreglue>:
__sfmoreglue():
20402000:	1141                	addi	sp,sp,-16
20402002:	c226                	sw	s1,4(sp)
20402004:	06800613          	li	a2,104
20402008:	fff58493          	addi	s1,a1,-1
2040200c:	02c484b3          	mul	s1,s1,a2
20402010:	c04a                	sw	s2,0(sp)
20402012:	892e                	mv	s2,a1
20402014:	c422                	sw	s0,8(sp)
20402016:	c606                	sw	ra,12(sp)
20402018:	07448593          	addi	a1,s1,116
2040201c:	9cdff0ef          	jal	ra,204019e8 <_malloc_r>
20402020:	842a                	mv	s0,a0
20402022:	c919                	beqz	a0,20402038 <__sfmoreglue+0x38>
20402024:	00052023          	sw	zero,0(a0)
20402028:	01252223          	sw	s2,4(a0)
2040202c:	0531                	addi	a0,a0,12
2040202e:	c408                	sw	a0,8(s0)
20402030:	06848613          	addi	a2,s1,104
20402034:	4581                	li	a1,0
20402036:	2ca5                	jal	204022ae <memset>
20402038:	40b2                	lw	ra,12(sp)
2040203a:	8522                	mv	a0,s0
2040203c:	4422                	lw	s0,8(sp)
2040203e:	4492                	lw	s1,4(sp)
20402040:	4902                	lw	s2,0(sp)
20402042:	0141                	addi	sp,sp,16
20402044:	8082                	ret

20402046 <__sinit>:
__sinit():
20402046:	4d1c                	lw	a5,24(a0)
20402048:	e3bd                	bnez	a5,204020ae <__sinit+0x68>
2040204a:	1141                	addi	sp,sp,-16
2040204c:	c422                	sw	s0,8(sp)
2040204e:	c606                	sw	ra,12(sp)
20402050:	00000797          	auipc	a5,0x0
20402054:	fa678793          	addi	a5,a5,-90 # 20401ff6 <_cleanup_r>
20402058:	d51c                	sw	a5,40(a0)
2040205a:	04052423          	sw	zero,72(a0)
2040205e:	04052623          	sw	zero,76(a0)
20402062:	04052823          	sw	zero,80(a0)
20402066:	fffff797          	auipc	a5,0xfffff
2040206a:	fba7a783          	lw	a5,-70(a5) # 20401020 <_global_impure_ptr>
2040206e:	842a                	mv	s0,a0
20402070:	00f51463          	bne	a0,a5,20402078 <__sinit+0x32>
20402074:	4785                	li	a5,1
20402076:	cd1c                	sw	a5,24(a0)
20402078:	8522                	mv	a0,s0
2040207a:	281d                	jal	204020b0 <__sfp>
2040207c:	c048                	sw	a0,4(s0)
2040207e:	8522                	mv	a0,s0
20402080:	2805                	jal	204020b0 <__sfp>
20402082:	c408                	sw	a0,8(s0)
20402084:	8522                	mv	a0,s0
20402086:	202d                	jal	204020b0 <__sfp>
20402088:	c448                	sw	a0,12(s0)
2040208a:	4048                	lw	a0,4(s0)
2040208c:	4601                	li	a2,0
2040208e:	4591                	li	a1,4
20402090:	3dfd                	jal	20401f8e <std>
20402092:	4408                	lw	a0,8(s0)
20402094:	4605                	li	a2,1
20402096:	45a5                	li	a1,9
20402098:	3ddd                	jal	20401f8e <std>
2040209a:	4448                	lw	a0,12(s0)
2040209c:	4609                	li	a2,2
2040209e:	45c9                	li	a1,18
204020a0:	35fd                	jal	20401f8e <std>
204020a2:	4785                	li	a5,1
204020a4:	40b2                	lw	ra,12(sp)
204020a6:	cc1c                	sw	a5,24(s0)
204020a8:	4422                	lw	s0,8(sp)
204020aa:	0141                	addi	sp,sp,16
204020ac:	8082                	ret
204020ae:	8082                	ret

204020b0 <__sfp>:
__sfp():
204020b0:	1141                	addi	sp,sp,-16
204020b2:	c226                	sw	s1,4(sp)
204020b4:	fffff497          	auipc	s1,0xfffff
204020b8:	f6c4a483          	lw	s1,-148(s1) # 20401020 <_global_impure_ptr>
204020bc:	4c9c                	lw	a5,24(s1)
204020be:	c04a                	sw	s2,0(sp)
204020c0:	c606                	sw	ra,12(sp)
204020c2:	c422                	sw	s0,8(sp)
204020c4:	892a                	mv	s2,a0
204020c6:	e399                	bnez	a5,204020cc <__sfp+0x1c>
204020c8:	8526                	mv	a0,s1
204020ca:	3fb5                	jal	20402046 <__sinit>
204020cc:	04848493          	addi	s1,s1,72
204020d0:	4480                	lw	s0,8(s1)
204020d2:	40dc                	lw	a5,4(s1)
204020d4:	17fd                	addi	a5,a5,-1
204020d6:	0007d663          	bgez	a5,204020e2 <__sfp+0x32>
204020da:	409c                	lw	a5,0(s1)
204020dc:	cfb1                	beqz	a5,20402138 <__sfp+0x88>
204020de:	4084                	lw	s1,0(s1)
204020e0:	bfc5                	j	204020d0 <__sfp+0x20>
204020e2:	00c41703          	lh	a4,12(s0)
204020e6:	e731                	bnez	a4,20402132 <__sfp+0x82>
204020e8:	77c1                	lui	a5,0xffff0
204020ea:	0785                	addi	a5,a5,1
204020ec:	06042223          	sw	zero,100(s0)
204020f0:	00042023          	sw	zero,0(s0)
204020f4:	00042223          	sw	zero,4(s0)
204020f8:	00042423          	sw	zero,8(s0)
204020fc:	c45c                	sw	a5,12(s0)
204020fe:	00042823          	sw	zero,16(s0)
20402102:	00042a23          	sw	zero,20(s0)
20402106:	00042c23          	sw	zero,24(s0)
2040210a:	4621                	li	a2,8
2040210c:	4581                	li	a1,0
2040210e:	05c40513          	addi	a0,s0,92
20402112:	2a71                	jal	204022ae <memset>
20402114:	02042a23          	sw	zero,52(s0)
20402118:	02042c23          	sw	zero,56(s0)
2040211c:	04042423          	sw	zero,72(s0)
20402120:	04042623          	sw	zero,76(s0)
20402124:	40b2                	lw	ra,12(sp)
20402126:	8522                	mv	a0,s0
20402128:	4422                	lw	s0,8(sp)
2040212a:	4492                	lw	s1,4(sp)
2040212c:	4902                	lw	s2,0(sp)
2040212e:	0141                	addi	sp,sp,16
20402130:	8082                	ret
20402132:	06840413          	addi	s0,s0,104
20402136:	bf79                	j	204020d4 <__sfp+0x24>
20402138:	4591                	li	a1,4
2040213a:	854a                	mv	a0,s2
2040213c:	35d1                	jal	20402000 <__sfmoreglue>
2040213e:	c088                	sw	a0,0(s1)
20402140:	842a                	mv	s0,a0
20402142:	fd51                	bnez	a0,204020de <__sfp+0x2e>
20402144:	47b1                	li	a5,12
20402146:	00f92023          	sw	a5,0(s2)
2040214a:	bfe9                	j	20402124 <__sfp+0x74>

2040214c <_fwalk_reent>:
_fwalk_reent():
2040214c:	7179                	addi	sp,sp,-48
2040214e:	d422                	sw	s0,40(sp)
20402150:	d04a                	sw	s2,32(sp)
20402152:	ce4e                	sw	s3,28(sp)
20402154:	cc52                	sw	s4,24(sp)
20402156:	c85a                	sw	s6,16(sp)
20402158:	c65e                	sw	s7,12(sp)
2040215a:	d606                	sw	ra,44(sp)
2040215c:	d226                	sw	s1,36(sp)
2040215e:	ca56                	sw	s5,20(sp)
20402160:	892a                	mv	s2,a0
20402162:	8a2e                	mv	s4,a1
20402164:	04850413          	addi	s0,a0,72
20402168:	4981                	li	s3,0
2040216a:	4b05                	li	s6,1
2040216c:	5bfd                	li	s7,-1
2040216e:	4404                	lw	s1,8(s0)
20402170:	00442a83          	lw	s5,4(s0)
20402174:	1afd                	addi	s5,s5,-1
20402176:	020ad063          	bgez	s5,20402196 <_fwalk_reent+0x4a>
2040217a:	4000                	lw	s0,0(s0)
2040217c:	f86d                	bnez	s0,2040216e <_fwalk_reent+0x22>
2040217e:	50b2                	lw	ra,44(sp)
20402180:	5422                	lw	s0,40(sp)
20402182:	5492                	lw	s1,36(sp)
20402184:	5902                	lw	s2,32(sp)
20402186:	4a62                	lw	s4,24(sp)
20402188:	4ad2                	lw	s5,20(sp)
2040218a:	4b42                	lw	s6,16(sp)
2040218c:	4bb2                	lw	s7,12(sp)
2040218e:	854e                	mv	a0,s3
20402190:	49f2                	lw	s3,28(sp)
20402192:	6145                	addi	sp,sp,48
20402194:	8082                	ret
20402196:	00c4d783          	lhu	a5,12(s1)
2040219a:	00fb7b63          	bgeu	s6,a5,204021b0 <_fwalk_reent+0x64>
2040219e:	00e49783          	lh	a5,14(s1)
204021a2:	01778763          	beq	a5,s7,204021b0 <_fwalk_reent+0x64>
204021a6:	85a6                	mv	a1,s1
204021a8:	854a                	mv	a0,s2
204021aa:	9a02                	jalr	s4
204021ac:	00a9e9b3          	or	s3,s3,a0
204021b0:	06848493          	addi	s1,s1,104
204021b4:	b7c1                	j	20402174 <_fwalk_reent+0x28>

204021b6 <__swhatbuf_r>:
__swhatbuf_r():
204021b6:	7159                	addi	sp,sp,-112
204021b8:	d0ca                	sw	s2,96(sp)
204021ba:	892e                	mv	s2,a1
204021bc:	00e59583          	lh	a1,14(a1)
204021c0:	d4a2                	sw	s0,104(sp)
204021c2:	d2a6                	sw	s1,100(sp)
204021c4:	d686                	sw	ra,108(sp)
204021c6:	8432                	mv	s0,a2
204021c8:	84b6                	mv	s1,a3
204021ca:	0005dc63          	bgez	a1,204021e2 <__swhatbuf_r+0x2c>
204021ce:	00c91783          	lh	a5,12(s2)
204021d2:	0004a023          	sw	zero,0(s1)
204021d6:	0807f793          	andi	a5,a5,128
204021da:	e38d                	bnez	a5,204021fc <__swhatbuf_r+0x46>
204021dc:	40000793          	li	a5,1024
204021e0:	a005                	j	20402200 <__swhatbuf_r+0x4a>
204021e2:	0030                	addi	a2,sp,8
204021e4:	2b41                	jal	20402774 <_fstat_r>
204021e6:	fe0544e3          	bltz	a0,204021ce <__swhatbuf_r+0x18>
204021ea:	4732                	lw	a4,12(sp)
204021ec:	67bd                	lui	a5,0xf
204021ee:	8ff9                	and	a5,a5,a4
204021f0:	7779                	lui	a4,0xffffe
204021f2:	97ba                	add	a5,a5,a4
204021f4:	0017b793          	seqz	a5,a5
204021f8:	c09c                	sw	a5,0(s1)
204021fa:	b7cd                	j	204021dc <__swhatbuf_r+0x26>
204021fc:	04000793          	li	a5,64
20402200:	50b6                	lw	ra,108(sp)
20402202:	c01c                	sw	a5,0(s0)
20402204:	5426                	lw	s0,104(sp)
20402206:	5496                	lw	s1,100(sp)
20402208:	5906                	lw	s2,96(sp)
2040220a:	4501                	li	a0,0
2040220c:	6165                	addi	sp,sp,112
2040220e:	8082                	ret

20402210 <__smakebuf_r>:
__smakebuf_r():
20402210:	00c5d783          	lhu	a5,12(a1)
20402214:	1101                	addi	sp,sp,-32
20402216:	cc22                	sw	s0,24(sp)
20402218:	ce06                	sw	ra,28(sp)
2040221a:	ca26                	sw	s1,20(sp)
2040221c:	c84a                	sw	s2,16(sp)
2040221e:	8b89                	andi	a5,a5,2
20402220:	842e                	mv	s0,a1
20402222:	cf89                	beqz	a5,2040223c <__smakebuf_r+0x2c>
20402224:	04740793          	addi	a5,s0,71
20402228:	c01c                	sw	a5,0(s0)
2040222a:	c81c                	sw	a5,16(s0)
2040222c:	4785                	li	a5,1
2040222e:	c85c                	sw	a5,20(s0)
20402230:	40f2                	lw	ra,28(sp)
20402232:	4462                	lw	s0,24(sp)
20402234:	44d2                	lw	s1,20(sp)
20402236:	4942                	lw	s2,16(sp)
20402238:	6105                	addi	sp,sp,32
2040223a:	8082                	ret
2040223c:	0074                	addi	a3,sp,12
2040223e:	0030                	addi	a2,sp,8
20402240:	892a                	mv	s2,a0
20402242:	3f95                	jal	204021b6 <__swhatbuf_r>
20402244:	45a2                	lw	a1,8(sp)
20402246:	84aa                	mv	s1,a0
20402248:	854a                	mv	a0,s2
2040224a:	f9eff0ef          	jal	ra,204019e8 <_malloc_r>
2040224e:	ed01                	bnez	a0,20402266 <__smakebuf_r+0x56>
20402250:	00c41783          	lh	a5,12(s0)
20402254:	2007f713          	andi	a4,a5,512
20402258:	ff61                	bnez	a4,20402230 <__smakebuf_r+0x20>
2040225a:	9bf1                	andi	a5,a5,-4
2040225c:	0027e793          	ori	a5,a5,2
20402260:	00f41623          	sh	a5,12(s0)
20402264:	b7c1                	j	20402224 <__smakebuf_r+0x14>
20402266:	00000797          	auipc	a5,0x0
2040226a:	d9078793          	addi	a5,a5,-624 # 20401ff6 <_cleanup_r>
2040226e:	02f92423          	sw	a5,40(s2)
20402272:	00c45783          	lhu	a5,12(s0)
20402276:	c008                	sw	a0,0(s0)
20402278:	c808                	sw	a0,16(s0)
2040227a:	0807e793          	ori	a5,a5,128
2040227e:	00f41623          	sh	a5,12(s0)
20402282:	47a2                	lw	a5,8(sp)
20402284:	c85c                	sw	a5,20(s0)
20402286:	47b2                	lw	a5,12(sp)
20402288:	cf89                	beqz	a5,204022a2 <__smakebuf_r+0x92>
2040228a:	00e41583          	lh	a1,14(s0)
2040228e:	854a                	mv	a0,s2
20402290:	2b11                	jal	204027a4 <_isatty_r>
20402292:	c901                	beqz	a0,204022a2 <__smakebuf_r+0x92>
20402294:	00c45783          	lhu	a5,12(s0)
20402298:	9bf1                	andi	a5,a5,-4
2040229a:	0017e793          	ori	a5,a5,1
2040229e:	00f41623          	sh	a5,12(s0)
204022a2:	00c45503          	lhu	a0,12(s0)
204022a6:	8cc9                	or	s1,s1,a0
204022a8:	00941623          	sh	s1,12(s0)
204022ac:	b751                	j	20402230 <__smakebuf_r+0x20>

204022ae <memset>:
memset():
204022ae:	433d                	li	t1,15
204022b0:	872a                	mv	a4,a0
204022b2:	02c37363          	bgeu	t1,a2,204022d8 <memset+0x2a>
204022b6:	00f77793          	andi	a5,a4,15
204022ba:	efbd                	bnez	a5,20402338 <memset+0x8a>
204022bc:	e5ad                	bnez	a1,20402326 <memset+0x78>
204022be:	ff067693          	andi	a3,a2,-16
204022c2:	8a3d                	andi	a2,a2,15
204022c4:	96ba                	add	a3,a3,a4
204022c6:	c30c                	sw	a1,0(a4)
204022c8:	c34c                	sw	a1,4(a4)
204022ca:	c70c                	sw	a1,8(a4)
204022cc:	c74c                	sw	a1,12(a4)
204022ce:	0741                	addi	a4,a4,16
204022d0:	fed76be3          	bltu	a4,a3,204022c6 <memset+0x18>
204022d4:	e211                	bnez	a2,204022d8 <memset+0x2a>
204022d6:	8082                	ret
204022d8:	40c306b3          	sub	a3,t1,a2
204022dc:	068a                	slli	a3,a3,0x2
204022de:	00000297          	auipc	t0,0x0
204022e2:	9696                	add	a3,a3,t0
204022e4:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
204022e8:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffbeee>
204022ec:	00b706a3          	sb	a1,13(a4)
204022f0:	00b70623          	sb	a1,12(a4)
204022f4:	00b705a3          	sb	a1,11(a4)
204022f8:	00b70523          	sb	a1,10(a4)
204022fc:	00b704a3          	sb	a1,9(a4)
20402300:	00b70423          	sb	a1,8(a4)
20402304:	00b703a3          	sb	a1,7(a4)
20402308:	00b70323          	sb	a1,6(a4)
2040230c:	00b702a3          	sb	a1,5(a4)
20402310:	00b70223          	sb	a1,4(a4)
20402314:	00b701a3          	sb	a1,3(a4)
20402318:	00b70123          	sb	a1,2(a4)
2040231c:	00b700a3          	sb	a1,1(a4)
20402320:	00b70023          	sb	a1,0(a4)
20402324:	8082                	ret
20402326:	0ff5f593          	zext.b	a1,a1
2040232a:	00859693          	slli	a3,a1,0x8
2040232e:	8dd5                	or	a1,a1,a3
20402330:	01059693          	slli	a3,a1,0x10
20402334:	8dd5                	or	a1,a1,a3
20402336:	b761                	j	204022be <memset+0x10>
20402338:	00279693          	slli	a3,a5,0x2
2040233c:	00000297          	auipc	t0,0x0
20402340:	9696                	add	a3,a3,t0
20402342:	8286                	mv	t0,ra
20402344:	fa8680e7          	jalr	-88(a3)
20402348:	8096                	mv	ra,t0
2040234a:	17c1                	addi	a5,a5,-16
2040234c:	8f1d                	sub	a4,a4,a5
2040234e:	963e                	add	a2,a2,a5
20402350:	f8c374e3          	bgeu	t1,a2,204022d8 <memset+0x2a>
20402354:	b7a5                	j	204022bc <memset+0xe>

20402356 <__malloc_lock>:
__malloc_lock():
20402356:	8082                	ret

20402358 <__malloc_unlock>:
__malloc_unlock():
20402358:	8082                	ret

2040235a <__sfputc_r>:
__sfputc_r():
2040235a:	461c                	lw	a5,8(a2)
2040235c:	17fd                	addi	a5,a5,-1
2040235e:	c61c                	sw	a5,8(a2)
20402360:	0007da63          	bgez	a5,20402374 <__sfputc_r+0x1a>
20402364:	4e18                	lw	a4,24(a2)
20402366:	00e7c563          	blt	a5,a4,20402370 <__sfputc_r+0x16>
2040236a:	47a9                	li	a5,10
2040236c:	00f59463          	bne	a1,a5,20402374 <__sfputc_r+0x1a>
20402370:	8abff06f          	j	20401c1a <__swbuf_r>
20402374:	421c                	lw	a5,0(a2)
20402376:	852e                	mv	a0,a1
20402378:	00178713          	addi	a4,a5,1
2040237c:	c218                	sw	a4,0(a2)
2040237e:	00b78023          	sb	a1,0(a5)
20402382:	8082                	ret

20402384 <__sfputs_r>:
__sfputs_r():
20402384:	1101                	addi	sp,sp,-32
20402386:	cc22                	sw	s0,24(sp)
20402388:	ca26                	sw	s1,20(sp)
2040238a:	c84a                	sw	s2,16(sp)
2040238c:	c64e                	sw	s3,12(sp)
2040238e:	c452                	sw	s4,8(sp)
20402390:	ce06                	sw	ra,28(sp)
20402392:	892a                	mv	s2,a0
20402394:	89ae                	mv	s3,a1
20402396:	8432                	mv	s0,a2
20402398:	00d604b3          	add	s1,a2,a3
2040239c:	5a7d                	li	s4,-1
2040239e:	00941463          	bne	s0,s1,204023a6 <__sfputs_r+0x22>
204023a2:	4501                	li	a0,0
204023a4:	a809                	j	204023b6 <__sfputs_r+0x32>
204023a6:	00044583          	lbu	a1,0(s0)
204023aa:	864e                	mv	a2,s3
204023ac:	854a                	mv	a0,s2
204023ae:	3775                	jal	2040235a <__sfputc_r>
204023b0:	0405                	addi	s0,s0,1
204023b2:	ff4516e3          	bne	a0,s4,2040239e <__sfputs_r+0x1a>
204023b6:	40f2                	lw	ra,28(sp)
204023b8:	4462                	lw	s0,24(sp)
204023ba:	44d2                	lw	s1,20(sp)
204023bc:	4942                	lw	s2,16(sp)
204023be:	49b2                	lw	s3,12(sp)
204023c0:	4a22                	lw	s4,8(sp)
204023c2:	6105                	addi	sp,sp,32
204023c4:	8082                	ret

204023c6 <_vfiprintf_r>:
_vfiprintf_r():
204023c6:	7135                	addi	sp,sp,-160
204023c8:	cd22                	sw	s0,152(sp)
204023ca:	cb26                	sw	s1,148(sp)
204023cc:	c94a                	sw	s2,144(sp)
204023ce:	c74e                	sw	s3,140(sp)
204023d0:	cf06                	sw	ra,156(sp)
204023d2:	c552                	sw	s4,136(sp)
204023d4:	c356                	sw	s5,132(sp)
204023d6:	c15a                	sw	s6,128(sp)
204023d8:	dede                	sw	s7,124(sp)
204023da:	dce2                	sw	s8,120(sp)
204023dc:	dae6                	sw	s9,116(sp)
204023de:	89aa                	mv	s3,a0
204023e0:	84ae                	mv	s1,a1
204023e2:	8932                	mv	s2,a2
204023e4:	8436                	mv	s0,a3
204023e6:	c501                	beqz	a0,204023ee <_vfiprintf_r+0x28>
204023e8:	4d1c                	lw	a5,24(a0)
204023ea:	e391                	bnez	a5,204023ee <_vfiprintf_r+0x28>
204023ec:	39a9                	jal	20402046 <__sinit>
204023ee:	ffffe797          	auipc	a5,0xffffe
204023f2:	01278793          	addi	a5,a5,18 # 20400400 <__sf_fake_stdin>
204023f6:	0cf49b63          	bne	s1,a5,204024cc <_vfiprintf_r+0x106>
204023fa:	0049a483          	lw	s1,4(s3)
204023fe:	00c4d783          	lhu	a5,12(s1)
20402402:	8ba1                	andi	a5,a5,8
20402404:	c7f5                	beqz	a5,204024f0 <_vfiprintf_r+0x12a>
20402406:	489c                	lw	a5,16(s1)
20402408:	c7e5                	beqz	a5,204024f0 <_vfiprintf_r+0x12a>
2040240a:	02000793          	li	a5,32
2040240e:	02f104a3          	sb	a5,41(sp)
20402412:	03000793          	li	a5,48
20402416:	d202                	sw	zero,36(sp)
20402418:	02f10523          	sb	a5,42(sp)
2040241c:	c622                	sw	s0,12(sp)
2040241e:	02500b93          	li	s7,37
20402422:	ffffea97          	auipc	s5,0xffffe
20402426:	01ea8a93          	addi	s5,s5,30 # 20400440 <__sf_fake_stdout+0x20>
2040242a:	4c05                	li	s8,1
2040242c:	4b29                	li	s6,10
2040242e:	844a                	mv	s0,s2
20402430:	00044783          	lbu	a5,0(s0)
20402434:	c399                	beqz	a5,2040243a <_vfiprintf_r+0x74>
20402436:	0f779063          	bne	a5,s7,20402516 <_vfiprintf_r+0x150>
2040243a:	41240cb3          	sub	s9,s0,s2
2040243e:	01240d63          	beq	s0,s2,20402458 <_vfiprintf_r+0x92>
20402442:	86e6                	mv	a3,s9
20402444:	864a                	mv	a2,s2
20402446:	85a6                	mv	a1,s1
20402448:	854e                	mv	a0,s3
2040244a:	3f2d                	jal	20402384 <__sfputs_r>
2040244c:	57fd                	li	a5,-1
2040244e:	1ef50463          	beq	a0,a5,20402636 <_vfiprintf_r+0x270>
20402452:	5792                	lw	a5,36(sp)
20402454:	97e6                	add	a5,a5,s9
20402456:	d23e                	sw	a5,36(sp)
20402458:	00044783          	lbu	a5,0(s0)
2040245c:	1c078d63          	beqz	a5,20402636 <_vfiprintf_r+0x270>
20402460:	57fd                	li	a5,-1
20402462:	00140913          	addi	s2,s0,1
20402466:	c802                	sw	zero,16(sp)
20402468:	ce02                	sw	zero,28(sp)
2040246a:	ca3e                	sw	a5,20(sp)
2040246c:	cc02                	sw	zero,24(sp)
2040246e:	040109a3          	sb	zero,83(sp)
20402472:	d482                	sw	zero,104(sp)
20402474:	00094583          	lbu	a1,0(s2)
20402478:	4615                	li	a2,5
2040247a:	8556                	mv	a0,s5
2040247c:	2661                	jal	20402804 <memchr>
2040247e:	47c2                	lw	a5,16(sp)
20402480:	00190413          	addi	s0,s2,1
20402484:	e959                	bnez	a0,2040251a <_vfiprintf_r+0x154>
20402486:	0107f713          	andi	a4,a5,16
2040248a:	c709                	beqz	a4,20402494 <_vfiprintf_r+0xce>
2040248c:	02000713          	li	a4,32
20402490:	04e109a3          	sb	a4,83(sp)
20402494:	0087f713          	andi	a4,a5,8
20402498:	c709                	beqz	a4,204024a2 <_vfiprintf_r+0xdc>
2040249a:	02b00713          	li	a4,43
2040249e:	04e109a3          	sb	a4,83(sp)
204024a2:	00094683          	lbu	a3,0(s2)
204024a6:	02a00713          	li	a4,42
204024aa:	08e68063          	beq	a3,a4,2040252a <_vfiprintf_r+0x164>
204024ae:	47f2                	lw	a5,28(sp)
204024b0:	844a                	mv	s0,s2
204024b2:	4681                	li	a3,0
204024b4:	4625                	li	a2,9
204024b6:	00044703          	lbu	a4,0(s0)
204024ba:	00140593          	addi	a1,s0,1
204024be:	fd070713          	addi	a4,a4,-48
204024c2:	0ae67963          	bgeu	a2,a4,20402574 <_vfiprintf_r+0x1ae>
204024c6:	cab5                	beqz	a3,2040253a <_vfiprintf_r+0x174>
204024c8:	ce3e                	sw	a5,28(sp)
204024ca:	a885                	j	2040253a <_vfiprintf_r+0x174>
204024cc:	ffffe797          	auipc	a5,0xffffe
204024d0:	f5478793          	addi	a5,a5,-172 # 20400420 <__sf_fake_stdout>
204024d4:	00f49563          	bne	s1,a5,204024de <_vfiprintf_r+0x118>
204024d8:	0089a483          	lw	s1,8(s3)
204024dc:	b70d                	j	204023fe <_vfiprintf_r+0x38>
204024de:	ffffe797          	auipc	a5,0xffffe
204024e2:	f0278793          	addi	a5,a5,-254 # 204003e0 <__sf_fake_stderr>
204024e6:	f0f49ce3          	bne	s1,a5,204023fe <_vfiprintf_r+0x38>
204024ea:	00c9a483          	lw	s1,12(s3)
204024ee:	bf01                	j	204023fe <_vfiprintf_r+0x38>
204024f0:	85a6                	mv	a1,s1
204024f2:	854e                	mv	a0,s3
204024f4:	fe6ff0ef          	jal	ra,20401cda <__swsetup_r>
204024f8:	d909                	beqz	a0,2040240a <_vfiprintf_r+0x44>
204024fa:	557d                	li	a0,-1
204024fc:	40fa                	lw	ra,156(sp)
204024fe:	446a                	lw	s0,152(sp)
20402500:	44da                	lw	s1,148(sp)
20402502:	494a                	lw	s2,144(sp)
20402504:	49ba                	lw	s3,140(sp)
20402506:	4a2a                	lw	s4,136(sp)
20402508:	4a9a                	lw	s5,132(sp)
2040250a:	4b0a                	lw	s6,128(sp)
2040250c:	5bf6                	lw	s7,124(sp)
2040250e:	5c66                	lw	s8,120(sp)
20402510:	5cd6                	lw	s9,116(sp)
20402512:	610d                	addi	sp,sp,160
20402514:	8082                	ret
20402516:	0405                	addi	s0,s0,1
20402518:	bf21                	j	20402430 <_vfiprintf_r+0x6a>
2040251a:	41550533          	sub	a0,a0,s5
2040251e:	00ac1533          	sll	a0,s8,a0
20402522:	8fc9                	or	a5,a5,a0
20402524:	c83e                	sw	a5,16(sp)
20402526:	8922                	mv	s2,s0
20402528:	b7b1                	j	20402474 <_vfiprintf_r+0xae>
2040252a:	4732                	lw	a4,12(sp)
2040252c:	00470693          	addi	a3,a4,4
20402530:	4318                	lw	a4,0(a4)
20402532:	c636                	sw	a3,12(sp)
20402534:	02074963          	bltz	a4,20402566 <_vfiprintf_r+0x1a0>
20402538:	ce3a                	sw	a4,28(sp)
2040253a:	00044703          	lbu	a4,0(s0)
2040253e:	02e00793          	li	a5,46
20402542:	04f71f63          	bne	a4,a5,204025a0 <_vfiprintf_r+0x1da>
20402546:	00144703          	lbu	a4,1(s0)
2040254a:	02a00793          	li	a5,42
2040254e:	02f71b63          	bne	a4,a5,20402584 <_vfiprintf_r+0x1be>
20402552:	47b2                	lw	a5,12(sp)
20402554:	0409                	addi	s0,s0,2
20402556:	00478713          	addi	a4,a5,4
2040255a:	439c                	lw	a5,0(a5)
2040255c:	c63a                	sw	a4,12(sp)
2040255e:	0207c163          	bltz	a5,20402580 <_vfiprintf_r+0x1ba>
20402562:	ca3e                	sw	a5,20(sp)
20402564:	a835                	j	204025a0 <_vfiprintf_r+0x1da>
20402566:	40e00733          	neg	a4,a4
2040256a:	0027e793          	ori	a5,a5,2
2040256e:	ce3a                	sw	a4,28(sp)
20402570:	c83e                	sw	a5,16(sp)
20402572:	b7e1                	j	2040253a <_vfiprintf_r+0x174>
20402574:	036787b3          	mul	a5,a5,s6
20402578:	842e                	mv	s0,a1
2040257a:	4685                	li	a3,1
2040257c:	97ba                	add	a5,a5,a4
2040257e:	bf25                	j	204024b6 <_vfiprintf_r+0xf0>
20402580:	57fd                	li	a5,-1
20402582:	b7c5                	j	20402562 <_vfiprintf_r+0x19c>
20402584:	0405                	addi	s0,s0,1
20402586:	ca02                	sw	zero,20(sp)
20402588:	4681                	li	a3,0
2040258a:	4781                	li	a5,0
2040258c:	4625                	li	a2,9
2040258e:	00044703          	lbu	a4,0(s0)
20402592:	00140593          	addi	a1,s0,1
20402596:	fd070713          	addi	a4,a4,-48
2040259a:	06e67463          	bgeu	a2,a4,20402602 <_vfiprintf_r+0x23c>
2040259e:	f2f1                	bnez	a3,20402562 <_vfiprintf_r+0x19c>
204025a0:	00044583          	lbu	a1,0(s0)
204025a4:	460d                	li	a2,3
204025a6:	ffffe517          	auipc	a0,0xffffe
204025aa:	ea250513          	addi	a0,a0,-350 # 20400448 <__sf_fake_stdout+0x28>
204025ae:	2c99                	jal	20402804 <memchr>
204025b0:	cd11                	beqz	a0,204025cc <_vfiprintf_r+0x206>
204025b2:	ffffe797          	auipc	a5,0xffffe
204025b6:	e9678793          	addi	a5,a5,-362 # 20400448 <__sf_fake_stdout+0x28>
204025ba:	8d1d                	sub	a0,a0,a5
204025bc:	04000793          	li	a5,64
204025c0:	00a797b3          	sll	a5,a5,a0
204025c4:	4542                	lw	a0,16(sp)
204025c6:	0405                	addi	s0,s0,1
204025c8:	8d5d                	or	a0,a0,a5
204025ca:	c82a                	sw	a0,16(sp)
204025cc:	00044583          	lbu	a1,0(s0)
204025d0:	4619                	li	a2,6
204025d2:	ffffe517          	auipc	a0,0xffffe
204025d6:	e7a50513          	addi	a0,a0,-390 # 2040044c <__sf_fake_stdout+0x2c>
204025da:	00140913          	addi	s2,s0,1
204025de:	02b10423          	sb	a1,40(sp)
204025e2:	240d                	jal	20402804 <memchr>
204025e4:	c12d                	beqz	a0,20402646 <_vfiprintf_r+0x280>
204025e6:	00000793          	li	a5,0
204025ea:	e795                	bnez	a5,20402616 <_vfiprintf_r+0x250>
204025ec:	4742                	lw	a4,16(sp)
204025ee:	47b2                	lw	a5,12(sp)
204025f0:	10077713          	andi	a4,a4,256
204025f4:	cf09                	beqz	a4,2040260e <_vfiprintf_r+0x248>
204025f6:	0791                	addi	a5,a5,4
204025f8:	c63e                	sw	a5,12(sp)
204025fa:	5792                	lw	a5,36(sp)
204025fc:	97d2                	add	a5,a5,s4
204025fe:	d23e                	sw	a5,36(sp)
20402600:	b53d                	j	2040242e <_vfiprintf_r+0x68>
20402602:	036787b3          	mul	a5,a5,s6
20402606:	842e                	mv	s0,a1
20402608:	4685                	li	a3,1
2040260a:	97ba                	add	a5,a5,a4
2040260c:	b749                	j	2040258e <_vfiprintf_r+0x1c8>
2040260e:	079d                	addi	a5,a5,7
20402610:	9be1                	andi	a5,a5,-8
20402612:	07a1                	addi	a5,a5,8
20402614:	b7d5                	j	204025f8 <_vfiprintf_r+0x232>
20402616:	0078                	addi	a4,sp,12
20402618:	00000697          	auipc	a3,0x0
2040261c:	d6c68693          	addi	a3,a3,-660 # 20402384 <__sfputs_r>
20402620:	8626                	mv	a2,s1
20402622:	080c                	addi	a1,sp,16
20402624:	854e                	mv	a0,s3
20402626:	00000097          	auipc	ra,0x0
2040262a:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
2040262e:	57fd                	li	a5,-1
20402630:	8a2a                	mv	s4,a0
20402632:	fcf514e3          	bne	a0,a5,204025fa <_vfiprintf_r+0x234>
20402636:	00c4d783          	lhu	a5,12(s1)
2040263a:	0407f793          	andi	a5,a5,64
2040263e:	ea079ee3          	bnez	a5,204024fa <_vfiprintf_r+0x134>
20402642:	5512                	lw	a0,36(sp)
20402644:	bd65                	j	204024fc <_vfiprintf_r+0x136>
20402646:	0078                	addi	a4,sp,12
20402648:	00000697          	auipc	a3,0x0
2040264c:	d3c68693          	addi	a3,a3,-708 # 20402384 <__sfputs_r>
20402650:	8626                	mv	a2,s1
20402652:	080c                	addi	a1,sp,16
20402654:	854e                	mv	a0,s3
20402656:	2cd1                	jal	2040292a <_printf_i>
20402658:	bfd9                	j	2040262e <_vfiprintf_r+0x268>

2040265a <__sread>:
__sread():
2040265a:	1141                	addi	sp,sp,-16
2040265c:	c422                	sw	s0,8(sp)
2040265e:	842e                	mv	s0,a1
20402660:	00e59583          	lh	a1,14(a1)
20402664:	c606                	sw	ra,12(sp)
20402666:	2b15                	jal	20402b9a <_read_r>
20402668:	00054963          	bltz	a0,2040267a <__sread+0x20>
2040266c:	487c                	lw	a5,84(s0)
2040266e:	97aa                	add	a5,a5,a0
20402670:	c87c                	sw	a5,84(s0)
20402672:	40b2                	lw	ra,12(sp)
20402674:	4422                	lw	s0,8(sp)
20402676:	0141                	addi	sp,sp,16
20402678:	8082                	ret
2040267a:	00c45783          	lhu	a5,12(s0)
2040267e:	777d                	lui	a4,0xfffff
20402680:	177d                	addi	a4,a4,-1
20402682:	8ff9                	and	a5,a5,a4
20402684:	00f41623          	sh	a5,12(s0)
20402688:	b7ed                	j	20402672 <__sread+0x18>

2040268a <__swrite>:
__swrite():
2040268a:	00c5d783          	lhu	a5,12(a1)
2040268e:	1101                	addi	sp,sp,-32
20402690:	cc22                	sw	s0,24(sp)
20402692:	ca26                	sw	s1,20(sp)
20402694:	c84a                	sw	s2,16(sp)
20402696:	c64e                	sw	s3,12(sp)
20402698:	ce06                	sw	ra,28(sp)
2040269a:	1007f793          	andi	a5,a5,256
2040269e:	84aa                	mv	s1,a0
204026a0:	842e                	mv	s0,a1
204026a2:	8932                	mv	s2,a2
204026a4:	89b6                	mv	s3,a3
204026a6:	c791                	beqz	a5,204026b2 <__swrite+0x28>
204026a8:	00e59583          	lh	a1,14(a1)
204026ac:	4689                	li	a3,2
204026ae:	4601                	li	a2,0
204026b0:	220d                	jal	204027d2 <_lseek_r>
204026b2:	00c45783          	lhu	a5,12(s0)
204026b6:	777d                	lui	a4,0xfffff
204026b8:	177d                	addi	a4,a4,-1
204026ba:	8ff9                	and	a5,a5,a4
204026bc:	00e41583          	lh	a1,14(s0)
204026c0:	00f41623          	sh	a5,12(s0)
204026c4:	4462                	lw	s0,24(sp)
204026c6:	40f2                	lw	ra,28(sp)
204026c8:	86ce                	mv	a3,s3
204026ca:	864a                	mv	a2,s2
204026cc:	49b2                	lw	s3,12(sp)
204026ce:	4942                	lw	s2,16(sp)
204026d0:	8526                	mv	a0,s1
204026d2:	44d2                	lw	s1,20(sp)
204026d4:	6105                	addi	sp,sp,32
204026d6:	a83d                	j	20402714 <_write_r>

204026d8 <__sseek>:
__sseek():
204026d8:	1141                	addi	sp,sp,-16
204026da:	c422                	sw	s0,8(sp)
204026dc:	842e                	mv	s0,a1
204026de:	00e59583          	lh	a1,14(a1)
204026e2:	c606                	sw	ra,12(sp)
204026e4:	20fd                	jal	204027d2 <_lseek_r>
204026e6:	57fd                	li	a5,-1
204026e8:	00c45703          	lhu	a4,12(s0)
204026ec:	00f51b63          	bne	a0,a5,20402702 <__sseek+0x2a>
204026f0:	77fd                	lui	a5,0xfffff
204026f2:	17fd                	addi	a5,a5,-1
204026f4:	8ff9                	and	a5,a5,a4
204026f6:	00f41623          	sh	a5,12(s0)
204026fa:	40b2                	lw	ra,12(sp)
204026fc:	4422                	lw	s0,8(sp)
204026fe:	0141                	addi	sp,sp,16
20402700:	8082                	ret
20402702:	6785                	lui	a5,0x1
20402704:	8fd9                	or	a5,a5,a4
20402706:	00f41623          	sh	a5,12(s0)
2040270a:	c868                	sw	a0,84(s0)
2040270c:	b7fd                	j	204026fa <__sseek+0x22>

2040270e <__sclose>:
__sclose():
2040270e:	00e59583          	lh	a1,14(a1)
20402712:	a815                	j	20402746 <_close_r>

20402714 <_write_r>:
_write_r():
20402714:	1141                	addi	sp,sp,-16
20402716:	c422                	sw	s0,8(sp)
20402718:	842a                	mv	s0,a0
2040271a:	852e                	mv	a0,a1
2040271c:	85b2                	mv	a1,a2
2040271e:	8636                	mv	a2,a3
20402720:	5fbfe797          	auipc	a5,0x5fbfe
20402724:	0c07a623          	sw	zero,204(a5) # 800007ec <errno>
20402728:	c606                	sw	ra,12(sp)
2040272a:	23f5                	jal	20402d16 <_write>
2040272c:	57fd                	li	a5,-1
2040272e:	00f51863          	bne	a0,a5,2040273e <_write_r+0x2a>
20402732:	5fbfe797          	auipc	a5,0x5fbfe
20402736:	0ba7a783          	lw	a5,186(a5) # 800007ec <errno>
2040273a:	c391                	beqz	a5,2040273e <_write_r+0x2a>
2040273c:	c01c                	sw	a5,0(s0)
2040273e:	40b2                	lw	ra,12(sp)
20402740:	4422                	lw	s0,8(sp)
20402742:	0141                	addi	sp,sp,16
20402744:	8082                	ret

20402746 <_close_r>:
_close_r():
20402746:	1141                	addi	sp,sp,-16
20402748:	c422                	sw	s0,8(sp)
2040274a:	842a                	mv	s0,a0
2040274c:	852e                	mv	a0,a1
2040274e:	5fbfe797          	auipc	a5,0x5fbfe
20402752:	0807af23          	sw	zero,158(a5) # 800007ec <errno>
20402756:	c606                	sw	ra,12(sp)
20402758:	2995                	jal	20402bcc <_close>
2040275a:	57fd                	li	a5,-1
2040275c:	00f51863          	bne	a0,a5,2040276c <_close_r+0x26>
20402760:	5fbfe797          	auipc	a5,0x5fbfe
20402764:	08c7a783          	lw	a5,140(a5) # 800007ec <errno>
20402768:	c391                	beqz	a5,2040276c <_close_r+0x26>
2040276a:	c01c                	sw	a5,0(s0)
2040276c:	40b2                	lw	ra,12(sp)
2040276e:	4422                	lw	s0,8(sp)
20402770:	0141                	addi	sp,sp,16
20402772:	8082                	ret

20402774 <_fstat_r>:
_fstat_r():
20402774:	1141                	addi	sp,sp,-16
20402776:	c422                	sw	s0,8(sp)
20402778:	842a                	mv	s0,a0
2040277a:	852e                	mv	a0,a1
2040277c:	85b2                	mv	a1,a2
2040277e:	5fbfe797          	auipc	a5,0x5fbfe
20402782:	0607a723          	sw	zero,110(a5) # 800007ec <errno>
20402786:	c606                	sw	ra,12(sp)
20402788:	219d                	jal	20402bee <_fstat>
2040278a:	57fd                	li	a5,-1
2040278c:	00f51863          	bne	a0,a5,2040279c <_fstat_r+0x28>
20402790:	5fbfe797          	auipc	a5,0x5fbfe
20402794:	05c7a783          	lw	a5,92(a5) # 800007ec <errno>
20402798:	c391                	beqz	a5,2040279c <_fstat_r+0x28>
2040279a:	c01c                	sw	a5,0(s0)
2040279c:	40b2                	lw	ra,12(sp)
2040279e:	4422                	lw	s0,8(sp)
204027a0:	0141                	addi	sp,sp,16
204027a2:	8082                	ret

204027a4 <_isatty_r>:
_isatty_r():
204027a4:	1141                	addi	sp,sp,-16
204027a6:	c422                	sw	s0,8(sp)
204027a8:	842a                	mv	s0,a0
204027aa:	852e                	mv	a0,a1
204027ac:	5fbfe797          	auipc	a5,0x5fbfe
204027b0:	0407a023          	sw	zero,64(a5) # 800007ec <errno>
204027b4:	c606                	sw	ra,12(sp)
204027b6:	29b9                	jal	20402c14 <_isatty>
204027b8:	57fd                	li	a5,-1
204027ba:	00f51863          	bne	a0,a5,204027ca <_isatty_r+0x26>
204027be:	5fbfe797          	auipc	a5,0x5fbfe
204027c2:	02e7a783          	lw	a5,46(a5) # 800007ec <errno>
204027c6:	c391                	beqz	a5,204027ca <_isatty_r+0x26>
204027c8:	c01c                	sw	a5,0(s0)
204027ca:	40b2                	lw	ra,12(sp)
204027cc:	4422                	lw	s0,8(sp)
204027ce:	0141                	addi	sp,sp,16
204027d0:	8082                	ret

204027d2 <_lseek_r>:
_lseek_r():
204027d2:	1141                	addi	sp,sp,-16
204027d4:	c422                	sw	s0,8(sp)
204027d6:	842a                	mv	s0,a0
204027d8:	852e                	mv	a0,a1
204027da:	85b2                	mv	a1,a2
204027dc:	8636                	mv	a2,a3
204027de:	5fbfe797          	auipc	a5,0x5fbfe
204027e2:	0007a723          	sw	zero,14(a5) # 800007ec <errno>
204027e6:	c606                	sw	ra,12(sp)
204027e8:	21b1                	jal	20402c34 <_lseek>
204027ea:	57fd                	li	a5,-1
204027ec:	00f51863          	bne	a0,a5,204027fc <_lseek_r+0x2a>
204027f0:	5fbfe797          	auipc	a5,0x5fbfe
204027f4:	ffc7a783          	lw	a5,-4(a5) # 800007ec <errno>
204027f8:	c391                	beqz	a5,204027fc <_lseek_r+0x2a>
204027fa:	c01c                	sw	a5,0(s0)
204027fc:	40b2                	lw	ra,12(sp)
204027fe:	4422                	lw	s0,8(sp)
20402800:	0141                	addi	sp,sp,16
20402802:	8082                	ret

20402804 <memchr>:
memchr():
20402804:	0ff5f593          	zext.b	a1,a1
20402808:	962a                	add	a2,a2,a0
2040280a:	00c51463          	bne	a0,a2,20402812 <memchr+0xe>
2040280e:	4501                	li	a0,0
20402810:	8082                	ret
20402812:	00054783          	lbu	a5,0(a0)
20402816:	feb78de3          	beq	a5,a1,20402810 <memchr+0xc>
2040281a:	0505                	addi	a0,a0,1
2040281c:	b7fd                	j	2040280a <memchr+0x6>

2040281e <_printf_common>:
_printf_common():
2040281e:	7179                	addi	sp,sp,-48
20402820:	cc52                	sw	s4,24(sp)
20402822:	499c                	lw	a5,16(a1)
20402824:	8a3a                	mv	s4,a4
20402826:	4598                	lw	a4,8(a1)
20402828:	d422                	sw	s0,40(sp)
2040282a:	d226                	sw	s1,36(sp)
2040282c:	ce4e                	sw	s3,28(sp)
2040282e:	ca56                	sw	s5,20(sp)
20402830:	d606                	sw	ra,44(sp)
20402832:	d04a                	sw	s2,32(sp)
20402834:	c85a                	sw	s6,16(sp)
20402836:	c65e                	sw	s7,12(sp)
20402838:	89aa                	mv	s3,a0
2040283a:	842e                	mv	s0,a1
2040283c:	84b2                	mv	s1,a2
2040283e:	8ab6                	mv	s5,a3
20402840:	00e7d363          	bge	a5,a4,20402846 <_printf_common+0x28>
20402844:	87ba                	mv	a5,a4
20402846:	c09c                	sw	a5,0(s1)
20402848:	04344703          	lbu	a4,67(s0)
2040284c:	c319                	beqz	a4,20402852 <_printf_common+0x34>
2040284e:	0785                	addi	a5,a5,1
20402850:	c09c                	sw	a5,0(s1)
20402852:	401c                	lw	a5,0(s0)
20402854:	0207f793          	andi	a5,a5,32
20402858:	c781                	beqz	a5,20402860 <_printf_common+0x42>
2040285a:	409c                	lw	a5,0(s1)
2040285c:	0789                	addi	a5,a5,2
2040285e:	c09c                	sw	a5,0(s1)
20402860:	00042903          	lw	s2,0(s0)
20402864:	00697913          	andi	s2,s2,6
20402868:	00091a63          	bnez	s2,2040287c <_printf_common+0x5e>
2040286c:	01940b13          	addi	s6,s0,25
20402870:	5bfd                	li	s7,-1
20402872:	445c                	lw	a5,12(s0)
20402874:	4098                	lw	a4,0(s1)
20402876:	8f99                	sub	a5,a5,a4
20402878:	04f94c63          	blt	s2,a5,204028d0 <_printf_common+0xb2>
2040287c:	04344783          	lbu	a5,67(s0)
20402880:	00f036b3          	snez	a3,a5
20402884:	401c                	lw	a5,0(s0)
20402886:	0207f793          	andi	a5,a5,32
2040288a:	eba5                	bnez	a5,204028fa <_printf_common+0xdc>
2040288c:	04340613          	addi	a2,s0,67
20402890:	85d6                	mv	a1,s5
20402892:	854e                	mv	a0,s3
20402894:	9a02                	jalr	s4
20402896:	57fd                	li	a5,-1
20402898:	04f50363          	beq	a0,a5,204028de <_printf_common+0xc0>
2040289c:	401c                	lw	a5,0(s0)
2040289e:	4611                	li	a2,4
204028a0:	4098                	lw	a4,0(s1)
204028a2:	8b99                	andi	a5,a5,6
204028a4:	4454                	lw	a3,12(s0)
204028a6:	4481                	li	s1,0
204028a8:	00c79763          	bne	a5,a2,204028b6 <_printf_common+0x98>
204028ac:	40e684b3          	sub	s1,a3,a4
204028b0:	0004d363          	bgez	s1,204028b6 <_printf_common+0x98>
204028b4:	4481                	li	s1,0
204028b6:	441c                	lw	a5,8(s0)
204028b8:	4818                	lw	a4,16(s0)
204028ba:	00f75463          	bge	a4,a5,204028c2 <_printf_common+0xa4>
204028be:	8f99                	sub	a5,a5,a4
204028c0:	94be                	add	s1,s1,a5
204028c2:	4901                	li	s2,0
204028c4:	0469                	addi	s0,s0,26
204028c6:	5b7d                	li	s6,-1
204028c8:	05249863          	bne	s1,s2,20402918 <_printf_common+0xfa>
204028cc:	4501                	li	a0,0
204028ce:	a809                	j	204028e0 <_printf_common+0xc2>
204028d0:	4685                	li	a3,1
204028d2:	865a                	mv	a2,s6
204028d4:	85d6                	mv	a1,s5
204028d6:	854e                	mv	a0,s3
204028d8:	9a02                	jalr	s4
204028da:	01751e63          	bne	a0,s7,204028f6 <_printf_common+0xd8>
204028de:	557d                	li	a0,-1
204028e0:	50b2                	lw	ra,44(sp)
204028e2:	5422                	lw	s0,40(sp)
204028e4:	5492                	lw	s1,36(sp)
204028e6:	5902                	lw	s2,32(sp)
204028e8:	49f2                	lw	s3,28(sp)
204028ea:	4a62                	lw	s4,24(sp)
204028ec:	4ad2                	lw	s5,20(sp)
204028ee:	4b42                	lw	s6,16(sp)
204028f0:	4bb2                	lw	s7,12(sp)
204028f2:	6145                	addi	sp,sp,48
204028f4:	8082                	ret
204028f6:	0905                	addi	s2,s2,1
204028f8:	bfad                	j	20402872 <_printf_common+0x54>
204028fa:	00d40733          	add	a4,s0,a3
204028fe:	03000613          	li	a2,48
20402902:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffcf23>
20402906:	04544703          	lbu	a4,69(s0)
2040290a:	00168793          	addi	a5,a3,1
2040290e:	97a2                	add	a5,a5,s0
20402910:	0689                	addi	a3,a3,2
20402912:	04e781a3          	sb	a4,67(a5)
20402916:	bf9d                	j	2040288c <_printf_common+0x6e>
20402918:	4685                	li	a3,1
2040291a:	8622                	mv	a2,s0
2040291c:	85d6                	mv	a1,s5
2040291e:	854e                	mv	a0,s3
20402920:	9a02                	jalr	s4
20402922:	fb650ee3          	beq	a0,s6,204028de <_printf_common+0xc0>
20402926:	0905                	addi	s2,s2,1
20402928:	b745                	j	204028c8 <_printf_common+0xaa>

2040292a <_printf_i>:
_printf_i():
2040292a:	7179                	addi	sp,sp,-48
2040292c:	d422                	sw	s0,40(sp)
2040292e:	d226                	sw	s1,36(sp)
20402930:	d04a                	sw	s2,32(sp)
20402932:	ce4e                	sw	s3,28(sp)
20402934:	d606                	sw	ra,44(sp)
20402936:	cc52                	sw	s4,24(sp)
20402938:	ca56                	sw	s5,20(sp)
2040293a:	c85a                	sw	s6,16(sp)
2040293c:	0185c803          	lbu	a6,24(a1)
20402940:	07800793          	li	a5,120
20402944:	84aa                	mv	s1,a0
20402946:	842e                	mv	s0,a1
20402948:	8932                	mv	s2,a2
2040294a:	89b6                	mv	s3,a3
2040294c:	0107ee63          	bltu	a5,a6,20402968 <_printf_i+0x3e>
20402950:	06200793          	li	a5,98
20402954:	04358693          	addi	a3,a1,67
20402958:	0107ed63          	bltu	a5,a6,20402972 <_printf_i+0x48>
2040295c:	1c080563          	beqz	a6,20402b26 <_printf_i+0x1fc>
20402960:	05800793          	li	a5,88
20402964:	12f80a63          	beq	a6,a5,20402a98 <_printf_i+0x16e>
20402968:	04240a93          	addi	s5,s0,66
2040296c:	05040123          	sb	a6,66(s0)
20402970:	a815                	j	204029a4 <_printf_i+0x7a>
20402972:	f9d80793          	addi	a5,a6,-99
20402976:	0ff7f793          	zext.b	a5,a5
2040297a:	4655                	li	a2,21
2040297c:	fef666e3          	bltu	a2,a5,20402968 <_printf_i+0x3e>
20402980:	ffffe617          	auipc	a2,0xffffe
20402984:	afc60613          	addi	a2,a2,-1284 # 2040047c <__sf_fake_stdout+0x5c>
20402988:	078a                	slli	a5,a5,0x2
2040298a:	97b2                	add	a5,a5,a2
2040298c:	439c                	lw	a5,0(a5)
2040298e:	97b2                	add	a5,a5,a2
20402990:	8782                	jr	a5
20402992:	431c                	lw	a5,0(a4)
20402994:	04258a93          	addi	s5,a1,66
20402998:	00478693          	addi	a3,a5,4
2040299c:	439c                	lw	a5,0(a5)
2040299e:	c314                	sw	a3,0(a4)
204029a0:	04f58123          	sb	a5,66(a1)
204029a4:	4785                	li	a5,1
204029a6:	a25d                	j	20402b4c <_printf_i+0x222>
204029a8:	419c                	lw	a5,0(a1)
204029aa:	4308                	lw	a0,0(a4)
204029ac:	0807f613          	andi	a2,a5,128
204029b0:	00450593          	addi	a1,a0,4
204029b4:	c20d                	beqz	a2,204029d6 <_printf_i+0xac>
204029b6:	411c                	lw	a5,0(a0)
204029b8:	c30c                	sw	a1,0(a4)
204029ba:	0007d863          	bgez	a5,204029ca <_printf_i+0xa0>
204029be:	02d00713          	li	a4,45
204029c2:	40f007b3          	neg	a5,a5
204029c6:	04e401a3          	sb	a4,67(s0)
204029ca:	ffffe617          	auipc	a2,0xffffe
204029ce:	a8a60613          	addi	a2,a2,-1398 # 20400454 <__sf_fake_stdout+0x34>
204029d2:	4829                	li	a6,10
204029d4:	a0a1                	j	20402a1c <_printf_i+0xf2>
204029d6:	0407f613          	andi	a2,a5,64
204029da:	411c                	lw	a5,0(a0)
204029dc:	c30c                	sw	a1,0(a4)
204029de:	de71                	beqz	a2,204029ba <_printf_i+0x90>
204029e0:	07c2                	slli	a5,a5,0x10
204029e2:	87c1                	srai	a5,a5,0x10
204029e4:	bfd9                	j	204029ba <_printf_i+0x90>
204029e6:	4190                	lw	a2,0(a1)
204029e8:	431c                	lw	a5,0(a4)
204029ea:	08067513          	andi	a0,a2,128
204029ee:	00478593          	addi	a1,a5,4
204029f2:	c501                	beqz	a0,204029fa <_printf_i+0xd0>
204029f4:	c30c                	sw	a1,0(a4)
204029f6:	439c                	lw	a5,0(a5)
204029f8:	a039                	j	20402a06 <_printf_i+0xdc>
204029fa:	04067613          	andi	a2,a2,64
204029fe:	c30c                	sw	a1,0(a4)
20402a00:	da7d                	beqz	a2,204029f6 <_printf_i+0xcc>
20402a02:	0007d783          	lhu	a5,0(a5)
20402a06:	06f00713          	li	a4,111
20402a0a:	ffffe617          	auipc	a2,0xffffe
20402a0e:	a4a60613          	addi	a2,a2,-1462 # 20400454 <__sf_fake_stdout+0x34>
20402a12:	0ee80463          	beq	a6,a4,20402afa <_printf_i+0x1d0>
20402a16:	4829                	li	a6,10
20402a18:	040401a3          	sb	zero,67(s0)
20402a1c:	4058                	lw	a4,4(s0)
20402a1e:	c418                	sw	a4,8(s0)
20402a20:	00074563          	bltz	a4,20402a2a <_printf_i+0x100>
20402a24:	400c                	lw	a1,0(s0)
20402a26:	99ed                	andi	a1,a1,-5
20402a28:	c00c                	sw	a1,0(s0)
20402a2a:	e399                	bnez	a5,20402a30 <_printf_i+0x106>
20402a2c:	8ab6                	mv	s5,a3
20402a2e:	cf19                	beqz	a4,20402a4c <_printf_i+0x122>
20402a30:	8ab6                	mv	s5,a3
20402a32:	0307f733          	remu	a4,a5,a6
20402a36:	1afd                	addi	s5,s5,-1
20402a38:	9732                	add	a4,a4,a2
20402a3a:	00074703          	lbu	a4,0(a4)
20402a3e:	00ea8023          	sb	a4,0(s5)
20402a42:	873e                	mv	a4,a5
20402a44:	0307d7b3          	divu	a5,a5,a6
20402a48:	ff0775e3          	bgeu	a4,a6,20402a32 <_printf_i+0x108>
20402a4c:	47a1                	li	a5,8
20402a4e:	00f81e63          	bne	a6,a5,20402a6a <_printf_i+0x140>
20402a52:	401c                	lw	a5,0(s0)
20402a54:	8b85                	andi	a5,a5,1
20402a56:	cb91                	beqz	a5,20402a6a <_printf_i+0x140>
20402a58:	4058                	lw	a4,4(s0)
20402a5a:	481c                	lw	a5,16(s0)
20402a5c:	00e7c763          	blt	a5,a4,20402a6a <_printf_i+0x140>
20402a60:	03000793          	li	a5,48
20402a64:	fefa8fa3          	sb	a5,-1(s5)
20402a68:	1afd                	addi	s5,s5,-1
20402a6a:	415686b3          	sub	a3,a3,s5
20402a6e:	c814                	sw	a3,16(s0)
20402a70:	874e                	mv	a4,s3
20402a72:	86ca                	mv	a3,s2
20402a74:	0070                	addi	a2,sp,12
20402a76:	85a2                	mv	a1,s0
20402a78:	8526                	mv	a0,s1
20402a7a:	3355                	jal	2040281e <_printf_common>
20402a7c:	5a7d                	li	s4,-1
20402a7e:	0d451b63          	bne	a0,s4,20402b54 <_printf_i+0x22a>
20402a82:	557d                	li	a0,-1
20402a84:	50b2                	lw	ra,44(sp)
20402a86:	5422                	lw	s0,40(sp)
20402a88:	5492                	lw	s1,36(sp)
20402a8a:	5902                	lw	s2,32(sp)
20402a8c:	49f2                	lw	s3,28(sp)
20402a8e:	4a62                	lw	s4,24(sp)
20402a90:	4ad2                	lw	s5,20(sp)
20402a92:	4b42                	lw	s6,16(sp)
20402a94:	6145                	addi	sp,sp,48
20402a96:	8082                	ret
20402a98:	050582a3          	sb	a6,69(a1)
20402a9c:	ffffe617          	auipc	a2,0xffffe
20402aa0:	9b860613          	addi	a2,a2,-1608 # 20400454 <__sf_fake_stdout+0x34>
20402aa4:	400c                	lw	a1,0(s0)
20402aa6:	4308                	lw	a0,0(a4)
20402aa8:	0805f813          	andi	a6,a1,128
20402aac:	411c                	lw	a5,0(a0)
20402aae:	0511                	addi	a0,a0,4
20402ab0:	02080d63          	beqz	a6,20402aea <_printf_i+0x1c0>
20402ab4:	c308                	sw	a0,0(a4)
20402ab6:	0015f713          	andi	a4,a1,1
20402aba:	c701                	beqz	a4,20402ac2 <_printf_i+0x198>
20402abc:	0205e593          	ori	a1,a1,32
20402ac0:	c00c                	sw	a1,0(s0)
20402ac2:	4841                	li	a6,16
20402ac4:	fbb1                	bnez	a5,20402a18 <_printf_i+0xee>
20402ac6:	4018                	lw	a4,0(s0)
20402ac8:	fdf77713          	andi	a4,a4,-33
20402acc:	c018                	sw	a4,0(s0)
20402ace:	b7a9                	j	20402a18 <_printf_i+0xee>
20402ad0:	419c                	lw	a5,0(a1)
20402ad2:	0207e793          	ori	a5,a5,32
20402ad6:	c19c                	sw	a5,0(a1)
20402ad8:	07800793          	li	a5,120
20402adc:	04f402a3          	sb	a5,69(s0)
20402ae0:	ffffe617          	auipc	a2,0xffffe
20402ae4:	98860613          	addi	a2,a2,-1656 # 20400468 <__sf_fake_stdout+0x48>
20402ae8:	bf75                	j	20402aa4 <_printf_i+0x17a>
20402aea:	0405f813          	andi	a6,a1,64
20402aee:	c308                	sw	a0,0(a4)
20402af0:	fc0803e3          	beqz	a6,20402ab6 <_printf_i+0x18c>
20402af4:	07c2                	slli	a5,a5,0x10
20402af6:	83c1                	srli	a5,a5,0x10
20402af8:	bf7d                	j	20402ab6 <_printf_i+0x18c>
20402afa:	4821                	li	a6,8
20402afc:	bf31                	j	20402a18 <_printf_i+0xee>
20402afe:	4190                	lw	a2,0(a1)
20402b00:	431c                	lw	a5,0(a4)
20402b02:	49cc                	lw	a1,20(a1)
20402b04:	08067813          	andi	a6,a2,128
20402b08:	00478513          	addi	a0,a5,4
20402b0c:	00080663          	beqz	a6,20402b18 <_printf_i+0x1ee>
20402b10:	c308                	sw	a0,0(a4)
20402b12:	439c                	lw	a5,0(a5)
20402b14:	c38c                	sw	a1,0(a5)
20402b16:	a801                	j	20402b26 <_printf_i+0x1fc>
20402b18:	c308                	sw	a0,0(a4)
20402b1a:	04067613          	andi	a2,a2,64
20402b1e:	439c                	lw	a5,0(a5)
20402b20:	da75                	beqz	a2,20402b14 <_printf_i+0x1ea>
20402b22:	00b79023          	sh	a1,0(a5)
20402b26:	00042823          	sw	zero,16(s0)
20402b2a:	8ab6                	mv	s5,a3
20402b2c:	b791                	j	20402a70 <_printf_i+0x146>
20402b2e:	431c                	lw	a5,0(a4)
20402b30:	41d0                	lw	a2,4(a1)
20402b32:	4581                	li	a1,0
20402b34:	00478693          	addi	a3,a5,4
20402b38:	c314                	sw	a3,0(a4)
20402b3a:	0007aa83          	lw	s5,0(a5)
20402b3e:	8556                	mv	a0,s5
20402b40:	31d1                	jal	20402804 <memchr>
20402b42:	c501                	beqz	a0,20402b4a <_printf_i+0x220>
20402b44:	41550533          	sub	a0,a0,s5
20402b48:	c048                	sw	a0,4(s0)
20402b4a:	405c                	lw	a5,4(s0)
20402b4c:	c81c                	sw	a5,16(s0)
20402b4e:	040401a3          	sb	zero,67(s0)
20402b52:	bf39                	j	20402a70 <_printf_i+0x146>
20402b54:	4814                	lw	a3,16(s0)
20402b56:	8656                	mv	a2,s5
20402b58:	85ca                	mv	a1,s2
20402b5a:	8526                	mv	a0,s1
20402b5c:	9982                	jalr	s3
20402b5e:	f34502e3          	beq	a0,s4,20402a82 <_printf_i+0x158>
20402b62:	401c                	lw	a5,0(s0)
20402b64:	8b89                	andi	a5,a5,2
20402b66:	e78d                	bnez	a5,20402b90 <_printf_i+0x266>
20402b68:	47b2                	lw	a5,12(sp)
20402b6a:	4448                	lw	a0,12(s0)
20402b6c:	f0f55ce3          	bge	a0,a5,20402a84 <_printf_i+0x15a>
20402b70:	853e                	mv	a0,a5
20402b72:	bf09                	j	20402a84 <_printf_i+0x15a>
20402b74:	4685                	li	a3,1
20402b76:	8656                	mv	a2,s5
20402b78:	85ca                	mv	a1,s2
20402b7a:	8526                	mv	a0,s1
20402b7c:	9982                	jalr	s3
20402b7e:	f16502e3          	beq	a0,s6,20402a82 <_printf_i+0x158>
20402b82:	0a05                	addi	s4,s4,1
20402b84:	445c                	lw	a5,12(s0)
20402b86:	4732                	lw	a4,12(sp)
20402b88:	8f99                	sub	a5,a5,a4
20402b8a:	fefa45e3          	blt	s4,a5,20402b74 <_printf_i+0x24a>
20402b8e:	bfe9                	j	20402b68 <_printf_i+0x23e>
20402b90:	4a01                	li	s4,0
20402b92:	01940a93          	addi	s5,s0,25
20402b96:	5b7d                	li	s6,-1
20402b98:	b7f5                	j	20402b84 <_printf_i+0x25a>

20402b9a <_read_r>:
_read_r():
20402b9a:	1141                	addi	sp,sp,-16
20402b9c:	c422                	sw	s0,8(sp)
20402b9e:	842a                	mv	s0,a0
20402ba0:	852e                	mv	a0,a1
20402ba2:	85b2                	mv	a1,a2
20402ba4:	8636                	mv	a2,a3
20402ba6:	5fbfe797          	auipc	a5,0x5fbfe
20402baa:	c407a323          	sw	zero,-954(a5) # 800007ec <errno>
20402bae:	c606                	sw	ra,12(sp)
20402bb0:	207d                	jal	20402c5e <_read>
20402bb2:	57fd                	li	a5,-1
20402bb4:	00f51863          	bne	a0,a5,20402bc4 <_read_r+0x2a>
20402bb8:	5fbfe797          	auipc	a5,0x5fbfe
20402bbc:	c347a783          	lw	a5,-972(a5) # 800007ec <errno>
20402bc0:	c391                	beqz	a5,20402bc4 <_read_r+0x2a>
20402bc2:	c01c                	sw	a5,0(s0)
20402bc4:	40b2                	lw	ra,12(sp)
20402bc6:	4422                	lw	s0,8(sp)
20402bc8:	0141                	addi	sp,sp,16
20402bca:	8082                	ret

20402bcc <_close>:
_close():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20402bcc:	1101                	addi	sp,sp,-32
20402bce:	ce06                	sw	ra,28(sp)
20402bd0:	cc22                	sw	s0,24(sp)
20402bd2:	1000                	addi	s0,sp,32
20402bd4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20402bd8:	2a5d                	jal	20402d8e <__errno>
20402bda:	872a                	mv	a4,a0
20402bdc:	05800793          	li	a5,88
20402be0:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:5
    return -1;
20402be2:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_close.c:6
}
20402be4:	853e                	mv	a0,a5
20402be6:	40f2                	lw	ra,28(sp)
20402be8:	4462                	lw	s0,24(sp)
20402bea:	6105                	addi	sp,sp,32
20402bec:	8082                	ret

20402bee <_fstat>:
_fstat():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20402bee:	1101                	addi	sp,sp,-32
20402bf0:	ce06                	sw	ra,28(sp)
20402bf2:	cc22                	sw	s0,24(sp)
20402bf4:	1000                	addi	s0,sp,32
20402bf6:	fea42623          	sw	a0,-20(s0)
20402bfa:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20402bfe:	2a41                	jal	20402d8e <__errno>
20402c00:	872a                	mv	a4,a0
20402c02:	fa800793          	li	a5,-88
20402c06:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20402c08:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_fstat.c:7
}
20402c0a:	853e                	mv	a0,a5
20402c0c:	40f2                	lw	ra,28(sp)
20402c0e:	4462                	lw	s0,24(sp)
20402c10:	6105                	addi	sp,sp,32
20402c12:	8082                	ret

20402c14 <_isatty>:
_isatty():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20402c14:	1101                	addi	sp,sp,-32
20402c16:	ce22                	sw	s0,28(sp)
20402c18:	1000                	addi	s0,sp,32
20402c1a:	fea42623          	sw	a0,-20(s0)
20402c1e:	fec42783          	lw	a5,-20(s0)
20402c22:	17fd                	addi	a5,a5,-1
20402c24:	0017b793          	seqz	a5,a5
20402c28:	0ff7f793          	zext.b	a5,a5
20402c2c:	853e                	mv	a0,a5
20402c2e:	4472                	lw	s0,28(sp)
20402c30:	6105                	addi	sp,sp,32
20402c32:	8082                	ret

20402c34 <_lseek>:
_lseek():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20402c34:	1101                	addi	sp,sp,-32
20402c36:	ce06                	sw	ra,28(sp)
20402c38:	cc22                	sw	s0,24(sp)
20402c3a:	1000                	addi	s0,sp,32
20402c3c:	fea42623          	sw	a0,-20(s0)
20402c40:	feb42423          	sw	a1,-24(s0)
20402c44:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20402c48:	2299                	jal	20402d8e <__errno>
20402c4a:	872a                	mv	a4,a0
20402c4c:	05800793          	li	a5,88
20402c50:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20402c52:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_lseek.c:7
}
20402c54:	853e                	mv	a0,a5
20402c56:	40f2                	lw	ra,28(sp)
20402c58:	4462                	lw	s0,24(sp)
20402c5a:	6105                	addi	sp,sp,32
20402c5c:	8082                	ret

20402c5e <_read>:
_read():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20402c5e:	1101                	addi	sp,sp,-32
20402c60:	ce06                	sw	ra,28(sp)
20402c62:	cc22                	sw	s0,24(sp)
20402c64:	1000                	addi	s0,sp,32
20402c66:	fea42623          	sw	a0,-20(s0)
20402c6a:	feb42423          	sw	a1,-24(s0)
20402c6e:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20402c72:	2a31                	jal	20402d8e <__errno>
20402c74:	872a                	mv	a4,a0
20402c76:	05800793          	li	a5,88
20402c7a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:6
    return -1;
20402c7c:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_read.c:7
}
20402c7e:	853e                	mv	a0,a5
20402c80:	40f2                	lw	ra,28(sp)
20402c82:	4462                	lw	s0,24(sp)
20402c84:	6105                	addi	sp,sp,32
20402c86:	8082                	ret

20402c88 <_sbrk>:
_sbrk():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20402c88:	7179                	addi	sp,sp,-48
20402c8a:	d606                	sw	ra,44(sp)
20402c8c:	d422                	sw	s0,40(sp)
20402c8e:	1800                	addi	s0,sp,48
20402c90:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20402c94:	800007b7          	lui	a5,0x80000
20402c98:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
20402c9c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20402ca0:	800027b7          	lui	a5,0x80002
20402ca4:	92078713          	addi	a4,a5,-1760 # 80001920 <metal_segment_heap_target_end+0xfffff800>
20402ca8:	800027b7          	lui	a5,0x80002
20402cac:	12078793          	addi	a5,a5,288 # 80002120 <metal_segment_heap_target_end+0x0>
20402cb0:	00f71463          	bne	a4,a5,20402cb8 <_sbrk+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402cb4:	57fd                	li	a5,-1
20402cb6:	a899                	j	20402d0c <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20402cb8:	800007b7          	lui	a5,0x80000
20402cbc:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
20402cc0:	fdc42783          	lw	a5,-36(s0)
20402cc4:	973e                	add	a4,a4,a5
20402cc6:	800027b7          	lui	a5,0x80002
20402cca:	12078793          	addi	a5,a5,288 # 80002120 <metal_segment_heap_target_end+0x0>
20402cce:	02f77663          	bgeu	a4,a5,20402cfa <_sbrk+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20402cd2:	800007b7          	lui	a5,0x80000
20402cd6:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
20402cda:	fdc42783          	lw	a5,-36(s0)
20402cde:	973e                	add	a4,a4,a5
20402ce0:	800007b7          	lui	a5,0x80000
20402ce4:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20402ce8:	fdc42583          	lw	a1,-36(s0)
20402cec:	fec42503          	lw	a0,-20(s0)
20402cf0:	b9efd0ef          	jal	ra,2040008e <metal_mem_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20402cf4:	fec42783          	lw	a5,-20(s0)
20402cf8:	a811                	j	20402d0c <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20402cfa:	800007b7          	lui	a5,0x80000
20402cfe:	80002737          	lui	a4,0x80002
20402d02:	12070713          	addi	a4,a4,288 # 80002120 <metal_segment_heap_target_end+0x0>
20402d06:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffe684>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20402d0a:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_sbrk.c:43
}
20402d0c:	853e                	mv	a0,a5
20402d0e:	50b2                	lw	ra,44(sp)
20402d10:	5422                	lw	s0,40(sp)
20402d12:	6145                	addi	sp,sp,48
20402d14:	8082                	ret

20402d16 <_write>:
_write():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20402d16:	7179                	addi	sp,sp,-48
20402d18:	d606                	sw	ra,44(sp)
20402d1a:	d422                	sw	s0,40(sp)
20402d1c:	1800                	addi	s0,sp,48
20402d1e:	fca42e23          	sw	a0,-36(s0)
20402d22:	fcb42c23          	sw	a1,-40(s0)
20402d26:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20402d2a:	fdc42703          	lw	a4,-36(s0)
20402d2e:	4785                	li	a5,1
20402d30:	00f70963          	beq	a4,a5,20402d42 <_write+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20402d34:	28a9                	jal	20402d8e <__errno>
20402d36:	872a                	mv	a4,a0
20402d38:	05800793          	li	a5,88
20402d3c:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:10
        return -1;
20402d3e:	57fd                	li	a5,-1
20402d40:	a82d                	j	20402d7a <_write+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20402d42:	fd842783          	lw	a5,-40(s0)
20402d46:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20402d4a:	fe042623          	sw	zero,-20(s0)
20402d4e:	a839                	j	20402d6c <_write+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20402d50:	fe842703          	lw	a4,-24(s0)
20402d54:	fec42783          	lw	a5,-20(s0)
20402d58:	97ba                	add	a5,a5,a4
20402d5a:	0007c783          	lbu	a5,0(a5)
20402d5e:	853e                	mv	a0,a5
20402d60:	2e89                	jal	204030b2 <metal_tty_putc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20402d62:	fec42783          	lw	a5,-20(s0)
20402d66:	0785                	addi	a5,a5,1
20402d68:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20402d6c:	fec42703          	lw	a4,-20(s0)
20402d70:	fd442783          	lw	a5,-44(s0)
20402d74:	fcf76ee3          	bltu	a4,a5,20402d50 <_write+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:16
    return 0;
20402d78:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_write.c:17
}
20402d7a:	853e                	mv	a0,a5
20402d7c:	50b2                	lw	ra,44(sp)
20402d7e:	5422                	lw	s0,40(sp)
20402d80:	6145                	addi	sp,sp,48
20402d82:	8082                	ret

20402d84 <atexit>:
atexit():
20402d84:	85aa                	mv	a1,a0
20402d86:	4681                	li	a3,0
20402d88:	4601                	li	a2,0
20402d8a:	4501                	li	a0,0
20402d8c:	a0e9                	j	20402e56 <__register_exitproc>

20402d8e <__errno>:
__errno():
20402d8e:	5fbfe517          	auipc	a0,0x5fbfe
20402d92:	a1252503          	lw	a0,-1518(a0) # 800007a0 <_impure_ptr>
20402d96:	8082                	ret

20402d98 <exit>:
exit():
20402d98:	1141                	addi	sp,sp,-16
20402d9a:	c422                	sw	s0,8(sp)
20402d9c:	c606                	sw	ra,12(sp)
20402d9e:	00000797          	auipc	a5,0x0
20402da2:	13478793          	addi	a5,a5,308 # 20402ed2 <__call_exitprocs>
20402da6:	842a                	mv	s0,a0
20402da8:	c399                	beqz	a5,20402dae <exit+0x16>
20402daa:	4581                	li	a1,0
20402dac:	221d                	jal	20402ed2 <__call_exitprocs>
20402dae:	ffffe517          	auipc	a0,0xffffe
20402db2:	27252503          	lw	a0,626(a0) # 20401020 <_global_impure_ptr>
20402db6:	551c                	lw	a5,40(a0)
20402db8:	c391                	beqz	a5,20402dbc <exit+0x24>
20402dba:	9782                	jalr	a5
20402dbc:	8522                	mv	a0,s0
20402dbe:	269040ef          	jal	ra,20407826 <_exit>

20402dc2 <__libc_fini_array>:
__libc_fini_array():
20402dc2:	1141                	addi	sp,sp,-16
20402dc4:	c422                	sw	s0,8(sp)
20402dc6:	c226                	sw	s1,4(sp)
20402dc8:	ffffd417          	auipc	s0,0xffffd
20402dcc:	52840413          	addi	s0,s0,1320 # 204002f0 <__fini_array_end>
20402dd0:	ffffd497          	auipc	s1,0xffffd
20402dd4:	52048493          	addi	s1,s1,1312 # 204002f0 <__fini_array_end>
20402dd8:	8c05                	sub	s0,s0,s1
20402dda:	c606                	sw	ra,12(sp)
20402ddc:	8409                	srai	s0,s0,0x2
20402dde:	e411                	bnez	s0,20402dea <__libc_fini_array+0x28>
20402de0:	40b2                	lw	ra,12(sp)
20402de2:	4422                	lw	s0,8(sp)
20402de4:	4492                	lw	s1,4(sp)
20402de6:	0141                	addi	sp,sp,16
20402de8:	8082                	ret
20402dea:	147d                	addi	s0,s0,-1
20402dec:	00241793          	slli	a5,s0,0x2
20402df0:	97a6                	add	a5,a5,s1
20402df2:	439c                	lw	a5,0(a5)
20402df4:	9782                	jalr	a5
20402df6:	b7e5                	j	20402dde <__libc_fini_array+0x1c>

20402df8 <__libc_init_array>:
__libc_init_array():
20402df8:	1141                	addi	sp,sp,-16
20402dfa:	c422                	sw	s0,8(sp)
20402dfc:	c226                	sw	s1,4(sp)
20402dfe:	ffffd417          	auipc	s0,0xffffd
20402e02:	4e240413          	addi	s0,s0,1250 # 204002e0 <_metal_tty_init_ptr>
20402e06:	ffffd497          	auipc	s1,0xffffd
20402e0a:	4da48493          	addi	s1,s1,1242 # 204002e0 <_metal_tty_init_ptr>
20402e0e:	8c81                	sub	s1,s1,s0
20402e10:	c04a                	sw	s2,0(sp)
20402e12:	c606                	sw	ra,12(sp)
20402e14:	8489                	srai	s1,s1,0x2
20402e16:	4901                	li	s2,0
20402e18:	02991563          	bne	s2,s1,20402e42 <__libc_init_array+0x4a>
20402e1c:	ffffd417          	auipc	s0,0xffffd
20402e20:	4c440413          	addi	s0,s0,1220 # 204002e0 <_metal_tty_init_ptr>
20402e24:	ffffd497          	auipc	s1,0xffffd
20402e28:	4bc48493          	addi	s1,s1,1212 # 204002e0 <_metal_tty_init_ptr>
20402e2c:	8c81                	sub	s1,s1,s0
20402e2e:	8489                	srai	s1,s1,0x2
20402e30:	4901                	li	s2,0
20402e32:	00991d63          	bne	s2,s1,20402e4c <__libc_init_array+0x54>
20402e36:	40b2                	lw	ra,12(sp)
20402e38:	4422                	lw	s0,8(sp)
20402e3a:	4492                	lw	s1,4(sp)
20402e3c:	4902                	lw	s2,0(sp)
20402e3e:	0141                	addi	sp,sp,16
20402e40:	8082                	ret
20402e42:	401c                	lw	a5,0(s0)
20402e44:	0905                	addi	s2,s2,1
20402e46:	0411                	addi	s0,s0,4
20402e48:	9782                	jalr	a5
20402e4a:	b7f9                	j	20402e18 <__libc_init_array+0x20>
20402e4c:	401c                	lw	a5,0(s0)
20402e4e:	0905                	addi	s2,s2,1
20402e50:	0411                	addi	s0,s0,4
20402e52:	9782                	jalr	a5
20402e54:	bff9                	j	20402e32 <__libc_init_array+0x3a>

20402e56 <__register_exitproc>:
__register_exitproc():
20402e56:	88aa                	mv	a7,a0
20402e58:	5fbfe517          	auipc	a0,0x5fbfe
20402e5c:	99850513          	addi	a0,a0,-1640 # 800007f0 <_global_atexit>
20402e60:	411c                	lw	a5,0(a0)
20402e62:	ef91                	bnez	a5,20402e7e <__register_exitproc+0x28>
20402e64:	5fbfe717          	auipc	a4,0x5fbfe
20402e68:	99870713          	addi	a4,a4,-1640 # 800007fc <_global_atexit0>
20402e6c:	c118                	sw	a4,0(a0)
20402e6e:	00000513          	li	a0,0
20402e72:	87ba                	mv	a5,a4
20402e74:	c509                	beqz	a0,20402e7e <__register_exitproc+0x28>
20402e76:	411c                	lw	a5,0(a0)
20402e78:	08f72423          	sw	a5,136(a4)
20402e7c:	87ba                	mv	a5,a4
20402e7e:	43d8                	lw	a4,4(a5)
20402e80:	487d                	li	a6,31
20402e82:	557d                	li	a0,-1
20402e84:	04e84663          	blt	a6,a4,20402ed0 <__register_exitproc+0x7a>
20402e88:	02088d63          	beqz	a7,20402ec2 <__register_exitproc+0x6c>
20402e8c:	0887a803          	lw	a6,136(a5)
20402e90:	04080063          	beqz	a6,20402ed0 <__register_exitproc+0x7a>
20402e94:	00271513          	slli	a0,a4,0x2
20402e98:	9542                	add	a0,a0,a6
20402e9a:	c110                	sw	a2,0(a0)
20402e9c:	10082303          	lw	t1,256(a6)
20402ea0:	4605                	li	a2,1
20402ea2:	00e61633          	sll	a2,a2,a4
20402ea6:	00c36333          	or	t1,t1,a2
20402eaa:	10682023          	sw	t1,256(a6)
20402eae:	08d52023          	sw	a3,128(a0)
20402eb2:	4689                	li	a3,2
20402eb4:	00d89763          	bne	a7,a3,20402ec2 <__register_exitproc+0x6c>
20402eb8:	10482683          	lw	a3,260(a6)
20402ebc:	8e55                	or	a2,a2,a3
20402ebe:	10c82223          	sw	a2,260(a6)
20402ec2:	00170693          	addi	a3,a4,1
20402ec6:	070a                	slli	a4,a4,0x2
20402ec8:	c3d4                	sw	a3,4(a5)
20402eca:	97ba                	add	a5,a5,a4
20402ecc:	c78c                	sw	a1,8(a5)
20402ece:	4501                	li	a0,0
20402ed0:	8082                	ret

20402ed2 <__call_exitprocs>:
__call_exitprocs():
20402ed2:	7179                	addi	sp,sp,-48
20402ed4:	ca56                	sw	s5,20(sp)
20402ed6:	c85a                	sw	s6,16(sp)
20402ed8:	c65e                	sw	s7,12(sp)
20402eda:	c462                	sw	s8,8(sp)
20402edc:	d606                	sw	ra,44(sp)
20402ede:	d422                	sw	s0,40(sp)
20402ee0:	d226                	sw	s1,36(sp)
20402ee2:	d04a                	sw	s2,32(sp)
20402ee4:	ce4e                	sw	s3,28(sp)
20402ee6:	cc52                	sw	s4,24(sp)
20402ee8:	c266                	sw	s9,4(sp)
20402eea:	8b2a                	mv	s6,a0
20402eec:	8aae                	mv	s5,a1
20402eee:	5fbfeb97          	auipc	s7,0x5fbfe
20402ef2:	902b8b93          	addi	s7,s7,-1790 # 800007f0 <_global_atexit>
20402ef6:	4c05                	li	s8,1
20402ef8:	000ba483          	lw	s1,0(s7)
20402efc:	cc81                	beqz	s1,20402f14 <__call_exitprocs+0x42>
20402efe:	40c0                	lw	s0,4(s1)
20402f00:	0884a983          	lw	s3,136(s1)
20402f04:	fff40913          	addi	s2,s0,-1
20402f08:	040a                	slli	s0,s0,0x2
20402f0a:	00898a33          	add	s4,s3,s0
20402f0e:	9426                	add	s0,s0,s1
20402f10:	00095f63          	bgez	s2,20402f2e <__call_exitprocs+0x5c>
20402f14:	50b2                	lw	ra,44(sp)
20402f16:	5422                	lw	s0,40(sp)
20402f18:	5492                	lw	s1,36(sp)
20402f1a:	5902                	lw	s2,32(sp)
20402f1c:	49f2                	lw	s3,28(sp)
20402f1e:	4a62                	lw	s4,24(sp)
20402f20:	4ad2                	lw	s5,20(sp)
20402f22:	4b42                	lw	s6,16(sp)
20402f24:	4bb2                	lw	s7,12(sp)
20402f26:	4c22                	lw	s8,8(sp)
20402f28:	4c92                	lw	s9,4(sp)
20402f2a:	6145                	addi	sp,sp,48
20402f2c:	8082                	ret
20402f2e:	000a8c63          	beqz	s5,20402f46 <__call_exitprocs+0x74>
20402f32:	00099663          	bnez	s3,20402f3e <__call_exitprocs+0x6c>
20402f36:	197d                	addi	s2,s2,-1
20402f38:	1a71                	addi	s4,s4,-4
20402f3a:	1471                	addi	s0,s0,-4
20402f3c:	bfd1                	j	20402f10 <__call_exitprocs+0x3e>
20402f3e:	07ca2783          	lw	a5,124(s4)
20402f42:	ff579ae3          	bne	a5,s5,20402f36 <__call_exitprocs+0x64>
20402f46:	40d8                	lw	a4,4(s1)
20402f48:	405c                	lw	a5,4(s0)
20402f4a:	177d                	addi	a4,a4,-1
20402f4c:	03271863          	bne	a4,s2,20402f7c <__call_exitprocs+0xaa>
20402f50:	0124a223          	sw	s2,4(s1)
20402f54:	d3ed                	beqz	a5,20402f36 <__call_exitprocs+0x64>
20402f56:	0044ac83          	lw	s9,4(s1)
20402f5a:	00098863          	beqz	s3,20402f6a <__call_exitprocs+0x98>
20402f5e:	1009a683          	lw	a3,256(s3)
20402f62:	012c1733          	sll	a4,s8,s2
20402f66:	8ef9                	and	a3,a3,a4
20402f68:	ee89                	bnez	a3,20402f82 <__call_exitprocs+0xb0>
20402f6a:	9782                	jalr	a5
20402f6c:	40d8                	lw	a4,4(s1)
20402f6e:	000ba783          	lw	a5,0(s7)
20402f72:	f99713e3          	bne	a4,s9,20402ef8 <__call_exitprocs+0x26>
20402f76:	fcf480e3          	beq	s1,a5,20402f36 <__call_exitprocs+0x64>
20402f7a:	bfbd                	j	20402ef8 <__call_exitprocs+0x26>
20402f7c:	00042223          	sw	zero,4(s0)
20402f80:	bfd1                	j	20402f54 <__call_exitprocs+0x82>
20402f82:	1049a683          	lw	a3,260(s3)
20402f86:	ffca2583          	lw	a1,-4(s4)
20402f8a:	8f75                	and	a4,a4,a3
20402f8c:	e701                	bnez	a4,20402f94 <__call_exitprocs+0xc2>
20402f8e:	855a                	mv	a0,s6
20402f90:	9782                	jalr	a5
20402f92:	bfe9                	j	20402f6c <__call_exitprocs+0x9a>
20402f94:	852e                	mv	a0,a1
20402f96:	9782                	jalr	a5
20402f98:	bfd1                	j	20402f6c <__call_exitprocs+0x9a>

20402f9a <metal_init>:
metal_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402f9a:	1101                	addi	sp,sp,-32
20402f9c:	ce06                	sw	ra,28(sp)
20402f9e:	cc22                	sw	s0,24(sp)
20402fa0:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402fa2:	800007b7          	lui	a5,0x80000
20402fa6:	7f47a783          	lw	a5,2036(a5) # 800007f4 <metal_segment_heap_target_end+0xffffe6d4>
20402faa:	efa9                	bnez	a5,20403004 <metal_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20402fac:	800007b7          	lui	a5,0x80000
20402fb0:	4705                	li	a4,1
20402fb2:	7ee7aa23          	sw	a4,2036(a5) # 800007f4 <metal_segment_heap_target_end+0xffffe6d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402fb6:	204007b7          	lui	a5,0x20400
20402fba:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
20402fbe:	204007b7          	lui	a5,0x20400
20402fc2:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402fc6:	04e7f163          	bgeu	a5,a4,20403008 <metal_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402fca:	204007b7          	lui	a5,0x20400
20402fce:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402fd2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402fd6:	a831                	j	20402ff2 <metal_init+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402fd8:	fec42783          	lw	a5,-20(s0)
20402fdc:	439c                	lw	a5,0(a5)
20402fde:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:33

        func();
20402fe2:	fe842783          	lw	a5,-24(s0)
20402fe6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:35

        funcptr += 1;
20402fe8:	fec42783          	lw	a5,-20(s0)
20402fec:	0791                	addi	a5,a5,4
20402fee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402ff2:	fec42703          	lw	a4,-20(s0)
20402ff6:	204007b7          	lui	a5,0x20400
20402ffa:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
20402ffe:	fcf71de3          	bne	a4,a5,20402fd8 <metal_init+0x3e>
20403002:	a021                	j	2040300a <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:21
        return;
20403004:	0001                	nop
20403006:	a011                	j	2040300a <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:26
        return;
20403008:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:37
    }
}
2040300a:	40f2                	lw	ra,28(sp)
2040300c:	4462                	lw	s0,24(sp)
2040300e:	6105                	addi	sp,sp,32
20403010:	8082                	ret

20403012 <metal_fini>:
metal_fini():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:39

void metal_fini(void) {
20403012:	1101                	addi	sp,sp,-32
20403014:	ce06                	sw	ra,28(sp)
20403016:	cc22                	sw	s0,24(sp)
20403018:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
2040301a:	800007b7          	lui	a5,0x80000
2040301e:	7f87a783          	lw	a5,2040(a5) # 800007f8 <metal_segment_heap_target_end+0xffffe6d8>
20403022:	efa9                	bnez	a5,2040307c <metal_fini+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20403024:	800007b7          	lui	a5,0x80000
20403028:	4705                	li	a4,1
2040302a:	7ee7ac23          	sw	a4,2040(a5) # 800007f8 <metal_segment_heap_target_end+0xffffe6d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
2040302e:	204007b7          	lui	a5,0x20400
20403032:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
20403036:	204007b7          	lui	a5,0x20400
2040303a:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
2040303e:	04e7f163          	bgeu	a5,a4,20403080 <metal_fini+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20403042:	204007b7          	lui	a5,0x20400
20403046:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
2040304a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2040304e:	a831                	j	2040306a <metal_fini+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20403050:	fec42783          	lw	a5,-20(s0)
20403054:	439c                	lw	a5,0(a5)
20403056:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:55

        func();
2040305a:	fe842783          	lw	a5,-24(s0)
2040305e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:57

        funcptr += 1;
20403060:	fec42783          	lw	a5,-20(s0)
20403064:	0791                	addi	a5,a5,4
20403066:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2040306a:	fec42703          	lw	a4,-20(s0)
2040306e:	204007b7          	lui	a5,0x20400
20403072:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20403076:	fcf71de3          	bne	a4,a5,20403050 <metal_fini+0x3e>
2040307a:	a021                	j	20403082 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:43
        return;
2040307c:	0001                	nop
2040307e:	a011                	j	20403082 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:48
        return;
20403080:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:59
    }
}
20403082:	40f2                	lw	ra,28(sp)
20403084:	4462                	lw	s0,24(sp)
20403086:	6105                	addi	sp,sp,32
20403088:	8082                	ret

2040308a <metal_init_run>:
metal_init_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2040308a:	1141                	addi	sp,sp,-16
2040308c:	c606                	sw	ra,12(sp)
2040308e:	c422                	sw	s0,8(sp)
20403090:	0800                	addi	s0,sp,16
20403092:	3721                	jal	20402f9a <metal_init>
20403094:	0001                	nop
20403096:	40b2                	lw	ra,12(sp)
20403098:	4422                	lw	s0,8(sp)
2040309a:	0141                	addi	sp,sp,16
2040309c:	8082                	ret

2040309e <metal_fini_run>:
metal_fini_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2040309e:	1141                	addi	sp,sp,-16
204030a0:	c606                	sw	ra,12(sp)
204030a2:	c422                	sw	s0,8(sp)
204030a4:	0800                	addi	s0,sp,16
204030a6:	37b5                	jal	20403012 <metal_fini>
204030a8:	0001                	nop
204030aa:	40b2                	lw	ra,12(sp)
204030ac:	4422                	lw	s0,8(sp)
204030ae:	0141                	addi	sp,sp,16
204030b0:	8082                	ret

204030b2 <metal_tty_putc>:
metal_tty_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
204030b2:	1101                	addi	sp,sp,-32
204030b4:	ce06                	sw	ra,28(sp)
204030b6:	cc22                	sw	s0,24(sp)
204030b8:	1000                	addi	s0,sp,32
204030ba:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
204030be:	fec42583          	lw	a1,-20(s0)
204030c2:	800007b7          	lui	a5,0x80000
204030c6:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
204030ca:	282d                	jal	20403104 <metal_uart_putc>
204030cc:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/tty.c:14
}
204030ce:	853e                	mv	a0,a5
204030d0:	40f2                	lw	ra,28(sp)
204030d2:	4462                	lw	s0,24(sp)
204030d4:	6105                	addi	sp,sp,32
204030d6:	8082                	ret

204030d8 <metal_uart_init>:
metal_uart_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
204030d8:	1101                	addi	sp,sp,-32
204030da:	ce06                	sw	ra,28(sp)
204030dc:	cc22                	sw	s0,24(sp)
204030de:	1000                	addi	s0,sp,32
204030e0:	fea42623          	sw	a0,-20(s0)
204030e4:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
204030e8:	fec42783          	lw	a5,-20(s0)
204030ec:	439c                	lw	a5,0(a5)
204030ee:	439c                	lw	a5,0(a5)
204030f0:	fe842583          	lw	a1,-24(s0)
204030f4:	fec42503          	lw	a0,-20(s0)
204030f8:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:61
}
204030fa:	0001                	nop
204030fc:	40f2                	lw	ra,28(sp)
204030fe:	4462                	lw	s0,24(sp)
20403100:	6105                	addi	sp,sp,32
20403102:	8082                	ret

20403104 <metal_uart_putc>:
metal_uart_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
20403104:	1101                	addi	sp,sp,-32
20403106:	ce06                	sw	ra,28(sp)
20403108:	cc22                	sw	s0,24(sp)
2040310a:	1000                	addi	s0,sp,32
2040310c:	fea42623          	sw	a0,-20(s0)
20403110:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
20403114:	fec42783          	lw	a5,-20(s0)
20403118:	439c                	lw	a5,0(a5)
2040311a:	43dc                	lw	a5,4(a5)
2040311c:	fe842583          	lw	a1,-24(s0)
20403120:	fec42503          	lw	a0,-20(s0)
20403124:	9782                	jalr	a5
20403126:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:71
}
20403128:	853e                	mv	a0,a5
2040312a:	40f2                	lw	ra,28(sp)
2040312c:	4462                	lw	s0,24(sp)
2040312e:	6105                	addi	sp,sp,32
20403130:	8082                	ret

20403132 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
20403132:	1101                	addi	sp,sp,-32
20403134:	ce06                	sw	ra,28(sp)
20403136:	cc22                	sw	s0,24(sp)
20403138:	1000                	addi	s0,sp,32
2040313a:	fea42623          	sw	a0,-20(s0)
2040313e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
20403142:	fec42783          	lw	a5,-20(s0)
20403146:	439c                	lw	a5,0(a5)
20403148:	4bdc                	lw	a5,20(a5)
2040314a:	fe842583          	lw	a1,-24(s0)
2040314e:	fec42503          	lw	a0,-20(s0)
20403152:	9782                	jalr	a5
20403154:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/uart.h:113
}
20403156:	853e                	mv	a0,a5
20403158:	40f2                	lw	ra,28(sp)
2040315a:	4462                	lw	s0,24(sp)
2040315c:	6105                	addi	sp,sp,32
2040315e:	8082                	ret

20403160 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20403160:	1101                	addi	sp,sp,-32
20403162:	ce22                	sw	s0,28(sp)
20403164:	1000                	addi	s0,sp,32
20403166:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2040316a:	fec42703          	lw	a4,-20(s0)
2040316e:	800007b7          	lui	a5,0x80000
20403172:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
20403176:	00f71563          	bne	a4,a5,20403180 <__metal_driver_sifive_clint0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
2040317a:	020007b7          	lui	a5,0x2000
2040317e:	a011                	j	20403182 <__metal_driver_sifive_clint0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:207
	}
	else {
		return 0;
20403180:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:209
	}
}
20403182:	853e                	mv	a0,a5
20403184:	4472                	lw	s0,28(sp)
20403186:	6105                	addi	sp,sp,32
20403188:	8082                	ret

2040318a <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
2040318a:	1101                	addi	sp,sp,-32
2040318c:	ce22                	sw	s0,28(sp)
2040318e:	1000                	addi	s0,sp,32
20403190:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20403194:	fec42703          	lw	a4,-20(s0)
20403198:	800007b7          	lui	a5,0x80000
2040319c:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
204031a0:	00f71463          	bne	a4,a5,204031a8 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
204031a4:	4789                	li	a5,2
204031a6:	a011                	j	204031aa <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:227
	}
	else {
		return 0;
204031a8:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:229
	}
}
204031aa:	853e                	mv	a0,a5
204031ac:	4472                	lw	s0,28(sp)
204031ae:	6105                	addi	sp,sp,32
204031b0:	8082                	ret

204031b2 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
204031b2:	1101                	addi	sp,sp,-32
204031b4:	ce22                	sw	s0,28(sp)
204031b6:	1000                	addi	s0,sp,32
204031b8:	fea42623          	sw	a0,-20(s0)
204031bc:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:233
	if (idx == 0) {
204031c0:	fe842783          	lw	a5,-24(s0)
204031c4:	e791                	bnez	a5,204031d0 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204031c6:	800007b7          	lui	a5,0x80000
204031ca:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
204031ce:	a821                	j	204031e6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:236
	}
	else if (idx == 1) {
204031d0:	fe842703          	lw	a4,-24(s0)
204031d4:	4785                	li	a5,1
204031d6:	00f71763          	bne	a4,a5,204031e4 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
204031da:	800007b7          	lui	a5,0x80000
204031de:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
204031e2:	a011                	j	204031e6 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:240
	}
	else {
		return NULL;
204031e4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:242
	}
}
204031e6:	853e                	mv	a0,a5
204031e8:	4472                	lw	s0,28(sp)
204031ea:	6105                	addi	sp,sp,32
204031ec:	8082                	ret

204031ee <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
204031ee:	1101                	addi	sp,sp,-32
204031f0:	ce22                	sw	s0,28(sp)
204031f2:	1000                	addi	s0,sp,32
204031f4:	fea42623          	sw	a0,-20(s0)
204031f8:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:246
	if (idx == 0) {
204031fc:	fe842783          	lw	a5,-24(s0)
20403200:	e399                	bnez	a5,20403206 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:247
		return 3;
20403202:	478d                	li	a5,3
20403204:	a809                	j	20403216 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:249
	}
	else if (idx == 1) {
20403206:	fe842703          	lw	a4,-24(s0)
2040320a:	4785                	li	a5,1
2040320c:	00f71463          	bne	a4,a5,20403214 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:250
		return 7;
20403210:	479d                	li	a5,7
20403212:	a011                	j	20403216 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:253
	}
	else {
		return 0;
20403214:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:255
	}
}
20403216:	853e                	mv	a0,a5
20403218:	4472                	lw	s0,28(sp)
2040321a:	6105                	addi	sp,sp,32
2040321c:	8082                	ret

2040321e <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
2040321e:	715d                	addi	sp,sp,-80
20403220:	c686                	sw	ra,76(sp)
20403222:	c4a2                	sw	s0,72(sp)
20403224:	c2ca                	sw	s2,68(sp)
20403226:	c0ce                	sw	s3,64(sp)
20403228:	de52                	sw	s4,60(sp)
2040322a:	dc56                	sw	s5,56(sp)
2040322c:	da5a                	sw	s6,52(sp)
2040322e:	d85e                	sw	s7,48(sp)
20403230:	d662                	sw	s8,44(sp)
20403232:	d466                	sw	s9,40(sp)
20403234:	0880                	addi	s0,sp,80
20403236:	faa42e23          	sw	a0,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2040323a:	fbc42783          	lw	a5,-68(s0)
2040323e:	853e                	mv	a0,a5
20403240:	3705                	jal	20403160 <__metal_driver_sifive_clint0_control_base>
20403242:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20403246:	fcc42703          	lw	a4,-52(s0)
2040324a:	67b1                	lui	a5,0xc
2040324c:	17f1                	addi	a5,a5,-4
2040324e:	97ba                	add	a5,a5,a4
20403250:	439c                	lw	a5,0(a5)
20403252:	fcf42423          	sw	a5,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20403256:	fcc42703          	lw	a4,-52(s0)
2040325a:	67b1                	lui	a5,0xc
2040325c:	17e1                	addi	a5,a5,-8
2040325e:	97ba                	add	a5,a5,a4
20403260:	439c                	lw	a5,0(a5)
20403262:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20403266:	fcc42703          	lw	a4,-52(s0)
2040326a:	67b1                	lui	a5,0xc
2040326c:	17f1                	addi	a5,a5,-4
2040326e:	97ba                	add	a5,a5,a4
20403270:	439c                	lw	a5,0(a5)
20403272:	fc842703          	lw	a4,-56(s0)
20403276:	fcf718e3          	bne	a4,a5,20403246 <__metal_clint0_mtime_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2040327a:	fc842783          	lw	a5,-56(s0)
2040327e:	8c3e                	mv	s8,a5
20403280:	4c81                	li	s9,0
20403282:	000c1993          	slli	s3,s8,0x0
20403286:	4901                	li	s2,0
20403288:	fc442783          	lw	a5,-60(s0)
2040328c:	8a3e                	mv	s4,a5
2040328e:	4a81                	li	s5,0
20403290:	01496b33          	or	s6,s2,s4
20403294:	0159ebb3          	or	s7,s3,s5
20403298:	875a                	mv	a4,s6
2040329a:	87de                	mv	a5,s7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:30
}
2040329c:	853a                	mv	a0,a4
2040329e:	85be                	mv	a1,a5
204032a0:	40b6                	lw	ra,76(sp)
204032a2:	4426                	lw	s0,72(sp)
204032a4:	4916                	lw	s2,68(sp)
204032a6:	4986                	lw	s3,64(sp)
204032a8:	5a72                	lw	s4,60(sp)
204032aa:	5ae2                	lw	s5,56(sp)
204032ac:	5b52                	lw	s6,52(sp)
204032ae:	5bc2                	lw	s7,48(sp)
204032b0:	5c32                	lw	s8,44(sp)
204032b2:	5ca2                	lw	s9,40(sp)
204032b4:	6161                	addi	sp,sp,80
204032b6:	8082                	ret

204032b8 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
204032b8:	7179                	addi	sp,sp,-48
204032ba:	d606                	sw	ra,44(sp)
204032bc:	d422                	sw	s0,40(sp)
204032be:	d24a                	sw	s2,36(sp)
204032c0:	d04e                	sw	s3,32(sp)
204032c2:	1800                	addi	s0,sp,48
204032c4:	fca42e23          	sw	a0,-36(s0)
204032c8:	fcb42c23          	sw	a1,-40(s0)
204032cc:	fcc42823          	sw	a2,-48(s0)
204032d0:	fcd42a23          	sw	a3,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
204032d4:	fdc42783          	lw	a5,-36(s0)
204032d8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
204032dc:	fec42783          	lw	a5,-20(s0)
204032e0:	853e                	mv	a0,a5
204032e2:	3dbd                	jal	20403160 <__metal_driver_sifive_clint0_control_base>
204032e4:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
204032e8:	fd842783          	lw	a5,-40(s0)
204032ec:	078e                	slli	a5,a5,0x3
204032ee:	873e                	mv	a4,a5
204032f0:	fe842783          	lw	a5,-24(s0)
204032f4:	973e                	add	a4,a4,a5
204032f6:	6791                	lui	a5,0x4
204032f8:	0791                	addi	a5,a5,4
204032fa:	97ba                	add	a5,a5,a4
204032fc:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
204032fe:	57fd                	li	a5,-1
20403300:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20403302:	fd842783          	lw	a5,-40(s0)
20403306:	078e                	slli	a5,a5,0x3
20403308:	873e                	mv	a4,a5
2040330a:	fe842783          	lw	a5,-24(s0)
2040330e:	973e                	add	a4,a4,a5
20403310:	6791                	lui	a5,0x4
20403312:	97ba                	add	a5,a5,a4
20403314:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20403316:	fd042783          	lw	a5,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
2040331a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
2040331c:	fd442783          	lw	a5,-44(s0)
20403320:	0007d913          	srli	s2,a5,0x0
20403324:	4981                	li	s3,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20403326:	fd842783          	lw	a5,-40(s0)
2040332a:	078e                	slli	a5,a5,0x3
2040332c:	873e                	mv	a4,a5
2040332e:	fe842783          	lw	a5,-24(s0)
20403332:	973e                	add	a4,a4,a5
20403334:	6791                	lui	a5,0x4
20403336:	0791                	addi	a5,a5,4
20403338:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
2040333a:	874a                	mv	a4,s2
2040333c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
2040333e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:55
}
20403340:	853e                	mv	a0,a5
20403342:	50b2                	lw	ra,44(sp)
20403344:	5422                	lw	s0,40(sp)
20403346:	5912                	lw	s2,36(sp)
20403348:	5982                	lw	s3,32(sp)
2040334a:	6145                	addi	sp,sp,48
2040334c:	8082                	ret

2040334e <_get_cpu_intc>:
_get_cpu_intc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
2040334e:	1101                	addi	sp,sp,-32
20403350:	ce06                	sw	ra,28(sp)
20403352:	cc22                	sw	s0,24(sp)
20403354:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20403356:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2040335a:	f14027f3          	csrr	a5,mhartid
2040335e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20403362:	fec42783          	lw	a5,-20(s0)
20403366:	853e                	mv	a0,a5
20403368:	308040ef          	jal	ra,20407670 <metal_cpu_get>
2040336c:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20403370:	fe842503          	lw	a0,-24(s0)
20403374:	2d6040ef          	jal	ra,2040764a <metal_cpu_interrupt_controller>
20403378:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:65
}
2040337a:	853e                	mv	a0,a5
2040337c:	40f2                	lw	ra,28(sp)
2040337e:	4462                	lw	s0,24(sp)
20403380:	6105                	addi	sp,sp,32
20403382:	8082                	ret

20403384 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20403384:	7139                	addi	sp,sp,-64
20403386:	de06                	sw	ra,60(sp)
20403388:	dc22                	sw	s0,56(sp)
2040338a:	0080                	addi	s0,sp,64
2040338c:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20403390:	fcc42503          	lw	a0,-52(s0)
20403394:	3bdd                	jal	2040318a <__metal_driver_sifive_clint0_num_interrupts>
20403396:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
2040339a:	fcc42783          	lw	a5,-52(s0)
2040339e:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
204033a2:	fe442783          	lw	a5,-28(s0)
204033a6:	43dc                	lw	a5,4(a5)
204033a8:	efa9                	bnez	a5,20403402 <__metal_driver_riscv_clint0_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
204033aa:	fe042623          	sw	zero,-20(s0)
204033ae:	a081                	j	204033ee <__metal_driver_riscv_clint0_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204033b0:	fec42583          	lw	a1,-20(s0)
204033b4:	fcc42503          	lw	a0,-52(s0)
204033b8:	3bed                	jal	204031b2 <__metal_driver_sifive_clint0_interrupt_parents>
204033ba:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204033be:	fec42583          	lw	a1,-20(s0)
204033c2:	fcc42503          	lw	a0,-52(s0)
204033c6:	3525                	jal	204031ee <__metal_driver_sifive_clint0_interrupt_lines>
204033c8:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
204033cc:	fe042783          	lw	a5,-32(s0)
204033d0:	439c                	lw	a5,0(a5)
204033d2:	4fdc                	lw	a5,28(a5)
204033d4:	fcc42683          	lw	a3,-52(s0)
204033d8:	4601                	li	a2,0
204033da:	fdc42583          	lw	a1,-36(s0)
204033de:	fe042503          	lw	a0,-32(s0)
204033e2:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
204033e4:	fec42783          	lw	a5,-20(s0)
204033e8:	0785                	addi	a5,a5,1
204033ea:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
204033ee:	fec42703          	lw	a4,-20(s0)
204033f2:	fe842783          	lw	a5,-24(s0)
204033f6:	faf74de3          	blt	a4,a5,204033b0 <__metal_driver_riscv_clint0_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
204033fa:	fe442783          	lw	a5,-28(s0)
204033fe:	4705                	li	a4,1
20403400:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20403402:	0001                	nop
20403404:	50f2                	lw	ra,60(sp)
20403406:	5462                	lw	s0,56(sp)
20403408:	6121                	addi	sp,sp,64
2040340a:	8082                	ret

2040340c <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
2040340c:	7139                	addi	sp,sp,-64
2040340e:	de06                	sw	ra,60(sp)
20403410:	dc22                	sw	s0,56(sp)
20403412:	0080                	addi	s0,sp,64
20403414:	fca42623          	sw	a0,-52(s0)
20403418:	fcb42423          	sw	a1,-56(s0)
2040341c:	fcc42223          	sw	a2,-60(s0)
20403420:	fcd42023          	sw	a3,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20403424:	57fd                	li	a5,-1
20403426:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
2040342a:	4b0010ef          	jal	ra,204048da <__metal_controller_interrupt_vector_mode>
2040342e:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20403432:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403436:	3f21                	jal	2040334e <_get_cpu_intc>
20403438:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2040343c:	fcc42503          	lw	a0,-52(s0)
20403440:	33a9                	jal	2040318a <__metal_driver_sifive_clint0_num_interrupts>
20403442:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20403446:	fe042703          	lw	a4,-32(s0)
2040344a:	4785                	li	a5,1
2040344c:	00f70863          	beq	a4,a5,2040345c <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20403450:	fe042783          	lw	a5,-32(s0)
20403454:	c781                	beqz	a5,2040345c <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20403456:	fec42783          	lw	a5,-20(s0)
2040345a:	a049                	j	204034dc <__metal_driver_riscv_clint0_register+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
2040345c:	fe042223          	sw	zero,-28(s0)
20403460:	a091                	j	204034a4 <__metal_driver_riscv_clint0_register+0x98>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403462:	fe442583          	lw	a1,-28(s0)
20403466:	fcc42503          	lw	a0,-52(s0)
2040346a:	3351                	jal	204031ee <__metal_driver_sifive_clint0_interrupt_lines>
2040346c:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403470:	fe442583          	lw	a1,-28(s0)
20403474:	fcc42503          	lw	a0,-52(s0)
20403478:	3b2d                	jal	204031b2 <__metal_driver_sifive_clint0_interrupt_parents>
2040347a:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2040347e:	fdc42703          	lw	a4,-36(s0)
20403482:	fe842783          	lw	a5,-24(s0)
20403486:	00f71863          	bne	a4,a5,20403496 <__metal_driver_riscv_clint0_register+0x8a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
2040348a:	fc842703          	lw	a4,-56(s0)
2040348e:	fd442783          	lw	a5,-44(s0)
20403492:	02f70063          	beq	a4,a5,204034b2 <__metal_driver_riscv_clint0_register+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20403496:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
2040349a:	fe442783          	lw	a5,-28(s0)
2040349e:	0785                	addi	a5,a5,1
204034a0:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
204034a4:	fe442703          	lw	a4,-28(s0)
204034a8:	fd842783          	lw	a5,-40(s0)
204034ac:	faf74be3          	blt	a4,a5,20403462 <__metal_driver_riscv_clint0_register+0x56>
204034b0:	a011                	j	204034b4 <__metal_driver_riscv_clint0_register+0xa8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
204034b2:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
204034b4:	fe842783          	lw	a5,-24(s0)
204034b8:	c385                	beqz	a5,204034d8 <__metal_driver_riscv_clint0_register+0xcc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
204034ba:	fe842783          	lw	a5,-24(s0)
204034be:	439c                	lw	a5,0(a5)
204034c0:	4fdc                	lw	a5,28(a5)
204034c2:	fc042683          	lw	a3,-64(s0)
204034c6:	fc442603          	lw	a2,-60(s0)
204034ca:	fc842583          	lw	a1,-56(s0)
204034ce:	fe842503          	lw	a0,-24(s0)
204034d2:	9782                	jalr	a5
204034d4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
204034d8:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:115
}
204034dc:	853e                	mv	a0,a5
204034de:	50f2                	lw	ra,60(sp)
204034e0:	5462                	lw	s0,56(sp)
204034e2:	6121                	addi	sp,sp,64
204034e4:	8082                	ret

204034e6 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
204034e6:	7179                	addi	sp,sp,-48
204034e8:	d622                	sw	s0,44(sp)
204034ea:	1800                	addi	s0,sp,48
204034ec:	fca42e23          	sw	a0,-36(s0)
204034f0:	fcb42c23          	sw	a1,-40(s0)
204034f4:	fcc42a23          	sw	a2,-44(s0)
204034f8:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
204034fc:	57fd                	li	a5,-1
204034fe:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20403502:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:123
}
20403506:	853e                	mv	a0,a5
20403508:	5432                	lw	s0,44(sp)
2040350a:	6145                	addi	sp,sp,48
2040350c:	8082                	ret

2040350e <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
2040350e:	1101                	addi	sp,sp,-32
20403510:	ce06                	sw	ra,28(sp)
20403512:	cc22                	sw	s0,24(sp)
20403514:	1000                	addi	s0,sp,32
20403516:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
2040351a:	3c0010ef          	jal	ra,204048da <__metal_controller_interrupt_vector_mode>
2040351e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:128
}
20403520:	853e                	mv	a0,a5
20403522:	40f2                	lw	ra,28(sp)
20403524:	4462                	lw	s0,24(sp)
20403526:	6105                	addi	sp,sp,32
20403528:	8082                	ret

2040352a <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
2040352a:	7179                	addi	sp,sp,-48
2040352c:	d606                	sw	ra,44(sp)
2040352e:	d422                	sw	s0,40(sp)
20403530:	1800                	addi	s0,sp,48
20403532:	fca42e23          	sw	a0,-36(s0)
20403536:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
2040353a:	57fd                	li	a5,-1
2040353c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20403540:	3539                	jal	2040334e <_get_cpu_intc>
20403542:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20403546:	fe842783          	lw	a5,-24(s0)
2040354a:	c395                	beqz	a5,2040356e <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
2040354c:	fd842703          	lw	a4,-40(s0)
20403550:	4785                	li	a5,1
20403552:	02e7e063          	bltu	a5,a4,20403572 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20403556:	fe842783          	lw	a5,-24(s0)
2040355a:	439c                	lw	a5,0(a5)
2040355c:	43dc                	lw	a5,4(a5)
2040355e:	fd842583          	lw	a1,-40(s0)
20403562:	fe842503          	lw	a0,-24(s0)
20403566:	9782                	jalr	a5
20403568:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
2040356c:	a021                	j	20403574 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2040356e:	0001                	nop
20403570:	a011                	j	20403574 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20403572:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20403574:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:148
}
20403578:	853e                	mv	a0,a5
2040357a:	50b2                	lw	ra,44(sp)
2040357c:	5422                	lw	s0,40(sp)
2040357e:	6145                	addi	sp,sp,48
20403580:	8082                	ret

20403582 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20403582:	7139                	addi	sp,sp,-64
20403584:	de06                	sw	ra,60(sp)
20403586:	dc22                	sw	s0,56(sp)
20403588:	0080                	addi	s0,sp,64
2040358a:	fca42623          	sw	a0,-52(s0)
2040358e:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20403592:	57fd                	li	a5,-1
20403594:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20403598:	fc842783          	lw	a5,-56(s0)
2040359c:	c7d9                	beqz	a5,2040362a <__metal_driver_riscv_clint0_enable+0xa8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2040359e:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
204035a2:	3375                	jal	2040334e <_get_cpu_intc>
204035a4:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
204035a8:	fcc42503          	lw	a0,-52(s0)
204035ac:	bdfff0ef          	jal	ra,2040318a <__metal_driver_sifive_clint0_num_interrupts>
204035b0:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
204035b4:	fe042223          	sw	zero,-28(s0)
204035b8:	a099                	j	204035fe <__metal_driver_riscv_clint0_enable+0x7c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
204035ba:	fe442583          	lw	a1,-28(s0)
204035be:	fcc42503          	lw	a0,-52(s0)
204035c2:	3135                	jal	204031ee <__metal_driver_sifive_clint0_interrupt_lines>
204035c4:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
204035c8:	fe442583          	lw	a1,-28(s0)
204035cc:	fcc42503          	lw	a0,-52(s0)
204035d0:	be3ff0ef          	jal	ra,204031b2 <__metal_driver_sifive_clint0_interrupt_parents>
204035d4:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
204035d8:	fe042703          	lw	a4,-32(s0)
204035dc:	fe842783          	lw	a5,-24(s0)
204035e0:	00f71863          	bne	a4,a5,204035f0 <__metal_driver_riscv_clint0_enable+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
204035e4:	fc842703          	lw	a4,-56(s0)
204035e8:	fd842783          	lw	a5,-40(s0)
204035ec:	02f70063          	beq	a4,a5,2040360c <__metal_driver_riscv_clint0_enable+0x8a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
204035f0:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204035f4:	fe442783          	lw	a5,-28(s0)
204035f8:	0785                	addi	a5,a5,1
204035fa:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
204035fe:	fe442703          	lw	a4,-28(s0)
20403602:	fdc42783          	lw	a5,-36(s0)
20403606:	faf74ae3          	blt	a4,a5,204035ba <__metal_driver_riscv_clint0_enable+0x38>
2040360a:	a011                	j	2040360e <__metal_driver_riscv_clint0_enable+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
2040360c:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
2040360e:	fe842783          	lw	a5,-24(s0)
20403612:	cf81                	beqz	a5,2040362a <__metal_driver_riscv_clint0_enable+0xa8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20403614:	fe842783          	lw	a5,-24(s0)
20403618:	439c                	lw	a5,0(a5)
2040361a:	53dc                	lw	a5,36(a5)
2040361c:	fc842583          	lw	a1,-56(s0)
20403620:	fe842503          	lw	a0,-24(s0)
20403624:	9782                	jalr	a5
20403626:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
2040362a:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:178
}
2040362e:	853e                	mv	a0,a5
20403630:	50f2                	lw	ra,60(sp)
20403632:	5462                	lw	s0,56(sp)
20403634:	6121                	addi	sp,sp,64
20403636:	8082                	ret

20403638 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20403638:	7139                	addi	sp,sp,-64
2040363a:	de06                	sw	ra,60(sp)
2040363c:	dc22                	sw	s0,56(sp)
2040363e:	0080                	addi	s0,sp,64
20403640:	fca42623          	sw	a0,-52(s0)
20403644:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20403648:	57fd                	li	a5,-1
2040364a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
2040364e:	fc842783          	lw	a5,-56(s0)
20403652:	cbc1                	beqz	a5,204036e2 <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20403654:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20403658:	39dd                	jal	2040334e <_get_cpu_intc>
2040365a:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
2040365e:	fcc42503          	lw	a0,-52(s0)
20403662:	b29ff0ef          	jal	ra,2040318a <__metal_driver_sifive_clint0_num_interrupts>
20403666:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
2040366a:	fe042223          	sw	zero,-28(s0)
2040366e:	a0a1                	j	204036b6 <__metal_driver_riscv_clint0_disable+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20403670:	fe442583          	lw	a1,-28(s0)
20403674:	fcc42503          	lw	a0,-52(s0)
20403678:	b77ff0ef          	jal	ra,204031ee <__metal_driver_sifive_clint0_interrupt_lines>
2040367c:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20403680:	fe442583          	lw	a1,-28(s0)
20403684:	fcc42503          	lw	a0,-52(s0)
20403688:	b2bff0ef          	jal	ra,204031b2 <__metal_driver_sifive_clint0_interrupt_parents>
2040368c:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20403690:	fe042703          	lw	a4,-32(s0)
20403694:	fe842783          	lw	a5,-24(s0)
20403698:	00f71863          	bne	a4,a5,204036a8 <__metal_driver_riscv_clint0_disable+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
2040369c:	fc842703          	lw	a4,-56(s0)
204036a0:	fd842783          	lw	a5,-40(s0)
204036a4:	02f70063          	beq	a4,a5,204036c4 <__metal_driver_riscv_clint0_disable+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
204036a8:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
204036ac:	fe442783          	lw	a5,-28(s0)
204036b0:	0785                	addi	a5,a5,1
204036b2:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
204036b6:	fe442703          	lw	a4,-28(s0)
204036ba:	fdc42783          	lw	a5,-36(s0)
204036be:	faf749e3          	blt	a4,a5,20403670 <__metal_driver_riscv_clint0_disable+0x38>
204036c2:	a011                	j	204036c6 <__metal_driver_riscv_clint0_disable+0x8e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
204036c4:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
204036c6:	fe842783          	lw	a5,-24(s0)
204036ca:	cf81                	beqz	a5,204036e2 <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
204036cc:	fe842783          	lw	a5,-24(s0)
204036d0:	439c                	lw	a5,0(a5)
204036d2:	579c                	lw	a5,40(a5)
204036d4:	fc842583          	lw	a1,-56(s0)
204036d8:	fe842503          	lw	a0,-24(s0)
204036dc:	9782                	jalr	a5
204036de:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
204036e2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:208
}
204036e6:	853e                	mv	a0,a5
204036e8:	50f2                	lw	ra,60(sp)
204036ea:	5462                	lw	s0,56(sp)
204036ec:	6121                	addi	sp,sp,64
204036ee:	8082                	ret

204036f0 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
204036f0:	7179                	addi	sp,sp,-48
204036f2:	d606                	sw	ra,44(sp)
204036f4:	d422                	sw	s0,40(sp)
204036f6:	1800                	addi	s0,sp,48
204036f8:	fca42e23          	sw	a0,-36(s0)
204036fc:	fcb42c23          	sw	a1,-40(s0)
20403700:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20403704:	57fd                	li	a5,-1
20403706:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
2040370a:	fdc42783          	lw	a5,-36(s0)
2040370e:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20403712:	fdc42503          	lw	a0,-36(s0)
20403716:	a4bff0ef          	jal	ra,20403160 <__metal_driver_sifive_clint0_control_base>
2040371a:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
2040371e:	fd842703          	lw	a4,-40(s0)
20403722:	4791                	li	a5,4
20403724:	0cf70163          	beq	a4,a5,204037e6 <__metal_driver_riscv_clint0_command_request+0xf6>
20403728:	fd842703          	lw	a4,-40(s0)
2040372c:	4791                	li	a5,4
2040372e:	0ee7c163          	blt	a5,a4,20403810 <__metal_driver_riscv_clint0_command_request+0x120>
20403732:	fd842703          	lw	a4,-40(s0)
20403736:	478d                	li	a5,3
20403738:	06f70663          	beq	a4,a5,204037a4 <__metal_driver_riscv_clint0_command_request+0xb4>
2040373c:	fd842703          	lw	a4,-40(s0)
20403740:	478d                	li	a5,3
20403742:	0ce7c763          	blt	a5,a4,20403810 <__metal_driver_riscv_clint0_command_request+0x120>
20403746:	fd842703          	lw	a4,-40(s0)
2040374a:	4785                	li	a5,1
2040374c:	00f70863          	beq	a4,a5,2040375c <__metal_driver_riscv_clint0_command_request+0x6c>
20403750:	fd842703          	lw	a4,-40(s0)
20403754:	4789                	li	a5,2
20403756:	02f70363          	beq	a4,a5,2040377c <__metal_driver_riscv_clint0_command_request+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
2040375a:	a85d                	j	20403810 <__metal_driver_riscv_clint0_command_request+0x120>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
2040375c:	fd442783          	lw	a5,-44(s0)
20403760:	cbd5                	beqz	a5,20403814 <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20403762:	fe842503          	lw	a0,-24(s0)
20403766:	ab9ff0ef          	jal	ra,2040321e <__metal_clint0_mtime_get>
2040376a:	872a                	mv	a4,a0
2040376c:	87ae                	mv	a5,a1
2040376e:	fd442683          	lw	a3,-44(s0)
20403772:	c298                	sw	a4,0(a3)
20403774:	c2dc                	sw	a5,4(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
20403776:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2040377a:	a869                	j	20403814 <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
2040377c:	fd442783          	lw	a5,-44(s0)
20403780:	cfc1                	beqz	a5,20403818 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20403782:	fd442783          	lw	a5,-44(s0)
20403786:	439c                	lw	a5,0(a5)
20403788:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
2040378c:	fe042783          	lw	a5,-32(s0)
20403790:	078a                	slli	a5,a5,0x2
20403792:	873e                	mv	a4,a5
20403794:	fe442783          	lw	a5,-28(s0)
20403798:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
2040379a:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
2040379e:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204037a2:	a89d                	j	20403818 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
204037a4:	fd442783          	lw	a5,-44(s0)
204037a8:	cbb5                	beqz	a5,2040381c <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
204037aa:	fd442783          	lw	a5,-44(s0)
204037ae:	439c                	lw	a5,0(a5)
204037b0:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
204037b4:	fe042783          	lw	a5,-32(s0)
204037b8:	078a                	slli	a5,a5,0x2
204037ba:	873e                	mv	a4,a5
204037bc:	fe442783          	lw	a5,-28(s0)
204037c0:	97ba                	add	a5,a5,a4
204037c2:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
204037c4:	4785                	li	a5,1
204037c6:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
204037c8:	0480000f          	fence	o,i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
204037cc:	fe042783          	lw	a5,-32(s0)
204037d0:	078a                	slli	a5,a5,0x2
204037d2:	873e                	mv	a4,a5
204037d4:	fe442783          	lw	a5,-28(s0)
204037d8:	97ba                	add	a5,a5,a4
204037da:	439c                	lw	a5,0(a5)
204037dc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
204037e0:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204037e4:	a825                	j	2040381c <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
204037e6:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
204037ea:	fd442783          	lw	a5,-44(s0)
204037ee:	cb8d                	beqz	a5,20403820 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
204037f0:	fd442783          	lw	a5,-44(s0)
204037f4:	439c                	lw	a5,0(a5)
204037f6:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
204037fa:	fe042783          	lw	a5,-32(s0)
204037fe:	078a                	slli	a5,a5,0x2
20403800:	873e                	mv	a4,a5
20403802:	fe442783          	lw	a5,-28(s0)
20403806:	97ba                	add	a5,a5,a4
20403808:	439c                	lw	a5,0(a5)
2040380a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
2040380e:	a809                	j	20403820 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
20403810:	0001                	nop
20403812:	a801                	j	20403822 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20403814:	0001                	nop
20403816:	a031                	j	20403822 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403818:	0001                	nop
2040381a:	a021                	j	20403822 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2040381c:	0001                	nop
2040381e:	a011                	j	20403822 <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
20403820:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
20403822:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:267
}
20403826:	853e                	mv	a0,a5
20403828:	50b2                	lw	ra,44(sp)
2040382a:	5422                	lw	s0,40(sp)
2040382c:	6145                	addi	sp,sp,48
2040382e:	8082                	ret

20403830 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
20403830:	7179                	addi	sp,sp,-48
20403832:	d606                	sw	ra,44(sp)
20403834:	d422                	sw	s0,40(sp)
20403836:	1800                	addi	s0,sp,48
20403838:	fca42e23          	sw	a0,-36(s0)
2040383c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
20403840:	65f030ef          	jal	ra,2040769e <metal_cpu_get_current_hartid>
20403844:	87aa                	mv	a5,a0
20403846:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
2040384a:	fec40793          	addi	a5,s0,-20
2040384e:	863e                	mv	a2,a5
20403850:	4589                	li	a1,2
20403852:	fdc42503          	lw	a0,-36(s0)
20403856:	3d69                	jal	204036f0 <__metal_driver_riscv_clint0_command_request>
20403858:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
2040385a:	853e                	mv	a0,a5
2040385c:	50b2                	lw	ra,44(sp)
2040385e:	5422                	lw	s0,40(sp)
20403860:	6145                	addi	sp,sp,48
20403862:	8082                	ret

20403864 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
20403864:	7179                	addi	sp,sp,-48
20403866:	d606                	sw	ra,44(sp)
20403868:	d422                	sw	s0,40(sp)
2040386a:	1800                	addi	s0,sp,48
2040386c:	fca42e23          	sw	a0,-36(s0)
20403870:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20403874:	62b030ef          	jal	ra,2040769e <metal_cpu_get_current_hartid>
20403878:	87aa                	mv	a5,a0
2040387a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
2040387e:	fec40793          	addi	a5,s0,-20
20403882:	863e                	mv	a2,a5
20403884:	458d                	li	a1,3
20403886:	fdc42503          	lw	a0,-36(s0)
2040388a:	359d                	jal	204036f0 <__metal_driver_riscv_clint0_command_request>
2040388c:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
2040388e:	853e                	mv	a0,a5
20403890:	50b2                	lw	ra,44(sp)
20403892:	5422                	lw	s0,40(sp)
20403894:	6145                	addi	sp,sp,48
20403896:	8082                	ret

20403898 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20403898:	1101                	addi	sp,sp,-32
2040389a:	ce22                	sw	s0,28(sp)
2040389c:	1000                	addi	s0,sp,32
2040389e:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204038a2:	fec42703          	lw	a4,-20(s0)
204038a6:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204038aa:	00f71463          	bne	a4,a5,204038b2 <__metal_driver_cpu_hartid+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:263
		return 0;
204038ae:	4781                	li	a5,0
204038b0:	a011                	j	204038b4 <__metal_driver_cpu_hartid+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:266
	}
	else {
		return -1;
204038b2:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:268
	}
}
204038b4:	853e                	mv	a0,a5
204038b6:	4472                	lw	s0,28(sp)
204038b8:	6105                	addi	sp,sp,32
204038ba:	8082                	ret

204038bc <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
204038bc:	1101                	addi	sp,sp,-32
204038be:	ce22                	sw	s0,28(sp)
204038c0:	1000                	addi	s0,sp,32
204038c2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204038c6:	fec42703          	lw	a4,-20(s0)
204038ca:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204038ce:	00f71763          	bne	a4,a5,204038dc <__metal_driver_cpu_timebase+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:273
		return 1000000;
204038d2:	000f47b7          	lui	a5,0xf4
204038d6:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
204038da:	a011                	j	204038de <__metal_driver_cpu_timebase+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:276
	}
	else {
		return 0;
204038dc:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:278
	}
}
204038de:	853e                	mv	a0,a5
204038e0:	4472                	lw	s0,28(sp)
204038e2:	6105                	addi	sp,sp,32
204038e4:	8082                	ret

204038e6 <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
204038e6:	1101                	addi	sp,sp,-32
204038e8:	ce22                	sw	s0,28(sp)
204038ea:	1000                	addi	s0,sp,32
204038ec:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204038f0:	fec42703          	lw	a4,-20(s0)
204038f4:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204038f8:	00f71763          	bne	a4,a5,20403906 <__metal_driver_cpu_interrupt_controller+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
204038fc:	800007b7          	lui	a5,0x80000
20403900:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
20403904:	a011                	j	20403908 <__metal_driver_cpu_interrupt_controller+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:286
	}
	else {
		return NULL;
20403906:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:288
	}
}
20403908:	853e                	mv	a0,a5
2040390a:	4472                	lw	s0,28(sp)
2040390c:	6105                	addi	sp,sp,32
2040390e:	8082                	ret

20403910 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
20403910:	1101                	addi	sp,sp,-32
20403912:	ce22                	sw	s0,28(sp)
20403914:	1000                	addi	s0,sp,32
20403916:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040391a:	fec42703          	lw	a4,-20(s0)
2040391e:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403922:	00f71463          	bne	a4,a5,2040392a <__metal_driver_cpu_buserror+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:303
		return NULL;
20403926:	4781                	li	a5,0
20403928:	a011                	j	2040392c <__metal_driver_cpu_buserror+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:306
	}
	else {
		return NULL;
2040392a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:308
	}
}
2040392c:	853e                	mv	a0,a5
2040392e:	4472                	lw	s0,28(sp)
20403930:	6105                	addi	sp,sp,32
20403932:	8082                	ret

20403934 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
20403934:	1101                	addi	sp,sp,-32
20403936:	ce22                	sw	s0,28(sp)
20403938:	1000                	addi	s0,sp,32
2040393a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
2040393e:	fec42783          	lw	a5,-20(s0)
20403942:	00f04c63          	bgtz	a5,2040395a <__metal_driver_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
20403946:	800007b7          	lui	a5,0x80000
2040394a:	fec42703          	lw	a4,-20(s0)
2040394e:	070a                	slli	a4,a4,0x2
20403950:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403954:	97ba                	add	a5,a5,a4
20403956:	439c                	lw	a5,0(a5)
20403958:	a011                	j	2040395c <__metal_driver_cpu_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
2040395a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:30
}
2040395c:	853e                	mv	a0,a5
2040395e:	4472                	lw	s0,28(sp)
20403960:	6105                	addi	sp,sp,32
20403962:	8082                	ret

20403964 <__metal_myhart_id>:
__metal_myhart_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
20403964:	1101                	addi	sp,sp,-32
20403966:	ce22                	sw	s0,28(sp)
20403968:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
2040396a:	f14027f3          	csrr	a5,mhartid
2040396e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20403972:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:36
}
20403976:	853e                	mv	a0,a5
20403978:	4472                	lw	s0,28(sp)
2040397a:	6105                	addi	sp,sp,32
2040397c:	8082                	ret

2040397e <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
2040397e:	1101                	addi	sp,sp,-32
20403980:	ce22                	sw	s0,28(sp)
20403982:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20403984:	47a1                	li	a5,8
20403986:	3007a7f3          	csrrs	a5,mstatus,a5
2040398a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
2040398e:	0001                	nop
20403990:	4472                	lw	s0,28(sp)
20403992:	6105                	addi	sp,sp,32
20403994:	8082                	ret

20403996 <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
20403996:	1101                	addi	sp,sp,-32
20403998:	ce22                	sw	s0,28(sp)
2040399a:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
2040399c:	47a1                	li	a5,8
2040399e:	3007b7f3          	csrrc	a5,mstatus,a5
204039a2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
204039a6:	0001                	nop
204039a8:	4472                	lw	s0,28(sp)
204039aa:	6105                	addi	sp,sp,32
204039ac:	8082                	ret

204039ae <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
204039ae:	1101                	addi	sp,sp,-32
204039b0:	ce22                	sw	s0,28(sp)
204039b2:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204039b4:	47a1                	li	a5,8
204039b6:	3047a7f3          	csrrs	a5,mie,a5
204039ba:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204039be:	0001                	nop
204039c0:	4472                	lw	s0,28(sp)
204039c2:	6105                	addi	sp,sp,32
204039c4:	8082                	ret

204039c6 <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
204039c6:	1101                	addi	sp,sp,-32
204039c8:	ce22                	sw	s0,28(sp)
204039ca:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204039cc:	47a1                	li	a5,8
204039ce:	3047b7f3          	csrrc	a5,mie,a5
204039d2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
204039d6:	0001                	nop
204039d8:	4472                	lw	s0,28(sp)
204039da:	6105                	addi	sp,sp,32
204039dc:	8082                	ret

204039de <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
204039de:	1101                	addi	sp,sp,-32
204039e0:	ce22                	sw	s0,28(sp)
204039e2:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204039e4:	08000793          	li	a5,128
204039e8:	3047a7f3          	csrrs	a5,mie,a5
204039ec:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
204039f0:	0001                	nop
204039f2:	4472                	lw	s0,28(sp)
204039f4:	6105                	addi	sp,sp,32
204039f6:	8082                	ret

204039f8 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
204039f8:	1101                	addi	sp,sp,-32
204039fa:	ce22                	sw	s0,28(sp)
204039fc:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
204039fe:	08000793          	li	a5,128
20403a02:	3047b7f3          	csrrc	a5,mie,a5
20403a06:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403a0a:	0001                	nop
20403a0c:	4472                	lw	s0,28(sp)
20403a0e:	6105                	addi	sp,sp,32
20403a10:	8082                	ret

20403a12 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
20403a12:	1101                	addi	sp,sp,-32
20403a14:	ce22                	sw	s0,28(sp)
20403a16:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403a18:	6785                	lui	a5,0x1
20403a1a:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403a1e:	3047a7f3          	csrrs	a5,mie,a5
20403a22:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20403a26:	0001                	nop
20403a28:	4472                	lw	s0,28(sp)
20403a2a:	6105                	addi	sp,sp,32
20403a2c:	8082                	ret

20403a2e <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
20403a2e:	1101                	addi	sp,sp,-32
20403a30:	ce22                	sw	s0,28(sp)
20403a32:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
20403a34:	6785                	lui	a5,0x1
20403a36:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
20403a3a:	3047b7f3          	csrrc	a5,mie,a5
20403a3e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
20403a42:	0001                	nop
20403a44:	4472                	lw	s0,28(sp)
20403a46:	6105                	addi	sp,sp,32
20403a48:	8082                	ret

20403a4a <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
20403a4a:	7179                	addi	sp,sp,-48
20403a4c:	d622                	sw	s0,44(sp)
20403a4e:	1800                	addi	s0,sp,48
20403a50:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
20403a54:	fdc42783          	lw	a5,-36(s0)
20403a58:	4705                	li	a4,1
20403a5a:	00f717b3          	sll	a5,a4,a5
20403a5e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20403a62:	fec42783          	lw	a5,-20(s0)
20403a66:	3047a7f3          	csrrs	a5,mie,a5
20403a6a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:105
}
20403a6e:	0001                	nop
20403a70:	5432                	lw	s0,44(sp)
20403a72:	6145                	addi	sp,sp,48
20403a74:	8082                	ret

20403a76 <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20403a76:	7179                	addi	sp,sp,-48
20403a78:	d622                	sw	s0,44(sp)
20403a7a:	1800                	addi	s0,sp,48
20403a7c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20403a80:	fdc42783          	lw	a5,-36(s0)
20403a84:	4705                	li	a4,1
20403a86:	00f717b3          	sll	a5,a4,a5
20403a8a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20403a8e:	fec42783          	lw	a5,-20(s0)
20403a92:	3047b7f3          	csrrc	a5,mie,a5
20403a96:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:111
}
20403a9a:	0001                	nop
20403a9c:	5432                	lw	s0,44(sp)
20403a9e:	6145                	addi	sp,sp,48
20403aa0:	8082                	ret

20403aa2 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20403aa2:	1101                	addi	sp,sp,-32
20403aa4:	ce06                	sw	ra,28(sp)
20403aa6:	cc22                	sw	s0,24(sp)
20403aa8:	1000                	addi	s0,sp,32
20403aaa:	fea42623          	sw	a0,-20(s0)
20403aae:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20403ab2:	06400513          	li	a0,100
20403ab6:	425030ef          	jal	ra,204076da <metal_shutdown>

20403aba <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20403aba:	1101                	addi	sp,sp,-32
20403abc:	ce06                	sw	ra,28(sp)
20403abe:	cc22                	sw	s0,24(sp)
20403ac0:	1000                	addi	s0,sp,32
20403ac2:	fea42623          	sw	a0,-20(s0)
20403ac6:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20403aca:	0c800513          	li	a0,200
20403ace:	40d030ef          	jal	ra,204076da <metal_shutdown>

20403ad2 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20403ad2:	715d                	addi	sp,sp,-80
20403ad4:	c686                	sw	ra,76(sp)
20403ad6:	c496                	sw	t0,72(sp)
20403ad8:	c29a                	sw	t1,68(sp)
20403ada:	c09e                	sw	t2,64(sp)
20403adc:	de22                	sw	s0,60(sp)
20403ade:	dc2a                	sw	a0,56(sp)
20403ae0:	da2e                	sw	a1,52(sp)
20403ae2:	d832                	sw	a2,48(sp)
20403ae4:	d636                	sw	a3,44(sp)
20403ae6:	d43a                	sw	a4,40(sp)
20403ae8:	d23e                	sw	a5,36(sp)
20403aea:	d042                	sw	a6,32(sp)
20403aec:	ce46                	sw	a7,28(sp)
20403aee:	cc72                	sw	t3,24(sp)
20403af0:	ca76                	sw	t4,20(sp)
20403af2:	c87a                	sw	t5,16(sp)
20403af4:	c67e                	sw	t6,12(sp)
20403af6:	0880                	addi	s0,sp,80
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20403af8:	12c00513          	li	a0,300
20403afc:	3df030ef          	jal	ra,204076da <metal_shutdown>

20403b00 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20403b00:	711d                	addi	sp,sp,-96
20403b02:	ce86                	sw	ra,92(sp)
20403b04:	cc96                	sw	t0,88(sp)
20403b06:	ca9a                	sw	t1,84(sp)
20403b08:	c89e                	sw	t2,80(sp)
20403b0a:	c6a2                	sw	s0,76(sp)
20403b0c:	c4aa                	sw	a0,72(sp)
20403b0e:	c2ae                	sw	a1,68(sp)
20403b10:	c0b2                	sw	a2,64(sp)
20403b12:	de36                	sw	a3,60(sp)
20403b14:	dc3a                	sw	a4,56(sp)
20403b16:	da3e                	sw	a5,52(sp)
20403b18:	d842                	sw	a6,48(sp)
20403b1a:	d646                	sw	a7,44(sp)
20403b1c:	d472                	sw	t3,40(sp)
20403b1e:	d276                	sw	t4,36(sp)
20403b20:	d07a                	sw	t5,32(sp)
20403b22:	ce7e                	sw	t6,28(sp)
20403b24:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20403b26:	3d3d                	jal	20403964 <__metal_myhart_id>
20403b28:	872a                	mv	a4,a0
20403b2a:	800007b7          	lui	a5,0x80000
20403b2e:	070a                	slli	a4,a4,0x2
20403b30:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403b34:	97ba                	add	a5,a5,a4
20403b36:	439c                	lw	a5,0(a5)
20403b38:	faf42623          	sw	a5,-84(s0)
20403b3c:	fac42783          	lw	a5,-84(s0)
20403b40:	c785                	beqz	a5,20403b68 <metal_software_interrupt_vector_handler+0x68>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20403b42:	fac42503          	lw	a0,-84(s0)
20403b46:	3345                	jal	204038e6 <__metal_driver_cpu_interrupt_controller>
20403b48:	faa42423          	sw	a0,-88(s0)
20403b4c:	fa842783          	lw	a5,-88(s0)
20403b50:	0e07a783          	lw	a5,224(a5)
20403b54:	faf42223          	sw	a5,-92(s0)
20403b58:	fa842783          	lw	a5,-88(s0)
20403b5c:	0d87a783          	lw	a5,216(a5)
20403b60:	fa442583          	lw	a1,-92(s0)
20403b64:	450d                	li	a0,3
20403b66:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:130
}
20403b68:	0001                	nop
20403b6a:	40f6                	lw	ra,92(sp)
20403b6c:	42e6                	lw	t0,88(sp)
20403b6e:	4356                	lw	t1,84(sp)
20403b70:	43c6                	lw	t2,80(sp)
20403b72:	4436                	lw	s0,76(sp)
20403b74:	4526                	lw	a0,72(sp)
20403b76:	4596                	lw	a1,68(sp)
20403b78:	4606                	lw	a2,64(sp)
20403b7a:	56f2                	lw	a3,60(sp)
20403b7c:	5762                	lw	a4,56(sp)
20403b7e:	57d2                	lw	a5,52(sp)
20403b80:	5842                	lw	a6,48(sp)
20403b82:	58b2                	lw	a7,44(sp)
20403b84:	5e22                	lw	t3,40(sp)
20403b86:	5e92                	lw	t4,36(sp)
20403b88:	5f02                	lw	t5,32(sp)
20403b8a:	4ff2                	lw	t6,28(sp)
20403b8c:	6125                	addi	sp,sp,96
20403b8e:	30200073          	mret

20403b92 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20403b92:	7179                	addi	sp,sp,-48
20403b94:	d606                	sw	ra,44(sp)
20403b96:	d422                	sw	s0,40(sp)
20403b98:	1800                	addi	s0,sp,48
20403b9a:	fca42e23          	sw	a0,-36(s0)
20403b9e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403ba2:	33c9                	jal	20403964 <__metal_myhart_id>
20403ba4:	872a                	mv	a4,a0
20403ba6:	800007b7          	lui	a5,0x80000
20403baa:	070a                	slli	a4,a4,0x2
20403bac:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403bb0:	97ba                	add	a5,a5,a4
20403bb2:	439c                	lw	a5,0(a5)
20403bb4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403bb8:	342027f3          	csrr	a5,mcause
20403bbc:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20403bc0:	fec42783          	lw	a5,-20(s0)
20403bc4:	c795                	beqz	a5,20403bf0 <__metal_default_sw_handler+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403bc6:	fec42503          	lw	a0,-20(s0)
20403bca:	3b31                	jal	204038e6 <__metal_driver_cpu_interrupt_controller>
20403bcc:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20403bd0:	fe842783          	lw	a5,-24(s0)
20403bd4:	3ff7f793          	andi	a5,a5,1023
20403bd8:	fe442703          	lw	a4,-28(s0)
20403bdc:	0e878793          	addi	a5,a5,232
20403be0:	078a                	slli	a5,a5,0x2
20403be2:	97ba                	add	a5,a5,a4
20403be4:	439c                	lw	a5,0(a5)
20403be6:	fdc42583          	lw	a1,-36(s0)
20403bea:	fec42503          	lw	a0,-20(s0)
20403bee:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20403bf0:	0001                	nop
20403bf2:	50b2                	lw	ra,44(sp)
20403bf4:	5422                	lw	s0,40(sp)
20403bf6:	6145                	addi	sp,sp,48
20403bf8:	8082                	ret

20403bfa <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20403bfa:	711d                	addi	sp,sp,-96
20403bfc:	ce86                	sw	ra,92(sp)
20403bfe:	cc96                	sw	t0,88(sp)
20403c00:	ca9a                	sw	t1,84(sp)
20403c02:	c89e                	sw	t2,80(sp)
20403c04:	c6a2                	sw	s0,76(sp)
20403c06:	c4aa                	sw	a0,72(sp)
20403c08:	c2ae                	sw	a1,68(sp)
20403c0a:	c0b2                	sw	a2,64(sp)
20403c0c:	de36                	sw	a3,60(sp)
20403c0e:	dc3a                	sw	a4,56(sp)
20403c10:	da3e                	sw	a5,52(sp)
20403c12:	d842                	sw	a6,48(sp)
20403c14:	d646                	sw	a7,44(sp)
20403c16:	d472                	sw	t3,40(sp)
20403c18:	d276                	sw	t4,36(sp)
20403c1a:	d07a                	sw	t5,32(sp)
20403c1c:	ce7e                	sw	t6,28(sp)
20403c1e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20403c20:	3391                	jal	20403964 <__metal_myhart_id>
20403c22:	872a                	mv	a4,a0
20403c24:	800007b7          	lui	a5,0x80000
20403c28:	070a                	slli	a4,a4,0x2
20403c2a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403c2e:	97ba                	add	a5,a5,a4
20403c30:	439c                	lw	a5,0(a5)
20403c32:	faf42623          	sw	a5,-84(s0)
20403c36:	fac42783          	lw	a5,-84(s0)
20403c3a:	c785                	beqz	a5,20403c62 <metal_timer_interrupt_vector_handler+0x68>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20403c3c:	fac42503          	lw	a0,-84(s0)
20403c40:	315d                	jal	204038e6 <__metal_driver_cpu_interrupt_controller>
20403c42:	faa42423          	sw	a0,-88(s0)
20403c46:	fa842783          	lw	a5,-88(s0)
20403c4a:	1407a783          	lw	a5,320(a5)
20403c4e:	faf42223          	sw	a5,-92(s0)
20403c52:	fa842783          	lw	a5,-88(s0)
20403c56:	1387a783          	lw	a5,312(a5)
20403c5a:	fa442583          	lw	a1,-92(s0)
20403c5e:	451d                	li	a0,7
20403c60:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:150
}
20403c62:	0001                	nop
20403c64:	40f6                	lw	ra,92(sp)
20403c66:	42e6                	lw	t0,88(sp)
20403c68:	4356                	lw	t1,84(sp)
20403c6a:	43c6                	lw	t2,80(sp)
20403c6c:	4436                	lw	s0,76(sp)
20403c6e:	4526                	lw	a0,72(sp)
20403c70:	4596                	lw	a1,68(sp)
20403c72:	4606                	lw	a2,64(sp)
20403c74:	56f2                	lw	a3,60(sp)
20403c76:	5762                	lw	a4,56(sp)
20403c78:	57d2                	lw	a5,52(sp)
20403c7a:	5842                	lw	a6,48(sp)
20403c7c:	58b2                	lw	a7,44(sp)
20403c7e:	5e22                	lw	t3,40(sp)
20403c80:	5e92                	lw	t4,36(sp)
20403c82:	5f02                	lw	t5,32(sp)
20403c84:	4ff2                	lw	t6,28(sp)
20403c86:	6125                	addi	sp,sp,96
20403c88:	30200073          	mret

20403c8c <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403c8c:	1101                	addi	sp,sp,-32
20403c8e:	ce22                	sw	s0,28(sp)
20403c90:	1000                	addi	s0,sp,32
20403c92:	fea42623          	sw	a0,-20(s0)
20403c96:	feb42423          	sw	a1,-24(s0)
20403c9a:	0001                	nop
20403c9c:	4472                	lw	s0,28(sp)
20403c9e:	6105                	addi	sp,sp,32
20403ca0:	8082                	ret

20403ca2 <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20403ca2:	7179                	addi	sp,sp,-48
20403ca4:	d606                	sw	ra,44(sp)
20403ca6:	d422                	sw	s0,40(sp)
20403ca8:	1800                	addi	s0,sp,48
20403caa:	fca42e23          	sw	a0,-36(s0)
20403cae:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20403cb2:	394d                	jal	20403964 <__metal_myhart_id>
20403cb4:	87aa                	mv	a5,a0
20403cb6:	853e                	mv	a0,a5
20403cb8:	c7dff0ef          	jal	ra,20403934 <__metal_driver_cpu_get>
20403cbc:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403cc0:	fec42503          	lw	a0,-20(s0)
20403cc4:	2e2010ef          	jal	ra,20404fa6 <__metal_driver_cpu_mtime_get>
20403cc8:	fea42023          	sw	a0,-32(s0)
20403ccc:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403cd0:	fe042703          	lw	a4,-32(s0)
20403cd4:	fe442783          	lw	a5,-28(s0)
20403cd8:	4529                	li	a0,10
20403cda:	4581                	li	a1,0
20403cdc:	00a70633          	add	a2,a4,a0
20403ce0:	8832                	mv	a6,a2
20403ce2:	00e83833          	sltu	a6,a6,a4
20403ce6:	00b786b3          	add	a3,a5,a1
20403cea:	00d807b3          	add	a5,a6,a3
20403cee:	86be                	mv	a3,a5
20403cf0:	8732                	mv	a4,a2
20403cf2:	87b6                	mv	a5,a3
20403cf4:	85ba                	mv	a1,a4
20403cf6:	863e                	mv	a2,a5
20403cf8:	fec42503          	lw	a0,-20(s0)
20403cfc:	310010ef          	jal	ra,2040500c <__metal_driver_cpu_mtimecmp_set>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403d00:	0001                	nop
20403d02:	50b2                	lw	ra,44(sp)
20403d04:	5422                	lw	s0,40(sp)
20403d06:	6145                	addi	sp,sp,48
20403d08:	8082                	ret
	...

20403d80 <__metal_exception_handler>:
__metal_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403d80:	7119                	addi	sp,sp,-128
20403d82:	de86                	sw	ra,124(sp)
20403d84:	dc96                	sw	t0,120(sp)
20403d86:	da9a                	sw	t1,116(sp)
20403d88:	d89e                	sw	t2,112(sp)
20403d8a:	d6a2                	sw	s0,108(sp)
20403d8c:	d4aa                	sw	a0,104(sp)
20403d8e:	d2ae                	sw	a1,100(sp)
20403d90:	d0b2                	sw	a2,96(sp)
20403d92:	ceb6                	sw	a3,92(sp)
20403d94:	ccba                	sw	a4,88(sp)
20403d96:	cabe                	sw	a5,84(sp)
20403d98:	c8c2                	sw	a6,80(sp)
20403d9a:	c6c6                	sw	a7,76(sp)
20403d9c:	c4f2                	sw	t3,72(sp)
20403d9e:	c2f6                	sw	t4,68(sp)
20403da0:	c0fa                	sw	t5,64(sp)
20403da2:	de7e                	sw	t6,60(sp)
20403da4:	0100                	addi	s0,sp,128
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403da6:	bbfff0ef          	jal	ra,20403964 <__metal_myhart_id>
20403daa:	872a                	mv	a4,a0
20403dac:	800007b7          	lui	a5,0x80000
20403db0:	070a                	slli	a4,a4,0x2
20403db2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403db6:	97ba                	add	a5,a5,a4
20403db8:	439c                	lw	a5,0(a5)
20403dba:	faf42623          	sw	a5,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20403dbe:	342027f3          	csrr	a5,mcause
20403dc2:	faf42423          	sw	a5,-88(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403dc6:	341027f3          	csrr	a5,mepc
20403dca:	faf42223          	sw	a5,-92(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20403dce:	343027f3          	csrr	a5,mtval
20403dd2:	faf42023          	sw	a5,-96(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403dd6:	305027f3          	csrr	a5,mtvec
20403dda:	f8f42e23          	sw	a5,-100(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20403dde:	fac42783          	lw	a5,-84(s0)
20403de2:	cbfd                	beqz	a5,20403ed8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403de4:	fac42503          	lw	a0,-84(s0)
20403de8:	affff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20403dec:	f8a42c23          	sw	a0,-104(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20403df0:	fa842783          	lw	a5,-88(s0)
20403df4:	3ff7f793          	andi	a5,a5,1023
20403df8:	f8f42a23          	sw	a5,-108(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20403dfc:	fa842783          	lw	a5,-88(s0)
20403e00:	0a07de63          	bgez	a5,20403ebc <__metal_exception_handler+0x13c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403e04:	f9442703          	lw	a4,-108(s0)
20403e08:	08000793          	li	a5,128
20403e0c:	02f71263          	bne	a4,a5,20403e30 <__metal_exception_handler+0xb0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403e10:	f9842783          	lw	a5,-104(s0)
20403e14:	3987a783          	lw	a5,920(a5)
20403e18:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20403e1c:	f9842783          	lw	a5,-104(s0)
20403e20:	3907a783          	lw	a5,912(a5)
20403e24:	f8c42583          	lw	a1,-116(s0)
20403e28:	f9442503          	lw	a0,-108(s0)
20403e2c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20403e2e:	a06d                	j	20403ed8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403e30:	f9442703          	lw	a4,-108(s0)
20403e34:	47ad                	li	a5,11
20403e36:	00e7d763          	bge	a5,a4,20403e44 <__metal_exception_handler+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20403e3a:	f9c42783          	lw	a5,-100(s0)
20403e3e:	03f7f793          	andi	a5,a5,63
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20403e42:	ef9d                	bnez	a5,20403e80 <__metal_exception_handler+0x100>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20403e44:	f9842683          	lw	a3,-104(s0)
20403e48:	f9442703          	lw	a4,-108(s0)
20403e4c:	87ba                	mv	a5,a4
20403e4e:	0786                	slli	a5,a5,0x1
20403e50:	97ba                	add	a5,a5,a4
20403e52:	078e                	slli	a5,a5,0x3
20403e54:	97b6                	add	a5,a5,a3
20403e56:	0987a783          	lw	a5,152(a5)
20403e5a:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20403e5e:	f9842683          	lw	a3,-104(s0)
20403e62:	f9442703          	lw	a4,-108(s0)
20403e66:	87ba                	mv	a5,a4
20403e68:	0786                	slli	a5,a5,0x1
20403e6a:	97ba                	add	a5,a5,a4
20403e6c:	078e                	slli	a5,a5,0x3
20403e6e:	97b6                	add	a5,a5,a3
20403e70:	0907a783          	lw	a5,144(a5)
20403e74:	f8c42583          	lw	a1,-116(s0)
20403e78:	f9442503          	lw	a0,-108(s0)
20403e7c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20403e7e:	a8a9                	j	20403ed8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403e80:	f9c42783          	lw	a5,-100(s0)
20403e84:	03f7f713          	andi	a4,a5,63
20403e88:	4789                	li	a5,2
20403e8a:	04f71763          	bne	a4,a5,20403ed8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20403e8e:	307027f3          	csrr	a5,mtvt
20403e92:	f8f42823          	sw	a5,-112(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403e96:	f9842783          	lw	a5,-104(s0)
20403e9a:	0dc7a783          	lw	a5,220(a5)
20403e9e:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403ea2:	f9042783          	lw	a5,-112(s0)
20403ea6:	439c                	lw	a5,0(a5)
20403ea8:	f8f42423          	sw	a5,-120(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20403eac:	f8842783          	lw	a5,-120(s0)
20403eb0:	f8c42583          	lw	a1,-116(s0)
20403eb4:	f9442503          	lw	a0,-108(s0)
20403eb8:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20403eba:	a839                	j	20403ed8 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20403ebc:	f9842703          	lw	a4,-104(s0)
20403ec0:	f9442783          	lw	a5,-108(s0)
20403ec4:	0e878793          	addi	a5,a5,232
20403ec8:	078a                	slli	a5,a5,0x2
20403eca:	97ba                	add	a5,a5,a4
20403ecc:	439c                	lw	a5,0(a5)
20403ece:	f9442583          	lw	a1,-108(s0)
20403ed2:	fac42503          	lw	a0,-84(s0)
20403ed6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403ed8:	50f6                	lw	ra,124(sp)
20403eda:	52e6                	lw	t0,120(sp)
20403edc:	5356                	lw	t1,116(sp)
20403ede:	53c6                	lw	t2,112(sp)
20403ee0:	5436                	lw	s0,108(sp)
20403ee2:	5526                	lw	a0,104(sp)
20403ee4:	5596                	lw	a1,100(sp)
20403ee6:	5606                	lw	a2,96(sp)
20403ee8:	46f6                	lw	a3,92(sp)
20403eea:	4766                	lw	a4,88(sp)
20403eec:	47d6                	lw	a5,84(sp)
20403eee:	4846                	lw	a6,80(sp)
20403ef0:	48b6                	lw	a7,76(sp)
20403ef2:	4e26                	lw	t3,72(sp)
20403ef4:	4e96                	lw	t4,68(sp)
20403ef6:	4f06                	lw	t5,64(sp)
20403ef8:	5ff2                	lw	t6,60(sp)
20403efa:	6109                	addi	sp,sp,128
20403efc:	30200073          	mret
	...

20403f7a <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20403f7a:	711d                	addi	sp,sp,-96
20403f7c:	ce86                	sw	ra,92(sp)
20403f7e:	cc96                	sw	t0,88(sp)
20403f80:	ca9a                	sw	t1,84(sp)
20403f82:	c89e                	sw	t2,80(sp)
20403f84:	c6a2                	sw	s0,76(sp)
20403f86:	c4aa                	sw	a0,72(sp)
20403f88:	c2ae                	sw	a1,68(sp)
20403f8a:	c0b2                	sw	a2,64(sp)
20403f8c:	de36                	sw	a3,60(sp)
20403f8e:	dc3a                	sw	a4,56(sp)
20403f90:	da3e                	sw	a5,52(sp)
20403f92:	d842                	sw	a6,48(sp)
20403f94:	d646                	sw	a7,44(sp)
20403f96:	d472                	sw	t3,40(sp)
20403f98:	d276                	sw	t4,36(sp)
20403f9a:	d07a                	sw	t5,32(sp)
20403f9c:	ce7e                	sw	t6,28(sp)
20403f9e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403fa0:	9c5ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20403fa4:	872a                	mv	a4,a0
20403fa6:	800007b7          	lui	a5,0x80000
20403faa:	070a                	slli	a4,a4,0x2
20403fac:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20403fb0:	97ba                	add	a5,a5,a4
20403fb2:	439c                	lw	a5,0(a5)
20403fb4:	faf42623          	sw	a5,-84(s0)
20403fb8:	fac42783          	lw	a5,-84(s0)
20403fbc:	c78d                	beqz	a5,20403fe6 <metal_lc0_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20403fbe:	fac42503          	lw	a0,-84(s0)
20403fc2:	925ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20403fc6:	faa42423          	sw	a0,-88(s0)
20403fca:	fa842783          	lw	a5,-88(s0)
20403fce:	2187a783          	lw	a5,536(a5)
20403fd2:	faf42223          	sw	a5,-92(s0)
20403fd6:	fa842783          	lw	a5,-88(s0)
20403fda:	2107a783          	lw	a5,528(a5)
20403fde:	fa442583          	lw	a1,-92(s0)
20403fe2:	4541                	li	a0,16
20403fe4:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403fe6:	0001                	nop
20403fe8:	40f6                	lw	ra,92(sp)
20403fea:	42e6                	lw	t0,88(sp)
20403fec:	4356                	lw	t1,84(sp)
20403fee:	43c6                	lw	t2,80(sp)
20403ff0:	4436                	lw	s0,76(sp)
20403ff2:	4526                	lw	a0,72(sp)
20403ff4:	4596                	lw	a1,68(sp)
20403ff6:	4606                	lw	a2,64(sp)
20403ff8:	56f2                	lw	a3,60(sp)
20403ffa:	5762                	lw	a4,56(sp)
20403ffc:	57d2                	lw	a5,52(sp)
20403ffe:	5842                	lw	a6,48(sp)
20404000:	58b2                	lw	a7,44(sp)
20404002:	5e22                	lw	t3,40(sp)
20404004:	5e92                	lw	t4,36(sp)
20404006:	5f02                	lw	t5,32(sp)
20404008:	4ff2                	lw	t6,28(sp)
2040400a:	6125                	addi	sp,sp,96
2040400c:	30200073          	mret

20404010 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20404010:	711d                	addi	sp,sp,-96
20404012:	ce86                	sw	ra,92(sp)
20404014:	cc96                	sw	t0,88(sp)
20404016:	ca9a                	sw	t1,84(sp)
20404018:	c89e                	sw	t2,80(sp)
2040401a:	c6a2                	sw	s0,76(sp)
2040401c:	c4aa                	sw	a0,72(sp)
2040401e:	c2ae                	sw	a1,68(sp)
20404020:	c0b2                	sw	a2,64(sp)
20404022:	de36                	sw	a3,60(sp)
20404024:	dc3a                	sw	a4,56(sp)
20404026:	da3e                	sw	a5,52(sp)
20404028:	d842                	sw	a6,48(sp)
2040402a:	d646                	sw	a7,44(sp)
2040402c:	d472                	sw	t3,40(sp)
2040402e:	d276                	sw	t4,36(sp)
20404030:	d07a                	sw	t5,32(sp)
20404032:	ce7e                	sw	t6,28(sp)
20404034:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20404036:	92fff0ef          	jal	ra,20403964 <__metal_myhart_id>
2040403a:	872a                	mv	a4,a0
2040403c:	800007b7          	lui	a5,0x80000
20404040:	070a                	slli	a4,a4,0x2
20404042:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404046:	97ba                	add	a5,a5,a4
20404048:	439c                	lw	a5,0(a5)
2040404a:	faf42623          	sw	a5,-84(s0)
2040404e:	fac42783          	lw	a5,-84(s0)
20404052:	c78d                	beqz	a5,2040407c <metal_lc1_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20404054:	fac42503          	lw	a0,-84(s0)
20404058:	88fff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
2040405c:	faa42423          	sw	a0,-88(s0)
20404060:	fa842783          	lw	a5,-88(s0)
20404064:	2307a783          	lw	a5,560(a5)
20404068:	faf42223          	sw	a5,-92(s0)
2040406c:	fa842783          	lw	a5,-88(s0)
20404070:	2287a783          	lw	a5,552(a5)
20404074:	fa442583          	lw	a1,-92(s0)
20404078:	4545                	li	a0,17
2040407a:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:221
}
2040407c:	0001                	nop
2040407e:	40f6                	lw	ra,92(sp)
20404080:	42e6                	lw	t0,88(sp)
20404082:	4356                	lw	t1,84(sp)
20404084:	43c6                	lw	t2,80(sp)
20404086:	4436                	lw	s0,76(sp)
20404088:	4526                	lw	a0,72(sp)
2040408a:	4596                	lw	a1,68(sp)
2040408c:	4606                	lw	a2,64(sp)
2040408e:	56f2                	lw	a3,60(sp)
20404090:	5762                	lw	a4,56(sp)
20404092:	57d2                	lw	a5,52(sp)
20404094:	5842                	lw	a6,48(sp)
20404096:	58b2                	lw	a7,44(sp)
20404098:	5e22                	lw	t3,40(sp)
2040409a:	5e92                	lw	t4,36(sp)
2040409c:	5f02                	lw	t5,32(sp)
2040409e:	4ff2                	lw	t6,28(sp)
204040a0:	6125                	addi	sp,sp,96
204040a2:	30200073          	mret

204040a6 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
204040a6:	711d                	addi	sp,sp,-96
204040a8:	ce86                	sw	ra,92(sp)
204040aa:	cc96                	sw	t0,88(sp)
204040ac:	ca9a                	sw	t1,84(sp)
204040ae:	c89e                	sw	t2,80(sp)
204040b0:	c6a2                	sw	s0,76(sp)
204040b2:	c4aa                	sw	a0,72(sp)
204040b4:	c2ae                	sw	a1,68(sp)
204040b6:	c0b2                	sw	a2,64(sp)
204040b8:	de36                	sw	a3,60(sp)
204040ba:	dc3a                	sw	a4,56(sp)
204040bc:	da3e                	sw	a5,52(sp)
204040be:	d842                	sw	a6,48(sp)
204040c0:	d646                	sw	a7,44(sp)
204040c2:	d472                	sw	t3,40(sp)
204040c4:	d276                	sw	t4,36(sp)
204040c6:	d07a                	sw	t5,32(sp)
204040c8:	ce7e                	sw	t6,28(sp)
204040ca:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
204040cc:	899ff0ef          	jal	ra,20403964 <__metal_myhart_id>
204040d0:	872a                	mv	a4,a0
204040d2:	800007b7          	lui	a5,0x80000
204040d6:	070a                	slli	a4,a4,0x2
204040d8:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204040dc:	97ba                	add	a5,a5,a4
204040de:	439c                	lw	a5,0(a5)
204040e0:	faf42623          	sw	a5,-84(s0)
204040e4:	fac42783          	lw	a5,-84(s0)
204040e8:	c78d                	beqz	a5,20404112 <metal_lc2_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
204040ea:	fac42503          	lw	a0,-84(s0)
204040ee:	ff8ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204040f2:	faa42423          	sw	a0,-88(s0)
204040f6:	fa842783          	lw	a5,-88(s0)
204040fa:	2487a783          	lw	a5,584(a5)
204040fe:	faf42223          	sw	a5,-92(s0)
20404102:	fa842783          	lw	a5,-88(s0)
20404106:	2407a783          	lw	a5,576(a5)
2040410a:	fa442583          	lw	a1,-92(s0)
2040410e:	4549                	li	a0,18
20404110:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:226
}
20404112:	0001                	nop
20404114:	40f6                	lw	ra,92(sp)
20404116:	42e6                	lw	t0,88(sp)
20404118:	4356                	lw	t1,84(sp)
2040411a:	43c6                	lw	t2,80(sp)
2040411c:	4436                	lw	s0,76(sp)
2040411e:	4526                	lw	a0,72(sp)
20404120:	4596                	lw	a1,68(sp)
20404122:	4606                	lw	a2,64(sp)
20404124:	56f2                	lw	a3,60(sp)
20404126:	5762                	lw	a4,56(sp)
20404128:	57d2                	lw	a5,52(sp)
2040412a:	5842                	lw	a6,48(sp)
2040412c:	58b2                	lw	a7,44(sp)
2040412e:	5e22                	lw	t3,40(sp)
20404130:	5e92                	lw	t4,36(sp)
20404132:	5f02                	lw	t5,32(sp)
20404134:	4ff2                	lw	t6,28(sp)
20404136:	6125                	addi	sp,sp,96
20404138:	30200073          	mret

2040413c <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
2040413c:	711d                	addi	sp,sp,-96
2040413e:	ce86                	sw	ra,92(sp)
20404140:	cc96                	sw	t0,88(sp)
20404142:	ca9a                	sw	t1,84(sp)
20404144:	c89e                	sw	t2,80(sp)
20404146:	c6a2                	sw	s0,76(sp)
20404148:	c4aa                	sw	a0,72(sp)
2040414a:	c2ae                	sw	a1,68(sp)
2040414c:	c0b2                	sw	a2,64(sp)
2040414e:	de36                	sw	a3,60(sp)
20404150:	dc3a                	sw	a4,56(sp)
20404152:	da3e                	sw	a5,52(sp)
20404154:	d842                	sw	a6,48(sp)
20404156:	d646                	sw	a7,44(sp)
20404158:	d472                	sw	t3,40(sp)
2040415a:	d276                	sw	t4,36(sp)
2040415c:	d07a                	sw	t5,32(sp)
2040415e:	ce7e                	sw	t6,28(sp)
20404160:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
20404162:	803ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20404166:	872a                	mv	a4,a0
20404168:	800007b7          	lui	a5,0x80000
2040416c:	070a                	slli	a4,a4,0x2
2040416e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404172:	97ba                	add	a5,a5,a4
20404174:	439c                	lw	a5,0(a5)
20404176:	faf42623          	sw	a5,-84(s0)
2040417a:	fac42783          	lw	a5,-84(s0)
2040417e:	c78d                	beqz	a5,204041a8 <metal_lc3_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20404180:	fac42503          	lw	a0,-84(s0)
20404184:	f62ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20404188:	faa42423          	sw	a0,-88(s0)
2040418c:	fa842783          	lw	a5,-88(s0)
20404190:	2607a783          	lw	a5,608(a5)
20404194:	faf42223          	sw	a5,-92(s0)
20404198:	fa842783          	lw	a5,-88(s0)
2040419c:	2587a783          	lw	a5,600(a5)
204041a0:	fa442583          	lw	a1,-92(s0)
204041a4:	454d                	li	a0,19
204041a6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:231
}
204041a8:	0001                	nop
204041aa:	40f6                	lw	ra,92(sp)
204041ac:	42e6                	lw	t0,88(sp)
204041ae:	4356                	lw	t1,84(sp)
204041b0:	43c6                	lw	t2,80(sp)
204041b2:	4436                	lw	s0,76(sp)
204041b4:	4526                	lw	a0,72(sp)
204041b6:	4596                	lw	a1,68(sp)
204041b8:	4606                	lw	a2,64(sp)
204041ba:	56f2                	lw	a3,60(sp)
204041bc:	5762                	lw	a4,56(sp)
204041be:	57d2                	lw	a5,52(sp)
204041c0:	5842                	lw	a6,48(sp)
204041c2:	58b2                	lw	a7,44(sp)
204041c4:	5e22                	lw	t3,40(sp)
204041c6:	5e92                	lw	t4,36(sp)
204041c8:	5f02                	lw	t5,32(sp)
204041ca:	4ff2                	lw	t6,28(sp)
204041cc:	6125                	addi	sp,sp,96
204041ce:	30200073          	mret

204041d2 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
204041d2:	711d                	addi	sp,sp,-96
204041d4:	ce86                	sw	ra,92(sp)
204041d6:	cc96                	sw	t0,88(sp)
204041d8:	ca9a                	sw	t1,84(sp)
204041da:	c89e                	sw	t2,80(sp)
204041dc:	c6a2                	sw	s0,76(sp)
204041de:	c4aa                	sw	a0,72(sp)
204041e0:	c2ae                	sw	a1,68(sp)
204041e2:	c0b2                	sw	a2,64(sp)
204041e4:	de36                	sw	a3,60(sp)
204041e6:	dc3a                	sw	a4,56(sp)
204041e8:	da3e                	sw	a5,52(sp)
204041ea:	d842                	sw	a6,48(sp)
204041ec:	d646                	sw	a7,44(sp)
204041ee:	d472                	sw	t3,40(sp)
204041f0:	d276                	sw	t4,36(sp)
204041f2:	d07a                	sw	t5,32(sp)
204041f4:	ce7e                	sw	t6,28(sp)
204041f6:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
204041f8:	f6cff0ef          	jal	ra,20403964 <__metal_myhart_id>
204041fc:	872a                	mv	a4,a0
204041fe:	800007b7          	lui	a5,0x80000
20404202:	070a                	slli	a4,a4,0x2
20404204:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404208:	97ba                	add	a5,a5,a4
2040420a:	439c                	lw	a5,0(a5)
2040420c:	faf42623          	sw	a5,-84(s0)
20404210:	fac42783          	lw	a5,-84(s0)
20404214:	c78d                	beqz	a5,2040423e <metal_lc4_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20404216:	fac42503          	lw	a0,-84(s0)
2040421a:	eccff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
2040421e:	faa42423          	sw	a0,-88(s0)
20404222:	fa842783          	lw	a5,-88(s0)
20404226:	2787a783          	lw	a5,632(a5)
2040422a:	faf42223          	sw	a5,-92(s0)
2040422e:	fa842783          	lw	a5,-88(s0)
20404232:	2707a783          	lw	a5,624(a5)
20404236:	fa442583          	lw	a1,-92(s0)
2040423a:	4551                	li	a0,20
2040423c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:236
}
2040423e:	0001                	nop
20404240:	40f6                	lw	ra,92(sp)
20404242:	42e6                	lw	t0,88(sp)
20404244:	4356                	lw	t1,84(sp)
20404246:	43c6                	lw	t2,80(sp)
20404248:	4436                	lw	s0,76(sp)
2040424a:	4526                	lw	a0,72(sp)
2040424c:	4596                	lw	a1,68(sp)
2040424e:	4606                	lw	a2,64(sp)
20404250:	56f2                	lw	a3,60(sp)
20404252:	5762                	lw	a4,56(sp)
20404254:	57d2                	lw	a5,52(sp)
20404256:	5842                	lw	a6,48(sp)
20404258:	58b2                	lw	a7,44(sp)
2040425a:	5e22                	lw	t3,40(sp)
2040425c:	5e92                	lw	t4,36(sp)
2040425e:	5f02                	lw	t5,32(sp)
20404260:	4ff2                	lw	t6,28(sp)
20404262:	6125                	addi	sp,sp,96
20404264:	30200073          	mret

20404268 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20404268:	711d                	addi	sp,sp,-96
2040426a:	ce86                	sw	ra,92(sp)
2040426c:	cc96                	sw	t0,88(sp)
2040426e:	ca9a                	sw	t1,84(sp)
20404270:	c89e                	sw	t2,80(sp)
20404272:	c6a2                	sw	s0,76(sp)
20404274:	c4aa                	sw	a0,72(sp)
20404276:	c2ae                	sw	a1,68(sp)
20404278:	c0b2                	sw	a2,64(sp)
2040427a:	de36                	sw	a3,60(sp)
2040427c:	dc3a                	sw	a4,56(sp)
2040427e:	da3e                	sw	a5,52(sp)
20404280:	d842                	sw	a6,48(sp)
20404282:	d646                	sw	a7,44(sp)
20404284:	d472                	sw	t3,40(sp)
20404286:	d276                	sw	t4,36(sp)
20404288:	d07a                	sw	t5,32(sp)
2040428a:	ce7e                	sw	t6,28(sp)
2040428c:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2040428e:	ed6ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20404292:	872a                	mv	a4,a0
20404294:	800007b7          	lui	a5,0x80000
20404298:	070a                	slli	a4,a4,0x2
2040429a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040429e:	97ba                	add	a5,a5,a4
204042a0:	439c                	lw	a5,0(a5)
204042a2:	faf42623          	sw	a5,-84(s0)
204042a6:	fac42783          	lw	a5,-84(s0)
204042aa:	c78d                	beqz	a5,204042d4 <metal_lc5_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
204042ac:	fac42503          	lw	a0,-84(s0)
204042b0:	e36ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204042b4:	faa42423          	sw	a0,-88(s0)
204042b8:	fa842783          	lw	a5,-88(s0)
204042bc:	2907a783          	lw	a5,656(a5)
204042c0:	faf42223          	sw	a5,-92(s0)
204042c4:	fa842783          	lw	a5,-88(s0)
204042c8:	2887a783          	lw	a5,648(a5)
204042cc:	fa442583          	lw	a1,-92(s0)
204042d0:	4555                	li	a0,21
204042d2:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:241
}
204042d4:	0001                	nop
204042d6:	40f6                	lw	ra,92(sp)
204042d8:	42e6                	lw	t0,88(sp)
204042da:	4356                	lw	t1,84(sp)
204042dc:	43c6                	lw	t2,80(sp)
204042de:	4436                	lw	s0,76(sp)
204042e0:	4526                	lw	a0,72(sp)
204042e2:	4596                	lw	a1,68(sp)
204042e4:	4606                	lw	a2,64(sp)
204042e6:	56f2                	lw	a3,60(sp)
204042e8:	5762                	lw	a4,56(sp)
204042ea:	57d2                	lw	a5,52(sp)
204042ec:	5842                	lw	a6,48(sp)
204042ee:	58b2                	lw	a7,44(sp)
204042f0:	5e22                	lw	t3,40(sp)
204042f2:	5e92                	lw	t4,36(sp)
204042f4:	5f02                	lw	t5,32(sp)
204042f6:	4ff2                	lw	t6,28(sp)
204042f8:	6125                	addi	sp,sp,96
204042fa:	30200073          	mret

204042fe <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
204042fe:	711d                	addi	sp,sp,-96
20404300:	ce86                	sw	ra,92(sp)
20404302:	cc96                	sw	t0,88(sp)
20404304:	ca9a                	sw	t1,84(sp)
20404306:	c89e                	sw	t2,80(sp)
20404308:	c6a2                	sw	s0,76(sp)
2040430a:	c4aa                	sw	a0,72(sp)
2040430c:	c2ae                	sw	a1,68(sp)
2040430e:	c0b2                	sw	a2,64(sp)
20404310:	de36                	sw	a3,60(sp)
20404312:	dc3a                	sw	a4,56(sp)
20404314:	da3e                	sw	a5,52(sp)
20404316:	d842                	sw	a6,48(sp)
20404318:	d646                	sw	a7,44(sp)
2040431a:	d472                	sw	t3,40(sp)
2040431c:	d276                	sw	t4,36(sp)
2040431e:	d07a                	sw	t5,32(sp)
20404320:	ce7e                	sw	t6,28(sp)
20404322:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20404324:	e40ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20404328:	872a                	mv	a4,a0
2040432a:	800007b7          	lui	a5,0x80000
2040432e:	070a                	slli	a4,a4,0x2
20404330:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404334:	97ba                	add	a5,a5,a4
20404336:	439c                	lw	a5,0(a5)
20404338:	faf42623          	sw	a5,-84(s0)
2040433c:	fac42783          	lw	a5,-84(s0)
20404340:	c78d                	beqz	a5,2040436a <metal_lc6_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20404342:	fac42503          	lw	a0,-84(s0)
20404346:	da0ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
2040434a:	faa42423          	sw	a0,-88(s0)
2040434e:	fa842783          	lw	a5,-88(s0)
20404352:	2a87a783          	lw	a5,680(a5)
20404356:	faf42223          	sw	a5,-92(s0)
2040435a:	fa842783          	lw	a5,-88(s0)
2040435e:	2a07a783          	lw	a5,672(a5)
20404362:	fa442583          	lw	a1,-92(s0)
20404366:	4559                	li	a0,22
20404368:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:246
}
2040436a:	0001                	nop
2040436c:	40f6                	lw	ra,92(sp)
2040436e:	42e6                	lw	t0,88(sp)
20404370:	4356                	lw	t1,84(sp)
20404372:	43c6                	lw	t2,80(sp)
20404374:	4436                	lw	s0,76(sp)
20404376:	4526                	lw	a0,72(sp)
20404378:	4596                	lw	a1,68(sp)
2040437a:	4606                	lw	a2,64(sp)
2040437c:	56f2                	lw	a3,60(sp)
2040437e:	5762                	lw	a4,56(sp)
20404380:	57d2                	lw	a5,52(sp)
20404382:	5842                	lw	a6,48(sp)
20404384:	58b2                	lw	a7,44(sp)
20404386:	5e22                	lw	t3,40(sp)
20404388:	5e92                	lw	t4,36(sp)
2040438a:	5f02                	lw	t5,32(sp)
2040438c:	4ff2                	lw	t6,28(sp)
2040438e:	6125                	addi	sp,sp,96
20404390:	30200073          	mret

20404394 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20404394:	711d                	addi	sp,sp,-96
20404396:	ce86                	sw	ra,92(sp)
20404398:	cc96                	sw	t0,88(sp)
2040439a:	ca9a                	sw	t1,84(sp)
2040439c:	c89e                	sw	t2,80(sp)
2040439e:	c6a2                	sw	s0,76(sp)
204043a0:	c4aa                	sw	a0,72(sp)
204043a2:	c2ae                	sw	a1,68(sp)
204043a4:	c0b2                	sw	a2,64(sp)
204043a6:	de36                	sw	a3,60(sp)
204043a8:	dc3a                	sw	a4,56(sp)
204043aa:	da3e                	sw	a5,52(sp)
204043ac:	d842                	sw	a6,48(sp)
204043ae:	d646                	sw	a7,44(sp)
204043b0:	d472                	sw	t3,40(sp)
204043b2:	d276                	sw	t4,36(sp)
204043b4:	d07a                	sw	t5,32(sp)
204043b6:	ce7e                	sw	t6,28(sp)
204043b8:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
204043ba:	daaff0ef          	jal	ra,20403964 <__metal_myhart_id>
204043be:	872a                	mv	a4,a0
204043c0:	800007b7          	lui	a5,0x80000
204043c4:	070a                	slli	a4,a4,0x2
204043c6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204043ca:	97ba                	add	a5,a5,a4
204043cc:	439c                	lw	a5,0(a5)
204043ce:	faf42623          	sw	a5,-84(s0)
204043d2:	fac42783          	lw	a5,-84(s0)
204043d6:	c78d                	beqz	a5,20404400 <metal_lc7_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
204043d8:	fac42503          	lw	a0,-84(s0)
204043dc:	d0aff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204043e0:	faa42423          	sw	a0,-88(s0)
204043e4:	fa842783          	lw	a5,-88(s0)
204043e8:	2c07a783          	lw	a5,704(a5)
204043ec:	faf42223          	sw	a5,-92(s0)
204043f0:	fa842783          	lw	a5,-88(s0)
204043f4:	2b87a783          	lw	a5,696(a5)
204043f8:	fa442583          	lw	a1,-92(s0)
204043fc:	455d                	li	a0,23
204043fe:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:251
}
20404400:	0001                	nop
20404402:	40f6                	lw	ra,92(sp)
20404404:	42e6                	lw	t0,88(sp)
20404406:	4356                	lw	t1,84(sp)
20404408:	43c6                	lw	t2,80(sp)
2040440a:	4436                	lw	s0,76(sp)
2040440c:	4526                	lw	a0,72(sp)
2040440e:	4596                	lw	a1,68(sp)
20404410:	4606                	lw	a2,64(sp)
20404412:	56f2                	lw	a3,60(sp)
20404414:	5762                	lw	a4,56(sp)
20404416:	57d2                	lw	a5,52(sp)
20404418:	5842                	lw	a6,48(sp)
2040441a:	58b2                	lw	a7,44(sp)
2040441c:	5e22                	lw	t3,40(sp)
2040441e:	5e92                	lw	t4,36(sp)
20404420:	5f02                	lw	t5,32(sp)
20404422:	4ff2                	lw	t6,28(sp)
20404424:	6125                	addi	sp,sp,96
20404426:	30200073          	mret

2040442a <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
2040442a:	711d                	addi	sp,sp,-96
2040442c:	ce86                	sw	ra,92(sp)
2040442e:	cc96                	sw	t0,88(sp)
20404430:	ca9a                	sw	t1,84(sp)
20404432:	c89e                	sw	t2,80(sp)
20404434:	c6a2                	sw	s0,76(sp)
20404436:	c4aa                	sw	a0,72(sp)
20404438:	c2ae                	sw	a1,68(sp)
2040443a:	c0b2                	sw	a2,64(sp)
2040443c:	de36                	sw	a3,60(sp)
2040443e:	dc3a                	sw	a4,56(sp)
20404440:	da3e                	sw	a5,52(sp)
20404442:	d842                	sw	a6,48(sp)
20404444:	d646                	sw	a7,44(sp)
20404446:	d472                	sw	t3,40(sp)
20404448:	d276                	sw	t4,36(sp)
2040444a:	d07a                	sw	t5,32(sp)
2040444c:	ce7e                	sw	t6,28(sp)
2040444e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20404450:	d14ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20404454:	872a                	mv	a4,a0
20404456:	800007b7          	lui	a5,0x80000
2040445a:	070a                	slli	a4,a4,0x2
2040445c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404460:	97ba                	add	a5,a5,a4
20404462:	439c                	lw	a5,0(a5)
20404464:	faf42623          	sw	a5,-84(s0)
20404468:	fac42783          	lw	a5,-84(s0)
2040446c:	c78d                	beqz	a5,20404496 <metal_lc8_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
2040446e:	fac42503          	lw	a0,-84(s0)
20404472:	c74ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20404476:	faa42423          	sw	a0,-88(s0)
2040447a:	fa842783          	lw	a5,-88(s0)
2040447e:	2d87a783          	lw	a5,728(a5)
20404482:	faf42223          	sw	a5,-92(s0)
20404486:	fa842783          	lw	a5,-88(s0)
2040448a:	2d07a783          	lw	a5,720(a5)
2040448e:	fa442583          	lw	a1,-92(s0)
20404492:	4561                	li	a0,24
20404494:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:256
}
20404496:	0001                	nop
20404498:	40f6                	lw	ra,92(sp)
2040449a:	42e6                	lw	t0,88(sp)
2040449c:	4356                	lw	t1,84(sp)
2040449e:	43c6                	lw	t2,80(sp)
204044a0:	4436                	lw	s0,76(sp)
204044a2:	4526                	lw	a0,72(sp)
204044a4:	4596                	lw	a1,68(sp)
204044a6:	4606                	lw	a2,64(sp)
204044a8:	56f2                	lw	a3,60(sp)
204044aa:	5762                	lw	a4,56(sp)
204044ac:	57d2                	lw	a5,52(sp)
204044ae:	5842                	lw	a6,48(sp)
204044b0:	58b2                	lw	a7,44(sp)
204044b2:	5e22                	lw	t3,40(sp)
204044b4:	5e92                	lw	t4,36(sp)
204044b6:	5f02                	lw	t5,32(sp)
204044b8:	4ff2                	lw	t6,28(sp)
204044ba:	6125                	addi	sp,sp,96
204044bc:	30200073          	mret

204044c0 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
204044c0:	711d                	addi	sp,sp,-96
204044c2:	ce86                	sw	ra,92(sp)
204044c4:	cc96                	sw	t0,88(sp)
204044c6:	ca9a                	sw	t1,84(sp)
204044c8:	c89e                	sw	t2,80(sp)
204044ca:	c6a2                	sw	s0,76(sp)
204044cc:	c4aa                	sw	a0,72(sp)
204044ce:	c2ae                	sw	a1,68(sp)
204044d0:	c0b2                	sw	a2,64(sp)
204044d2:	de36                	sw	a3,60(sp)
204044d4:	dc3a                	sw	a4,56(sp)
204044d6:	da3e                	sw	a5,52(sp)
204044d8:	d842                	sw	a6,48(sp)
204044da:	d646                	sw	a7,44(sp)
204044dc:	d472                	sw	t3,40(sp)
204044de:	d276                	sw	t4,36(sp)
204044e0:	d07a                	sw	t5,32(sp)
204044e2:	ce7e                	sw	t6,28(sp)
204044e4:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
204044e6:	c7eff0ef          	jal	ra,20403964 <__metal_myhart_id>
204044ea:	872a                	mv	a4,a0
204044ec:	800007b7          	lui	a5,0x80000
204044f0:	070a                	slli	a4,a4,0x2
204044f2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204044f6:	97ba                	add	a5,a5,a4
204044f8:	439c                	lw	a5,0(a5)
204044fa:	faf42623          	sw	a5,-84(s0)
204044fe:	fac42783          	lw	a5,-84(s0)
20404502:	c78d                	beqz	a5,2040452c <metal_lc9_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20404504:	fac42503          	lw	a0,-84(s0)
20404508:	bdeff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
2040450c:	faa42423          	sw	a0,-88(s0)
20404510:	fa842783          	lw	a5,-88(s0)
20404514:	2f07a783          	lw	a5,752(a5)
20404518:	faf42223          	sw	a5,-92(s0)
2040451c:	fa842783          	lw	a5,-88(s0)
20404520:	2e87a783          	lw	a5,744(a5)
20404524:	fa442583          	lw	a1,-92(s0)
20404528:	4565                	li	a0,25
2040452a:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:261
}
2040452c:	0001                	nop
2040452e:	40f6                	lw	ra,92(sp)
20404530:	42e6                	lw	t0,88(sp)
20404532:	4356                	lw	t1,84(sp)
20404534:	43c6                	lw	t2,80(sp)
20404536:	4436                	lw	s0,76(sp)
20404538:	4526                	lw	a0,72(sp)
2040453a:	4596                	lw	a1,68(sp)
2040453c:	4606                	lw	a2,64(sp)
2040453e:	56f2                	lw	a3,60(sp)
20404540:	5762                	lw	a4,56(sp)
20404542:	57d2                	lw	a5,52(sp)
20404544:	5842                	lw	a6,48(sp)
20404546:	58b2                	lw	a7,44(sp)
20404548:	5e22                	lw	t3,40(sp)
2040454a:	5e92                	lw	t4,36(sp)
2040454c:	5f02                	lw	t5,32(sp)
2040454e:	4ff2                	lw	t6,28(sp)
20404550:	6125                	addi	sp,sp,96
20404552:	30200073          	mret

20404556 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20404556:	711d                	addi	sp,sp,-96
20404558:	ce86                	sw	ra,92(sp)
2040455a:	cc96                	sw	t0,88(sp)
2040455c:	ca9a                	sw	t1,84(sp)
2040455e:	c89e                	sw	t2,80(sp)
20404560:	c6a2                	sw	s0,76(sp)
20404562:	c4aa                	sw	a0,72(sp)
20404564:	c2ae                	sw	a1,68(sp)
20404566:	c0b2                	sw	a2,64(sp)
20404568:	de36                	sw	a3,60(sp)
2040456a:	dc3a                	sw	a4,56(sp)
2040456c:	da3e                	sw	a5,52(sp)
2040456e:	d842                	sw	a6,48(sp)
20404570:	d646                	sw	a7,44(sp)
20404572:	d472                	sw	t3,40(sp)
20404574:	d276                	sw	t4,36(sp)
20404576:	d07a                	sw	t5,32(sp)
20404578:	ce7e                	sw	t6,28(sp)
2040457a:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
2040457c:	be8ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20404580:	872a                	mv	a4,a0
20404582:	800007b7          	lui	a5,0x80000
20404586:	070a                	slli	a4,a4,0x2
20404588:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040458c:	97ba                	add	a5,a5,a4
2040458e:	439c                	lw	a5,0(a5)
20404590:	faf42623          	sw	a5,-84(s0)
20404594:	fac42783          	lw	a5,-84(s0)
20404598:	c78d                	beqz	a5,204045c2 <metal_lc10_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2040459a:	fac42503          	lw	a0,-84(s0)
2040459e:	b48ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204045a2:	faa42423          	sw	a0,-88(s0)
204045a6:	fa842783          	lw	a5,-88(s0)
204045aa:	3087a783          	lw	a5,776(a5)
204045ae:	faf42223          	sw	a5,-92(s0)
204045b2:	fa842783          	lw	a5,-88(s0)
204045b6:	3007a783          	lw	a5,768(a5)
204045ba:	fa442583          	lw	a1,-92(s0)
204045be:	4569                	li	a0,26
204045c0:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:267
}
204045c2:	0001                	nop
204045c4:	40f6                	lw	ra,92(sp)
204045c6:	42e6                	lw	t0,88(sp)
204045c8:	4356                	lw	t1,84(sp)
204045ca:	43c6                	lw	t2,80(sp)
204045cc:	4436                	lw	s0,76(sp)
204045ce:	4526                	lw	a0,72(sp)
204045d0:	4596                	lw	a1,68(sp)
204045d2:	4606                	lw	a2,64(sp)
204045d4:	56f2                	lw	a3,60(sp)
204045d6:	5762                	lw	a4,56(sp)
204045d8:	57d2                	lw	a5,52(sp)
204045da:	5842                	lw	a6,48(sp)
204045dc:	58b2                	lw	a7,44(sp)
204045de:	5e22                	lw	t3,40(sp)
204045e0:	5e92                	lw	t4,36(sp)
204045e2:	5f02                	lw	t5,32(sp)
204045e4:	4ff2                	lw	t6,28(sp)
204045e6:	6125                	addi	sp,sp,96
204045e8:	30200073          	mret

204045ec <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
204045ec:	711d                	addi	sp,sp,-96
204045ee:	ce86                	sw	ra,92(sp)
204045f0:	cc96                	sw	t0,88(sp)
204045f2:	ca9a                	sw	t1,84(sp)
204045f4:	c89e                	sw	t2,80(sp)
204045f6:	c6a2                	sw	s0,76(sp)
204045f8:	c4aa                	sw	a0,72(sp)
204045fa:	c2ae                	sw	a1,68(sp)
204045fc:	c0b2                	sw	a2,64(sp)
204045fe:	de36                	sw	a3,60(sp)
20404600:	dc3a                	sw	a4,56(sp)
20404602:	da3e                	sw	a5,52(sp)
20404604:	d842                	sw	a6,48(sp)
20404606:	d646                	sw	a7,44(sp)
20404608:	d472                	sw	t3,40(sp)
2040460a:	d276                	sw	t4,36(sp)
2040460c:	d07a                	sw	t5,32(sp)
2040460e:	ce7e                	sw	t6,28(sp)
20404610:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20404612:	b52ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20404616:	872a                	mv	a4,a0
20404618:	800007b7          	lui	a5,0x80000
2040461c:	070a                	slli	a4,a4,0x2
2040461e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
20404622:	97ba                	add	a5,a5,a4
20404624:	439c                	lw	a5,0(a5)
20404626:	faf42623          	sw	a5,-84(s0)
2040462a:	fac42783          	lw	a5,-84(s0)
2040462e:	c78d                	beqz	a5,20404658 <metal_lc11_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20404630:	fac42503          	lw	a0,-84(s0)
20404634:	ab2ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20404638:	faa42423          	sw	a0,-88(s0)
2040463c:	fa842783          	lw	a5,-88(s0)
20404640:	3207a783          	lw	a5,800(a5)
20404644:	faf42223          	sw	a5,-92(s0)
20404648:	fa842783          	lw	a5,-88(s0)
2040464c:	3187a783          	lw	a5,792(a5)
20404650:	fa442583          	lw	a1,-92(s0)
20404654:	456d                	li	a0,27
20404656:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:273
}
20404658:	0001                	nop
2040465a:	40f6                	lw	ra,92(sp)
2040465c:	42e6                	lw	t0,88(sp)
2040465e:	4356                	lw	t1,84(sp)
20404660:	43c6                	lw	t2,80(sp)
20404662:	4436                	lw	s0,76(sp)
20404664:	4526                	lw	a0,72(sp)
20404666:	4596                	lw	a1,68(sp)
20404668:	4606                	lw	a2,64(sp)
2040466a:	56f2                	lw	a3,60(sp)
2040466c:	5762                	lw	a4,56(sp)
2040466e:	57d2                	lw	a5,52(sp)
20404670:	5842                	lw	a6,48(sp)
20404672:	58b2                	lw	a7,44(sp)
20404674:	5e22                	lw	t3,40(sp)
20404676:	5e92                	lw	t4,36(sp)
20404678:	5f02                	lw	t5,32(sp)
2040467a:	4ff2                	lw	t6,28(sp)
2040467c:	6125                	addi	sp,sp,96
2040467e:	30200073          	mret

20404682 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20404682:	711d                	addi	sp,sp,-96
20404684:	ce86                	sw	ra,92(sp)
20404686:	cc96                	sw	t0,88(sp)
20404688:	ca9a                	sw	t1,84(sp)
2040468a:	c89e                	sw	t2,80(sp)
2040468c:	c6a2                	sw	s0,76(sp)
2040468e:	c4aa                	sw	a0,72(sp)
20404690:	c2ae                	sw	a1,68(sp)
20404692:	c0b2                	sw	a2,64(sp)
20404694:	de36                	sw	a3,60(sp)
20404696:	dc3a                	sw	a4,56(sp)
20404698:	da3e                	sw	a5,52(sp)
2040469a:	d842                	sw	a6,48(sp)
2040469c:	d646                	sw	a7,44(sp)
2040469e:	d472                	sw	t3,40(sp)
204046a0:	d276                	sw	t4,36(sp)
204046a2:	d07a                	sw	t5,32(sp)
204046a4:	ce7e                	sw	t6,28(sp)
204046a6:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
204046a8:	abcff0ef          	jal	ra,20403964 <__metal_myhart_id>
204046ac:	872a                	mv	a4,a0
204046ae:	800007b7          	lui	a5,0x80000
204046b2:	070a                	slli	a4,a4,0x2
204046b4:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204046b8:	97ba                	add	a5,a5,a4
204046ba:	439c                	lw	a5,0(a5)
204046bc:	faf42623          	sw	a5,-84(s0)
204046c0:	fac42783          	lw	a5,-84(s0)
204046c4:	c78d                	beqz	a5,204046ee <metal_lc12_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
204046c6:	fac42503          	lw	a0,-84(s0)
204046ca:	a1cff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204046ce:	faa42423          	sw	a0,-88(s0)
204046d2:	fa842783          	lw	a5,-88(s0)
204046d6:	3387a783          	lw	a5,824(a5)
204046da:	faf42223          	sw	a5,-92(s0)
204046de:	fa842783          	lw	a5,-88(s0)
204046e2:	3307a783          	lw	a5,816(a5)
204046e6:	fa442583          	lw	a1,-92(s0)
204046ea:	4571                	li	a0,28
204046ec:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:279
}
204046ee:	0001                	nop
204046f0:	40f6                	lw	ra,92(sp)
204046f2:	42e6                	lw	t0,88(sp)
204046f4:	4356                	lw	t1,84(sp)
204046f6:	43c6                	lw	t2,80(sp)
204046f8:	4436                	lw	s0,76(sp)
204046fa:	4526                	lw	a0,72(sp)
204046fc:	4596                	lw	a1,68(sp)
204046fe:	4606                	lw	a2,64(sp)
20404700:	56f2                	lw	a3,60(sp)
20404702:	5762                	lw	a4,56(sp)
20404704:	57d2                	lw	a5,52(sp)
20404706:	5842                	lw	a6,48(sp)
20404708:	58b2                	lw	a7,44(sp)
2040470a:	5e22                	lw	t3,40(sp)
2040470c:	5e92                	lw	t4,36(sp)
2040470e:	5f02                	lw	t5,32(sp)
20404710:	4ff2                	lw	t6,28(sp)
20404712:	6125                	addi	sp,sp,96
20404714:	30200073          	mret

20404718 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20404718:	711d                	addi	sp,sp,-96
2040471a:	ce86                	sw	ra,92(sp)
2040471c:	cc96                	sw	t0,88(sp)
2040471e:	ca9a                	sw	t1,84(sp)
20404720:	c89e                	sw	t2,80(sp)
20404722:	c6a2                	sw	s0,76(sp)
20404724:	c4aa                	sw	a0,72(sp)
20404726:	c2ae                	sw	a1,68(sp)
20404728:	c0b2                	sw	a2,64(sp)
2040472a:	de36                	sw	a3,60(sp)
2040472c:	dc3a                	sw	a4,56(sp)
2040472e:	da3e                	sw	a5,52(sp)
20404730:	d842                	sw	a6,48(sp)
20404732:	d646                	sw	a7,44(sp)
20404734:	d472                	sw	t3,40(sp)
20404736:	d276                	sw	t4,36(sp)
20404738:	d07a                	sw	t5,32(sp)
2040473a:	ce7e                	sw	t6,28(sp)
2040473c:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
2040473e:	a26ff0ef          	jal	ra,20403964 <__metal_myhart_id>
20404742:	872a                	mv	a4,a0
20404744:	800007b7          	lui	a5,0x80000
20404748:	070a                	slli	a4,a4,0x2
2040474a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040474e:	97ba                	add	a5,a5,a4
20404750:	439c                	lw	a5,0(a5)
20404752:	faf42623          	sw	a5,-84(s0)
20404756:	fac42783          	lw	a5,-84(s0)
2040475a:	c78d                	beqz	a5,20404784 <metal_lc13_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
2040475c:	fac42503          	lw	a0,-84(s0)
20404760:	986ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20404764:	faa42423          	sw	a0,-88(s0)
20404768:	fa842783          	lw	a5,-88(s0)
2040476c:	3507a783          	lw	a5,848(a5)
20404770:	faf42223          	sw	a5,-92(s0)
20404774:	fa842783          	lw	a5,-88(s0)
20404778:	3487a783          	lw	a5,840(a5)
2040477c:	fa442583          	lw	a1,-92(s0)
20404780:	4575                	li	a0,29
20404782:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404784:	0001                	nop
20404786:	40f6                	lw	ra,92(sp)
20404788:	42e6                	lw	t0,88(sp)
2040478a:	4356                	lw	t1,84(sp)
2040478c:	43c6                	lw	t2,80(sp)
2040478e:	4436                	lw	s0,76(sp)
20404790:	4526                	lw	a0,72(sp)
20404792:	4596                	lw	a1,68(sp)
20404794:	4606                	lw	a2,64(sp)
20404796:	56f2                	lw	a3,60(sp)
20404798:	5762                	lw	a4,56(sp)
2040479a:	57d2                	lw	a5,52(sp)
2040479c:	5842                	lw	a6,48(sp)
2040479e:	58b2                	lw	a7,44(sp)
204047a0:	5e22                	lw	t3,40(sp)
204047a2:	5e92                	lw	t4,36(sp)
204047a4:	5f02                	lw	t5,32(sp)
204047a6:	4ff2                	lw	t6,28(sp)
204047a8:	6125                	addi	sp,sp,96
204047aa:	30200073          	mret

204047ae <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
204047ae:	711d                	addi	sp,sp,-96
204047b0:	ce86                	sw	ra,92(sp)
204047b2:	cc96                	sw	t0,88(sp)
204047b4:	ca9a                	sw	t1,84(sp)
204047b6:	c89e                	sw	t2,80(sp)
204047b8:	c6a2                	sw	s0,76(sp)
204047ba:	c4aa                	sw	a0,72(sp)
204047bc:	c2ae                	sw	a1,68(sp)
204047be:	c0b2                	sw	a2,64(sp)
204047c0:	de36                	sw	a3,60(sp)
204047c2:	dc3a                	sw	a4,56(sp)
204047c4:	da3e                	sw	a5,52(sp)
204047c6:	d842                	sw	a6,48(sp)
204047c8:	d646                	sw	a7,44(sp)
204047ca:	d472                	sw	t3,40(sp)
204047cc:	d276                	sw	t4,36(sp)
204047ce:	d07a                	sw	t5,32(sp)
204047d0:	ce7e                	sw	t6,28(sp)
204047d2:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
204047d4:	990ff0ef          	jal	ra,20403964 <__metal_myhart_id>
204047d8:	872a                	mv	a4,a0
204047da:	800007b7          	lui	a5,0x80000
204047de:	070a                	slli	a4,a4,0x2
204047e0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
204047e4:	97ba                	add	a5,a5,a4
204047e6:	439c                	lw	a5,0(a5)
204047e8:	faf42623          	sw	a5,-84(s0)
204047ec:	fac42783          	lw	a5,-84(s0)
204047f0:	c78d                	beqz	a5,2040481a <metal_lc14_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
204047f2:	fac42503          	lw	a0,-84(s0)
204047f6:	8f0ff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204047fa:	faa42423          	sw	a0,-88(s0)
204047fe:	fa842783          	lw	a5,-88(s0)
20404802:	3687a783          	lw	a5,872(a5)
20404806:	faf42223          	sw	a5,-92(s0)
2040480a:	fa842783          	lw	a5,-88(s0)
2040480e:	3607a783          	lw	a5,864(a5)
20404812:	fa442583          	lw	a1,-92(s0)
20404816:	4579                	li	a0,30
20404818:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:291
}
2040481a:	0001                	nop
2040481c:	40f6                	lw	ra,92(sp)
2040481e:	42e6                	lw	t0,88(sp)
20404820:	4356                	lw	t1,84(sp)
20404822:	43c6                	lw	t2,80(sp)
20404824:	4436                	lw	s0,76(sp)
20404826:	4526                	lw	a0,72(sp)
20404828:	4596                	lw	a1,68(sp)
2040482a:	4606                	lw	a2,64(sp)
2040482c:	56f2                	lw	a3,60(sp)
2040482e:	5762                	lw	a4,56(sp)
20404830:	57d2                	lw	a5,52(sp)
20404832:	5842                	lw	a6,48(sp)
20404834:	58b2                	lw	a7,44(sp)
20404836:	5e22                	lw	t3,40(sp)
20404838:	5e92                	lw	t4,36(sp)
2040483a:	5f02                	lw	t5,32(sp)
2040483c:	4ff2                	lw	t6,28(sp)
2040483e:	6125                	addi	sp,sp,96
20404840:	30200073          	mret

20404844 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
20404844:	711d                	addi	sp,sp,-96
20404846:	ce86                	sw	ra,92(sp)
20404848:	cc96                	sw	t0,88(sp)
2040484a:	ca9a                	sw	t1,84(sp)
2040484c:	c89e                	sw	t2,80(sp)
2040484e:	c6a2                	sw	s0,76(sp)
20404850:	c4aa                	sw	a0,72(sp)
20404852:	c2ae                	sw	a1,68(sp)
20404854:	c0b2                	sw	a2,64(sp)
20404856:	de36                	sw	a3,60(sp)
20404858:	dc3a                	sw	a4,56(sp)
2040485a:	da3e                	sw	a5,52(sp)
2040485c:	d842                	sw	a6,48(sp)
2040485e:	d646                	sw	a7,44(sp)
20404860:	d472                	sw	t3,40(sp)
20404862:	d276                	sw	t4,36(sp)
20404864:	d07a                	sw	t5,32(sp)
20404866:	ce7e                	sw	t6,28(sp)
20404868:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
2040486a:	8faff0ef          	jal	ra,20403964 <__metal_myhart_id>
2040486e:	872a                	mv	a4,a0
20404870:	800007b7          	lui	a5,0x80000
20404874:	070a                	slli	a4,a4,0x2
20404876:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040487a:	97ba                	add	a5,a5,a4
2040487c:	439c                	lw	a5,0(a5)
2040487e:	faf42623          	sw	a5,-84(s0)
20404882:	fac42783          	lw	a5,-84(s0)
20404886:	c78d                	beqz	a5,204048b0 <metal_lc15_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404888:	fac42503          	lw	a0,-84(s0)
2040488c:	85aff0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20404890:	faa42423          	sw	a0,-88(s0)
20404894:	fa842783          	lw	a5,-88(s0)
20404898:	3807a783          	lw	a5,896(a5)
2040489c:	faf42223          	sw	a5,-92(s0)
204048a0:	fa842783          	lw	a5,-88(s0)
204048a4:	3787a783          	lw	a5,888(a5)
204048a8:	fa442583          	lw	a1,-92(s0)
204048ac:	457d                	li	a0,31
204048ae:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:297
}
204048b0:	0001                	nop
204048b2:	40f6                	lw	ra,92(sp)
204048b4:	42e6                	lw	t0,88(sp)
204048b6:	4356                	lw	t1,84(sp)
204048b8:	43c6                	lw	t2,80(sp)
204048ba:	4436                	lw	s0,76(sp)
204048bc:	4526                	lw	a0,72(sp)
204048be:	4596                	lw	a1,68(sp)
204048c0:	4606                	lw	a2,64(sp)
204048c2:	56f2                	lw	a3,60(sp)
204048c4:	5762                	lw	a4,56(sp)
204048c6:	57d2                	lw	a5,52(sp)
204048c8:	5842                	lw	a6,48(sp)
204048ca:	58b2                	lw	a7,44(sp)
204048cc:	5e22                	lw	t3,40(sp)
204048ce:	5e92                	lw	t4,36(sp)
204048d0:	5f02                	lw	t5,32(sp)
204048d2:	4ff2                	lw	t6,28(sp)
204048d4:	6125                	addi	sp,sp,96
204048d6:	30200073          	mret

204048da <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
204048da:	1101                	addi	sp,sp,-32
204048dc:	ce22                	sw	s0,28(sp)
204048de:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204048e0:	305027f3          	csrr	a5,mtvec
204048e4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
204048e8:	fec42783          	lw	a5,-20(s0)
204048ec:	03f7f793          	andi	a5,a5,63
204048f0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
204048f4:	fec42703          	lw	a4,-20(s0)
204048f8:	478d                	li	a5,3
204048fa:	02f70363          	beq	a4,a5,20404920 <__metal_controller_interrupt_vector_mode+0x46>
204048fe:	fec42703          	lw	a4,-20(s0)
20404902:	478d                	li	a5,3
20404904:	02e7e263          	bltu	a5,a4,20404928 <__metal_controller_interrupt_vector_mode+0x4e>
20404908:	fec42703          	lw	a4,-20(s0)
2040490c:	4785                	li	a5,1
2040490e:	00f70b63          	beq	a4,a5,20404924 <__metal_controller_interrupt_vector_mode+0x4a>
20404912:	fec42703          	lw	a4,-20(s0)
20404916:	4789                	li	a5,2
20404918:	00f71863          	bne	a4,a5,20404928 <__metal_controller_interrupt_vector_mode+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040491c:	478d                	li	a5,3
2040491e:	a031                	j	2040492a <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
20404920:	4791                	li	a5,4
20404922:	a021                	j	2040492a <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
20404924:	4785                	li	a5,1
20404926:	a011                	j	2040492a <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
20404928:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:314
}
2040492a:	853e                	mv	a0,a5
2040492c:	4472                	lw	s0,28(sp)
2040492e:	6105                	addi	sp,sp,32
20404930:	8082                	ret

20404932 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
20404932:	7179                	addi	sp,sp,-48
20404934:	d622                	sw	s0,44(sp)
20404936:	1800                	addi	s0,sp,48
20404938:	fca42e23          	sw	a0,-36(s0)
2040493c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404940:	305027f3          	csrr	a5,mtvec
20404944:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
20404948:	fec42783          	lw	a5,-20(s0)
2040494c:	fc07f793          	andi	a5,a5,-64
20404950:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
20404954:	fd842783          	lw	a5,-40(s0)
20404958:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
2040495c:	fdc42703          	lw	a4,-36(s0)
20404960:	4791                	li	a5,4
20404962:	04f70563          	beq	a4,a5,204049ac <__metal_controller_interrupt_vector+0x7a>
20404966:	fdc42703          	lw	a4,-36(s0)
2040496a:	4791                	li	a5,4
2040496c:	06e7e863          	bltu	a5,a4,204049dc <__metal_controller_interrupt_vector+0xaa>
20404970:	fdc42703          	lw	a4,-36(s0)
20404974:	478d                	li	a5,3
20404976:	06e7e363          	bltu	a5,a4,204049dc <__metal_controller_interrupt_vector+0xaa>
2040497a:	fdc42703          	lw	a4,-36(s0)
2040497e:	4789                	li	a5,2
20404980:	00f77b63          	bgeu	a4,a5,20404996 <__metal_controller_interrupt_vector+0x64>
20404984:	fdc42783          	lw	a5,-36(s0)
20404988:	c7a1                	beqz	a5,204049d0 <__metal_controller_interrupt_vector+0x9e>
2040498a:	fdc42703          	lw	a4,-36(s0)
2040498e:	4785                	li	a5,1
20404990:	02f70963          	beq	a4,a5,204049c2 <__metal_controller_interrupt_vector+0x90>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404994:	a0a1                	j	204049dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404996:	fe842783          	lw	a5,-24(s0)
2040499a:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040499e:	fec42783          	lw	a5,-20(s0)
204049a2:	0027e793          	ori	a5,a5,2
204049a6:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
204049aa:	a80d                	j	204049dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
204049ac:	fe842783          	lw	a5,-24(s0)
204049b0:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
204049b4:	fec42783          	lw	a5,-20(s0)
204049b8:	0037e793          	ori	a5,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
204049bc:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
204049c0:	a831                	j	204049dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
204049c2:	fe842783          	lw	a5,-24(s0)
204049c6:	0017e793          	ori	a5,a5,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
204049ca:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
204049ce:	a039                	j	204049dc <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
204049d0:	fe842783          	lw	a5,-24(s0)
204049d4:	9bf1                	andi	a5,a5,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
204049d6:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
204049da:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:344
}
204049dc:	0001                	nop
204049de:	5432                	lw	s0,44(sp)
204049e0:	6145                	addi	sp,sp,48
204049e2:	8082                	ret

204049e4 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
204049e4:	1101                	addi	sp,sp,-32
204049e6:	ce22                	sw	s0,28(sp)
204049e8:	1000                	addi	s0,sp,32
204049ea:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204049ee:	fec42703          	lw	a4,-20(s0)
204049f2:	47fd                	li	a5,31
204049f4:	02e7c663          	blt	a5,a4,20404a20 <__metal_valid_interrupt_id+0x3c>
204049f8:	fec42703          	lw	a4,-20(s0)
204049fc:	478d                	li	a5,3
204049fe:	02f74963          	blt	a4,a5,20404a30 <__metal_valid_interrupt_id+0x4c>
20404a02:	fec42783          	lw	a5,-20(s0)
20404a06:	4705                	li	a4,1
20404a08:	00f71733          	sll	a4,a4,a5
20404a0c:	77c5                	lui	a5,0xffff1
20404a0e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffee768>
20404a12:	8ff9                	and	a5,a5,a4
20404a14:	00f037b3          	snez	a5,a5
20404a18:	0ff7f793          	zext.b	a5,a5
20404a1c:	eb81                	bnez	a5,20404a2c <__metal_valid_interrupt_id+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
20404a1e:	a809                	j	20404a30 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
20404a20:	fec42703          	lw	a4,-20(s0)
20404a24:	08000793          	li	a5,128
20404a28:	00f71463          	bne	a4,a5,20404a30 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
20404a2c:	4785                	li	a5,1
20404a2e:	a019                	j	20404a34 <__metal_valid_interrupt_id+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
20404a30:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
20404a32:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:374
}
20404a34:	853e                	mv	a0,a5
20404a36:	4472                	lw	s0,28(sp)
20404a38:	6105                	addi	sp,sp,32
20404a3a:	8082                	ret

20404a3c <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
20404a3c:	7179                	addi	sp,sp,-48
20404a3e:	d606                	sw	ra,44(sp)
20404a40:	d422                	sw	s0,40(sp)
20404a42:	1800                	addi	s0,sp,48
20404a44:	fca42e23          	sw	a0,-36(s0)
20404a48:	fcb42c23          	sw	a1,-40(s0)
20404a4c:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
20404a50:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
20404a54:	fdc42783          	lw	a5,-36(s0)
20404a58:	e399                	bnez	a5,20404a5e <__metal_local_interrupt_enable+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
20404a5a:	57fd                	li	a5,-1
20404a5c:	a849                	j	20404aee <__metal_local_interrupt_enable+0xb2>
20404a5e:	fd842703          	lw	a4,-40(s0)
20404a62:	47fd                	li	a5,31
20404a64:	08e7e063          	bltu	a5,a4,20404ae4 <__metal_local_interrupt_enable+0xa8>
20404a68:	fd842783          	lw	a5,-40(s0)
20404a6c:	00279713          	slli	a4,a5,0x2
20404a70:	204007b7          	lui	a5,0x20400
20404a74:	54c78793          	addi	a5,a5,1356 # 2040054c <__metal_driver_vtable_riscv_clint0+0x64>
20404a78:	97ba                	add	a5,a5,a4
20404a7a:	439c                	lw	a5,0(a5)
20404a7c:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
20404a7e:	fd442783          	lw	a5,-44(s0)
20404a82:	c781                	beqz	a5,20404a8a <__metal_local_interrupt_enable+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404a84:	efbfe0ef          	jal	ra,2040397e <__metal_interrupt_global_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404a88:	a08d                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20404a8a:	f0dfe0ef          	jal	ra,20403996 <__metal_interrupt_global_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20404a8e:	a8b1                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404a90:	fd442783          	lw	a5,-44(s0)
20404a94:	c781                	beqz	a5,20404a9c <__metal_local_interrupt_enable+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404a96:	f19fe0ef          	jal	ra,204039ae <__metal_interrupt_software_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20404a9a:	a881                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20404a9c:	f2bfe0ef          	jal	ra,204039c6 <__metal_interrupt_software_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20404aa0:	a0a9                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20404aa2:	fd442783          	lw	a5,-44(s0)
20404aa6:	c781                	beqz	a5,20404aae <__metal_local_interrupt_enable+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20404aa8:	f37fe0ef          	jal	ra,204039de <__metal_interrupt_timer_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20404aac:	a83d                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20404aae:	f4bfe0ef          	jal	ra,204039f8 <__metal_interrupt_timer_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20404ab2:	a825                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20404ab4:	fd442783          	lw	a5,-44(s0)
20404ab8:	c781                	beqz	a5,20404ac0 <__metal_local_interrupt_enable+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20404aba:	f59fe0ef          	jal	ra,20403a12 <__metal_interrupt_external_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20404abe:	a035                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20404ac0:	f6ffe0ef          	jal	ra,20403a2e <__metal_interrupt_external_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20404ac4:	a01d                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20404ac6:	fd442783          	lw	a5,-44(s0)
20404aca:	c799                	beqz	a5,20404ad8 <__metal_local_interrupt_enable+0x9c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20404acc:	fd842783          	lw	a5,-40(s0)
20404ad0:	853e                	mv	a0,a5
20404ad2:	f79fe0ef          	jal	ra,20403a4a <__metal_interrupt_local_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20404ad6:	a811                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20404ad8:	fd842783          	lw	a5,-40(s0)
20404adc:	853e                	mv	a0,a5
20404ade:	f99fe0ef          	jal	ra,20403a76 <__metal_interrupt_local_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20404ae2:	a021                	j	20404aea <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20404ae4:	57fd                	li	a5,-1
20404ae6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20404aea:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:439
}
20404aee:	853e                	mv	a0,a5
20404af0:	50b2                	lw	ra,44(sp)
20404af2:	5422                	lw	s0,40(sp)
20404af4:	6145                	addi	sp,sp,48
20404af6:	8082                	ret

20404af8 <__metal_exception_register>:
__metal_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20404af8:	7179                	addi	sp,sp,-48
20404afa:	d622                	sw	s0,44(sp)
20404afc:	1800                	addi	s0,sp,48
20404afe:	fca42e23          	sw	a0,-36(s0)
20404b02:	fcb42c23          	sw	a1,-40(s0)
20404b06:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404b0a:	fdc42783          	lw	a5,-36(s0)
20404b0e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404b12:	fd842703          	lw	a4,-40(s0)
20404b16:	47ad                	li	a5,11
20404b18:	02e7c263          	blt	a5,a4,20404b3c <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20404b1c:	fd442783          	lw	a5,-44(s0)
20404b20:	cf91                	beqz	a5,20404b3c <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20404b22:	fec42703          	lw	a4,-20(s0)
20404b26:	fd842783          	lw	a5,-40(s0)
20404b2a:	0e878793          	addi	a5,a5,232
20404b2e:	078a                	slli	a5,a5,0x2
20404b30:	97ba                	add	a5,a5,a4
20404b32:	fd442703          	lw	a4,-44(s0)
20404b36:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20404b38:	4781                	li	a5,0
20404b3a:	a011                	j	20404b3e <__metal_exception_register+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20404b3c:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:450
}
20404b3e:	853e                	mv	a0,a5
20404b40:	5432                	lw	s0,44(sp)
20404b42:	6145                	addi	sp,sp,48
20404b44:	8082                	ret

20404b46 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20404b46:	7179                	addi	sp,sp,-48
20404b48:	d606                	sw	ra,44(sp)
20404b4a:	d422                	sw	s0,40(sp)
20404b4c:	1800                	addi	s0,sp,48
20404b4e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404b52:	fdc42783          	lw	a5,-36(s0)
20404b56:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20404b5a:	fe442783          	lw	a5,-28(s0)
20404b5e:	43dc                	lw	a5,4(a5)
20404b60:	e3e1                	bnez	a5,20404c20 <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404b62:	fe042623          	sw	zero,-20(s0)
20404b66:	a0b9                	j	20404bb4 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20404b68:	fe442683          	lw	a3,-28(s0)
20404b6c:	fec42703          	lw	a4,-20(s0)
20404b70:	87ba                	mv	a5,a4
20404b72:	0786                	slli	a5,a5,0x1
20404b74:	97ba                	add	a5,a5,a4
20404b76:	078e                	slli	a5,a5,0x3
20404b78:	97b6                	add	a5,a5,a3
20404b7a:	0807a823          	sw	zero,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20404b7e:	fe442683          	lw	a3,-28(s0)
20404b82:	fec42703          	lw	a4,-20(s0)
20404b86:	87ba                	mv	a5,a4
20404b88:	0786                	slli	a5,a5,0x1
20404b8a:	97ba                	add	a5,a5,a4
20404b8c:	078e                	slli	a5,a5,0x3
20404b8e:	97b6                	add	a5,a5,a3
20404b90:	0807aa23          	sw	zero,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404b94:	fe442683          	lw	a3,-28(s0)
20404b98:	fec42703          	lw	a4,-20(s0)
20404b9c:	87ba                	mv	a5,a4
20404b9e:	0786                	slli	a5,a5,0x1
20404ba0:	97ba                	add	a5,a5,a4
20404ba2:	078e                	slli	a5,a5,0x3
20404ba4:	97b6                	add	a5,a5,a3
20404ba6:	0807ac23          	sw	zero,152(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20404baa:	fec42783          	lw	a5,-20(s0)
20404bae:	0785                	addi	a5,a5,1
20404bb0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20404bb4:	fec42703          	lw	a4,-20(s0)
20404bb8:	47fd                	li	a5,31
20404bba:	fae7d7e3          	bge	a5,a4,20404b68 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20404bbe:	fe042423          	sw	zero,-24(s0)
20404bc2:	a01d                	j	20404be8 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20404bc4:	fe442703          	lw	a4,-28(s0)
20404bc8:	fe842783          	lw	a5,-24(s0)
20404bcc:	0e878793          	addi	a5,a5,232
20404bd0:	078a                	slli	a5,a5,0x2
20404bd2:	97ba                	add	a5,a5,a4
20404bd4:	20404737          	lui	a4,0x20404
20404bd8:	aa270713          	addi	a4,a4,-1374 # 20403aa2 <__metal_default_exception_handler>
20404bdc:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20404bde:	fe842783          	lw	a5,-24(s0)
20404be2:	0785                	addi	a5,a5,1
20404be4:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20404be8:	fe842703          	lw	a4,-24(s0)
20404bec:	47ad                	li	a5,11
20404bee:	fce7dbe3          	bge	a5,a4,20404bc4 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404bf2:	305027f3          	csrr	a5,mtvec
20404bf6:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20404bfa:	204007b7          	lui	a5,0x20400
20404bfe:	13878793          	addi	a5,a5,312 # 20400138 <early_trap_vector>
20404c02:	fe042703          	lw	a4,-32(s0)
20404c06:	00f71963          	bne	a4,a5,20404c18 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20404c0a:	204047b7          	lui	a5,0x20404
20404c0e:	d8078593          	addi	a1,a5,-640 # 20403d80 <__metal_exception_handler>
20404c12:	4501                	li	a0,0
20404c14:	d1fff0ef          	jal	ra,20404932 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404c18:	fe442783          	lw	a5,-28(s0)
20404c1c:	4705                	li	a4,1
20404c1e:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20404c20:	0001                	nop
20404c22:	50b2                	lw	ra,44(sp)
20404c24:	5422                	lw	s0,40(sp)
20404c26:	6145                	addi	sp,sp,48
20404c28:	8082                	ret

20404c2a <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20404c2a:	7179                	addi	sp,sp,-48
20404c2c:	d606                	sw	ra,44(sp)
20404c2e:	d422                	sw	s0,40(sp)
20404c30:	1800                	addi	s0,sp,48
20404c32:	fca42e23          	sw	a0,-36(s0)
20404c36:	fcb42c23          	sw	a1,-40(s0)
20404c3a:	fcc42a23          	sw	a2,-44(s0)
20404c3e:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20404c42:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20404c46:	fdc42783          	lw	a5,-36(s0)
20404c4a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20404c4e:	fd842503          	lw	a0,-40(s0)
20404c52:	3b49                	jal	204049e4 <__metal_valid_interrupt_id>
20404c54:	87aa                	mv	a5,a0
20404c56:	e399                	bnez	a5,20404c5c <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20404c58:	57d5                	li	a5,-11
20404c5a:	a265                	j	20404e02 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404c5c:	fd842703          	lw	a4,-40(s0)
20404c60:	08000793          	li	a5,128
20404c64:	00f71863          	bne	a4,a5,20404c74 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20404c68:	c73ff0ef          	jal	ra,204048da <__metal_controller_interrupt_vector_mode>
20404c6c:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20404c6e:	c399                	beqz	a5,20404c74 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20404c70:	57cd                	li	a5,-13
20404c72:	aa41                	j	20404e02 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20404c74:	fd442783          	lw	a5,-44(s0)
20404c78:	cfb9                	beqz	a5,20404cd6 <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20404c7a:	fd842703          	lw	a4,-40(s0)
20404c7e:	08000793          	li	a5,128
20404c82:	00f71f63          	bne	a4,a5,20404ca0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404c86:	fe842783          	lw	a5,-24(s0)
20404c8a:	fd442703          	lw	a4,-44(s0)
20404c8e:	38e7a823          	sw	a4,912(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20404c92:	fe842783          	lw	a5,-24(s0)
20404c96:	fd042703          	lw	a4,-48(s0)
20404c9a:	38e7ac23          	sw	a4,920(a5)
20404c9e:	a285                	j	20404dfe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20404ca0:	fe842683          	lw	a3,-24(s0)
20404ca4:	fd842703          	lw	a4,-40(s0)
20404ca8:	87ba                	mv	a5,a4
20404caa:	0786                	slli	a5,a5,0x1
20404cac:	97ba                	add	a5,a5,a4
20404cae:	078e                	slli	a5,a5,0x3
20404cb0:	97b6                	add	a5,a5,a3
20404cb2:	fd442703          	lw	a4,-44(s0)
20404cb6:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404cba:	fe842683          	lw	a3,-24(s0)
20404cbe:	fd842703          	lw	a4,-40(s0)
20404cc2:	87ba                	mv	a5,a4
20404cc4:	0786                	slli	a5,a5,0x1
20404cc6:	97ba                	add	a5,a5,a4
20404cc8:	078e                	slli	a5,a5,0x3
20404cca:	97b6                	add	a5,a5,a3
20404ccc:	fd042703          	lw	a4,-48(s0)
20404cd0:	08e7ac23          	sw	a4,152(a5)
20404cd4:	a22d                	j	20404dfe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20404cd6:	fd842703          	lw	a4,-40(s0)
20404cda:	08000793          	li	a5,128
20404cde:	0cf70163          	beq	a4,a5,20404da0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x176>
20404ce2:	fd842703          	lw	a4,-40(s0)
20404ce6:	08000793          	li	a5,128
20404cea:	10e7c763          	blt	a5,a4,20404df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404cee:	fd842703          	lw	a4,-40(s0)
20404cf2:	47fd                	li	a5,31
20404cf4:	10e7c263          	blt	a5,a4,20404df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404cf8:	fd842703          	lw	a4,-40(s0)
20404cfc:	47c1                	li	a5,16
20404cfe:	0cf75063          	bge	a4,a5,20404dbe <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404d02:	fd842703          	lw	a4,-40(s0)
20404d06:	47ad                	li	a5,11
20404d08:	0af70b63          	beq	a4,a5,20404dbe <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20404d0c:	fd842703          	lw	a4,-40(s0)
20404d10:	47ad                	li	a5,11
20404d12:	0ee7c363          	blt	a5,a4,20404df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20404d16:	fd842703          	lw	a4,-40(s0)
20404d1a:	478d                	li	a5,3
20404d1c:	00f70863          	beq	a4,a5,20404d2c <__metal_driver_riscv_cpu_controller_interrupt_register+0x102>
20404d20:	fd842703          	lw	a4,-40(s0)
20404d24:	479d                	li	a5,7
20404d26:	04f70063          	beq	a4,a5,20404d66 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13c>
20404d2a:	a0f9                	j	20404df8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20404d2c:	fe842683          	lw	a3,-24(s0)
20404d30:	fd842703          	lw	a4,-40(s0)
20404d34:	87ba                	mv	a5,a4
20404d36:	0786                	slli	a5,a5,0x1
20404d38:	97ba                	add	a5,a5,a4
20404d3a:	078e                	slli	a5,a5,0x3
20404d3c:	97b6                	add	a5,a5,a3
20404d3e:	20404737          	lui	a4,0x20404
20404d42:	b9270713          	addi	a4,a4,-1134 # 20403b92 <__metal_default_sw_handler>
20404d46:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20404d4a:	fe842683          	lw	a3,-24(s0)
20404d4e:	fd842703          	lw	a4,-40(s0)
20404d52:	87ba                	mv	a5,a4
20404d54:	0786                	slli	a5,a5,0x1
20404d56:	97ba                	add	a5,a5,a4
20404d58:	078e                	slli	a5,a5,0x3
20404d5a:	97b6                	add	a5,a5,a3
20404d5c:	fd042703          	lw	a4,-48(s0)
20404d60:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20404d64:	a869                	j	20404dfe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20404d66:	fe842683          	lw	a3,-24(s0)
20404d6a:	fd842703          	lw	a4,-40(s0)
20404d6e:	87ba                	mv	a5,a4
20404d70:	0786                	slli	a5,a5,0x1
20404d72:	97ba                	add	a5,a5,a4
20404d74:	078e                	slli	a5,a5,0x3
20404d76:	97b6                	add	a5,a5,a3
20404d78:	20404737          	lui	a4,0x20404
20404d7c:	ca270713          	addi	a4,a4,-862 # 20403ca2 <__metal_default_timer_handler>
20404d80:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20404d84:	fe842683          	lw	a3,-24(s0)
20404d88:	fd842703          	lw	a4,-40(s0)
20404d8c:	87ba                	mv	a5,a4
20404d8e:	0786                	slli	a5,a5,0x1
20404d90:	97ba                	add	a5,a5,a4
20404d92:	078e                	slli	a5,a5,0x3
20404d94:	97b6                	add	a5,a5,a3
20404d96:	fd042703          	lw	a4,-48(s0)
20404d9a:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20404d9e:	a085                	j	20404dfe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20404da0:	fe842783          	lw	a5,-24(s0)
20404da4:	20404737          	lui	a4,0x20404
20404da8:	c8c70713          	addi	a4,a4,-884 # 20403c8c <__metal_default_beu_handler>
20404dac:	38e7a823          	sw	a4,912(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20404db0:	fe842783          	lw	a5,-24(s0)
20404db4:	fd042703          	lw	a4,-48(s0)
20404db8:	38e7ac23          	sw	a4,920(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20404dbc:	a089                	j	20404dfe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20404dbe:	fe842683          	lw	a3,-24(s0)
20404dc2:	fd842703          	lw	a4,-40(s0)
20404dc6:	87ba                	mv	a5,a4
20404dc8:	0786                	slli	a5,a5,0x1
20404dca:	97ba                	add	a5,a5,a4
20404dcc:	078e                	slli	a5,a5,0x3
20404dce:	97b6                	add	a5,a5,a3
20404dd0:	20404737          	lui	a4,0x20404
20404dd4:	aba70713          	addi	a4,a4,-1350 # 20403aba <__metal_default_interrupt_handler>
20404dd8:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20404ddc:	fe842683          	lw	a3,-24(s0)
20404de0:	fd842703          	lw	a4,-40(s0)
20404de4:	87ba                	mv	a5,a4
20404de6:	0786                	slli	a5,a5,0x1
20404de8:	97ba                	add	a5,a5,a4
20404dea:	078e                	slli	a5,a5,0x3
20404dec:	97b6                	add	a5,a5,a3
20404dee:	fd042703          	lw	a4,-48(s0)
20404df2:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20404df6:	a021                	j	20404dfe <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20404df8:	57d1                	li	a5,-12
20404dfa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20404dfe:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:549
}
20404e02:	853e                	mv	a0,a5
20404e04:	50b2                	lw	ra,44(sp)
20404e06:	5422                	lw	s0,40(sp)
20404e08:	6145                	addi	sp,sp,48
20404e0a:	8082                	ret

20404e0c <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404e0c:	1101                	addi	sp,sp,-32
20404e0e:	ce06                	sw	ra,28(sp)
20404e10:	cc22                	sw	s0,24(sp)
20404e12:	1000                	addi	s0,sp,32
20404e14:	fea42623          	sw	a0,-20(s0)
20404e18:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404e1c:	fe842783          	lw	a5,-24(s0)
20404e20:	4605                	li	a2,1
20404e22:	85be                	mv	a1,a5
20404e24:	fec42503          	lw	a0,-20(s0)
20404e28:	c15ff0ef          	jal	ra,20404a3c <__metal_local_interrupt_enable>
20404e2c:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:554
}
20404e2e:	853e                	mv	a0,a5
20404e30:	40f2                	lw	ra,28(sp)
20404e32:	4462                	lw	s0,24(sp)
20404e34:	6105                	addi	sp,sp,32
20404e36:	8082                	ret

20404e38 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20404e38:	1101                	addi	sp,sp,-32
20404e3a:	ce06                	sw	ra,28(sp)
20404e3c:	cc22                	sw	s0,24(sp)
20404e3e:	1000                	addi	s0,sp,32
20404e40:	fea42623          	sw	a0,-20(s0)
20404e44:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20404e48:	fe842783          	lw	a5,-24(s0)
20404e4c:	4601                	li	a2,0
20404e4e:	85be                	mv	a1,a5
20404e50:	fec42503          	lw	a0,-20(s0)
20404e54:	be9ff0ef          	jal	ra,20404a3c <__metal_local_interrupt_enable>
20404e58:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:559
}
20404e5a:	853e                	mv	a0,a5
20404e5c:	40f2                	lw	ra,28(sp)
20404e5e:	4462                	lw	s0,24(sp)
20404e60:	6105                	addi	sp,sp,32
20404e62:	8082                	ret

20404e64 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20404e64:	1101                	addi	sp,sp,-32
20404e66:	ce06                	sw	ra,28(sp)
20404e68:	cc22                	sw	s0,24(sp)
20404e6a:	1000                	addi	s0,sp,32
20404e6c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20404e70:	a6bff0ef          	jal	ra,204048da <__metal_controller_interrupt_vector_mode>
20404e74:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:593
}
20404e76:	853e                	mv	a0,a5
20404e78:	40f2                	lw	ra,28(sp)
20404e7a:	4462                	lw	s0,24(sp)
20404e7c:	6105                	addi	sp,sp,32
20404e7e:	8082                	ret

20404e80 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20404e80:	1101                	addi	sp,sp,-32
20404e82:	ce06                	sw	ra,28(sp)
20404e84:	cc22                	sw	s0,24(sp)
20404e86:	1000                	addi	s0,sp,32
20404e88:	fea42623          	sw	a0,-20(s0)
20404e8c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20404e90:	fe842783          	lw	a5,-24(s0)
20404e94:	eb99                	bnez	a5,20404eaa <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20404e96:	204047b7          	lui	a5,0x20404
20404e9a:	d8078593          	addi	a1,a5,-640 # 20403d80 <__metal_exception_handler>
20404e9e:	fe842503          	lw	a0,-24(s0)
20404ea2:	a91ff0ef          	jal	ra,20404932 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404ea6:	4781                	li	a5,0
20404ea8:	a00d                	j	20404eca <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404eaa:	fe842703          	lw	a4,-24(s0)
20404eae:	4785                	li	a5,1
20404eb0:	00f71c63          	bne	a4,a5,20404ec8 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404eb4:	204077b7          	lui	a5,0x20407
20404eb8:	70078593          	addi	a1,a5,1792 # 20407700 <__metal_vector_table>
20404ebc:	fe842503          	lw	a0,-24(s0)
20404ec0:	a73ff0ef          	jal	ra,20404932 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404ec4:	4781                	li	a5,0
20404ec6:	a011                	j	20404eca <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404ec8:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404eca:	853e                	mv	a0,a5
20404ecc:	40f2                	lw	ra,28(sp)
20404ece:	4462                	lw	s0,24(sp)
20404ed0:	6105                	addi	sp,sp,32
20404ed2:	8082                	ret

20404ed4 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404ed4:	1101                	addi	sp,sp,-32
20404ed6:	ce22                	sw	s0,28(sp)
20404ed8:	1000                	addi	s0,sp,32
20404eda:	fea42623          	sw	a0,-20(s0)
20404ede:	feb42423          	sw	a1,-24(s0)
20404ee2:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404ee6:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404ee8:	853e                	mv	a0,a5
20404eea:	4472                	lw	s0,28(sp)
20404eec:	6105                	addi	sp,sp,32
20404eee:	8082                	ret

20404ef0 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20404ef0:	7139                	addi	sp,sp,-64
20404ef2:	de22                	sw	s0,60(sp)
20404ef4:	0080                	addi	s0,sp,64
20404ef6:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404efa:	4501                	li	a0,0
20404efc:	4581                	li	a1,0
20404efe:	fea42423          	sw	a0,-24(s0)
20404f02:	feb42623          	sw	a1,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404f06:	b80025f3          	csrr	a1,mcycleh
20404f0a:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20404f0e:	b00025f3          	csrr	a1,mcycle
20404f12:	feb42023          	sw	a1,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404f16:	b80025f3          	csrr	a1,mcycleh
20404f1a:	fcb42e23          	sw	a1,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20404f1e:	fe442503          	lw	a0,-28(s0)
20404f22:	fdc42583          	lw	a1,-36(s0)
20404f26:	feb510e3          	bne	a0,a1,20404f06 <__metal_driver_cpu_mcycle_get+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20404f2a:	fe442583          	lw	a1,-28(s0)
20404f2e:	882e                	mv	a6,a1
20404f30:	4881                	li	a7,0
20404f32:	00081793          	slli	a5,a6,0x0
20404f36:	4701                	li	a4,0
20404f38:	fe042583          	lw	a1,-32(s0)
20404f3c:	862e                	mv	a2,a1
20404f3e:	4681                	li	a3,0
20404f40:	00c765b3          	or	a1,a4,a2
20404f44:	feb42423          	sw	a1,-24(s0)
20404f48:	8fd5                	or	a5,a5,a3
20404f4a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20404f4e:	fe842703          	lw	a4,-24(s0)
20404f52:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:640
}
20404f56:	853a                	mv	a0,a4
20404f58:	85be                	mv	a1,a5
20404f5a:	5472                	lw	s0,60(sp)
20404f5c:	6121                	addi	sp,sp,64
20404f5e:	8082                	ret

20404f60 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20404f60:	7179                	addi	sp,sp,-48
20404f62:	d606                	sw	ra,44(sp)
20404f64:	d422                	sw	s0,40(sp)
20404f66:	d24a                	sw	s2,36(sp)
20404f68:	d04e                	sw	s3,32(sp)
20404f6a:	1800                	addi	s0,sp,48
20404f6c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20404f70:	fdc42783          	lw	a5,-36(s0)
20404f74:	e781                	bnez	a5,20404f7c <__metal_driver_cpu_timebase_get+0x1c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20404f76:	4901                	li	s2,0
20404f78:	4981                	li	s3,0
20404f7a:	a821                	j	20404f92 <__metal_driver_cpu_timebase_get+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20404f7c:	fdc42503          	lw	a0,-36(s0)
20404f80:	93dfe0ef          	jal	ra,204038bc <__metal_driver_cpu_timebase>
20404f84:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20404f88:	fec42783          	lw	a5,-20(s0)
20404f8c:	893e                	mv	s2,a5
20404f8e:	87fd                	srai	a5,a5,0x1f
20404f90:	89be                	mv	s3,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:650
}
20404f92:	874a                	mv	a4,s2
20404f94:	87ce                	mv	a5,s3
20404f96:	853a                	mv	a0,a4
20404f98:	85be                	mv	a1,a5
20404f9a:	50b2                	lw	ra,44(sp)
20404f9c:	5422                	lw	s0,40(sp)
20404f9e:	5912                	lw	s2,36(sp)
20404fa0:	5982                	lw	s3,32(sp)
20404fa2:	6145                	addi	sp,sp,48
20404fa4:	8082                	ret

20404fa6 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404fa6:	7179                	addi	sp,sp,-48
20404fa8:	d606                	sw	ra,44(sp)
20404faa:	d422                	sw	s0,40(sp)
20404fac:	1800                	addi	s0,sp,48
20404fae:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20404fb2:	4781                	li	a5,0
20404fb4:	4801                	li	a6,0
20404fb6:	fef42023          	sw	a5,-32(s0)
20404fba:	ff042223          	sw	a6,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404fbe:	fdc42503          	lw	a0,-36(s0)
20404fc2:	925fe0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20404fc6:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20404fca:	fec42783          	lw	a5,-20(s0)
20404fce:	c78d                	beqz	a5,20404ff8 <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20404fd0:	fec42783          	lw	a5,-20(s0)
20404fd4:	13c7a783          	lw	a5,316(a5)
20404fd8:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20404fdc:	fe842783          	lw	a5,-24(s0)
20404fe0:	cf81                	beqz	a5,20404ff8 <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20404fe2:	fe842783          	lw	a5,-24(s0)
20404fe6:	439c                	lw	a5,0(a5)
20404fe8:	47f8                	lw	a4,76(a5)
20404fea:	fe040793          	addi	a5,s0,-32
20404fee:	863e                	mv	a2,a5
20404ff0:	4585                	li	a1,1
20404ff2:	fe842503          	lw	a0,-24(s0)
20404ff6:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404ff8:	fe042703          	lw	a4,-32(s0)
20404ffc:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:667
}
20405000:	853a                	mv	a0,a4
20405002:	85be                	mv	a1,a5
20405004:	50b2                	lw	ra,44(sp)
20405006:	5422                	lw	s0,40(sp)
20405008:	6145                	addi	sp,sp,48
2040500a:	8082                	ret

2040500c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
2040500c:	7179                	addi	sp,sp,-48
2040500e:	d606                	sw	ra,44(sp)
20405010:	d422                	sw	s0,40(sp)
20405012:	d226                	sw	s1,36(sp)
20405014:	1800                	addi	s0,sp,48
20405016:	fca42e23          	sw	a0,-36(s0)
2040501a:	fcb42823          	sw	a1,-48(s0)
2040501e:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20405022:	57fd                	li	a5,-1
20405024:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405028:	fdc42503          	lw	a0,-36(s0)
2040502c:	8bbfe0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20405030:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20405034:	fe842783          	lw	a5,-24(s0)
20405038:	cf8d                	beqz	a5,20405072 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
2040503a:	fe842783          	lw	a5,-24(s0)
2040503e:	13c7a783          	lw	a5,316(a5)
20405042:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20405046:	fe442783          	lw	a5,-28(s0)
2040504a:	c785                	beqz	a5,20405072 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
2040504c:	fe442783          	lw	a5,-28(s0)
20405050:	439c                	lw	a5,0(a5)
20405052:	4ba4                	lw	s1,80(a5)
20405054:	fdc42503          	lw	a0,-36(s0)
20405058:	841fe0ef          	jal	ra,20403898 <__metal_driver_cpu_hartid>
2040505c:	87aa                	mv	a5,a0
2040505e:	fd042603          	lw	a2,-48(s0)
20405062:	fd442683          	lw	a3,-44(s0)
20405066:	85be                	mv	a1,a5
20405068:	fe442503          	lw	a0,-28(s0)
2040506c:	9482                	jalr	s1
2040506e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20405072:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:685
}
20405076:	853e                	mv	a0,a5
20405078:	50b2                	lw	ra,44(sp)
2040507a:	5422                	lw	s0,40(sp)
2040507c:	5492                	lw	s1,36(sp)
2040507e:	6145                	addi	sp,sp,48
20405080:	8082                	ret

20405082 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20405082:	1101                	addi	sp,sp,-32
20405084:	ce22                	sw	s0,28(sp)
20405086:	1000                	addi	s0,sp,32
20405088:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2040508c:	800007b7          	lui	a5,0x80000
20405090:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20405094:	853e                	mv	a0,a5
20405096:	4472                	lw	s0,28(sp)
20405098:	6105                	addi	sp,sp,32
2040509a:	8082                	ret

2040509c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
2040509c:	1101                	addi	sp,sp,-32
2040509e:	ce22                	sw	s0,28(sp)
204050a0:	1000                	addi	s0,sp,32
204050a2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
204050a6:	479d                	li	a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:703
}
204050a8:	853e                	mv	a0,a5
204050aa:	4472                	lw	s0,28(sp)
204050ac:	6105                	addi	sp,sp,32
204050ae:	8082                	ret

204050b0 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
204050b0:	1101                	addi	sp,sp,-32
204050b2:	ce22                	sw	s0,28(sp)
204050b4:	1000                	addi	s0,sp,32
204050b6:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
204050ba:	800007b7          	lui	a5,0x80000
204050be:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
204050c2:	853e                	mv	a0,a5
204050c4:	4472                	lw	s0,28(sp)
204050c6:	6105                	addi	sp,sp,32
204050c8:	8082                	ret

204050ca <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
204050ca:	1101                	addi	sp,sp,-32
204050cc:	ce22                	sw	s0,28(sp)
204050ce:	1000                	addi	s0,sp,32
204050d0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
204050d4:	478d                	li	a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:721
}
204050d6:	853e                	mv	a0,a5
204050d8:	4472                	lw	s0,28(sp)
204050da:	6105                	addi	sp,sp,32
204050dc:	8082                	ret

204050de <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
204050de:	7179                	addi	sp,sp,-48
204050e0:	d606                	sw	ra,44(sp)
204050e2:	d422                	sw	s0,40(sp)
204050e4:	1800                	addi	s0,sp,48
204050e6:	fca42e23          	sw	a0,-36(s0)
204050ea:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
204050ee:	57fd                	li	a5,-1
204050f0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204050f4:	fdc42503          	lw	a0,-36(s0)
204050f8:	feefe0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204050fc:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20405100:	fe842783          	lw	a5,-24(s0)
20405104:	c79d                	beqz	a5,20405132 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20405106:	fe842783          	lw	a5,-24(s0)
2040510a:	0dc7a783          	lw	a5,220(a5)
2040510e:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20405112:	fe442783          	lw	a5,-28(s0)
20405116:	cf91                	beqz	a5,20405132 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20405118:	fe442783          	lw	a5,-28(s0)
2040511c:	439c                	lw	a5,0(a5)
2040511e:	47f8                	lw	a4,76(a5)
20405120:	fd840793          	addi	a5,s0,-40
20405124:	863e                	mv	a2,a5
20405126:	458d                	li	a1,3
20405128:	fe442503          	lw	a0,-28(s0)
2040512c:	9702                	jalr	a4
2040512e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
20405132:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:738
}
20405136:	853e                	mv	a0,a5
20405138:	50b2                	lw	ra,44(sp)
2040513a:	5422                	lw	s0,40(sp)
2040513c:	6145                	addi	sp,sp,48
2040513e:	8082                	ret

20405140 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
20405140:	7179                	addi	sp,sp,-48
20405142:	d606                	sw	ra,44(sp)
20405144:	d422                	sw	s0,40(sp)
20405146:	1800                	addi	s0,sp,48
20405148:	fca42e23          	sw	a0,-36(s0)
2040514c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
20405150:	57fd                	li	a5,-1
20405152:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405156:	fdc42503          	lw	a0,-36(s0)
2040515a:	f8cfe0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
2040515e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
20405162:	fe842783          	lw	a5,-24(s0)
20405166:	c79d                	beqz	a5,20405194 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20405168:	fe842783          	lw	a5,-24(s0)
2040516c:	0dc7a783          	lw	a5,220(a5)
20405170:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
20405174:	fe442783          	lw	a5,-28(s0)
20405178:	cf91                	beqz	a5,20405194 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
2040517a:	fe442783          	lw	a5,-28(s0)
2040517e:	439c                	lw	a5,0(a5)
20405180:	47f8                	lw	a4,76(a5)
20405182:	fd840793          	addi	a5,s0,-40
20405186:	863e                	mv	a2,a5
20405188:	4589                	li	a1,2
2040518a:	fe442503          	lw	a0,-28(s0)
2040518e:	9702                	jalr	a4
20405190:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20405194:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:755
}
20405198:	853e                	mv	a0,a5
2040519a:	50b2                	lw	ra,44(sp)
2040519c:	5422                	lw	s0,40(sp)
2040519e:	6145                	addi	sp,sp,48
204051a0:	8082                	ret

204051a2 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
204051a2:	7179                	addi	sp,sp,-48
204051a4:	d606                	sw	ra,44(sp)
204051a6:	d422                	sw	s0,40(sp)
204051a8:	1800                	addi	s0,sp,48
204051aa:	fca42e23          	sw	a0,-36(s0)
204051ae:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
204051b2:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204051b6:	fdc42503          	lw	a0,-36(s0)
204051ba:	f2cfe0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
204051be:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
204051c2:	fe842783          	lw	a5,-24(s0)
204051c6:	c79d                	beqz	a5,204051f4 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204051c8:	fe842783          	lw	a5,-24(s0)
204051cc:	0dc7a783          	lw	a5,220(a5)
204051d0:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
204051d4:	fe442783          	lw	a5,-28(s0)
204051d8:	cf91                	beqz	a5,204051f4 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
204051da:	fe442783          	lw	a5,-28(s0)
204051de:	439c                	lw	a5,0(a5)
204051e0:	47f8                	lw	a4,76(a5)
204051e2:	fd840793          	addi	a5,s0,-40
204051e6:	863e                	mv	a2,a5
204051e8:	4591                	li	a1,4
204051ea:	fe442503          	lw	a0,-28(s0)
204051ee:	9702                	jalr	a4
204051f0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
204051f4:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:772
}
204051f8:	853e                	mv	a0,a5
204051fa:	50b2                	lw	ra,44(sp)
204051fc:	5422                	lw	s0,40(sp)
204051fe:	6145                	addi	sp,sp,48
20405200:	8082                	ret

20405202 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20405202:	1101                	addi	sp,sp,-32
20405204:	ce06                	sw	ra,28(sp)
20405206:	cc22                	sw	s0,24(sp)
20405208:	1000                	addi	s0,sp,32
2040520a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2040520e:	fec42503          	lw	a0,-20(s0)
20405212:	ed4fe0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
20405216:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:777
}
20405218:	853e                	mv	a0,a5
2040521a:	40f2                	lw	ra,28(sp)
2040521c:	4462                	lw	s0,24(sp)
2040521e:	6105                	addi	sp,sp,32
20405220:	8082                	ret

20405222 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20405222:	7179                	addi	sp,sp,-48
20405224:	d606                	sw	ra,44(sp)
20405226:	d422                	sw	s0,40(sp)
20405228:	1800                	addi	s0,sp,48
2040522a:	fca42e23          	sw	a0,-36(s0)
2040522e:	fcb42c23          	sw	a1,-40(s0)
20405232:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20405236:	fdc42503          	lw	a0,-36(s0)
2040523a:	eacfe0ef          	jal	ra,204038e6 <__metal_driver_cpu_interrupt_controller>
2040523e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20405242:	fec42783          	lw	a5,-20(s0)
20405246:	cb99                	beqz	a5,2040525c <__metal_driver_cpu_exception_register+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20405248:	fd442603          	lw	a2,-44(s0)
2040524c:	fd842583          	lw	a1,-40(s0)
20405250:	fec42503          	lw	a0,-20(s0)
20405254:	8a5ff0ef          	jal	ra,20404af8 <__metal_exception_register>
20405258:	87aa                	mv	a5,a0
2040525a:	a011                	j	2040525e <__metal_driver_cpu_exception_register+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
2040525c:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:808
}
2040525e:	853e                	mv	a0,a5
20405260:	50b2                	lw	ra,44(sp)
20405262:	5422                	lw	s0,40(sp)
20405264:	6145                	addi	sp,sp,48
20405266:	8082                	ret

20405268 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20405268:	1101                	addi	sp,sp,-32
2040526a:	ce22                	sw	s0,28(sp)
2040526c:	1000                	addi	s0,sp,32
2040526e:	fea42623          	sw	a0,-20(s0)
20405272:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20405276:	fe842783          	lw	a5,-24(s0)
2040527a:	0007d783          	lhu	a5,0(a5)
2040527e:	0037f713          	andi	a4,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20405282:	478d                	li	a5,3
20405284:	00f71463          	bne	a4,a5,2040528c <__metal_driver_cpu_get_instruction_length+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20405288:	4791                	li	a5,4
2040528a:	a011                	j	2040528e <__metal_driver_cpu_get_instruction_length+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2040528c:	4789                	li	a5,2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2040528e:	853e                	mv	a0,a5
20405290:	4472                	lw	s0,28(sp)
20405292:	6105                	addi	sp,sp,32
20405294:	8082                	ret

20405296 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20405296:	7179                	addi	sp,sp,-48
20405298:	d622                	sw	s0,44(sp)
2040529a:	1800                	addi	s0,sp,48
2040529c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
204052a0:	341027f3          	csrr	a5,mepc
204052a4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
204052a8:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:827
}
204052ac:	853e                	mv	a0,a5
204052ae:	5432                	lw	s0,44(sp)
204052b0:	6145                	addi	sp,sp,48
204052b2:	8082                	ret

204052b4 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
204052b4:	1101                	addi	sp,sp,-32
204052b6:	ce22                	sw	s0,28(sp)
204052b8:	1000                	addi	s0,sp,32
204052ba:	fea42623          	sw	a0,-20(s0)
204052be:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
204052c2:	fe842783          	lw	a5,-24(s0)
204052c6:	34179073          	csrw	mepc,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
204052ca:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:832
}
204052cc:	853e                	mv	a0,a5
204052ce:	4472                	lw	s0,28(sp)
204052d0:	6105                	addi	sp,sp,32
204052d2:	8082                	ret

204052d4 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
204052d4:	1101                	addi	sp,sp,-32
204052d6:	ce06                	sw	ra,28(sp)
204052d8:	cc22                	sw	s0,24(sp)
204052da:	1000                	addi	s0,sp,32
204052dc:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
204052e0:	fec42503          	lw	a0,-20(s0)
204052e4:	e2cfe0ef          	jal	ra,20403910 <__metal_driver_cpu_buserror>
204052e8:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_cpu.c:836
}
204052ea:	853e                	mv	a0,a5
204052ec:	40f2                	lw	ra,28(sp)
204052ee:	4462                	lw	s0,24(sp)
204052f0:	6105                	addi	sp,sp,32
204052f2:	8082                	ret

204052f4 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
204052f4:	1101                	addi	sp,sp,-32
204052f6:	ce22                	sw	s0,28(sp)
204052f8:	1000                	addi	s0,sp,32
204052fa:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
204052fe:	fec42703          	lw	a4,-20(s0)
20405302:	800007b7          	lui	a5,0x80000
20405306:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
2040530a:	00f71563          	bne	a4,a5,20405314 <__metal_driver_sifive_plic0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2040530e:	0c0007b7          	lui	a5,0xc000
20405312:	a011                	j	20405316 <__metal_driver_sifive_plic0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:319
	}
	else {
		return 0;
20405314:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:321
	}
}
20405316:	853e                	mv	a0,a5
20405318:	4472                	lw	s0,28(sp)
2040531a:	6105                	addi	sp,sp,32
2040531c:	8082                	ret

2040531e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2040531e:	1101                	addi	sp,sp,-32
20405320:	ce22                	sw	s0,28(sp)
20405322:	1000                	addi	s0,sp,32
20405324:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20405328:	fec42703          	lw	a4,-20(s0)
2040532c:	800007b7          	lui	a5,0x80000
20405330:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
20405334:	00f71463          	bne	a4,a5,2040533c <__metal_driver_sifive_plic0_num_interrupts+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20405338:	47ed                	li	a5,27
2040533a:	a011                	j	2040533e <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:339
	}
	else {
		return 0;
2040533c:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:341
	}
}
2040533e:	853e                	mv	a0,a5
20405340:	4472                	lw	s0,28(sp)
20405342:	6105                	addi	sp,sp,32
20405344:	8082                	ret

20405346 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20405346:	1101                	addi	sp,sp,-32
20405348:	ce22                	sw	s0,28(sp)
2040534a:	1000                	addi	s0,sp,32
2040534c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20405350:	fec42703          	lw	a4,-20(s0)
20405354:	800007b7          	lui	a5,0x80000
20405358:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
2040535c:	00f71463          	bne	a4,a5,20405364 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20405360:	479d                	li	a5,7
20405362:	a011                	j	20405366 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:349
	}
	else {
		return 0;
20405364:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:351
	}
}
20405366:	853e                	mv	a0,a5
20405368:	4472                	lw	s0,28(sp)
2040536a:	6105                	addi	sp,sp,32
2040536c:	8082                	ret

2040536e <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
2040536e:	1101                	addi	sp,sp,-32
20405370:	ce22                	sw	s0,28(sp)
20405372:	1000                	addi	s0,sp,32
20405374:	fea42623          	sw	a0,-20(s0)
20405378:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:355
	if (idx == 0) {
2040537c:	fe842783          	lw	a5,-24(s0)
20405380:	e791                	bnez	a5,2040538c <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20405382:	800007b7          	lui	a5,0x80000
20405386:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffdf68>
2040538a:	a011                	j	2040538e <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:359
	}
	else {
		return NULL;
2040538c:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:361
	}
}
2040538e:	853e                	mv	a0,a5
20405390:	4472                	lw	s0,28(sp)
20405392:	6105                	addi	sp,sp,32
20405394:	8082                	ret

20405396 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20405396:	1101                	addi	sp,sp,-32
20405398:	ce22                	sw	s0,28(sp)
2040539a:	1000                	addi	s0,sp,32
2040539c:	fea42623          	sw	a0,-20(s0)
204053a0:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:365
	if (idx == 0) {
204053a4:	fe842783          	lw	a5,-24(s0)
204053a8:	e399                	bnez	a5,204053ae <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:366
		return 11;
204053aa:	47ad                	li	a5,11
204053ac:	a011                	j	204053b0 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:369
	}
	else {
		return 0;
204053ae:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:371
	}
}
204053b0:	853e                	mv	a0,a5
204053b2:	4472                	lw	s0,28(sp)
204053b4:	6105                	addi	sp,sp,32
204053b6:	8082                	ret

204053b8 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
204053b8:	1101                	addi	sp,sp,-32
204053ba:	ce22                	sw	s0,28(sp)
204053bc:	1000                	addi	s0,sp,32
204053be:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:375
	if (hartid == 0) {
204053c2:	fec42783          	lw	a5,-20(s0)
204053c6:	e399                	bnez	a5,204053cc <__metal_driver_sifive_plic0_context_ids+0x14>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:376
		return 0;
204053c8:	4781                	li	a5,0
204053ca:	a011                	j	204053ce <__metal_driver_sifive_plic0_context_ids+0x16>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:379
	}
	else {
		return -1;
204053cc:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:381
	}
}
204053ce:	853e                	mv	a0,a5
204053d0:	4472                	lw	s0,28(sp)
204053d2:	6105                	addi	sp,sp,32
204053d4:	8082                	ret

204053d6 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
204053d6:	7179                	addi	sp,sp,-48
204053d8:	d606                	sw	ra,44(sp)
204053da:	d422                	sw	s0,40(sp)
204053dc:	1800                	addi	s0,sp,48
204053de:	fca42e23          	sw	a0,-36(s0)
204053e2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204053e6:	fdc42503          	lw	a0,-36(s0)
204053ea:	3729                	jal	204052f4 <__metal_driver_sifive_plic0_control_base>
204053ec:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
204053f0:	fd842783          	lw	a5,-40(s0)
204053f4:	00c79713          	slli	a4,a5,0xc
204053f8:	fec42783          	lw	a5,-20(s0)
204053fc:	973e                	add	a4,a4,a5
204053fe:	002007b7          	lui	a5,0x200
20405402:	0791                	addi	a5,a5,4
20405404:	97ba                	add	a5,a5,a4
20405406:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20405408:	853e                	mv	a0,a5
2040540a:	50b2                	lw	ra,44(sp)
2040540c:	5422                	lw	s0,40(sp)
2040540e:	6145                	addi	sp,sp,48
20405410:	8082                	ret

20405412 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20405412:	7179                	addi	sp,sp,-48
20405414:	d606                	sw	ra,44(sp)
20405416:	d422                	sw	s0,40(sp)
20405418:	1800                	addi	s0,sp,48
2040541a:	fca42e23          	sw	a0,-36(s0)
2040541e:	fcb42c23          	sw	a1,-40(s0)
20405422:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405426:	fdc42503          	lw	a0,-36(s0)
2040542a:	35e9                	jal	204052f4 <__metal_driver_sifive_plic0_control_base>
2040542c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20405430:	fd842783          	lw	a5,-40(s0)
20405434:	00c79713          	slli	a4,a5,0xc
20405438:	fec42783          	lw	a5,-20(s0)
2040543c:	973e                	add	a4,a4,a5
2040543e:	002007b7          	lui	a5,0x200
20405442:	0791                	addi	a5,a5,4
20405444:	97ba                	add	a5,a5,a4
20405446:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20405448:	fd442783          	lw	a5,-44(s0)
2040544c:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:35
}
2040544e:	0001                	nop
20405450:	50b2                	lw	ra,44(sp)
20405452:	5422                	lw	s0,40(sp)
20405454:	6145                	addi	sp,sp,48
20405456:	8082                	ret

20405458 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20405458:	7179                	addi	sp,sp,-48
2040545a:	d606                	sw	ra,44(sp)
2040545c:	d422                	sw	s0,40(sp)
2040545e:	1800                	addi	s0,sp,48
20405460:	fca42e23          	sw	a0,-36(s0)
20405464:	fcb42c23          	sw	a1,-40(s0)
20405468:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040546c:	fdc42503          	lw	a0,-36(s0)
20405470:	3551                	jal	204052f4 <__metal_driver_sifive_plic0_control_base>
20405472:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20405476:	fd842783          	lw	a5,-40(s0)
2040547a:	00c79713          	slli	a4,a5,0xc
2040547e:	fec42783          	lw	a5,-20(s0)
20405482:	973e                	add	a4,a4,a5
20405484:	002007b7          	lui	a5,0x200
20405488:	97ba                	add	a5,a5,a4
2040548a:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2040548c:	fd442783          	lw	a5,-44(s0)
20405490:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20405492:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:46
}
20405494:	853e                	mv	a0,a5
20405496:	50b2                	lw	ra,44(sp)
20405498:	5422                	lw	s0,40(sp)
2040549a:	6145                	addi	sp,sp,48
2040549c:	8082                	ret

2040549e <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
2040549e:	7179                	addi	sp,sp,-48
204054a0:	d606                	sw	ra,44(sp)
204054a2:	d422                	sw	s0,40(sp)
204054a4:	1800                	addi	s0,sp,48
204054a6:	fca42e23          	sw	a0,-36(s0)
204054aa:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
204054ae:	fdc42503          	lw	a0,-36(s0)
204054b2:	3589                	jal	204052f4 <__metal_driver_sifive_plic0_control_base>
204054b4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
204054b8:	fd842783          	lw	a5,-40(s0)
204054bc:	00c79713          	slli	a4,a5,0xc
204054c0:	fec42783          	lw	a5,-20(s0)
204054c4:	973e                	add	a4,a4,a5
204054c6:	002007b7          	lui	a5,0x200
204054ca:	97ba                	add	a5,a5,a4
204054cc:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
204054ce:	853e                	mv	a0,a5
204054d0:	50b2                	lw	ra,44(sp)
204054d2:	5422                	lw	s0,40(sp)
204054d4:	6145                	addi	sp,sp,48
204054d6:	8082                	ret

204054d8 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
204054d8:	7179                	addi	sp,sp,-48
204054da:	d606                	sw	ra,44(sp)
204054dc:	d422                	sw	s0,40(sp)
204054de:	1800                	addi	s0,sp,48
204054e0:	fca42e23          	sw	a0,-36(s0)
204054e4:	fcb42c23          	sw	a1,-40(s0)
204054e8:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
204054ec:	fdc42503          	lw	a0,-36(s0)
204054f0:	3511                	jal	204052f4 <__metal_driver_sifive_plic0_control_base>
204054f2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
204054f6:	fdc42503          	lw	a0,-36(s0)
204054fa:	35b1                	jal	20405346 <__metal_driver_sifive_plic0_max_priority>
204054fc:	87aa                	mv	a5,a0
204054fe:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20405502:	fe842783          	lw	a5,-24(s0)
20405506:	c785                	beqz	a5,2040552e <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20405508:	fd442703          	lw	a4,-44(s0)
2040550c:	fe842783          	lw	a5,-24(s0)
20405510:	00f77f63          	bgeu	a4,a5,2040552e <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20405514:	fd842783          	lw	a5,-40(s0)
20405518:	078a                	slli	a5,a5,0x2
2040551a:	873e                	mv	a4,a5
2040551c:	fec42783          	lw	a5,-20(s0)
20405520:	97ba                	add	a5,a5,a4
20405522:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20405524:	fd442783          	lw	a5,-44(s0)
20405528:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
2040552a:	4781                	li	a5,0
2040552c:	a011                	j	20405530 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
2040552e:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:72
}
20405530:	853e                	mv	a0,a5
20405532:	50b2                	lw	ra,44(sp)
20405534:	5422                	lw	s0,40(sp)
20405536:	6145                	addi	sp,sp,48
20405538:	8082                	ret

2040553a <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
2040553a:	7179                	addi	sp,sp,-48
2040553c:	d606                	sw	ra,44(sp)
2040553e:	d422                	sw	s0,40(sp)
20405540:	1800                	addi	s0,sp,48
20405542:	fca42e23          	sw	a0,-36(s0)
20405546:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
2040554a:	fdc42503          	lw	a0,-36(s0)
2040554e:	335d                	jal	204052f4 <__metal_driver_sifive_plic0_control_base>
20405550:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20405554:	fd842783          	lw	a5,-40(s0)
20405558:	078a                	slli	a5,a5,0x2
2040555a:	873e                	mv	a4,a5
2040555c:	fec42783          	lw	a5,-20(s0)
20405560:	97ba                	add	a5,a5,a4
20405562:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20405564:	853e                	mv	a0,a5
20405566:	50b2                	lw	ra,44(sp)
20405568:	5422                	lw	s0,40(sp)
2040556a:	6145                	addi	sp,sp,48
2040556c:	8082                	ret

2040556e <__metal_plic0_enable>:
__metal_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
2040556e:	7179                	addi	sp,sp,-48
20405570:	d606                	sw	ra,44(sp)
20405572:	d422                	sw	s0,40(sp)
20405574:	1800                	addi	s0,sp,48
20405576:	fca42e23          	sw	a0,-36(s0)
2040557a:	fcb42c23          	sw	a1,-40(s0)
2040557e:	fcc42a23          	sw	a2,-44(s0)
20405582:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20405586:	fdc42503          	lw	a0,-36(s0)
2040558a:	d6bff0ef          	jal	ra,204052f4 <__metal_driver_sifive_plic0_control_base>
2040558e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20405592:	fd842783          	lw	a5,-40(s0)
20405596:	00779713          	slli	a4,a5,0x7
2040559a:	fec42783          	lw	a5,-20(s0)
2040559e:	97ba                	add	a5,a5,a4
204055a0:	fd442703          	lw	a4,-44(s0)
204055a4:	8715                	srai	a4,a4,0x5
204055a6:	070a                	slli	a4,a4,0x2
204055a8:	973e                	add	a4,a4,a5
204055aa:	6789                	lui	a5,0x2
204055ac:	97ba                	add	a5,a5,a4
204055ae:	439c                	lw	a5,0(a5)
204055b0:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204055b4:	fd042783          	lw	a5,-48(s0)
204055b8:	cf81                	beqz	a5,204055d0 <__metal_plic0_enable+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
204055ba:	fd442783          	lw	a5,-44(s0)
204055be:	8bfd                	andi	a5,a5,31
204055c0:	4705                	li	a4,1
204055c2:	00f717b3          	sll	a5,a4,a5
204055c6:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
204055c8:	fe842783          	lw	a5,-24(s0)
204055cc:	8fd9                	or	a5,a5,a4
204055ce:	a829                	j	204055e8 <__metal_plic0_enable+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
204055d0:	fd442783          	lw	a5,-44(s0)
204055d4:	8bfd                	andi	a5,a5,31
204055d6:	4705                	li	a4,1
204055d8:	00f717b3          	sll	a5,a4,a5
204055dc:	fff7c793          	not	a5,a5
204055e0:	873e                	mv	a4,a5
204055e2:	fe842783          	lw	a5,-24(s0)
204055e6:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
204055e8:	fd842703          	lw	a4,-40(s0)
204055ec:	00771693          	slli	a3,a4,0x7
204055f0:	fec42703          	lw	a4,-20(s0)
204055f4:	9736                	add	a4,a4,a3
204055f6:	fd442683          	lw	a3,-44(s0)
204055fa:	8695                	srai	a3,a3,0x5
204055fc:	068a                	slli	a3,a3,0x2
204055fe:	96ba                	add	a3,a3,a4
20405600:	6709                	lui	a4,0x2
20405602:	9736                	add	a4,a4,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20405604:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20405606:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:103
}
20405608:	853e                	mv	a0,a5
2040560a:	50b2                	lw	ra,44(sp)
2040560c:	5422                	lw	s0,40(sp)
2040560e:	6145                	addi	sp,sp,48
20405610:	8082                	ret

20405612 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20405612:	1101                	addi	sp,sp,-32
20405614:	ce06                	sw	ra,28(sp)
20405616:	cc22                	sw	s0,24(sp)
20405618:	1000                	addi	s0,sp,32
2040561a:	fea42623          	sw	a0,-20(s0)
2040561e:	feb42423          	sw	a1,-24(s0)
20405622:	12c00513          	li	a0,300
20405626:	0b4020ef          	jal	ra,204076da <metal_shutdown>

2040562a <__metal_plic0_handler>:
__metal_plic0_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
2040562a:	7179                	addi	sp,sp,-48
2040562c:	d606                	sw	ra,44(sp)
2040562e:	d422                	sw	s0,40(sp)
20405630:	1800                	addi	s0,sp,48
20405632:	fca42e23          	sw	a0,-36(s0)
20405636:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
2040563a:	fd842783          	lw	a5,-40(s0)
2040563e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20405642:	b22fe0ef          	jal	ra,20403964 <__metal_myhart_id>
20405646:	87aa                	mv	a5,a0
20405648:	853e                	mv	a0,a5
2040564a:	d6fff0ef          	jal	ra,204053b8 <__metal_driver_sifive_plic0_context_ids>
2040564e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20405652:	fe842583          	lw	a1,-24(s0)
20405656:	fec42503          	lw	a0,-20(s0)
2040565a:	d7dff0ef          	jal	ra,204053d6 <__metal_plic0_claim_interrupt>
2040565e:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20405662:	fec42503          	lw	a0,-20(s0)
20405666:	cb9ff0ef          	jal	ra,2040531e <__metal_driver_sifive_plic0_num_interrupts>
2040566a:	87aa                	mv	a5,a0
2040566c:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20405670:	fe442703          	lw	a4,-28(s0)
20405674:	fe042783          	lw	a5,-32(s0)
20405678:	04f77263          	bgeu	a4,a5,204056bc <__metal_plic0_handler+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
2040567c:	fec42703          	lw	a4,-20(s0)
20405680:	fe442783          	lw	a5,-28(s0)
20405684:	078a                	slli	a5,a5,0x2
20405686:	97ba                	add	a5,a5,a4
20405688:	479c                	lw	a5,8(a5)
2040568a:	cb8d                	beqz	a5,204056bc <__metal_plic0_handler+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2040568c:	fec42703          	lw	a4,-20(s0)
20405690:	fe442783          	lw	a5,-28(s0)
20405694:	078a                	slli	a5,a5,0x2
20405696:	97ba                	add	a5,a5,a4
20405698:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
2040569c:	fe442603          	lw	a2,-28(s0)
204056a0:	fec42683          	lw	a3,-20(s0)
204056a4:	fe442703          	lw	a4,-28(s0)
204056a8:	87ba                	mv	a5,a4
204056aa:	0786                	slli	a5,a5,0x1
204056ac:	97ba                	add	a5,a5,a4
204056ae:	078e                	slli	a5,a5,0x3
204056b0:	97b6                	add	a5,a5,a3
204056b2:	0887a783          	lw	a5,136(a5)
204056b6:	85be                	mv	a1,a5
204056b8:	8532                	mv	a0,a2
204056ba:	9802                	jalr	a6
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
204056bc:	fe442603          	lw	a2,-28(s0)
204056c0:	fe842583          	lw	a1,-24(s0)
204056c4:	fec42503          	lw	a0,-20(s0)
204056c8:	d4bff0ef          	jal	ra,20405412 <__metal_plic0_complete_interrupt>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:121
}
204056cc:	0001                	nop
204056ce:	50b2                	lw	ra,44(sp)
204056d0:	5422                	lw	s0,40(sp)
204056d2:	6145                	addi	sp,sp,48
204056d4:	8082                	ret

204056d6 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
204056d6:	7139                	addi	sp,sp,-64
204056d8:	de06                	sw	ra,60(sp)
204056da:	dc22                	sw	s0,56(sp)
204056dc:	0080                	addi	s0,sp,64
204056de:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204056e2:	fcc42783          	lw	a5,-52(s0)
204056e6:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
204056ea:	fe442783          	lw	a5,-28(s0)
204056ee:	43dc                	lw	a5,4(a5)
204056f0:	12079b63          	bnez	a5,20405826 <__metal_driver_riscv_plic0_init+0x150>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
204056f4:	fe042623          	sw	zero,-20(s0)
204056f8:	aa39                	j	20405816 <__metal_driver_riscv_plic0_init+0x140>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
204056fa:	fcc42503          	lw	a0,-52(s0)
204056fe:	c21ff0ef          	jal	ra,2040531e <__metal_driver_sifive_plic0_num_interrupts>
20405702:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20405706:	fec42583          	lw	a1,-20(s0)
2040570a:	fcc42503          	lw	a0,-52(s0)
2040570e:	c61ff0ef          	jal	ra,2040536e <__metal_driver_sifive_plic0_interrupt_parents>
20405712:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20405716:	fec42583          	lw	a1,-20(s0)
2040571a:	fcc42503          	lw	a0,-52(s0)
2040571e:	c79ff0ef          	jal	ra,20405396 <__metal_driver_sifive_plic0_interrupt_lines>
20405722:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20405726:	fdc42783          	lw	a5,-36(s0)
2040572a:	439c                	lw	a5,0(a5)
2040572c:	439c                	lw	a5,0(a5)
2040572e:	fdc42503          	lw	a0,-36(s0)
20405732:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405734:	fe042423          	sw	zero,-24(s0)
20405738:	a88d                	j	204057aa <__metal_driver_riscv_plic0_init+0xd4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
2040573a:	4681                	li	a3,0
2040573c:	fe842603          	lw	a2,-24(s0)
20405740:	fec42583          	lw	a1,-20(s0)
20405744:	fe442503          	lw	a0,-28(s0)
20405748:	351d                	jal	2040556e <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
2040574a:	fe842703          	lw	a4,-24(s0)
2040574e:	fe042783          	lw	a5,-32(s0)
20405752:	04f75763          	bge	a4,a5,204057a0 <__metal_driver_riscv_plic0_init+0xca>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20405756:	4601                	li	a2,0
20405758:	fe842583          	lw	a1,-24(s0)
2040575c:	fcc42503          	lw	a0,-52(s0)
20405760:	d79ff0ef          	jal	ra,204054d8 <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20405764:	fe442703          	lw	a4,-28(s0)
20405768:	fe842783          	lw	a5,-24(s0)
2040576c:	078a                	slli	a5,a5,0x2
2040576e:	97ba                	add	a5,a5,a4
20405770:	0007a423          	sw	zero,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20405774:	fe442683          	lw	a3,-28(s0)
20405778:	fe842703          	lw	a4,-24(s0)
2040577c:	87ba                	mv	a5,a4
2040577e:	0786                	slli	a5,a5,0x1
20405780:	97ba                	add	a5,a5,a4
20405782:	078e                	slli	a5,a5,0x3
20405784:	97b6                	add	a5,a5,a3
20405786:	0807a223          	sw	zero,132(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
2040578a:	fe442683          	lw	a3,-28(s0)
2040578e:	fe842703          	lw	a4,-24(s0)
20405792:	87ba                	mv	a5,a4
20405794:	0786                	slli	a5,a5,0x1
20405796:	97ba                	add	a5,a5,a4
20405798:	078e                	slli	a5,a5,0x3
2040579a:	97b6                	add	a5,a5,a3
2040579c:	0807a423          	sw	zero,136(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
204057a0:	fe842783          	lw	a5,-24(s0)
204057a4:	0785                	addi	a5,a5,1
204057a6:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
204057aa:	fe842703          	lw	a4,-24(s0)
204057ae:	3ff00793          	li	a5,1023
204057b2:	f8e7d4e3          	bge	a5,a4,2040573a <__metal_driver_riscv_plic0_init+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
204057b6:	4601                	li	a2,0
204057b8:	fec42583          	lw	a1,-20(s0)
204057bc:	fcc42503          	lw	a0,-52(s0)
204057c0:	c99ff0ef          	jal	ra,20405458 <__metal_plic0_set_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
204057c4:	fdc42783          	lw	a5,-36(s0)
204057c8:	439c                	lw	a5,0(a5)
204057ca:	4fdc                	lw	a5,28(a5)
204057cc:	fe442683          	lw	a3,-28(s0)
204057d0:	4601                	li	a2,0
204057d2:	fd842583          	lw	a1,-40(s0)
204057d6:	fdc42503          	lw	a0,-36(s0)
204057da:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
204057dc:	fdc42783          	lw	a5,-36(s0)
204057e0:	439c                	lw	a5,0(a5)
204057e2:	4fd8                	lw	a4,28(a5)
204057e4:	fe442683          	lw	a3,-28(s0)
204057e8:	204057b7          	lui	a5,0x20405
204057ec:	62a78613          	addi	a2,a5,1578 # 2040562a <__metal_plic0_handler>
204057f0:	fd842583          	lw	a1,-40(s0)
204057f4:	fdc42503          	lw	a0,-36(s0)
204057f8:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
204057fa:	fdc42783          	lw	a5,-36(s0)
204057fe:	439c                	lw	a5,0(a5)
20405800:	53dc                	lw	a5,36(a5)
20405802:	fd842583          	lw	a1,-40(s0)
20405806:	fdc42503          	lw	a0,-36(s0)
2040580a:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2040580c:	fec42783          	lw	a5,-20(s0)
20405810:	0785                	addi	a5,a5,1
20405812:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20405816:	fec42783          	lw	a5,-20(s0)
2040581a:	eef050e3          	blez	a5,204056fa <__metal_driver_riscv_plic0_init+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
2040581e:	fe442783          	lw	a5,-28(s0)
20405822:	4705                	li	a4,1
20405824:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20405826:	0001                	nop
20405828:	50f2                	lw	ra,60(sp)
2040582a:	5462                	lw	s0,56(sp)
2040582c:	6121                	addi	sp,sp,64
2040582e:	8082                	ret

20405830 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
20405830:	7179                	addi	sp,sp,-48
20405832:	d606                	sw	ra,44(sp)
20405834:	d422                	sw	s0,40(sp)
20405836:	1800                	addi	s0,sp,48
20405838:	fca42e23          	sw	a0,-36(s0)
2040583c:	fcb42c23          	sw	a1,-40(s0)
20405840:	fcc42a23          	sw	a2,-44(s0)
20405844:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405848:	fdc42783          	lw	a5,-36(s0)
2040584c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405850:	fdc42503          	lw	a0,-36(s0)
20405854:	acbff0ef          	jal	ra,2040531e <__metal_driver_sifive_plic0_num_interrupts>
20405858:	872a                	mv	a4,a0
2040585a:	fd842783          	lw	a5,-40(s0)
2040585e:	00e7c463          	blt	a5,a4,20405866 <__metal_driver_riscv_plic0_register+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
20405862:	57fd                	li	a5,-1
20405864:	a051                	j	204058e8 <__metal_driver_riscv_plic0_register+0xb8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
20405866:	fd442783          	lw	a5,-44(s0)
2040586a:	cf9d                	beqz	a5,204058a8 <__metal_driver_riscv_plic0_register+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
2040586c:	4609                	li	a2,2
2040586e:	fd842583          	lw	a1,-40(s0)
20405872:	fdc42503          	lw	a0,-36(s0)
20405876:	c63ff0ef          	jal	ra,204054d8 <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
2040587a:	fec42703          	lw	a4,-20(s0)
2040587e:	fd842783          	lw	a5,-40(s0)
20405882:	078a                	slli	a5,a5,0x2
20405884:	97ba                	add	a5,a5,a4
20405886:	fd442703          	lw	a4,-44(s0)
2040588a:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
2040588c:	fec42683          	lw	a3,-20(s0)
20405890:	fd842703          	lw	a4,-40(s0)
20405894:	87ba                	mv	a5,a4
20405896:	0786                	slli	a5,a5,0x1
20405898:	97ba                	add	a5,a5,a4
2040589a:	078e                	slli	a5,a5,0x3
2040589c:	97b6                	add	a5,a5,a3
2040589e:	fd042703          	lw	a4,-48(s0)
204058a2:	08e7a423          	sw	a4,136(a5)
204058a6:	a081                	j	204058e6 <__metal_driver_riscv_plic0_register+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
204058a8:	4605                	li	a2,1
204058aa:	fd842583          	lw	a1,-40(s0)
204058ae:	fdc42503          	lw	a0,-36(s0)
204058b2:	c27ff0ef          	jal	ra,204054d8 <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
204058b6:	fec42703          	lw	a4,-20(s0)
204058ba:	fd842783          	lw	a5,-40(s0)
204058be:	078a                	slli	a5,a5,0x2
204058c0:	97ba                	add	a5,a5,a4
204058c2:	20405737          	lui	a4,0x20405
204058c6:	61270713          	addi	a4,a4,1554 # 20405612 <__metal_plic0_default_handler>
204058ca:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
204058cc:	fec42683          	lw	a3,-20(s0)
204058d0:	fd842703          	lw	a4,-40(s0)
204058d4:	87ba                	mv	a5,a4
204058d6:	0786                	slli	a5,a5,0x1
204058d8:	97ba                	add	a5,a5,a4
204058da:	078e                	slli	a5,a5,0x3
204058dc:	97b6                	add	a5,a5,a3
204058de:	fd042703          	lw	a4,-48(s0)
204058e2:	08e7a223          	sw	a4,132(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
204058e6:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:185
}
204058e8:	853e                	mv	a0,a5
204058ea:	50b2                	lw	ra,44(sp)
204058ec:	5422                	lw	s0,40(sp)
204058ee:	6145                	addi	sp,sp,48
204058f0:	8082                	ret

204058f2 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
204058f2:	7179                	addi	sp,sp,-48
204058f4:	d606                	sw	ra,44(sp)
204058f6:	d422                	sw	s0,40(sp)
204058f8:	1800                	addi	s0,sp,48
204058fa:	fca42e23          	sw	a0,-36(s0)
204058fe:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405902:	fdc42783          	lw	a5,-36(s0)
20405906:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040590a:	fdc42503          	lw	a0,-36(s0)
2040590e:	a11ff0ef          	jal	ra,2040531e <__metal_driver_sifive_plic0_num_interrupts>
20405912:	872a                	mv	a4,a0
20405914:	fd842783          	lw	a5,-40(s0)
20405918:	00e7c463          	blt	a5,a4,20405920 <__metal_driver_riscv_plic0_enable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2040591c:	57fd                	li	a5,-1
2040591e:	a829                	j	20405938 <__metal_driver_riscv_plic0_enable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405920:	844fe0ef          	jal	ra,20403964 <__metal_myhart_id>
20405924:	87aa                	mv	a5,a0
20405926:	4685                	li	a3,1
20405928:	fd842603          	lw	a2,-40(s0)
2040592c:	85be                	mv	a1,a5
2040592e:	fec42503          	lw	a0,-20(s0)
20405932:	c3dff0ef          	jal	ra,2040556e <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
20405936:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:197
}
20405938:	853e                	mv	a0,a5
2040593a:	50b2                	lw	ra,44(sp)
2040593c:	5422                	lw	s0,40(sp)
2040593e:	6145                	addi	sp,sp,48
20405940:	8082                	ret

20405942 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
20405942:	7179                	addi	sp,sp,-48
20405944:	d606                	sw	ra,44(sp)
20405946:	d422                	sw	s0,40(sp)
20405948:	1800                	addi	s0,sp,48
2040594a:	fca42e23          	sw	a0,-36(s0)
2040594e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405952:	fdc42783          	lw	a5,-36(s0)
20405956:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040595a:	fdc42503          	lw	a0,-36(s0)
2040595e:	9c1ff0ef          	jal	ra,2040531e <__metal_driver_sifive_plic0_num_interrupts>
20405962:	872a                	mv	a4,a0
20405964:	fd842783          	lw	a5,-40(s0)
20405968:	00e7c463          	blt	a5,a4,20405970 <__metal_driver_riscv_plic0_disable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
2040596c:	57fd                	li	a5,-1
2040596e:	a829                	j	20405988 <__metal_driver_riscv_plic0_disable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
20405970:	ff5fd0ef          	jal	ra,20403964 <__metal_myhart_id>
20405974:	87aa                	mv	a5,a0
20405976:	4681                	li	a3,0
20405978:	fd842603          	lw	a2,-40(s0)
2040597c:	85be                	mv	a1,a5
2040597e:	fec42503          	lw	a0,-20(s0)
20405982:	bedff0ef          	jal	ra,2040556e <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20405986:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:208
}
20405988:	853e                	mv	a0,a5
2040598a:	50b2                	lw	ra,44(sp)
2040598c:	5422                	lw	s0,40(sp)
2040598e:	6145                	addi	sp,sp,48
20405990:	8082                	ret

20405992 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405992:	1101                	addi	sp,sp,-32
20405994:	ce06                	sw	ra,28(sp)
20405996:	cc22                	sw	s0,24(sp)
20405998:	1000                	addi	s0,sp,32
2040599a:	fea42623          	sw	a0,-20(s0)
2040599e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
204059a2:	fc3fd0ef          	jal	ra,20403964 <__metal_myhart_id>
204059a6:	87aa                	mv	a5,a0
204059a8:	fe842603          	lw	a2,-24(s0)
204059ac:	85be                	mv	a1,a5
204059ae:	fec42503          	lw	a0,-20(s0)
204059b2:	aa7ff0ef          	jal	ra,20405458 <__metal_plic0_set_threshold>
204059b6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
204059b8:	853e                	mv	a0,a5
204059ba:	40f2                	lw	ra,28(sp)
204059bc:	4462                	lw	s0,24(sp)
204059be:	6105                	addi	sp,sp,32
204059c0:	8082                	ret

204059c2 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
204059c2:	1101                	addi	sp,sp,-32
204059c4:	ce06                	sw	ra,28(sp)
204059c6:	cc22                	sw	s0,24(sp)
204059c8:	1000                	addi	s0,sp,32
204059ca:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
204059ce:	f97fd0ef          	jal	ra,20403964 <__metal_myhart_id>
204059d2:	87aa                	mv	a5,a0
204059d4:	85be                	mv	a1,a5
204059d6:	fec42503          	lw	a0,-20(s0)
204059da:	ac5ff0ef          	jal	ra,2040549e <__metal_plic0_get_threshold>
204059de:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:219
}
204059e0:	853e                	mv	a0,a5
204059e2:	40f2                	lw	ra,28(sp)
204059e4:	4462                	lw	s0,24(sp)
204059e6:	6105                	addi	sp,sp,32
204059e8:	8082                	ret

204059ea <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
204059ea:	7179                	addi	sp,sp,-48
204059ec:	d606                	sw	ra,44(sp)
204059ee:	d422                	sw	s0,40(sp)
204059f0:	1800                	addi	s0,sp,48
204059f2:	fca42e23          	sw	a0,-36(s0)
204059f6:	fcb42c23          	sw	a1,-40(s0)
204059fa:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
204059fe:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405a02:	fdc42783          	lw	a5,-36(s0)
20405a06:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405a0a:	fdc42503          	lw	a0,-36(s0)
20405a0e:	911ff0ef          	jal	ra,2040531e <__metal_driver_sifive_plic0_num_interrupts>
20405a12:	872a                	mv	a4,a0
20405a14:	fd442783          	lw	a5,-44(s0)
20405a18:	00e7c863          	blt	a5,a4,20405a28 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
20405a1c:	57fd                	li	a5,-1
20405a1e:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405a22:	fe442783          	lw	a5,-28(s0)
20405a26:	a899                	j	20405a7c <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20405a28:	fe042623          	sw	zero,-20(s0)
20405a2c:	a099                	j	20405a72 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
20405a2e:	fec42783          	lw	a5,-20(s0)
20405a32:	c795                	beqz	a5,20405a5e <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
20405a34:	4685                	li	a3,1
20405a36:	fd442603          	lw	a2,-44(s0)
20405a3a:	fec42583          	lw	a1,-20(s0)
20405a3e:	fe842503          	lw	a0,-24(s0)
20405a42:	b2dff0ef          	jal	ra,2040556e <__metal_plic0_enable>
20405a46:	87aa                	mv	a5,a0
20405a48:	0017f713          	andi	a4,a5,1
20405a4c:	fec42783          	lw	a5,-20(s0)
20405a50:	00f71733          	sll	a4,a4,a5
20405a54:	fe442783          	lw	a5,-28(s0)
20405a58:	8fd9                	or	a5,a5,a4
20405a5a:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405a5e:	fec42783          	lw	a5,-20(s0)
20405a62:	0785                	addi	a5,a5,1
20405a64:	fef42623          	sw	a5,-20(s0)
20405a68:	fd842783          	lw	a5,-40(s0)
20405a6c:	8385                	srli	a5,a5,0x1
20405a6e:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
20405a72:	fd842783          	lw	a5,-40(s0)
20405a76:	ffc5                	bnez	a5,20405a2e <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
20405a78:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
20405a7c:	853e                	mv	a0,a5
20405a7e:	50b2                	lw	ra,44(sp)
20405a80:	5422                	lw	s0,40(sp)
20405a82:	6145                	addi	sp,sp,48
20405a84:	8082                	ret

20405a86 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20405a86:	7179                	addi	sp,sp,-48
20405a88:	d606                	sw	ra,44(sp)
20405a8a:	d422                	sw	s0,40(sp)
20405a8c:	1800                	addi	s0,sp,48
20405a8e:	fca42e23          	sw	a0,-36(s0)
20405a92:	fcb42c23          	sw	a1,-40(s0)
20405a96:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20405a9a:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405a9e:	fdc42783          	lw	a5,-36(s0)
20405aa2:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405aa6:	fdc42503          	lw	a0,-36(s0)
20405aaa:	875ff0ef          	jal	ra,2040531e <__metal_driver_sifive_plic0_num_interrupts>
20405aae:	872a                	mv	a4,a0
20405ab0:	fd442783          	lw	a5,-44(s0)
20405ab4:	00e7c863          	blt	a5,a4,20405ac4 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20405ab8:	57fd                	li	a5,-1
20405aba:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20405abe:	fe442783          	lw	a5,-28(s0)
20405ac2:	a899                	j	20405b18 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20405ac4:	fe042623          	sw	zero,-20(s0)
20405ac8:	a099                	j	20405b0e <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20405aca:	fec42783          	lw	a5,-20(s0)
20405ace:	c795                	beqz	a5,20405afa <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20405ad0:	4681                	li	a3,0
20405ad2:	fd442603          	lw	a2,-44(s0)
20405ad6:	fec42583          	lw	a1,-20(s0)
20405ada:	fe842503          	lw	a0,-24(s0)
20405ade:	a91ff0ef          	jal	ra,2040556e <__metal_plic0_enable>
20405ae2:	87aa                	mv	a5,a0
20405ae4:	0017f713          	andi	a4,a5,1
20405ae8:	fec42783          	lw	a5,-20(s0)
20405aec:	00f71733          	sll	a4,a4,a5
20405af0:	fe442783          	lw	a5,-28(s0)
20405af4:	8fd9                	or	a5,a5,a4
20405af6:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405afa:	fec42783          	lw	a5,-20(s0)
20405afe:	0785                	addi	a5,a5,1
20405b00:	fef42623          	sw	a5,-20(s0)
20405b04:	fd842783          	lw	a5,-40(s0)
20405b08:	8385                	srli	a5,a5,0x1
20405b0a:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20405b0e:	fd842783          	lw	a5,-40(s0)
20405b12:	ffc5                	bnez	a5,20405aca <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405b14:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20405b18:	853e                	mv	a0,a5
20405b1a:	50b2                	lw	ra,44(sp)
20405b1c:	5422                	lw	s0,40(sp)
20405b1e:	6145                	addi	sp,sp,48
20405b20:	8082                	ret

20405b22 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405b22:	7179                	addi	sp,sp,-48
20405b24:	d606                	sw	ra,44(sp)
20405b26:	d422                	sw	s0,40(sp)
20405b28:	1800                	addi	s0,sp,48
20405b2a:	fca42e23          	sw	a0,-36(s0)
20405b2e:	fcb42c23          	sw	a1,-40(s0)
20405b32:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20405b36:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20405b3a:	fe042623          	sw	zero,-20(s0)
20405b3e:	a091                	j	20405b82 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20405b40:	fec42783          	lw	a5,-20(s0)
20405b44:	c78d                	beqz	a5,20405b6e <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20405b46:	fd442603          	lw	a2,-44(s0)
20405b4a:	fec42583          	lw	a1,-20(s0)
20405b4e:	fdc42503          	lw	a0,-36(s0)
20405b52:	907ff0ef          	jal	ra,20405458 <__metal_plic0_set_threshold>
20405b56:	87aa                	mv	a5,a0
20405b58:	0017f713          	andi	a4,a5,1
20405b5c:	fec42783          	lw	a5,-20(s0)
20405b60:	00f71733          	sll	a4,a4,a5
20405b64:	fe842783          	lw	a5,-24(s0)
20405b68:	8fd9                	or	a5,a5,a4
20405b6a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20405b6e:	fec42783          	lw	a5,-20(s0)
20405b72:	0785                	addi	a5,a5,1
20405b74:	fef42623          	sw	a5,-20(s0)
20405b78:	fd842783          	lw	a5,-40(s0)
20405b7c:	8385                	srli	a5,a5,0x1
20405b7e:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20405b82:	fd842783          	lw	a5,-40(s0)
20405b86:	ffcd                	bnez	a5,20405b40 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20405b88:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:281
}
20405b8c:	853e                	mv	a0,a5
20405b8e:	50b2                	lw	ra,44(sp)
20405b90:	5422                	lw	s0,40(sp)
20405b92:	6145                	addi	sp,sp,48
20405b94:	8082                	ret

20405b96 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20405b96:	1101                	addi	sp,sp,-32
20405b98:	ce06                	sw	ra,28(sp)
20405b9a:	cc22                	sw	s0,24(sp)
20405b9c:	1000                	addi	s0,sp,32
20405b9e:	fea42623          	sw	a0,-20(s0)
20405ba2:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20405ba6:	fe842583          	lw	a1,-24(s0)
20405baa:	fec42503          	lw	a0,-20(s0)
20405bae:	8f1ff0ef          	jal	ra,2040549e <__metal_plic0_get_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20405bb2:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/riscv_plic0.c:287
}
20405bb4:	853e                	mv	a0,a5
20405bb6:	40f2                	lw	ra,28(sp)
20405bb8:	4462                	lw	s0,24(sp)
20405bba:	6105                	addi	sp,sp,32
20405bbc:	8082                	ret

20405bbe <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20405bbe:	1101                	addi	sp,sp,-32
20405bc0:	ce22                	sw	s0,28(sp)
20405bc2:	1000                	addi	s0,sp,32
20405bc4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20405bc8:	800007b7          	lui	a5,0x80000
20405bcc:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdf4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1039
}
20405bd0:	853e                	mv	a0,a5
20405bd2:	4472                	lw	s0,28(sp)
20405bd4:	6105                	addi	sp,sp,32
20405bd6:	8082                	ret

20405bd8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20405bd8:	1101                	addi	sp,sp,-32
20405bda:	ce22                	sw	s0,28(sp)
20405bdc:	1000                	addi	s0,sp,32
20405bde:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405be2:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1044
}
20405be6:	853e                	mv	a0,a5
20405be8:	4472                	lw	s0,28(sp)
20405bea:	6105                	addi	sp,sp,32
20405bec:	8082                	ret

20405bee <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20405bee:	1101                	addi	sp,sp,-32
20405bf0:	ce22                	sw	s0,28(sp)
20405bf2:	1000                	addi	s0,sp,32
20405bf4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20405bf8:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1054
}
20405bfa:	853e                	mv	a0,a5
20405bfc:	4472                	lw	s0,28(sp)
20405bfe:	6105                	addi	sp,sp,32
20405c00:	8082                	ret

20405c02 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405c02:	1141                	addi	sp,sp,-16
20405c04:	c622                	sw	s0,12(sp)
20405c06:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405c08:	204017b7          	lui	a5,0x20401
20405c0c:	03478793          	addi	a5,a5,52 # 20401034 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405c10:	853e                	mv	a0,a5
20405c12:	4432                	lw	s0,12(sp)
20405c14:	0141                	addi	sp,sp,16
20405c16:	8082                	ret

20405c18 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405c18:	7139                	addi	sp,sp,-64
20405c1a:	de06                	sw	ra,60(sp)
20405c1c:	dc22                	sw	s0,56(sp)
20405c1e:	0080                	addi	s0,sp,64
20405c20:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405c24:	fcc42503          	lw	a0,-52(s0)
20405c28:	3f59                	jal	20405bbe <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20405c2a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20405c2e:	fcc42503          	lw	a0,-52(s0)
20405c32:	3f75                	jal	20405bee <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20405c34:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20405c38:	fcc42503          	lw	a0,-52(s0)
20405c3c:	3f71                	jal	20405bd8 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20405c3e:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405c42:	37c1                	jal	20405c02 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405c44:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20405c48:	fe042783          	lw	a5,-32(s0)
20405c4c:	439c                	lw	a5,0(a5)
20405c4e:	fe842583          	lw	a1,-24(s0)
20405c52:	fe442503          	lw	a0,-28(s0)
20405c56:	9782                	jalr	a5
20405c58:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20405c5c:	fdc42703          	lw	a4,-36(s0)
20405c60:	400007b7          	lui	a5,0x40000
20405c64:	8ff9                	and	a5,a5,a4
20405c66:	e399                	bnez	a5,20405c6c <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20405c68:	57fd                	li	a5,-1
20405c6a:	a025                	j	20405c92 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20405c6c:	fdc42783          	lw	a5,-36(s0)
20405c70:	0007c463          	bltz	a5,20405c78 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20405c74:	57fd                	li	a5,-1
20405c76:	a831                	j	20405c92 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20405c78:	fec42503          	lw	a0,-20(s0)
20405c7c:	0f9010ef          	jal	ra,20407574 <metal_clock_get_rate_hz>
20405c80:	87aa                	mv	a5,a0
20405c82:	873e                	mv	a4,a5
20405c84:	fdc42783          	lw	a5,-36(s0)
20405c88:	03f7f793          	andi	a5,a5,63
20405c8c:	0785                	addi	a5,a5,1
20405c8e:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405c92:	853e                	mv	a0,a5
20405c94:	50f2                	lw	ra,60(sp)
20405c96:	5462                	lw	s0,56(sp)
20405c98:	6121                	addi	sp,sp,64
20405c9a:	8082                	ret

20405c9c <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405c9c:	1101                	addi	sp,sp,-32
20405c9e:	ce06                	sw	ra,28(sp)
20405ca0:	cc22                	sw	s0,24(sp)
20405ca2:	1000                	addi	s0,sp,32
20405ca4:	fea42623          	sw	a0,-20(s0)
20405ca8:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20405cac:	fec42503          	lw	a0,-20(s0)
20405cb0:	37a5                	jal	20405c18 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405cb2:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405cb4:	853e                	mv	a0,a5
20405cb6:	40f2                	lw	ra,28(sp)
20405cb8:	4462                	lw	s0,24(sp)
20405cba:	6105                	addi	sp,sp,32
20405cbc:	8082                	ret

20405cbe <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1060
{
20405cbe:	1101                	addi	sp,sp,-32
20405cc0:	ce22                	sw	s0,28(sp)
20405cc2:	1000                	addi	s0,sp,32
20405cc4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20405cc8:	800007b7          	lui	a5,0x80000
20405ccc:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdf40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1062
}
20405cd0:	853e                	mv	a0,a5
20405cd2:	4472                	lw	s0,28(sp)
20405cd4:	6105                	addi	sp,sp,32
20405cd6:	8082                	ret

20405cd8 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1065
{
20405cd8:	1101                	addi	sp,sp,-32
20405cda:	ce22                	sw	s0,28(sp)
20405cdc:	1000                	addi	s0,sp,32
20405cde:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405ce2:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1067
}
20405ce6:	853e                	mv	a0,a5
20405ce8:	4472                	lw	s0,28(sp)
20405cea:	6105                	addi	sp,sp,32
20405cec:	8082                	ret

20405cee <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1070
{
20405cee:	1101                	addi	sp,sp,-32
20405cf0:	ce22                	sw	s0,28(sp)
20405cf2:	1000                	addi	s0,sp,32
20405cf4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20405cf8:	4791                	li	a5,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1072
}
20405cfa:	853e                	mv	a0,a5
20405cfc:	4472                	lw	s0,28(sp)
20405cfe:	6105                	addi	sp,sp,32
20405d00:	8082                	ret

20405d02 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
20405d02:	1141                	addi	sp,sp,-16
20405d04:	c622                	sw	s0,12(sp)
20405d06:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405d08:	204017b7          	lui	a5,0x20401
20405d0c:	03478793          	addi	a5,a5,52 # 20401034 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405d10:	853e                	mv	a0,a5
20405d12:	4432                	lw	s0,12(sp)
20405d14:	0141                	addi	sp,sp,16
20405d16:	8082                	ret

20405d18 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405d18:	7139                	addi	sp,sp,-64
20405d1a:	de06                	sw	ra,60(sp)
20405d1c:	dc22                	sw	s0,56(sp)
20405d1e:	0080                	addi	s0,sp,64
20405d20:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405d24:	fcc42503          	lw	a0,-52(s0)
20405d28:	3f59                	jal	20405cbe <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20405d2a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20405d2e:	fcc42503          	lw	a0,-52(s0)
20405d32:	3f75                	jal	20405cee <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20405d34:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20405d38:	fcc42503          	lw	a0,-52(s0)
20405d3c:	3f71                	jal	20405cd8 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20405d3e:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405d42:	37c1                	jal	20405d02 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405d44:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20405d48:	fe042783          	lw	a5,-32(s0)
20405d4c:	439c                	lw	a5,0(a5)
20405d4e:	fe842583          	lw	a1,-24(s0)
20405d52:	fe442503          	lw	a0,-28(s0)
20405d56:	9782                	jalr	a5
20405d58:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20405d5c:	fdc42703          	lw	a4,-36(s0)
20405d60:	400007b7          	lui	a5,0x40000
20405d64:	8ff9                	and	a5,a5,a4
20405d66:	e399                	bnez	a5,20405d6c <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20405d68:	57fd                	li	a5,-1
20405d6a:	a821                	j	20405d82 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20405d6c:	fdc42783          	lw	a5,-36(s0)
20405d70:	0007c463          	bltz	a5,20405d78 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20405d74:	57fd                	li	a5,-1
20405d76:	a031                	j	20405d82 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20405d78:	fec42503          	lw	a0,-20(s0)
20405d7c:	7f8010ef          	jal	ra,20407574 <metal_clock_get_rate_hz>
20405d80:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20405d82:	853e                	mv	a0,a5
20405d84:	50f2                	lw	ra,60(sp)
20405d86:	5462                	lw	s0,56(sp)
20405d88:	6121                	addi	sp,sp,64
20405d8a:	8082                	ret

20405d8c <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20405d8c:	1101                	addi	sp,sp,-32
20405d8e:	ce06                	sw	ra,28(sp)
20405d90:	cc22                	sw	s0,24(sp)
20405d92:	1000                	addi	s0,sp,32
20405d94:	fea42623          	sw	a0,-20(s0)
20405d98:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20405d9c:	fec42503          	lw	a0,-20(s0)
20405da0:	3fa5                	jal	20405d18 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20405da2:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20405da4:	853e                	mv	a0,a5
20405da6:	40f2                	lw	ra,28(sp)
20405da8:	4462                	lw	s0,24(sp)
20405daa:	6105                	addi	sp,sp,32
20405dac:	8082                	ret

20405dae <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1121
{
20405dae:	1101                	addi	sp,sp,-32
20405db0:	ce22                	sw	s0,28(sp)
20405db2:	1000                	addi	s0,sp,32
20405db4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20405db8:	800007b7          	lui	a5,0x80000
20405dbc:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xffffe658>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1123
}
20405dc0:	853e                	mv	a0,a5
20405dc2:	4472                	lw	s0,28(sp)
20405dc4:	6105                	addi	sp,sp,32
20405dc6:	8082                	ret

20405dc8 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1126
{
20405dc8:	1101                	addi	sp,sp,-32
20405dca:	ce22                	sw	s0,28(sp)
20405dcc:	1000                	addi	s0,sp,32
20405dce:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20405dd2:	800007b7          	lui	a5,0x80000
20405dd6:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xffffe664>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1128
}
20405dda:	853e                	mv	a0,a5
20405ddc:	4472                	lw	s0,28(sp)
20405dde:	6105                	addi	sp,sp,32
20405de0:	8082                	ret

20405de2 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1131
{
20405de2:	1101                	addi	sp,sp,-32
20405de4:	ce22                	sw	s0,28(sp)
20405de6:	1000                	addi	s0,sp,32
20405de8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405dec:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1133
}
20405df0:	853e                	mv	a0,a5
20405df2:	4472                	lw	s0,28(sp)
20405df4:	6105                	addi	sp,sp,32
20405df6:	8082                	ret

20405df8 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1136
{
20405df8:	1101                	addi	sp,sp,-32
20405dfa:	ce22                	sw	s0,28(sp)
20405dfc:	1000                	addi	s0,sp,32
20405dfe:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405e02:	47b1                	li	a5,12
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1138
}
20405e04:	853e                	mv	a0,a5
20405e06:	4472                	lw	s0,28(sp)
20405e08:	6105                	addi	sp,sp,32
20405e0a:	8082                	ret

20405e0c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1141
{
20405e0c:	1141                	addi	sp,sp,-16
20405e0e:	c622                	sw	s0,12(sp)
20405e10:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405e12:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1143
}
20405e16:	853e                	mv	a0,a5
20405e18:	4432                	lw	s0,12(sp)
20405e1a:	0141                	addi	sp,sp,16
20405e1c:	8082                	ret

20405e1e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1146
{
20405e1e:	1141                	addi	sp,sp,-16
20405e20:	c622                	sw	s0,12(sp)
20405e22:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405e24:	47a1                	li	a5,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1148
}
20405e26:	853e                	mv	a0,a5
20405e28:	4432                	lw	s0,12(sp)
20405e2a:	0141                	addi	sp,sp,16
20405e2c:	8082                	ret

20405e2e <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1151
{
20405e2e:	1141                	addi	sp,sp,-16
20405e30:	c622                	sw	s0,12(sp)
20405e32:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1152
		return 16000000;
20405e34:	00f427b7          	lui	a5,0xf42
20405e38:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1153
}
20405e3c:	853e                	mv	a0,a5
20405e3e:	4432                	lw	s0,12(sp)
20405e40:	0141                	addi	sp,sp,16
20405e42:	8082                	ret

20405e44 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1159
{
20405e44:	1141                	addi	sp,sp,-16
20405e46:	c622                	sw	s0,12(sp)
20405e48:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405e4a:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1161
}
20405e4e:	853e                	mv	a0,a5
20405e50:	4432                	lw	s0,12(sp)
20405e52:	0141                	addi	sp,sp,16
20405e54:	8082                	ret

20405e56 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1169
{
20405e56:	1141                	addi	sp,sp,-16
20405e58:	c622                	sw	s0,12(sp)
20405e5a:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405e5c:	204017b7          	lui	a5,0x20401
20405e60:	03478793          	addi	a5,a5,52 # 20401034 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1171
}
20405e64:	853e                	mv	a0,a5
20405e66:	4432                	lw	s0,12(sp)
20405e68:	0141                	addi	sp,sp,16
20405e6a:	8082                	ret

20405e6c <get_pll_config_freq>:
get_pll_config_freq():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20405e6c:	1101                	addi	sp,sp,-32
20405e6e:	ce22                	sw	s0,28(sp)
20405e70:	1000                	addi	s0,sp,32
20405e72:	fea42623          	sw	a0,-20(s0)
20405e76:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20405e7a:	fe842783          	lw	a5,-24(s0)
20405e7e:	479c                	lw	a5,8(a5)
20405e80:	fec42703          	lw	a4,-20(s0)
20405e84:	00f76963          	bltu	a4,a5,20405e96 <get_pll_config_freq+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20405e88:	fe842783          	lw	a5,-24(s0)
20405e8c:	47dc                	lw	a5,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20405e8e:	fec42703          	lw	a4,-20(s0)
20405e92:	00e7f463          	bgeu	a5,a4,20405e9a <get_pll_config_freq+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20405e96:	57fd                	li	a5,-1
20405e98:	a829                	j	20405eb2 <get_pll_config_freq+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20405e9a:	fe842783          	lw	a5,-24(s0)
20405e9e:	4398                	lw	a4,0(a5)
20405ea0:	fec42783          	lw	a5,-20(s0)
20405ea4:	02f70733          	mul	a4,a4,a5
20405ea8:	fe842783          	lw	a5,-24(s0)
20405eac:	43dc                	lw	a5,4(a5)
20405eae:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20405eb2:	853e                	mv	a0,a5
20405eb4:	4472                	lw	s0,28(sp)
20405eb6:	6105                	addi	sp,sp,32
20405eb8:	8082                	ret

20405eba <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20405eba:	7139                	addi	sp,sp,-64
20405ebc:	de06                	sw	ra,60(sp)
20405ebe:	dc22                	sw	s0,56(sp)
20405ec0:	0080                	addi	s0,sp,64
20405ec2:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405ec6:	fcc42783          	lw	a5,-52(s0)
20405eca:	853e                	mv	a0,a5
20405ecc:	3df5                	jal	20405dc8 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405ece:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20405ed2:	3fb1                	jal	20405e2e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405ed4:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405ed8:	3799                	jal	20405e1e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405eda:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405ede:	379d                	jal	20405e44 <__metal_driver_sifive_fe310_g000_prci_base>
20405ee0:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405ee4:	fe042703          	lw	a4,-32(s0)
20405ee8:	fe442783          	lw	a5,-28(s0)
20405eec:	97ba                	add	a5,a5,a4
20405eee:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20405ef2:	fcc42783          	lw	a5,-52(s0)
20405ef6:	43dc                	lw	a5,4(a5)
20405ef8:	853e                	mv	a0,a5
20405efa:	5e4010ef          	jal	ra,204074de <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20405efe:	fdc42783          	lw	a5,-36(s0)
20405f02:	4398                	lw	a4,0(a5)
20405f04:	67c1                	lui	a5,0x10
20405f06:	8ff9                	and	a5,a5,a4
20405f08:	cb91                	beqz	a5,20405f1c <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405f0a:	fdc42783          	lw	a5,-36(s0)
20405f0e:	4398                	lw	a4,0(a5)
20405f10:	77c1                	lui	a5,0xffff0
20405f12:	17fd                	addi	a5,a5,-1
20405f14:	8f7d                	and	a4,a4,a5
20405f16:	fdc42783          	lw	a5,-36(s0)
20405f1a:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20405f1c:	fec42783          	lw	a5,-20(s0)
20405f20:	cb91                	beqz	a5,20405f34 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405f22:	fdc42783          	lw	a5,-36(s0)
20405f26:	4398                	lw	a4,0(a5)
20405f28:	000207b7          	lui	a5,0x20
20405f2c:	8f5d                	or	a4,a4,a5
20405f2e:	fdc42783          	lw	a5,-36(s0)
20405f32:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20405f34:	fcc42783          	lw	a5,-52(s0)
20405f38:	439c                	lw	a5,0(a5)
20405f3a:	43d8                	lw	a4,4(a5)
20405f3c:	fcc42783          	lw	a5,-52(s0)
20405f40:	fe842583          	lw	a1,-24(s0)
20405f44:	853e                	mv	a0,a5
20405f46:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20405f48:	fcc42783          	lw	a5,-52(s0)
20405f4c:	479c                	lw	a5,8(a5)
20405f4e:	853e                	mv	a0,a5
20405f50:	58e010ef          	jal	ra,204074de <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20405f54:	0001                	nop
20405f56:	50f2                	lw	ra,60(sp)
20405f58:	5462                	lw	s0,56(sp)
20405f5a:	6121                	addi	sp,sp,64
20405f5c:	8082                	ret

20405f5e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20405f5e:	711d                	addi	sp,sp,-96
20405f60:	ce86                	sw	ra,92(sp)
20405f62:	cca2                	sw	s0,88(sp)
20405f64:	1080                	addi	s0,sp,96
20405f66:	faa42623          	sw	a0,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405f6a:	fac42503          	lw	a0,-84(s0)
20405f6e:	e5bff0ef          	jal	ra,20405dc8 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405f72:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405f76:	fac42503          	lw	a0,-84(s0)
20405f7a:	e35ff0ef          	jal	ra,20405dae <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405f7e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405f82:	fac42503          	lw	a0,-84(s0)
20405f86:	e99ff0ef          	jal	ra,20405e1e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405f8a:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20405f8e:	fac42503          	lw	a0,-84(s0)
20405f92:	e7bff0ef          	jal	ra,20405e0c <__metal_driver_sifive_fe310_g000_pll_config_base>
20405f96:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405f9a:	fac42503          	lw	a0,-84(s0)
20405f9e:	e5bff0ef          	jal	ra,20405df8 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405fa2:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20405fa6:	fac42503          	lw	a0,-84(s0)
20405faa:	e39ff0ef          	jal	ra,20405de2 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405fae:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405fb2:	3555                	jal	20405e56 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405fb4:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20405fb8:	fd442783          	lw	a5,-44(s0)
20405fbc:	439c                	lw	a5,0(a5)
20405fbe:	fe442583          	lw	a1,-28(s0)
20405fc2:	fe042503          	lw	a0,-32(s0)
20405fc6:	9782                	jalr	a5
20405fc8:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20405fcc:	fd442783          	lw	a5,-44(s0)
20405fd0:	439c                	lw	a5,0(a5)
20405fd2:	fdc42583          	lw	a1,-36(s0)
20405fd6:	fd842503          	lw	a0,-40(s0)
20405fda:	9782                	jalr	a5
20405fdc:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405fe0:	fd042703          	lw	a4,-48(s0)
20405fe4:	67c1                	lui	a5,0x10
20405fe6:	8f7d                	and	a4,a4,a5
20405fe8:	67c1                	lui	a5,0x10
20405fea:	00f77863          	bgeu	a4,a5,20405ffa <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20405fee:	fe842503          	lw	a0,-24(s0)
20405ff2:	582010ef          	jal	ra,20407574 <metal_clock_get_rate_hz>
20405ff6:	87aa                	mv	a5,a0
20405ff8:	a8e1                	j	204060d0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20405ffa:	fd042703          	lw	a4,-48(s0)
20405ffe:	000207b7          	lui	a5,0x20
20406002:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20406004:	000207b7          	lui	a5,0x20
20406008:	00f76563          	bltu	a4,a5,20406012 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
2040600c:	fec42783          	lw	a5,-20(s0)
20406010:	a019                	j	20406016 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20406012:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20406016:	853e                	mv	a0,a5
20406018:	55c010ef          	jal	ra,20407574 <metal_clock_get_rate_hz>
2040601c:	fca42423          	sw	a0,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20406020:	fd042703          	lw	a4,-48(s0)
20406024:	000407b7          	lui	a5,0x40
20406028:	8f7d                	and	a4,a4,a5
2040602a:	000407b7          	lui	a5,0x40
2040602e:	00f76563          	bltu	a4,a5,20406038 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xda>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20406032:	fc842783          	lw	a5,-56(s0)
20406036:	a869                	j	204060d0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20406038:	fd042783          	lw	a5,-48(s0)
2040603c:	8b9d                	andi	a5,a5,7
2040603e:	0785                	addi	a5,a5,1
20406040:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20406044:	fd042783          	lw	a5,-48(s0)
20406048:	3f07f793          	andi	a5,a5,1008
2040604c:	8391                	srli	a5,a5,0x4
2040604e:	0785                	addi	a5,a5,1
20406050:	0786                	slli	a5,a5,0x1
20406052:	fcf42023          	sw	a5,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20406056:	fd042703          	lw	a4,-48(s0)
2040605a:	6785                	lui	a5,0x1
2040605c:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20406060:	8f7d                	and	a4,a4,a5
20406062:	3ff00793          	li	a5,1023
20406066:	00e7e463          	bltu	a5,a4,2040606e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x110>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
2040606a:	57fd                	li	a5,-1
2040606c:	a095                	j	204060d0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
2040606e:	fd042703          	lw	a4,-48(s0)
20406072:	6785                	lui	a5,0x1
20406074:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20406078:	8ff9                	and	a5,a5,a4
2040607a:	83a9                	srli	a5,a5,0xa
2040607c:	4705                	li	a4,1
2040607e:	00f717b3          	sll	a5,a4,a5
20406082:	faf42e23          	sw	a5,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20406086:	fc842703          	lw	a4,-56(s0)
2040608a:	fc442783          	lw	a5,-60(s0)
2040608e:	02f74733          	div	a4,a4,a5
20406092:	fc042783          	lw	a5,-64(s0)
20406096:	02f70733          	mul	a4,a4,a5
2040609a:	fbc42783          	lw	a5,-68(s0)
2040609e:	02f747b3          	div	a5,a4,a5
204060a2:	faf42c23          	sw	a5,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
204060a6:	fcc42783          	lw	a5,-52(s0)
204060aa:	1007f713          	andi	a4,a5,256
204060ae:	0ff00793          	li	a5,255
204060b2:	00e7f563          	bgeu	a5,a4,204060bc <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x15e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
204060b6:	fb842783          	lw	a5,-72(s0)
204060ba:	a819                	j	204060d0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
204060bc:	fb842703          	lw	a4,-72(s0)
204060c0:	fcc42783          	lw	a5,-52(s0)
204060c4:	03f7f793          	andi	a5,a5,63
204060c8:	0785                	addi	a5,a5,1
204060ca:	0786                	slli	a5,a5,0x1
204060cc:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
204060d0:	853e                	mv	a0,a5
204060d2:	40f6                	lw	ra,92(sp)
204060d4:	4466                	lw	s0,88(sp)
204060d6:	6125                	addi	sp,sp,96
204060d8:	8082                	ret

204060da <find_closest_config>:
find_closest_config():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
204060da:	7139                	addi	sp,sp,-64
204060dc:	de06                	sw	ra,60(sp)
204060de:	dc22                	sw	s0,56(sp)
204060e0:	0080                	addi	s0,sp,64
204060e2:	fca42623          	sw	a0,-52(s0)
204060e6:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
204060ea:	57fd                	li	a5,-1
204060ec:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
204060f0:	800007b7          	lui	a5,0x80000
204060f4:	fff7c793          	not	a5,a5
204060f8:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204060fc:	04300793          	li	a5,67
20406100:	fef42223          	sw	a5,-28(s0)
20406104:	a0b5                	j	20406170 <find_closest_config+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20406106:	fcc42683          	lw	a3,-52(s0)
2040610a:	fe442783          	lw	a5,-28(s0)
2040610e:	00579713          	slli	a4,a5,0x5
20406112:	204007b7          	lui	a5,0x20400
20406116:	6d878793          	addi	a5,a5,1752 # 204006d8 <pll_configs>
2040611a:	97ba                	add	a5,a5,a4
2040611c:	85be                	mv	a1,a5
2040611e:	8536                	mv	a0,a3
20406120:	d4dff0ef          	jal	ra,20405e6c <get_pll_config_freq>
20406124:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
20406128:	fe042703          	lw	a4,-32(s0)
2040612c:	57fd                	li	a5,-1
2040612e:	02f70c63          	beq	a4,a5,20406166 <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20406132:	fe042703          	lw	a4,-32(s0)
20406136:	fc842783          	lw	a5,-56(s0)
2040613a:	8f1d                	sub	a4,a4,a5
2040613c:	41f75793          	srai	a5,a4,0x1f
20406140:	8f3d                	xor	a4,a4,a5
20406142:	40f707b3          	sub	a5,a4,a5
20406146:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
2040614a:	fdc42703          	lw	a4,-36(s0)
2040614e:	fe842783          	lw	a5,-24(s0)
20406152:	00f75a63          	bge	a4,a5,20406166 <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
20406156:	fe442783          	lw	a5,-28(s0)
2040615a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
2040615e:	fdc42783          	lw	a5,-36(s0)
20406162:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
20406166:	fe442783          	lw	a5,-28(s0)
2040616a:	17fd                	addi	a5,a5,-1
2040616c:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20406170:	fe442783          	lw	a5,-28(s0)
20406174:	f807d9e3          	bgez	a5,20406106 <find_closest_config+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
20406178:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
2040617c:	853e                	mv	a0,a5
2040617e:	50f2                	lw	ra,60(sp)
20406180:	5462                	lw	s0,56(sp)
20406182:	6121                	addi	sp,sp,64
20406184:	8082                	ret

20406186 <configure_pll>:
configure_pll():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20406186:	7179                	addi	sp,sp,-48
20406188:	d606                	sw	ra,44(sp)
2040618a:	d422                	sw	s0,40(sp)
2040618c:	1800                	addi	s0,sp,48
2040618e:	fca42e23          	sw	a0,-36(s0)
20406192:	fcb42c23          	sw	a1,-40(s0)
20406196:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
2040619a:	fdc42783          	lw	a5,-36(s0)
2040619e:	439c                	lw	a5,0(a5)
204061a0:	ff87f713          	andi	a4,a5,-8
204061a4:	fdc42783          	lw	a5,-36(s0)
204061a8:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
204061aa:	fdc42783          	lw	a5,-36(s0)
204061ae:	4398                	lw	a4,0(a5)
204061b0:	fd442783          	lw	a5,-44(s0)
204061b4:	4b9c                	lw	a5,16(a5)
204061b6:	8b9d                	andi	a5,a5,7
204061b8:	8f5d                	or	a4,a4,a5
204061ba:	fdc42783          	lw	a5,-36(s0)
204061be:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
204061c0:	fdc42783          	lw	a5,-36(s0)
204061c4:	439c                	lw	a5,0(a5)
204061c6:	c0f7f713          	andi	a4,a5,-1009
204061ca:	fdc42783          	lw	a5,-36(s0)
204061ce:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
204061d0:	fdc42783          	lw	a5,-36(s0)
204061d4:	4398                	lw	a4,0(a5)
204061d6:	fd442783          	lw	a5,-44(s0)
204061da:	4bdc                	lw	a5,20(a5)
204061dc:	0792                	slli	a5,a5,0x4
204061de:	3f07f793          	andi	a5,a5,1008
204061e2:	8f5d                	or	a4,a4,a5
204061e4:	fdc42783          	lw	a5,-36(s0)
204061e8:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
204061ea:	fdc42783          	lw	a5,-36(s0)
204061ee:	4398                	lw	a4,0(a5)
204061f0:	77fd                	lui	a5,0xfffff
204061f2:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd2df>
204061f6:	8f7d                	and	a4,a4,a5
204061f8:	fdc42783          	lw	a5,-36(s0)
204061fc:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
204061fe:	fdc42783          	lw	a5,-36(s0)
20406202:	4398                	lw	a4,0(a5)
20406204:	fd442783          	lw	a5,-44(s0)
20406208:	4f9c                	lw	a5,24(a5)
2040620a:	00a79693          	slli	a3,a5,0xa
2040620e:	6785                	lui	a5,0x1
20406210:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20406214:	8ff5                	and	a5,a5,a3
20406216:	8f5d                	or	a4,a4,a5
20406218:	fdc42783          	lw	a5,-36(s0)
2040621c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
2040621e:	fd442783          	lw	a5,-44(s0)
20406222:	4fdc                	lw	a5,28(a5)
20406224:	0207db63          	bgez	a5,2040625a <configure_pll+0xd4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20406228:	fd842783          	lw	a5,-40(s0)
2040622c:	439c                	lw	a5,0(a5)
2040622e:	1007e713          	ori	a4,a5,256
20406232:	fd842783          	lw	a5,-40(s0)
20406236:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20406238:	fd842783          	lw	a5,-40(s0)
2040623c:	439c                	lw	a5,0(a5)
2040623e:	fc07f713          	andi	a4,a5,-64
20406242:	fd842783          	lw	a5,-40(s0)
20406246:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20406248:	fd842783          	lw	a5,-40(s0)
2040624c:	439c                	lw	a5,0(a5)
2040624e:	0017e713          	ori	a4,a5,1
20406252:	fd842783          	lw	a5,-40(s0)
20406256:	c398                	sw	a4,0(a5)
20406258:	a82d                	j	20406292 <configure_pll+0x10c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
2040625a:	fd842783          	lw	a5,-40(s0)
2040625e:	439c                	lw	a5,0(a5)
20406260:	eff7f713          	andi	a4,a5,-257
20406264:	fd842783          	lw	a5,-40(s0)
20406268:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
2040626a:	fd842783          	lw	a5,-40(s0)
2040626e:	439c                	lw	a5,0(a5)
20406270:	fc07f713          	andi	a4,a5,-64
20406274:	fd842783          	lw	a5,-40(s0)
20406278:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
2040627a:	fd842783          	lw	a5,-40(s0)
2040627e:	4398                	lw	a4,0(a5)
20406280:	fd442783          	lw	a5,-44(s0)
20406284:	4fdc                	lw	a5,28(a5)
20406286:	03f7f793          	andi	a5,a5,63
2040628a:	8f5d                	or	a4,a4,a5
2040628c:	fd842783          	lw	a5,-40(s0)
20406290:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20406292:	fdc42783          	lw	a5,-36(s0)
20406296:	4398                	lw	a4,0(a5)
20406298:	fffc07b7          	lui	a5,0xfffc0
2040629c:	17fd                	addi	a5,a5,-1
2040629e:	8f7d                	and	a4,a4,a5
204062a0:	fdc42783          	lw	a5,-36(s0)
204062a4:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
204062a6:	fe040793          	addi	a5,s0,-32
204062aa:	863e                	mv	a2,a5
204062ac:	4585                	li	a1,1
204062ae:	800007b7          	lui	a5,0x80000
204062b2:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
204062b6:	c3afd0ef          	jal	ra,204036f0 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
204062ba:	fe042603          	lw	a2,-32(s0)
204062be:	fe442683          	lw	a3,-28(s0)
204062c2:	4511                	li	a0,4
204062c4:	4581                	li	a1,0
204062c6:	00a60733          	add	a4,a2,a0
204062ca:	883a                	mv	a6,a4
204062cc:	00c83833          	sltu	a6,a6,a2
204062d0:	00b687b3          	add	a5,a3,a1
204062d4:	00f806b3          	add	a3,a6,a5
204062d8:	87b6                	mv	a5,a3
204062da:	fee42423          	sw	a4,-24(s0)
204062de:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
204062e2:	a819                	j	204062f8 <configure_pll+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
204062e4:	fe040793          	addi	a5,s0,-32
204062e8:	863e                	mv	a2,a5
204062ea:	4585                	li	a1,1
204062ec:	800007b7          	lui	a5,0x80000
204062f0:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffe68c>
204062f4:	bfcfd0ef          	jal	ra,204036f0 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
204062f8:	fe042703          	lw	a4,-32(s0)
204062fc:	fe442783          	lw	a5,-28(s0)
20406300:	fec42683          	lw	a3,-20(s0)
20406304:	863e                	mv	a2,a5
20406306:	00c6ec63          	bltu	a3,a2,2040631e <configure_pll+0x198>
2040630a:	fec42683          	lw	a3,-20(s0)
2040630e:	863e                	mv	a2,a5
20406310:	fcc69ae3          	bne	a3,a2,204062e4 <configure_pll+0x15e>
20406314:	fe842683          	lw	a3,-24(s0)
20406318:	87ba                	mv	a5,a4
2040631a:	fcf6f5e3          	bgeu	a3,a5,204062e4 <configure_pll+0x15e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
2040631e:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20406320:	fdc42783          	lw	a5,-36(s0)
20406324:	439c                	lw	a5,0(a5)
20406326:	fe07dde3          	bgez	a5,20406320 <configure_pll+0x19a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
2040632a:	0001                	nop
2040632c:	0001                	nop
2040632e:	50b2                	lw	ra,44(sp)
20406330:	5422                	lw	s0,40(sp)
20406332:	6145                	addi	sp,sp,48
20406334:	8082                	ret

20406336 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20406336:	715d                	addi	sp,sp,-80
20406338:	c686                	sw	ra,76(sp)
2040633a:	c4a2                	sw	s0,72(sp)
2040633c:	0880                	addi	s0,sp,80
2040633e:	faa42e23          	sw	a0,-68(s0)
20406342:	fab42c23          	sw	a1,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20406346:	fbc42503          	lw	a0,-68(s0)
2040634a:	a7fff0ef          	jal	ra,20405dc8 <__metal_driver_sifive_fe310_g000_pll_pllref>
2040634e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20406352:	fbc42503          	lw	a0,-68(s0)
20406356:	a59ff0ef          	jal	ra,20405dae <__metal_driver_sifive_fe310_g000_pll_pllsel0>
2040635a:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
2040635e:	fbc42503          	lw	a0,-68(s0)
20406362:	abdff0ef          	jal	ra,20405e1e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20406366:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
2040636a:	fbc42503          	lw	a0,-68(s0)
2040636e:	a8bff0ef          	jal	ra,20405df8 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20406372:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20406376:	acfff0ef          	jal	ra,20405e44 <__metal_driver_sifive_fe310_g000_prci_base>
2040637a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
2040637e:	fdc42703          	lw	a4,-36(s0)
20406382:	fe442783          	lw	a5,-28(s0)
20406386:	97ba                	add	a5,a5,a4
20406388:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
2040638c:	fdc42703          	lw	a4,-36(s0)
20406390:	fe042783          	lw	a5,-32(s0)
20406394:	97ba                	add	a5,a5,a4
20406396:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
2040639a:	fd842783          	lw	a5,-40(s0)
2040639e:	4398                	lw	a4,0(a5)
204063a0:	67c1                	lui	a5,0x10
204063a2:	8ff9                	and	a5,a5,a4
204063a4:	cb91                	beqz	a5,204063b8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
204063a6:	fd842783          	lw	a5,-40(s0)
204063aa:	4398                	lw	a4,0(a5)
204063ac:	77c1                	lui	a5,0xffff0
204063ae:	17fd                	addi	a5,a5,-1
204063b0:	8f7d                	and	a4,a4,a5
204063b2:	fd842783          	lw	a5,-40(s0)
204063b6:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
204063b8:	fd842783          	lw	a5,-40(s0)
204063bc:	4398                	lw	a4,0(a5)
204063be:	000207b7          	lui	a5,0x20
204063c2:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
204063c4:	c781                	beqz	a5,204063cc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
204063c6:	fec42783          	lw	a5,-20(s0)
204063ca:	a019                	j	204063d0 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
204063cc:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
204063d0:	853e                	mv	a0,a5
204063d2:	1a2010ef          	jal	ra,20407574 <metal_clock_get_rate_hz>
204063d6:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
204063da:	fd042703          	lw	a4,-48(s0)
204063de:	87ba                	mv	a5,a4
204063e0:	0786                	slli	a5,a5,0x1
204063e2:	97ba                	add	a5,a5,a4
204063e4:	41f7d713          	srai	a4,a5,0x1f
204063e8:	8b0d                	andi	a4,a4,3
204063ea:	97ba                	add	a5,a5,a4
204063ec:	8789                	srai	a5,a5,0x2
204063ee:	873e                	mv	a4,a5
204063f0:	fb842783          	lw	a5,-72(s0)
204063f4:	02e7cb63          	blt	a5,a4,2040642a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
204063f8:	fd042703          	lw	a4,-48(s0)
204063fc:	87ba                	mv	a5,a4
204063fe:	078a                	slli	a5,a5,0x2
20406400:	97ba                	add	a5,a5,a4
20406402:	41f7d713          	srai	a4,a5,0x1f
20406406:	8b0d                	andi	a4,a4,3
20406408:	97ba                	add	a5,a5,a4
2040640a:	8789                	srai	a5,a5,0x2
2040640c:	873e                	mv	a4,a5
2040640e:	fb842783          	lw	a5,-72(s0)
20406412:	00f74c63          	blt	a4,a5,2040642a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20406416:	fd842783          	lw	a5,-40(s0)
2040641a:	4398                	lw	a4,0(a5)
2040641c:	000407b7          	lui	a5,0x40
20406420:	8f5d                	or	a4,a4,a5
20406422:	fd842783          	lw	a5,-40(s0)
20406426:	c398                	sw	a4,0(a5)
20406428:	a881                	j	20406478 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
2040642a:	fb842583          	lw	a1,-72(s0)
2040642e:	fd042503          	lw	a0,-48(s0)
20406432:	ca9ff0ef          	jal	ra,204060da <find_closest_config>
20406436:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
2040643a:	fcc42703          	lw	a4,-52(s0)
2040643e:	57fd                	li	a5,-1
20406440:	02f70363          	beq	a4,a5,20406466 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20406444:	fcc42783          	lw	a5,-52(s0)
20406448:	00579713          	slli	a4,a5,0x5
2040644c:	204007b7          	lui	a5,0x20400
20406450:	6d878793          	addi	a5,a5,1752 # 204006d8 <pll_configs>
20406454:	97ba                	add	a5,a5,a4
20406456:	863e                	mv	a2,a5
20406458:	fd442583          	lw	a1,-44(s0)
2040645c:	fd842503          	lw	a0,-40(s0)
20406460:	d27ff0ef          	jal	ra,20406186 <configure_pll>
20406464:	a811                	j	20406478 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20406466:	fd842783          	lw	a5,-40(s0)
2040646a:	4398                	lw	a4,0(a5)
2040646c:	000407b7          	lui	a5,0x40
20406470:	8f5d                	or	a4,a4,a5
20406472:	fd842783          	lw	a5,-40(s0)
20406476:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20406478:	fd842783          	lw	a5,-40(s0)
2040647c:	4398                	lw	a4,0(a5)
2040647e:	67c1                	lui	a5,0x10
20406480:	8f5d                	or	a4,a4,a5
20406482:	fd842783          	lw	a5,-40(s0)
20406486:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20406488:	fbc42503          	lw	a0,-68(s0)
2040648c:	ad3ff0ef          	jal	ra,20405f5e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20406490:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20406492:	853e                	mv	a0,a5
20406494:	40b6                	lw	ra,76(sp)
20406496:	4426                	lw	s0,72(sp)
20406498:	6161                	addi	sp,sp,80
2040649a:	8082                	ret

2040649c <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1159
{
2040649c:	1141                	addi	sp,sp,-16
2040649e:	c622                	sw	s0,12(sp)
204064a0:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
204064a2:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:1161
}
204064a6:	853e                	mv	a0,a5
204064a8:	4432                	lw	s0,12(sp)
204064aa:	0141                	addi	sp,sp,16
204064ac:	8082                	ret

204064ae <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
204064ae:	7179                	addi	sp,sp,-48
204064b0:	d606                	sw	ra,44(sp)
204064b2:	d422                	sw	s0,40(sp)
204064b4:	1800                	addi	s0,sp,48
204064b6:	fca42e23          	sw	a0,-36(s0)
204064ba:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204064be:	3ff9                	jal	2040649c <__metal_driver_sifive_fe310_g000_prci_base>
204064c0:	87aa                	mv	a5,a0
204064c2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
204064c6:	fd842703          	lw	a4,-40(s0)
204064ca:	fec42783          	lw	a5,-20(s0)
204064ce:	97ba                	add	a5,a5,a4
204064d0:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
204064d2:	853e                	mv	a0,a5
204064d4:	50b2                	lw	ra,44(sp)
204064d6:	5422                	lw	s0,40(sp)
204064d8:	6145                	addi	sp,sp,48
204064da:	8082                	ret

204064dc <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
204064dc:	7179                	addi	sp,sp,-48
204064de:	d606                	sw	ra,44(sp)
204064e0:	d422                	sw	s0,40(sp)
204064e2:	1800                	addi	s0,sp,48
204064e4:	fca42e23          	sw	a0,-36(s0)
204064e8:	fcb42c23          	sw	a1,-40(s0)
204064ec:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
204064f0:	3775                	jal	2040649c <__metal_driver_sifive_fe310_g000_prci_base>
204064f2:	87aa                	mv	a5,a0
204064f4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
204064f8:	fd842703          	lw	a4,-40(s0)
204064fc:	fec42783          	lw	a5,-20(s0)
20406500:	97ba                	add	a5,a5,a4
20406502:	873e                	mv	a4,a5
20406504:	fd442783          	lw	a5,-44(s0)
20406508:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
2040650a:	853e                	mv	a0,a5
2040650c:	50b2                	lw	ra,44(sp)
2040650e:	5422                	lw	s0,40(sp)
20406510:	6145                	addi	sp,sp,48
20406512:	8082                	ret

20406514 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:474
{
20406514:	1101                	addi	sp,sp,-32
20406516:	ce22                	sw	s0,28(sp)
20406518:	1000                	addi	s0,sp,32
2040651a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
2040651e:	fec42703          	lw	a4,-20(s0)
20406522:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406526:	00f71563          	bne	a4,a5,20406530 <__metal_driver_sifive_gpio0_base+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
2040652a:	100127b7          	lui	a5,0x10012
2040652e:	a011                	j	20406532 <__metal_driver_sifive_gpio0_base+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:479
		return 0;
20406530:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:481
}
20406532:	853e                	mv	a0,a5
20406534:	4472                	lw	s0,28(sp)
20406536:	6105                	addi	sp,sp,32
20406538:	8082                	ret

2040653a <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:504
{
2040653a:	1101                	addi	sp,sp,-32
2040653c:	ce22                	sw	s0,28(sp)
2040653e:	1000                	addi	s0,sp,32
20406540:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20406544:	fec42703          	lw	a4,-20(s0)
20406548:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040654c:	00f71763          	bne	a4,a5,2040655a <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406550:	800007b7          	lui	a5,0x80000
20406554:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
20406558:	a011                	j	2040655c <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:509
		return 0;
2040655a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:511
}
2040655c:	853e                	mv	a0,a5
2040655e:	4472                	lw	s0,28(sp)
20406560:	6105                	addi	sp,sp,32
20406562:	8082                	ret

20406564 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:514
{
20406564:	1101                	addi	sp,sp,-32
20406566:	ce22                	sw	s0,28(sp)
20406568:	1000                	addi	s0,sp,32
2040656a:	fea42623          	sw	a0,-20(s0)
2040656e:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20406572:	fec42703          	lw	a4,-20(s0)
20406576:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040657a:	00f71763          	bne	a4,a5,20406588 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:515 (discriminator 1)
2040657e:	fe842783          	lw	a5,-24(s0)
20406582:	e399                	bnez	a5,20406588 <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:516
		return 7;
20406584:	479d                	li	a5,7
20406586:	a269                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20406588:	fec42703          	lw	a4,-20(s0)
2040658c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406590:	00f71963          	bne	a4,a5,204065a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:518 (discriminator 1)
20406594:	fe842703          	lw	a4,-24(s0)
20406598:	4785                	li	a5,1
2040659a:	00f71463          	bne	a4,a5,204065a2 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:519
		return 8;
2040659e:	47a1                	li	a5,8
204065a0:	aa85                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
204065a2:	fec42703          	lw	a4,-20(s0)
204065a6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065aa:	00f71963          	bne	a4,a5,204065bc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
204065ae:	fe842703          	lw	a4,-24(s0)
204065b2:	4789                	li	a5,2
204065b4:	00f71463          	bne	a4,a5,204065bc <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:522
		return 9;
204065b8:	47a5                	li	a5,9
204065ba:	aa99                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
204065bc:	fec42703          	lw	a4,-20(s0)
204065c0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065c4:	00f71963          	bne	a4,a5,204065d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
204065c8:	fe842703          	lw	a4,-24(s0)
204065cc:	478d                	li	a5,3
204065ce:	00f71463          	bne	a4,a5,204065d6 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:525
		return 10;
204065d2:	47a9                	li	a5,10
204065d4:	aa35                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
204065d6:	fec42703          	lw	a4,-20(s0)
204065da:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065de:	00f71963          	bne	a4,a5,204065f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
204065e2:	fe842703          	lw	a4,-24(s0)
204065e6:	4791                	li	a5,4
204065e8:	00f71463          	bne	a4,a5,204065f0 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:528
		return 11;
204065ec:	47ad                	li	a5,11
204065ee:	a20d                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
204065f0:	fec42703          	lw	a4,-20(s0)
204065f4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204065f8:	00f71963          	bne	a4,a5,2040660a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
204065fc:	fe842703          	lw	a4,-24(s0)
20406600:	4795                	li	a5,5
20406602:	00f71463          	bne	a4,a5,2040660a <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:531
		return 12;
20406606:	47b1                	li	a5,12
20406608:	a221                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2040660a:	fec42703          	lw	a4,-20(s0)
2040660e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406612:	00f71963          	bne	a4,a5,20406624 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
20406616:	fe842703          	lw	a4,-24(s0)
2040661a:	4799                	li	a5,6
2040661c:	00f71463          	bne	a4,a5,20406624 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:534
		return 13;
20406620:	47b5                	li	a5,13
20406622:	a0fd                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20406624:	fec42703          	lw	a4,-20(s0)
20406628:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040662c:	00f71963          	bne	a4,a5,2040663e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
20406630:	fe842703          	lw	a4,-24(s0)
20406634:	479d                	li	a5,7
20406636:	00f71463          	bne	a4,a5,2040663e <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:537
		return 14;
2040663a:	47b9                	li	a5,14
2040663c:	a8d1                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
2040663e:	fec42703          	lw	a4,-20(s0)
20406642:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406646:	00f71963          	bne	a4,a5,20406658 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
2040664a:	fe842703          	lw	a4,-24(s0)
2040664e:	47a1                	li	a5,8
20406650:	00f71463          	bne	a4,a5,20406658 <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:540
		return 15;
20406654:	47bd                	li	a5,15
20406656:	a86d                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20406658:	fec42703          	lw	a4,-20(s0)
2040665c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406660:	00f71963          	bne	a4,a5,20406672 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
20406664:	fe842703          	lw	a4,-24(s0)
20406668:	47a5                	li	a5,9
2040666a:	00f71463          	bne	a4,a5,20406672 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:543
		return 16;
2040666e:	47c1                	li	a5,16
20406670:	a045                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20406672:	fec42703          	lw	a4,-20(s0)
20406676:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
2040667a:	00f71963          	bne	a4,a5,2040668c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
2040667e:	fe842703          	lw	a4,-24(s0)
20406682:	47a9                	li	a5,10
20406684:	00f71463          	bne	a4,a5,2040668c <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:546
		return 17;
20406688:	47c5                	li	a5,17
2040668a:	a059                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2040668c:	fec42703          	lw	a4,-20(s0)
20406690:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406694:	00f71963          	bne	a4,a5,204066a6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
20406698:	fe842703          	lw	a4,-24(s0)
2040669c:	47ad                	li	a5,11
2040669e:	00f71463          	bne	a4,a5,204066a6 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:549
		return 18;
204066a2:	47c9                	li	a5,18
204066a4:	a0b5                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
204066a6:	fec42703          	lw	a4,-20(s0)
204066aa:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204066ae:	00f71963          	bne	a4,a5,204066c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
204066b2:	fe842703          	lw	a4,-24(s0)
204066b6:	47b1                	li	a5,12
204066b8:	00f71463          	bne	a4,a5,204066c0 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:552
		return 19;
204066bc:	47cd                	li	a5,19
204066be:	a889                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
204066c0:	fec42703          	lw	a4,-20(s0)
204066c4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204066c8:	00f71963          	bne	a4,a5,204066da <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
204066cc:	fe842703          	lw	a4,-24(s0)
204066d0:	47b5                	li	a5,13
204066d2:	00f71463          	bne	a4,a5,204066da <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:555
		return 20;
204066d6:	47d1                	li	a5,20
204066d8:	a825                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
204066da:	fec42703          	lw	a4,-20(s0)
204066de:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204066e2:	00f71963          	bne	a4,a5,204066f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
204066e6:	fe842703          	lw	a4,-24(s0)
204066ea:	47b9                	li	a5,14
204066ec:	00f71463          	bne	a4,a5,204066f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:558
		return 21;
204066f0:	47d5                	li	a5,21
204066f2:	a839                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
204066f4:	fec42703          	lw	a4,-20(s0)
204066f8:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
204066fc:	00f71963          	bne	a4,a5,2040670e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
20406700:	fe842703          	lw	a4,-24(s0)
20406704:	47bd                	li	a5,15
20406706:	00f71463          	bne	a4,a5,2040670e <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:561
		return 22;
2040670a:	47d9                	li	a5,22
2040670c:	a011                	j	20406710 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:564
		return 0;
2040670e:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:566
}
20406710:	853e                	mv	a0,a5
20406712:	4472                	lw	s0,28(sp)
20406714:	6105                	addi	sp,sp,32
20406716:	8082                	ret

20406718 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20406718:	7179                	addi	sp,sp,-48
2040671a:	d606                	sw	ra,44(sp)
2040671c:	d422                	sw	s0,40(sp)
2040671e:	1800                	addi	s0,sp,48
20406720:	fca42e23          	sw	a0,-36(s0)
20406724:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406728:	fdc42503          	lw	a0,-36(s0)
2040672c:	de9ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
20406730:	87aa                	mv	a5,a0
20406732:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20406736:	fec42783          	lw	a5,-20(s0)
2040673a:	0791                	addi	a5,a5,4
2040673c:	4398                	lw	a4,0(a5)
2040673e:	fd842783          	lw	a5,-40(s0)
20406742:	fec42683          	lw	a3,-20(s0)
20406746:	0691                	addi	a3,a3,4
20406748:	8fd9                	or	a5,a5,a4
2040674a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
2040674c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:20
}
2040674e:	853e                	mv	a0,a5
20406750:	50b2                	lw	ra,44(sp)
20406752:	5422                	lw	s0,40(sp)
20406754:	6145                	addi	sp,sp,48
20406756:	8082                	ret

20406758 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20406758:	7179                	addi	sp,sp,-48
2040675a:	d606                	sw	ra,44(sp)
2040675c:	d422                	sw	s0,40(sp)
2040675e:	1800                	addi	s0,sp,48
20406760:	fca42e23          	sw	a0,-36(s0)
20406764:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406768:	fdc42503          	lw	a0,-36(s0)
2040676c:	da9ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
20406770:	87aa                	mv	a5,a0
20406772:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20406776:	fec42783          	lw	a5,-20(s0)
2040677a:	0791                	addi	a5,a5,4
2040677c:	439c                	lw	a5,0(a5)
2040677e:	fd842703          	lw	a4,-40(s0)
20406782:	fff74713          	not	a4,a4
20406786:	86ba                	mv	a3,a4
20406788:	fec42703          	lw	a4,-20(s0)
2040678c:	0711                	addi	a4,a4,4
2040678e:	8ff5                	and	a5,a5,a3
20406790:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20406792:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20406794:	853e                	mv	a0,a5
20406796:	50b2                	lw	ra,44(sp)
20406798:	5422                	lw	s0,40(sp)
2040679a:	6145                	addi	sp,sp,48
2040679c:	8082                	ret

2040679e <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
2040679e:	7179                	addi	sp,sp,-48
204067a0:	d606                	sw	ra,44(sp)
204067a2:	d422                	sw	s0,40(sp)
204067a4:	1800                	addi	s0,sp,48
204067a6:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204067aa:	fdc42503          	lw	a0,-36(s0)
204067ae:	d67ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
204067b2:	87aa                	mv	a5,a0
204067b4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
204067b8:	fec42783          	lw	a5,-20(s0)
204067bc:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
204067be:	853e                	mv	a0,a5
204067c0:	50b2                	lw	ra,44(sp)
204067c2:	5422                	lw	s0,40(sp)
204067c4:	6145                	addi	sp,sp,48
204067c6:	8082                	ret

204067c8 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
204067c8:	7179                	addi	sp,sp,-48
204067ca:	d606                	sw	ra,44(sp)
204067cc:	d422                	sw	s0,40(sp)
204067ce:	1800                	addi	s0,sp,48
204067d0:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204067d4:	fdc42503          	lw	a0,-36(s0)
204067d8:	d3dff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
204067dc:	87aa                	mv	a5,a0
204067de:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
204067e2:	fec42783          	lw	a5,-20(s0)
204067e6:	07b1                	addi	a5,a5,12
204067e8:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
204067ea:	853e                	mv	a0,a5
204067ec:	50b2                	lw	ra,44(sp)
204067ee:	5422                	lw	s0,40(sp)
204067f0:	6145                	addi	sp,sp,48
204067f2:	8082                	ret

204067f4 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
204067f4:	7179                	addi	sp,sp,-48
204067f6:	d606                	sw	ra,44(sp)
204067f8:	d422                	sw	s0,40(sp)
204067fa:	1800                	addi	s0,sp,48
204067fc:	fca42e23          	sw	a0,-36(s0)
20406800:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406804:	fdc42503          	lw	a0,-36(s0)
20406808:	d0dff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
2040680c:	87aa                	mv	a5,a0
2040680e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20406812:	fec42783          	lw	a5,-20(s0)
20406816:	07a1                	addi	a5,a5,8
20406818:	439c                	lw	a5,0(a5)
2040681a:	fd842703          	lw	a4,-40(s0)
2040681e:	fff74713          	not	a4,a4
20406822:	86ba                	mv	a3,a4
20406824:	fec42703          	lw	a4,-20(s0)
20406828:	0721                	addi	a4,a4,8
2040682a:	8ff5                	and	a5,a5,a3
2040682c:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
2040682e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406830:	853e                	mv	a0,a5
20406832:	50b2                	lw	ra,44(sp)
20406834:	5422                	lw	s0,40(sp)
20406836:	6145                	addi	sp,sp,48
20406838:	8082                	ret

2040683a <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2040683a:	7179                	addi	sp,sp,-48
2040683c:	d606                	sw	ra,44(sp)
2040683e:	d422                	sw	s0,40(sp)
20406840:	1800                	addi	s0,sp,48
20406842:	fca42e23          	sw	a0,-36(s0)
20406846:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040684a:	fdc42503          	lw	a0,-36(s0)
2040684e:	cc7ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
20406852:	87aa                	mv	a5,a0
20406854:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20406858:	fec42783          	lw	a5,-20(s0)
2040685c:	07a1                	addi	a5,a5,8
2040685e:	4398                	lw	a4,0(a5)
20406860:	fd842783          	lw	a5,-40(s0)
20406864:	fec42683          	lw	a3,-20(s0)
20406868:	06a1                	addi	a3,a3,8
2040686a:	8fd9                	or	a5,a5,a4
2040686c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
2040686e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:64
}
20406870:	853e                	mv	a0,a5
20406872:	50b2                	lw	ra,44(sp)
20406874:	5422                	lw	s0,40(sp)
20406876:	6145                	addi	sp,sp,48
20406878:	8082                	ret

2040687a <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
2040687a:	7179                	addi	sp,sp,-48
2040687c:	d606                	sw	ra,44(sp)
2040687e:	d422                	sw	s0,40(sp)
20406880:	1800                	addi	s0,sp,48
20406882:	fca42e23          	sw	a0,-36(s0)
20406886:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040688a:	fdc42503          	lw	a0,-36(s0)
2040688e:	c87ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
20406892:	87aa                	mv	a5,a0
20406894:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
20406898:	fec42783          	lw	a5,-20(s0)
2040689c:	07b1                	addi	a5,a5,12
2040689e:	4398                	lw	a4,0(a5)
204068a0:	fd842783          	lw	a5,-40(s0)
204068a4:	fec42683          	lw	a3,-20(s0)
204068a8:	06b1                	addi	a3,a3,12
204068aa:	8fd9                	or	a5,a5,a4
204068ac:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
204068ae:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:74
}
204068b0:	853e                	mv	a0,a5
204068b2:	50b2                	lw	ra,44(sp)
204068b4:	5422                	lw	s0,40(sp)
204068b6:	6145                	addi	sp,sp,48
204068b8:	8082                	ret

204068ba <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
204068ba:	7179                	addi	sp,sp,-48
204068bc:	d606                	sw	ra,44(sp)
204068be:	d422                	sw	s0,40(sp)
204068c0:	1800                	addi	s0,sp,48
204068c2:	fca42e23          	sw	a0,-36(s0)
204068c6:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204068ca:	fdc42503          	lw	a0,-36(s0)
204068ce:	c47ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
204068d2:	87aa                	mv	a5,a0
204068d4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204068d8:	fec42783          	lw	a5,-20(s0)
204068dc:	07b1                	addi	a5,a5,12
204068de:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
204068e0:	fd842703          	lw	a4,-40(s0)
204068e4:	fff74713          	not	a4,a4
204068e8:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
204068ea:	fec42703          	lw	a4,-20(s0)
204068ee:	0731                	addi	a4,a4,12
204068f0:	8ff5                	and	a5,a5,a3
204068f2:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
204068f4:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:84
}
204068f6:	853e                	mv	a0,a5
204068f8:	50b2                	lw	ra,44(sp)
204068fa:	5422                	lw	s0,40(sp)
204068fc:	6145                	addi	sp,sp,48
204068fe:	8082                	ret

20406900 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406900:	7179                	addi	sp,sp,-48
20406902:	d606                	sw	ra,44(sp)
20406904:	d422                	sw	s0,40(sp)
20406906:	1800                	addi	s0,sp,48
20406908:	fca42e23          	sw	a0,-36(s0)
2040690c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406910:	fdc42503          	lw	a0,-36(s0)
20406914:	c01ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
20406918:	87aa                	mv	a5,a0
2040691a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
2040691e:	fec42783          	lw	a5,-20(s0)
20406922:	07b1                	addi	a5,a5,12
20406924:	4398                	lw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406926:	fd842783          	lw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040692a:	fec42683          	lw	a3,-20(s0)
2040692e:	06b1                	addi	a3,a3,12
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406930:	8fb9                	xor	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406932:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20406934:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20406936:	853e                	mv	a0,a5
20406938:	50b2                	lw	ra,44(sp)
2040693a:	5422                	lw	s0,40(sp)
2040693c:	6145                	addi	sp,sp,48
2040693e:	8082                	ret

20406940 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20406940:	7179                	addi	sp,sp,-48
20406942:	d606                	sw	ra,44(sp)
20406944:	d422                	sw	s0,40(sp)
20406946:	1800                	addi	s0,sp,48
20406948:	fca42e23          	sw	a0,-36(s0)
2040694c:	fcb42c23          	sw	a1,-40(s0)
20406950:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406954:	fdc42503          	lw	a0,-36(s0)
20406958:	bbdff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
2040695c:	87aa                	mv	a5,a0
2040695e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20406962:	fec42783          	lw	a5,-20(s0)
20406966:	03c78793          	addi	a5,a5,60
2040696a:	4398                	lw	a4,0(a5)
2040696c:	fd842783          	lw	a5,-40(s0)
20406970:	fec42683          	lw	a3,-20(s0)
20406974:	03c68693          	addi	a3,a3,60
20406978:	8fd9                	or	a5,a5,a4
2040697a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
2040697c:	fec42783          	lw	a5,-20(s0)
20406980:	03878793          	addi	a5,a5,56
20406984:	4398                	lw	a4,0(a5)
20406986:	fd442783          	lw	a5,-44(s0)
2040698a:	fec42683          	lw	a3,-20(s0)
2040698e:	03868693          	addi	a3,a3,56
20406992:	8fd9                	or	a5,a5,a4
20406994:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20406996:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20406998:	853e                	mv	a0,a5
2040699a:	50b2                	lw	ra,44(sp)
2040699c:	5422                	lw	s0,40(sp)
2040699e:	6145                	addi	sp,sp,48
204069a0:	8082                	ret

204069a2 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
204069a2:	7179                	addi	sp,sp,-48
204069a4:	d606                	sw	ra,44(sp)
204069a6:	d422                	sw	s0,40(sp)
204069a8:	1800                	addi	s0,sp,48
204069aa:	fca42e23          	sw	a0,-36(s0)
204069ae:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204069b2:	fdc42503          	lw	a0,-36(s0)
204069b6:	b5fff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
204069ba:	87aa                	mv	a5,a0
204069bc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
204069c0:	fec42783          	lw	a5,-20(s0)
204069c4:	03878793          	addi	a5,a5,56
204069c8:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
204069ca:	fd842703          	lw	a4,-40(s0)
204069ce:	fff74713          	not	a4,a4
204069d2:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
204069d4:	fec42703          	lw	a4,-20(s0)
204069d8:	03870713          	addi	a4,a4,56
204069dc:	8ff5                	and	a5,a5,a3
204069de:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
204069e0:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:118
}
204069e2:	853e                	mv	a0,a5
204069e4:	50b2                	lw	ra,44(sp)
204069e6:	5422                	lw	s0,40(sp)
204069e8:	6145                	addi	sp,sp,48
204069ea:	8082                	ret

204069ec <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
204069ec:	7179                	addi	sp,sp,-48
204069ee:	d606                	sw	ra,44(sp)
204069f0:	d422                	sw	s0,40(sp)
204069f2:	1800                	addi	s0,sp,48
204069f4:	fca42e23          	sw	a0,-36(s0)
204069f8:	fcb42c23          	sw	a1,-40(s0)
204069fc:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406a00:	fdc42503          	lw	a0,-36(s0)
20406a04:	b11ff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
20406a08:	87aa                	mv	a5,a0
20406a0a:	fef42623          	sw	a5,-20(s0)
20406a0e:	fd442703          	lw	a4,-44(s0)
20406a12:	479d                	li	a5,7
20406a14:	1ce7e963          	bltu	a5,a4,20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20406a18:	fd442783          	lw	a5,-44(s0)
20406a1c:	00279713          	slli	a4,a5,0x2
20406a20:	204017b7          	lui	a5,0x20401
20406a24:	f6478793          	addi	a5,a5,-156 # 20400f64 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20406a28:	97ba                	add	a5,a5,a4
20406a2a:	439c                	lw	a5,0(a5)
20406a2c:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406a2e:	fec42783          	lw	a5,-20(s0)
20406a32:	07e1                	addi	a5,a5,24
20406a34:	439c                	lw	a5,0(a5)
20406a36:	fd842703          	lw	a4,-40(s0)
20406a3a:	fff74713          	not	a4,a4
20406a3e:	86ba                	mv	a3,a4
20406a40:	fec42703          	lw	a4,-20(s0)
20406a44:	0761                	addi	a4,a4,24
20406a46:	8ff5                	and	a5,a5,a3
20406a48:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20406a4a:	fec42783          	lw	a5,-20(s0)
20406a4e:	02078793          	addi	a5,a5,32
20406a52:	439c                	lw	a5,0(a5)
20406a54:	fd842703          	lw	a4,-40(s0)
20406a58:	fff74713          	not	a4,a4
20406a5c:	86ba                	mv	a3,a4
20406a5e:	fec42703          	lw	a4,-20(s0)
20406a62:	02070713          	addi	a4,a4,32
20406a66:	8ff5                	and	a5,a5,a3
20406a68:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20406a6a:	fec42783          	lw	a5,-20(s0)
20406a6e:	02878793          	addi	a5,a5,40
20406a72:	439c                	lw	a5,0(a5)
20406a74:	fd842703          	lw	a4,-40(s0)
20406a78:	fff74713          	not	a4,a4
20406a7c:	86ba                	mv	a3,a4
20406a7e:	fec42703          	lw	a4,-20(s0)
20406a82:	02870713          	addi	a4,a4,40
20406a86:	8ff5                	and	a5,a5,a3
20406a88:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20406a8a:	fec42783          	lw	a5,-20(s0)
20406a8e:	03078793          	addi	a5,a5,48
20406a92:	439c                	lw	a5,0(a5)
20406a94:	fd842703          	lw	a4,-40(s0)
20406a98:	fff74713          	not	a4,a4
20406a9c:	86ba                	mv	a3,a4
20406a9e:	fec42703          	lw	a4,-20(s0)
20406aa2:	03070713          	addi	a4,a4,48
20406aa6:	8ff5                	and	a5,a5,a3
20406aa8:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20406aaa:	aa35                	j	20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406aac:	fec42783          	lw	a5,-20(s0)
20406ab0:	07e1                	addi	a5,a5,24
20406ab2:	4398                	lw	a4,0(a5)
20406ab4:	fd842783          	lw	a5,-40(s0)
20406ab8:	fec42683          	lw	a3,-20(s0)
20406abc:	06e1                	addi	a3,a3,24
20406abe:	8fd9                	or	a5,a5,a4
20406ac0:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20406ac2:	a215                	j	20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406ac4:	fec42783          	lw	a5,-20(s0)
20406ac8:	02078793          	addi	a5,a5,32
20406acc:	4398                	lw	a4,0(a5)
20406ace:	fd842783          	lw	a5,-40(s0)
20406ad2:	fec42683          	lw	a3,-20(s0)
20406ad6:	02068693          	addi	a3,a3,32
20406ada:	8fd9                	or	a5,a5,a4
20406adc:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20406ade:	a221                	j	20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406ae0:	fec42783          	lw	a5,-20(s0)
20406ae4:	07e1                	addi	a5,a5,24
20406ae6:	4398                	lw	a4,0(a5)
20406ae8:	fd842783          	lw	a5,-40(s0)
20406aec:	fec42683          	lw	a3,-20(s0)
20406af0:	06e1                	addi	a3,a3,24
20406af2:	8fd9                	or	a5,a5,a4
20406af4:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406af6:	fec42783          	lw	a5,-20(s0)
20406afa:	02078793          	addi	a5,a5,32
20406afe:	4398                	lw	a4,0(a5)
20406b00:	fd842783          	lw	a5,-40(s0)
20406b04:	fec42683          	lw	a3,-20(s0)
20406b08:	02068693          	addi	a3,a3,32
20406b0c:	8fd9                	or	a5,a5,a4
20406b0e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20406b10:	a8d9                	j	20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406b12:	fec42783          	lw	a5,-20(s0)
20406b16:	02878793          	addi	a5,a5,40
20406b1a:	4398                	lw	a4,0(a5)
20406b1c:	fd842783          	lw	a5,-40(s0)
20406b20:	fec42683          	lw	a3,-20(s0)
20406b24:	02868693          	addi	a3,a3,40
20406b28:	8fd9                	or	a5,a5,a4
20406b2a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406b2c:	a86d                	j	20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406b2e:	fec42783          	lw	a5,-20(s0)
20406b32:	03078793          	addi	a5,a5,48
20406b36:	4398                	lw	a4,0(a5)
20406b38:	fd842783          	lw	a5,-40(s0)
20406b3c:	fec42683          	lw	a3,-20(s0)
20406b40:	03068693          	addi	a3,a3,48
20406b44:	8fd9                	or	a5,a5,a4
20406b46:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20406b48:	a879                	j	20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406b4a:	fec42783          	lw	a5,-20(s0)
20406b4e:	02878793          	addi	a5,a5,40
20406b52:	4398                	lw	a4,0(a5)
20406b54:	fd842783          	lw	a5,-40(s0)
20406b58:	fec42683          	lw	a3,-20(s0)
20406b5c:	02868693          	addi	a3,a3,40
20406b60:	8fd9                	or	a5,a5,a4
20406b62:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406b64:	fec42783          	lw	a5,-20(s0)
20406b68:	03078793          	addi	a5,a5,48
20406b6c:	4398                	lw	a4,0(a5)
20406b6e:	fd842783          	lw	a5,-40(s0)
20406b72:	fec42683          	lw	a3,-20(s0)
20406b76:	03068693          	addi	a3,a3,48
20406b7a:	8fd9                	or	a5,a5,a4
20406b7c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20406b7e:	a0a5                	j	20406be6 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406b80:	fec42783          	lw	a5,-20(s0)
20406b84:	07e1                	addi	a5,a5,24
20406b86:	4398                	lw	a4,0(a5)
20406b88:	fd842783          	lw	a5,-40(s0)
20406b8c:	fec42683          	lw	a3,-20(s0)
20406b90:	06e1                	addi	a3,a3,24
20406b92:	8fd9                	or	a5,a5,a4
20406b94:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406b96:	fec42783          	lw	a5,-20(s0)
20406b9a:	02078793          	addi	a5,a5,32
20406b9e:	4398                	lw	a4,0(a5)
20406ba0:	fd842783          	lw	a5,-40(s0)
20406ba4:	fec42683          	lw	a3,-20(s0)
20406ba8:	02068693          	addi	a3,a3,32
20406bac:	8fd9                	or	a5,a5,a4
20406bae:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406bb0:	fec42783          	lw	a5,-20(s0)
20406bb4:	02878793          	addi	a5,a5,40
20406bb8:	4398                	lw	a4,0(a5)
20406bba:	fd842783          	lw	a5,-40(s0)
20406bbe:	fec42683          	lw	a3,-20(s0)
20406bc2:	02868693          	addi	a3,a3,40
20406bc6:	8fd9                	or	a5,a5,a4
20406bc8:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406bca:	fec42783          	lw	a5,-20(s0)
20406bce:	03078793          	addi	a5,a5,48
20406bd2:	4398                	lw	a4,0(a5)
20406bd4:	fd842783          	lw	a5,-40(s0)
20406bd8:	fec42683          	lw	a3,-20(s0)
20406bdc:	03068693          	addi	a3,a3,48
20406be0:	8fd9                	or	a5,a5,a4
20406be2:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20406be4:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20406be6:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20406be8:	853e                	mv	a0,a5
20406bea:	50b2                	lw	ra,44(sp)
20406bec:	5422                	lw	s0,40(sp)
20406bee:	6145                	addi	sp,sp,48
20406bf0:	8082                	ret

20406bf2 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20406bf2:	7179                	addi	sp,sp,-48
20406bf4:	d606                	sw	ra,44(sp)
20406bf6:	d422                	sw	s0,40(sp)
20406bf8:	1800                	addi	s0,sp,48
20406bfa:	fca42e23          	sw	a0,-36(s0)
20406bfe:	fcb42c23          	sw	a1,-40(s0)
20406c02:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406c06:	fdc42503          	lw	a0,-36(s0)
20406c0a:	90bff0ef          	jal	ra,20406514 <__metal_driver_sifive_gpio0_base>
20406c0e:	87aa                	mv	a5,a0
20406c10:	fef42623          	sw	a5,-20(s0)
20406c14:	fd442703          	lw	a4,-44(s0)
20406c18:	479d                	li	a5,7
20406c1a:	14e7ea63          	bltu	a5,a4,20406d6e <__metal_driver_sifive_gpio0_clear_int+0x17c>
20406c1e:	fd442783          	lw	a5,-44(s0)
20406c22:	00279713          	slli	a4,a5,0x2
20406c26:	204017b7          	lui	a5,0x20401
20406c2a:	f8478793          	addi	a5,a5,-124 # 20400f84 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20406c2e:	97ba                	add	a5,a5,a4
20406c30:	439c                	lw	a5,0(a5)
20406c32:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406c34:	fec42783          	lw	a5,-20(s0)
20406c38:	07f1                	addi	a5,a5,28
20406c3a:	4398                	lw	a4,0(a5)
20406c3c:	fd842783          	lw	a5,-40(s0)
20406c40:	fec42683          	lw	a3,-20(s0)
20406c44:	06f1                	addi	a3,a3,28
20406c46:	8fd9                	or	a5,a5,a4
20406c48:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20406c4a:	a215                	j	20406d6e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406c4c:	fec42783          	lw	a5,-20(s0)
20406c50:	02478793          	addi	a5,a5,36
20406c54:	4398                	lw	a4,0(a5)
20406c56:	fd842783          	lw	a5,-40(s0)
20406c5a:	fec42683          	lw	a3,-20(s0)
20406c5e:	02468693          	addi	a3,a3,36
20406c62:	8fd9                	or	a5,a5,a4
20406c64:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20406c66:	a221                	j	20406d6e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406c68:	fec42783          	lw	a5,-20(s0)
20406c6c:	07f1                	addi	a5,a5,28
20406c6e:	4398                	lw	a4,0(a5)
20406c70:	fd842783          	lw	a5,-40(s0)
20406c74:	fec42683          	lw	a3,-20(s0)
20406c78:	06f1                	addi	a3,a3,28
20406c7a:	8fd9                	or	a5,a5,a4
20406c7c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406c7e:	fec42783          	lw	a5,-20(s0)
20406c82:	02478793          	addi	a5,a5,36
20406c86:	4398                	lw	a4,0(a5)
20406c88:	fd842783          	lw	a5,-40(s0)
20406c8c:	fec42683          	lw	a3,-20(s0)
20406c90:	02468693          	addi	a3,a3,36
20406c94:	8fd9                	or	a5,a5,a4
20406c96:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20406c98:	a8d9                	j	20406d6e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406c9a:	fec42783          	lw	a5,-20(s0)
20406c9e:	02c78793          	addi	a5,a5,44
20406ca2:	4398                	lw	a4,0(a5)
20406ca4:	fd842783          	lw	a5,-40(s0)
20406ca8:	fec42683          	lw	a3,-20(s0)
20406cac:	02c68693          	addi	a3,a3,44
20406cb0:	8fd9                	or	a5,a5,a4
20406cb2:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20406cb4:	a86d                	j	20406d6e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406cb6:	fec42783          	lw	a5,-20(s0)
20406cba:	03478793          	addi	a5,a5,52
20406cbe:	4398                	lw	a4,0(a5)
20406cc0:	fd842783          	lw	a5,-40(s0)
20406cc4:	fec42683          	lw	a3,-20(s0)
20406cc8:	03468693          	addi	a3,a3,52
20406ccc:	8fd9                	or	a5,a5,a4
20406cce:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20406cd0:	a879                	j	20406d6e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406cd2:	fec42783          	lw	a5,-20(s0)
20406cd6:	02c78793          	addi	a5,a5,44
20406cda:	4398                	lw	a4,0(a5)
20406cdc:	fd842783          	lw	a5,-40(s0)
20406ce0:	fec42683          	lw	a3,-20(s0)
20406ce4:	02c68693          	addi	a3,a3,44
20406ce8:	8fd9                	or	a5,a5,a4
20406cea:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406cec:	fec42783          	lw	a5,-20(s0)
20406cf0:	03478793          	addi	a5,a5,52
20406cf4:	4398                	lw	a4,0(a5)
20406cf6:	fd842783          	lw	a5,-40(s0)
20406cfa:	fec42683          	lw	a3,-20(s0)
20406cfe:	03468693          	addi	a3,a3,52
20406d02:	8fd9                	or	a5,a5,a4
20406d04:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20406d06:	a0a5                	j	20406d6e <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406d08:	fec42783          	lw	a5,-20(s0)
20406d0c:	07f1                	addi	a5,a5,28
20406d0e:	4398                	lw	a4,0(a5)
20406d10:	fd842783          	lw	a5,-40(s0)
20406d14:	fec42683          	lw	a3,-20(s0)
20406d18:	06f1                	addi	a3,a3,28
20406d1a:	8fd9                	or	a5,a5,a4
20406d1c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406d1e:	fec42783          	lw	a5,-20(s0)
20406d22:	02478793          	addi	a5,a5,36
20406d26:	4398                	lw	a4,0(a5)
20406d28:	fd842783          	lw	a5,-40(s0)
20406d2c:	fec42683          	lw	a3,-20(s0)
20406d30:	02468693          	addi	a3,a3,36
20406d34:	8fd9                	or	a5,a5,a4
20406d36:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406d38:	fec42783          	lw	a5,-20(s0)
20406d3c:	02c78793          	addi	a5,a5,44
20406d40:	4398                	lw	a4,0(a5)
20406d42:	fd842783          	lw	a5,-40(s0)
20406d46:	fec42683          	lw	a3,-20(s0)
20406d4a:	02c68693          	addi	a3,a3,44
20406d4e:	8fd9                	or	a5,a5,a4
20406d50:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406d52:	fec42783          	lw	a5,-20(s0)
20406d56:	03478793          	addi	a5,a5,52
20406d5a:	4398                	lw	a4,0(a5)
20406d5c:	fd842783          	lw	a5,-40(s0)
20406d60:	fec42683          	lw	a3,-20(s0)
20406d64:	03468693          	addi	a3,a3,52
20406d68:	8fd9                	or	a5,a5,a4
20406d6a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20406d6c:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20406d6e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20406d70:	853e                	mv	a0,a5
20406d72:	50b2                	lw	ra,44(sp)
20406d74:	5422                	lw	s0,40(sp)
20406d76:	6145                	addi	sp,sp,48
20406d78:	8082                	ret

20406d7a <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20406d7a:	1101                	addi	sp,sp,-32
20406d7c:	ce06                	sw	ra,28(sp)
20406d7e:	cc22                	sw	s0,24(sp)
20406d80:	1000                	addi	s0,sp,32
20406d82:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20406d86:	fec42503          	lw	a0,-20(s0)
20406d8a:	fb0ff0ef          	jal	ra,2040653a <__metal_driver_sifive_gpio0_interrupt_parent>
20406d8e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20406d90:	853e                	mv	a0,a5
20406d92:	40f2                	lw	ra,28(sp)
20406d94:	4462                	lw	s0,24(sp)
20406d96:	6105                	addi	sp,sp,32
20406d98:	8082                	ret

20406d9a <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20406d9a:	7179                	addi	sp,sp,-48
20406d9c:	d606                	sw	ra,44(sp)
20406d9e:	d422                	sw	s0,40(sp)
20406da0:	1800                	addi	s0,sp,48
20406da2:	fca42e23          	sw	a0,-36(s0)
20406da6:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20406daa:	fd842583          	lw	a1,-40(s0)
20406dae:	fdc42503          	lw	a0,-36(s0)
20406db2:	fb2ff0ef          	jal	ra,20406564 <__metal_driver_sifive_gpio0_interrupt_lines>
20406db6:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20406dba:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20406dbe:	853e                	mv	a0,a5
20406dc0:	50b2                	lw	ra,44(sp)
20406dc2:	5422                	lw	s0,40(sp)
20406dc4:	6145                	addi	sp,sp,48
20406dc6:	8082                	ret

20406dc8 <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:863
{
20406dc8:	1101                	addi	sp,sp,-32
20406dca:	ce22                	sw	s0,28(sp)
20406dcc:	1000                	addi	s0,sp,32
20406dce:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20406dd2:	fec42703          	lw	a4,-20(s0)
20406dd6:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20406dda:	00f71563          	bne	a4,a5,20406de4 <__metal_driver_sifive_test0_base+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20406dde:	001007b7          	lui	a5,0x100
20406de2:	a011                	j	20406de6 <__metal_driver_sifive_test0_base+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:868
		return 0;
20406de4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:870
}
20406de6:	853e                	mv	a0,a5
20406de8:	4472                	lw	s0,28(sp)
20406dea:	6105                	addi	sp,sp,32
20406dec:	8082                	ret

20406dee <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406dee:	7179                	addi	sp,sp,-48
20406df0:	d606                	sw	ra,44(sp)
20406df2:	d422                	sw	s0,40(sp)
20406df4:	1800                	addi	s0,sp,48
20406df6:	fca42e23          	sw	a0,-36(s0)
20406dfa:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20406dfe:	fdc42503          	lw	a0,-36(s0)
20406e02:	37d9                	jal	20406dc8 <__metal_driver_sifive_test0_base>
20406e04:	87aa                	mv	a5,a0
20406e06:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
20406e0a:	fd842783          	lw	a5,-40(s0)
20406e0e:	01079713          	slli	a4,a5,0x10
20406e12:	fd842783          	lw	a5,-40(s0)
20406e16:	e789                	bnez	a5,20406e20 <__metal_driver_sifive_test0_exit+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
20406e18:	6795                	lui	a5,0x5
20406e1a:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20406e1e:	a021                	j	20406e26 <__metal_driver_sifive_test0_exit+0x38>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20406e20:	678d                	lui	a5,0x3
20406e22:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
20406e26:	97ba                	add	a5,a5,a4
20406e28:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406e2c:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20406e30:	fe842703          	lw	a4,-24(s0)
20406e34:	c398                	sw	a4,0(a5)
20406e36:	bfdd                	j	20406e2c <__metal_driver_sifive_test0_exit+0x3e>

20406e38 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:888
{
20406e38:	1101                	addi	sp,sp,-32
20406e3a:	ce22                	sw	s0,28(sp)
20406e3c:	1000                	addi	s0,sp,32
20406e3e:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406e42:	fec42703          	lw	a4,-20(s0)
20406e46:	800007b7          	lui	a5,0x80000
20406e4a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406e4e:	00f71563          	bne	a4,a5,20406e58 <__metal_driver_sifive_uart0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20406e52:	100137b7          	lui	a5,0x10013
20406e56:	a011                	j	20406e5a <__metal_driver_sifive_uart0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:893
		return 0;
20406e58:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:895
}
20406e5a:	853e                	mv	a0,a5
20406e5c:	4472                	lw	s0,28(sp)
20406e5e:	6105                	addi	sp,sp,32
20406e60:	8082                	ret

20406e62 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:918
{
20406e62:	1101                	addi	sp,sp,-32
20406e64:	ce22                	sw	s0,28(sp)
20406e66:	1000                	addi	s0,sp,32
20406e68:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406e6c:	fec42703          	lw	a4,-20(s0)
20406e70:	800007b7          	lui	a5,0x80000
20406e74:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406e78:	00f71763          	bne	a4,a5,20406e86 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20406e7c:	800007b7          	lui	a5,0x80000
20406e80:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffe338>
20406e84:	a011                	j	20406e88 <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:923
		return 0;
20406e86:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:925
}
20406e88:	853e                	mv	a0,a5
20406e8a:	4472                	lw	s0,28(sp)
20406e8c:	6105                	addi	sp,sp,32
20406e8e:	8082                	ret

20406e90 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:928
{
20406e90:	1101                	addi	sp,sp,-32
20406e92:	ce22                	sw	s0,28(sp)
20406e94:	1000                	addi	s0,sp,32
20406e96:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406e9a:	fec42703          	lw	a4,-20(s0)
20406e9e:	800007b7          	lui	a5,0x80000
20406ea2:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406ea6:	00f71463          	bne	a4,a5,20406eae <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:930
		return 5;
20406eaa:	4795                	li	a5,5
20406eac:	a011                	j	20406eb0 <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:933
		return 0;
20406eae:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:935
}
20406eb0:	853e                	mv	a0,a5
20406eb2:	4472                	lw	s0,28(sp)
20406eb4:	6105                	addi	sp,sp,32
20406eb6:	8082                	ret

20406eb8 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:938
{
20406eb8:	1101                	addi	sp,sp,-32
20406eba:	ce22                	sw	s0,28(sp)
20406ebc:	1000                	addi	s0,sp,32
20406ebe:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406ec2:	fec42703          	lw	a4,-20(s0)
20406ec6:	800007b7          	lui	a5,0x80000
20406eca:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406ece:	00f71763          	bne	a4,a5,20406edc <__metal_driver_sifive_uart0_clock+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20406ed2:	800007b7          	lui	a5,0x80000
20406ed6:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffe670>
20406eda:	a011                	j	20406ede <__metal_driver_sifive_uart0_clock+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:943
		return 0;
20406edc:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:945
}
20406ede:	853e                	mv	a0,a5
20406ee0:	4472                	lw	s0,28(sp)
20406ee2:	6105                	addi	sp,sp,32
20406ee4:	8082                	ret

20406ee6 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:948
{
20406ee6:	1101                	addi	sp,sp,-32
20406ee8:	ce22                	sw	s0,28(sp)
20406eea:	1000                	addi	s0,sp,32
20406eec:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406ef0:	fec42703          	lw	a4,-20(s0)
20406ef4:	800007b7          	lui	a5,0x80000
20406ef8:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406efc:	00f71563          	bne	a4,a5,20406f06 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20406f00:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406f04:	a011                	j	20406f08 <__metal_driver_sifive_uart0_pinmux+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:953
		return 0;
20406f06:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:955
}
20406f08:	853e                	mv	a0,a5
20406f0a:	4472                	lw	s0,28(sp)
20406f0c:	6105                	addi	sp,sp,32
20406f0e:	8082                	ret

20406f10 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:958
{
20406f10:	1101                	addi	sp,sp,-32
20406f12:	ce22                	sw	s0,28(sp)
20406f14:	1000                	addi	s0,sp,32
20406f16:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406f1a:	fec42703          	lw	a4,-20(s0)
20406f1e:	800007b7          	lui	a5,0x80000
20406f22:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406f26:	00f71463          	bne	a4,a5,20406f2e <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:960
		return 0;
20406f2a:	4781                	li	a5,0
20406f2c:	a011                	j	20406f30 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:963
		return 0;
20406f2e:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:965
}
20406f30:	853e                	mv	a0,a5
20406f32:	4472                	lw	s0,28(sp)
20406f34:	6105                	addi	sp,sp,32
20406f36:	8082                	ret

20406f38 <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:968
{
20406f38:	1101                	addi	sp,sp,-32
20406f3a:	ce22                	sw	s0,28(sp)
20406f3c:	1000                	addi	s0,sp,32
20406f3e:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406f42:	fec42703          	lw	a4,-20(s0)
20406f46:	800007b7          	lui	a5,0x80000
20406f4a:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffe638>
20406f4e:	00f71563          	bne	a4,a5,20406f58 <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:970
		return 196608;
20406f52:	000307b7          	lui	a5,0x30
20406f56:	a011                	j	20406f5a <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:973
		return 0;
20406f58:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:975
}
20406f5a:	853e                	mv	a0,a5
20406f5c:	4472                	lw	s0,28(sp)
20406f5e:	6105                	addi	sp,sp,32
20406f60:	8082                	ret

20406f62 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
20406f62:	1101                	addi	sp,sp,-32
20406f64:	ce06                	sw	ra,28(sp)
20406f66:	cc22                	sw	s0,24(sp)
20406f68:	1000                	addi	s0,sp,32
20406f6a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
20406f6e:	fec42503          	lw	a0,-20(s0)
20406f72:	ef1ff0ef          	jal	ra,20406e62 <__metal_driver_sifive_uart0_interrupt_parent>
20406f76:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:39
}
20406f78:	853e                	mv	a0,a5
20406f7a:	40f2                	lw	ra,28(sp)
20406f7c:	4462                	lw	s0,24(sp)
20406f7e:	6105                	addi	sp,sp,32
20406f80:	8082                	ret

20406f82 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
20406f82:	1101                	addi	sp,sp,-32
20406f84:	ce06                	sw	ra,28(sp)
20406f86:	cc22                	sw	s0,24(sp)
20406f88:	1000                	addi	s0,sp,32
20406f8a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
20406f8e:	fec42503          	lw	a0,-20(s0)
20406f92:	effff0ef          	jal	ra,20406e90 <__metal_driver_sifive_uart0_interrupt_line>
20406f96:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:43
}
20406f98:	853e                	mv	a0,a5
20406f9a:	40f2                	lw	ra,28(sp)
20406f9c:	4462                	lw	s0,24(sp)
20406f9e:	6105                	addi	sp,sp,32
20406fa0:	8082                	ret

20406fa2 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20406fa2:	7179                	addi	sp,sp,-48
20406fa4:	d606                	sw	ra,44(sp)
20406fa6:	d422                	sw	s0,40(sp)
20406fa8:	1800                	addi	s0,sp,48
20406faa:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406fae:	fdc42503          	lw	a0,-36(s0)
20406fb2:	e87ff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20406fb6:	87aa                	mv	a5,a0
20406fb8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20406fbc:	fec42783          	lw	a5,-20(s0)
20406fc0:	07c1                	addi	a5,a5,16
20406fc2:	439c                	lw	a5,0(a5)
20406fc4:	fec42703          	lw	a4,-20(s0)
20406fc8:	0741                	addi	a4,a4,16
20406fca:	0017e793          	ori	a5,a5,1
20406fce:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20406fd0:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:50
}
20406fd2:	853e                	mv	a0,a5
20406fd4:	50b2                	lw	ra,44(sp)
20406fd6:	5422                	lw	s0,40(sp)
20406fd8:	6145                	addi	sp,sp,48
20406fda:	8082                	ret

20406fdc <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20406fdc:	7179                	addi	sp,sp,-48
20406fde:	d606                	sw	ra,44(sp)
20406fe0:	d422                	sw	s0,40(sp)
20406fe2:	1800                	addi	s0,sp,48
20406fe4:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406fe8:	fdc42503          	lw	a0,-36(s0)
20406fec:	e4dff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20406ff0:	87aa                	mv	a5,a0
20406ff2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20406ff6:	fec42783          	lw	a5,-20(s0)
20406ffa:	07c1                	addi	a5,a5,16
20406ffc:	439c                	lw	a5,0(a5)
20406ffe:	fec42703          	lw	a4,-20(s0)
20407002:	0741                	addi	a4,a4,16
20407004:	9bf9                	andi	a5,a5,-2
20407006:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20407008:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:57
}
2040700a:	853e                	mv	a0,a5
2040700c:	50b2                	lw	ra,44(sp)
2040700e:	5422                	lw	s0,40(sp)
20407010:	6145                	addi	sp,sp,48
20407012:	8082                	ret

20407014 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20407014:	7179                	addi	sp,sp,-48
20407016:	d606                	sw	ra,44(sp)
20407018:	d422                	sw	s0,40(sp)
2040701a:	1800                	addi	s0,sp,48
2040701c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407020:	fdc42503          	lw	a0,-36(s0)
20407024:	e15ff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20407028:	87aa                	mv	a5,a0
2040702a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
2040702e:	fec42783          	lw	a5,-20(s0)
20407032:	07c1                	addi	a5,a5,16
20407034:	439c                	lw	a5,0(a5)
20407036:	fec42703          	lw	a4,-20(s0)
2040703a:	0741                	addi	a4,a4,16
2040703c:	0027e793          	ori	a5,a5,2
20407040:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
20407042:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:64
}
20407044:	853e                	mv	a0,a5
20407046:	50b2                	lw	ra,44(sp)
20407048:	5422                	lw	s0,40(sp)
2040704a:	6145                	addi	sp,sp,48
2040704c:	8082                	ret

2040704e <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
2040704e:	7179                	addi	sp,sp,-48
20407050:	d606                	sw	ra,44(sp)
20407052:	d422                	sw	s0,40(sp)
20407054:	1800                	addi	s0,sp,48
20407056:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040705a:	fdc42503          	lw	a0,-36(s0)
2040705e:	ddbff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20407062:	87aa                	mv	a5,a0
20407064:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
20407068:	fec42783          	lw	a5,-20(s0)
2040706c:	07c1                	addi	a5,a5,16
2040706e:	439c                	lw	a5,0(a5)
20407070:	fec42703          	lw	a4,-20(s0)
20407074:	0741                	addi	a4,a4,16
20407076:	9bf5                	andi	a5,a5,-3
20407078:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
2040707a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:71
}
2040707c:	853e                	mv	a0,a5
2040707e:	50b2                	lw	ra,44(sp)
20407080:	5422                	lw	s0,40(sp)
20407082:	6145                	addi	sp,sp,48
20407084:	8082                	ret

20407086 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
20407086:	7179                	addi	sp,sp,-48
20407088:	d606                	sw	ra,44(sp)
2040708a:	d422                	sw	s0,40(sp)
2040708c:	1800                	addi	s0,sp,48
2040708e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407092:	fdc42503          	lw	a0,-36(s0)
20407096:	da3ff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
2040709a:	87aa                	mv	a5,a0
2040709c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
204070a0:	fec42783          	lw	a5,-20(s0)
204070a4:	439c                	lw	a5,0(a5)
204070a6:	83fd                	srli	a5,a5,0x1f
204070a8:	0ff7f793          	zext.b	a5,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:77
}
204070ac:	853e                	mv	a0,a5
204070ae:	50b2                	lw	ra,44(sp)
204070b0:	5422                	lw	s0,40(sp)
204070b2:	6145                	addi	sp,sp,48
204070b4:	8082                	ret

204070b6 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
204070b6:	7179                	addi	sp,sp,-48
204070b8:	d606                	sw	ra,44(sp)
204070ba:	d422                	sw	s0,40(sp)
204070bc:	1800                	addi	s0,sp,48
204070be:	fca42e23          	sw	a0,-36(s0)
204070c2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204070c6:	fdc42503          	lw	a0,-36(s0)
204070ca:	d6fff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
204070ce:	87aa                	mv	a5,a0
204070d0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
204070d4:	fec42783          	lw	a5,-20(s0)
204070d8:	07a1                	addi	a5,a5,8
204070da:	4398                	lw	a4,0(a5)
204070dc:	fd842783          	lw	a5,-40(s0)
204070e0:	01079693          	slli	a3,a5,0x10
204070e4:	000707b7          	lui	a5,0x70
204070e8:	8ff5                	and	a5,a5,a3
204070ea:	fec42683          	lw	a3,-20(s0)
204070ee:	06a1                	addi	a3,a3,8
204070f0:	8fd9                	or	a5,a5,a4
204070f2:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
204070f4:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:85
}
204070f6:	853e                	mv	a0,a5
204070f8:	50b2                	lw	ra,44(sp)
204070fa:	5422                	lw	s0,40(sp)
204070fc:	6145                	addi	sp,sp,48
204070fe:	8082                	ret

20407100 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20407100:	7179                	addi	sp,sp,-48
20407102:	d606                	sw	ra,44(sp)
20407104:	d422                	sw	s0,40(sp)
20407106:	1800                	addi	s0,sp,48
20407108:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040710c:	fdc42503          	lw	a0,-36(s0)
20407110:	d29ff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20407114:	87aa                	mv	a5,a0
20407116:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2040711a:	fec42783          	lw	a5,-20(s0)
2040711e:	07a1                	addi	a5,a5,8
20407120:	439c                	lw	a5,0(a5)
20407122:	83c1                	srli	a5,a5,0x10
20407124:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:91
}
20407126:	853e                	mv	a0,a5
20407128:	50b2                	lw	ra,44(sp)
2040712a:	5422                	lw	s0,40(sp)
2040712c:	6145                	addi	sp,sp,48
2040712e:	8082                	ret

20407130 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20407130:	7179                	addi	sp,sp,-48
20407132:	d606                	sw	ra,44(sp)
20407134:	d422                	sw	s0,40(sp)
20407136:	1800                	addi	s0,sp,48
20407138:	fca42e23          	sw	a0,-36(s0)
2040713c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407140:	fdc42503          	lw	a0,-36(s0)
20407144:	cf5ff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20407148:	87aa                	mv	a5,a0
2040714a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
2040714e:	fec42783          	lw	a5,-20(s0)
20407152:	07b1                	addi	a5,a5,12
20407154:	4398                	lw	a4,0(a5)
20407156:	fd842783          	lw	a5,-40(s0)
2040715a:	01079693          	slli	a3,a5,0x10
2040715e:	000707b7          	lui	a5,0x70
20407162:	8ff5                	and	a5,a5,a3
20407164:	fec42683          	lw	a3,-20(s0)
20407168:	06b1                	addi	a3,a3,12
2040716a:	8fd9                	or	a5,a5,a4
2040716c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
2040716e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:99
}
20407170:	853e                	mv	a0,a5
20407172:	50b2                	lw	ra,44(sp)
20407174:	5422                	lw	s0,40(sp)
20407176:	6145                	addi	sp,sp,48
20407178:	8082                	ret

2040717a <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
2040717a:	7179                	addi	sp,sp,-48
2040717c:	d606                	sw	ra,44(sp)
2040717e:	d422                	sw	s0,40(sp)
20407180:	1800                	addi	s0,sp,48
20407182:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20407186:	fdc42503          	lw	a0,-36(s0)
2040718a:	cafff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
2040718e:	87aa                	mv	a5,a0
20407190:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
20407194:	fec42783          	lw	a5,-20(s0)
20407198:	07b1                	addi	a5,a5,12
2040719a:	439c                	lw	a5,0(a5)
2040719c:	83c1                	srli	a5,a5,0x10
2040719e:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:105
}
204071a0:	853e                	mv	a0,a5
204071a2:	50b2                	lw	ra,44(sp)
204071a4:	5422                	lw	s0,40(sp)
204071a6:	6145                	addi	sp,sp,48
204071a8:	8082                	ret

204071aa <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
204071aa:	7179                	addi	sp,sp,-48
204071ac:	d606                	sw	ra,44(sp)
204071ae:	d422                	sw	s0,40(sp)
204071b0:	1800                	addi	s0,sp,48
204071b2:	fca42e23          	sw	a0,-36(s0)
204071b6:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204071ba:	fdc42503          	lw	a0,-36(s0)
204071be:	c7bff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
204071c2:	87aa                	mv	a5,a0
204071c4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
204071c8:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
204071ca:	fdc42503          	lw	a0,-36(s0)
204071ce:	eb9ff0ef          	jal	ra,20407086 <__metal_driver_sifive_uart0_txready>
204071d2:	87aa                	mv	a5,a0
204071d4:	fbfd                	bnez	a5,204071ca <__metal_driver_sifive_uart0_putc+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
204071d6:	fec42783          	lw	a5,-20(s0)
204071da:	fd842703          	lw	a4,-40(s0)
204071de:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
204071e0:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:115
}
204071e2:	853e                	mv	a0,a5
204071e4:	50b2                	lw	ra,44(sp)
204071e6:	5422                	lw	s0,40(sp)
204071e8:	6145                	addi	sp,sp,48
204071ea:	8082                	ret

204071ec <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
204071ec:	7179                	addi	sp,sp,-48
204071ee:	d606                	sw	ra,44(sp)
204071f0:	d422                	sw	s0,40(sp)
204071f2:	1800                	addi	s0,sp,48
204071f4:	fca42e23          	sw	a0,-36(s0)
204071f8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204071fc:	fdc42503          	lw	a0,-36(s0)
20407200:	c39ff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20407204:	87aa                	mv	a5,a0
20407206:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
2040720a:	fec42783          	lw	a5,-20(s0)
2040720e:	0791                	addi	a5,a5,4
20407210:	439c                	lw	a5,0(a5)
20407212:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20407216:	fe842783          	lw	a5,-24(s0)
2040721a:	0007d763          	bgez	a5,20407228 <__metal_driver_sifive_uart0_getc+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
2040721e:	fd842783          	lw	a5,-40(s0)
20407222:	577d                	li	a4,-1
20407224:	c398                	sw	a4,0(a5)
20407226:	a801                	j	20407236 <__metal_driver_sifive_uart0_getc+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20407228:	fe842783          	lw	a5,-24(s0)
2040722c:	0ff7f713          	zext.b	a4,a5
20407230:	fd842783          	lw	a5,-40(s0)
20407234:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20407236:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:129
}
20407238:	853e                	mv	a0,a5
2040723a:	50b2                	lw	ra,44(sp)
2040723c:	5422                	lw	s0,40(sp)
2040723e:	6145                	addi	sp,sp,48
20407240:	8082                	ret

20407242 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20407242:	7179                	addi	sp,sp,-48
20407244:	d622                	sw	s0,44(sp)
20407246:	1800                	addi	s0,sp,48
20407248:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
2040724c:	fdc42783          	lw	a5,-36(s0)
20407250:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20407254:	fec42783          	lw	a5,-20(s0)
20407258:	43dc                	lw	a5,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:134
}
2040725a:	853e                	mv	a0,a5
2040725c:	5432                	lw	s0,44(sp)
2040725e:	6145                	addi	sp,sp,48
20407260:	8082                	ret

20407262 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20407262:	7179                	addi	sp,sp,-48
20407264:	d606                	sw	ra,44(sp)
20407266:	d422                	sw	s0,40(sp)
20407268:	1800                	addi	s0,sp,48
2040726a:	fca42e23          	sw	a0,-36(s0)
2040726e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20407272:	fdc42783          	lw	a5,-36(s0)
20407276:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
2040727a:	fdc42503          	lw	a0,-36(s0)
2040727e:	bbbff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
20407282:	87aa                	mv	a5,a0
20407284:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407288:	fdc42503          	lw	a0,-36(s0)
2040728c:	c2dff0ef          	jal	ra,20406eb8 <__metal_driver_sifive_uart0_clock>
20407290:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20407294:	fd842703          	lw	a4,-40(s0)
20407298:	fec42783          	lw	a5,-20(s0)
2040729c:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
2040729e:	fe442783          	lw	a5,-28(s0)
204072a2:	cbb1                	beqz	a5,204072f6 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
204072a4:	fe442783          	lw	a5,-28(s0)
204072a8:	439c                	lw	a5,0(a5)
204072aa:	439c                	lw	a5,0(a5)
204072ac:	fe442503          	lw	a0,-28(s0)
204072b0:	9782                	jalr	a5
204072b2:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
204072b6:	fe042703          	lw	a4,-32(s0)
204072ba:	fd842783          	lw	a5,-40(s0)
204072be:	02f747b3          	div	a5,a4,a5
204072c2:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
204072c6:	fe842783          	lw	a5,-24(s0)
204072ca:	07e1                	addi	a5,a5,24
204072cc:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
204072ce:	fe842783          	lw	a5,-24(s0)
204072d2:	07a1                	addi	a5,a5,8
204072d4:	439c                	lw	a5,0(a5)
204072d6:	fe842703          	lw	a4,-24(s0)
204072da:	0721                	addi	a4,a4,8
204072dc:	0017e793          	ori	a5,a5,1
204072e0:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
204072e2:	fe842783          	lw	a5,-24(s0)
204072e6:	07b1                	addi	a5,a5,12
204072e8:	439c                	lw	a5,0(a5)
204072ea:	fe842703          	lw	a4,-24(s0)
204072ee:	0731                	addi	a4,a4,12
204072f0:	0017e793          	ori	a5,a5,1
204072f4:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
204072f6:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:151
}
204072f8:	853e                	mv	a0,a5
204072fa:	50b2                	lw	ra,44(sp)
204072fc:	5422                	lw	s0,40(sp)
204072fe:	6145                	addi	sp,sp,48
20407300:	8082                	ret

20407302 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20407302:	7139                	addi	sp,sp,-64
20407304:	de06                	sw	ra,60(sp)
20407306:	dc22                	sw	s0,56(sp)
20407308:	0080                	addi	s0,sp,64
2040730a:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
2040730e:	fcc42783          	lw	a5,-52(s0)
20407312:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20407316:	fcc42503          	lw	a0,-52(s0)
2040731a:	b1fff0ef          	jal	ra,20406e38 <__metal_driver_sifive_uart0_control_base>
2040731e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20407320:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20407324:	fcc42503          	lw	a0,-52(s0)
20407328:	b91ff0ef          	jal	ra,20406eb8 <__metal_driver_sifive_uart0_clock>
2040732c:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20407330:	fe842783          	lw	a5,-24(s0)
20407334:	07a1                	addi	a5,a5,8
20407336:	4398                	lw	a4,0(a5)
20407338:	fe842783          	lw	a5,-24(s0)
2040733c:	07a1                	addi	a5,a5,8
2040733e:	86be                	mv	a3,a5
20407340:	fff907b7          	lui	a5,0xfff90
20407344:	17fd                	addi	a5,a5,-1
20407346:	8ff9                	and	a5,a5,a4
20407348:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
2040734a:	fe842783          	lw	a5,-24(s0)
2040734e:	07a1                	addi	a5,a5,8
20407350:	4398                	lw	a4,0(a5)
20407352:	fe842783          	lw	a5,-24(s0)
20407356:	07a1                	addi	a5,a5,8
20407358:	86be                	mv	a3,a5
2040735a:	67c1                	lui	a5,0x10
2040735c:	8fd9                	or	a5,a5,a4
2040735e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20407360:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20407362:	fe842783          	lw	a5,-24(s0)
20407366:	07d1                	addi	a5,a5,20
20407368:	439c                	lw	a5,0(a5)
2040736a:	8b85                	andi	a5,a5,1
2040736c:	dbfd                	beqz	a5,20407362 <pre_rate_change_callback_func+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
2040736e:	fe842783          	lw	a5,-24(s0)
20407372:	07a1                	addi	a5,a5,8
20407374:	439c                	lw	a5,0(a5)
20407376:	8b89                	andi	a5,a5,2
20407378:	c399                	beqz	a5,2040737e <pre_rate_change_callback_func+0x7c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
2040737a:	47a5                	li	a5,9
2040737c:	a011                	j	20407380 <pre_rate_change_callback_func+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
2040737e:	47a9                	li	a5,10
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20407380:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20407384:	fe442783          	lw	a5,-28(s0)
20407388:	439c                	lw	a5,0(a5)
2040738a:	439c                	lw	a5,0(a5)
2040738c:	fe442503          	lw	a0,-28(s0)
20407390:	9782                	jalr	a5
20407392:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20407396:	fe042703          	lw	a4,-32(s0)
2040739a:	fdc42783          	lw	a5,-36(s0)
2040739e:	02f707b3          	mul	a5,a4,a5
204073a2:	873e                	mv	a4,a5
204073a4:	fec42783          	lw	a5,-20(s0)
204073a8:	43dc                	lw	a5,4(a5)
204073aa:	02f757b3          	divu	a5,a4,a5
204073ae:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
204073b2:	fc042a23          	sw	zero,-44(s0)
204073b6:	a039                	j	204073c4 <pre_rate_change_callback_func+0xc2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
204073b8:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
204073ba:	fd442783          	lw	a5,-44(s0)
204073be:	0785                	addi	a5,a5,1
204073c0:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
204073c4:	fd442783          	lw	a5,-44(s0)
204073c8:	fd842703          	lw	a4,-40(s0)
204073cc:	fee7c6e3          	blt	a5,a4,204073b8 <pre_rate_change_callback_func+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:180
}
204073d0:	0001                	nop
204073d2:	0001                	nop
204073d4:	50f2                	lw	ra,60(sp)
204073d6:	5462                	lw	s0,56(sp)
204073d8:	6121                	addi	sp,sp,64
204073da:	8082                	ret

204073dc <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
204073dc:	7179                	addi	sp,sp,-48
204073de:	d606                	sw	ra,44(sp)
204073e0:	d422                	sw	s0,40(sp)
204073e2:	1800                	addi	s0,sp,48
204073e4:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
204073e8:	fdc42783          	lw	a5,-36(s0)
204073ec:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
204073f0:	fec42703          	lw	a4,-20(s0)
204073f4:	fec42783          	lw	a5,-20(s0)
204073f8:	43dc                	lw	a5,4(a5)
204073fa:	85be                	mv	a1,a5
204073fc:	853a                	mv	a0,a4
204073fe:	d35fb0ef          	jal	ra,20403132 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:185
}
20407402:	0001                	nop
20407404:	50b2                	lw	ra,44(sp)
20407406:	5422                	lw	s0,40(sp)
20407408:	6145                	addi	sp,sp,48
2040740a:	8082                	ret

2040740c <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
2040740c:	7139                	addi	sp,sp,-64
2040740e:	de06                	sw	ra,60(sp)
20407410:	dc22                	sw	s0,56(sp)
20407412:	0080                	addi	s0,sp,64
20407414:	fca42623          	sw	a0,-52(s0)
20407418:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
2040741c:	fcc42783          	lw	a5,-52(s0)
20407420:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20407424:	fcc42503          	lw	a0,-52(s0)
20407428:	a91ff0ef          	jal	ra,20406eb8 <__metal_driver_sifive_uart0_clock>
2040742c:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20407430:	fcc42503          	lw	a0,-52(s0)
20407434:	ab3ff0ef          	jal	ra,20406ee6 <__metal_driver_sifive_uart0_pinmux>
20407438:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
2040743c:	fe842783          	lw	a5,-24(s0)
20407440:	c7b9                	beqz	a5,2040748e <__metal_driver_sifive_uart0_init+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20407442:	fec42783          	lw	a5,-20(s0)
20407446:	20407737          	lui	a4,0x20407
2040744a:	30270713          	addi	a4,a4,770 # 20407302 <pre_rate_change_callback_func>
2040744e:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20407450:	fec42783          	lw	a5,-20(s0)
20407454:	fcc42703          	lw	a4,-52(s0)
20407458:	c7d8                	sw	a4,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
2040745a:	fec42783          	lw	a5,-20(s0)
2040745e:	07a1                	addi	a5,a5,8
20407460:	85be                	mv	a1,a5
20407462:	fe842503          	lw	a0,-24(s0)
20407466:	2241                	jal	204075e6 <metal_clock_register_pre_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20407468:	fec42783          	lw	a5,-20(s0)
2040746c:	20407737          	lui	a4,0x20407
20407470:	3dc70713          	addi	a4,a4,988 # 204073dc <post_rate_change_callback_func>
20407474:	cbd8                	sw	a4,20(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20407476:	fec42783          	lw	a5,-20(s0)
2040747a:	fcc42703          	lw	a4,-52(s0)
2040747e:	cf98                	sw	a4,24(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20407480:	fec42783          	lw	a5,-20(s0)
20407484:	07d1                	addi	a5,a5,20
20407486:	85be                	mv	a1,a5
20407488:	fe842503          	lw	a0,-24(s0)
2040748c:	2271                	jal	20407618 <metal_clock_register_post_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
2040748e:	fec42783          	lw	a5,-20(s0)
20407492:	fc842583          	lw	a1,-56(s0)
20407496:	853e                	mv	a0,a5
20407498:	c9bfb0ef          	jal	ra,20403132 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
2040749c:	fe442783          	lw	a5,-28(s0)
204074a0:	cb95                	beqz	a5,204074d4 <__metal_driver_sifive_uart0_init+0xc8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
204074a2:	fcc42503          	lw	a0,-52(s0)
204074a6:	a6bff0ef          	jal	ra,20406f10 <__metal_driver_sifive_uart0_pinmux_output_selector>
204074aa:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
204074ac:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
204074b0:	fcc42503          	lw	a0,-52(s0)
204074b4:	a85ff0ef          	jal	ra,20406f38 <__metal_driver_sifive_uart0_pinmux_source_selector>
204074b8:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
204074ba:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
204074be:	fe442783          	lw	a5,-28(s0)
204074c2:	439c                	lw	a5,0(a5)
204074c4:	53dc                	lw	a5,36(a5)
204074c6:	fdc42603          	lw	a2,-36(s0)
204074ca:	fe042583          	lw	a1,-32(s0)
204074ce:	fe442503          	lw	a0,-28(s0)
204074d2:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
204074d4:	0001                	nop
204074d6:	50f2                	lw	ra,60(sp)
204074d8:	5462                	lw	s0,56(sp)
204074da:	6121                	addi	sp,sp,64
204074dc:	8082                	ret

204074de <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
204074de:	7179                	addi	sp,sp,-48
204074e0:	d606                	sw	ra,44(sp)
204074e2:	d422                	sw	s0,40(sp)
204074e4:	1800                	addi	s0,sp,48
204074e6:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
204074ea:	fdc42783          	lw	a5,-36(s0)
204074ee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:52
    while (current) {
204074f2:	a831                	j	2040750e <_metal_clock_call_all_callbacks+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
204074f4:	fec42783          	lw	a5,-20(s0)
204074f8:	4398                	lw	a4,0(a5)
204074fa:	fec42783          	lw	a5,-20(s0)
204074fe:	43dc                	lw	a5,4(a5)
20407500:	853e                	mv	a0,a5
20407502:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:54
        current = current->_next;
20407504:	fec42783          	lw	a5,-20(s0)
20407508:	479c                	lw	a5,8(a5)
2040750a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:52
    while (current) {
2040750e:	fec42783          	lw	a5,-20(s0)
20407512:	f3ed                	bnez	a5,204074f4 <_metal_clock_call_all_callbacks+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:56
    }
}
20407514:	0001                	nop
20407516:	0001                	nop
20407518:	50b2                	lw	ra,44(sp)
2040751a:	5422                	lw	s0,40(sp)
2040751c:	6145                	addi	sp,sp,48
2040751e:	8082                	ret

20407520 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20407520:	7179                	addi	sp,sp,-48
20407522:	d622                	sw	s0,44(sp)
20407524:	1800                	addi	s0,sp,48
20407526:	fca42e23          	sw	a0,-36(s0)
2040752a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
2040752e:	fd842783          	lw	a5,-40(s0)
20407532:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:66

    if (!list) {
20407536:	fdc42783          	lw	a5,-36(s0)
2040753a:	e781                	bnez	a5,20407542 <_metal_clock_append_to_callbacks+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:67
        return cb;
2040753c:	fd842783          	lw	a5,-40(s0)
20407540:	a035                	j	2040756c <_metal_clock_append_to_callbacks+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20407542:	fdc42783          	lw	a5,-36(s0)
20407546:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
2040754a:	a031                	j	20407556 <_metal_clock_append_to_callbacks+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:73
        current = current->_next;
2040754c:	fec42783          	lw	a5,-20(s0)
20407550:	479c                	lw	a5,8(a5)
20407552:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20407556:	fec42783          	lw	a5,-20(s0)
2040755a:	479c                	lw	a5,8(a5)
2040755c:	fbe5                	bnez	a5,2040754c <_metal_clock_append_to_callbacks+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
2040755e:	fec42783          	lw	a5,-20(s0)
20407562:	fd842703          	lw	a4,-40(s0)
20407566:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:78

    return list;
20407568:	fdc42783          	lw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:79
}
2040756c:	853e                	mv	a0,a5
2040756e:	5432                	lw	s0,44(sp)
20407570:	6145                	addi	sp,sp,48
20407572:	8082                	ret

20407574 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20407574:	1101                	addi	sp,sp,-32
20407576:	ce06                	sw	ra,28(sp)
20407578:	cc22                	sw	s0,24(sp)
2040757a:	1000                	addi	s0,sp,32
2040757c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20407580:	fec42783          	lw	a5,-20(s0)
20407584:	439c                	lw	a5,0(a5)
20407586:	439c                	lw	a5,0(a5)
20407588:	fec42503          	lw	a0,-20(s0)
2040758c:	9782                	jalr	a5
2040758e:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:112
}
20407590:	853e                	mv	a0,a5
20407592:	40f2                	lw	ra,28(sp)
20407594:	4462                	lw	s0,24(sp)
20407596:	6105                	addi	sp,sp,32
20407598:	8082                	ret

2040759a <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
2040759a:	7179                	addi	sp,sp,-48
2040759c:	d606                	sw	ra,44(sp)
2040759e:	d422                	sw	s0,40(sp)
204075a0:	1800                	addi	s0,sp,48
204075a2:	fca42e23          	sw	a0,-36(s0)
204075a6:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
204075aa:	fdc42783          	lw	a5,-36(s0)
204075ae:	43dc                	lw	a5,4(a5)
204075b0:	853e                	mv	a0,a5
204075b2:	f2dff0ef          	jal	ra,204074de <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
204075b6:	fdc42783          	lw	a5,-36(s0)
204075ba:	439c                	lw	a5,0(a5)
204075bc:	43dc                	lw	a5,4(a5)
204075be:	fd842583          	lw	a1,-40(s0)
204075c2:	fdc42503          	lw	a0,-36(s0)
204075c6:	9782                	jalr	a5
204075c8:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
204075cc:	fdc42783          	lw	a5,-36(s0)
204075d0:	479c                	lw	a5,8(a5)
204075d2:	853e                	mv	a0,a5
204075d4:	f0bff0ef          	jal	ra,204074de <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:135

    return out;
204075d8:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:136
}
204075dc:	853e                	mv	a0,a5
204075de:	50b2                	lw	ra,44(sp)
204075e0:	5422                	lw	s0,40(sp)
204075e2:	6145                	addi	sp,sp,48
204075e4:	8082                	ret

204075e6 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
204075e6:	1101                	addi	sp,sp,-32
204075e8:	ce06                	sw	ra,28(sp)
204075ea:	cc22                	sw	s0,24(sp)
204075ec:	1000                	addi	s0,sp,32
204075ee:	fea42623          	sw	a0,-20(s0)
204075f2:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
204075f6:	fec42783          	lw	a5,-20(s0)
204075fa:	43dc                	lw	a5,4(a5)
204075fc:	fe842583          	lw	a1,-24(s0)
20407600:	853e                	mv	a0,a5
20407602:	f1fff0ef          	jal	ra,20407520 <_metal_clock_append_to_callbacks>
20407606:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20407608:	fec42783          	lw	a5,-20(s0)
2040760c:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:149
}
2040760e:	0001                	nop
20407610:	40f2                	lw	ra,28(sp)
20407612:	4462                	lw	s0,24(sp)
20407614:	6105                	addi	sp,sp,32
20407616:	8082                	ret

20407618 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20407618:	1101                	addi	sp,sp,-32
2040761a:	ce06                	sw	ra,28(sp)
2040761c:	cc22                	sw	s0,24(sp)
2040761e:	1000                	addi	s0,sp,32
20407620:	fea42623          	sw	a0,-20(s0)
20407624:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20407628:	fec42783          	lw	a5,-20(s0)
2040762c:	479c                	lw	a5,8(a5)
2040762e:	fe842583          	lw	a1,-24(s0)
20407632:	853e                	mv	a0,a5
20407634:	eedff0ef          	jal	ra,20407520 <_metal_clock_append_to_callbacks>
20407638:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
2040763a:	fec42783          	lw	a5,-20(s0)
2040763e:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/clock.h:162
}
20407640:	0001                	nop
20407642:	40f2                	lw	ra,28(sp)
20407644:	4462                	lw	s0,24(sp)
20407646:	6105                	addi	sp,sp,32
20407648:	8082                	ret

2040764a <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
2040764a:	1101                	addi	sp,sp,-32
2040764c:	ce06                	sw	ra,28(sp)
2040764e:	cc22                	sw	s0,24(sp)
20407650:	1000                	addi	s0,sp,32
20407652:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20407656:	fec42783          	lw	a5,-20(s0)
2040765a:	439c                	lw	a5,0(a5)
2040765c:	57dc                	lw	a5,44(a5)
2040765e:	fec42503          	lw	a0,-20(s0)
20407662:	9782                	jalr	a5
20407664:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/cpu.h:226
}
20407666:	853e                	mv	a0,a5
20407668:	40f2                	lw	ra,28(sp)
2040766a:	4462                	lw	s0,24(sp)
2040766c:	6105                	addi	sp,sp,32
2040766e:	8082                	ret

20407670 <metal_cpu_get>:
metal_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20407670:	1101                	addi	sp,sp,-32
20407672:	ce22                	sw	s0,28(sp)
20407674:	1000                	addi	s0,sp,32
20407676:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
2040767a:	fec42783          	lw	a5,-20(s0)
2040767e:	eb99                	bnez	a5,20407694 <metal_cpu_get+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20407680:	800007b7          	lui	a5,0x80000
20407684:	fec42703          	lw	a4,-20(s0)
20407688:	070a                	slli	a4,a4,0x2
2040768a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffe688>
2040768e:	97ba                	add	a5,a5,a4
20407690:	439c                	lw	a5,0(a5)
20407692:	a011                	j	20407696 <metal_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:11
    }
    return NULL;
20407694:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:12
}
20407696:	853e                	mv	a0,a5
20407698:	4472                	lw	s0,28(sp)
2040769a:	6105                	addi	sp,sp,32
2040769c:	8082                	ret

2040769e <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
2040769e:	1101                	addi	sp,sp,-32
204076a0:	ce22                	sw	s0,28(sp)
204076a2:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
204076a4:	f14027f3          	csrr	a5,mhartid
204076a8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:18
    return mhartid;
204076ac:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/cpu.c:20
#endif
}
204076b0:	853e                	mv	a0,a5
204076b2:	4472                	lw	s0,28(sp)
204076b4:	6105                	addi	sp,sp,32
204076b6:	8082                	ret

204076b8 <__metal_shutdown_exit>:
__metal_shutdown_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
204076b8:	1101                	addi	sp,sp,-32
204076ba:	ce06                	sw	ra,28(sp)
204076bc:	cc22                	sw	s0,24(sp)
204076be:	1000                	addi	s0,sp,32
204076c0:	fea42623          	sw	a0,-20(s0)
204076c4:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
204076c8:	fec42783          	lw	a5,-20(s0)
204076cc:	439c                	lw	a5,0(a5)
204076ce:	439c                	lw	a5,0(a5)
204076d0:	fe842583          	lw	a1,-24(s0)
204076d4:	fec42503          	lw	a0,-20(s0)
204076d8:	9782                	jalr	a5

204076da <metal_shutdown>:
metal_shutdown():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
204076da:	1101                	addi	sp,sp,-32
204076dc:	ce06                	sw	ra,28(sp)
204076de:	cc22                	sw	s0,24(sp)
204076e0:	1000                	addi	s0,sp,32
204076e2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
204076e6:	fec42583          	lw	a1,-20(s0)
204076ea:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
204076ee:	fcbff0ef          	jal	ra,204076b8 <__metal_shutdown_exit>
	...

20407700 <__metal_vector_table>:
IRQ_0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20407700:	bd2fc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407704 <IRQ_1>:
IRQ_1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20407704:	bcefc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407708 <IRQ_2>:
IRQ_2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20407708:	bcafc06f          	j	20403ad2 <metal_interrupt_vector_handler>

2040770c <IRQ_3>:
IRQ_3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2040770c:	bf4fc06f          	j	20403b00 <metal_software_interrupt_vector_handler>

20407710 <IRQ_4>:
IRQ_4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20407710:	bc2fc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407714 <IRQ_5>:
IRQ_5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20407714:	bbefc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407718 <IRQ_6>:
IRQ_6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20407718:	bbafc06f          	j	20403ad2 <metal_interrupt_vector_handler>

2040771c <IRQ_7>:
IRQ_7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2040771c:	cdefc06f          	j	20403bfa <metal_timer_interrupt_vector_handler>

20407720 <IRQ_8>:
IRQ_8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20407720:	bb2fc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407724 <IRQ_9>:
IRQ_9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20407724:	baefc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407728 <IRQ_10>:
IRQ_10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20407728:	baafc06f          	j	20403ad2 <metal_interrupt_vector_handler>

2040772c <IRQ_11>:
IRQ_11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2040772c:	ba6fc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407730 <IRQ_12>:
IRQ_12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20407730:	ba2fc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407734 <IRQ_13>:
IRQ_13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20407734:	b9efc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407738 <IRQ_14>:
IRQ_14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20407738:	b9afc06f          	j	20403ad2 <metal_interrupt_vector_handler>

2040773c <IRQ_15>:
IRQ_15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2040773c:	b96fc06f          	j	20403ad2 <metal_interrupt_vector_handler>

20407740 <IRQ_LC0>:
IRQ_LC0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20407740:	83bfc06f          	j	20403f7a <metal_lc0_interrupt_vector_handler>

20407744 <IRQ_LC1>:
IRQ_LC1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20407744:	8cdfc06f          	j	20404010 <metal_lc1_interrupt_vector_handler>

20407748 <IRQ_LC2>:
IRQ_LC2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20407748:	95ffc06f          	j	204040a6 <metal_lc2_interrupt_vector_handler>

2040774c <IRQ_LC3>:
IRQ_LC3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2040774c:	9f1fc06f          	j	2040413c <metal_lc3_interrupt_vector_handler>

20407750 <IRQ_LC4>:
IRQ_LC4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20407750:	a83fc06f          	j	204041d2 <metal_lc4_interrupt_vector_handler>

20407754 <IRQ_LC5>:
IRQ_LC5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20407754:	b15fc06f          	j	20404268 <metal_lc5_interrupt_vector_handler>

20407758 <IRQ_LC6>:
IRQ_LC6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20407758:	ba7fc06f          	j	204042fe <metal_lc6_interrupt_vector_handler>

2040775c <IRQ_LC7>:
IRQ_LC7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2040775c:	c39fc06f          	j	20404394 <metal_lc7_interrupt_vector_handler>

20407760 <IRQ_LC8>:
IRQ_LC8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20407760:	ccbfc06f          	j	2040442a <metal_lc8_interrupt_vector_handler>

20407764 <IRQ_LC9>:
IRQ_LC9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20407764:	d5dfc06f          	j	204044c0 <metal_lc9_interrupt_vector_handler>

20407768 <IRQ_LC10>:
IRQ_LC10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20407768:	deffc06f          	j	20404556 <metal_lc10_interrupt_vector_handler>

2040776c <IRQ_LC11>:
IRQ_LC11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2040776c:	e81fc06f          	j	204045ec <metal_lc11_interrupt_vector_handler>

20407770 <IRQ_LC12>:
IRQ_LC12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20407770:	f13fc06f          	j	20404682 <metal_lc12_interrupt_vector_handler>

20407774 <IRQ_LC13>:
IRQ_LC13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20407774:	fa5fc06f          	j	20404718 <metal_lc13_interrupt_vector_handler>

20407778 <IRQ_LC14>:
IRQ_LC14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20407778:	836fd06f          	j	204047ae <metal_lc14_interrupt_vector_handler>

2040777c <IRQ_LC15>:
IRQ_LC15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2040777c:	8c8fd06f          	j	20404844 <metal_lc15_interrupt_vector_handler>

20407780 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:180
{
20407780:	1101                	addi	sp,sp,-32
20407782:	ce22                	sw	s0,28(sp)
20407784:	1000                	addi	s0,sp,32
20407786:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040778a:	fec42703          	lw	a4,-20(s0)
2040778e:	800007b7          	lui	a5,0x80000
20407792:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdf40>
20407796:	00f71763          	bne	a4,a5,204077a4 <__metal_driver_fixed_clock_rate+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040779a:	00f427b7          	lui	a5,0xf42
2040779e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
204077a2:	a825                	j	204077da <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
204077a4:	fec42703          	lw	a4,-20(s0)
204077a8:	800007b7          	lui	a5,0x80000
204077ac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdf4c>
204077b0:	00f71763          	bne	a4,a5,204077be <__metal_driver_fixed_clock_rate+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
204077b4:	044aa7b7          	lui	a5,0x44aa
204077b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
204077bc:	a839                	j	204077da <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
204077be:	fec42703          	lw	a4,-20(s0)
204077c2:	800007b7          	lui	a5,0x80000
204077c6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffdf58>
204077ca:	00f71763          	bne	a4,a5,204077d8 <__metal_driver_fixed_clock_rate+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
204077ce:	01e857b7          	lui	a5,0x1e85
204077d2:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
204077d6:	a011                	j	204077da <__metal_driver_fixed_clock_rate+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:191
		return 0;
204077d8:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_list\bsp\build\debug/./metal/machine.h:193
}
204077da:	853e                	mv	a0,a5
204077dc:	4472                	lw	s0,28(sp)
204077de:	6105                	addi	sp,sp,32
204077e0:	8082                	ret

204077e2 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
204077e2:	1101                	addi	sp,sp,-32
204077e4:	ce06                	sw	ra,28(sp)
204077e6:	cc22                	sw	s0,24(sp)
204077e8:	1000                	addi	s0,sp,32
204077ea:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
204077ee:	fec42503          	lw	a0,-20(s0)
204077f2:	f8fff0ef          	jal	ra,20407780 <__metal_driver_fixed_clock_rate>
204077f6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:14
}
204077f8:	853e                	mv	a0,a5
204077fa:	40f2                	lw	ra,28(sp)
204077fc:	4462                	lw	s0,24(sp)
204077fe:	6105                	addi	sp,sp,32
20407800:	8082                	ret

20407802 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407802:	1101                	addi	sp,sp,-32
20407804:	ce06                	sw	ra,28(sp)
20407806:	cc22                	sw	s0,24(sp)
20407808:	1000                	addi	s0,sp,32
2040780a:	fea42623          	sw	a0,-20(s0)
2040780e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407812:	fec42503          	lw	a0,-20(s0)
20407816:	fcdff0ef          	jal	ra,204077e2 <__metal_driver_fixed_clock_get_rate_hz>
2040781a:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/src/drivers/fixed-clock.c:19
}
2040781c:	853e                	mv	a0,a5
2040781e:	40f2                	lw	ra,28(sp)
20407820:	4462                	lw	s0,24(sp)
20407822:	6105                	addi	sp,sp,32
20407824:	8082                	ret

20407826 <_exit>:
_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20407826:	1101                	addi	sp,sp,-32
20407828:	ce06                	sw	ra,28(sp)
2040782a:	cc22                	sw	s0,24(sp)
2040782c:	1000                	addi	s0,sp,32
2040782e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_list/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20407832:	fec42503          	lw	a0,-20(s0)
20407836:	ea5ff0ef          	jal	ra,204076da <metal_shutdown>
