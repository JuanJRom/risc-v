
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/src/debug/empty.elf:     file format elf32-littleriscv
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/src/debug/empty.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20010000

Program Header:
    LOAD off    0x00001000 vaddr 0x20010000 paddr 0x20010000 align 2**12
         filesz 0x00001004 memsz 0x00001004 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x20017948 align 2**12
         filesz 0x00000ac4 memsz 0x00000ac4 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00000ac8 vaddr 0x80000ac8 paddr 0x80000ac8 align 2**12
         filesz 0x00000000 memsz 0x00001848 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002080 vaddr 0x20011080 paddr 0x20011080 align 2**12
         filesz 0x000068c8 memsz 0x000068c8 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002e0  20010000  20010000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  200102e0  200102e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  200102ec  200102ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000c9c  20010368  20010368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000068c8  20011080  20011080  00002080  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000ac4  80000000  20017948  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              00000c44  80000ac8  80000ac8  00009ac8  2**3  ALLOC
  7 .stack            00000400  80001710  80001710  00009ac8  2**4  ALLOC
  8 .heap             00000800  80001b10  80001b10  00009ac8  2**3  ALLOC
  9 .debug_info       00020594  00000000  00000000  00009ac4  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002dce  00000000  00000000  0002a058  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000cf0  00000000  00000000  0002ce28  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000ab0  00000000  00000000  0002db18  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000badd  00000000  00000000  0002e5c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00005023  00000000  00000000  0003a0a5  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003f0c8  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003f0f8  2**0  CONTENTS, READONLY
 17 .debug_frame      00003318  00000000  00000000  0003f128  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20010000 l    d  .init	00000000 .init
200102e0 l    d  .init_array	00000000 .init_array
200102ec l    d  .ctors	00000000 .ctors
20010368 l    d  .rodata	00000000 .rodata
20011080 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
80000ac8 l    d  .bss	00000000 .bss
80001710 l    d  .stack	00000000 .stack
80001b10 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
200100c4 l     F .init	00000000 __metal_memory_scrub
20010132 l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20010244 l       .init	00000000 _skip_init
20010494 l       .rodata	00000000 argv
20010498 l       .rodata	00000000 envp
2001049c l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
20015d30 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20015d4a l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20015d64 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20015d7a l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
20015d8e l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
20015da0 l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
20015db0 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
20015dc6 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
20015dd8 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
20010698 l     O .rodata	00000880 pll_configs
20015dee l     F .text	0000004e get_pll_config_freq
2001605c l     F .text	000000ac find_closest_config
20016108 l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 trap.c
00000000 l    df *ABS*	00000000 findfp.c
20011ed0 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
2001229c l     F .text	0000002a __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
20013110 l     F .text	0000002a __metal_driver_sifive_clint0_control_base
2001313a l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20013162 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
2001319e l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
200132fe l     F .text	00000032 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
20013840 l     F .text	00000024 __metal_driver_cpu_hartid
20013864 l     F .text	0000002a __metal_driver_cpu_timebase
2001388e l     F .text	0000002a __metal_driver_cpu_interrupt_controller
200138b8 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20015274 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
2001529e l     F .text	0000002a __metal_driver_sifive_plic0_num_interrupts
200152c8 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
200152f0 l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20015318 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
2001533a l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20016496 l     F .text	00000026 __metal_driver_sifive_gpio0_base
200164bc l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
200164e6 l     F .text	0000035e __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
20016ef4 l     F .text	00000040 __metal_driver_sifive_uart0_control_base
20016f34 l     F .text	00000048 __metal_driver_sifive_uart0_interrupt_parent
20016f7c l     F .text	0000003c __metal_driver_sifive_uart0_interrupt_line
20016fb8 l     F .text	00000048 __metal_driver_sifive_uart0_clock
20017000 l     F .text	00000040 __metal_driver_sifive_uart0_pinmux
20017040 l     F .text	0000003c __metal_driver_sifive_uart0_pinmux_output_selector
2001707c l     F .text	00000040 __metal_driver_sifive_uart0_pinmux_source_selector
2001745c l     F .text	000000da pre_rate_change_callback_func
20017536 l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
20015b40 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20015b5a l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
20015b70 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20015b84 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
20015c40 l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20015c5a l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
20015c70 l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20015c84 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
2001641e l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20017880 l     F .text	00000070 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 kernel.c
20011080 l     F .text	0000001a r_mie
2001109a l     F .text	0000001a w_mie
200110b4 l     F .text	0000001a w_mtvec
200110ce l     F .text	0000002e intr_on
200110fc l     F .text	00000026 intr_off
80000ac8 l     O .bss	00000004 i.0
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 task.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
80000aa4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
80000af4 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 init.c
80000aec l     O .bss	00000004 init_done.1
80000af0 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20017800 l       .text	00000000 IRQ_0
20017804 l       .text	00000000 IRQ_1
20017808 l       .text	00000000 IRQ_2
2001780c l       .text	00000000 IRQ_3
20017810 l       .text	00000000 IRQ_4
20017814 l       .text	00000000 IRQ_5
20017818 l       .text	00000000 IRQ_6
2001781c l       .text	00000000 IRQ_7
20017820 l       .text	00000000 IRQ_8
20017824 l       .text	00000000 IRQ_9
20017828 l       .text	00000000 IRQ_10
2001782c l       .text	00000000 IRQ_11
20017830 l       .text	00000000 IRQ_12
20017834 l       .text	00000000 IRQ_13
20017838 l       .text	00000000 IRQ_14
2001783c l       .text	00000000 IRQ_15
20017840 l       .text	00000000 IRQ_LC0
20017844 l       .text	00000000 IRQ_LC1
20017848 l       .text	00000000 IRQ_LC2
2001784c l       .text	00000000 IRQ_LC3
20017850 l       .text	00000000 IRQ_LC4
20017854 l       .text	00000000 IRQ_LC5
20017858 l       .text	00000000 IRQ_LC6
2001785c l       .text	00000000 IRQ_LC7
20017860 l       .text	00000000 IRQ_LC8
20017864 l       .text	00000000 IRQ_LC9
20017868 l       .text	00000000 IRQ_LC10
2001786c l       .text	00000000 IRQ_LC11
20017870 l       .text	00000000 IRQ_LC12
20017874 l       .text	00000000 IRQ_LC13
20017878 l       .text	00000000 IRQ_LC14
2001787c l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
200102ec l       .init_array	00000000 metal_constructors_end
200102f0 l       .init_array	00000000 __fini_array_end
200102f0 l       .init_array	00000000 metal_destructors_end
200102f0 l       .init_array	00000000 metal_destructors_start
200102f0 l       .init_array	00000000 __fini_array_start
200102e0 l       .init_array	00000000 __init_array_end
200102e0 l       .init_array	00000000 __preinit_array_end
200102e0 l       .init_array	00000000 __init_array_start
200102e0 l       .init_array	00000000 metal_constructors_start
200102e0 l       .init_array	00000000 __preinit_array_start
20011394 g     F .text	0000008c addLast
20010fa0 g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
200126e6 g     F .text	0000002e _isatty_r
20014152  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20011a46 g     F .text	000000da _puts_r
20012714 g     F .text	00000032 _lseek_r
200176ce g     F .text	00000026 metal_clock_get_rate_hz
200173bc g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
200134d6 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20017210 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
200140bc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20014964 g     F .text	00000058 __metal_valid_interrupt_id
20011a08 g     F .text	0000003e printf
200102e8 g     O .init_array	00000004 _use_hfxosc_ptr
20014de4 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
800012a0 g       .data	00000000 __global_pointer$
200102ec g     F .ctors	00000024 metal_tty_init
2001767a g     F .text	00000054 _metal_clock_append_to_callbacks
20015394 g     F .text	00000046 __metal_plic0_complete_interrupt
20014baa g     F .text	000001e2 __metal_driver_riscv_cpu_controller_interrupt_register
200102e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
2001261a g     F .text	00000036 __sseek
20011f88 g     F .text	0000006a __sinit
20011b5c g     F .text	000000c0 __swbuf_r
80000ac8 g       .data	00000000 __tls_base
20011f42 g     F .text	00000046 __sfmoreglue
2001229a g     F .text	00000002 __malloc_unlock
20012f02 g     F .text	0000002e metal_cpu_get
80000a38 g     O .data	00000020 __metal_dt_serial_10013000
20016ace g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
200104a8 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
8000170c g       .bss	00000000 metal_segment_bss_target_end
200131ce g     F .text	0000009a __metal_clint0_mtime_get
200151e8 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
200172d4 g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20016884 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
80000ad4 g     O .bss	00000004 count2
20012cd0 g     F .text	0000000a __errno
08000000 g       .rodata	00000000 metal_segment_itim_target_start
200171e0 g     F .text	00000030 __metal_driver_sifive_uart0_txready
2001716e g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20011228 g     F .text	00000022 task_end
20010146 g     F .init	0000000e __metal_synchronize_harts
80000ac8 g       .data	00000000 metal_segment_bss_target_start
20013268 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
200126b6 g     F .text	00000030 _fstat_r
20016d1e g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
80000ae4 g     O .bss	00000004 errno
20015ee0 g     F .text	0000017c __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20017740 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20014440  w    F .text	00000096 metal_lc9_interrupt_vector_handler
200100d0  w    F .init	00000000 __metal_before_start
2001303a  w    F .text	00000014 metal_init_run
80000a58 g     O .data	00000020 __metal_dt_serial_10023000
20010634 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
200105f0 g     O .rodata	00000044 __metal_driver_vtable_cpu
200130e2 g     F .text	0000002e metal_uart_set_baud_rate
20017566 g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
20014e70 g     F .text	00000070 __metal_driver_cpu_mcycle_get
20010f18 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000b80 g     O .bss	00000004 readyList
80001b10 g       .heap	00000000 metal_segment_heap_target_start
20011f38 g     F .text	0000000a _cleanup_r
80000ab4 g     O .data	00000008 __metal_dt_cpu_0
200143aa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
200162b8 g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20015aa4 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20011b20 g     F .text	0000000c puts
20014698  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20013a4a g     F .text	00000018 __metal_default_exception_handler
20011878 g     F .text	0000000c malloc
20012b30 g     F .text	00000026 _fstat
2001380c g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
20011354 g     F .text	00000040 createNode
20014e00 g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
20011774 g     F .text	00000042 handle_trap
200138dc g     F .text	00000030 __metal_driver_cpu_get
2001058c g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
2001393e g     F .text	00000018 __metal_interrupt_global_disable
20015b18 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20014314  w    F .text	00000096 metal_lc7_interrupt_vector_handler
200144d6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
20011b2c g     F .text	00000030 _sbrk_r
200158c4 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20014a78 g     F .text	0000004e __metal_exception_register
20012f4a g     F .text	00000078 metal_init
20012adc g     F .text	00000032 _read_r
20015002 g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
20016966 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
2001164a g     F .text	00000088 handle_interrupt
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20013b3a g     F .text	00000068 __metal_default_sw_handler
20017772 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
200170bc g     F .text	00000020 __metal_driver_sifive_uart0_interrupt_controller
20012b56 g     F .text	00000020 _isatty
20016a2c g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
200170fc g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20010ffc g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20010fe0 g     O .rodata	00000004 _global_impure_ptr
20013ba2  w    F .text	00000092 metal_timer_interrupt_vector_handler
20012d3a g     F .text	0000005e __libc_init_array
200169a6 g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
2001456c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
20015d0e g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20014d8c g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
20012bca g     F .text	0000008e _sbrk
20011328 g     F .text	0000002c createList
20016920 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20017638 g     F .text	00000042 _metal_clock_call_all_callbacks
200117d0 g     F .text	00000000 switch_to
200102be g     F .init	00000002 _init
200139a0 g     F .text	0000001a __metal_interrupt_timer_disable
20016b18 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
200150c0 g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20010f64 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
20017136 g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
20016a6c g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20012d04 g     F .text	00000036 __libc_fini_array
80000a90 g     O .data	0000000c __metal_dt_clock_4
20016ea6 g     F .text	00000020 __metal_driver_gpio_interrupt_controller
20012fc2 g     F .text	00000078 metal_fini
2001504a g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20015254 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
200139f2 g     F .text	0000002c __metal_interrupt_local_enable
200137d8 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
20013062 g     F .text	00000026 metal_tty_putc
2001126c g     F .text	0000004a timer_init
20015594 g     F .text	00000018 __metal_plic0_default_handler
20012c58  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20015914 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20013c34 g     F .text	00000016 __metal_default_beu_handler
200103a0 g     O .rodata	00000020 __sf_fake_stderr
200139d6 g     F .text	0000001c __metal_interrupt_external_disable
200170dc g     F .text	00000020 __metal_driver_sifive_uart0_get_interrupt_id
20014e54 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
20014ac6 g     F .text	000000e4 __metal_driver_riscv_cpu_controller_interrupt_init
200122c6 g     F .text	00000042 __sfputs_r
200151a2 g     F .text	00000046 __metal_driver_cpu_exception_register
20013956 g     F .text	00000018 __metal_interrupt_software_enable
20013f90  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20012746 g     F .text	0000001a memchr
200115c8 g     F .text	0000004a task1
20011884 g     F .text	000000a6 _free_r
80000ae8 g     O .bss	00000004 _global_atexit
2001545a g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
2001485a g     F .text	00000058 __metal_controller_interrupt_vector_mode
20012e14 g     F .text	000000c8 __call_exitprocs
80001b10 g       .stack	00000000 _sp
200102e0 g     O .init_array	00000004 _metal_tty_init_ptr
20010154 g     F .init	00000000 _start
20011612 g     F .text	0000001c task2
20015b9a g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
20012b76 g     F .text	0000002a _lseek
20015182 g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20015216 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
200139ba g     F .text	0000001c __metal_interrupt_external_enable
20012d98 g     F .text	0000007c __register_exitproc
20017304 g     F .text	00000042 __metal_driver_sifive_uart0_putc
20015658 g     F .text	0000015a __metal_driver_riscv_plic0_init
20015874 g     F .text	00000050 __metal_driver_riscv_plic0_enable
80000b84 g     O .bss	00000004 current
200168f4 g     F .text	0000002c __metal_driver_sifive_gpio0_output
2001427e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
2001390c g     F .text	0000001a __metal_myhart_id
20016ec6 g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
20011514 g     F .text	00000054 find
20013aa8  w    F .text	00000092 metal_software_interrupt_vector_handler
20014db8 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20012688 g     F .text	0000002e _close_r
2001739c g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20011568 g     F .text	00000060 task
20011122 g     F .text	00000106 task_create
200133b8 g     F .text	000000da __metal_driver_riscv_clint0_register
80000aac g     O .data	00000008 __metal_dt_clint_2000000
20011c1c g     F .text	0000010a __swsetup_r
20011ff2 g     F .text	0000009c __sfp
200176f4 g     F .text	0000004c metal_clock_set_rate_hz
80000b88 g     O .bss	00000004 temp_pcb
2001259c g     F .text	00000030 __sread
80000ad8 g     O .bss	00000004 count3
20016844 g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
200102c0  w    F .init	00000000 secondary_main
20013a7a  w    F .text	0000002e metal_interrupt_vector_handler
20012298 g     F .text	00000002 __malloc_lock
200171a8 g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20011e6c g     F .text	00000064 _fflush_r
20015420 g     F .text	0000003a __metal_plic0_get_threshold
20016430 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
200103c0 g     O .rodata	00000020 __sf_fake_stdin
200149bc g     F .text	000000bc __metal_local_interrupt_enable
20013698 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
200121f0 g     F .text	000000a8 memset
200141e8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
200112fc g     F .text	0000002c main
80000ac8 g       .data	00000000 metal_segment_data_target_end
2001728a g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20010fe4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
2001505e g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20015122 g     F .text	00000060 __metal_driver_cpu_get_msip
200177a4 g     F .text	0000000e metal_shutdown
08000000 g       .rodata	00000000 metal_segment_itim_target_end
20015234 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20015358 g     F .text	0000003c __metal_plic0_claim_interrupt
2001725a g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20012650 g     F .text	00000006 __sclose
20014602  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2001008e g     F .init	00000000 metal_mem_scrub
200117b8 g     F .text	00000000 osSchedulerLaunch
2001192a g     F .text	000000de _malloc_r
200134ba g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
80000ac0 g     O .data	00000004 __metal_dt_prci_10008000
20014ee0 g     F .text	00000046 __metal_driver_cpu_timebase_get
20015a08 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20010000 g       .init	00000000 _enter
20012f30 g     F .text	0000001a metal_cpu_get_current_hartid
20015c9a g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20017800 g       .text	00000000 __metal_vector_table
20011008 g       *ABS*	00000000 metal_segment_itim_source_start
80000aa8  w    O .data	00000004 __metal_cpu_table
80000acc g     O .bss	00000004 count
80000090 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
200102be g     F .init	00000002 _fini
20011a08 g     F .text	0000003e iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
200112b6 g     F .text	00000046 scheduler_RoundRobin
200154bc g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2001033c g     F .ctors	0000002a use_hfxosc
20013926 g     F .text	00000018 __metal_interrupt_global_enable
20012cc6 g     F .text	0000000a atexit
20012656 g     F .text	00000032 _write_r
80000ad0 g     O .bss	00000004 count1
20013986 g     F .text	0000001a __metal_interrupt_timer_enable
20017346 g     F .text	00000056 __metal_driver_sifive_uart0_getc
200135e0 g     F .text	000000b8 __metal_driver_riscv_clint0_disable
20012760 g     F .text	0000010c _printf_common
20011420 g     F .text	0000006e get
80000aa0 g     O .data	00000004 _impure_ptr
20014f8c g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20011d26 g     F .text	00000146 __sflush_r
80000b8c g     O .bss	00000b80 PCB_STACK
20015944 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
20015e3c g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
2001645e g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
200178f0 g     F .text	00000020 __metal_driver_fixed_clock_get_rate_hz
2001352e g     F .text	000000b2 __metal_driver_riscv_clint0_enable
200116d2 g     F .text	000000a2 handle_exception
20017948 g       *ABS*	00000000 metal_segment_data_source_start
20010138 g       .init	00000000 early_trap_vector
80002310 g       .heap	00000000 metal_segment_heap_target_end
200148b2 g     F .text	000000b2 __metal_controller_interrupt_vector
80000a84 g     O .data	0000000c __metal_dt_clock_1
80000460 g     O .data	000005d8 __metal_dt_interrupt_controller_c000000
200120f8 g     F .text	0000005a __swhatbuf_r
200169e6 g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20013c4a g     F .text	00000066 __metal_default_timer_handler
20012c58 g     F .text	0000006e _write
200155ac g     F .text	000000ac __metal_plic0_handler
20014026  w    F .text	00000096 metal_lc2_interrupt_vector_handler
200147c4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20012edc g     F .text	00000026 metal_cpu_interrupt_controller
200125cc g     F .text	0000004e __swrite
20012cda g     F .text	0000002a exit
20012308 g     F .text	00000294 _vfiprintf_r
2001208e g     F .text	0000006a _fwalk_reent
20017910 g     F .text	00000024 __metal_driver_fixed_clock_set_rate_hz
20011008 g       *ABS*	00000000 metal_segment_lim_source_start
200103e0 g     O .rodata	00000020 __sf_fake_stdout
80000abc g     O .data	00000004 __metal_dt_gpio_10012000
20013a62 g     F .text	00000018 __metal_default_interrupt_handler
200130b4 g     F .text	0000002e metal_uart_putc
20012ba0 g     F .text	0000002a _read
2001304e  w    F .text	00000014 metal_fini_run
200168ca g     F .text	0000002a __metal_driver_sifive_gpio0_input
20013d00 g     F .text	00000180 __metal_exception_handler
20013efa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
20017934 g     F .text	00000014 _exit
20014f26 g     F .text	00000066 __metal_driver_cpu_mtime_get
20012152 g     F .text	0000009e __smakebuf_r
20013492 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
2001286c g     F .text	00000270 _printf_i
80000ae0 g     O .bss	00000004 __malloc_sbrk_start
2001472e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20010fec g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20013330 g     F .text	00000088 __metal_driver_riscv_clint0_init
80000adc g     O .bss	00000004 __malloc_free_list
2001162e g     F .text	0000001c task3
20010310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20012308 g     F .text	00000294 _vfprintf_r
2001501c g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
200154f0 g     F .text	000000a4 __metal_plic0_enable
2001008c  w      .init	00000000 __register_frame_info
20015c1e g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
20015030 g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
20013a1e g     F .text	0000002c __metal_interrupt_local_disable
2001396e g     F .text	00000018 __metal_interrupt_software_disable
20013088 g     F .text	0000002c metal_uart_init
80000a78 g     O .data	0000000c __metal_dt_clock_3
80000084 g     O .data	0000000c __metal_dt_clock_6
200153da g     F .text	00000046 __metal_plic0_set_threshold
2001596c g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
20012b0e g     F .text	00000022 _close
20010ff4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
2001124a g     F .text	00000022 kernel_launch
200157b2 g     F .text	000000c2 __metal_driver_riscv_plic0_register
2001148e g     F .text	00000086 deleteElement



Disassembly of section .init:

20010000 <_enter>:
_enter():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20010000:	5fff1197          	auipc	gp,0x5fff1
20010004:	2a018193          	addi	gp,gp,672 # 800012a0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20010008:	00000297          	auipc	t0,0x0
2001000c:	01828293          	addi	t0,t0,24 # 20010020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20010010:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20010014:	00100293          	li	t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:32
    beqz t0, 1f
20010018:	00028463          	beqz	t0,20010020 <_enter+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2001001c:	7c105073          	csrwi	0x7c1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20010020:	00000297          	auipc	t0,0x0
20010024:	11828293          	addi	t0,t0,280 # 20010138 <early_trap_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20010028:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2001002c:	00000113          	li	sp,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20010030:	00011663          	bnez	sp,2001003c <_enter+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:56
    la sp, _sp
20010034:	5fff2117          	auipc	sp,0x5fff2
20010038:	adc10113          	addi	sp,sp,-1316 # 80001b10 <_sp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
2001003c:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:60
    li t0, 0
20010040:	4281                	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:61
    la t1, __stack_size
20010042:	40000313          	li	t1,1024
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20010046:	ff017113          	andi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
2001004a:	00a28563          	beq	t0,a0,20010054 <_enter+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:65
    add sp, sp, t1
2001004e:	911a                	add	sp,sp,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:66
    addi t0, t0, 1
20010050:	0285                	addi	t0,t0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:67
    j 1b
20010052:	bfd5                	j	20010046 <_enter+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20010054:	00000097          	auipc	ra,0x0
20010058:	07c08093          	addi	ra,ra,124 # 200100d0 <__metal_before_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:77
    beqz ra, 1f
2001005c:	00008363          	beqz	ra,20010062 <_enter+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:78
    jalr ra
20010060:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
20010062:	f1402573          	csrr	a0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:85
    li a1, 0
20010066:	4581                	li	a1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:86
    li a2, 0
20010068:	4601                	li	a2,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:87
    call _start
2001006a:	20ed                	jal	20010154 <_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
2001006c:	00000093          	li	ra,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:93
    beqz ra, 1f
20010070:	00008363          	beqz	ra,20010076 <_enter+0x76>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:94
    jalr ra
20010074:	9082                	jalr	ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20010076:	00000297          	auipc	t0,0x0
2001007a:	00c28293          	addi	t0,t0,12 # 20010082 <_enter+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2001007e:	30529073          	csrw	mtvec,t0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
20010082:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:103
     j 1b
20010086:	bff5                	j	20010082 <_enter+0x82>
20010088:	0000                	unimp
	...

2001008c <__register_frame_info>:
__register_frame_info():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
2001008c:	8082                	ret

2001008e <metal_mem_scrub>:
metal_mem_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2001008e:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
20010090:	3006b373          	csrrc	t1,mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20010094:	4291                	li	t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20010096:	0055c563          	blt	a1,t0,200100a0 <metal_mem_scrub+0x12>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
2001009a:	00357613          	andi	a2,a0,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2001009e:	ca11                	beqz	a2,200100b2 <metal_mem_scrub+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
200100a0:	00050023          	sb	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
200100a4:	0505                	addi	a0,a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
200100a6:	15fd                	addi	a1,a1,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
200100a8:	feb047e3          	bgtz	a1,20010096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
200100ac:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:39
    ret
200100b0:	8082                	ret
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
200100b2:	00052023          	sw	zero,0(a0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
200100b6:	0511                	addi	a0,a0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
200100b8:	15f1                	addi	a1,a1,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
200100ba:	fcb04ee3          	bgtz	a1,20010096 <metal_mem_scrub+0x8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
200100be:	30031073          	csrw	mstatus,t1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:46
    ret
200100c2:	8082                	ret

200100c4 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
200100c4:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
200100c8:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
200100ca:	fe734de3          	blt	t1,t2,200100c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
200100ce:	8082                	ret

200100d0 <__metal_before_start>:
__metal_before_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
200100d0:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
200100d2:	dfff0297          	auipc	t0,0xdfff0
200100d6:	f2e28293          	addi	t0,t0,-210 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
200100da:	04028c63          	beqz	t0,20010132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
200100de:	dfff0297          	auipc	t0,0xdfff0
200100e2:	f2228293          	addi	t0,t0,-222 # 0 <__metal_boot_hart>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
200100e6:	f14027f3          	csrr	a5,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
200100ea:	46a1                	li	a3,8
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
200100ec:	3006b073          	csrc	mstatus,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
200100f0:	830a                	mv	t1,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
200100f2:	dfff0397          	auipc	t2,0xdfff0
200100f6:	30e38393          	addi	t2,t2,782 # 400 <__stack_size>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
200100fa:	938a                	add	t2,t2,sp
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
200100fc:	00730363          	beq	t1,t2,20010102 <__metal_before_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
20010100:	37d1                	jal	200100c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
20010102:	02579863          	bne	a5,t0,20010132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20010106:	5fff0317          	auipc	t1,0x5fff0
2001010a:	efa30313          	addi	t1,t1,-262 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2001010e:	5fff1397          	auipc	t2,0x5fff1
20010112:	9ba38393          	addi	t2,t2,-1606 # 80000ac8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20010116:	00730363          	beq	t1,t2,2001011c <__metal_before_start+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
2001011a:	376d                	jal	200100c4 <__metal_memory_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
2001011c:	e7ff0317          	auipc	t1,0xe7ff0
20010120:	ee430313          	addi	t1,t1,-284 # 8000000 <metal_segment_itim_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20010124:	e7ff0397          	auipc	t2,0xe7ff0
20010128:	edc38393          	addi	t2,t2,-292 # 8000000 <metal_segment_itim_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
2001012c:	00730363          	beq	t1,t2,20010132 <skip_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
20010130:	3f51                	jal	200100c4 <__metal_memory_scrub>

20010132 <skip_scrub>:
skip_scrub():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
20010132:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/scrub.S:130
    ret
20010134:	8082                	ret
	...

20010138 <early_trap_vector>:
early_trap_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20010138:	342022f3          	csrr	t0,mcause
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/trap.S:65
    csrr t1, mepc
2001013c:	34102373          	csrr	t1,mepc
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/trap.S:66
    csrr t2, mtval
20010140:	343023f3          	csrr	t2,mtval
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/trap.S:67
    j early_trap_vector
20010144:	bfd5                	j	20010138 <early_trap_vector>

20010146 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20010146:	1141                	addi	sp,sp,-16
20010148:	c622                	sw	s0,12(sp)
2001014a:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
2001014c:	0001                	nop
2001014e:	4432                	lw	s0,12(sp)
20010150:	0141                	addi	sp,sp,16
20010152:	8082                	ret

20010154 <_start>:
_start():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20010154:	8406                	mv	s0,ra
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20010156:	5fff1197          	auipc	gp,0x5fff1
2001015a:	14a18193          	addi	gp,gp,330 # 800012a0 <__global_pointer$>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2001015e:	00000293          	li	t0,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
20010162:	0e551163          	bne	a0,t0,20010244 <_skip_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20010166:	00007297          	auipc	t0,0x7
2001016a:	7e228293          	addi	t0,t0,2018 # 20017948 <metal_segment_data_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2001016e:	5fff0317          	auipc	t1,0x5fff0
20010172:	e9230313          	addi	t1,t1,-366 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20010176:	5fff1397          	auipc	t2,0x5fff1
2001017a:	95238393          	addi	t2,t2,-1710 # 80000ac8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2001017e:	00628c63          	beq	t0,t1,20010196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
20010182:	00735a63          	bge	t1,t2,20010196 <_start+0x42>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20010186:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
2001018a:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
2001018c:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
20010190:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
20010192:	fe734ae3          	blt	t1,t2,20010186 <_start+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20010196:	00001297          	auipc	t0,0x1
2001019a:	e7228293          	addi	t0,t0,-398 # 20011008 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2001019e:	e7ff0317          	auipc	t1,0xe7ff0
200101a2:	e6230313          	addi	t1,t1,-414 # 8000000 <metal_segment_itim_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
200101a6:	e7ff0397          	auipc	t2,0xe7ff0
200101aa:	e5a38393          	addi	t2,t2,-422 # 8000000 <metal_segment_itim_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
200101ae:	00628c63          	beq	t0,t1,200101c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
200101b2:	00735a63          	bge	t1,t2,200101c6 <_start+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101b6:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
200101ba:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
200101bc:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
200101c0:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
200101c2:	fe734ae3          	blt	t1,t2,200101b6 <_start+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
200101c6:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
200101ca:	00001297          	auipc	t0,0x1
200101ce:	e3e28293          	addi	t0,t0,-450 # 20011008 <metal_segment_itim_source_start>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
200101d2:	5fff0317          	auipc	t1,0x5fff0
200101d6:	e2e30313          	addi	t1,t1,-466 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
200101da:	5fff0397          	auipc	t2,0x5fff0
200101de:	e2638393          	addi	t2,t2,-474 # 80000000 <impure_data>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
200101e2:	00628c63          	beq	t0,t1,200101fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
200101e6:	00735a63          	bge	t1,t2,200101fa <_start+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
200101ea:	0002a503          	lw	a0,0(t0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
200101ee:	0291                	addi	t0,t0,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
200101f0:	00a32023          	sw	a0,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
200101f4:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
200101f6:	fe734ae3          	blt	t1,t2,200101ea <_start+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
200101fa:	0000100f          	fence.i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
200101fe:	5fff1317          	auipc	t1,0x5fff1
20010202:	8ca30313          	addi	t1,t1,-1846 # 80000ac8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20010206:	46c18393          	addi	t2,gp,1132 # 8000170c <metal_segment_bss_target_end>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
2001020a:	00735763          	bge	t1,t2,20010218 <_start+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2001020e:	00032023          	sw	zero,0(t1)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
20010212:	0311                	addi	t1,t1,4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20010214:	fe734de3          	blt	t1,t2,2001020e <_start+0xba>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20010218:	5fff1217          	auipc	tp,0x5fff1
2001021c:	8b020213          	addi	tp,tp,-1872 # 80000ac8 <i.0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
20010220:	c211                	beqz	a2,20010224 <_start+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:167
  jalr a2
20010222:	9602                	jalr	a2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20010224:	00003517          	auipc	a0,0x3
20010228:	ae050513          	addi	a0,a0,-1312 # 20012d04 <__libc_fini_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:172
  call atexit
2001022c:	29b020ef          	jal	ra,20012cc6 <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
20010230:	30b020ef          	jal	ra,20012d3a <__libc_init_array>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20010234:	00003517          	auipc	a0,0x3
20010238:	e1a50513          	addi	a0,a0,-486 # 2001304e <metal_fini_run>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:178
  call atexit
2001023c:	28b020ef          	jal	ra,20012cc6 <atexit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:179
  call metal_init_run
20010240:	5fb020ef          	jal	ra,2001303a <metal_init_run>

20010244 <_skip_init>:
_skip_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20010244:	3709                	jal	20010146 <__metal_synchronize_harts>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20010246:	56fd                	li	a3,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20010248:	3046b073          	csrc	mie,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
2001024c:	3446b073          	csrc	mip,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
20010250:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20010254:	00042737          	lui	a4,0x42
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20010258:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
2001025a:	c709                	beqz	a4,20010264 <_skip_init+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
2001025c:	3036b073          	csrc	mideleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
20010260:	3026b073          	csrc	medeleg,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20010264:	00040737          	lui	a4,0x40
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20010268:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
2001026a:	c319                	beqz	a4,20010270 <_skip_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
2001026c:	1806b073          	csrc	satp,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
20010270:	6741                	lui	a4,0x10
20010272:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20010276:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20010278:	cb89                	beqz	a5,2001028a <_skip_init+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
2001027a:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2001027e:	6709                	lui	a4,0x2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
20010280:	8fd9                	or	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
20010282:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20010286:	00305073          	csrwi	fcsr,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
2001028a:	301027f3          	csrr	a5,misa
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2001028e:	00200737          	lui	a4,0x200
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
20010292:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20010294:	c799                	beqz	a5,200102a2 <_skip_init+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20010296:	300027f3          	csrr	a5,mstatus
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
2001029a:	2007e793          	ori	a5,a5,512
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2001029e:	30079073          	csrw	mstatus,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
200102a2:	4505                	li	a0,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
200102a4:	00000597          	auipc	a1,0x0
200102a8:	1f058593          	addi	a1,a1,496 # 20010494 <argv>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
200102ac:	00000617          	auipc	a2,0x0
200102b0:	1ec60613          	addi	a2,a2,492 # 20010498 <envp>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:236
  call secondary_main
200102b4:	2031                	jal	200102c0 <secondary_main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
200102b6:	225020ef          	jal	ra,20012cda <exit>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
200102ba:	80a2                	mv	ra,s0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:248
  ret
200102bc:	8082                	ret

200102be <_fini>:
_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
200102be:	8082                	ret

200102c0 <secondary_main>:
secondary_main():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
200102c0:	1141                	addi	sp,sp,-16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
200102c2:	c206                	sw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
200102c4:	f14022f3          	csrr	t0,mhartid
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
200102c8:	00000313          	li	t1,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
200102cc:	00628563          	beq	t0,t1,200102d6 <secondary_main+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:281
1:
  wfi
200102d0:	10500073          	wfi
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:282
  j 1b
200102d4:	bff5                	j	200102d0 <secondary_main+0x10>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:284
2:
  call main
200102d6:	026010ef          	jal	ra,200112fc <main>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
200102da:	4092                	lw	ra,4(sp)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
200102dc:	0141                	addi	sp,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/crt0.S:291
  ret
200102de:	8082                	ret

Disassembly of section .ctors:

200102ec <metal_tty_init>:
metal_tty_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
200102ec:	1141                	addi	sp,sp,-16
200102ee:	c606                	sw	ra,12(sp)
200102f0:	c422                	sw	s0,8(sp)
200102f2:	0800                	addi	s0,sp,16
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
200102f4:	67f1                	lui	a5,0x1c
200102f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
200102fa:	800017b7          	lui	a5,0x80001
200102fe:	a3878513          	addi	a0,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20010302:	587020ef          	jal	ra,20013088 <metal_uart_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/tty.c:30
}
20010306:	0001                	nop
20010308:	40b2                	lw	ra,12(sp)
2001030a:	4422                	lw	s0,8(sp)
2001030c:	0141                	addi	sp,sp,16
2001030e:	8082                	ret

20010310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20010310:	1101                	addi	sp,sp,-32
20010312:	ce06                	sw	ra,28(sp)
20010314:	cc22                	sw	s0,24(sp)
20010316:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010318:	299050ef          	jal	ra,20015db0 <__metal_driver_sifive_fe310_g000_pll_init_rate>
2001031c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20010320:	fec42783          	lw	a5,-20(s0)
20010324:	c799                	beqz	a5,20010332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20010326:	800017b7          	lui	a5,0x80001
2001032a:	a9078513          	addi	a0,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xffffe780>
2001032e:	30f050ef          	jal	ra,20015e3c <__metal_driver_sifive_fe310_g000_pll_init>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20010332:	0001                	nop
20010334:	40f2                	lw	ra,28(sp)
20010336:	4462                	lw	s0,24(sp)
20010338:	6105                	addi	sp,sp,32
2001033a:	8082                	ret

2001033c <use_hfxosc>:
use_hfxosc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2001033c:	1101                	addi	sp,sp,-32
2001033e:	ce06                	sw	ra,28(sp)
20010340:	cc22                	sw	s0,24(sp)
20010342:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20010344:	26d050ef          	jal	ra,20015db0 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20010348:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2001034c:	fec42583          	lw	a1,-20(s0)
20010350:	800017b7          	lui	a5,0x80001
20010354:	a9078513          	addi	a0,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xffffe780>
20010358:	39c070ef          	jal	ra,200176f4 <metal_clock_set_rate_hz>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2001035c:	0001                	nop
2001035e:	40f2                	lw	ra,28(sp)
20010360:	4462                	lw	s0,24(sp)
20010362:	6105                	addi	sp,sp,32
20010364:	8082                	ret

Disassembly of section .text:

20011080 <r_mie>:
r_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:99

// Machine-mode Interrupt Enable
#define MIE_MEIE (1L << 11)  // external
#define MIE_MTIE (1L << 7)   // timer
#define MIE_MSIE (1L << 3)   // software
static inline uint32_t r_mie() {
20011080:	1101                	addi	sp,sp,-32
20011082:	ce22                	sw	s0,28(sp)
20011084:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:101
    uint32_t x;
    asm volatile("csrr %0, mie" : "=r"(x));
20011086:	304027f3          	csrr	a5,mie
2001108a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:102
    return x;
2001108e:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:103
}
20011092:	853e                	mv	a0,a5
20011094:	4472                	lw	s0,28(sp)
20011096:	6105                	addi	sp,sp,32
20011098:	8082                	ret

2001109a <w_mie>:
w_mie():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:105

static inline void w_mie(uint32_t x) {
2001109a:	1101                	addi	sp,sp,-32
2001109c:	ce22                	sw	s0,28(sp)
2001109e:	1000                	addi	s0,sp,32
200110a0:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:106
    asm volatile("csrw mie, %0" : : "r"(x));
200110a4:	fec42783          	lw	a5,-20(s0)
200110a8:	30479073          	csrw	mie,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:107
}
200110ac:	0001                	nop
200110ae:	4472                	lw	s0,28(sp)
200110b0:	6105                	addi	sp,sp,32
200110b2:	8082                	ret

200110b4 <w_mtvec>:
w_mtvec():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:157
    asm volatile("csrr %0, stvec" : "=r"(x));
    return x;
}

// Machine-mode interrupt vector
static inline void w_mtvec(uint32_t x) {
200110b4:	1101                	addi	sp,sp,-32
200110b6:	ce22                	sw	s0,28(sp)
200110b8:	1000                	addi	s0,sp,32
200110ba:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:158
    asm volatile("csrw mtvec, %0" : : "r"(x));
200110be:	fec42783          	lw	a5,-20(s0)
200110c2:	30579073          	csrw	mtvec,a5
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:159
}
200110c6:	0001                	nop
200110c8:	4472                	lw	s0,28(sp)
200110ca:	6105                	addi	sp,sp,32
200110cc:	8082                	ret

200110ce <intr_on>:
intr_on():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:224
//Interrupts on and off by JJRH
#define INTERRUPT_ON (1 << 7)
#define INTERRUPT_OFF (0 << 7)

// enable device interrupts by JJRH
static inline void intr_on() {
200110ce:	1101                	addi	sp,sp,-32
200110d0:	ce06                	sw	ra,28(sp)
200110d2:	cc22                	sw	s0,24(sp)
200110d4:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:225
	uint32_t mie = r_mie();
200110d6:	376d                	jal	20011080 <r_mie>
200110d8:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:226
	mie |= INTERRUPT_ON;
200110dc:	fec42783          	lw	a5,-20(s0)
200110e0:	0807e793          	ori	a5,a5,128
200110e4:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:227
	asm volatile ("csrsi mstatus, 8");
200110e8:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:228
	w_mie(mie);
200110ec:	fec42503          	lw	a0,-20(s0)
200110f0:	376d                	jal	2001109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:229
}
200110f2:	0001                	nop
200110f4:	40f2                	lw	ra,28(sp)
200110f6:	4462                	lw	s0,24(sp)
200110f8:	6105                	addi	sp,sp,32
200110fa:	8082                	ret

200110fc <intr_off>:
intr_off():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:240

// disable device interrupts
//static inline void intr_off() { w_sstatus(r_sstatus() & ~SSTATUS_SIE); }

// disable device interrupts  by JJRH
static inline void intr_off() {
200110fc:	1101                	addi	sp,sp,-32
200110fe:	ce06                	sw	ra,28(sp)
20011100:	cc22                	sw	s0,24(sp)
20011102:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:241
	uint32_t mie = r_mie();
20011104:	3fb5                	jal	20011080 <r_mie>
20011106:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:242
	mie &= INTERRUPT_OFF;
2001110a:	fe042623          	sw	zero,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:243
	asm volatile ("csrsi mstatus, 8");
2001110e:	30046073          	csrsi	mstatus,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:244
	w_mie(mie);
20011112:	fec42503          	lw	a0,-20(s0)
20011116:	3751                	jal	2001109a <w_mie>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/riscv.h:245
}
20011118:	0001                	nop
2001111a:	40f2                	lw	ra,28(sp)
2001111c:	4462                	lw	s0,24(sp)
2001111e:	6105                	addi	sp,sp,32
20011120:	8082                	ret

20011122 <task_create>:
task_create():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:27
/*void stack_init(int i){
	temp_ptr->stackPt = &PCB_STACK[i][STACKSIZE];
	//PCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;
}*/

int task_create(void(*task)(void)/*, void(*task1)(void), void(*task2)(void), void(*task3)(void)*/){
20011122:	1101                	addi	sp,sp,-32
20011124:	ce06                	sw	ra,28(sp)
20011126:	cc22                	sw	s0,24(sp)
20011128:	1000                	addi	s0,sp,32
2001112a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:28
	intr_off();
2001112e:	37f9                	jal	200110fc <intr_off>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:30
	static uint32_t i=0;
	if(i==0){
20011130:	800017b7          	lui	a5,0x80001
20011134:	ac87a783          	lw	a5,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
20011138:	ef81                	bnez	a5,20011150 <task_create+0x2e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:31
		temp_pcb = createNode();
2001113a:	2c29                	jal	20011354 <createNode>
2001113c:	872a                	mv	a4,a0
2001113e:	8ee1a423          	sw	a4,-1816(gp) # 80000b88 <temp_pcb>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:32
		readyList = createList(readyList);
20011142:	8e01a783          	lw	a5,-1824(gp) # 80000b80 <readyList>
20011146:	853e                	mv	a0,a5
20011148:	22c5                	jal	20011328 <createList>
2001114a:	872a                	mv	a4,a0
2001114c:	8ee1a023          	sw	a4,-1824(gp) # 80000b80 <readyList>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:34
	}
	temp_pcb->id = i;
20011150:	800017b7          	lui	a5,0x80001
20011154:	ac87a703          	lw	a4,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
20011158:	8e81a783          	lw	a5,-1816(gp) # 80000b88 <temp_pcb>
2001115c:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:35
	temp_pcb->state = ready;
2001115e:	8e81a783          	lw	a5,-1816(gp) # 80000b88 <temp_pcb>
20011162:	0007a623          	sw	zero,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:36
	temp_pcb->stackPt = &PCB_STACK[i][STACKSIZE];
20011166:	800017b7          	lui	a5,0x80001
2001116a:	ac87a703          	lw	a4,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
2001116e:	8e81a783          	lw	a5,-1816(gp) # 80000b88 <temp_pcb>
20011172:	00170693          	addi	a3,a4,1 # 200001 <__heap_size+0x1ff801>
20011176:	2e000713          	li	a4,736
2001117a:	02e686b3          	mul	a3,a3,a4
2001117e:	80001737          	lui	a4,0x80001
20011182:	b8c70713          	addi	a4,a4,-1140 # 80000b8c <metal_segment_heap_target_end+0xffffe87c>
20011186:	9736                	add	a4,a4,a3
20011188:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:38
	//PCB_STACK[i][STACKSIZE-1] = 0x0100DEAD;   //This is only for test
	addLast(readyList, temp_pcb);
2001118a:	8e01a703          	lw	a4,-1824(gp) # 80000b80 <readyList>
2001118e:	8e81a783          	lw	a5,-1816(gp) # 80000b88 <temp_pcb>
20011192:	85be                	mv	a1,a5
20011194:	853a                	mv	a0,a4
20011196:	2afd                	jal	20011394 <addLast>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:39
	if(i==0) current = find(readyList, i);
20011198:	800017b7          	lui	a5,0x80001
2001119c:	ac87a783          	lw	a5,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
200111a0:	ef89                	bnez	a5,200111ba <task_create+0x98>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:39 (discriminator 1)
200111a2:	8e01a703          	lw	a4,-1824(gp) # 80000b80 <readyList>
200111a6:	800017b7          	lui	a5,0x80001
200111aa:	ac87a783          	lw	a5,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
200111ae:	85be                	mv	a1,a5
200111b0:	853a                	mv	a0,a4
200111b2:	268d                	jal	20011514 <find>
200111b4:	872a                	mv	a4,a0
200111b6:	8ee1a223          	sw	a4,-1820(gp) # 80000b84 <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:41
	//stack_init(temp_ptr->id);
	PCB_STACK[i][STACKSIZE] = (int32_t)(task);
200111ba:	800017b7          	lui	a5,0x80001
200111be:	ac87a783          	lw	a5,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
200111c2:	fec42703          	lw	a4,-20(s0)
200111c6:	800016b7          	lui	a3,0x80001
200111ca:	b8c68693          	addi	a3,a3,-1140 # 80000b8c <metal_segment_heap_target_end+0xffffe87c>
200111ce:	00178613          	addi	a2,a5,1
200111d2:	2e000793          	li	a5,736
200111d6:	02f607b3          	mul	a5,a2,a5
200111da:	97b6                	add	a5,a5,a3
200111dc:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:42
	PCB_STACK[i][STACKSIZE-1] = (int32_t)(task);
200111de:	800017b7          	lui	a5,0x80001
200111e2:	ac87a603          	lw	a2,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
200111e6:	fec42703          	lw	a4,-20(s0)
200111ea:	800017b7          	lui	a5,0x80001
200111ee:	b8c78693          	addi	a3,a5,-1140 # 80000b8c <metal_segment_heap_target_end+0xffffe87c>
200111f2:	2e000793          	li	a5,736
200111f6:	02f607b3          	mul	a5,a2,a5
200111fa:	97b6                	add	a5,a5,a3
200111fc:	2ce7ae23          	sw	a4,732(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:43
	i++;
20011200:	800017b7          	lui	a5,0x80001
20011204:	ac87a783          	lw	a5,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
20011208:	00178713          	addi	a4,a5,1
2001120c:	800017b7          	lui	a5,0x80001
20011210:	ace7a423          	sw	a4,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:44
	intr_on();
20011214:	3d6d                	jal	200110ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:45
	return i;
20011216:	800017b7          	lui	a5,0x80001
2001121a:	ac87a783          	lw	a5,-1336(a5) # 80000ac8 <metal_segment_heap_target_end+0xffffe7b8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:46
}
2001121e:	853e                	mv	a0,a5
20011220:	40f2                	lw	ra,28(sp)
20011222:	4462                	lw	s0,24(sp)
20011224:	6105                	addi	sp,sp,32
20011226:	8082                	ret

20011228 <task_end>:
task_end():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:48

void task_end(void){
20011228:	1141                	addi	sp,sp,-16
2001122a:	c606                	sw	ra,12(sp)
2001122c:	c422                	sw	s0,8(sp)
2001122e:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:49
	deleteElement(readyList, current->id);
20011230:	8e01a703          	lw	a4,-1824(gp) # 80000b80 <readyList>
20011234:	8e41a783          	lw	a5,-1820(gp) # 80000b84 <current>
20011238:	479c                	lw	a5,8(a5)
2001123a:	85be                	mv	a1,a5
2001123c:	853a                	mv	a0,a4
2001123e:	2c81                	jal	2001148e <deleteElement>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:52
	//current = current->next;
	//switch_to();
}
20011240:	0001                	nop
20011242:	40b2                	lw	ra,12(sp)
20011244:	4422                	lw	s0,8(sp)
20011246:	0141                	addi	sp,sp,16
20011248:	8082                	ret

2001124a <kernel_launch>:
kernel_launch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:68
	temp_pcb->state = ready;
	addLast(readyList, temp_pcb);
	deleteFirst(queue);
}

void kernel_launch(void){
2001124a:	1141                	addi	sp,sp,-16
2001124c:	c606                	sw	ra,12(sp)
2001124e:	c422                	sw	s0,8(sp)
20011250:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:69
	w_mtvec((uint32_t)switch_to);
20011252:	200117b7          	lui	a5,0x20011
20011256:	7d078793          	addi	a5,a5,2000 # 200117d0 <switch_to>
2001125a:	853e                	mv	a0,a5
2001125c:	3da1                	jal	200110b4 <w_mtvec>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:70
	timer_init();
2001125e:	2039                	jal	2001126c <timer_init>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:71
	osSchedulerLaunch();
20011260:	2ba1                	jal	200117b8 <osSchedulerLaunch>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:72
}
20011262:	0001                	nop
20011264:	40b2                	lw	ra,12(sp)
20011266:	4422                	lw	s0,8(sp)
20011268:	0141                	addi	sp,sp,16
2001126a:	8082                	ret

2001126c <timer_init>:
timer_init():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:74

void timer_init(void) {
2001126c:	1141                	addi	sp,sp,-16
2001126e:	c606                	sw	ra,12(sp)
20011270:	c422                	sw	s0,8(sp)
20011272:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:76
	//*MTIMECMP = *MTIME + 0xfffff * 5;
	*MTIMECMP = *MTIME + 0x11111;
20011274:	0200c7b7          	lui	a5,0x200c
20011278:	17e1                	addi	a5,a5,-8
2001127a:	4398                	lw	a4,0(a5)
2001127c:	43dc                	lw	a5,4(a5)
2001127e:	02004837          	lui	a6,0x2004
20011282:	6545                	lui	a0,0x11
20011284:	11150513          	addi	a0,a0,273 # 11111 <__heap_size+0x10911>
20011288:	4581                	li	a1,0
2001128a:	00a70633          	add	a2,a4,a0
2001128e:	88b2                	mv	a7,a2
20011290:	00e8b8b3          	sltu	a7,a7,a4
20011294:	00b786b3          	add	a3,a5,a1
20011298:	00d887b3          	add	a5,a7,a3
2001129c:	86be                	mv	a3,a5
2001129e:	8732                	mv	a4,a2
200112a0:	87b6                	mv	a5,a3
200112a2:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
200112a6:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:77
	intr_on();
200112aa:	3515                	jal	200110ce <intr_on>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:78
}
200112ac:	0001                	nop
200112ae:	40b2                	lw	ra,12(sp)
200112b0:	4422                	lw	s0,8(sp)
200112b2:	0141                	addi	sp,sp,16
200112b4:	8082                	ret

200112b6 <scheduler_RoundRobin>:
scheduler_RoundRobin():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:80

void scheduler_RoundRobin(void){
200112b6:	1141                	addi	sp,sp,-16
200112b8:	c606                	sw	ra,12(sp)
200112ba:	c422                	sw	s0,8(sp)
200112bc:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:81
	current->state = ready;
200112be:	8e41a783          	lw	a5,-1820(gp) # 80000b84 <current>
200112c2:	0007a623          	sw	zero,12(a5) # 200c00c <__heap_size+0x200b80c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:82
	if(current->next == NULL)
200112c6:	8e41a783          	lw	a5,-1820(gp) # 80000b84 <current>
200112ca:	43dc                	lw	a5,4(a5)
200112cc:	eb91                	bnez	a5,200112e0 <scheduler_RoundRobin+0x2a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:83
		current = get(0, readyList);
200112ce:	8e01a783          	lw	a5,-1824(gp) # 80000b80 <readyList>
200112d2:	85be                	mv	a1,a5
200112d4:	4501                	li	a0,0
200112d6:	22a9                	jal	20011420 <get>
200112d8:	872a                	mv	a4,a0
200112da:	8ee1a223          	sw	a4,-1820(gp) # 80000b84 <current>
200112de:	a031                	j	200112ea <scheduler_RoundRobin+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:86
		//current_ptr = find(1);
	else
		current = current->next;
200112e0:	8e41a783          	lw	a5,-1820(gp) # 80000b84 <current>
200112e4:	43d8                	lw	a4,4(a5)
200112e6:	8ee1a223          	sw	a4,-1820(gp) # 80000b84 <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:87
	current->state = running;
200112ea:	8e41a783          	lw	a5,-1820(gp) # 80000b84 <current>
200112ee:	4705                	li	a4,1
200112f0:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.c:88
}
200112f2:	0001                	nop
200112f4:	40b2                	lw	ra,12(sp)
200112f6:	4422                	lw	s0,8(sp)
200112f8:	0141                	addi	sp,sp,16
200112fa:	8082                	ret

200112fc <main>:
main():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/main.c:10
#include "kernel.h"
#include <stdio.h>
#include "task.h"
//#include "list.h"

int main() {
200112fc:	1141                	addi	sp,sp,-16
200112fe:	c606                	sw	ra,12(sp)
20011300:	c422                	sw	s0,8(sp)
20011302:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/main.c:11
	printf("RISC-V Kernel\n");
20011304:	200107b7          	lui	a5,0x20010
20011308:	36878513          	addi	a0,a5,872 # 20010368 <use_hfxosc+0x2c>
2001130c:	015000ef          	jal	ra,20011b20 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/main.c:12
    task_create(&task);
20011310:	200117b7          	lui	a5,0x20011
20011314:	56878513          	addi	a0,a5,1384 # 20011568 <task>
20011318:	3529                	jal	20011122 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/main.c:13
	kernel_launch();
2001131a:	3f05                	jal	2001124a <kernel_launch>
2001131c:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/main.c:14
}
2001131e:	853e                	mv	a0,a5
20011320:	40b2                	lw	ra,12(sp)
20011322:	4422                	lw	s0,8(sp)
20011324:	0141                	addi	sp,sp,16
20011326:	8082                	ret

20011328 <createList>:
createList():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:10
 *      Author: jjrh
 */

#include "list.h"

list_t* createList(list_t* list){
20011328:	1101                	addi	sp,sp,-32
2001132a:	ce06                	sw	ra,28(sp)
2001132c:	cc22                	sw	s0,24(sp)
2001132e:	1000                	addi	s0,sp,32
20011330:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:11
    list = (list_t*) malloc(sizeof(list_t));
20011334:	4521                	li	a0,8
20011336:	2389                	jal	20011878 <malloc>
20011338:	87aa                	mv	a5,a0
2001133a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:12
    list->head = NULL;
2001133e:	fec42783          	lw	a5,-20(s0)
20011342:	0007a023          	sw	zero,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:13
    return list;
20011346:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:14
}
2001134a:	853e                	mv	a0,a5
2001134c:	40f2                	lw	ra,28(sp)
2001134e:	4462                	lw	s0,24(sp)
20011350:	6105                	addi	sp,sp,32
20011352:	8082                	ret

20011354 <createNode>:
createNode():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:20

void destroyList(list_t* list){
    free(list);
}

node_t* createNode(){
20011354:	1101                	addi	sp,sp,-32
20011356:	ce06                	sw	ra,28(sp)
20011358:	cc22                	sw	s0,24(sp)
2001135a:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:21
    node_t* node = (node_t*) malloc(sizeof(node_t));
2001135c:	4541                	li	a0,16
2001135e:	2b29                	jal	20011878 <malloc>
20011360:	87aa                	mv	a5,a0
20011362:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:22
    node->stackPt =0;
20011366:	fec42783          	lw	a5,-20(s0)
2001136a:	0007a023          	sw	zero,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:23
    node->next = NULL;
2001136e:	fec42783          	lw	a5,-20(s0)
20011372:	0007a223          	sw	zero,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:24
    node->id = 0;
20011376:	fec42783          	lw	a5,-20(s0)
2001137a:	0007a423          	sw	zero,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:25
    node->state = 0;
2001137e:	fec42783          	lw	a5,-20(s0)
20011382:	0007a623          	sw	zero,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:26
    return node;
20011386:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:27
}
2001138a:	853e                	mv	a0,a5
2001138c:	40f2                	lw	ra,28(sp)
2001138e:	4462                	lw	s0,24(sp)
20011390:	6105                	addi	sp,sp,32
20011392:	8082                	ret

20011394 <addLast>:
addLast():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:39
    node_t* node = createNode();
    node->next = list->head;
    list->head = node;
}

void addLast(list_t* list, node_t* node_1){
20011394:	7179                	addi	sp,sp,-48
20011396:	d606                	sw	ra,44(sp)
20011398:	d422                	sw	s0,40(sp)
2001139a:	1800                	addi	s0,sp,48
2001139c:	fca42e23          	sw	a0,-36(s0)
200113a0:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:40
    node_t* node = createNode();
200113a4:	3f45                	jal	20011354 <createNode>
200113a6:	fea42423          	sw	a0,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:41
    node->id = node_1->id;
200113aa:	fd842783          	lw	a5,-40(s0)
200113ae:	4798                	lw	a4,8(a5)
200113b0:	fe842783          	lw	a5,-24(s0)
200113b4:	c798                	sw	a4,8(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:42
    node->stackPt = node_1->stackPt;
200113b6:	fd842783          	lw	a5,-40(s0)
200113ba:	4398                	lw	a4,0(a5)
200113bc:	fe842783          	lw	a5,-24(s0)
200113c0:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:43
    node->state = node_1->state;
200113c2:	fd842783          	lw	a5,-40(s0)
200113c6:	47d8                	lw	a4,12(a5)
200113c8:	fe842783          	lw	a5,-24(s0)
200113cc:	c7d8                	sw	a4,12(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:44
    if(list->head == NULL){
200113ce:	fdc42783          	lw	a5,-36(s0)
200113d2:	439c                	lw	a5,0(a5)
200113d4:	ef89                	bnez	a5,200113ee <addLast+0x5a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:45
        node->next = list->head;
200113d6:	fdc42783          	lw	a5,-36(s0)
200113da:	4398                	lw	a4,0(a5)
200113dc:	fe842783          	lw	a5,-24(s0)
200113e0:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:46
        list->head = node;
200113e2:	fdc42783          	lw	a5,-36(s0)
200113e6:	fe842703          	lw	a4,-24(s0)
200113ea:	c398                	sw	a4,0(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:54
        while (temp_node->next != NULL){
            temp_node = temp_node->next;
        }
        temp_node->next = node;
    }
}
200113ec:	a02d                	j	20011416 <addLast+0x82>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:48
        node_t* temp_node = list->head;
200113ee:	fdc42783          	lw	a5,-36(s0)
200113f2:	439c                	lw	a5,0(a5)
200113f4:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:49
        while (temp_node->next != NULL){
200113f8:	a031                	j	20011404 <addLast+0x70>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:50
            temp_node = temp_node->next;
200113fa:	fec42783          	lw	a5,-20(s0)
200113fe:	43dc                	lw	a5,4(a5)
20011400:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:49
        while (temp_node->next != NULL){
20011404:	fec42783          	lw	a5,-20(s0)
20011408:	43dc                	lw	a5,4(a5)
2001140a:	fbe5                	bnez	a5,200113fa <addLast+0x66>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:52
        temp_node->next = node;
2001140c:	fec42783          	lw	a5,-20(s0)
20011410:	fe842703          	lw	a4,-24(s0)
20011414:	c3d8                	sw	a4,4(a5)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:54
}
20011416:	0001                	nop
20011418:	50b2                	lw	ra,44(sp)
2001141a:	5422                	lw	s0,40(sp)
2001141c:	6145                	addi	sp,sp,48
2001141e:	8082                	ret

20011420 <get>:
get():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:76
        node->next = temp_node->next;
        temp_node->next = node;
    }
}

node_t* get(int n, list_t* list){
20011420:	7179                	addi	sp,sp,-48
20011422:	d622                	sw	s0,44(sp)
20011424:	1800                	addi	s0,sp,48
20011426:	fca42e23          	sw	a0,-36(s0)
2001142a:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:77
    if(list->head==NULL){
2001142e:	fd842783          	lw	a5,-40(s0)
20011432:	439c                	lw	a5,0(a5)
20011434:	e399                	bnez	a5,2001143a <get+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:78
        return NULL;
20011436:	4781                	li	a5,0
20011438:	a0b9                	j	20011486 <get+0x66>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:80
    }else{
        node_t* temp_node = list->head;
2001143a:	fd842783          	lw	a5,-40(s0)
2001143e:	439c                	lw	a5,0(a5)
20011440:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:81
        int position = 0;
20011444:	fe042423          	sw	zero,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:82
        while (position < n && temp_node->next != NULL){
20011448:	a819                	j	2001145e <get+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:83
            temp_node = temp_node->next;
2001144a:	fec42783          	lw	a5,-20(s0)
2001144e:	43dc                	lw	a5,4(a5)
20011450:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:84
            position++;
20011454:	fe842783          	lw	a5,-24(s0)
20011458:	0785                	addi	a5,a5,1
2001145a:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:82
        while (position < n && temp_node->next != NULL){
2001145e:	fe842703          	lw	a4,-24(s0)
20011462:	fdc42783          	lw	a5,-36(s0)
20011466:	00f75663          	bge	a4,a5,20011472 <get+0x52>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:82 (discriminator 1)
2001146a:	fec42783          	lw	a5,-20(s0)
2001146e:	43dc                	lw	a5,4(a5)
20011470:	ffe9                	bnez	a5,2001144a <get+0x2a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:86
        }
        if(position !=n){
20011472:	fe842703          	lw	a4,-24(s0)
20011476:	fdc42783          	lw	a5,-36(s0)
2001147a:	00f70463          	beq	a4,a5,20011482 <get+0x62>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:87
            return NULL;
2001147e:	4781                	li	a5,0
20011480:	a019                	j	20011486 <get+0x66>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:89
        }else{
            return temp_node;
20011482:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:92
        }
    }
}
20011486:	853e                	mv	a0,a5
20011488:	5432                	lw	s0,44(sp)
2001148a:	6145                	addi	sp,sp,48
2001148c:	8082                	ret

2001148e <deleteElement>:
deleteElement():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:133
            destroyNode(node_delete);
        }
    }
}

void deleteElement(list_t* list,int id) {
2001148e:	7179                	addi	sp,sp,-48
20011490:	d622                	sw	s0,44(sp)
20011492:	1800                	addi	s0,sp,48
20011494:	fca42e23          	sw	a0,-36(s0)
20011498:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:135

   node_t* current = list->head;
2001149c:	fdc42783          	lw	a5,-36(s0)
200114a0:	439c                	lw	a5,0(a5)
200114a2:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:136
   node_t* previous = NULL;
200114a6:	fe042423          	sw	zero,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:138

   if(list->head == NULL) {
200114aa:	fdc42783          	lw	a5,-36(s0)
200114ae:	439c                	lw	a5,0(a5)
200114b0:	cfa1                	beqz	a5,20011508 <deleteElement+0x7a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:142
      return;
   }

   while(current->id != id) {
200114b2:	a831                	j	200114ce <deleteElement+0x40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:143
      if(current->next == NULL) {
200114b4:	fec42783          	lw	a5,-20(s0)
200114b8:	43dc                	lw	a5,4(a5)
200114ba:	cba9                	beqz	a5,2001150c <deleteElement+0x7e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:146
         return;
      } else {
         previous = current;
200114bc:	fec42783          	lw	a5,-20(s0)
200114c0:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:147
         current = current->next;
200114c4:	fec42783          	lw	a5,-20(s0)
200114c8:	43dc                	lw	a5,4(a5)
200114ca:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:142
   while(current->id != id) {
200114ce:	fec42783          	lw	a5,-20(s0)
200114d2:	479c                	lw	a5,8(a5)
200114d4:	fd842703          	lw	a4,-40(s0)
200114d8:	fcf71ee3          	bne	a4,a5,200114b4 <deleteElement+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:151
      }
   }

   if(current == list->head) {
200114dc:	fdc42783          	lw	a5,-36(s0)
200114e0:	439c                	lw	a5,0(a5)
200114e2:	fec42703          	lw	a4,-20(s0)
200114e6:	00f71a63          	bne	a4,a5,200114fa <deleteElement+0x6c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:152
      list->head = list->head->next;
200114ea:	fdc42783          	lw	a5,-36(s0)
200114ee:	439c                	lw	a5,0(a5)
200114f0:	43d8                	lw	a4,4(a5)
200114f2:	fdc42783          	lw	a5,-36(s0)
200114f6:	c398                	sw	a4,0(a5)
200114f8:	a819                	j	2001150e <deleteElement+0x80>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:154
   } else {
      previous->next = current->next;
200114fa:	fec42783          	lw	a5,-20(s0)
200114fe:	43d8                	lw	a4,4(a5)
20011500:	fe842783          	lw	a5,-24(s0)
20011504:	c3d8                	sw	a4,4(a5)
20011506:	a021                	j	2001150e <deleteElement+0x80>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:139
      return;
20011508:	0001                	nop
2001150a:	a011                	j	2001150e <deleteElement+0x80>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:144
         return;
2001150c:	0001                	nop
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:156
   }
}
2001150e:	5432                	lw	s0,44(sp)
20011510:	6145                	addi	sp,sp,48
20011512:	8082                	ret

20011514 <find>:
find():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:158

node_t* find(list_t* list, int id){
20011514:	7179                	addi	sp,sp,-48
20011516:	d622                	sw	s0,44(sp)
20011518:	1800                	addi	s0,sp,48
2001151a:	fca42e23          	sw	a0,-36(s0)
2001151e:	fcb42c23          	sw	a1,-40(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:159
    node_t* temp_node = list->head;
20011522:	fdc42783          	lw	a5,-36(s0)
20011526:	439c                	lw	a5,0(a5)
20011528:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:160
    if(list->head == NULL){
2001152c:	fdc42783          	lw	a5,-36(s0)
20011530:	439c                	lw	a5,0(a5)
20011532:	ef91                	bnez	a5,2001154e <find+0x3a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:161
        return NULL;
20011534:	4781                	li	a5,0
20011536:	a02d                	j	20011560 <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:164
    }
    while (temp_node->id != id){
        if(temp_node->next == NULL){
20011538:	fec42783          	lw	a5,-20(s0)
2001153c:	43dc                	lw	a5,4(a5)
2001153e:	e399                	bnez	a5,20011544 <find+0x30>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:165
            return NULL;
20011540:	4781                	li	a5,0
20011542:	a839                	j	20011560 <find+0x4c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:167
        }else{
            temp_node = temp_node->next;
20011544:	fec42783          	lw	a5,-20(s0)
20011548:	43dc                	lw	a5,4(a5)
2001154a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:163
    while (temp_node->id != id){
2001154e:	fec42783          	lw	a5,-20(s0)
20011552:	479c                	lw	a5,8(a5)
20011554:	fd842703          	lw	a4,-40(s0)
20011558:	fef710e3          	bne	a4,a5,20011538 <find+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:170
        }
    }
    return temp_node;
2001155c:	fec42783          	lw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/list.c:171
}
20011560:	853e                	mv	a0,a5
20011562:	5432                	lw	s0,44(sp)
20011564:	6145                	addi	sp,sp,48
20011566:	8082                	ret

20011568 <task>:
task():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:13
#include "task.h"
//extern void switch_to(void);

uint32_t count = 0, count1= 0, count2= 0, count3= 0;

void task(void){
20011568:	1141                	addi	sp,sp,-16
2001156a:	c606                	sw	ra,12(sp)
2001156c:	c422                	sw	s0,8(sp)
2001156e:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:15
	while(1){
		if(count == 0){
20011570:	800017b7          	lui	a5,0x80001
20011574:	acc7a783          	lw	a5,-1332(a5) # 80000acc <metal_segment_heap_target_end+0xffffe7bc>
20011578:	ef8d                	bnez	a5,200115b2 <task+0x4a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:16
			count++;
2001157a:	800017b7          	lui	a5,0x80001
2001157e:	acc7a783          	lw	a5,-1332(a5) # 80000acc <metal_segment_heap_target_end+0xffffe7bc>
20011582:	00178713          	addi	a4,a5,1
20011586:	800017b7          	lui	a5,0x80001
2001158a:	ace7a623          	sw	a4,-1332(a5) # 80000acc <metal_segment_heap_target_end+0xffffe7bc>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:17
			task_create(&task1);
2001158e:	200117b7          	lui	a5,0x20011
20011592:	5c878513          	addi	a0,a5,1480 # 200115c8 <task1>
20011596:	3671                	jal	20011122 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:18
			task_create(&task2);
20011598:	200117b7          	lui	a5,0x20011
2001159c:	61278513          	addi	a0,a5,1554 # 20011612 <task2>
200115a0:	3649                	jal	20011122 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:19
			task_create(&task3);
200115a2:	200117b7          	lui	a5,0x20011
200115a6:	62e78513          	addi	a0,a5,1582 # 2001162e <task3>
200115aa:	3ea5                	jal	20011122 <task_create>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:22
			//printList();
			//semaphore_init(&semaphore, 1);
			task_end();
200115ac:	39b5                	jal	20011228 <task_end>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:23
			asm volatile("wfi");
200115ae:	10500073          	wfi
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:25
		}
		count++;
200115b2:	800017b7          	lui	a5,0x80001
200115b6:	acc7a783          	lw	a5,-1332(a5) # 80000acc <metal_segment_heap_target_end+0xffffe7bc>
200115ba:	00178713          	addi	a4,a5,1
200115be:	800017b7          	lui	a5,0x80001
200115c2:	ace7a623          	sw	a4,-1332(a5) # 80000acc <metal_segment_heap_target_end+0xffffe7bc>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:15
		if(count == 0){
200115c6:	b76d                	j	20011570 <task+0x8>

200115c8 <task1>:
task1():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:30
	}
}

// Concurrency test
void task1(void){
200115c8:	1101                	addi	sp,sp,-32
200115ca:	ce22                	sw	s0,28(sp)
200115cc:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:32
	while(1){
		count1++;
200115ce:	800017b7          	lui	a5,0x80001
200115d2:	ad07a783          	lw	a5,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xffffe7c0>
200115d6:	00178713          	addi	a4,a5,1
200115da:	800017b7          	lui	a5,0x80001
200115de:	ace7a823          	sw	a4,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xffffe7c0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:33
		for(int i=0; i<9;i++){}
200115e2:	fe042623          	sw	zero,-20(s0)
200115e6:	a031                	j	200115f2 <task1+0x2a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:33 (discriminator 3)
200115e8:	fec42783          	lw	a5,-20(s0)
200115ec:	0785                	addi	a5,a5,1
200115ee:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:33 (discriminator 1)
200115f2:	fec42703          	lw	a4,-20(s0)
200115f6:	47a1                	li	a5,8
200115f8:	fee7d8e3          	bge	a5,a4,200115e8 <task1+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:34
		count1++;
200115fc:	800017b7          	lui	a5,0x80001
20011600:	ad07a783          	lw	a5,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xffffe7c0>
20011604:	00178713          	addi	a4,a5,1
20011608:	800017b7          	lui	a5,0x80001
2001160c:	ace7a823          	sw	a4,-1328(a5) # 80000ad0 <metal_segment_heap_target_end+0xffffe7c0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:32
		count1++;
20011610:	bf7d                	j	200115ce <task1+0x6>

20011612 <task2>:
task2():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:41
		//count1++;
		//printf("task 1 counter: %d\n", count1);
	}
}

void task2(void){
20011612:	1141                	addi	sp,sp,-16
20011614:	c622                	sw	s0,12(sp)
20011616:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:43 (discriminator 1)
	while(1){
		count2++;
20011618:	800017b7          	lui	a5,0x80001
2001161c:	ad47a783          	lw	a5,-1324(a5) # 80000ad4 <metal_segment_heap_target_end+0xffffe7c4>
20011620:	00178713          	addi	a4,a5,1
20011624:	800017b7          	lui	a5,0x80001
20011628:	ace7aa23          	sw	a4,-1324(a5) # 80000ad4 <metal_segment_heap_target_end+0xffffe7c4>
2001162c:	b7f5                	j	20011618 <task2+0x6>

2001162e <task3>:
task3():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:48
		//printf("task 2 counter: %d\n", count2);
	}
}

void task3(void){
2001162e:	1141                	addi	sp,sp,-16
20011630:	c622                	sw	s0,12(sp)
20011632:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/task.c:50 (discriminator 1)
	while(1){
		count3++;
20011634:	800017b7          	lui	a5,0x80001
20011638:	ad87a783          	lw	a5,-1320(a5) # 80000ad8 <metal_segment_heap_target_end+0xffffe7c8>
2001163c:	00178713          	addi	a4,a5,1
20011640:	800017b7          	lui	a5,0x80001
20011644:	ace7ac23          	sw	a4,-1320(a5) # 80000ad8 <metal_segment_heap_target_end+0xffffe7c8>
20011648:	b7f5                	j	20011634 <task3+0x6>

2001164a <handle_interrupt>:
handle_interrupt():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:14

#define CLINT_BASE 0x2000000
#define MTIME (volatile unsigned long long int *)(CLINT_BASE + 0xbff8)
#define MTIMECMP (volatile unsigned long long int *)(CLINT_BASE + 0x4000)

void handle_interrupt(uint32_t mcause) {
2001164a:	1101                	addi	sp,sp,-32
2001164c:	ce06                	sw	ra,28(sp)
2001164e:	cc22                	sw	s0,24(sp)
20011650:	1000                	addi	s0,sp,32
20011652:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:15
    if ((mcause << 1 >> 1) == 0x7) {
20011656:	fec42703          	lw	a4,-20(s0)
2001165a:	800007b7          	lui	a5,0x80000
2001165e:	fff7c793          	not	a5,a5
20011662:	8f7d                	and	a4,a4,a5
20011664:	479d                	li	a5,7
20011666:	04f71463          	bne	a4,a5,200116ae <handle_interrupt+0x64>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:16
        printf("Switch context \n");
2001166a:	200107b7          	lui	a5,0x20010
2001166e:	37878513          	addi	a0,a5,888 # 20010378 <use_hfxosc+0x3c>
20011672:	217d                	jal	20011b20 <puts>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:19
       // printList(readyList);
        //*MTIMECMP = *MTIME + 0xfffff * 5;
    	*MTIMECMP = *MTIME + 0x41111;
20011674:	0200c7b7          	lui	a5,0x200c
20011678:	17e1                	addi	a5,a5,-8
2001167a:	4398                	lw	a4,0(a5)
2001167c:	43dc                	lw	a5,4(a5)
2001167e:	02004837          	lui	a6,0x2004
20011682:	00041537          	lui	a0,0x41
20011686:	11150513          	addi	a0,a0,273 # 41111 <__heap_size+0x40911>
2001168a:	4581                	li	a1,0
2001168c:	00a70633          	add	a2,a4,a0
20011690:	88b2                	mv	a7,a2
20011692:	00e8b8b3          	sltu	a7,a7,a4
20011696:	00b786b3          	add	a3,a5,a1
2001169a:	00d887b3          	add	a5,a7,a3
2001169e:	86be                	mv	a3,a5
200116a0:	8732                	mv	a4,a2
200116a2:	87b6                	mv	a5,a3
200116a4:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
200116a8:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:25
    } else {
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1)
            ;
    }
}
200116ac:	a839                	j	200116ca <handle_interrupt+0x80>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:21
        printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
200116ae:	fec42703          	lw	a4,-20(s0)
200116b2:	800007b7          	lui	a5,0x80000
200116b6:	fff7c793          	not	a5,a5
200116ba:	8ff9                	and	a5,a5,a4
200116bc:	85be                	mv	a1,a5
200116be:	200107b7          	lui	a5,0x20010
200116c2:	38878513          	addi	a0,a5,904 # 20010388 <use_hfxosc+0x4c>
200116c6:	2689                	jal	20011a08 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:22 (discriminator 1)
        while (1)
200116c8:	a001                	j	200116c8 <handle_interrupt+0x7e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:25
}
200116ca:	40f2                	lw	ra,28(sp)
200116cc:	4462                	lw	s0,24(sp)
200116ce:	6105                	addi	sp,sp,32
200116d0:	8082                	ret

200116d2 <handle_exception>:
handle_exception():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:27

void handle_exception(uint32_t mcause) {
200116d2:	7179                	addi	sp,sp,-48
200116d4:	d606                	sw	ra,44(sp)
200116d6:	d422                	sw	s0,40(sp)
200116d8:	1800                	addi	s0,sp,48
200116da:	fca42e23          	sw	a0,-36(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:30
    unsigned long long int mie;

    if (mcause == 0x8) {
200116de:	fdc42703          	lw	a4,-36(s0)
200116e2:	47a1                	li	a5,8
200116e4:	06f71663          	bne	a4,a5,20011750 <handle_exception+0x7e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:31
        *MTIMECMP = *MTIME + 0xfffff * 25;
200116e8:	0200c7b7          	lui	a5,0x200c
200116ec:	17e1                	addi	a5,a5,-8
200116ee:	4398                	lw	a4,0(a5)
200116f0:	43dc                	lw	a5,4(a5)
200116f2:	02004837          	lui	a6,0x2004
200116f6:	01900537          	lui	a0,0x1900
200116fa:	151d                	addi	a0,a0,-25
200116fc:	4581                	li	a1,0
200116fe:	00a70633          	add	a2,a4,a0
20011702:	88b2                	mv	a7,a2
20011704:	00e8b8b3          	sltu	a7,a7,a4
20011708:	00b786b3          	add	a3,a5,a1
2001170c:	00d887b3          	add	a5,a7,a3
20011710:	86be                	mv	a3,a5
20011712:	8732                	mv	a4,a2
20011714:	87b6                	mv	a5,a3
20011716:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
2001171a:	00f82223          	sw	a5,4(a6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:33

        asm volatile("csrr %0, mie" : "=r"(mie));
2001171e:	30402773          	csrr	a4,mie
20011722:	fee42423          	sw	a4,-24(s0)
20011726:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:34
        mie |= (1 << 7);
2001172a:	fe842783          	lw	a5,-24(s0)
2001172e:	0807e793          	ori	a5,a5,128
20011732:	fef42423          	sw	a5,-24(s0)
20011736:	fec42783          	lw	a5,-20(s0)
2001173a:	0007e793          	ori	a5,a5,0
2001173e:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:35
        asm volatile("csrw mie, %0" : "=r"(mie));
20011742:	30471073          	csrw	mie,a4
20011746:	fee42423          	sw	a4,-24(s0)
2001174a:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:41
    } else {
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
        while (1){
        };
    }
}
2001174e:	a839                	j	2001176c <handle_exception+0x9a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:37
    	printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
20011750:	fdc42703          	lw	a4,-36(s0)
20011754:	800007b7          	lui	a5,0x80000
20011758:	fff7c793          	not	a5,a5
2001175c:	8ff9                	and	a5,a5,a4
2001175e:	85be                	mv	a1,a5
20011760:	200107b7          	lui	a5,0x20010
20011764:	38878513          	addi	a0,a5,904 # 20010388 <use_hfxosc+0x4c>
20011768:	2445                	jal	20011a08 <iprintf>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:38 (discriminator 1)
        while (1){
2001176a:	a001                	j	2001176a <handle_exception+0x98>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:41
}
2001176c:	50b2                	lw	ra,44(sp)
2001176e:	5422                	lw	s0,40(sp)
20011770:	6145                	addi	sp,sp,48
20011772:	8082                	ret

20011774 <handle_trap>:
handle_trap():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:43

void handle_trap() {
20011774:	1101                	addi	sp,sp,-32
20011776:	ce06                	sw	ra,28(sp)
20011778:	cc22                	sw	s0,24(sp)
2001177a:	1000                	addi	s0,sp,32
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:45
    uint32_t mcause, mepc;
    asm volatile("csrr %0, mcause" : "=r"(mcause));
2001177c:	342027f3          	csrr	a5,mcause
20011780:	fef42623          	sw	a5,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:46
    asm volatile("csrr %0, mepc" : "=r"(mepc));
20011784:	341027f3          	csrr	a5,mepc
20011788:	fef42423          	sw	a5,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:48

    if (mcause >> 31) {
2001178c:	fec42783          	lw	a5,-20(s0)
20011790:	0007d663          	bgez	a5,2001179c <handle_trap+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:49
        handle_interrupt(mcause);
20011794:	fec42503          	lw	a0,-20(s0)
20011798:	3d4d                	jal	2001164a <handle_interrupt>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:56
        handle_exception(mcause);
        asm volatile("csrr t0, mepc");
        asm volatile("addi t0, t0, 0x4");
        asm volatile("csrw mepc, t0");
    }
}
2001179a:	a809                	j	200117ac <handle_trap+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:51
        handle_exception(mcause);
2001179c:	fec42503          	lw	a0,-20(s0)
200117a0:	3f0d                	jal	200116d2 <handle_exception>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:52
        asm volatile("csrr t0, mepc");
200117a2:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:53
        asm volatile("addi t0, t0, 0x4");
200117a6:	0291                	addi	t0,t0,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:54
        asm volatile("csrw mepc, t0");
200117a8:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/trap.c:56
}
200117ac:	0001                	nop
200117ae:	40f2                	lw	ra,28(sp)
200117b0:	4462                	lw	s0,24(sp)
200117b2:	6105                	addi	sp,sp,32
200117b4:	8082                	ret
	...

200117b8 <osSchedulerLaunch>:
osSchedulerLaunch():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:6
.section .text
.global osSchedulerLaunch
.type osSchedulerLaunch, @function
.extern current
osSchedulerLaunch:
    lw t0, current   # Load currentPt into T0
200117b8:	8e41a283          	lw	t0,-1820(gp) # 80000b84 <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:7
    lw t1, (t0)
200117bc:	0002a303          	lw	t1,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:8
    lw sp, (t0)        # t1 = &t0
200117c0:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:9
    sw sp, 4(sp)         # store sp
200117c4:	c20a                	sw	sp,4(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:10
    lw ra, (sp)
200117c6:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:11
    addi sp, sp, -132   # make a stack frame
200117c8:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:12
    ret
200117cc:	8082                	ret
200117ce:	0001                	nop

200117d0 <switch_to>:
switch_to():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:21
.global switch_to
.type switch_to, @function
.align 2
switch_to:

    lw t6, current       # Load currentPt into T0
200117d0:	8e41af83          	lw	t6,-1820(gp) # 80000b84 <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:22
    lw sp, (t6)
200117d4:	000fa103          	lw	sp,0(t6)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:23
    addi sp, sp, -132    # make a stack frame
200117d8:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:28

   # mv tp, sp
   # mv sp, fp
    #Push register
    sw ra, (sp)
200117dc:	c006                	sw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:30
    #sw sp, 4(sp)
    sw gp, 8(sp)
200117de:	c40e                	sw	gp,8(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:31
    sw tp, 12(sp)
200117e0:	c612                	sw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:32
    sw t0, 16(sp)
200117e2:	c816                	sw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:33
    sw t1, 20(sp)
200117e4:	ca1a                	sw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:34
    sw t2, 24(sp)
200117e6:	cc1e                	sw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:35
    sw t3, 28(sp)
200117e8:	ce72                	sw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:36
    sw s0, 32(sp)
200117ea:	d022                	sw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:37
    sw s1, 36(sp)
200117ec:	d226                	sw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:38
    sw a0, 40(sp)
200117ee:	d42a                	sw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:39
    sw a1, 44(sp)
200117f0:	d62e                	sw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:40
    sw a2, 48(sp)
200117f2:	d832                	sw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:41
    sw a3, 52(sp)
200117f4:	da36                	sw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:42
    sw a4, 56(sp)
200117f6:	dc3a                	sw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:43
    sw a5, 60(sp)
200117f8:	de3e                	sw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:44
    sw a6, 64(sp)
200117fa:	c0c2                	sw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:45
    sw a7, 68(sp)
200117fc:	c2c6                	sw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:46
    sw s2, 72(sp)
200117fe:	c4ca                	sw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:47
    sw s3, 76(sp)
20011800:	c6ce                	sw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:48
    sw s4, 80(sp)
20011802:	c8d2                	sw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:49
    sw s5, 84(sp)
20011804:	cad6                	sw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:50
    sw s6, 88(sp)
20011806:	ccda                	sw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:51
    sw s7, 92(sp)
20011808:	cede                	sw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:52
    sw s8, 96(sp)
2001180a:	d0e2                	sw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:53
    sw s9, 100(sp)
2001180c:	d2e6                	sw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:54
    sw s10,104(sp)
2001180e:	d4ea                	sw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:55
    sw s11,108(sp)
20011810:	d6ee                	sw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:56
    sw t3, 112(sp)
20011812:	d8f2                	sw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:57
    sw t4, 116(sp)
20011814:	daf6                	sw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:58
    sw t5, 120(sp)
20011816:	dcfa                	sw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:59
    sw t6, 124(sp)
20011818:	defe                	sw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:60
    csrr t0, mepc
2001181a:	341022f3          	csrr	t0,mepc
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:61
    sw t0, 132(sp)
2001181e:	c316                	sw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:63

    call handle_trap
20011820:	3f91                	jal	20011774 <handle_trap>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:77
    #addi sp, sp, -132  # make a stack frame
    #lw t0, 132(sp)     # load mepc
    #csrw mepc, t0

    #Switch context in c
    call scheduler_RoundRobin
20011822:	3c51                	jal	200112b6 <scheduler_RoundRobin>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:78
    lw t0, current       # Load currentPt into T0
20011824:	8e41a283          	lw	t0,-1820(gp) # 80000b84 <current>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:79
    lw sp, (t0)
20011828:	0002a103          	lw	sp,0(t0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:80
    addi sp, sp, -132    # make a stack frame
2001182c:	f7c10113          	addi	sp,sp,-132
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:81
    sw sp, 4(sp)         # store sp
20011830:	c20a                	sw	sp,4(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:82
    lw t0, 132(sp)       # load mepc
20011832:	429a                	lw	t0,132(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:83
    csrw mepc, t0
20011834:	34129073          	csrw	mepc,t0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:87


    #Pop register
    lw ra, (sp)
20011838:	4082                	lw	ra,0(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:90
    #lw sp, 4(sp)
    #lw gp, 8(sp)
    lw tp, 12(sp)
2001183a:	4232                	lw	tp,12(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:91
    lw t0, 16(sp)
2001183c:	42c2                	lw	t0,16(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:92
    lw t1, 20(sp)
2001183e:	4352                	lw	t1,20(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:93
    lw t2, 24(sp)
20011840:	43e2                	lw	t2,24(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:94
    lw t3, 28(sp)
20011842:	4e72                	lw	t3,28(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:95
    lw s0, 32(sp)
20011844:	5402                	lw	s0,32(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:96
    lw s1, 36(sp)
20011846:	5492                	lw	s1,36(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:97
    lw a0, 40(sp)
20011848:	5522                	lw	a0,40(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:98
    lw a1, 44(sp)
2001184a:	55b2                	lw	a1,44(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:99
    lw a2, 48(sp)
2001184c:	5642                	lw	a2,48(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:100
    lw a3, 52(sp)
2001184e:	56d2                	lw	a3,52(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:101
    lw a4, 56(sp)
20011850:	5762                	lw	a4,56(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:102
    lw a5, 60(sp)
20011852:	57f2                	lw	a5,60(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:103
    lw a6, 64(sp)
20011854:	4806                	lw	a6,64(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:104
    lw a7, 68(sp)
20011856:	4896                	lw	a7,68(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:105
    lw s2, 72(sp)
20011858:	4926                	lw	s2,72(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:106
    lw s3, 76(sp)
2001185a:	49b6                	lw	s3,76(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:107
    lw s4, 80(sp)
2001185c:	4a46                	lw	s4,80(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:108
    lw s5, 84(sp)
2001185e:	4ad6                	lw	s5,84(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:109
    lw s6, 88(sp)
20011860:	4b66                	lw	s6,88(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:110
    lw s7, 92(sp)
20011862:	4bf6                	lw	s7,92(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:111
    lw s8, 96(sp)
20011864:	5c06                	lw	s8,96(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:112
    lw s9, 100(sp)
20011866:	5c96                	lw	s9,100(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:113
    lw s10,104(sp)
20011868:	5d26                	lw	s10,104(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:114
    lw s11,108(sp)
2001186a:	5db6                	lw	s11,108(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:115
    lw t3, 112(sp)
2001186c:	5e46                	lw	t3,112(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:116
    lw t4, 116(sp)
2001186e:	5ed6                	lw	t4,116(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:117
    lw t5, 120(sp)
20011870:	5f66                	lw	t5,120(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:118
    lw t6, 124(sp)
20011872:	5ff6                	lw	t6,124(sp)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\src/kernel.S:120

    mret
20011874:	30200073          	mret

20011878 <malloc>:
malloc():
20011878:	85aa                	mv	a1,a0
2001187a:	5ffef517          	auipc	a0,0x5ffef
2001187e:	22652503          	lw	a0,550(a0) # 80000aa0 <_impure_ptr>
20011882:	a065                	j	2001192a <_malloc_r>

20011884 <_free_r>:
_free_r():
20011884:	c1d5                	beqz	a1,20011928 <_free_r+0xa4>
20011886:	ffc5a783          	lw	a5,-4(a1)
2001188a:	1101                	addi	sp,sp,-32
2001188c:	cc22                	sw	s0,24(sp)
2001188e:	ce06                	sw	ra,28(sp)
20011890:	ffc58413          	addi	s0,a1,-4
20011894:	0007d363          	bgez	a5,2001189a <_free_r+0x16>
20011898:	943e                	add	s0,s0,a5
2001189a:	c62a                	sw	a0,12(sp)
2001189c:	1fd000ef          	jal	ra,20012298 <__malloc_lock>
200118a0:	5ffef717          	auipc	a4,0x5ffef
200118a4:	23c70713          	addi	a4,a4,572 # 80000adc <__malloc_free_list>
200118a8:	431c                	lw	a5,0(a4)
200118aa:	4532                	lw	a0,12(sp)
200118ac:	eb89                	bnez	a5,200118be <_free_r+0x3a>
200118ae:	00042223          	sw	zero,4(s0)
200118b2:	c300                	sw	s0,0(a4)
200118b4:	4462                	lw	s0,24(sp)
200118b6:	40f2                	lw	ra,28(sp)
200118b8:	6105                	addi	sp,sp,32
200118ba:	1e10006f          	j	2001229a <__malloc_unlock>
200118be:	00f47d63          	bgeu	s0,a5,200118d8 <_free_r+0x54>
200118c2:	4010                	lw	a2,0(s0)
200118c4:	00c406b3          	add	a3,s0,a2
200118c8:	00d79663          	bne	a5,a3,200118d4 <_free_r+0x50>
200118cc:	4394                	lw	a3,0(a5)
200118ce:	43dc                	lw	a5,4(a5)
200118d0:	96b2                	add	a3,a3,a2
200118d2:	c014                	sw	a3,0(s0)
200118d4:	c05c                	sw	a5,4(s0)
200118d6:	bff1                	j	200118b2 <_free_r+0x2e>
200118d8:	873e                	mv	a4,a5
200118da:	43dc                	lw	a5,4(a5)
200118dc:	c399                	beqz	a5,200118e2 <_free_r+0x5e>
200118de:	fef47de3          	bgeu	s0,a5,200118d8 <_free_r+0x54>
200118e2:	4314                	lw	a3,0(a4)
200118e4:	00d70633          	add	a2,a4,a3
200118e8:	00861f63          	bne	a2,s0,20011906 <_free_r+0x82>
200118ec:	4010                	lw	a2,0(s0)
200118ee:	96b2                	add	a3,a3,a2
200118f0:	c314                	sw	a3,0(a4)
200118f2:	00d70633          	add	a2,a4,a3
200118f6:	fac79fe3          	bne	a5,a2,200118b4 <_free_r+0x30>
200118fa:	4390                	lw	a2,0(a5)
200118fc:	43dc                	lw	a5,4(a5)
200118fe:	96b2                	add	a3,a3,a2
20011900:	c314                	sw	a3,0(a4)
20011902:	c35c                	sw	a5,4(a4)
20011904:	bf45                	j	200118b4 <_free_r+0x30>
20011906:	00c47563          	bgeu	s0,a2,20011910 <_free_r+0x8c>
2001190a:	47b1                	li	a5,12
2001190c:	c11c                	sw	a5,0(a0)
2001190e:	b75d                	j	200118b4 <_free_r+0x30>
20011910:	4010                	lw	a2,0(s0)
20011912:	00c406b3          	add	a3,s0,a2
20011916:	00d79663          	bne	a5,a3,20011922 <_free_r+0x9e>
2001191a:	4394                	lw	a3,0(a5)
2001191c:	43dc                	lw	a5,4(a5)
2001191e:	96b2                	add	a3,a3,a2
20011920:	c014                	sw	a3,0(s0)
20011922:	c05c                	sw	a5,4(s0)
20011924:	c340                	sw	s0,4(a4)
20011926:	b779                	j	200118b4 <_free_r+0x30>
20011928:	8082                	ret

2001192a <_malloc_r>:
_malloc_r():
2001192a:	1101                	addi	sp,sp,-32
2001192c:	ca26                	sw	s1,20(sp)
2001192e:	00358493          	addi	s1,a1,3
20011932:	98f1                	andi	s1,s1,-4
20011934:	c84a                	sw	s2,16(sp)
20011936:	ce06                	sw	ra,28(sp)
20011938:	cc22                	sw	s0,24(sp)
2001193a:	c64e                	sw	s3,12(sp)
2001193c:	04a1                	addi	s1,s1,8
2001193e:	47b1                	li	a5,12
20011940:	892a                	mv	s2,a0
20011942:	04f4f663          	bgeu	s1,a5,2001198e <_malloc_r+0x64>
20011946:	44b1                	li	s1,12
20011948:	04b4e563          	bltu	s1,a1,20011992 <_malloc_r+0x68>
2001194c:	854a                	mv	a0,s2
2001194e:	14b000ef          	jal	ra,20012298 <__malloc_lock>
20011952:	5ffef697          	auipc	a3,0x5ffef
20011956:	18a68693          	addi	a3,a3,394 # 80000adc <__malloc_free_list>
2001195a:	4298                	lw	a4,0(a3)
2001195c:	843a                	mv	s0,a4
2001195e:	e429                	bnez	s0,200119a8 <_malloc_r+0x7e>
20011960:	5ffef417          	auipc	s0,0x5ffef
20011964:	18040413          	addi	s0,s0,384 # 80000ae0 <__malloc_sbrk_start>
20011968:	401c                	lw	a5,0(s0)
2001196a:	e789                	bnez	a5,20011974 <_malloc_r+0x4a>
2001196c:	4581                	li	a1,0
2001196e:	854a                	mv	a0,s2
20011970:	2a75                	jal	20011b2c <_sbrk_r>
20011972:	c008                	sw	a0,0(s0)
20011974:	85a6                	mv	a1,s1
20011976:	854a                	mv	a0,s2
20011978:	2a55                	jal	20011b2c <_sbrk_r>
2001197a:	59fd                	li	s3,-1
2001197c:	07351a63          	bne	a0,s3,200119f0 <_malloc_r+0xc6>
20011980:	47b1                	li	a5,12
20011982:	00f92023          	sw	a5,0(s2)
20011986:	854a                	mv	a0,s2
20011988:	113000ef          	jal	ra,2001229a <__malloc_unlock>
2001198c:	a031                	j	20011998 <_malloc_r+0x6e>
2001198e:	fa04dde3          	bgez	s1,20011948 <_malloc_r+0x1e>
20011992:	47b1                	li	a5,12
20011994:	00f92023          	sw	a5,0(s2)
20011998:	4501                	li	a0,0
2001199a:	40f2                	lw	ra,28(sp)
2001199c:	4462                	lw	s0,24(sp)
2001199e:	44d2                	lw	s1,20(sp)
200119a0:	4942                	lw	s2,16(sp)
200119a2:	49b2                	lw	s3,12(sp)
200119a4:	6105                	addi	sp,sp,32
200119a6:	8082                	ret
200119a8:	401c                	lw	a5,0(s0)
200119aa:	8f85                	sub	a5,a5,s1
200119ac:	0207cf63          	bltz	a5,200119ea <_malloc_r+0xc0>
200119b0:	462d                	li	a2,11
200119b2:	00f67663          	bgeu	a2,a5,200119be <_malloc_r+0x94>
200119b6:	c01c                	sw	a5,0(s0)
200119b8:	943e                	add	s0,s0,a5
200119ba:	c004                	sw	s1,0(s0)
200119bc:	a029                	j	200119c6 <_malloc_r+0x9c>
200119be:	405c                	lw	a5,4(s0)
200119c0:	02871363          	bne	a4,s0,200119e6 <_malloc_r+0xbc>
200119c4:	c29c                	sw	a5,0(a3)
200119c6:	854a                	mv	a0,s2
200119c8:	0d3000ef          	jal	ra,2001229a <__malloc_unlock>
200119cc:	00b40513          	addi	a0,s0,11
200119d0:	00440793          	addi	a5,s0,4
200119d4:	9961                	andi	a0,a0,-8
200119d6:	40f50733          	sub	a4,a0,a5
200119da:	fcf500e3          	beq	a0,a5,2001199a <_malloc_r+0x70>
200119de:	943a                	add	s0,s0,a4
200119e0:	8f89                	sub	a5,a5,a0
200119e2:	c01c                	sw	a5,0(s0)
200119e4:	bf5d                	j	2001199a <_malloc_r+0x70>
200119e6:	c35c                	sw	a5,4(a4)
200119e8:	bff9                	j	200119c6 <_malloc_r+0x9c>
200119ea:	8722                	mv	a4,s0
200119ec:	4040                	lw	s0,4(s0)
200119ee:	bf85                	j	2001195e <_malloc_r+0x34>
200119f0:	00350413          	addi	s0,a0,3
200119f4:	9871                	andi	s0,s0,-4
200119f6:	fc8502e3          	beq	a0,s0,200119ba <_malloc_r+0x90>
200119fa:	40a405b3          	sub	a1,s0,a0
200119fe:	854a                	mv	a0,s2
20011a00:	2235                	jal	20011b2c <_sbrk_r>
20011a02:	fb351ce3          	bne	a0,s3,200119ba <_malloc_r+0x90>
20011a06:	bfad                	j	20011980 <_malloc_r+0x56>

20011a08 <iprintf>:
printf():
20011a08:	715d                	addi	sp,sp,-80
20011a0a:	d422                	sw	s0,40(sp)
20011a0c:	d606                	sw	ra,44(sp)
20011a0e:	842a                	mv	s0,a0
20011a10:	da2e                	sw	a1,52(sp)
20011a12:	dc32                	sw	a2,56(sp)
20011a14:	de36                	sw	a3,60(sp)
20011a16:	c0ba                	sw	a4,64(sp)
20011a18:	c2be                	sw	a5,68(sp)
20011a1a:	c4c2                	sw	a6,72(sp)
20011a1c:	c6c6                	sw	a7,76(sp)
20011a1e:	5ffef517          	auipc	a0,0x5ffef
20011a22:	08252503          	lw	a0,130(a0) # 80000aa0 <_impure_ptr>
20011a26:	c511                	beqz	a0,20011a32 <iprintf+0x2a>
20011a28:	4d1c                	lw	a5,24(a0)
20011a2a:	e781                	bnez	a5,20011a32 <iprintf+0x2a>
20011a2c:	c62a                	sw	a0,12(sp)
20011a2e:	2ba9                	jal	20011f88 <__sinit>
20011a30:	4532                	lw	a0,12(sp)
20011a32:	450c                	lw	a1,8(a0)
20011a34:	1854                	addi	a3,sp,52
20011a36:	8622                	mv	a2,s0
20011a38:	ce36                	sw	a3,28(sp)
20011a3a:	0cf000ef          	jal	ra,20012308 <_vfiprintf_r>
20011a3e:	50b2                	lw	ra,44(sp)
20011a40:	5422                	lw	s0,40(sp)
20011a42:	6161                	addi	sp,sp,80
20011a44:	8082                	ret

20011a46 <_puts_r>:
_puts_r():
20011a46:	1101                	addi	sp,sp,-32
20011a48:	ca26                	sw	s1,20(sp)
20011a4a:	c84a                	sw	s2,16(sp)
20011a4c:	ce06                	sw	ra,28(sp)
20011a4e:	cc22                	sw	s0,24(sp)
20011a50:	c64e                	sw	s3,12(sp)
20011a52:	c452                	sw	s4,8(sp)
20011a54:	84aa                	mv	s1,a0
20011a56:	892e                	mv	s2,a1
20011a58:	c501                	beqz	a0,20011a60 <_puts_r+0x1a>
20011a5a:	4d1c                	lw	a5,24(a0)
20011a5c:	e391                	bnez	a5,20011a60 <_puts_r+0x1a>
20011a5e:	232d                	jal	20011f88 <__sinit>
20011a60:	4c9c                	lw	a5,24(s1)
20011a62:	4480                	lw	s0,8(s1)
20011a64:	e399                	bnez	a5,20011a6a <_puts_r+0x24>
20011a66:	8526                	mv	a0,s1
20011a68:	2305                	jal	20011f88 <__sinit>
20011a6a:	fffff797          	auipc	a5,0xfffff
20011a6e:	95678793          	addi	a5,a5,-1706 # 200103c0 <__sf_fake_stdin>
20011a72:	02f41c63          	bne	s0,a5,20011aaa <_puts_r+0x64>
20011a76:	40c0                	lw	s0,4(s1)
20011a78:	00c45783          	lhu	a5,12(s0)
20011a7c:	8ba1                	andi	a5,a5,8
20011a7e:	c7b1                	beqz	a5,20011aca <_puts_r+0x84>
20011a80:	481c                	lw	a5,16(s0)
20011a82:	c7a1                	beqz	a5,20011aca <_puts_r+0x84>
20011a84:	59fd                	li	s3,-1
20011a86:	4a29                	li	s4,10
20011a88:	441c                	lw	a5,8(s0)
20011a8a:	00094583          	lbu	a1,0(s2)
20011a8e:	17fd                	addi	a5,a5,-1
20011a90:	e9b1                	bnez	a1,20011ae4 <_puts_r+0x9e>
20011a92:	c41c                	sw	a5,8(s0)
20011a94:	0607de63          	bgez	a5,20011b10 <_puts_r+0xca>
20011a98:	8622                	mv	a2,s0
20011a9a:	45a9                	li	a1,10
20011a9c:	8526                	mv	a0,s1
20011a9e:	287d                	jal	20011b5c <__swbuf_r>
20011aa0:	57fd                	li	a5,-1
20011aa2:	02f50863          	beq	a0,a5,20011ad2 <_puts_r+0x8c>
20011aa6:	4529                	li	a0,10
20011aa8:	a035                	j	20011ad4 <_puts_r+0x8e>
20011aaa:	fffff797          	auipc	a5,0xfffff
20011aae:	93678793          	addi	a5,a5,-1738 # 200103e0 <__sf_fake_stdout>
20011ab2:	00f41463          	bne	s0,a5,20011aba <_puts_r+0x74>
20011ab6:	4480                	lw	s0,8(s1)
20011ab8:	b7c1                	j	20011a78 <_puts_r+0x32>
20011aba:	fffff797          	auipc	a5,0xfffff
20011abe:	8e678793          	addi	a5,a5,-1818 # 200103a0 <__sf_fake_stderr>
20011ac2:	faf41be3          	bne	s0,a5,20011a78 <_puts_r+0x32>
20011ac6:	44c0                	lw	s0,12(s1)
20011ac8:	bf45                	j	20011a78 <_puts_r+0x32>
20011aca:	85a2                	mv	a1,s0
20011acc:	8526                	mv	a0,s1
20011ace:	22b9                	jal	20011c1c <__swsetup_r>
20011ad0:	d955                	beqz	a0,20011a84 <_puts_r+0x3e>
20011ad2:	557d                	li	a0,-1
20011ad4:	40f2                	lw	ra,28(sp)
20011ad6:	4462                	lw	s0,24(sp)
20011ad8:	44d2                	lw	s1,20(sp)
20011ada:	4942                	lw	s2,16(sp)
20011adc:	49b2                	lw	s3,12(sp)
20011ade:	4a22                	lw	s4,8(sp)
20011ae0:	6105                	addi	sp,sp,32
20011ae2:	8082                	ret
20011ae4:	c41c                	sw	a5,8(s0)
20011ae6:	0905                	addi	s2,s2,1
20011ae8:	0007d763          	bgez	a5,20011af6 <_puts_r+0xb0>
20011aec:	4c18                	lw	a4,24(s0)
20011aee:	00e7cb63          	blt	a5,a4,20011b04 <_puts_r+0xbe>
20011af2:	01458963          	beq	a1,s4,20011b04 <_puts_r+0xbe>
20011af6:	401c                	lw	a5,0(s0)
20011af8:	00178713          	addi	a4,a5,1
20011afc:	c018                	sw	a4,0(s0)
20011afe:	00b78023          	sb	a1,0(a5)
20011b02:	b759                	j	20011a88 <_puts_r+0x42>
20011b04:	8622                	mv	a2,s0
20011b06:	8526                	mv	a0,s1
20011b08:	2891                	jal	20011b5c <__swbuf_r>
20011b0a:	f7351fe3          	bne	a0,s3,20011a88 <_puts_r+0x42>
20011b0e:	b7d1                	j	20011ad2 <_puts_r+0x8c>
20011b10:	401c                	lw	a5,0(s0)
20011b12:	00178713          	addi	a4,a5,1
20011b16:	c018                	sw	a4,0(s0)
20011b18:	4729                	li	a4,10
20011b1a:	00e78023          	sb	a4,0(a5)
20011b1e:	b761                	j	20011aa6 <_puts_r+0x60>

20011b20 <puts>:
puts():
20011b20:	85aa                	mv	a1,a0
20011b22:	5ffef517          	auipc	a0,0x5ffef
20011b26:	f7e52503          	lw	a0,-130(a0) # 80000aa0 <_impure_ptr>
20011b2a:	bf31                	j	20011a46 <_puts_r>

20011b2c <_sbrk_r>:
_sbrk_r():
20011b2c:	1141                	addi	sp,sp,-16
20011b2e:	c422                	sw	s0,8(sp)
20011b30:	842a                	mv	s0,a0
20011b32:	852e                	mv	a0,a1
20011b34:	5ffef797          	auipc	a5,0x5ffef
20011b38:	fa07a823          	sw	zero,-80(a5) # 80000ae4 <errno>
20011b3c:	c606                	sw	ra,12(sp)
20011b3e:	08c010ef          	jal	ra,20012bca <_sbrk>
20011b42:	57fd                	li	a5,-1
20011b44:	00f51863          	bne	a0,a5,20011b54 <_sbrk_r+0x28>
20011b48:	5ffef797          	auipc	a5,0x5ffef
20011b4c:	f9c7a783          	lw	a5,-100(a5) # 80000ae4 <errno>
20011b50:	c391                	beqz	a5,20011b54 <_sbrk_r+0x28>
20011b52:	c01c                	sw	a5,0(s0)
20011b54:	40b2                	lw	ra,12(sp)
20011b56:	4422                	lw	s0,8(sp)
20011b58:	0141                	addi	sp,sp,16
20011b5a:	8082                	ret

20011b5c <__swbuf_r>:
__swbuf_r():
20011b5c:	1101                	addi	sp,sp,-32
20011b5e:	cc22                	sw	s0,24(sp)
20011b60:	ca26                	sw	s1,20(sp)
20011b62:	c84a                	sw	s2,16(sp)
20011b64:	ce06                	sw	ra,28(sp)
20011b66:	c64e                	sw	s3,12(sp)
20011b68:	84aa                	mv	s1,a0
20011b6a:	892e                	mv	s2,a1
20011b6c:	8432                	mv	s0,a2
20011b6e:	c501                	beqz	a0,20011b76 <__swbuf_r+0x1a>
20011b70:	4d1c                	lw	a5,24(a0)
20011b72:	e391                	bnez	a5,20011b76 <__swbuf_r+0x1a>
20011b74:	2911                	jal	20011f88 <__sinit>
20011b76:	fffff797          	auipc	a5,0xfffff
20011b7a:	84a78793          	addi	a5,a5,-1974 # 200103c0 <__sf_fake_stdin>
20011b7e:	06f41963          	bne	s0,a5,20011bf0 <__swbuf_r+0x94>
20011b82:	40c0                	lw	s0,4(s1)
20011b84:	4c1c                	lw	a5,24(s0)
20011b86:	c41c                	sw	a5,8(s0)
20011b88:	00c45783          	lhu	a5,12(s0)
20011b8c:	8ba1                	andi	a5,a5,8
20011b8e:	c3c9                	beqz	a5,20011c10 <__swbuf_r+0xb4>
20011b90:	481c                	lw	a5,16(s0)
20011b92:	cfbd                	beqz	a5,20011c10 <__swbuf_r+0xb4>
20011b94:	481c                	lw	a5,16(s0)
20011b96:	4008                	lw	a0,0(s0)
20011b98:	0ff97993          	zext.b	s3,s2
20011b9c:	0ff97913          	zext.b	s2,s2
20011ba0:	8d1d                	sub	a0,a0,a5
20011ba2:	485c                	lw	a5,20(s0)
20011ba4:	00f54663          	blt	a0,a5,20011bb0 <__swbuf_r+0x54>
20011ba8:	85a2                	mv	a1,s0
20011baa:	8526                	mv	a0,s1
20011bac:	24c1                	jal	20011e6c <_fflush_r>
20011bae:	e52d                	bnez	a0,20011c18 <__swbuf_r+0xbc>
20011bb0:	441c                	lw	a5,8(s0)
20011bb2:	0505                	addi	a0,a0,1
20011bb4:	17fd                	addi	a5,a5,-1
20011bb6:	c41c                	sw	a5,8(s0)
20011bb8:	401c                	lw	a5,0(s0)
20011bba:	00178713          	addi	a4,a5,1
20011bbe:	c018                	sw	a4,0(s0)
20011bc0:	01378023          	sb	s3,0(a5)
20011bc4:	485c                	lw	a5,20(s0)
20011bc6:	00a78963          	beq	a5,a0,20011bd8 <__swbuf_r+0x7c>
20011bca:	00c45783          	lhu	a5,12(s0)
20011bce:	8b85                	andi	a5,a5,1
20011bd0:	cb81                	beqz	a5,20011be0 <__swbuf_r+0x84>
20011bd2:	47a9                	li	a5,10
20011bd4:	00f91663          	bne	s2,a5,20011be0 <__swbuf_r+0x84>
20011bd8:	85a2                	mv	a1,s0
20011bda:	8526                	mv	a0,s1
20011bdc:	2c41                	jal	20011e6c <_fflush_r>
20011bde:	ed0d                	bnez	a0,20011c18 <__swbuf_r+0xbc>
20011be0:	40f2                	lw	ra,28(sp)
20011be2:	4462                	lw	s0,24(sp)
20011be4:	44d2                	lw	s1,20(sp)
20011be6:	49b2                	lw	s3,12(sp)
20011be8:	854a                	mv	a0,s2
20011bea:	4942                	lw	s2,16(sp)
20011bec:	6105                	addi	sp,sp,32
20011bee:	8082                	ret
20011bf0:	ffffe797          	auipc	a5,0xffffe
20011bf4:	7f078793          	addi	a5,a5,2032 # 200103e0 <__sf_fake_stdout>
20011bf8:	00f41463          	bne	s0,a5,20011c00 <__swbuf_r+0xa4>
20011bfc:	4480                	lw	s0,8(s1)
20011bfe:	b759                	j	20011b84 <__swbuf_r+0x28>
20011c00:	ffffe797          	auipc	a5,0xffffe
20011c04:	7a078793          	addi	a5,a5,1952 # 200103a0 <__sf_fake_stderr>
20011c08:	f6f41ee3          	bne	s0,a5,20011b84 <__swbuf_r+0x28>
20011c0c:	44c0                	lw	s0,12(s1)
20011c0e:	bf9d                	j	20011b84 <__swbuf_r+0x28>
20011c10:	85a2                	mv	a1,s0
20011c12:	8526                	mv	a0,s1
20011c14:	2021                	jal	20011c1c <__swsetup_r>
20011c16:	dd3d                	beqz	a0,20011b94 <__swbuf_r+0x38>
20011c18:	597d                	li	s2,-1
20011c1a:	b7d9                	j	20011be0 <__swbuf_r+0x84>

20011c1c <__swsetup_r>:
__swsetup_r():
20011c1c:	1141                	addi	sp,sp,-16
20011c1e:	c422                	sw	s0,8(sp)
20011c20:	c226                	sw	s1,4(sp)
20011c22:	c04a                	sw	s2,0(sp)
20011c24:	c606                	sw	ra,12(sp)
20011c26:	5ffef497          	auipc	s1,0x5ffef
20011c2a:	e7a4a483          	lw	s1,-390(s1) # 80000aa0 <_impure_ptr>
20011c2e:	892a                	mv	s2,a0
20011c30:	842e                	mv	s0,a1
20011c32:	c489                	beqz	s1,20011c3c <__swsetup_r+0x20>
20011c34:	4c9c                	lw	a5,24(s1)
20011c36:	e399                	bnez	a5,20011c3c <__swsetup_r+0x20>
20011c38:	8526                	mv	a0,s1
20011c3a:	26b9                	jal	20011f88 <__sinit>
20011c3c:	ffffe797          	auipc	a5,0xffffe
20011c40:	78478793          	addi	a5,a5,1924 # 200103c0 <__sf_fake_stdin>
20011c44:	02f41763          	bne	s0,a5,20011c72 <__swsetup_r+0x56>
20011c48:	40c0                	lw	s0,4(s1)
20011c4a:	00c41783          	lh	a5,12(s0)
20011c4e:	01079713          	slli	a4,a5,0x10
20011c52:	0087f693          	andi	a3,a5,8
20011c56:	8341                	srli	a4,a4,0x10
20011c58:	eaad                	bnez	a3,20011cca <__swsetup_r+0xae>
20011c5a:	01077693          	andi	a3,a4,16
20011c5e:	ea95                	bnez	a3,20011c92 <__swsetup_r+0x76>
20011c60:	4725                	li	a4,9
20011c62:	00e92023          	sw	a4,0(s2)
20011c66:	0407e793          	ori	a5,a5,64
20011c6a:	00f41623          	sh	a5,12(s0)
20011c6e:	557d                	li	a0,-1
20011c70:	a871                	j	20011d0c <__swsetup_r+0xf0>
20011c72:	ffffe797          	auipc	a5,0xffffe
20011c76:	76e78793          	addi	a5,a5,1902 # 200103e0 <__sf_fake_stdout>
20011c7a:	00f41463          	bne	s0,a5,20011c82 <__swsetup_r+0x66>
20011c7e:	4480                	lw	s0,8(s1)
20011c80:	b7e9                	j	20011c4a <__swsetup_r+0x2e>
20011c82:	ffffe797          	auipc	a5,0xffffe
20011c86:	71e78793          	addi	a5,a5,1822 # 200103a0 <__sf_fake_stderr>
20011c8a:	fcf410e3          	bne	s0,a5,20011c4a <__swsetup_r+0x2e>
20011c8e:	44c0                	lw	s0,12(s1)
20011c90:	bf6d                	j	20011c4a <__swsetup_r+0x2e>
20011c92:	8b11                	andi	a4,a4,4
20011c94:	c70d                	beqz	a4,20011cbe <__swsetup_r+0xa2>
20011c96:	584c                	lw	a1,52(s0)
20011c98:	c989                	beqz	a1,20011caa <__swsetup_r+0x8e>
20011c9a:	04440793          	addi	a5,s0,68
20011c9e:	00f58463          	beq	a1,a5,20011ca6 <__swsetup_r+0x8a>
20011ca2:	854a                	mv	a0,s2
20011ca4:	36c5                	jal	20011884 <_free_r>
20011ca6:	02042a23          	sw	zero,52(s0)
20011caa:	00c45783          	lhu	a5,12(s0)
20011cae:	00042223          	sw	zero,4(s0)
20011cb2:	fdb7f793          	andi	a5,a5,-37
20011cb6:	00f41623          	sh	a5,12(s0)
20011cba:	481c                	lw	a5,16(s0)
20011cbc:	c01c                	sw	a5,0(s0)
20011cbe:	00c45783          	lhu	a5,12(s0)
20011cc2:	0087e793          	ori	a5,a5,8
20011cc6:	00f41623          	sh	a5,12(s0)
20011cca:	481c                	lw	a5,16(s0)
20011ccc:	ef81                	bnez	a5,20011ce4 <__swsetup_r+0xc8>
20011cce:	00c45783          	lhu	a5,12(s0)
20011cd2:	20000713          	li	a4,512
20011cd6:	2807f793          	andi	a5,a5,640
20011cda:	00e78563          	beq	a5,a4,20011ce4 <__swsetup_r+0xc8>
20011cde:	85a2                	mv	a1,s0
20011ce0:	854a                	mv	a0,s2
20011ce2:	2985                	jal	20012152 <__smakebuf_r>
20011ce4:	00c41783          	lh	a5,12(s0)
20011ce8:	01079713          	slli	a4,a5,0x10
20011cec:	0017f693          	andi	a3,a5,1
20011cf0:	8341                	srli	a4,a4,0x10
20011cf2:	c29d                	beqz	a3,20011d18 <__swsetup_r+0xfc>
20011cf4:	4854                	lw	a3,20(s0)
20011cf6:	00042423          	sw	zero,8(s0)
20011cfa:	40d006b3          	neg	a3,a3
20011cfe:	cc14                	sw	a3,24(s0)
20011d00:	4814                	lw	a3,16(s0)
20011d02:	4501                	li	a0,0
20011d04:	e681                	bnez	a3,20011d0c <__swsetup_r+0xf0>
20011d06:	08077713          	andi	a4,a4,128
20011d0a:	ff31                	bnez	a4,20011c66 <__swsetup_r+0x4a>
20011d0c:	40b2                	lw	ra,12(sp)
20011d0e:	4422                	lw	s0,8(sp)
20011d10:	4492                	lw	s1,4(sp)
20011d12:	4902                	lw	s2,0(sp)
20011d14:	0141                	addi	sp,sp,16
20011d16:	8082                	ret
20011d18:	00277693          	andi	a3,a4,2
20011d1c:	4601                	li	a2,0
20011d1e:	e291                	bnez	a3,20011d22 <__swsetup_r+0x106>
20011d20:	4850                	lw	a2,20(s0)
20011d22:	c410                	sw	a2,8(s0)
20011d24:	bff1                	j	20011d00 <__swsetup_r+0xe4>

20011d26 <__sflush_r>:
__sflush_r():
20011d26:	00c5d783          	lhu	a5,12(a1)
20011d2a:	1101                	addi	sp,sp,-32
20011d2c:	cc22                	sw	s0,24(sp)
20011d2e:	ca26                	sw	s1,20(sp)
20011d30:	ce06                	sw	ra,28(sp)
20011d32:	c84a                	sw	s2,16(sp)
20011d34:	c64e                	sw	s3,12(sp)
20011d36:	0087f713          	andi	a4,a5,8
20011d3a:	84aa                	mv	s1,a0
20011d3c:	842e                	mv	s0,a1
20011d3e:	e375                	bnez	a4,20011e22 <__sflush_r+0xfc>
20011d40:	41d8                	lw	a4,4(a1)
20011d42:	00e04763          	bgtz	a4,20011d50 <__sflush_r+0x2a>
20011d46:	41b8                	lw	a4,64(a1)
20011d48:	00e04463          	bgtz	a4,20011d50 <__sflush_r+0x2a>
20011d4c:	4501                	li	a0,0
20011d4e:	a875                	j	20011e0a <__sflush_r+0xe4>
20011d50:	5458                	lw	a4,44(s0)
20011d52:	df6d                	beqz	a4,20011d4c <__sflush_r+0x26>
20011d54:	6685                	lui	a3,0x1
20011d56:	0004a903          	lw	s2,0(s1)
20011d5a:	8ff5                	and	a5,a5,a3
20011d5c:	0004a023          	sw	zero,0(s1)
20011d60:	cfa5                	beqz	a5,20011dd8 <__sflush_r+0xb2>
20011d62:	4868                	lw	a0,84(s0)
20011d64:	00c45783          	lhu	a5,12(s0)
20011d68:	8b91                	andi	a5,a5,4
20011d6a:	c799                	beqz	a5,20011d78 <__sflush_r+0x52>
20011d6c:	405c                	lw	a5,4(s0)
20011d6e:	8d1d                	sub	a0,a0,a5
20011d70:	585c                	lw	a5,52(s0)
20011d72:	c399                	beqz	a5,20011d78 <__sflush_r+0x52>
20011d74:	403c                	lw	a5,64(s0)
20011d76:	8d1d                	sub	a0,a0,a5
20011d78:	545c                	lw	a5,44(s0)
20011d7a:	500c                	lw	a1,32(s0)
20011d7c:	862a                	mv	a2,a0
20011d7e:	4681                	li	a3,0
20011d80:	8526                	mv	a0,s1
20011d82:	9782                	jalr	a5
20011d84:	57fd                	li	a5,-1
20011d86:	00c45703          	lhu	a4,12(s0)
20011d8a:	00f51d63          	bne	a0,a5,20011da4 <__sflush_r+0x7e>
20011d8e:	4094                	lw	a3,0(s1)
20011d90:	47f5                	li	a5,29
20011d92:	08d7e363          	bltu	a5,a3,20011e18 <__sflush_r+0xf2>
20011d96:	204007b7          	lui	a5,0x20400
20011d9a:	0785                	addi	a5,a5,1
20011d9c:	00d7d7b3          	srl	a5,a5,a3
20011da0:	8b85                	andi	a5,a5,1
20011da2:	cbbd                	beqz	a5,20011e18 <__sflush_r+0xf2>
20011da4:	481c                	lw	a5,16(s0)
20011da6:	00042223          	sw	zero,4(s0)
20011daa:	c01c                	sw	a5,0(s0)
20011dac:	6785                	lui	a5,0x1
20011dae:	8f7d                	and	a4,a4,a5
20011db0:	c719                	beqz	a4,20011dbe <__sflush_r+0x98>
20011db2:	57fd                	li	a5,-1
20011db4:	00f51463          	bne	a0,a5,20011dbc <__sflush_r+0x96>
20011db8:	409c                	lw	a5,0(s1)
20011dba:	e391                	bnez	a5,20011dbe <__sflush_r+0x98>
20011dbc:	c868                	sw	a0,84(s0)
20011dbe:	584c                	lw	a1,52(s0)
20011dc0:	0124a023          	sw	s2,0(s1)
20011dc4:	d5c1                	beqz	a1,20011d4c <__sflush_r+0x26>
20011dc6:	04440793          	addi	a5,s0,68
20011dca:	00f58463          	beq	a1,a5,20011dd2 <__sflush_r+0xac>
20011dce:	8526                	mv	a0,s1
20011dd0:	3c55                	jal	20011884 <_free_r>
20011dd2:	02042a23          	sw	zero,52(s0)
20011dd6:	bf9d                	j	20011d4c <__sflush_r+0x26>
20011dd8:	500c                	lw	a1,32(s0)
20011dda:	4685                	li	a3,1
20011ddc:	4601                	li	a2,0
20011dde:	8526                	mv	a0,s1
20011de0:	9702                	jalr	a4
20011de2:	57fd                	li	a5,-1
20011de4:	f8f510e3          	bne	a0,a5,20011d64 <__sflush_r+0x3e>
20011de8:	409c                	lw	a5,0(s1)
20011dea:	dfad                	beqz	a5,20011d64 <__sflush_r+0x3e>
20011dec:	4775                	li	a4,29
20011dee:	00e78563          	beq	a5,a4,20011df8 <__sflush_r+0xd2>
20011df2:	4759                	li	a4,22
20011df4:	00e79563          	bne	a5,a4,20011dfe <__sflush_r+0xd8>
20011df8:	0124a023          	sw	s2,0(s1)
20011dfc:	bf81                	j	20011d4c <__sflush_r+0x26>
20011dfe:	00c45783          	lhu	a5,12(s0)
20011e02:	0407e793          	ori	a5,a5,64
20011e06:	00f41623          	sh	a5,12(s0)
20011e0a:	40f2                	lw	ra,28(sp)
20011e0c:	4462                	lw	s0,24(sp)
20011e0e:	44d2                	lw	s1,20(sp)
20011e10:	4942                	lw	s2,16(sp)
20011e12:	49b2                	lw	s3,12(sp)
20011e14:	6105                	addi	sp,sp,32
20011e16:	8082                	ret
20011e18:	04076713          	ori	a4,a4,64
20011e1c:	00e41623          	sh	a4,12(s0)
20011e20:	b7ed                	j	20011e0a <__sflush_r+0xe4>
20011e22:	0105a983          	lw	s3,16(a1)
20011e26:	f20983e3          	beqz	s3,20011d4c <__sflush_r+0x26>
20011e2a:	0005a903          	lw	s2,0(a1)
20011e2e:	8b8d                	andi	a5,a5,3
20011e30:	0135a023          	sw	s3,0(a1)
20011e34:	41390933          	sub	s2,s2,s3
20011e38:	4701                	li	a4,0
20011e3a:	e391                	bnez	a5,20011e3e <__sflush_r+0x118>
20011e3c:	49d8                	lw	a4,20(a1)
20011e3e:	c418                	sw	a4,8(s0)
20011e40:	f12056e3          	blez	s2,20011d4c <__sflush_r+0x26>
20011e44:	541c                	lw	a5,40(s0)
20011e46:	500c                	lw	a1,32(s0)
20011e48:	86ca                	mv	a3,s2
20011e4a:	864e                	mv	a2,s3
20011e4c:	8526                	mv	a0,s1
20011e4e:	9782                	jalr	a5
20011e50:	00a04a63          	bgtz	a0,20011e64 <__sflush_r+0x13e>
20011e54:	00c45783          	lhu	a5,12(s0)
20011e58:	557d                	li	a0,-1
20011e5a:	0407e793          	ori	a5,a5,64
20011e5e:	00f41623          	sh	a5,12(s0)
20011e62:	b765                	j	20011e0a <__sflush_r+0xe4>
20011e64:	99aa                	add	s3,s3,a0
20011e66:	40a90933          	sub	s2,s2,a0
20011e6a:	bfd9                	j	20011e40 <__sflush_r+0x11a>

20011e6c <_fflush_r>:
_fflush_r():
20011e6c:	499c                	lw	a5,16(a1)
20011e6e:	cfb9                	beqz	a5,20011ecc <_fflush_r+0x60>
20011e70:	1101                	addi	sp,sp,-32
20011e72:	cc22                	sw	s0,24(sp)
20011e74:	ce06                	sw	ra,28(sp)
20011e76:	842a                	mv	s0,a0
20011e78:	c511                	beqz	a0,20011e84 <_fflush_r+0x18>
20011e7a:	4d1c                	lw	a5,24(a0)
20011e7c:	e781                	bnez	a5,20011e84 <_fflush_r+0x18>
20011e7e:	c62e                	sw	a1,12(sp)
20011e80:	2221                	jal	20011f88 <__sinit>
20011e82:	45b2                	lw	a1,12(sp)
20011e84:	ffffe797          	auipc	a5,0xffffe
20011e88:	53c78793          	addi	a5,a5,1340 # 200103c0 <__sf_fake_stdin>
20011e8c:	00f59b63          	bne	a1,a5,20011ea2 <_fflush_r+0x36>
20011e90:	404c                	lw	a1,4(s0)
20011e92:	00c59783          	lh	a5,12(a1)
20011e96:	c795                	beqz	a5,20011ec2 <_fflush_r+0x56>
20011e98:	8522                	mv	a0,s0
20011e9a:	4462                	lw	s0,24(sp)
20011e9c:	40f2                	lw	ra,28(sp)
20011e9e:	6105                	addi	sp,sp,32
20011ea0:	b559                	j	20011d26 <__sflush_r>
20011ea2:	ffffe797          	auipc	a5,0xffffe
20011ea6:	53e78793          	addi	a5,a5,1342 # 200103e0 <__sf_fake_stdout>
20011eaa:	00f59463          	bne	a1,a5,20011eb2 <_fflush_r+0x46>
20011eae:	440c                	lw	a1,8(s0)
20011eb0:	b7cd                	j	20011e92 <_fflush_r+0x26>
20011eb2:	ffffe797          	auipc	a5,0xffffe
20011eb6:	4ee78793          	addi	a5,a5,1262 # 200103a0 <__sf_fake_stderr>
20011eba:	fcf59ce3          	bne	a1,a5,20011e92 <_fflush_r+0x26>
20011ebe:	444c                	lw	a1,12(s0)
20011ec0:	bfc9                	j	20011e92 <_fflush_r+0x26>
20011ec2:	40f2                	lw	ra,28(sp)
20011ec4:	4462                	lw	s0,24(sp)
20011ec6:	4501                	li	a0,0
20011ec8:	6105                	addi	sp,sp,32
20011eca:	8082                	ret
20011ecc:	4501                	li	a0,0
20011ece:	8082                	ret

20011ed0 <std>:
std():
20011ed0:	1141                	addi	sp,sp,-16
20011ed2:	c422                	sw	s0,8(sp)
20011ed4:	c606                	sw	ra,12(sp)
20011ed6:	842a                	mv	s0,a0
20011ed8:	00b51623          	sh	a1,12(a0)
20011edc:	00c51723          	sh	a2,14(a0)
20011ee0:	00052023          	sw	zero,0(a0)
20011ee4:	00052223          	sw	zero,4(a0)
20011ee8:	00052423          	sw	zero,8(a0)
20011eec:	06052223          	sw	zero,100(a0)
20011ef0:	00052823          	sw	zero,16(a0)
20011ef4:	00052a23          	sw	zero,20(a0)
20011ef8:	00052c23          	sw	zero,24(a0)
20011efc:	4621                	li	a2,8
20011efe:	4581                	li	a1,0
20011f00:	05c50513          	addi	a0,a0,92
20011f04:	24f5                	jal	200121f0 <memset>
20011f06:	00000797          	auipc	a5,0x0
20011f0a:	69678793          	addi	a5,a5,1686 # 2001259c <__sread>
20011f0e:	d05c                	sw	a5,36(s0)
20011f10:	00000797          	auipc	a5,0x0
20011f14:	6bc78793          	addi	a5,a5,1724 # 200125cc <__swrite>
20011f18:	d41c                	sw	a5,40(s0)
20011f1a:	00000797          	auipc	a5,0x0
20011f1e:	70078793          	addi	a5,a5,1792 # 2001261a <__sseek>
20011f22:	d45c                	sw	a5,44(s0)
20011f24:	00000797          	auipc	a5,0x0
20011f28:	72c78793          	addi	a5,a5,1836 # 20012650 <__sclose>
20011f2c:	40b2                	lw	ra,12(sp)
20011f2e:	d000                	sw	s0,32(s0)
20011f30:	d81c                	sw	a5,48(s0)
20011f32:	4422                	lw	s0,8(sp)
20011f34:	0141                	addi	sp,sp,16
20011f36:	8082                	ret

20011f38 <_cleanup_r>:
_cleanup_r():
20011f38:	00000597          	auipc	a1,0x0
20011f3c:	f3458593          	addi	a1,a1,-204 # 20011e6c <_fflush_r>
20011f40:	a2b9                	j	2001208e <_fwalk_reent>

20011f42 <__sfmoreglue>:
__sfmoreglue():
20011f42:	1141                	addi	sp,sp,-16
20011f44:	c226                	sw	s1,4(sp)
20011f46:	06800613          	li	a2,104
20011f4a:	fff58493          	addi	s1,a1,-1
20011f4e:	02c484b3          	mul	s1,s1,a2
20011f52:	c04a                	sw	s2,0(sp)
20011f54:	892e                	mv	s2,a1
20011f56:	c422                	sw	s0,8(sp)
20011f58:	c606                	sw	ra,12(sp)
20011f5a:	07448593          	addi	a1,s1,116
20011f5e:	9cdff0ef          	jal	ra,2001192a <_malloc_r>
20011f62:	842a                	mv	s0,a0
20011f64:	c919                	beqz	a0,20011f7a <__sfmoreglue+0x38>
20011f66:	00052023          	sw	zero,0(a0)
20011f6a:	01252223          	sw	s2,4(a0)
20011f6e:	0531                	addi	a0,a0,12
20011f70:	c408                	sw	a0,8(s0)
20011f72:	06848613          	addi	a2,s1,104
20011f76:	4581                	li	a1,0
20011f78:	2ca5                	jal	200121f0 <memset>
20011f7a:	40b2                	lw	ra,12(sp)
20011f7c:	8522                	mv	a0,s0
20011f7e:	4422                	lw	s0,8(sp)
20011f80:	4492                	lw	s1,4(sp)
20011f82:	4902                	lw	s2,0(sp)
20011f84:	0141                	addi	sp,sp,16
20011f86:	8082                	ret

20011f88 <__sinit>:
__sinit():
20011f88:	4d1c                	lw	a5,24(a0)
20011f8a:	e3bd                	bnez	a5,20011ff0 <__sinit+0x68>
20011f8c:	1141                	addi	sp,sp,-16
20011f8e:	c422                	sw	s0,8(sp)
20011f90:	c606                	sw	ra,12(sp)
20011f92:	00000797          	auipc	a5,0x0
20011f96:	fa678793          	addi	a5,a5,-90 # 20011f38 <_cleanup_r>
20011f9a:	d51c                	sw	a5,40(a0)
20011f9c:	04052423          	sw	zero,72(a0)
20011fa0:	04052623          	sw	zero,76(a0)
20011fa4:	04052823          	sw	zero,80(a0)
20011fa8:	fffff797          	auipc	a5,0xfffff
20011fac:	0387a783          	lw	a5,56(a5) # 20010fe0 <_global_impure_ptr>
20011fb0:	842a                	mv	s0,a0
20011fb2:	00f51463          	bne	a0,a5,20011fba <__sinit+0x32>
20011fb6:	4785                	li	a5,1
20011fb8:	cd1c                	sw	a5,24(a0)
20011fba:	8522                	mv	a0,s0
20011fbc:	281d                	jal	20011ff2 <__sfp>
20011fbe:	c048                	sw	a0,4(s0)
20011fc0:	8522                	mv	a0,s0
20011fc2:	2805                	jal	20011ff2 <__sfp>
20011fc4:	c408                	sw	a0,8(s0)
20011fc6:	8522                	mv	a0,s0
20011fc8:	202d                	jal	20011ff2 <__sfp>
20011fca:	c448                	sw	a0,12(s0)
20011fcc:	4048                	lw	a0,4(s0)
20011fce:	4601                	li	a2,0
20011fd0:	4591                	li	a1,4
20011fd2:	3dfd                	jal	20011ed0 <std>
20011fd4:	4408                	lw	a0,8(s0)
20011fd6:	4605                	li	a2,1
20011fd8:	45a5                	li	a1,9
20011fda:	3ddd                	jal	20011ed0 <std>
20011fdc:	4448                	lw	a0,12(s0)
20011fde:	4609                	li	a2,2
20011fe0:	45c9                	li	a1,18
20011fe2:	35fd                	jal	20011ed0 <std>
20011fe4:	4785                	li	a5,1
20011fe6:	40b2                	lw	ra,12(sp)
20011fe8:	cc1c                	sw	a5,24(s0)
20011fea:	4422                	lw	s0,8(sp)
20011fec:	0141                	addi	sp,sp,16
20011fee:	8082                	ret
20011ff0:	8082                	ret

20011ff2 <__sfp>:
__sfp():
20011ff2:	1141                	addi	sp,sp,-16
20011ff4:	c226                	sw	s1,4(sp)
20011ff6:	fffff497          	auipc	s1,0xfffff
20011ffa:	fea4a483          	lw	s1,-22(s1) # 20010fe0 <_global_impure_ptr>
20011ffe:	4c9c                	lw	a5,24(s1)
20012000:	c04a                	sw	s2,0(sp)
20012002:	c606                	sw	ra,12(sp)
20012004:	c422                	sw	s0,8(sp)
20012006:	892a                	mv	s2,a0
20012008:	e399                	bnez	a5,2001200e <__sfp+0x1c>
2001200a:	8526                	mv	a0,s1
2001200c:	3fb5                	jal	20011f88 <__sinit>
2001200e:	04848493          	addi	s1,s1,72
20012012:	4480                	lw	s0,8(s1)
20012014:	40dc                	lw	a5,4(s1)
20012016:	17fd                	addi	a5,a5,-1
20012018:	0007d663          	bgez	a5,20012024 <__sfp+0x32>
2001201c:	409c                	lw	a5,0(s1)
2001201e:	cfb1                	beqz	a5,2001207a <__sfp+0x88>
20012020:	4084                	lw	s1,0(s1)
20012022:	bfc5                	j	20012012 <__sfp+0x20>
20012024:	00c41703          	lh	a4,12(s0)
20012028:	e731                	bnez	a4,20012074 <__sfp+0x82>
2001202a:	77c1                	lui	a5,0xffff0
2001202c:	0785                	addi	a5,a5,1
2001202e:	06042223          	sw	zero,100(s0)
20012032:	00042023          	sw	zero,0(s0)
20012036:	00042223          	sw	zero,4(s0)
2001203a:	00042423          	sw	zero,8(s0)
2001203e:	c45c                	sw	a5,12(s0)
20012040:	00042823          	sw	zero,16(s0)
20012044:	00042a23          	sw	zero,20(s0)
20012048:	00042c23          	sw	zero,24(s0)
2001204c:	4621                	li	a2,8
2001204e:	4581                	li	a1,0
20012050:	05c40513          	addi	a0,s0,92
20012054:	2a71                	jal	200121f0 <memset>
20012056:	02042a23          	sw	zero,52(s0)
2001205a:	02042c23          	sw	zero,56(s0)
2001205e:	04042423          	sw	zero,72(s0)
20012062:	04042623          	sw	zero,76(s0)
20012066:	40b2                	lw	ra,12(sp)
20012068:	8522                	mv	a0,s0
2001206a:	4422                	lw	s0,8(sp)
2001206c:	4492                	lw	s1,4(sp)
2001206e:	4902                	lw	s2,0(sp)
20012070:	0141                	addi	sp,sp,16
20012072:	8082                	ret
20012074:	06840413          	addi	s0,s0,104
20012078:	bf79                	j	20012016 <__sfp+0x24>
2001207a:	4591                	li	a1,4
2001207c:	854a                	mv	a0,s2
2001207e:	35d1                	jal	20011f42 <__sfmoreglue>
20012080:	c088                	sw	a0,0(s1)
20012082:	842a                	mv	s0,a0
20012084:	fd51                	bnez	a0,20012020 <__sfp+0x2e>
20012086:	47b1                	li	a5,12
20012088:	00f92023          	sw	a5,0(s2)
2001208c:	bfe9                	j	20012066 <__sfp+0x74>

2001208e <_fwalk_reent>:
_fwalk_reent():
2001208e:	7179                	addi	sp,sp,-48
20012090:	d422                	sw	s0,40(sp)
20012092:	d04a                	sw	s2,32(sp)
20012094:	ce4e                	sw	s3,28(sp)
20012096:	cc52                	sw	s4,24(sp)
20012098:	c85a                	sw	s6,16(sp)
2001209a:	c65e                	sw	s7,12(sp)
2001209c:	d606                	sw	ra,44(sp)
2001209e:	d226                	sw	s1,36(sp)
200120a0:	ca56                	sw	s5,20(sp)
200120a2:	892a                	mv	s2,a0
200120a4:	8a2e                	mv	s4,a1
200120a6:	04850413          	addi	s0,a0,72
200120aa:	4981                	li	s3,0
200120ac:	4b05                	li	s6,1
200120ae:	5bfd                	li	s7,-1
200120b0:	4404                	lw	s1,8(s0)
200120b2:	00442a83          	lw	s5,4(s0)
200120b6:	1afd                	addi	s5,s5,-1
200120b8:	020ad063          	bgez	s5,200120d8 <_fwalk_reent+0x4a>
200120bc:	4000                	lw	s0,0(s0)
200120be:	f86d                	bnez	s0,200120b0 <_fwalk_reent+0x22>
200120c0:	50b2                	lw	ra,44(sp)
200120c2:	5422                	lw	s0,40(sp)
200120c4:	5492                	lw	s1,36(sp)
200120c6:	5902                	lw	s2,32(sp)
200120c8:	4a62                	lw	s4,24(sp)
200120ca:	4ad2                	lw	s5,20(sp)
200120cc:	4b42                	lw	s6,16(sp)
200120ce:	4bb2                	lw	s7,12(sp)
200120d0:	854e                	mv	a0,s3
200120d2:	49f2                	lw	s3,28(sp)
200120d4:	6145                	addi	sp,sp,48
200120d6:	8082                	ret
200120d8:	00c4d783          	lhu	a5,12(s1)
200120dc:	00fb7b63          	bgeu	s6,a5,200120f2 <_fwalk_reent+0x64>
200120e0:	00e49783          	lh	a5,14(s1)
200120e4:	01778763          	beq	a5,s7,200120f2 <_fwalk_reent+0x64>
200120e8:	85a6                	mv	a1,s1
200120ea:	854a                	mv	a0,s2
200120ec:	9a02                	jalr	s4
200120ee:	00a9e9b3          	or	s3,s3,a0
200120f2:	06848493          	addi	s1,s1,104
200120f6:	b7c1                	j	200120b6 <_fwalk_reent+0x28>

200120f8 <__swhatbuf_r>:
__swhatbuf_r():
200120f8:	7159                	addi	sp,sp,-112
200120fa:	d0ca                	sw	s2,96(sp)
200120fc:	892e                	mv	s2,a1
200120fe:	00e59583          	lh	a1,14(a1)
20012102:	d4a2                	sw	s0,104(sp)
20012104:	d2a6                	sw	s1,100(sp)
20012106:	d686                	sw	ra,108(sp)
20012108:	8432                	mv	s0,a2
2001210a:	84b6                	mv	s1,a3
2001210c:	0005dc63          	bgez	a1,20012124 <__swhatbuf_r+0x2c>
20012110:	00c91783          	lh	a5,12(s2)
20012114:	0004a023          	sw	zero,0(s1)
20012118:	0807f793          	andi	a5,a5,128
2001211c:	e38d                	bnez	a5,2001213e <__swhatbuf_r+0x46>
2001211e:	40000793          	li	a5,1024
20012122:	a005                	j	20012142 <__swhatbuf_r+0x4a>
20012124:	0030                	addi	a2,sp,8
20012126:	2b41                	jal	200126b6 <_fstat_r>
20012128:	fe0544e3          	bltz	a0,20012110 <__swhatbuf_r+0x18>
2001212c:	4732                	lw	a4,12(sp)
2001212e:	67bd                	lui	a5,0xf
20012130:	8ff9                	and	a5,a5,a4
20012132:	7779                	lui	a4,0xffffe
20012134:	97ba                	add	a5,a5,a4
20012136:	0017b793          	seqz	a5,a5
2001213a:	c09c                	sw	a5,0(s1)
2001213c:	b7cd                	j	2001211e <__swhatbuf_r+0x26>
2001213e:	04000793          	li	a5,64
20012142:	50b6                	lw	ra,108(sp)
20012144:	c01c                	sw	a5,0(s0)
20012146:	5426                	lw	s0,104(sp)
20012148:	5496                	lw	s1,100(sp)
2001214a:	5906                	lw	s2,96(sp)
2001214c:	4501                	li	a0,0
2001214e:	6165                	addi	sp,sp,112
20012150:	8082                	ret

20012152 <__smakebuf_r>:
__smakebuf_r():
20012152:	00c5d783          	lhu	a5,12(a1)
20012156:	1101                	addi	sp,sp,-32
20012158:	cc22                	sw	s0,24(sp)
2001215a:	ce06                	sw	ra,28(sp)
2001215c:	ca26                	sw	s1,20(sp)
2001215e:	c84a                	sw	s2,16(sp)
20012160:	8b89                	andi	a5,a5,2
20012162:	842e                	mv	s0,a1
20012164:	cf89                	beqz	a5,2001217e <__smakebuf_r+0x2c>
20012166:	04740793          	addi	a5,s0,71
2001216a:	c01c                	sw	a5,0(s0)
2001216c:	c81c                	sw	a5,16(s0)
2001216e:	4785                	li	a5,1
20012170:	c85c                	sw	a5,20(s0)
20012172:	40f2                	lw	ra,28(sp)
20012174:	4462                	lw	s0,24(sp)
20012176:	44d2                	lw	s1,20(sp)
20012178:	4942                	lw	s2,16(sp)
2001217a:	6105                	addi	sp,sp,32
2001217c:	8082                	ret
2001217e:	0074                	addi	a3,sp,12
20012180:	0030                	addi	a2,sp,8
20012182:	892a                	mv	s2,a0
20012184:	3f95                	jal	200120f8 <__swhatbuf_r>
20012186:	45a2                	lw	a1,8(sp)
20012188:	84aa                	mv	s1,a0
2001218a:	854a                	mv	a0,s2
2001218c:	f9eff0ef          	jal	ra,2001192a <_malloc_r>
20012190:	ed01                	bnez	a0,200121a8 <__smakebuf_r+0x56>
20012192:	00c41783          	lh	a5,12(s0)
20012196:	2007f713          	andi	a4,a5,512
2001219a:	ff61                	bnez	a4,20012172 <__smakebuf_r+0x20>
2001219c:	9bf1                	andi	a5,a5,-4
2001219e:	0027e793          	ori	a5,a5,2
200121a2:	00f41623          	sh	a5,12(s0)
200121a6:	b7c1                	j	20012166 <__smakebuf_r+0x14>
200121a8:	00000797          	auipc	a5,0x0
200121ac:	d9078793          	addi	a5,a5,-624 # 20011f38 <_cleanup_r>
200121b0:	02f92423          	sw	a5,40(s2)
200121b4:	00c45783          	lhu	a5,12(s0)
200121b8:	c008                	sw	a0,0(s0)
200121ba:	c808                	sw	a0,16(s0)
200121bc:	0807e793          	ori	a5,a5,128
200121c0:	00f41623          	sh	a5,12(s0)
200121c4:	47a2                	lw	a5,8(sp)
200121c6:	c85c                	sw	a5,20(s0)
200121c8:	47b2                	lw	a5,12(sp)
200121ca:	cf89                	beqz	a5,200121e4 <__smakebuf_r+0x92>
200121cc:	00e41583          	lh	a1,14(s0)
200121d0:	854a                	mv	a0,s2
200121d2:	2b11                	jal	200126e6 <_isatty_r>
200121d4:	c901                	beqz	a0,200121e4 <__smakebuf_r+0x92>
200121d6:	00c45783          	lhu	a5,12(s0)
200121da:	9bf1                	andi	a5,a5,-4
200121dc:	0017e793          	ori	a5,a5,1
200121e0:	00f41623          	sh	a5,12(s0)
200121e4:	00c45503          	lhu	a0,12(s0)
200121e8:	8cc9                	or	s1,s1,a0
200121ea:	00941623          	sh	s1,12(s0)
200121ee:	b751                	j	20012172 <__smakebuf_r+0x20>

200121f0 <memset>:
memset():
200121f0:	433d                	li	t1,15
200121f2:	872a                	mv	a4,a0
200121f4:	02c37363          	bgeu	t1,a2,2001221a <memset+0x2a>
200121f8:	00f77793          	andi	a5,a4,15
200121fc:	efbd                	bnez	a5,2001227a <memset+0x8a>
200121fe:	e5ad                	bnez	a1,20012268 <memset+0x78>
20012200:	ff067693          	andi	a3,a2,-16
20012204:	8a3d                	andi	a2,a2,15
20012206:	96ba                	add	a3,a3,a4
20012208:	c30c                	sw	a1,0(a4)
2001220a:	c34c                	sw	a1,4(a4)
2001220c:	c70c                	sw	a1,8(a4)
2001220e:	c74c                	sw	a1,12(a4)
20012210:	0741                	addi	a4,a4,16
20012212:	fed76be3          	bltu	a4,a3,20012208 <memset+0x18>
20012216:	e211                	bnez	a2,2001221a <memset+0x2a>
20012218:	8082                	ret
2001221a:	40c306b3          	sub	a3,t1,a2
2001221e:	068a                	slli	a3,a3,0x2
20012220:	00000297          	auipc	t0,0x0
20012224:	9696                	add	a3,a3,t0
20012226:	00a68067          	jr	10(a3) # 100a <__heap_size+0x80a>
2001222a:	00b70723          	sb	a1,14(a4) # ffffe00e <metal_segment_heap_target_end+0x7fffbcfe>
2001222e:	00b706a3          	sb	a1,13(a4)
20012232:	00b70623          	sb	a1,12(a4)
20012236:	00b705a3          	sb	a1,11(a4)
2001223a:	00b70523          	sb	a1,10(a4)
2001223e:	00b704a3          	sb	a1,9(a4)
20012242:	00b70423          	sb	a1,8(a4)
20012246:	00b703a3          	sb	a1,7(a4)
2001224a:	00b70323          	sb	a1,6(a4)
2001224e:	00b702a3          	sb	a1,5(a4)
20012252:	00b70223          	sb	a1,4(a4)
20012256:	00b701a3          	sb	a1,3(a4)
2001225a:	00b70123          	sb	a1,2(a4)
2001225e:	00b700a3          	sb	a1,1(a4)
20012262:	00b70023          	sb	a1,0(a4)
20012266:	8082                	ret
20012268:	0ff5f593          	zext.b	a1,a1
2001226c:	00859693          	slli	a3,a1,0x8
20012270:	8dd5                	or	a1,a1,a3
20012272:	01059693          	slli	a3,a1,0x10
20012276:	8dd5                	or	a1,a1,a3
20012278:	b761                	j	20012200 <memset+0x10>
2001227a:	00279693          	slli	a3,a5,0x2
2001227e:	00000297          	auipc	t0,0x0
20012282:	9696                	add	a3,a3,t0
20012284:	8286                	mv	t0,ra
20012286:	fa8680e7          	jalr	-88(a3)
2001228a:	8096                	mv	ra,t0
2001228c:	17c1                	addi	a5,a5,-16
2001228e:	8f1d                	sub	a4,a4,a5
20012290:	963e                	add	a2,a2,a5
20012292:	f8c374e3          	bgeu	t1,a2,2001221a <memset+0x2a>
20012296:	b7a5                	j	200121fe <memset+0xe>

20012298 <__malloc_lock>:
__malloc_lock():
20012298:	8082                	ret

2001229a <__malloc_unlock>:
__malloc_unlock():
2001229a:	8082                	ret

2001229c <__sfputc_r>:
__sfputc_r():
2001229c:	461c                	lw	a5,8(a2)
2001229e:	17fd                	addi	a5,a5,-1
200122a0:	c61c                	sw	a5,8(a2)
200122a2:	0007da63          	bgez	a5,200122b6 <__sfputc_r+0x1a>
200122a6:	4e18                	lw	a4,24(a2)
200122a8:	00e7c563          	blt	a5,a4,200122b2 <__sfputc_r+0x16>
200122ac:	47a9                	li	a5,10
200122ae:	00f59463          	bne	a1,a5,200122b6 <__sfputc_r+0x1a>
200122b2:	8abff06f          	j	20011b5c <__swbuf_r>
200122b6:	421c                	lw	a5,0(a2)
200122b8:	852e                	mv	a0,a1
200122ba:	00178713          	addi	a4,a5,1
200122be:	c218                	sw	a4,0(a2)
200122c0:	00b78023          	sb	a1,0(a5)
200122c4:	8082                	ret

200122c6 <__sfputs_r>:
__sfputs_r():
200122c6:	1101                	addi	sp,sp,-32
200122c8:	cc22                	sw	s0,24(sp)
200122ca:	ca26                	sw	s1,20(sp)
200122cc:	c84a                	sw	s2,16(sp)
200122ce:	c64e                	sw	s3,12(sp)
200122d0:	c452                	sw	s4,8(sp)
200122d2:	ce06                	sw	ra,28(sp)
200122d4:	892a                	mv	s2,a0
200122d6:	89ae                	mv	s3,a1
200122d8:	8432                	mv	s0,a2
200122da:	00d604b3          	add	s1,a2,a3
200122de:	5a7d                	li	s4,-1
200122e0:	00941463          	bne	s0,s1,200122e8 <__sfputs_r+0x22>
200122e4:	4501                	li	a0,0
200122e6:	a809                	j	200122f8 <__sfputs_r+0x32>
200122e8:	00044583          	lbu	a1,0(s0)
200122ec:	864e                	mv	a2,s3
200122ee:	854a                	mv	a0,s2
200122f0:	3775                	jal	2001229c <__sfputc_r>
200122f2:	0405                	addi	s0,s0,1
200122f4:	ff4516e3          	bne	a0,s4,200122e0 <__sfputs_r+0x1a>
200122f8:	40f2                	lw	ra,28(sp)
200122fa:	4462                	lw	s0,24(sp)
200122fc:	44d2                	lw	s1,20(sp)
200122fe:	4942                	lw	s2,16(sp)
20012300:	49b2                	lw	s3,12(sp)
20012302:	4a22                	lw	s4,8(sp)
20012304:	6105                	addi	sp,sp,32
20012306:	8082                	ret

20012308 <_vfiprintf_r>:
_vfiprintf_r():
20012308:	7135                	addi	sp,sp,-160
2001230a:	cd22                	sw	s0,152(sp)
2001230c:	cb26                	sw	s1,148(sp)
2001230e:	c94a                	sw	s2,144(sp)
20012310:	c74e                	sw	s3,140(sp)
20012312:	cf06                	sw	ra,156(sp)
20012314:	c552                	sw	s4,136(sp)
20012316:	c356                	sw	s5,132(sp)
20012318:	c15a                	sw	s6,128(sp)
2001231a:	dede                	sw	s7,124(sp)
2001231c:	dce2                	sw	s8,120(sp)
2001231e:	dae6                	sw	s9,116(sp)
20012320:	89aa                	mv	s3,a0
20012322:	84ae                	mv	s1,a1
20012324:	8932                	mv	s2,a2
20012326:	8436                	mv	s0,a3
20012328:	c501                	beqz	a0,20012330 <_vfiprintf_r+0x28>
2001232a:	4d1c                	lw	a5,24(a0)
2001232c:	e391                	bnez	a5,20012330 <_vfiprintf_r+0x28>
2001232e:	39a9                	jal	20011f88 <__sinit>
20012330:	ffffe797          	auipc	a5,0xffffe
20012334:	09078793          	addi	a5,a5,144 # 200103c0 <__sf_fake_stdin>
20012338:	0cf49b63          	bne	s1,a5,2001240e <_vfiprintf_r+0x106>
2001233c:	0049a483          	lw	s1,4(s3)
20012340:	00c4d783          	lhu	a5,12(s1)
20012344:	8ba1                	andi	a5,a5,8
20012346:	c7f5                	beqz	a5,20012432 <_vfiprintf_r+0x12a>
20012348:	489c                	lw	a5,16(s1)
2001234a:	c7e5                	beqz	a5,20012432 <_vfiprintf_r+0x12a>
2001234c:	02000793          	li	a5,32
20012350:	02f104a3          	sb	a5,41(sp)
20012354:	03000793          	li	a5,48
20012358:	d202                	sw	zero,36(sp)
2001235a:	02f10523          	sb	a5,42(sp)
2001235e:	c622                	sw	s0,12(sp)
20012360:	02500b93          	li	s7,37
20012364:	ffffea97          	auipc	s5,0xffffe
20012368:	09ca8a93          	addi	s5,s5,156 # 20010400 <__sf_fake_stdout+0x20>
2001236c:	4c05                	li	s8,1
2001236e:	4b29                	li	s6,10
20012370:	844a                	mv	s0,s2
20012372:	00044783          	lbu	a5,0(s0)
20012376:	c399                	beqz	a5,2001237c <_vfiprintf_r+0x74>
20012378:	0f779063          	bne	a5,s7,20012458 <_vfiprintf_r+0x150>
2001237c:	41240cb3          	sub	s9,s0,s2
20012380:	01240d63          	beq	s0,s2,2001239a <_vfiprintf_r+0x92>
20012384:	86e6                	mv	a3,s9
20012386:	864a                	mv	a2,s2
20012388:	85a6                	mv	a1,s1
2001238a:	854e                	mv	a0,s3
2001238c:	3f2d                	jal	200122c6 <__sfputs_r>
2001238e:	57fd                	li	a5,-1
20012390:	1ef50463          	beq	a0,a5,20012578 <_vfiprintf_r+0x270>
20012394:	5792                	lw	a5,36(sp)
20012396:	97e6                	add	a5,a5,s9
20012398:	d23e                	sw	a5,36(sp)
2001239a:	00044783          	lbu	a5,0(s0)
2001239e:	1c078d63          	beqz	a5,20012578 <_vfiprintf_r+0x270>
200123a2:	57fd                	li	a5,-1
200123a4:	00140913          	addi	s2,s0,1
200123a8:	c802                	sw	zero,16(sp)
200123aa:	ce02                	sw	zero,28(sp)
200123ac:	ca3e                	sw	a5,20(sp)
200123ae:	cc02                	sw	zero,24(sp)
200123b0:	040109a3          	sb	zero,83(sp)
200123b4:	d482                	sw	zero,104(sp)
200123b6:	00094583          	lbu	a1,0(s2)
200123ba:	4615                	li	a2,5
200123bc:	8556                	mv	a0,s5
200123be:	2661                	jal	20012746 <memchr>
200123c0:	47c2                	lw	a5,16(sp)
200123c2:	00190413          	addi	s0,s2,1
200123c6:	e959                	bnez	a0,2001245c <_vfiprintf_r+0x154>
200123c8:	0107f713          	andi	a4,a5,16
200123cc:	c709                	beqz	a4,200123d6 <_vfiprintf_r+0xce>
200123ce:	02000713          	li	a4,32
200123d2:	04e109a3          	sb	a4,83(sp)
200123d6:	0087f713          	andi	a4,a5,8
200123da:	c709                	beqz	a4,200123e4 <_vfiprintf_r+0xdc>
200123dc:	02b00713          	li	a4,43
200123e0:	04e109a3          	sb	a4,83(sp)
200123e4:	00094683          	lbu	a3,0(s2)
200123e8:	02a00713          	li	a4,42
200123ec:	08e68063          	beq	a3,a4,2001246c <_vfiprintf_r+0x164>
200123f0:	47f2                	lw	a5,28(sp)
200123f2:	844a                	mv	s0,s2
200123f4:	4681                	li	a3,0
200123f6:	4625                	li	a2,9
200123f8:	00044703          	lbu	a4,0(s0)
200123fc:	00140593          	addi	a1,s0,1
20012400:	fd070713          	addi	a4,a4,-48
20012404:	0ae67963          	bgeu	a2,a4,200124b6 <_vfiprintf_r+0x1ae>
20012408:	cab5                	beqz	a3,2001247c <_vfiprintf_r+0x174>
2001240a:	ce3e                	sw	a5,28(sp)
2001240c:	a885                	j	2001247c <_vfiprintf_r+0x174>
2001240e:	ffffe797          	auipc	a5,0xffffe
20012412:	fd278793          	addi	a5,a5,-46 # 200103e0 <__sf_fake_stdout>
20012416:	00f49563          	bne	s1,a5,20012420 <_vfiprintf_r+0x118>
2001241a:	0089a483          	lw	s1,8(s3)
2001241e:	b70d                	j	20012340 <_vfiprintf_r+0x38>
20012420:	ffffe797          	auipc	a5,0xffffe
20012424:	f8078793          	addi	a5,a5,-128 # 200103a0 <__sf_fake_stderr>
20012428:	f0f49ce3          	bne	s1,a5,20012340 <_vfiprintf_r+0x38>
2001242c:	00c9a483          	lw	s1,12(s3)
20012430:	bf01                	j	20012340 <_vfiprintf_r+0x38>
20012432:	85a6                	mv	a1,s1
20012434:	854e                	mv	a0,s3
20012436:	fe6ff0ef          	jal	ra,20011c1c <__swsetup_r>
2001243a:	d909                	beqz	a0,2001234c <_vfiprintf_r+0x44>
2001243c:	557d                	li	a0,-1
2001243e:	40fa                	lw	ra,156(sp)
20012440:	446a                	lw	s0,152(sp)
20012442:	44da                	lw	s1,148(sp)
20012444:	494a                	lw	s2,144(sp)
20012446:	49ba                	lw	s3,140(sp)
20012448:	4a2a                	lw	s4,136(sp)
2001244a:	4a9a                	lw	s5,132(sp)
2001244c:	4b0a                	lw	s6,128(sp)
2001244e:	5bf6                	lw	s7,124(sp)
20012450:	5c66                	lw	s8,120(sp)
20012452:	5cd6                	lw	s9,116(sp)
20012454:	610d                	addi	sp,sp,160
20012456:	8082                	ret
20012458:	0405                	addi	s0,s0,1
2001245a:	bf21                	j	20012372 <_vfiprintf_r+0x6a>
2001245c:	41550533          	sub	a0,a0,s5
20012460:	00ac1533          	sll	a0,s8,a0
20012464:	8fc9                	or	a5,a5,a0
20012466:	c83e                	sw	a5,16(sp)
20012468:	8922                	mv	s2,s0
2001246a:	b7b1                	j	200123b6 <_vfiprintf_r+0xae>
2001246c:	4732                	lw	a4,12(sp)
2001246e:	00470693          	addi	a3,a4,4
20012472:	4318                	lw	a4,0(a4)
20012474:	c636                	sw	a3,12(sp)
20012476:	02074963          	bltz	a4,200124a8 <_vfiprintf_r+0x1a0>
2001247a:	ce3a                	sw	a4,28(sp)
2001247c:	00044703          	lbu	a4,0(s0)
20012480:	02e00793          	li	a5,46
20012484:	04f71f63          	bne	a4,a5,200124e2 <_vfiprintf_r+0x1da>
20012488:	00144703          	lbu	a4,1(s0)
2001248c:	02a00793          	li	a5,42
20012490:	02f71b63          	bne	a4,a5,200124c6 <_vfiprintf_r+0x1be>
20012494:	47b2                	lw	a5,12(sp)
20012496:	0409                	addi	s0,s0,2
20012498:	00478713          	addi	a4,a5,4
2001249c:	439c                	lw	a5,0(a5)
2001249e:	c63a                	sw	a4,12(sp)
200124a0:	0207c163          	bltz	a5,200124c2 <_vfiprintf_r+0x1ba>
200124a4:	ca3e                	sw	a5,20(sp)
200124a6:	a835                	j	200124e2 <_vfiprintf_r+0x1da>
200124a8:	40e00733          	neg	a4,a4
200124ac:	0027e793          	ori	a5,a5,2
200124b0:	ce3a                	sw	a4,28(sp)
200124b2:	c83e                	sw	a5,16(sp)
200124b4:	b7e1                	j	2001247c <_vfiprintf_r+0x174>
200124b6:	036787b3          	mul	a5,a5,s6
200124ba:	842e                	mv	s0,a1
200124bc:	4685                	li	a3,1
200124be:	97ba                	add	a5,a5,a4
200124c0:	bf25                	j	200123f8 <_vfiprintf_r+0xf0>
200124c2:	57fd                	li	a5,-1
200124c4:	b7c5                	j	200124a4 <_vfiprintf_r+0x19c>
200124c6:	0405                	addi	s0,s0,1
200124c8:	ca02                	sw	zero,20(sp)
200124ca:	4681                	li	a3,0
200124cc:	4781                	li	a5,0
200124ce:	4625                	li	a2,9
200124d0:	00044703          	lbu	a4,0(s0)
200124d4:	00140593          	addi	a1,s0,1
200124d8:	fd070713          	addi	a4,a4,-48
200124dc:	06e67463          	bgeu	a2,a4,20012544 <_vfiprintf_r+0x23c>
200124e0:	f2f1                	bnez	a3,200124a4 <_vfiprintf_r+0x19c>
200124e2:	00044583          	lbu	a1,0(s0)
200124e6:	460d                	li	a2,3
200124e8:	ffffe517          	auipc	a0,0xffffe
200124ec:	f2050513          	addi	a0,a0,-224 # 20010408 <__sf_fake_stdout+0x28>
200124f0:	2c99                	jal	20012746 <memchr>
200124f2:	cd11                	beqz	a0,2001250e <_vfiprintf_r+0x206>
200124f4:	ffffe797          	auipc	a5,0xffffe
200124f8:	f1478793          	addi	a5,a5,-236 # 20010408 <__sf_fake_stdout+0x28>
200124fc:	8d1d                	sub	a0,a0,a5
200124fe:	04000793          	li	a5,64
20012502:	00a797b3          	sll	a5,a5,a0
20012506:	4542                	lw	a0,16(sp)
20012508:	0405                	addi	s0,s0,1
2001250a:	8d5d                	or	a0,a0,a5
2001250c:	c82a                	sw	a0,16(sp)
2001250e:	00044583          	lbu	a1,0(s0)
20012512:	4619                	li	a2,6
20012514:	ffffe517          	auipc	a0,0xffffe
20012518:	ef850513          	addi	a0,a0,-264 # 2001040c <__sf_fake_stdout+0x2c>
2001251c:	00140913          	addi	s2,s0,1
20012520:	02b10423          	sb	a1,40(sp)
20012524:	240d                	jal	20012746 <memchr>
20012526:	c12d                	beqz	a0,20012588 <_vfiprintf_r+0x280>
20012528:	00000793          	li	a5,0
2001252c:	e795                	bnez	a5,20012558 <_vfiprintf_r+0x250>
2001252e:	4742                	lw	a4,16(sp)
20012530:	47b2                	lw	a5,12(sp)
20012532:	10077713          	andi	a4,a4,256
20012536:	cf09                	beqz	a4,20012550 <_vfiprintf_r+0x248>
20012538:	0791                	addi	a5,a5,4
2001253a:	c63e                	sw	a5,12(sp)
2001253c:	5792                	lw	a5,36(sp)
2001253e:	97d2                	add	a5,a5,s4
20012540:	d23e                	sw	a5,36(sp)
20012542:	b53d                	j	20012370 <_vfiprintf_r+0x68>
20012544:	036787b3          	mul	a5,a5,s6
20012548:	842e                	mv	s0,a1
2001254a:	4685                	li	a3,1
2001254c:	97ba                	add	a5,a5,a4
2001254e:	b749                	j	200124d0 <_vfiprintf_r+0x1c8>
20012550:	079d                	addi	a5,a5,7
20012552:	9be1                	andi	a5,a5,-8
20012554:	07a1                	addi	a5,a5,8
20012556:	b7d5                	j	2001253a <_vfiprintf_r+0x232>
20012558:	0078                	addi	a4,sp,12
2001255a:	00000697          	auipc	a3,0x0
2001255e:	d6c68693          	addi	a3,a3,-660 # 200122c6 <__sfputs_r>
20012562:	8626                	mv	a2,s1
20012564:	080c                	addi	a1,sp,16
20012566:	854e                	mv	a0,s3
20012568:	00000097          	auipc	ra,0x0
2001256c:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20012570:	57fd                	li	a5,-1
20012572:	8a2a                	mv	s4,a0
20012574:	fcf514e3          	bne	a0,a5,2001253c <_vfiprintf_r+0x234>
20012578:	00c4d783          	lhu	a5,12(s1)
2001257c:	0407f793          	andi	a5,a5,64
20012580:	ea079ee3          	bnez	a5,2001243c <_vfiprintf_r+0x134>
20012584:	5512                	lw	a0,36(sp)
20012586:	bd65                	j	2001243e <_vfiprintf_r+0x136>
20012588:	0078                	addi	a4,sp,12
2001258a:	00000697          	auipc	a3,0x0
2001258e:	d3c68693          	addi	a3,a3,-708 # 200122c6 <__sfputs_r>
20012592:	8626                	mv	a2,s1
20012594:	080c                	addi	a1,sp,16
20012596:	854e                	mv	a0,s3
20012598:	2cd1                	jal	2001286c <_printf_i>
2001259a:	bfd9                	j	20012570 <_vfiprintf_r+0x268>

2001259c <__sread>:
__sread():
2001259c:	1141                	addi	sp,sp,-16
2001259e:	c422                	sw	s0,8(sp)
200125a0:	842e                	mv	s0,a1
200125a2:	00e59583          	lh	a1,14(a1)
200125a6:	c606                	sw	ra,12(sp)
200125a8:	2b15                	jal	20012adc <_read_r>
200125aa:	00054963          	bltz	a0,200125bc <__sread+0x20>
200125ae:	487c                	lw	a5,84(s0)
200125b0:	97aa                	add	a5,a5,a0
200125b2:	c87c                	sw	a5,84(s0)
200125b4:	40b2                	lw	ra,12(sp)
200125b6:	4422                	lw	s0,8(sp)
200125b8:	0141                	addi	sp,sp,16
200125ba:	8082                	ret
200125bc:	00c45783          	lhu	a5,12(s0)
200125c0:	777d                	lui	a4,0xfffff
200125c2:	177d                	addi	a4,a4,-1
200125c4:	8ff9                	and	a5,a5,a4
200125c6:	00f41623          	sh	a5,12(s0)
200125ca:	b7ed                	j	200125b4 <__sread+0x18>

200125cc <__swrite>:
__swrite():
200125cc:	00c5d783          	lhu	a5,12(a1)
200125d0:	1101                	addi	sp,sp,-32
200125d2:	cc22                	sw	s0,24(sp)
200125d4:	ca26                	sw	s1,20(sp)
200125d6:	c84a                	sw	s2,16(sp)
200125d8:	c64e                	sw	s3,12(sp)
200125da:	ce06                	sw	ra,28(sp)
200125dc:	1007f793          	andi	a5,a5,256
200125e0:	84aa                	mv	s1,a0
200125e2:	842e                	mv	s0,a1
200125e4:	8932                	mv	s2,a2
200125e6:	89b6                	mv	s3,a3
200125e8:	c791                	beqz	a5,200125f4 <__swrite+0x28>
200125ea:	00e59583          	lh	a1,14(a1)
200125ee:	4689                	li	a3,2
200125f0:	4601                	li	a2,0
200125f2:	220d                	jal	20012714 <_lseek_r>
200125f4:	00c45783          	lhu	a5,12(s0)
200125f8:	777d                	lui	a4,0xfffff
200125fa:	177d                	addi	a4,a4,-1
200125fc:	8ff9                	and	a5,a5,a4
200125fe:	00e41583          	lh	a1,14(s0)
20012602:	00f41623          	sh	a5,12(s0)
20012606:	4462                	lw	s0,24(sp)
20012608:	40f2                	lw	ra,28(sp)
2001260a:	86ce                	mv	a3,s3
2001260c:	864a                	mv	a2,s2
2001260e:	49b2                	lw	s3,12(sp)
20012610:	4942                	lw	s2,16(sp)
20012612:	8526                	mv	a0,s1
20012614:	44d2                	lw	s1,20(sp)
20012616:	6105                	addi	sp,sp,32
20012618:	a83d                	j	20012656 <_write_r>

2001261a <__sseek>:
__sseek():
2001261a:	1141                	addi	sp,sp,-16
2001261c:	c422                	sw	s0,8(sp)
2001261e:	842e                	mv	s0,a1
20012620:	00e59583          	lh	a1,14(a1)
20012624:	c606                	sw	ra,12(sp)
20012626:	20fd                	jal	20012714 <_lseek_r>
20012628:	57fd                	li	a5,-1
2001262a:	00c45703          	lhu	a4,12(s0)
2001262e:	00f51b63          	bne	a0,a5,20012644 <__sseek+0x2a>
20012632:	77fd                	lui	a5,0xfffff
20012634:	17fd                	addi	a5,a5,-1
20012636:	8ff9                	and	a5,a5,a4
20012638:	00f41623          	sh	a5,12(s0)
2001263c:	40b2                	lw	ra,12(sp)
2001263e:	4422                	lw	s0,8(sp)
20012640:	0141                	addi	sp,sp,16
20012642:	8082                	ret
20012644:	6785                	lui	a5,0x1
20012646:	8fd9                	or	a5,a5,a4
20012648:	00f41623          	sh	a5,12(s0)
2001264c:	c868                	sw	a0,84(s0)
2001264e:	b7fd                	j	2001263c <__sseek+0x22>

20012650 <__sclose>:
__sclose():
20012650:	00e59583          	lh	a1,14(a1)
20012654:	a815                	j	20012688 <_close_r>

20012656 <_write_r>:
_write_r():
20012656:	1141                	addi	sp,sp,-16
20012658:	c422                	sw	s0,8(sp)
2001265a:	842a                	mv	s0,a0
2001265c:	852e                	mv	a0,a1
2001265e:	85b2                	mv	a1,a2
20012660:	8636                	mv	a2,a3
20012662:	5ffee797          	auipc	a5,0x5ffee
20012666:	4807a123          	sw	zero,1154(a5) # 80000ae4 <errno>
2001266a:	c606                	sw	ra,12(sp)
2001266c:	23f5                	jal	20012c58 <_write>
2001266e:	57fd                	li	a5,-1
20012670:	00f51863          	bne	a0,a5,20012680 <_write_r+0x2a>
20012674:	5ffee797          	auipc	a5,0x5ffee
20012678:	4707a783          	lw	a5,1136(a5) # 80000ae4 <errno>
2001267c:	c391                	beqz	a5,20012680 <_write_r+0x2a>
2001267e:	c01c                	sw	a5,0(s0)
20012680:	40b2                	lw	ra,12(sp)
20012682:	4422                	lw	s0,8(sp)
20012684:	0141                	addi	sp,sp,16
20012686:	8082                	ret

20012688 <_close_r>:
_close_r():
20012688:	1141                	addi	sp,sp,-16
2001268a:	c422                	sw	s0,8(sp)
2001268c:	842a                	mv	s0,a0
2001268e:	852e                	mv	a0,a1
20012690:	5ffee797          	auipc	a5,0x5ffee
20012694:	4407aa23          	sw	zero,1108(a5) # 80000ae4 <errno>
20012698:	c606                	sw	ra,12(sp)
2001269a:	2995                	jal	20012b0e <_close>
2001269c:	57fd                	li	a5,-1
2001269e:	00f51863          	bne	a0,a5,200126ae <_close_r+0x26>
200126a2:	5ffee797          	auipc	a5,0x5ffee
200126a6:	4427a783          	lw	a5,1090(a5) # 80000ae4 <errno>
200126aa:	c391                	beqz	a5,200126ae <_close_r+0x26>
200126ac:	c01c                	sw	a5,0(s0)
200126ae:	40b2                	lw	ra,12(sp)
200126b0:	4422                	lw	s0,8(sp)
200126b2:	0141                	addi	sp,sp,16
200126b4:	8082                	ret

200126b6 <_fstat_r>:
_fstat_r():
200126b6:	1141                	addi	sp,sp,-16
200126b8:	c422                	sw	s0,8(sp)
200126ba:	842a                	mv	s0,a0
200126bc:	852e                	mv	a0,a1
200126be:	85b2                	mv	a1,a2
200126c0:	5ffee797          	auipc	a5,0x5ffee
200126c4:	4207a223          	sw	zero,1060(a5) # 80000ae4 <errno>
200126c8:	c606                	sw	ra,12(sp)
200126ca:	219d                	jal	20012b30 <_fstat>
200126cc:	57fd                	li	a5,-1
200126ce:	00f51863          	bne	a0,a5,200126de <_fstat_r+0x28>
200126d2:	5ffee797          	auipc	a5,0x5ffee
200126d6:	4127a783          	lw	a5,1042(a5) # 80000ae4 <errno>
200126da:	c391                	beqz	a5,200126de <_fstat_r+0x28>
200126dc:	c01c                	sw	a5,0(s0)
200126de:	40b2                	lw	ra,12(sp)
200126e0:	4422                	lw	s0,8(sp)
200126e2:	0141                	addi	sp,sp,16
200126e4:	8082                	ret

200126e6 <_isatty_r>:
_isatty_r():
200126e6:	1141                	addi	sp,sp,-16
200126e8:	c422                	sw	s0,8(sp)
200126ea:	842a                	mv	s0,a0
200126ec:	852e                	mv	a0,a1
200126ee:	5ffee797          	auipc	a5,0x5ffee
200126f2:	3e07ab23          	sw	zero,1014(a5) # 80000ae4 <errno>
200126f6:	c606                	sw	ra,12(sp)
200126f8:	29b9                	jal	20012b56 <_isatty>
200126fa:	57fd                	li	a5,-1
200126fc:	00f51863          	bne	a0,a5,2001270c <_isatty_r+0x26>
20012700:	5ffee797          	auipc	a5,0x5ffee
20012704:	3e47a783          	lw	a5,996(a5) # 80000ae4 <errno>
20012708:	c391                	beqz	a5,2001270c <_isatty_r+0x26>
2001270a:	c01c                	sw	a5,0(s0)
2001270c:	40b2                	lw	ra,12(sp)
2001270e:	4422                	lw	s0,8(sp)
20012710:	0141                	addi	sp,sp,16
20012712:	8082                	ret

20012714 <_lseek_r>:
_lseek_r():
20012714:	1141                	addi	sp,sp,-16
20012716:	c422                	sw	s0,8(sp)
20012718:	842a                	mv	s0,a0
2001271a:	852e                	mv	a0,a1
2001271c:	85b2                	mv	a1,a2
2001271e:	8636                	mv	a2,a3
20012720:	5ffee797          	auipc	a5,0x5ffee
20012724:	3c07a223          	sw	zero,964(a5) # 80000ae4 <errno>
20012728:	c606                	sw	ra,12(sp)
2001272a:	21b1                	jal	20012b76 <_lseek>
2001272c:	57fd                	li	a5,-1
2001272e:	00f51863          	bne	a0,a5,2001273e <_lseek_r+0x2a>
20012732:	5ffee797          	auipc	a5,0x5ffee
20012736:	3b27a783          	lw	a5,946(a5) # 80000ae4 <errno>
2001273a:	c391                	beqz	a5,2001273e <_lseek_r+0x2a>
2001273c:	c01c                	sw	a5,0(s0)
2001273e:	40b2                	lw	ra,12(sp)
20012740:	4422                	lw	s0,8(sp)
20012742:	0141                	addi	sp,sp,16
20012744:	8082                	ret

20012746 <memchr>:
memchr():
20012746:	0ff5f593          	zext.b	a1,a1
2001274a:	962a                	add	a2,a2,a0
2001274c:	00c51463          	bne	a0,a2,20012754 <memchr+0xe>
20012750:	4501                	li	a0,0
20012752:	8082                	ret
20012754:	00054783          	lbu	a5,0(a0)
20012758:	feb78de3          	beq	a5,a1,20012752 <memchr+0xc>
2001275c:	0505                	addi	a0,a0,1
2001275e:	b7fd                	j	2001274c <memchr+0x6>

20012760 <_printf_common>:
_printf_common():
20012760:	7179                	addi	sp,sp,-48
20012762:	cc52                	sw	s4,24(sp)
20012764:	499c                	lw	a5,16(a1)
20012766:	8a3a                	mv	s4,a4
20012768:	4598                	lw	a4,8(a1)
2001276a:	d422                	sw	s0,40(sp)
2001276c:	d226                	sw	s1,36(sp)
2001276e:	ce4e                	sw	s3,28(sp)
20012770:	ca56                	sw	s5,20(sp)
20012772:	d606                	sw	ra,44(sp)
20012774:	d04a                	sw	s2,32(sp)
20012776:	c85a                	sw	s6,16(sp)
20012778:	c65e                	sw	s7,12(sp)
2001277a:	89aa                	mv	s3,a0
2001277c:	842e                	mv	s0,a1
2001277e:	84b2                	mv	s1,a2
20012780:	8ab6                	mv	s5,a3
20012782:	00e7d363          	bge	a5,a4,20012788 <_printf_common+0x28>
20012786:	87ba                	mv	a5,a4
20012788:	c09c                	sw	a5,0(s1)
2001278a:	04344703          	lbu	a4,67(s0)
2001278e:	c319                	beqz	a4,20012794 <_printf_common+0x34>
20012790:	0785                	addi	a5,a5,1
20012792:	c09c                	sw	a5,0(s1)
20012794:	401c                	lw	a5,0(s0)
20012796:	0207f793          	andi	a5,a5,32
2001279a:	c781                	beqz	a5,200127a2 <_printf_common+0x42>
2001279c:	409c                	lw	a5,0(s1)
2001279e:	0789                	addi	a5,a5,2
200127a0:	c09c                	sw	a5,0(s1)
200127a2:	00042903          	lw	s2,0(s0)
200127a6:	00697913          	andi	s2,s2,6
200127aa:	00091a63          	bnez	s2,200127be <_printf_common+0x5e>
200127ae:	01940b13          	addi	s6,s0,25
200127b2:	5bfd                	li	s7,-1
200127b4:	445c                	lw	a5,12(s0)
200127b6:	4098                	lw	a4,0(s1)
200127b8:	8f99                	sub	a5,a5,a4
200127ba:	04f94c63          	blt	s2,a5,20012812 <_printf_common+0xb2>
200127be:	04344783          	lbu	a5,67(s0)
200127c2:	00f036b3          	snez	a3,a5
200127c6:	401c                	lw	a5,0(s0)
200127c8:	0207f793          	andi	a5,a5,32
200127cc:	eba5                	bnez	a5,2001283c <_printf_common+0xdc>
200127ce:	04340613          	addi	a2,s0,67
200127d2:	85d6                	mv	a1,s5
200127d4:	854e                	mv	a0,s3
200127d6:	9a02                	jalr	s4
200127d8:	57fd                	li	a5,-1
200127da:	04f50363          	beq	a0,a5,20012820 <_printf_common+0xc0>
200127de:	401c                	lw	a5,0(s0)
200127e0:	4611                	li	a2,4
200127e2:	4098                	lw	a4,0(s1)
200127e4:	8b99                	andi	a5,a5,6
200127e6:	4454                	lw	a3,12(s0)
200127e8:	4481                	li	s1,0
200127ea:	00c79763          	bne	a5,a2,200127f8 <_printf_common+0x98>
200127ee:	40e684b3          	sub	s1,a3,a4
200127f2:	0004d363          	bgez	s1,200127f8 <_printf_common+0x98>
200127f6:	4481                	li	s1,0
200127f8:	441c                	lw	a5,8(s0)
200127fa:	4818                	lw	a4,16(s0)
200127fc:	00f75463          	bge	a4,a5,20012804 <_printf_common+0xa4>
20012800:	8f99                	sub	a5,a5,a4
20012802:	94be                	add	s1,s1,a5
20012804:	4901                	li	s2,0
20012806:	0469                	addi	s0,s0,26
20012808:	5b7d                	li	s6,-1
2001280a:	05249863          	bne	s1,s2,2001285a <_printf_common+0xfa>
2001280e:	4501                	li	a0,0
20012810:	a809                	j	20012822 <_printf_common+0xc2>
20012812:	4685                	li	a3,1
20012814:	865a                	mv	a2,s6
20012816:	85d6                	mv	a1,s5
20012818:	854e                	mv	a0,s3
2001281a:	9a02                	jalr	s4
2001281c:	01751e63          	bne	a0,s7,20012838 <_printf_common+0xd8>
20012820:	557d                	li	a0,-1
20012822:	50b2                	lw	ra,44(sp)
20012824:	5422                	lw	s0,40(sp)
20012826:	5492                	lw	s1,36(sp)
20012828:	5902                	lw	s2,32(sp)
2001282a:	49f2                	lw	s3,28(sp)
2001282c:	4a62                	lw	s4,24(sp)
2001282e:	4ad2                	lw	s5,20(sp)
20012830:	4b42                	lw	s6,16(sp)
20012832:	4bb2                	lw	s7,12(sp)
20012834:	6145                	addi	sp,sp,48
20012836:	8082                	ret
20012838:	0905                	addi	s2,s2,1
2001283a:	bfad                	j	200127b4 <_printf_common+0x54>
2001283c:	00d40733          	add	a4,s0,a3
20012840:	03000613          	li	a2,48
20012844:	04c701a3          	sb	a2,67(a4) # fffff043 <metal_segment_heap_target_end+0x7fffcd33>
20012848:	04544703          	lbu	a4,69(s0)
2001284c:	00168793          	addi	a5,a3,1
20012850:	97a2                	add	a5,a5,s0
20012852:	0689                	addi	a3,a3,2
20012854:	04e781a3          	sb	a4,67(a5)
20012858:	bf9d                	j	200127ce <_printf_common+0x6e>
2001285a:	4685                	li	a3,1
2001285c:	8622                	mv	a2,s0
2001285e:	85d6                	mv	a1,s5
20012860:	854e                	mv	a0,s3
20012862:	9a02                	jalr	s4
20012864:	fb650ee3          	beq	a0,s6,20012820 <_printf_common+0xc0>
20012868:	0905                	addi	s2,s2,1
2001286a:	b745                	j	2001280a <_printf_common+0xaa>

2001286c <_printf_i>:
_printf_i():
2001286c:	7179                	addi	sp,sp,-48
2001286e:	d422                	sw	s0,40(sp)
20012870:	d226                	sw	s1,36(sp)
20012872:	d04a                	sw	s2,32(sp)
20012874:	ce4e                	sw	s3,28(sp)
20012876:	d606                	sw	ra,44(sp)
20012878:	cc52                	sw	s4,24(sp)
2001287a:	ca56                	sw	s5,20(sp)
2001287c:	c85a                	sw	s6,16(sp)
2001287e:	0185c803          	lbu	a6,24(a1)
20012882:	07800793          	li	a5,120
20012886:	84aa                	mv	s1,a0
20012888:	842e                	mv	s0,a1
2001288a:	8932                	mv	s2,a2
2001288c:	89b6                	mv	s3,a3
2001288e:	0107ee63          	bltu	a5,a6,200128aa <_printf_i+0x3e>
20012892:	06200793          	li	a5,98
20012896:	04358693          	addi	a3,a1,67
2001289a:	0107ed63          	bltu	a5,a6,200128b4 <_printf_i+0x48>
2001289e:	1c080563          	beqz	a6,20012a68 <_printf_i+0x1fc>
200128a2:	05800793          	li	a5,88
200128a6:	12f80a63          	beq	a6,a5,200129da <_printf_i+0x16e>
200128aa:	04240a93          	addi	s5,s0,66
200128ae:	05040123          	sb	a6,66(s0)
200128b2:	a815                	j	200128e6 <_printf_i+0x7a>
200128b4:	f9d80793          	addi	a5,a6,-99
200128b8:	0ff7f793          	zext.b	a5,a5
200128bc:	4655                	li	a2,21
200128be:	fef666e3          	bltu	a2,a5,200128aa <_printf_i+0x3e>
200128c2:	ffffe617          	auipc	a2,0xffffe
200128c6:	b7a60613          	addi	a2,a2,-1158 # 2001043c <__sf_fake_stdout+0x5c>
200128ca:	078a                	slli	a5,a5,0x2
200128cc:	97b2                	add	a5,a5,a2
200128ce:	439c                	lw	a5,0(a5)
200128d0:	97b2                	add	a5,a5,a2
200128d2:	8782                	jr	a5
200128d4:	431c                	lw	a5,0(a4)
200128d6:	04258a93          	addi	s5,a1,66
200128da:	00478693          	addi	a3,a5,4
200128de:	439c                	lw	a5,0(a5)
200128e0:	c314                	sw	a3,0(a4)
200128e2:	04f58123          	sb	a5,66(a1)
200128e6:	4785                	li	a5,1
200128e8:	a25d                	j	20012a8e <_printf_i+0x222>
200128ea:	419c                	lw	a5,0(a1)
200128ec:	4308                	lw	a0,0(a4)
200128ee:	0807f613          	andi	a2,a5,128
200128f2:	00450593          	addi	a1,a0,4
200128f6:	c20d                	beqz	a2,20012918 <_printf_i+0xac>
200128f8:	411c                	lw	a5,0(a0)
200128fa:	c30c                	sw	a1,0(a4)
200128fc:	0007d863          	bgez	a5,2001290c <_printf_i+0xa0>
20012900:	02d00713          	li	a4,45
20012904:	40f007b3          	neg	a5,a5
20012908:	04e401a3          	sb	a4,67(s0)
2001290c:	ffffe617          	auipc	a2,0xffffe
20012910:	b0860613          	addi	a2,a2,-1272 # 20010414 <__sf_fake_stdout+0x34>
20012914:	4829                	li	a6,10
20012916:	a0a1                	j	2001295e <_printf_i+0xf2>
20012918:	0407f613          	andi	a2,a5,64
2001291c:	411c                	lw	a5,0(a0)
2001291e:	c30c                	sw	a1,0(a4)
20012920:	de71                	beqz	a2,200128fc <_printf_i+0x90>
20012922:	07c2                	slli	a5,a5,0x10
20012924:	87c1                	srai	a5,a5,0x10
20012926:	bfd9                	j	200128fc <_printf_i+0x90>
20012928:	4190                	lw	a2,0(a1)
2001292a:	431c                	lw	a5,0(a4)
2001292c:	08067513          	andi	a0,a2,128
20012930:	00478593          	addi	a1,a5,4
20012934:	c501                	beqz	a0,2001293c <_printf_i+0xd0>
20012936:	c30c                	sw	a1,0(a4)
20012938:	439c                	lw	a5,0(a5)
2001293a:	a039                	j	20012948 <_printf_i+0xdc>
2001293c:	04067613          	andi	a2,a2,64
20012940:	c30c                	sw	a1,0(a4)
20012942:	da7d                	beqz	a2,20012938 <_printf_i+0xcc>
20012944:	0007d783          	lhu	a5,0(a5)
20012948:	06f00713          	li	a4,111
2001294c:	ffffe617          	auipc	a2,0xffffe
20012950:	ac860613          	addi	a2,a2,-1336 # 20010414 <__sf_fake_stdout+0x34>
20012954:	0ee80463          	beq	a6,a4,20012a3c <_printf_i+0x1d0>
20012958:	4829                	li	a6,10
2001295a:	040401a3          	sb	zero,67(s0)
2001295e:	4058                	lw	a4,4(s0)
20012960:	c418                	sw	a4,8(s0)
20012962:	00074563          	bltz	a4,2001296c <_printf_i+0x100>
20012966:	400c                	lw	a1,0(s0)
20012968:	99ed                	andi	a1,a1,-5
2001296a:	c00c                	sw	a1,0(s0)
2001296c:	e399                	bnez	a5,20012972 <_printf_i+0x106>
2001296e:	8ab6                	mv	s5,a3
20012970:	cf19                	beqz	a4,2001298e <_printf_i+0x122>
20012972:	8ab6                	mv	s5,a3
20012974:	0307f733          	remu	a4,a5,a6
20012978:	1afd                	addi	s5,s5,-1
2001297a:	9732                	add	a4,a4,a2
2001297c:	00074703          	lbu	a4,0(a4)
20012980:	00ea8023          	sb	a4,0(s5)
20012984:	873e                	mv	a4,a5
20012986:	0307d7b3          	divu	a5,a5,a6
2001298a:	ff0775e3          	bgeu	a4,a6,20012974 <_printf_i+0x108>
2001298e:	47a1                	li	a5,8
20012990:	00f81e63          	bne	a6,a5,200129ac <_printf_i+0x140>
20012994:	401c                	lw	a5,0(s0)
20012996:	8b85                	andi	a5,a5,1
20012998:	cb91                	beqz	a5,200129ac <_printf_i+0x140>
2001299a:	4058                	lw	a4,4(s0)
2001299c:	481c                	lw	a5,16(s0)
2001299e:	00e7c763          	blt	a5,a4,200129ac <_printf_i+0x140>
200129a2:	03000793          	li	a5,48
200129a6:	fefa8fa3          	sb	a5,-1(s5)
200129aa:	1afd                	addi	s5,s5,-1
200129ac:	415686b3          	sub	a3,a3,s5
200129b0:	c814                	sw	a3,16(s0)
200129b2:	874e                	mv	a4,s3
200129b4:	86ca                	mv	a3,s2
200129b6:	0070                	addi	a2,sp,12
200129b8:	85a2                	mv	a1,s0
200129ba:	8526                	mv	a0,s1
200129bc:	3355                	jal	20012760 <_printf_common>
200129be:	5a7d                	li	s4,-1
200129c0:	0d451b63          	bne	a0,s4,20012a96 <_printf_i+0x22a>
200129c4:	557d                	li	a0,-1
200129c6:	50b2                	lw	ra,44(sp)
200129c8:	5422                	lw	s0,40(sp)
200129ca:	5492                	lw	s1,36(sp)
200129cc:	5902                	lw	s2,32(sp)
200129ce:	49f2                	lw	s3,28(sp)
200129d0:	4a62                	lw	s4,24(sp)
200129d2:	4ad2                	lw	s5,20(sp)
200129d4:	4b42                	lw	s6,16(sp)
200129d6:	6145                	addi	sp,sp,48
200129d8:	8082                	ret
200129da:	050582a3          	sb	a6,69(a1)
200129de:	ffffe617          	auipc	a2,0xffffe
200129e2:	a3660613          	addi	a2,a2,-1482 # 20010414 <__sf_fake_stdout+0x34>
200129e6:	400c                	lw	a1,0(s0)
200129e8:	4308                	lw	a0,0(a4)
200129ea:	0805f813          	andi	a6,a1,128
200129ee:	411c                	lw	a5,0(a0)
200129f0:	0511                	addi	a0,a0,4
200129f2:	02080d63          	beqz	a6,20012a2c <_printf_i+0x1c0>
200129f6:	c308                	sw	a0,0(a4)
200129f8:	0015f713          	andi	a4,a1,1
200129fc:	c701                	beqz	a4,20012a04 <_printf_i+0x198>
200129fe:	0205e593          	ori	a1,a1,32
20012a02:	c00c                	sw	a1,0(s0)
20012a04:	4841                	li	a6,16
20012a06:	fbb1                	bnez	a5,2001295a <_printf_i+0xee>
20012a08:	4018                	lw	a4,0(s0)
20012a0a:	fdf77713          	andi	a4,a4,-33
20012a0e:	c018                	sw	a4,0(s0)
20012a10:	b7a9                	j	2001295a <_printf_i+0xee>
20012a12:	419c                	lw	a5,0(a1)
20012a14:	0207e793          	ori	a5,a5,32
20012a18:	c19c                	sw	a5,0(a1)
20012a1a:	07800793          	li	a5,120
20012a1e:	04f402a3          	sb	a5,69(s0)
20012a22:	ffffe617          	auipc	a2,0xffffe
20012a26:	a0660613          	addi	a2,a2,-1530 # 20010428 <__sf_fake_stdout+0x48>
20012a2a:	bf75                	j	200129e6 <_printf_i+0x17a>
20012a2c:	0405f813          	andi	a6,a1,64
20012a30:	c308                	sw	a0,0(a4)
20012a32:	fc0803e3          	beqz	a6,200129f8 <_printf_i+0x18c>
20012a36:	07c2                	slli	a5,a5,0x10
20012a38:	83c1                	srli	a5,a5,0x10
20012a3a:	bf7d                	j	200129f8 <_printf_i+0x18c>
20012a3c:	4821                	li	a6,8
20012a3e:	bf31                	j	2001295a <_printf_i+0xee>
20012a40:	4190                	lw	a2,0(a1)
20012a42:	431c                	lw	a5,0(a4)
20012a44:	49cc                	lw	a1,20(a1)
20012a46:	08067813          	andi	a6,a2,128
20012a4a:	00478513          	addi	a0,a5,4
20012a4e:	00080663          	beqz	a6,20012a5a <_printf_i+0x1ee>
20012a52:	c308                	sw	a0,0(a4)
20012a54:	439c                	lw	a5,0(a5)
20012a56:	c38c                	sw	a1,0(a5)
20012a58:	a801                	j	20012a68 <_printf_i+0x1fc>
20012a5a:	c308                	sw	a0,0(a4)
20012a5c:	04067613          	andi	a2,a2,64
20012a60:	439c                	lw	a5,0(a5)
20012a62:	da75                	beqz	a2,20012a56 <_printf_i+0x1ea>
20012a64:	00b79023          	sh	a1,0(a5)
20012a68:	00042823          	sw	zero,16(s0)
20012a6c:	8ab6                	mv	s5,a3
20012a6e:	b791                	j	200129b2 <_printf_i+0x146>
20012a70:	431c                	lw	a5,0(a4)
20012a72:	41d0                	lw	a2,4(a1)
20012a74:	4581                	li	a1,0
20012a76:	00478693          	addi	a3,a5,4
20012a7a:	c314                	sw	a3,0(a4)
20012a7c:	0007aa83          	lw	s5,0(a5)
20012a80:	8556                	mv	a0,s5
20012a82:	31d1                	jal	20012746 <memchr>
20012a84:	c501                	beqz	a0,20012a8c <_printf_i+0x220>
20012a86:	41550533          	sub	a0,a0,s5
20012a8a:	c048                	sw	a0,4(s0)
20012a8c:	405c                	lw	a5,4(s0)
20012a8e:	c81c                	sw	a5,16(s0)
20012a90:	040401a3          	sb	zero,67(s0)
20012a94:	bf39                	j	200129b2 <_printf_i+0x146>
20012a96:	4814                	lw	a3,16(s0)
20012a98:	8656                	mv	a2,s5
20012a9a:	85ca                	mv	a1,s2
20012a9c:	8526                	mv	a0,s1
20012a9e:	9982                	jalr	s3
20012aa0:	f34502e3          	beq	a0,s4,200129c4 <_printf_i+0x158>
20012aa4:	401c                	lw	a5,0(s0)
20012aa6:	8b89                	andi	a5,a5,2
20012aa8:	e78d                	bnez	a5,20012ad2 <_printf_i+0x266>
20012aaa:	47b2                	lw	a5,12(sp)
20012aac:	4448                	lw	a0,12(s0)
20012aae:	f0f55ce3          	bge	a0,a5,200129c6 <_printf_i+0x15a>
20012ab2:	853e                	mv	a0,a5
20012ab4:	bf09                	j	200129c6 <_printf_i+0x15a>
20012ab6:	4685                	li	a3,1
20012ab8:	8656                	mv	a2,s5
20012aba:	85ca                	mv	a1,s2
20012abc:	8526                	mv	a0,s1
20012abe:	9982                	jalr	s3
20012ac0:	f16502e3          	beq	a0,s6,200129c4 <_printf_i+0x158>
20012ac4:	0a05                	addi	s4,s4,1
20012ac6:	445c                	lw	a5,12(s0)
20012ac8:	4732                	lw	a4,12(sp)
20012aca:	8f99                	sub	a5,a5,a4
20012acc:	fefa45e3          	blt	s4,a5,20012ab6 <_printf_i+0x24a>
20012ad0:	bfe9                	j	20012aaa <_printf_i+0x23e>
20012ad2:	4a01                	li	s4,0
20012ad4:	01940a93          	addi	s5,s0,25
20012ad8:	5b7d                	li	s6,-1
20012ada:	b7f5                	j	20012ac6 <_printf_i+0x25a>

20012adc <_read_r>:
_read_r():
20012adc:	1141                	addi	sp,sp,-16
20012ade:	c422                	sw	s0,8(sp)
20012ae0:	842a                	mv	s0,a0
20012ae2:	852e                	mv	a0,a1
20012ae4:	85b2                	mv	a1,a2
20012ae6:	8636                	mv	a2,a3
20012ae8:	5ffee797          	auipc	a5,0x5ffee
20012aec:	fe07ae23          	sw	zero,-4(a5) # 80000ae4 <errno>
20012af0:	c606                	sw	ra,12(sp)
20012af2:	207d                	jal	20012ba0 <_read>
20012af4:	57fd                	li	a5,-1
20012af6:	00f51863          	bne	a0,a5,20012b06 <_read_r+0x2a>
20012afa:	5ffee797          	auipc	a5,0x5ffee
20012afe:	fea7a783          	lw	a5,-22(a5) # 80000ae4 <errno>
20012b02:	c391                	beqz	a5,20012b06 <_read_r+0x2a>
20012b04:	c01c                	sw	a5,0(s0)
20012b06:	40b2                	lw	ra,12(sp)
20012b08:	4422                	lw	s0,8(sp)
20012b0a:	0141                	addi	sp,sp,16
20012b0c:	8082                	ret

20012b0e <_close>:
_close():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
20012b0e:	1101                	addi	sp,sp,-32
20012b10:	ce06                	sw	ra,28(sp)
20012b12:	cc22                	sw	s0,24(sp)
20012b14:	1000                	addi	s0,sp,32
20012b16:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
20012b1a:	2a5d                	jal	20012cd0 <__errno>
20012b1c:	872a                	mv	a4,a0
20012b1e:	05800793          	li	a5,88
20012b22:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_close.c:5
    return -1;
20012b24:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_close.c:6
}
20012b26:	853e                	mv	a0,a5
20012b28:	40f2                	lw	ra,28(sp)
20012b2a:	4462                	lw	s0,24(sp)
20012b2c:	6105                	addi	sp,sp,32
20012b2e:	8082                	ret

20012b30 <_fstat>:
_fstat():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20012b30:	1101                	addi	sp,sp,-32
20012b32:	ce06                	sw	ra,28(sp)
20012b34:	cc22                	sw	s0,24(sp)
20012b36:	1000                	addi	s0,sp,32
20012b38:	fea42623          	sw	a0,-20(s0)
20012b3c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
20012b40:	2a41                	jal	20012cd0 <__errno>
20012b42:	872a                	mv	a4,a0
20012b44:	fa800793          	li	a5,-88
20012b48:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_fstat.c:6
    return -1;
20012b4a:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_fstat.c:7
}
20012b4c:	853e                	mv	a0,a5
20012b4e:	40f2                	lw	ra,28(sp)
20012b50:	4462                	lw	s0,24(sp)
20012b52:	6105                	addi	sp,sp,32
20012b54:	8082                	ret

20012b56 <_isatty>:
_isatty():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
20012b56:	1101                	addi	sp,sp,-32
20012b58:	ce22                	sw	s0,28(sp)
20012b5a:	1000                	addi	s0,sp,32
20012b5c:	fea42623          	sw	a0,-20(s0)
20012b60:	fec42783          	lw	a5,-20(s0)
20012b64:	17fd                	addi	a5,a5,-1
20012b66:	0017b793          	seqz	a5,a5
20012b6a:	0ff7f793          	zext.b	a5,a5
20012b6e:	853e                	mv	a0,a5
20012b70:	4472                	lw	s0,28(sp)
20012b72:	6105                	addi	sp,sp,32
20012b74:	8082                	ret

20012b76 <_lseek>:
_lseek():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
20012b76:	1101                	addi	sp,sp,-32
20012b78:	ce06                	sw	ra,28(sp)
20012b7a:	cc22                	sw	s0,24(sp)
20012b7c:	1000                	addi	s0,sp,32
20012b7e:	fea42623          	sw	a0,-20(s0)
20012b82:	feb42423          	sw	a1,-24(s0)
20012b86:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
20012b8a:	2299                	jal	20012cd0 <__errno>
20012b8c:	872a                	mv	a4,a0
20012b8e:	05800793          	li	a5,88
20012b92:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_lseek.c:6
    return -1;
20012b94:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_lseek.c:7
}
20012b96:	853e                	mv	a0,a5
20012b98:	40f2                	lw	ra,28(sp)
20012b9a:	4462                	lw	s0,24(sp)
20012b9c:	6105                	addi	sp,sp,32
20012b9e:	8082                	ret

20012ba0 <_read>:
_read():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20012ba0:	1101                	addi	sp,sp,-32
20012ba2:	ce06                	sw	ra,28(sp)
20012ba4:	cc22                	sw	s0,24(sp)
20012ba6:	1000                	addi	s0,sp,32
20012ba8:	fea42623          	sw	a0,-20(s0)
20012bac:	feb42423          	sw	a1,-24(s0)
20012bb0:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20012bb4:	2a31                	jal	20012cd0 <__errno>
20012bb6:	872a                	mv	a4,a0
20012bb8:	05800793          	li	a5,88
20012bbc:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_read.c:6
    return -1;
20012bbe:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_read.c:7
}
20012bc0:	853e                	mv	a0,a5
20012bc2:	40f2                	lw	ra,28(sp)
20012bc4:	4462                	lw	s0,24(sp)
20012bc6:	6105                	addi	sp,sp,32
20012bc8:	8082                	ret

20012bca <_sbrk>:
_sbrk():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
20012bca:	7179                	addi	sp,sp,-48
20012bcc:	d606                	sw	ra,44(sp)
20012bce:	d422                	sw	s0,40(sp)
20012bd0:	1800                	addi	s0,sp,48
20012bd2:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20012bd6:	800017b7          	lui	a5,0x80001
20012bda:	aa47a783          	lw	a5,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xffffe794>
20012bde:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20012be2:	800027b7          	lui	a5,0x80002
20012be6:	b1078713          	addi	a4,a5,-1264 # 80001b10 <metal_segment_heap_target_end+0xfffff800>
20012bea:	800027b7          	lui	a5,0x80002
20012bee:	31078793          	addi	a5,a5,784 # 80002310 <metal_segment_heap_target_end+0x0>
20012bf2:	00f71463          	bne	a4,a5,20012bfa <_sbrk+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20012bf6:	57fd                	li	a5,-1
20012bf8:	a899                	j	20012c4e <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20012bfa:	800017b7          	lui	a5,0x80001
20012bfe:	aa47a703          	lw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xffffe794>
20012c02:	fdc42783          	lw	a5,-36(s0)
20012c06:	973e                	add	a4,a4,a5
20012c08:	800027b7          	lui	a5,0x80002
20012c0c:	31078793          	addi	a5,a5,784 # 80002310 <metal_segment_heap_target_end+0x0>
20012c10:	02f77663          	bgeu	a4,a5,20012c3c <_sbrk+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20012c14:	800017b7          	lui	a5,0x80001
20012c18:	aa47a703          	lw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xffffe794>
20012c1c:	fdc42783          	lw	a5,-36(s0)
20012c20:	973e                	add	a4,a4,a5
20012c22:	800017b7          	lui	a5,0x80001
20012c26:	aae7a223          	sw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xffffe794>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20012c2a:	fdc42583          	lw	a1,-36(s0)
20012c2e:	fec42503          	lw	a0,-20(s0)
20012c32:	c5cfd0ef          	jal	ra,2001008e <metal_mem_scrub>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20012c36:	fec42783          	lw	a5,-20(s0)
20012c3a:	a811                	j	20012c4e <_sbrk+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20012c3c:	800017b7          	lui	a5,0x80001
20012c40:	80002737          	lui	a4,0x80002
20012c44:	31070713          	addi	a4,a4,784 # 80002310 <metal_segment_heap_target_end+0x0>
20012c48:	aae7a223          	sw	a4,-1372(a5) # 80000aa4 <metal_segment_heap_target_end+0xffffe794>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
20012c4c:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_sbrk.c:43
}
20012c4e:	853e                	mv	a0,a5
20012c50:	50b2                	lw	ra,44(sp)
20012c52:	5422                	lw	s0,40(sp)
20012c54:	6145                	addi	sp,sp,48
20012c56:	8082                	ret

20012c58 <_write>:
_write():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
20012c58:	7179                	addi	sp,sp,-48
20012c5a:	d606                	sw	ra,44(sp)
20012c5c:	d422                	sw	s0,40(sp)
20012c5e:	1800                	addi	s0,sp,48
20012c60:	fca42e23          	sw	a0,-36(s0)
20012c64:	fcb42c23          	sw	a1,-40(s0)
20012c68:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
20012c6c:	fdc42703          	lw	a4,-36(s0)
20012c70:	4785                	li	a5,1
20012c72:	00f70963          	beq	a4,a5,20012c84 <_write+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
20012c76:	28a9                	jal	20012cd0 <__errno>
20012c78:	872a                	mv	a4,a0
20012c7a:	05800793          	li	a5,88
20012c7e:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:10
        return -1;
20012c80:	57fd                	li	a5,-1
20012c82:	a82d                	j	20012cbc <_write+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
20012c84:	fd842783          	lw	a5,-40(s0)
20012c88:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
20012c8c:	fe042623          	sw	zero,-20(s0)
20012c90:	a839                	j	20012cae <_write+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
20012c92:	fe842703          	lw	a4,-24(s0)
20012c96:	fec42783          	lw	a5,-20(s0)
20012c9a:	97ba                	add	a5,a5,a4
20012c9c:	0007c783          	lbu	a5,0(a5)
20012ca0:	853e                	mv	a0,a5
20012ca2:	26c1                	jal	20013062 <metal_tty_putc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20012ca4:	fec42783          	lw	a5,-20(s0)
20012ca8:	0785                	addi	a5,a5,1
20012caa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
20012cae:	fec42703          	lw	a4,-20(s0)
20012cb2:	fd442783          	lw	a5,-44(s0)
20012cb6:	fcf76ee3          	bltu	a4,a5,20012c92 <_write+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:16
    return 0;
20012cba:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_write.c:17
}
20012cbc:	853e                	mv	a0,a5
20012cbe:	50b2                	lw	ra,44(sp)
20012cc0:	5422                	lw	s0,40(sp)
20012cc2:	6145                	addi	sp,sp,48
20012cc4:	8082                	ret

20012cc6 <atexit>:
atexit():
20012cc6:	85aa                	mv	a1,a0
20012cc8:	4681                	li	a3,0
20012cca:	4601                	li	a2,0
20012ccc:	4501                	li	a0,0
20012cce:	a0e9                	j	20012d98 <__register_exitproc>

20012cd0 <__errno>:
__errno():
20012cd0:	5ffee517          	auipc	a0,0x5ffee
20012cd4:	dd052503          	lw	a0,-560(a0) # 80000aa0 <_impure_ptr>
20012cd8:	8082                	ret

20012cda <exit>:
exit():
20012cda:	1141                	addi	sp,sp,-16
20012cdc:	c422                	sw	s0,8(sp)
20012cde:	c606                	sw	ra,12(sp)
20012ce0:	00000797          	auipc	a5,0x0
20012ce4:	13478793          	addi	a5,a5,308 # 20012e14 <__call_exitprocs>
20012ce8:	842a                	mv	s0,a0
20012cea:	c399                	beqz	a5,20012cf0 <exit+0x16>
20012cec:	4581                	li	a1,0
20012cee:	221d                	jal	20012e14 <__call_exitprocs>
20012cf0:	ffffe517          	auipc	a0,0xffffe
20012cf4:	2f052503          	lw	a0,752(a0) # 20010fe0 <_global_impure_ptr>
20012cf8:	551c                	lw	a5,40(a0)
20012cfa:	c391                	beqz	a5,20012cfe <exit+0x24>
20012cfc:	9782                	jalr	a5
20012cfe:	8522                	mv	a0,s0
20012d00:	435040ef          	jal	ra,20017934 <_exit>

20012d04 <__libc_fini_array>:
__libc_fini_array():
20012d04:	1141                	addi	sp,sp,-16
20012d06:	c422                	sw	s0,8(sp)
20012d08:	c226                	sw	s1,4(sp)
20012d0a:	ffffd417          	auipc	s0,0xffffd
20012d0e:	5e640413          	addi	s0,s0,1510 # 200102f0 <__fini_array_end>
20012d12:	ffffd497          	auipc	s1,0xffffd
20012d16:	5de48493          	addi	s1,s1,1502 # 200102f0 <__fini_array_end>
20012d1a:	8c05                	sub	s0,s0,s1
20012d1c:	c606                	sw	ra,12(sp)
20012d1e:	8409                	srai	s0,s0,0x2
20012d20:	e411                	bnez	s0,20012d2c <__libc_fini_array+0x28>
20012d22:	40b2                	lw	ra,12(sp)
20012d24:	4422                	lw	s0,8(sp)
20012d26:	4492                	lw	s1,4(sp)
20012d28:	0141                	addi	sp,sp,16
20012d2a:	8082                	ret
20012d2c:	147d                	addi	s0,s0,-1
20012d2e:	00241793          	slli	a5,s0,0x2
20012d32:	97a6                	add	a5,a5,s1
20012d34:	439c                	lw	a5,0(a5)
20012d36:	9782                	jalr	a5
20012d38:	b7e5                	j	20012d20 <__libc_fini_array+0x1c>

20012d3a <__libc_init_array>:
__libc_init_array():
20012d3a:	1141                	addi	sp,sp,-16
20012d3c:	c422                	sw	s0,8(sp)
20012d3e:	c226                	sw	s1,4(sp)
20012d40:	ffffd417          	auipc	s0,0xffffd
20012d44:	5a040413          	addi	s0,s0,1440 # 200102e0 <_metal_tty_init_ptr>
20012d48:	ffffd497          	auipc	s1,0xffffd
20012d4c:	59848493          	addi	s1,s1,1432 # 200102e0 <_metal_tty_init_ptr>
20012d50:	8c81                	sub	s1,s1,s0
20012d52:	c04a                	sw	s2,0(sp)
20012d54:	c606                	sw	ra,12(sp)
20012d56:	8489                	srai	s1,s1,0x2
20012d58:	4901                	li	s2,0
20012d5a:	02991563          	bne	s2,s1,20012d84 <__libc_init_array+0x4a>
20012d5e:	ffffd417          	auipc	s0,0xffffd
20012d62:	58240413          	addi	s0,s0,1410 # 200102e0 <_metal_tty_init_ptr>
20012d66:	ffffd497          	auipc	s1,0xffffd
20012d6a:	57a48493          	addi	s1,s1,1402 # 200102e0 <_metal_tty_init_ptr>
20012d6e:	8c81                	sub	s1,s1,s0
20012d70:	8489                	srai	s1,s1,0x2
20012d72:	4901                	li	s2,0
20012d74:	00991d63          	bne	s2,s1,20012d8e <__libc_init_array+0x54>
20012d78:	40b2                	lw	ra,12(sp)
20012d7a:	4422                	lw	s0,8(sp)
20012d7c:	4492                	lw	s1,4(sp)
20012d7e:	4902                	lw	s2,0(sp)
20012d80:	0141                	addi	sp,sp,16
20012d82:	8082                	ret
20012d84:	401c                	lw	a5,0(s0)
20012d86:	0905                	addi	s2,s2,1
20012d88:	0411                	addi	s0,s0,4
20012d8a:	9782                	jalr	a5
20012d8c:	b7f9                	j	20012d5a <__libc_init_array+0x20>
20012d8e:	401c                	lw	a5,0(s0)
20012d90:	0905                	addi	s2,s2,1
20012d92:	0411                	addi	s0,s0,4
20012d94:	9782                	jalr	a5
20012d96:	bff9                	j	20012d74 <__libc_init_array+0x3a>

20012d98 <__register_exitproc>:
__register_exitproc():
20012d98:	88aa                	mv	a7,a0
20012d9a:	5ffee517          	auipc	a0,0x5ffee
20012d9e:	d4e50513          	addi	a0,a0,-690 # 80000ae8 <_global_atexit>
20012da2:	411c                	lw	a5,0(a0)
20012da4:	ef91                	bnez	a5,20012dc0 <__register_exitproc+0x28>
20012da6:	5ffee717          	auipc	a4,0x5ffee
20012daa:	d4e70713          	addi	a4,a4,-690 # 80000af4 <_global_atexit0>
20012dae:	c118                	sw	a4,0(a0)
20012db0:	00000513          	li	a0,0
20012db4:	87ba                	mv	a5,a4
20012db6:	c509                	beqz	a0,20012dc0 <__register_exitproc+0x28>
20012db8:	411c                	lw	a5,0(a0)
20012dba:	08f72423          	sw	a5,136(a4)
20012dbe:	87ba                	mv	a5,a4
20012dc0:	43d8                	lw	a4,4(a5)
20012dc2:	487d                	li	a6,31
20012dc4:	557d                	li	a0,-1
20012dc6:	04e84663          	blt	a6,a4,20012e12 <__register_exitproc+0x7a>
20012dca:	02088d63          	beqz	a7,20012e04 <__register_exitproc+0x6c>
20012dce:	0887a803          	lw	a6,136(a5)
20012dd2:	04080063          	beqz	a6,20012e12 <__register_exitproc+0x7a>
20012dd6:	00271513          	slli	a0,a4,0x2
20012dda:	9542                	add	a0,a0,a6
20012ddc:	c110                	sw	a2,0(a0)
20012dde:	10082303          	lw	t1,256(a6)
20012de2:	4605                	li	a2,1
20012de4:	00e61633          	sll	a2,a2,a4
20012de8:	00c36333          	or	t1,t1,a2
20012dec:	10682023          	sw	t1,256(a6)
20012df0:	08d52023          	sw	a3,128(a0)
20012df4:	4689                	li	a3,2
20012df6:	00d89763          	bne	a7,a3,20012e04 <__register_exitproc+0x6c>
20012dfa:	10482683          	lw	a3,260(a6)
20012dfe:	8e55                	or	a2,a2,a3
20012e00:	10c82223          	sw	a2,260(a6)
20012e04:	00170693          	addi	a3,a4,1
20012e08:	070a                	slli	a4,a4,0x2
20012e0a:	c3d4                	sw	a3,4(a5)
20012e0c:	97ba                	add	a5,a5,a4
20012e0e:	c78c                	sw	a1,8(a5)
20012e10:	4501                	li	a0,0
20012e12:	8082                	ret

20012e14 <__call_exitprocs>:
__call_exitprocs():
20012e14:	7179                	addi	sp,sp,-48
20012e16:	ca56                	sw	s5,20(sp)
20012e18:	c85a                	sw	s6,16(sp)
20012e1a:	c65e                	sw	s7,12(sp)
20012e1c:	c462                	sw	s8,8(sp)
20012e1e:	d606                	sw	ra,44(sp)
20012e20:	d422                	sw	s0,40(sp)
20012e22:	d226                	sw	s1,36(sp)
20012e24:	d04a                	sw	s2,32(sp)
20012e26:	ce4e                	sw	s3,28(sp)
20012e28:	cc52                	sw	s4,24(sp)
20012e2a:	c266                	sw	s9,4(sp)
20012e2c:	8b2a                	mv	s6,a0
20012e2e:	8aae                	mv	s5,a1
20012e30:	5ffeeb97          	auipc	s7,0x5ffee
20012e34:	cb8b8b93          	addi	s7,s7,-840 # 80000ae8 <_global_atexit>
20012e38:	4c05                	li	s8,1
20012e3a:	000ba483          	lw	s1,0(s7)
20012e3e:	cc81                	beqz	s1,20012e56 <__call_exitprocs+0x42>
20012e40:	40c0                	lw	s0,4(s1)
20012e42:	0884a983          	lw	s3,136(s1)
20012e46:	fff40913          	addi	s2,s0,-1
20012e4a:	040a                	slli	s0,s0,0x2
20012e4c:	00898a33          	add	s4,s3,s0
20012e50:	9426                	add	s0,s0,s1
20012e52:	00095f63          	bgez	s2,20012e70 <__call_exitprocs+0x5c>
20012e56:	50b2                	lw	ra,44(sp)
20012e58:	5422                	lw	s0,40(sp)
20012e5a:	5492                	lw	s1,36(sp)
20012e5c:	5902                	lw	s2,32(sp)
20012e5e:	49f2                	lw	s3,28(sp)
20012e60:	4a62                	lw	s4,24(sp)
20012e62:	4ad2                	lw	s5,20(sp)
20012e64:	4b42                	lw	s6,16(sp)
20012e66:	4bb2                	lw	s7,12(sp)
20012e68:	4c22                	lw	s8,8(sp)
20012e6a:	4c92                	lw	s9,4(sp)
20012e6c:	6145                	addi	sp,sp,48
20012e6e:	8082                	ret
20012e70:	000a8c63          	beqz	s5,20012e88 <__call_exitprocs+0x74>
20012e74:	00099663          	bnez	s3,20012e80 <__call_exitprocs+0x6c>
20012e78:	197d                	addi	s2,s2,-1
20012e7a:	1a71                	addi	s4,s4,-4
20012e7c:	1471                	addi	s0,s0,-4
20012e7e:	bfd1                	j	20012e52 <__call_exitprocs+0x3e>
20012e80:	07ca2783          	lw	a5,124(s4)
20012e84:	ff579ae3          	bne	a5,s5,20012e78 <__call_exitprocs+0x64>
20012e88:	40d8                	lw	a4,4(s1)
20012e8a:	405c                	lw	a5,4(s0)
20012e8c:	177d                	addi	a4,a4,-1
20012e8e:	03271863          	bne	a4,s2,20012ebe <__call_exitprocs+0xaa>
20012e92:	0124a223          	sw	s2,4(s1)
20012e96:	d3ed                	beqz	a5,20012e78 <__call_exitprocs+0x64>
20012e98:	0044ac83          	lw	s9,4(s1)
20012e9c:	00098863          	beqz	s3,20012eac <__call_exitprocs+0x98>
20012ea0:	1009a683          	lw	a3,256(s3)
20012ea4:	012c1733          	sll	a4,s8,s2
20012ea8:	8ef9                	and	a3,a3,a4
20012eaa:	ee89                	bnez	a3,20012ec4 <__call_exitprocs+0xb0>
20012eac:	9782                	jalr	a5
20012eae:	40d8                	lw	a4,4(s1)
20012eb0:	000ba783          	lw	a5,0(s7)
20012eb4:	f99713e3          	bne	a4,s9,20012e3a <__call_exitprocs+0x26>
20012eb8:	fcf480e3          	beq	s1,a5,20012e78 <__call_exitprocs+0x64>
20012ebc:	bfbd                	j	20012e3a <__call_exitprocs+0x26>
20012ebe:	00042223          	sw	zero,4(s0)
20012ec2:	bfd1                	j	20012e96 <__call_exitprocs+0x82>
20012ec4:	1049a683          	lw	a3,260(s3)
20012ec8:	ffca2583          	lw	a1,-4(s4)
20012ecc:	8f75                	and	a4,a4,a3
20012ece:	e701                	bnez	a4,20012ed6 <__call_exitprocs+0xc2>
20012ed0:	855a                	mv	a0,s6
20012ed2:	9782                	jalr	a5
20012ed4:	bfe9                	j	20012eae <__call_exitprocs+0x9a>
20012ed6:	852e                	mv	a0,a1
20012ed8:	9782                	jalr	a5
20012eda:	bfd1                	j	20012eae <__call_exitprocs+0x9a>

20012edc <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20012edc:	1101                	addi	sp,sp,-32
20012ede:	ce06                	sw	ra,28(sp)
20012ee0:	cc22                	sw	s0,24(sp)
20012ee2:	1000                	addi	s0,sp,32
20012ee4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20012ee8:	fec42783          	lw	a5,-20(s0)
20012eec:	439c                	lw	a5,0(a5)
20012eee:	57dc                	lw	a5,44(a5)
20012ef0:	fec42503          	lw	a0,-20(s0)
20012ef4:	9782                	jalr	a5
20012ef6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/cpu.h:226
}
20012ef8:	853e                	mv	a0,a5
20012efa:	40f2                	lw	ra,28(sp)
20012efc:	4462                	lw	s0,24(sp)
20012efe:	6105                	addi	sp,sp,32
20012f00:	8082                	ret

20012f02 <metal_cpu_get>:
metal_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20012f02:	1101                	addi	sp,sp,-32
20012f04:	ce22                	sw	s0,28(sp)
20012f06:	1000                	addi	s0,sp,32
20012f08:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20012f0c:	fec42783          	lw	a5,-20(s0)
20012f10:	eb99                	bnez	a5,20012f26 <metal_cpu_get+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20012f12:	800017b7          	lui	a5,0x80001
20012f16:	fec42703          	lw	a4,-20(s0)
20012f1a:	070a                	slli	a4,a4,0x2
20012f1c:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20012f20:	97ba                	add	a5,a5,a4
20012f22:	439c                	lw	a5,0(a5)
20012f24:	a011                	j	20012f28 <metal_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:11
    }
    return NULL;
20012f26:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:12
}
20012f28:	853e                	mv	a0,a5
20012f2a:	4472                	lw	s0,28(sp)
20012f2c:	6105                	addi	sp,sp,32
20012f2e:	8082                	ret

20012f30 <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20012f30:	1101                	addi	sp,sp,-32
20012f32:	ce22                	sw	s0,28(sp)
20012f34:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20012f36:	f14027f3          	csrr	a5,mhartid
20012f3a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:18
    return mhartid;
20012f3e:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/cpu.c:20
#endif
}
20012f42:	853e                	mv	a0,a5
20012f44:	4472                	lw	s0,28(sp)
20012f46:	6105                	addi	sp,sp,32
20012f48:	8082                	ret

20012f4a <metal_init>:
metal_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20012f4a:	1101                	addi	sp,sp,-32
20012f4c:	ce06                	sw	ra,28(sp)
20012f4e:	cc22                	sw	s0,24(sp)
20012f50:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20012f52:	800017b7          	lui	a5,0x80001
20012f56:	aec7a783          	lw	a5,-1300(a5) # 80000aec <metal_segment_heap_target_end+0xffffe7dc>
20012f5a:	efa9                	bnez	a5,20012fb4 <metal_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
20012f5c:	800017b7          	lui	a5,0x80001
20012f60:	4705                	li	a4,1
20012f62:	aee7a623          	sw	a4,-1300(a5) # 80000aec <metal_segment_heap_target_end+0xffffe7dc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20012f66:	200107b7          	lui	a5,0x20010
20012f6a:	2ec78713          	addi	a4,a5,748 # 200102ec <metal_tty_init>
20012f6e:	200107b7          	lui	a5,0x20010
20012f72:	2e078793          	addi	a5,a5,736 # 200102e0 <_metal_tty_init_ptr>
20012f76:	04e7f163          	bgeu	a5,a4,20012fb8 <metal_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20012f7a:	200107b7          	lui	a5,0x20010
20012f7e:	2e078793          	addi	a5,a5,736 # 200102e0 <_metal_tty_init_ptr>
20012f82:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20012f86:	a831                	j	20012fa2 <metal_init+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20012f88:	fec42783          	lw	a5,-20(s0)
20012f8c:	439c                	lw	a5,0(a5)
20012f8e:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:33

        func();
20012f92:	fe842783          	lw	a5,-24(s0)
20012f96:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:35

        funcptr += 1;
20012f98:	fec42783          	lw	a5,-20(s0)
20012f9c:	0791                	addi	a5,a5,4
20012f9e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20012fa2:	fec42703          	lw	a4,-20(s0)
20012fa6:	200107b7          	lui	a5,0x20010
20012faa:	2ec78793          	addi	a5,a5,748 # 200102ec <metal_tty_init>
20012fae:	fcf71de3          	bne	a4,a5,20012f88 <metal_init+0x3e>
20012fb2:	a021                	j	20012fba <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:21
        return;
20012fb4:	0001                	nop
20012fb6:	a011                	j	20012fba <metal_init+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:26
        return;
20012fb8:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:37
    }
}
20012fba:	40f2                	lw	ra,28(sp)
20012fbc:	4462                	lw	s0,24(sp)
20012fbe:	6105                	addi	sp,sp,32
20012fc0:	8082                	ret

20012fc2 <metal_fini>:
metal_fini():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:39

void metal_fini(void) {
20012fc2:	1101                	addi	sp,sp,-32
20012fc4:	ce06                	sw	ra,28(sp)
20012fc6:	cc22                	sw	s0,24(sp)
20012fc8:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
20012fca:	800017b7          	lui	a5,0x80001
20012fce:	af07a783          	lw	a5,-1296(a5) # 80000af0 <metal_segment_heap_target_end+0xffffe7e0>
20012fd2:	efa9                	bnez	a5,2001302c <metal_fini+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
20012fd4:	800017b7          	lui	a5,0x80001
20012fd8:	4705                	li	a4,1
20012fda:	aee7a823          	sw	a4,-1296(a5) # 80000af0 <metal_segment_heap_target_end+0xffffe7e0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
20012fde:	200107b7          	lui	a5,0x20010
20012fe2:	2f078713          	addi	a4,a5,752 # 200102f0 <__fini_array_end>
20012fe6:	200107b7          	lui	a5,0x20010
20012fea:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
20012fee:	04e7f163          	bgeu	a5,a4,20013030 <metal_fini+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
20012ff2:	200107b7          	lui	a5,0x20010
20012ff6:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
20012ffa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20012ffe:	a831                	j	2001301a <metal_fini+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
20013000:	fec42783          	lw	a5,-20(s0)
20013004:	439c                	lw	a5,0(a5)
20013006:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:55

        func();
2001300a:	fe842783          	lw	a5,-24(s0)
2001300e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:57

        funcptr += 1;
20013010:	fec42783          	lw	a5,-20(s0)
20013014:	0791                	addi	a5,a5,4
20013016:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
2001301a:	fec42703          	lw	a4,-20(s0)
2001301e:	200107b7          	lui	a5,0x20010
20013022:	2f078793          	addi	a5,a5,752 # 200102f0 <__fini_array_end>
20013026:	fcf71de3          	bne	a4,a5,20013000 <metal_fini+0x3e>
2001302a:	a021                	j	20013032 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:43
        return;
2001302c:	0001                	nop
2001302e:	a011                	j	20013032 <metal_fini+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:48
        return;
20013030:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:59
    }
}
20013032:	40f2                	lw	ra,28(sp)
20013034:	4462                	lw	s0,24(sp)
20013036:	6105                	addi	sp,sp,32
20013038:	8082                	ret

2001303a <metal_init_run>:
metal_init_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
2001303a:	1141                	addi	sp,sp,-16
2001303c:	c606                	sw	ra,12(sp)
2001303e:	c422                	sw	s0,8(sp)
20013040:	0800                	addi	s0,sp,16
20013042:	3721                	jal	20012f4a <metal_init>
20013044:	0001                	nop
20013046:	40b2                	lw	ra,12(sp)
20013048:	4422                	lw	s0,8(sp)
2001304a:	0141                	addi	sp,sp,16
2001304c:	8082                	ret

2001304e <metal_fini_run>:
metal_fini_run():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2001304e:	1141                	addi	sp,sp,-16
20013050:	c606                	sw	ra,12(sp)
20013052:	c422                	sw	s0,8(sp)
20013054:	0800                	addi	s0,sp,16
20013056:	37b5                	jal	20012fc2 <metal_fini>
20013058:	0001                	nop
2001305a:	40b2                	lw	ra,12(sp)
2001305c:	4422                	lw	s0,8(sp)
2001305e:	0141                	addi	sp,sp,16
20013060:	8082                	ret

20013062 <metal_tty_putc>:
metal_tty_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20013062:	1101                	addi	sp,sp,-32
20013064:	ce06                	sw	ra,28(sp)
20013066:	cc22                	sw	s0,24(sp)
20013068:	1000                	addi	s0,sp,32
2001306a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2001306e:	fec42583          	lw	a1,-20(s0)
20013072:	800017b7          	lui	a5,0x80001
20013076:	a3878513          	addi	a0,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
2001307a:	282d                	jal	200130b4 <metal_uart_putc>
2001307c:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/tty.c:14
}
2001307e:	853e                	mv	a0,a5
20013080:	40f2                	lw	ra,28(sp)
20013082:	4462                	lw	s0,24(sp)
20013084:	6105                	addi	sp,sp,32
20013086:	8082                	ret

20013088 <metal_uart_init>:
metal_uart_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20013088:	1101                	addi	sp,sp,-32
2001308a:	ce06                	sw	ra,28(sp)
2001308c:	cc22                	sw	s0,24(sp)
2001308e:	1000                	addi	s0,sp,32
20013090:	fea42623          	sw	a0,-20(s0)
20013094:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20013098:	fec42783          	lw	a5,-20(s0)
2001309c:	439c                	lw	a5,0(a5)
2001309e:	439c                	lw	a5,0(a5)
200130a0:	fe842583          	lw	a1,-24(s0)
200130a4:	fec42503          	lw	a0,-20(s0)
200130a8:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:61
}
200130aa:	0001                	nop
200130ac:	40f2                	lw	ra,28(sp)
200130ae:	4462                	lw	s0,24(sp)
200130b0:	6105                	addi	sp,sp,32
200130b2:	8082                	ret

200130b4 <metal_uart_putc>:
metal_uart_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
200130b4:	1101                	addi	sp,sp,-32
200130b6:	ce06                	sw	ra,28(sp)
200130b8:	cc22                	sw	s0,24(sp)
200130ba:	1000                	addi	s0,sp,32
200130bc:	fea42623          	sw	a0,-20(s0)
200130c0:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
200130c4:	fec42783          	lw	a5,-20(s0)
200130c8:	439c                	lw	a5,0(a5)
200130ca:	43dc                	lw	a5,4(a5)
200130cc:	fe842583          	lw	a1,-24(s0)
200130d0:	fec42503          	lw	a0,-20(s0)
200130d4:	9782                	jalr	a5
200130d6:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:71
}
200130d8:	853e                	mv	a0,a5
200130da:	40f2                	lw	ra,28(sp)
200130dc:	4462                	lw	s0,24(sp)
200130de:	6105                	addi	sp,sp,32
200130e0:	8082                	ret

200130e2 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
200130e2:	1101                	addi	sp,sp,-32
200130e4:	ce06                	sw	ra,28(sp)
200130e6:	cc22                	sw	s0,24(sp)
200130e8:	1000                	addi	s0,sp,32
200130ea:	fea42623          	sw	a0,-20(s0)
200130ee:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
200130f2:	fec42783          	lw	a5,-20(s0)
200130f6:	439c                	lw	a5,0(a5)
200130f8:	4bdc                	lw	a5,20(a5)
200130fa:	fe842583          	lw	a1,-24(s0)
200130fe:	fec42503          	lw	a0,-20(s0)
20013102:	9782                	jalr	a5
20013104:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/uart.h:113
}
20013106:	853e                	mv	a0,a5
20013108:	40f2                	lw	ra,28(sp)
2001310a:	4462                	lw	s0,24(sp)
2001310c:	6105                	addi	sp,sp,32
2001310e:	8082                	ret

20013110 <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:233
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
20013110:	1101                	addi	sp,sp,-32
20013112:	ce22                	sw	s0,28(sp)
20013114:	1000                	addi	s0,sp,32
20013116:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:234
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
2001311a:	fec42703          	lw	a4,-20(s0)
2001311e:	800017b7          	lui	a5,0x80001
20013122:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xffffe79c>
20013126:	00f71563          	bne	a4,a5,20013130 <__metal_driver_sifive_clint0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:235
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
2001312a:	020007b7          	lui	a5,0x2000
2001312e:	a011                	j	20013132 <__metal_driver_sifive_clint0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:238
	}
	else {
		return 0;
20013130:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:240
	}
}
20013132:	853e                	mv	a0,a5
20013134:	4472                	lw	s0,28(sp)
20013136:	6105                	addi	sp,sp,32
20013138:	8082                	ret

2001313a <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:253
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
2001313a:	1101                	addi	sp,sp,-32
2001313c:	ce22                	sw	s0,28(sp)
2001313e:	1000                	addi	s0,sp,32
20013140:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:254
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20013144:	fec42703          	lw	a4,-20(s0)
20013148:	800017b7          	lui	a5,0x80001
2001314c:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xffffe79c>
20013150:	00f71463          	bne	a4,a5,20013158 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:255
		return METAL_MAX_CLINT_INTERRUPTS;
20013154:	4789                	li	a5,2
20013156:	a011                	j	2001315a <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:258
	}
	else {
		return 0;
20013158:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:260
	}
}
2001315a:	853e                	mv	a0,a5
2001315c:	4472                	lw	s0,28(sp)
2001315e:	6105                	addi	sp,sp,32
20013160:	8082                	ret

20013162 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:263

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20013162:	1101                	addi	sp,sp,-32
20013164:	ce22                	sw	s0,28(sp)
20013166:	1000                	addi	s0,sp,32
20013168:	fea42623          	sw	a0,-20(s0)
2001316c:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:264
	if (idx == 0) {
20013170:	fe842783          	lw	a5,-24(s0)
20013174:	e791                	bnez	a5,20013180 <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:265
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20013176:	800007b7          	lui	a5,0x80000
2001317a:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffdd80>
2001317e:	a821                	j	20013196 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:267
	}
	else if (idx == 1) {
20013180:	fe842703          	lw	a4,-24(s0)
20013184:	4785                	li	a5,1
20013186:	00f71763          	bne	a4,a5,20013194 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:268
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
2001318a:	800007b7          	lui	a5,0x80000
2001318e:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffdd80>
20013192:	a011                	j	20013196 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:271
	}
	else {
		return NULL;
20013194:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:273
	}
}
20013196:	853e                	mv	a0,a5
20013198:	4472                	lw	s0,28(sp)
2001319a:	6105                	addi	sp,sp,32
2001319c:	8082                	ret

2001319e <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:276

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
2001319e:	1101                	addi	sp,sp,-32
200131a0:	ce22                	sw	s0,28(sp)
200131a2:	1000                	addi	s0,sp,32
200131a4:	fea42623          	sw	a0,-20(s0)
200131a8:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:277
	if (idx == 0) {
200131ac:	fe842783          	lw	a5,-24(s0)
200131b0:	e399                	bnez	a5,200131b6 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:278
		return 3;
200131b2:	478d                	li	a5,3
200131b4:	a809                	j	200131c6 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:280
	}
	else if (idx == 1) {
200131b6:	fe842703          	lw	a4,-24(s0)
200131ba:	4785                	li	a5,1
200131bc:	00f71463          	bne	a4,a5,200131c4 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:281
		return 7;
200131c0:	479d                	li	a5,7
200131c2:	a011                	j	200131c6 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:284
	}
	else {
		return 0;
200131c4:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:286
	}
}
200131c6:	853e                	mv	a0,a5
200131c8:	4472                	lw	s0,28(sp)
200131ca:	6105                	addi	sp,sp,32
200131cc:	8082                	ret

200131ce <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
200131ce:	715d                	addi	sp,sp,-80
200131d0:	c686                	sw	ra,76(sp)
200131d2:	c4a2                	sw	s0,72(sp)
200131d4:	c2ca                	sw	s2,68(sp)
200131d6:	c0ce                	sw	s3,64(sp)
200131d8:	de52                	sw	s4,60(sp)
200131da:	dc56                	sw	s5,56(sp)
200131dc:	da5a                	sw	s6,52(sp)
200131de:	d85e                	sw	s7,48(sp)
200131e0:	d662                	sw	s8,44(sp)
200131e2:	d466                	sw	s9,40(sp)
200131e4:	0880                	addi	s0,sp,80
200131e6:	faa42e23          	sw	a0,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
200131ea:	fbc42783          	lw	a5,-68(s0)
200131ee:	853e                	mv	a0,a5
200131f0:	3705                	jal	20013110 <__metal_driver_sifive_clint0_control_base>
200131f2:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
200131f6:	fcc42703          	lw	a4,-52(s0)
200131fa:	67b1                	lui	a5,0xc
200131fc:	17f1                	addi	a5,a5,-4
200131fe:	97ba                	add	a5,a5,a4
20013200:	439c                	lw	a5,0(a5)
20013202:	fcf42423          	sw	a5,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20013206:	fcc42703          	lw	a4,-52(s0)
2001320a:	67b1                	lui	a5,0xc
2001320c:	17e1                	addi	a5,a5,-8
2001320e:	97ba                	add	a5,a5,a4
20013210:	439c                	lw	a5,0(a5)
20013212:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20013216:	fcc42703          	lw	a4,-52(s0)
2001321a:	67b1                	lui	a5,0xc
2001321c:	17f1                	addi	a5,a5,-4
2001321e:	97ba                	add	a5,a5,a4
20013220:	439c                	lw	a5,0(a5)
20013222:	fc842703          	lw	a4,-56(s0)
20013226:	fcf718e3          	bne	a4,a5,200131f6 <__metal_clint0_mtime_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
2001322a:	fc842783          	lw	a5,-56(s0)
2001322e:	8c3e                	mv	s8,a5
20013230:	4c81                	li	s9,0
20013232:	000c1993          	slli	s3,s8,0x0
20013236:	4901                	li	s2,0
20013238:	fc442783          	lw	a5,-60(s0)
2001323c:	8a3e                	mv	s4,a5
2001323e:	4a81                	li	s5,0
20013240:	01496b33          	or	s6,s2,s4
20013244:	0159ebb3          	or	s7,s3,s5
20013248:	875a                	mv	a4,s6
2001324a:	87de                	mv	a5,s7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:30
}
2001324c:	853a                	mv	a0,a4
2001324e:	85be                	mv	a1,a5
20013250:	40b6                	lw	ra,76(sp)
20013252:	4426                	lw	s0,72(sp)
20013254:	4916                	lw	s2,68(sp)
20013256:	4986                	lw	s3,64(sp)
20013258:	5a72                	lw	s4,60(sp)
2001325a:	5ae2                	lw	s5,56(sp)
2001325c:	5b52                	lw	s6,52(sp)
2001325e:	5bc2                	lw	s7,48(sp)
20013260:	5c32                	lw	s8,44(sp)
20013262:	5ca2                	lw	s9,40(sp)
20013264:	6161                	addi	sp,sp,80
20013266:	8082                	ret

20013268 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20013268:	7179                	addi	sp,sp,-48
2001326a:	d606                	sw	ra,44(sp)
2001326c:	d422                	sw	s0,40(sp)
2001326e:	d24a                	sw	s2,36(sp)
20013270:	d04e                	sw	s3,32(sp)
20013272:	1800                	addi	s0,sp,48
20013274:	fca42e23          	sw	a0,-36(s0)
20013278:	fcb42c23          	sw	a1,-40(s0)
2001327c:	fcc42823          	sw	a2,-48(s0)
20013280:	fcd42a23          	sw	a3,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20013284:	fdc42783          	lw	a5,-36(s0)
20013288:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
2001328c:	fec42783          	lw	a5,-20(s0)
20013290:	853e                	mv	a0,a5
20013292:	3dbd                	jal	20013110 <__metal_driver_sifive_clint0_control_base>
20013294:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20013298:	fd842783          	lw	a5,-40(s0)
2001329c:	078e                	slli	a5,a5,0x3
2001329e:	873e                	mv	a4,a5
200132a0:	fe842783          	lw	a5,-24(s0)
200132a4:	973e                	add	a4,a4,a5
200132a6:	6791                	lui	a5,0x4
200132a8:	0791                	addi	a5,a5,4
200132aa:	97ba                	add	a5,a5,a4
200132ac:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
200132ae:	57fd                	li	a5,-1
200132b0:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200132b2:	fd842783          	lw	a5,-40(s0)
200132b6:	078e                	slli	a5,a5,0x3
200132b8:	873e                	mv	a4,a5
200132ba:	fe842783          	lw	a5,-24(s0)
200132be:	973e                	add	a4,a4,a5
200132c0:	6791                	lui	a5,0x4
200132c2:	97ba                	add	a5,a5,a4
200132c4:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
200132c6:	fd042783          	lw	a5,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
200132ca:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
200132cc:	fd442783          	lw	a5,-44(s0)
200132d0:	0007d913          	srli	s2,a5,0x0
200132d4:	4981                	li	s3,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
200132d6:	fd842783          	lw	a5,-40(s0)
200132da:	078e                	slli	a5,a5,0x3
200132dc:	873e                	mv	a4,a5
200132de:	fe842783          	lw	a5,-24(s0)
200132e2:	973e                	add	a4,a4,a5
200132e4:	6791                	lui	a5,0x4
200132e6:	0791                	addi	a5,a5,4
200132e8:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
200132ea:	874a                	mv	a4,s2
200132ec:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
200132ee:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:55
}
200132f0:	853e                	mv	a0,a5
200132f2:	50b2                	lw	ra,44(sp)
200132f4:	5422                	lw	s0,40(sp)
200132f6:	5912                	lw	s2,36(sp)
200132f8:	5982                	lw	s3,32(sp)
200132fa:	6145                	addi	sp,sp,48
200132fc:	8082                	ret

200132fe <_get_cpu_intc>:
_get_cpu_intc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
200132fe:	1101                	addi	sp,sp,-32
20013300:	ce06                	sw	ra,28(sp)
20013302:	cc22                	sw	s0,24(sp)
20013304:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20013306:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
2001330a:	f14027f3          	csrr	a5,mhartid
2001330e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20013312:	fec42783          	lw	a5,-20(s0)
20013316:	853e                	mv	a0,a5
20013318:	36ed                	jal	20012f02 <metal_cpu_get>
2001331a:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
2001331e:	fe842503          	lw	a0,-24(s0)
20013322:	3e6d                	jal	20012edc <metal_cpu_interrupt_controller>
20013324:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:65
}
20013326:	853e                	mv	a0,a5
20013328:	40f2                	lw	ra,28(sp)
2001332a:	4462                	lw	s0,24(sp)
2001332c:	6105                	addi	sp,sp,32
2001332e:	8082                	ret

20013330 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20013330:	7139                	addi	sp,sp,-64
20013332:	de06                	sw	ra,60(sp)
20013334:	dc22                	sw	s0,56(sp)
20013336:	0080                	addi	s0,sp,64
20013338:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
2001333c:	fcc42503          	lw	a0,-52(s0)
20013340:	3bed                	jal	2001313a <__metal_driver_sifive_clint0_num_interrupts>
20013342:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20013346:	fcc42783          	lw	a5,-52(s0)
2001334a:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
2001334e:	fe442783          	lw	a5,-28(s0)
20013352:	43dc                	lw	a5,4(a5)
20013354:	efa9                	bnez	a5,200133ae <__metal_driver_riscv_clint0_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20013356:	fe042623          	sw	zero,-20(s0)
2001335a:	a081                	j	2001339a <__metal_driver_riscv_clint0_init+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001335c:	fec42583          	lw	a1,-20(s0)
20013360:	fcc42503          	lw	a0,-52(s0)
20013364:	3bfd                	jal	20013162 <__metal_driver_sifive_clint0_interrupt_parents>
20013366:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001336a:	fec42583          	lw	a1,-20(s0)
2001336e:	fcc42503          	lw	a0,-52(s0)
20013372:	3535                	jal	2001319e <__metal_driver_sifive_clint0_interrupt_lines>
20013374:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20013378:	fe042783          	lw	a5,-32(s0)
2001337c:	439c                	lw	a5,0(a5)
2001337e:	4fdc                	lw	a5,28(a5)
20013380:	fcc42683          	lw	a3,-52(s0)
20013384:	4601                	li	a2,0
20013386:	fdc42583          	lw	a1,-36(s0)
2001338a:	fe042503          	lw	a0,-32(s0)
2001338e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20013390:	fec42783          	lw	a5,-20(s0)
20013394:	0785                	addi	a5,a5,1
20013396:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
2001339a:	fec42703          	lw	a4,-20(s0)
2001339e:	fe842783          	lw	a5,-24(s0)
200133a2:	faf74de3          	blt	a4,a5,2001335c <__metal_driver_riscv_clint0_init+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
200133a6:	fe442783          	lw	a5,-28(s0)
200133aa:	4705                	li	a4,1
200133ac:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
200133ae:	0001                	nop
200133b0:	50f2                	lw	ra,60(sp)
200133b2:	5462                	lw	s0,56(sp)
200133b4:	6121                	addi	sp,sp,64
200133b6:	8082                	ret

200133b8 <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
200133b8:	7139                	addi	sp,sp,-64
200133ba:	de06                	sw	ra,60(sp)
200133bc:	dc22                	sw	s0,56(sp)
200133be:	0080                	addi	s0,sp,64
200133c0:	fca42623          	sw	a0,-52(s0)
200133c4:	fcb42423          	sw	a1,-56(s0)
200133c8:	fcc42223          	sw	a2,-60(s0)
200133cc:	fcd42023          	sw	a3,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
200133d0:	57fd                	li	a5,-1
200133d2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
200133d6:	484010ef          	jal	ra,2001485a <__metal_controller_interrupt_vector_mode>
200133da:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
200133de:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
200133e2:	3f31                	jal	200132fe <_get_cpu_intc>
200133e4:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
200133e8:	fcc42503          	lw	a0,-52(s0)
200133ec:	33b9                	jal	2001313a <__metal_driver_sifive_clint0_num_interrupts>
200133ee:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
200133f2:	fe042703          	lw	a4,-32(s0)
200133f6:	4785                	li	a5,1
200133f8:	00f70863          	beq	a4,a5,20013408 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
200133fc:	fe042783          	lw	a5,-32(s0)
20013400:	c781                	beqz	a5,20013408 <__metal_driver_riscv_clint0_register+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20013402:	fec42783          	lw	a5,-20(s0)
20013406:	a049                	j	20013488 <__metal_driver_riscv_clint0_register+0xd0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20013408:	fe042223          	sw	zero,-28(s0)
2001340c:	a091                	j	20013450 <__metal_driver_riscv_clint0_register+0x98>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
2001340e:	fe442583          	lw	a1,-28(s0)
20013412:	fcc42503          	lw	a0,-52(s0)
20013416:	3361                	jal	2001319e <__metal_driver_sifive_clint0_interrupt_lines>
20013418:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
2001341c:	fe442583          	lw	a1,-28(s0)
20013420:	fcc42503          	lw	a0,-52(s0)
20013424:	3b3d                	jal	20013162 <__metal_driver_sifive_clint0_interrupt_parents>
20013426:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
2001342a:	fdc42703          	lw	a4,-36(s0)
2001342e:	fe842783          	lw	a5,-24(s0)
20013432:	00f71863          	bne	a4,a5,20013442 <__metal_driver_riscv_clint0_register+0x8a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20013436:	fc842703          	lw	a4,-56(s0)
2001343a:	fd442783          	lw	a5,-44(s0)
2001343e:	02f70063          	beq	a4,a5,2001345e <__metal_driver_riscv_clint0_register+0xa6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20013442:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20013446:	fe442783          	lw	a5,-28(s0)
2001344a:	0785                	addi	a5,a5,1
2001344c:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20013450:	fe442703          	lw	a4,-28(s0)
20013454:	fd842783          	lw	a5,-40(s0)
20013458:	faf74be3          	blt	a4,a5,2001340e <__metal_driver_riscv_clint0_register+0x56>
2001345c:	a011                	j	20013460 <__metal_driver_riscv_clint0_register+0xa8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
2001345e:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20013460:	fe842783          	lw	a5,-24(s0)
20013464:	c385                	beqz	a5,20013484 <__metal_driver_riscv_clint0_register+0xcc>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20013466:	fe842783          	lw	a5,-24(s0)
2001346a:	439c                	lw	a5,0(a5)
2001346c:	4fdc                	lw	a5,28(a5)
2001346e:	fc042683          	lw	a3,-64(s0)
20013472:	fc442603          	lw	a2,-60(s0)
20013476:	fc842583          	lw	a1,-56(s0)
2001347a:	fe842503          	lw	a0,-24(s0)
2001347e:	9782                	jalr	a5
20013480:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20013484:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:115
}
20013488:	853e                	mv	a0,a5
2001348a:	50f2                	lw	ra,60(sp)
2001348c:	5462                	lw	s0,56(sp)
2001348e:	6121                	addi	sp,sp,64
20013490:	8082                	ret

20013492 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20013492:	7179                	addi	sp,sp,-48
20013494:	d622                	sw	s0,44(sp)
20013496:	1800                	addi	s0,sp,48
20013498:	fca42e23          	sw	a0,-36(s0)
2001349c:	fcb42c23          	sw	a1,-40(s0)
200134a0:	fcc42a23          	sw	a2,-44(s0)
200134a4:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
200134a8:	57fd                	li	a5,-1
200134aa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
200134ae:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:123
}
200134b2:	853e                	mv	a0,a5
200134b4:	5432                	lw	s0,44(sp)
200134b6:	6145                	addi	sp,sp,48
200134b8:	8082                	ret

200134ba <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
200134ba:	1101                	addi	sp,sp,-32
200134bc:	ce06                	sw	ra,28(sp)
200134be:	cc22                	sw	s0,24(sp)
200134c0:	1000                	addi	s0,sp,32
200134c2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
200134c6:	394010ef          	jal	ra,2001485a <__metal_controller_interrupt_vector_mode>
200134ca:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:128
}
200134cc:	853e                	mv	a0,a5
200134ce:	40f2                	lw	ra,28(sp)
200134d0:	4462                	lw	s0,24(sp)
200134d2:	6105                	addi	sp,sp,32
200134d4:	8082                	ret

200134d6 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
200134d6:	7179                	addi	sp,sp,-48
200134d8:	d606                	sw	ra,44(sp)
200134da:	d422                	sw	s0,40(sp)
200134dc:	1800                	addi	s0,sp,48
200134de:	fca42e23          	sw	a0,-36(s0)
200134e2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
200134e6:	57fd                	li	a5,-1
200134e8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
200134ec:	3d09                	jal	200132fe <_get_cpu_intc>
200134ee:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
200134f2:	fe842783          	lw	a5,-24(s0)
200134f6:	c395                	beqz	a5,2001351a <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
200134f8:	fd842703          	lw	a4,-40(s0)
200134fc:	4785                	li	a5,1
200134fe:	02e7e063          	bltu	a5,a4,2001351e <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20013502:	fe842783          	lw	a5,-24(s0)
20013506:	439c                	lw	a5,0(a5)
20013508:	43dc                	lw	a5,4(a5)
2001350a:	fd842583          	lw	a1,-40(s0)
2001350e:	fe842503          	lw	a0,-24(s0)
20013512:	9782                	jalr	a5
20013514:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20013518:	a021                	j	20013520 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
2001351a:	0001                	nop
2001351c:	a011                	j	20013520 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
2001351e:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20013520:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:148
}
20013524:	853e                	mv	a0,a5
20013526:	50b2                	lw	ra,44(sp)
20013528:	5422                	lw	s0,40(sp)
2001352a:	6145                	addi	sp,sp,48
2001352c:	8082                	ret

2001352e <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
2001352e:	7139                	addi	sp,sp,-64
20013530:	de06                	sw	ra,60(sp)
20013532:	dc22                	sw	s0,56(sp)
20013534:	0080                	addi	s0,sp,64
20013536:	fca42623          	sw	a0,-52(s0)
2001353a:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
2001353e:	57fd                	li	a5,-1
20013540:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20013544:	fc842783          	lw	a5,-56(s0)
20013548:	c7c9                	beqz	a5,200135d2 <__metal_driver_riscv_clint0_enable+0xa4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
2001354a:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
2001354e:	3b45                	jal	200132fe <_get_cpu_intc>
20013550:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20013554:	fcc42503          	lw	a0,-52(s0)
20013558:	36cd                	jal	2001313a <__metal_driver_sifive_clint0_num_interrupts>
2001355a:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
2001355e:	fe042223          	sw	zero,-28(s0)
20013562:	a091                	j	200135a6 <__metal_driver_riscv_clint0_enable+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20013564:	fe442583          	lw	a1,-28(s0)
20013568:	fcc42503          	lw	a0,-52(s0)
2001356c:	390d                	jal	2001319e <__metal_driver_sifive_clint0_interrupt_lines>
2001356e:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20013572:	fe442583          	lw	a1,-28(s0)
20013576:	fcc42503          	lw	a0,-52(s0)
2001357a:	36e5                	jal	20013162 <__metal_driver_sifive_clint0_interrupt_parents>
2001357c:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20013580:	fe042703          	lw	a4,-32(s0)
20013584:	fe842783          	lw	a5,-24(s0)
20013588:	00f71863          	bne	a4,a5,20013598 <__metal_driver_riscv_clint0_enable+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
2001358c:	fc842703          	lw	a4,-56(s0)
20013590:	fd842783          	lw	a5,-40(s0)
20013594:	02f70063          	beq	a4,a5,200135b4 <__metal_driver_riscv_clint0_enable+0x86>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20013598:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
2001359c:	fe442783          	lw	a5,-28(s0)
200135a0:	0785                	addi	a5,a5,1
200135a2:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
200135a6:	fe442703          	lw	a4,-28(s0)
200135aa:	fdc42783          	lw	a5,-36(s0)
200135ae:	faf74be3          	blt	a4,a5,20013564 <__metal_driver_riscv_clint0_enable+0x36>
200135b2:	a011                	j	200135b6 <__metal_driver_riscv_clint0_enable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
200135b4:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
200135b6:	fe842783          	lw	a5,-24(s0)
200135ba:	cf81                	beqz	a5,200135d2 <__metal_driver_riscv_clint0_enable+0xa4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
200135bc:	fe842783          	lw	a5,-24(s0)
200135c0:	439c                	lw	a5,0(a5)
200135c2:	53dc                	lw	a5,36(a5)
200135c4:	fc842583          	lw	a1,-56(s0)
200135c8:	fe842503          	lw	a0,-24(s0)
200135cc:	9782                	jalr	a5
200135ce:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
200135d2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:178
}
200135d6:	853e                	mv	a0,a5
200135d8:	50f2                	lw	ra,60(sp)
200135da:	5462                	lw	s0,56(sp)
200135dc:	6121                	addi	sp,sp,64
200135de:	8082                	ret

200135e0 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
200135e0:	7139                	addi	sp,sp,-64
200135e2:	de06                	sw	ra,60(sp)
200135e4:	dc22                	sw	s0,56(sp)
200135e6:	0080                	addi	s0,sp,64
200135e8:	fca42623          	sw	a0,-52(s0)
200135ec:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
200135f0:	57fd                	li	a5,-1
200135f2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
200135f6:	fc842783          	lw	a5,-56(s0)
200135fa:	cbc1                	beqz	a5,2001368a <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
200135fc:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20013600:	39fd                	jal	200132fe <_get_cpu_intc>
20013602:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20013606:	fcc42503          	lw	a0,-52(s0)
2001360a:	b31ff0ef          	jal	ra,2001313a <__metal_driver_sifive_clint0_num_interrupts>
2001360e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20013612:	fe042223          	sw	zero,-28(s0)
20013616:	a0a1                	j	2001365e <__metal_driver_riscv_clint0_disable+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20013618:	fe442583          	lw	a1,-28(s0)
2001361c:	fcc42503          	lw	a0,-52(s0)
20013620:	b7fff0ef          	jal	ra,2001319e <__metal_driver_sifive_clint0_interrupt_lines>
20013624:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20013628:	fe442583          	lw	a1,-28(s0)
2001362c:	fcc42503          	lw	a0,-52(s0)
20013630:	b33ff0ef          	jal	ra,20013162 <__metal_driver_sifive_clint0_interrupt_parents>
20013634:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20013638:	fe042703          	lw	a4,-32(s0)
2001363c:	fe842783          	lw	a5,-24(s0)
20013640:	00f71863          	bne	a4,a5,20013650 <__metal_driver_riscv_clint0_disable+0x70>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20013644:	fc842703          	lw	a4,-56(s0)
20013648:	fd842783          	lw	a5,-40(s0)
2001364c:	02f70063          	beq	a4,a5,2001366c <__metal_driver_riscv_clint0_disable+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20013650:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20013654:	fe442783          	lw	a5,-28(s0)
20013658:	0785                	addi	a5,a5,1
2001365a:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
2001365e:	fe442703          	lw	a4,-28(s0)
20013662:	fdc42783          	lw	a5,-36(s0)
20013666:	faf749e3          	blt	a4,a5,20013618 <__metal_driver_riscv_clint0_disable+0x38>
2001366a:	a011                	j	2001366e <__metal_driver_riscv_clint0_disable+0x8e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
2001366c:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
2001366e:	fe842783          	lw	a5,-24(s0)
20013672:	cf81                	beqz	a5,2001368a <__metal_driver_riscv_clint0_disable+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20013674:	fe842783          	lw	a5,-24(s0)
20013678:	439c                	lw	a5,0(a5)
2001367a:	579c                	lw	a5,40(a5)
2001367c:	fc842583          	lw	a1,-56(s0)
20013680:	fe842503          	lw	a0,-24(s0)
20013684:	9782                	jalr	a5
20013686:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
2001368a:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:208
}
2001368e:	853e                	mv	a0,a5
20013690:	50f2                	lw	ra,60(sp)
20013692:	5462                	lw	s0,56(sp)
20013694:	6121                	addi	sp,sp,64
20013696:	8082                	ret

20013698 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20013698:	7179                	addi	sp,sp,-48
2001369a:	d606                	sw	ra,44(sp)
2001369c:	d422                	sw	s0,40(sp)
2001369e:	1800                	addi	s0,sp,48
200136a0:	fca42e23          	sw	a0,-36(s0)
200136a4:	fcb42c23          	sw	a1,-40(s0)
200136a8:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
200136ac:	57fd                	li	a5,-1
200136ae:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
200136b2:	fdc42783          	lw	a5,-36(s0)
200136b6:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
200136ba:	fdc42503          	lw	a0,-36(s0)
200136be:	a53ff0ef          	jal	ra,20013110 <__metal_driver_sifive_clint0_control_base>
200136c2:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
200136c6:	fd842703          	lw	a4,-40(s0)
200136ca:	4791                	li	a5,4
200136cc:	0cf70163          	beq	a4,a5,2001378e <__metal_driver_riscv_clint0_command_request+0xf6>
200136d0:	fd842703          	lw	a4,-40(s0)
200136d4:	4791                	li	a5,4
200136d6:	0ee7c163          	blt	a5,a4,200137b8 <__metal_driver_riscv_clint0_command_request+0x120>
200136da:	fd842703          	lw	a4,-40(s0)
200136de:	478d                	li	a5,3
200136e0:	06f70663          	beq	a4,a5,2001374c <__metal_driver_riscv_clint0_command_request+0xb4>
200136e4:	fd842703          	lw	a4,-40(s0)
200136e8:	478d                	li	a5,3
200136ea:	0ce7c763          	blt	a5,a4,200137b8 <__metal_driver_riscv_clint0_command_request+0x120>
200136ee:	fd842703          	lw	a4,-40(s0)
200136f2:	4785                	li	a5,1
200136f4:	00f70863          	beq	a4,a5,20013704 <__metal_driver_riscv_clint0_command_request+0x6c>
200136f8:	fd842703          	lw	a4,-40(s0)
200136fc:	4789                	li	a5,2
200136fe:	02f70363          	beq	a4,a5,20013724 <__metal_driver_riscv_clint0_command_request+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20013702:	a85d                	j	200137b8 <__metal_driver_riscv_clint0_command_request+0x120>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20013704:	fd442783          	lw	a5,-44(s0)
20013708:	cbd5                	beqz	a5,200137bc <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
2001370a:	fe842503          	lw	a0,-24(s0)
2001370e:	ac1ff0ef          	jal	ra,200131ce <__metal_clint0_mtime_get>
20013712:	872a                	mv	a4,a0
20013714:	87ae                	mv	a5,a1
20013716:	fd442683          	lw	a3,-44(s0)
2001371a:	c298                	sw	a4,0(a3)
2001371c:	c2dc                	sw	a5,4(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
2001371e:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
20013722:	a869                	j	200137bc <__metal_driver_riscv_clint0_command_request+0x124>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20013724:	fd442783          	lw	a5,-44(s0)
20013728:	cfc1                	beqz	a5,200137c0 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
2001372a:	fd442783          	lw	a5,-44(s0)
2001372e:	439c                	lw	a5,0(a5)
20013730:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20013734:	fe042783          	lw	a5,-32(s0)
20013738:	078a                	slli	a5,a5,0x2
2001373a:	873e                	mv	a4,a5
2001373c:	fe442783          	lw	a5,-28(s0)
20013740:	97ba                	add	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
20013742:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20013746:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
2001374a:	a89d                	j	200137c0 <__metal_driver_riscv_clint0_command_request+0x128>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
2001374c:	fd442783          	lw	a5,-44(s0)
20013750:	cbb5                	beqz	a5,200137c4 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
20013752:	fd442783          	lw	a5,-44(s0)
20013756:	439c                	lw	a5,0(a5)
20013758:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
2001375c:	fe042783          	lw	a5,-32(s0)
20013760:	078a                	slli	a5,a5,0x2
20013762:	873e                	mv	a4,a5
20013764:	fe442783          	lw	a5,-28(s0)
20013768:	97ba                	add	a5,a5,a4
2001376a:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
2001376c:	4785                	li	a5,1
2001376e:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
20013770:	0480000f          	fence	o,i
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20013774:	fe042783          	lw	a5,-32(s0)
20013778:	078a                	slli	a5,a5,0x2
2001377a:	873e                	mv	a4,a5
2001377c:	fe442783          	lw	a5,-28(s0)
20013780:	97ba                	add	a5,a5,a4
20013782:	439c                	lw	a5,0(a5)
20013784:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20013788:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
2001378c:	a825                	j	200137c4 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
2001378e:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
20013792:	fd442783          	lw	a5,-44(s0)
20013796:	cb8d                	beqz	a5,200137c8 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20013798:	fd442783          	lw	a5,-44(s0)
2001379c:	439c                	lw	a5,0(a5)
2001379e:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
200137a2:	fe042783          	lw	a5,-32(s0)
200137a6:	078a                	slli	a5,a5,0x2
200137a8:	873e                	mv	a4,a5
200137aa:	fe442783          	lw	a5,-28(s0)
200137ae:	97ba                	add	a5,a5,a4
200137b0:	439c                	lw	a5,0(a5)
200137b2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
200137b6:	a809                	j	200137c8 <__metal_driver_riscv_clint0_command_request+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
200137b8:	0001                	nop
200137ba:	a801                	j	200137ca <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
200137bc:	0001                	nop
200137be:	a031                	j	200137ca <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
200137c0:	0001                	nop
200137c2:	a021                	j	200137ca <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
200137c4:	0001                	nop
200137c6:	a011                	j	200137ca <__metal_driver_riscv_clint0_command_request+0x132>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
200137c8:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
200137ca:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:267
}
200137ce:	853e                	mv	a0,a5
200137d0:	50b2                	lw	ra,44(sp)
200137d2:	5422                	lw	s0,40(sp)
200137d4:	6145                	addi	sp,sp,48
200137d6:	8082                	ret

200137d8 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
200137d8:	7179                	addi	sp,sp,-48
200137da:	d606                	sw	ra,44(sp)
200137dc:	d422                	sw	s0,40(sp)
200137de:	1800                	addi	s0,sp,48
200137e0:	fca42e23          	sw	a0,-36(s0)
200137e4:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
200137e8:	f48ff0ef          	jal	ra,20012f30 <metal_cpu_get_current_hartid>
200137ec:	87aa                	mv	a5,a0
200137ee:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
200137f2:	fec40793          	addi	a5,s0,-20
200137f6:	863e                	mv	a2,a5
200137f8:	4589                	li	a1,2
200137fa:	fdc42503          	lw	a0,-36(s0)
200137fe:	3d69                	jal	20013698 <__metal_driver_riscv_clint0_command_request>
20013800:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
20013802:	853e                	mv	a0,a5
20013804:	50b2                	lw	ra,44(sp)
20013806:	5422                	lw	s0,40(sp)
20013808:	6145                	addi	sp,sp,48
2001380a:	8082                	ret

2001380c <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
2001380c:	7179                	addi	sp,sp,-48
2001380e:	d606                	sw	ra,44(sp)
20013810:	d422                	sw	s0,40(sp)
20013812:	1800                	addi	s0,sp,48
20013814:	fca42e23          	sw	a0,-36(s0)
20013818:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
2001381c:	f14ff0ef          	jal	ra,20012f30 <metal_cpu_get_current_hartid>
20013820:	87aa                	mv	a5,a0
20013822:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20013826:	fec40793          	addi	a5,s0,-20
2001382a:	863e                	mv	a2,a5
2001382c:	458d                	li	a1,3
2001382e:	fdc42503          	lw	a0,-36(s0)
20013832:	359d                	jal	20013698 <__metal_driver_riscv_clint0_command_request>
20013834:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20013836:	853e                	mv	a0,a5
20013838:	50b2                	lw	ra,44(sp)
2001383a:	5422                	lw	s0,40(sp)
2001383c:	6145                	addi	sp,sp,48
2001383e:	8082                	ret

20013840 <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:292



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
20013840:	1101                	addi	sp,sp,-32
20013842:	ce22                	sw	s0,28(sp)
20013844:	1000                	addi	s0,sp,32
20013846:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:293
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2001384a:	fec42703          	lw	a4,-20(s0)
2001384e:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
20013852:	00f71463          	bne	a4,a5,2001385a <__metal_driver_cpu_hartid+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:294
		return 0;
20013856:	4781                	li	a5,0
20013858:	a011                	j	2001385c <__metal_driver_cpu_hartid+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:297
	}
	else {
		return -1;
2001385a:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:299
	}
}
2001385c:	853e                	mv	a0,a5
2001385e:	4472                	lw	s0,28(sp)
20013860:	6105                	addi	sp,sp,32
20013862:	8082                	ret

20013864 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:302

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20013864:	1101                	addi	sp,sp,-32
20013866:	ce22                	sw	s0,28(sp)
20013868:	1000                	addi	s0,sp,32
2001386a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:303
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2001386e:	fec42703          	lw	a4,-20(s0)
20013872:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
20013876:	00f71763          	bne	a4,a5,20013884 <__metal_driver_cpu_timebase+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:304
		return 16000000;
2001387a:	00f427b7          	lui	a5,0xf42
2001387e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20013882:	a011                	j	20013886 <__metal_driver_cpu_timebase+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:307
	}
	else {
		return 0;
20013884:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:309
	}
}
20013886:	853e                	mv	a0,a5
20013888:	4472                	lw	s0,28(sp)
2001388a:	6105                	addi	sp,sp,32
2001388c:	8082                	ret

2001388e <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:312

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
2001388e:	1101                	addi	sp,sp,-32
20013890:	ce22                	sw	s0,28(sp)
20013892:	1000                	addi	s0,sp,32
20013894:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:313
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20013898:	fec42703          	lw	a4,-20(s0)
2001389c:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
200138a0:	00f71763          	bne	a4,a5,200138ae <__metal_driver_cpu_interrupt_controller+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:314
		return &__metal_dt_cpu_0_interrupt_controller.controller;
200138a4:	800007b7          	lui	a5,0x80000
200138a8:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffdd80>
200138ac:	a011                	j	200138b0 <__metal_driver_cpu_interrupt_controller+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:317
	}
	else {
		return NULL;
200138ae:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:319
	}
}
200138b0:	853e                	mv	a0,a5
200138b2:	4472                	lw	s0,28(sp)
200138b4:	6105                	addi	sp,sp,32
200138b6:	8082                	ret

200138b8 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:332
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
200138b8:	1101                	addi	sp,sp,-32
200138ba:	ce22                	sw	s0,28(sp)
200138bc:	1000                	addi	s0,sp,32
200138be:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:333
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
200138c2:	fec42703          	lw	a4,-20(s0)
200138c6:	81418793          	addi	a5,gp,-2028 # 80000ab4 <__metal_dt_cpu_0>
200138ca:	00f71463          	bne	a4,a5,200138d2 <__metal_driver_cpu_buserror+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:334
		return NULL;
200138ce:	4781                	li	a5,0
200138d0:	a011                	j	200138d4 <__metal_driver_cpu_buserror+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:337
	}
	else {
		return NULL;
200138d2:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:339
	}
}
200138d4:	853e                	mv	a0,a5
200138d6:	4472                	lw	s0,28(sp)
200138d8:	6105                	addi	sp,sp,32
200138da:	8082                	ret

200138dc <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
200138dc:	1101                	addi	sp,sp,-32
200138de:	ce22                	sw	s0,28(sp)
200138e0:	1000                	addi	s0,sp,32
200138e2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
200138e6:	fec42783          	lw	a5,-20(s0)
200138ea:	00f04c63          	bgtz	a5,20013902 <__metal_driver_cpu_get+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
200138ee:	800017b7          	lui	a5,0x80001
200138f2:	fec42703          	lw	a4,-20(s0)
200138f6:	070a                	slli	a4,a4,0x2
200138f8:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
200138fc:	97ba                	add	a5,a5,a4
200138fe:	439c                	lw	a5,0(a5)
20013900:	a011                	j	20013904 <__metal_driver_cpu_get+0x28>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
20013902:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:30
}
20013904:	853e                	mv	a0,a5
20013906:	4472                	lw	s0,28(sp)
20013908:	6105                	addi	sp,sp,32
2001390a:	8082                	ret

2001390c <__metal_myhart_id>:
__metal_myhart_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
2001390c:	1101                	addi	sp,sp,-32
2001390e:	ce22                	sw	s0,28(sp)
20013910:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
20013912:	f14027f3          	csrr	a5,mhartid
20013916:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
2001391a:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:36
}
2001391e:	853e                	mv	a0,a5
20013920:	4472                	lw	s0,28(sp)
20013922:	6105                	addi	sp,sp,32
20013924:	8082                	ret

20013926 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20013926:	1101                	addi	sp,sp,-32
20013928:	ce22                	sw	s0,28(sp)
2001392a:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
2001392c:	47a1                	li	a5,8
2001392e:	3007a7f3          	csrrs	a5,mstatus,a5
20013932:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20013936:	0001                	nop
20013938:	4472                	lw	s0,28(sp)
2001393a:	6105                	addi	sp,sp,32
2001393c:	8082                	ret

2001393e <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
2001393e:	1101                	addi	sp,sp,-32
20013940:	ce22                	sw	s0,28(sp)
20013942:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20013944:	47a1                	li	a5,8
20013946:	3007b7f3          	csrrc	a5,mstatus,a5
2001394a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
2001394e:	0001                	nop
20013950:	4472                	lw	s0,28(sp)
20013952:	6105                	addi	sp,sp,32
20013954:	8082                	ret

20013956 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20013956:	1101                	addi	sp,sp,-32
20013958:	ce22                	sw	s0,28(sp)
2001395a:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2001395c:	47a1                	li	a5,8
2001395e:	3047a7f3          	csrrs	a5,mie,a5
20013962:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20013966:	0001                	nop
20013968:	4472                	lw	s0,28(sp)
2001396a:	6105                	addi	sp,sp,32
2001396c:	8082                	ret

2001396e <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
2001396e:	1101                	addi	sp,sp,-32
20013970:	ce22                	sw	s0,28(sp)
20013972:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20013974:	47a1                	li	a5,8
20013976:	3047b7f3          	csrrc	a5,mie,a5
2001397a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2001397e:	0001                	nop
20013980:	4472                	lw	s0,28(sp)
20013982:	6105                	addi	sp,sp,32
20013984:	8082                	ret

20013986 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20013986:	1101                	addi	sp,sp,-32
20013988:	ce22                	sw	s0,28(sp)
2001398a:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
2001398c:	08000793          	li	a5,128
20013990:	3047a7f3          	csrrs	a5,mie,a5
20013994:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20013998:	0001                	nop
2001399a:	4472                	lw	s0,28(sp)
2001399c:	6105                	addi	sp,sp,32
2001399e:	8082                	ret

200139a0 <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
200139a0:	1101                	addi	sp,sp,-32
200139a2:	ce22                	sw	s0,28(sp)
200139a4:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
200139a6:	08000793          	li	a5,128
200139aa:	3047b7f3          	csrrc	a5,mie,a5
200139ae:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
200139b2:	0001                	nop
200139b4:	4472                	lw	s0,28(sp)
200139b6:	6105                	addi	sp,sp,32
200139b8:	8082                	ret

200139ba <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
200139ba:	1101                	addi	sp,sp,-32
200139bc:	ce22                	sw	s0,28(sp)
200139be:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
200139c0:	6785                	lui	a5,0x1
200139c2:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
200139c6:	3047a7f3          	csrrs	a5,mie,a5
200139ca:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
200139ce:	0001                	nop
200139d0:	4472                	lw	s0,28(sp)
200139d2:	6105                	addi	sp,sp,32
200139d4:	8082                	ret

200139d6 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
200139d6:	1101                	addi	sp,sp,-32
200139d8:	ce22                	sw	s0,28(sp)
200139da:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
200139dc:	6785                	lui	a5,0x1
200139de:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
200139e2:	3047b7f3          	csrrc	a5,mie,a5
200139e6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
200139ea:	0001                	nop
200139ec:	4472                	lw	s0,28(sp)
200139ee:	6105                	addi	sp,sp,32
200139f0:	8082                	ret

200139f2 <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
200139f2:	7179                	addi	sp,sp,-48
200139f4:	d622                	sw	s0,44(sp)
200139f6:	1800                	addi	s0,sp,48
200139f8:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
200139fc:	fdc42783          	lw	a5,-36(s0)
20013a00:	4705                	li	a4,1
20013a02:	00f717b3          	sll	a5,a4,a5
20013a06:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
20013a0a:	fec42783          	lw	a5,-20(s0)
20013a0e:	3047a7f3          	csrrs	a5,mie,a5
20013a12:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:105
}
20013a16:	0001                	nop
20013a18:	5432                	lw	s0,44(sp)
20013a1a:	6145                	addi	sp,sp,48
20013a1c:	8082                	ret

20013a1e <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
20013a1e:	7179                	addi	sp,sp,-48
20013a20:	d622                	sw	s0,44(sp)
20013a22:	1800                	addi	s0,sp,48
20013a24:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20013a28:	fdc42783          	lw	a5,-36(s0)
20013a2c:	4705                	li	a4,1
20013a2e:	00f717b3          	sll	a5,a4,a5
20013a32:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20013a36:	fec42783          	lw	a5,-20(s0)
20013a3a:	3047b7f3          	csrrc	a5,mie,a5
20013a3e:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:111
}
20013a42:	0001                	nop
20013a44:	5432                	lw	s0,44(sp)
20013a46:	6145                	addi	sp,sp,48
20013a48:	8082                	ret

20013a4a <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20013a4a:	1101                	addi	sp,sp,-32
20013a4c:	ce06                	sw	ra,28(sp)
20013a4e:	cc22                	sw	s0,24(sp)
20013a50:	1000                	addi	s0,sp,32
20013a52:	fea42623          	sw	a0,-20(s0)
20013a56:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20013a5a:	06400513          	li	a0,100
20013a5e:	547030ef          	jal	ra,200177a4 <metal_shutdown>

20013a62 <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
20013a62:	1101                	addi	sp,sp,-32
20013a64:	ce06                	sw	ra,28(sp)
20013a66:	cc22                	sw	s0,24(sp)
20013a68:	1000                	addi	s0,sp,32
20013a6a:	fea42623          	sw	a0,-20(s0)
20013a6e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
20013a72:	0c800513          	li	a0,200
20013a76:	52f030ef          	jal	ra,200177a4 <metal_shutdown>

20013a7a <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20013a7a:	715d                	addi	sp,sp,-80
20013a7c:	c686                	sw	ra,76(sp)
20013a7e:	c496                	sw	t0,72(sp)
20013a80:	c29a                	sw	t1,68(sp)
20013a82:	c09e                	sw	t2,64(sp)
20013a84:	de22                	sw	s0,60(sp)
20013a86:	dc2a                	sw	a0,56(sp)
20013a88:	da2e                	sw	a1,52(sp)
20013a8a:	d832                	sw	a2,48(sp)
20013a8c:	d636                	sw	a3,44(sp)
20013a8e:	d43a                	sw	a4,40(sp)
20013a90:	d23e                	sw	a5,36(sp)
20013a92:	d042                	sw	a6,32(sp)
20013a94:	ce46                	sw	a7,28(sp)
20013a96:	cc72                	sw	t3,24(sp)
20013a98:	ca76                	sw	t4,20(sp)
20013a9a:	c87a                	sw	t5,16(sp)
20013a9c:	c67e                	sw	t6,12(sp)
20013a9e:	0880                	addi	s0,sp,80
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
20013aa0:	12c00513          	li	a0,300
20013aa4:	501030ef          	jal	ra,200177a4 <metal_shutdown>

20013aa8 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20013aa8:	711d                	addi	sp,sp,-96
20013aaa:	ce86                	sw	ra,92(sp)
20013aac:	cc96                	sw	t0,88(sp)
20013aae:	ca9a                	sw	t1,84(sp)
20013ab0:	c89e                	sw	t2,80(sp)
20013ab2:	c6a2                	sw	s0,76(sp)
20013ab4:	c4aa                	sw	a0,72(sp)
20013ab6:	c2ae                	sw	a1,68(sp)
20013ab8:	c0b2                	sw	a2,64(sp)
20013aba:	de36                	sw	a3,60(sp)
20013abc:	dc3a                	sw	a4,56(sp)
20013abe:	da3e                	sw	a5,52(sp)
20013ac0:	d842                	sw	a6,48(sp)
20013ac2:	d646                	sw	a7,44(sp)
20013ac4:	d472                	sw	t3,40(sp)
20013ac6:	d276                	sw	t4,36(sp)
20013ac8:	d07a                	sw	t5,32(sp)
20013aca:	ce7e                	sw	t6,28(sp)
20013acc:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
20013ace:	3d3d                	jal	2001390c <__metal_myhart_id>
20013ad0:	872a                	mv	a4,a0
20013ad2:	800017b7          	lui	a5,0x80001
20013ad6:	070a                	slli	a4,a4,0x2
20013ad8:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20013adc:	97ba                	add	a5,a5,a4
20013ade:	439c                	lw	a5,0(a5)
20013ae0:	faf42623          	sw	a5,-84(s0)
20013ae4:	fac42783          	lw	a5,-84(s0)
20013ae8:	c785                	beqz	a5,20013b10 <metal_software_interrupt_vector_handler+0x68>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
20013aea:	fac42503          	lw	a0,-84(s0)
20013aee:	3345                	jal	2001388e <__metal_driver_cpu_interrupt_controller>
20013af0:	faa42423          	sw	a0,-88(s0)
20013af4:	fa842783          	lw	a5,-88(s0)
20013af8:	0e07a783          	lw	a5,224(a5)
20013afc:	faf42223          	sw	a5,-92(s0)
20013b00:	fa842783          	lw	a5,-88(s0)
20013b04:	0d87a783          	lw	a5,216(a5)
20013b08:	fa442583          	lw	a1,-92(s0)
20013b0c:	450d                	li	a0,3
20013b0e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:130
}
20013b10:	0001                	nop
20013b12:	40f6                	lw	ra,92(sp)
20013b14:	42e6                	lw	t0,88(sp)
20013b16:	4356                	lw	t1,84(sp)
20013b18:	43c6                	lw	t2,80(sp)
20013b1a:	4436                	lw	s0,76(sp)
20013b1c:	4526                	lw	a0,72(sp)
20013b1e:	4596                	lw	a1,68(sp)
20013b20:	4606                	lw	a2,64(sp)
20013b22:	56f2                	lw	a3,60(sp)
20013b24:	5762                	lw	a4,56(sp)
20013b26:	57d2                	lw	a5,52(sp)
20013b28:	5842                	lw	a6,48(sp)
20013b2a:	58b2                	lw	a7,44(sp)
20013b2c:	5e22                	lw	t3,40(sp)
20013b2e:	5e92                	lw	t4,36(sp)
20013b30:	5f02                	lw	t5,32(sp)
20013b32:	4ff2                	lw	t6,28(sp)
20013b34:	6125                	addi	sp,sp,96
20013b36:	30200073          	mret

20013b3a <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20013b3a:	7179                	addi	sp,sp,-48
20013b3c:	d606                	sw	ra,44(sp)
20013b3e:	d422                	sw	s0,40(sp)
20013b40:	1800                	addi	s0,sp,48
20013b42:	fca42e23          	sw	a0,-36(s0)
20013b46:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013b4a:	33c9                	jal	2001390c <__metal_myhart_id>
20013b4c:	872a                	mv	a4,a0
20013b4e:	800017b7          	lui	a5,0x80001
20013b52:	070a                	slli	a4,a4,0x2
20013b54:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20013b58:	97ba                	add	a5,a5,a4
20013b5a:	439c                	lw	a5,0(a5)
20013b5c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20013b60:	342027f3          	csrr	a5,mcause
20013b64:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20013b68:	fec42783          	lw	a5,-20(s0)
20013b6c:	c795                	beqz	a5,20013b98 <__metal_default_sw_handler+0x5e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013b6e:	fec42503          	lw	a0,-20(s0)
20013b72:	3b31                	jal	2001388e <__metal_driver_cpu_interrupt_controller>
20013b74:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20013b78:	fe842783          	lw	a5,-24(s0)
20013b7c:	3ff7f793          	andi	a5,a5,1023
20013b80:	fe442703          	lw	a4,-28(s0)
20013b84:	0e878793          	addi	a5,a5,232
20013b88:	078a                	slli	a5,a5,0x2
20013b8a:	97ba                	add	a5,a5,a4
20013b8c:	439c                	lw	a5,0(a5)
20013b8e:	fdc42583          	lw	a1,-36(s0)
20013b92:	fec42503          	lw	a0,-20(s0)
20013b96:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20013b98:	0001                	nop
20013b9a:	50b2                	lw	ra,44(sp)
20013b9c:	5422                	lw	s0,40(sp)
20013b9e:	6145                	addi	sp,sp,48
20013ba0:	8082                	ret

20013ba2 <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
20013ba2:	711d                	addi	sp,sp,-96
20013ba4:	ce86                	sw	ra,92(sp)
20013ba6:	cc96                	sw	t0,88(sp)
20013ba8:	ca9a                	sw	t1,84(sp)
20013baa:	c89e                	sw	t2,80(sp)
20013bac:	c6a2                	sw	s0,76(sp)
20013bae:	c4aa                	sw	a0,72(sp)
20013bb0:	c2ae                	sw	a1,68(sp)
20013bb2:	c0b2                	sw	a2,64(sp)
20013bb4:	de36                	sw	a3,60(sp)
20013bb6:	dc3a                	sw	a4,56(sp)
20013bb8:	da3e                	sw	a5,52(sp)
20013bba:	d842                	sw	a6,48(sp)
20013bbc:	d646                	sw	a7,44(sp)
20013bbe:	d472                	sw	t3,40(sp)
20013bc0:	d276                	sw	t4,36(sp)
20013bc2:	d07a                	sw	t5,32(sp)
20013bc4:	ce7e                	sw	t6,28(sp)
20013bc6:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
20013bc8:	3391                	jal	2001390c <__metal_myhart_id>
20013bca:	872a                	mv	a4,a0
20013bcc:	800017b7          	lui	a5,0x80001
20013bd0:	070a                	slli	a4,a4,0x2
20013bd2:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20013bd6:	97ba                	add	a5,a5,a4
20013bd8:	439c                	lw	a5,0(a5)
20013bda:	faf42623          	sw	a5,-84(s0)
20013bde:	fac42783          	lw	a5,-84(s0)
20013be2:	c785                	beqz	a5,20013c0a <metal_timer_interrupt_vector_handler+0x68>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
20013be4:	fac42503          	lw	a0,-84(s0)
20013be8:	315d                	jal	2001388e <__metal_driver_cpu_interrupt_controller>
20013bea:	faa42423          	sw	a0,-88(s0)
20013bee:	fa842783          	lw	a5,-88(s0)
20013bf2:	1407a783          	lw	a5,320(a5)
20013bf6:	faf42223          	sw	a5,-92(s0)
20013bfa:	fa842783          	lw	a5,-88(s0)
20013bfe:	1387a783          	lw	a5,312(a5)
20013c02:	fa442583          	lw	a1,-92(s0)
20013c06:	451d                	li	a0,7
20013c08:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:150
}
20013c0a:	0001                	nop
20013c0c:	40f6                	lw	ra,92(sp)
20013c0e:	42e6                	lw	t0,88(sp)
20013c10:	4356                	lw	t1,84(sp)
20013c12:	43c6                	lw	t2,80(sp)
20013c14:	4436                	lw	s0,76(sp)
20013c16:	4526                	lw	a0,72(sp)
20013c18:	4596                	lw	a1,68(sp)
20013c1a:	4606                	lw	a2,64(sp)
20013c1c:	56f2                	lw	a3,60(sp)
20013c1e:	5762                	lw	a4,56(sp)
20013c20:	57d2                	lw	a5,52(sp)
20013c22:	5842                	lw	a6,48(sp)
20013c24:	58b2                	lw	a7,44(sp)
20013c26:	5e22                	lw	t3,40(sp)
20013c28:	5e92                	lw	t4,36(sp)
20013c2a:	5f02                	lw	t5,32(sp)
20013c2c:	4ff2                	lw	t6,28(sp)
20013c2e:	6125                	addi	sp,sp,96
20013c30:	30200073          	mret

20013c34 <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20013c34:	1101                	addi	sp,sp,-32
20013c36:	ce22                	sw	s0,28(sp)
20013c38:	1000                	addi	s0,sp,32
20013c3a:	fea42623          	sw	a0,-20(s0)
20013c3e:	feb42423          	sw	a1,-24(s0)
20013c42:	0001                	nop
20013c44:	4472                	lw	s0,28(sp)
20013c46:	6105                	addi	sp,sp,32
20013c48:	8082                	ret

20013c4a <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20013c4a:	7179                	addi	sp,sp,-48
20013c4c:	d606                	sw	ra,44(sp)
20013c4e:	d422                	sw	s0,40(sp)
20013c50:	1800                	addi	s0,sp,48
20013c52:	fca42e23          	sw	a0,-36(s0)
20013c56:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20013c5a:	394d                	jal	2001390c <__metal_myhart_id>
20013c5c:	87aa                	mv	a5,a0
20013c5e:	853e                	mv	a0,a5
20013c60:	39b5                	jal	200138dc <__metal_driver_cpu_get>
20013c62:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20013c66:	fec42503          	lw	a0,-20(s0)
20013c6a:	2bc010ef          	jal	ra,20014f26 <__metal_driver_cpu_mtime_get>
20013c6e:	fea42023          	sw	a0,-32(s0)
20013c72:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20013c76:	fe042703          	lw	a4,-32(s0)
20013c7a:	fe442783          	lw	a5,-28(s0)
20013c7e:	4529                	li	a0,10
20013c80:	4581                	li	a1,0
20013c82:	00a70633          	add	a2,a4,a0
20013c86:	8832                	mv	a6,a2
20013c88:	00e83833          	sltu	a6,a6,a4
20013c8c:	00b786b3          	add	a3,a5,a1
20013c90:	00d807b3          	add	a5,a6,a3
20013c94:	86be                	mv	a3,a5
20013c96:	8732                	mv	a4,a2
20013c98:	87b6                	mv	a5,a3
20013c9a:	85ba                	mv	a1,a4
20013c9c:	863e                	mv	a2,a5
20013c9e:	fec42503          	lw	a0,-20(s0)
20013ca2:	2ea010ef          	jal	ra,20014f8c <__metal_driver_cpu_mtimecmp_set>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:160
}
20013ca6:	0001                	nop
20013ca8:	50b2                	lw	ra,44(sp)
20013caa:	5422                	lw	s0,40(sp)
20013cac:	6145                	addi	sp,sp,48
20013cae:	8082                	ret
	...

20013d00 <__metal_exception_handler>:
__metal_exception_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20013d00:	7119                	addi	sp,sp,-128
20013d02:	de86                	sw	ra,124(sp)
20013d04:	dc96                	sw	t0,120(sp)
20013d06:	da9a                	sw	t1,116(sp)
20013d08:	d89e                	sw	t2,112(sp)
20013d0a:	d6a2                	sw	s0,108(sp)
20013d0c:	d4aa                	sw	a0,104(sp)
20013d0e:	d2ae                	sw	a1,100(sp)
20013d10:	d0b2                	sw	a2,96(sp)
20013d12:	ceb6                	sw	a3,92(sp)
20013d14:	ccba                	sw	a4,88(sp)
20013d16:	cabe                	sw	a5,84(sp)
20013d18:	c8c2                	sw	a6,80(sp)
20013d1a:	c6c6                	sw	a7,76(sp)
20013d1c:	c4f2                	sw	t3,72(sp)
20013d1e:	c2f6                	sw	t4,68(sp)
20013d20:	c0fa                	sw	t5,64(sp)
20013d22:	de7e                	sw	t6,60(sp)
20013d24:	0100                	addi	s0,sp,128
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20013d26:	be7ff0ef          	jal	ra,2001390c <__metal_myhart_id>
20013d2a:	872a                	mv	a4,a0
20013d2c:	800017b7          	lui	a5,0x80001
20013d30:	070a                	slli	a4,a4,0x2
20013d32:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20013d36:	97ba                	add	a5,a5,a4
20013d38:	439c                	lw	a5,0(a5)
20013d3a:	faf42623          	sw	a5,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
20013d3e:	342027f3          	csrr	a5,mcause
20013d42:	faf42423          	sw	a5,-88(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20013d46:	341027f3          	csrr	a5,mepc
20013d4a:	faf42223          	sw	a5,-92(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
20013d4e:	343027f3          	csrr	a5,mtval
20013d52:	faf42023          	sw	a5,-96(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20013d56:	305027f3          	csrr	a5,mtvec
20013d5a:	f8f42e23          	sw	a5,-100(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
20013d5e:	fac42783          	lw	a5,-84(s0)
20013d62:	cbfd                	beqz	a5,20013e58 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20013d64:	fac42503          	lw	a0,-84(s0)
20013d68:	b27ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20013d6c:	f8a42c23          	sw	a0,-104(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20013d70:	fa842783          	lw	a5,-88(s0)
20013d74:	3ff7f793          	andi	a5,a5,1023
20013d78:	f8f42a23          	sw	a5,-108(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
20013d7c:	fa842783          	lw	a5,-88(s0)
20013d80:	0a07de63          	bgez	a5,20013e3c <__metal_exception_handler+0x13c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20013d84:	f9442703          	lw	a4,-108(s0)
20013d88:	08000793          	li	a5,128
20013d8c:	02f71263          	bne	a4,a5,20013db0 <__metal_exception_handler+0xb0>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20013d90:	f9842783          	lw	a5,-104(s0)
20013d94:	3987a783          	lw	a5,920(a5)
20013d98:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
20013d9c:	f9842783          	lw	a5,-104(s0)
20013da0:	3907a783          	lw	a5,912(a5)
20013da4:	f8c42583          	lw	a1,-116(s0)
20013da8:	f9442503          	lw	a0,-108(s0)
20013dac:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
20013dae:	a06d                	j	20013e58 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20013db0:	f9442703          	lw	a4,-108(s0)
20013db4:	47ad                	li	a5,11
20013db6:	00e7d763          	bge	a5,a4,20013dc4 <__metal_exception_handler+0xc4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
20013dba:	f9c42783          	lw	a5,-100(s0)
20013dbe:	03f7f793          	andi	a5,a5,63
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
20013dc2:	ef9d                	bnez	a5,20013e00 <__metal_exception_handler+0x100>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
20013dc4:	f9842683          	lw	a3,-104(s0)
20013dc8:	f9442703          	lw	a4,-108(s0)
20013dcc:	87ba                	mv	a5,a4
20013dce:	0786                	slli	a5,a5,0x1
20013dd0:	97ba                	add	a5,a5,a4
20013dd2:	078e                	slli	a5,a5,0x3
20013dd4:	97b6                	add	a5,a5,a3
20013dd6:	0987a783          	lw	a5,152(a5)
20013dda:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
20013dde:	f9842683          	lw	a3,-104(s0)
20013de2:	f9442703          	lw	a4,-108(s0)
20013de6:	87ba                	mv	a5,a4
20013de8:	0786                	slli	a5,a5,0x1
20013dea:	97ba                	add	a5,a5,a4
20013dec:	078e                	slli	a5,a5,0x3
20013dee:	97b6                	add	a5,a5,a3
20013df0:	0907a783          	lw	a5,144(a5)
20013df4:	f8c42583          	lw	a1,-116(s0)
20013df8:	f9442503          	lw	a0,-108(s0)
20013dfc:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
20013dfe:	a8a9                	j	20013e58 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20013e00:	f9c42783          	lw	a5,-100(s0)
20013e04:	03f7f713          	andi	a4,a5,63
20013e08:	4789                	li	a5,2
20013e0a:	04f71763          	bne	a4,a5,20013e58 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
20013e0e:	307027f3          	csrr	a5,mtvt
20013e12:	f8f42823          	sw	a5,-112(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20013e16:	f9842783          	lw	a5,-104(s0)
20013e1a:	0dc7a783          	lw	a5,220(a5)
20013e1e:	f8f42623          	sw	a5,-116(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20013e22:	f9042783          	lw	a5,-112(s0)
20013e26:	439c                	lw	a5,0(a5)
20013e28:	f8f42423          	sw	a5,-120(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
20013e2c:	f8842783          	lw	a5,-120(s0)
20013e30:	f8c42583          	lw	a1,-116(s0)
20013e34:	f9442503          	lw	a0,-108(s0)
20013e38:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
20013e3a:	a839                	j	20013e58 <__metal_exception_handler+0x158>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
20013e3c:	f9842703          	lw	a4,-104(s0)
20013e40:	f9442783          	lw	a5,-108(s0)
20013e44:	0e878793          	addi	a5,a5,232
20013e48:	078a                	slli	a5,a5,0x2
20013e4a:	97ba                	add	a5,a5,a4
20013e4c:	439c                	lw	a5,0(a5)
20013e4e:	f9442583          	lw	a1,-108(s0)
20013e52:	fac42503          	lw	a0,-84(s0)
20013e56:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20013e58:	50f6                	lw	ra,124(sp)
20013e5a:	52e6                	lw	t0,120(sp)
20013e5c:	5356                	lw	t1,116(sp)
20013e5e:	53c6                	lw	t2,112(sp)
20013e60:	5436                	lw	s0,108(sp)
20013e62:	5526                	lw	a0,104(sp)
20013e64:	5596                	lw	a1,100(sp)
20013e66:	5606                	lw	a2,96(sp)
20013e68:	46f6                	lw	a3,92(sp)
20013e6a:	4766                	lw	a4,88(sp)
20013e6c:	47d6                	lw	a5,84(sp)
20013e6e:	4846                	lw	a6,80(sp)
20013e70:	48b6                	lw	a7,76(sp)
20013e72:	4e26                	lw	t3,72(sp)
20013e74:	4e96                	lw	t4,68(sp)
20013e76:	4f06                	lw	t5,64(sp)
20013e78:	5ff2                	lw	t6,60(sp)
20013e7a:	6109                	addi	sp,sp,128
20013e7c:	30200073          	mret
	...

20013efa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
20013efa:	711d                	addi	sp,sp,-96
20013efc:	ce86                	sw	ra,92(sp)
20013efe:	cc96                	sw	t0,88(sp)
20013f00:	ca9a                	sw	t1,84(sp)
20013f02:	c89e                	sw	t2,80(sp)
20013f04:	c6a2                	sw	s0,76(sp)
20013f06:	c4aa                	sw	a0,72(sp)
20013f08:	c2ae                	sw	a1,68(sp)
20013f0a:	c0b2                	sw	a2,64(sp)
20013f0c:	de36                	sw	a3,60(sp)
20013f0e:	dc3a                	sw	a4,56(sp)
20013f10:	da3e                	sw	a5,52(sp)
20013f12:	d842                	sw	a6,48(sp)
20013f14:	d646                	sw	a7,44(sp)
20013f16:	d472                	sw	t3,40(sp)
20013f18:	d276                	sw	t4,36(sp)
20013f1a:	d07a                	sw	t5,32(sp)
20013f1c:	ce7e                	sw	t6,28(sp)
20013f1e:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20013f20:	9edff0ef          	jal	ra,2001390c <__metal_myhart_id>
20013f24:	872a                	mv	a4,a0
20013f26:	800017b7          	lui	a5,0x80001
20013f2a:	070a                	slli	a4,a4,0x2
20013f2c:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20013f30:	97ba                	add	a5,a5,a4
20013f32:	439c                	lw	a5,0(a5)
20013f34:	faf42623          	sw	a5,-84(s0)
20013f38:	fac42783          	lw	a5,-84(s0)
20013f3c:	c78d                	beqz	a5,20013f66 <metal_lc0_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
20013f3e:	fac42503          	lw	a0,-84(s0)
20013f42:	94dff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20013f46:	faa42423          	sw	a0,-88(s0)
20013f4a:	fa842783          	lw	a5,-88(s0)
20013f4e:	2187a783          	lw	a5,536(a5)
20013f52:	faf42223          	sw	a5,-92(s0)
20013f56:	fa842783          	lw	a5,-88(s0)
20013f5a:	2107a783          	lw	a5,528(a5)
20013f5e:	fa442583          	lw	a1,-92(s0)
20013f62:	4541                	li	a0,16
20013f64:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:216
}
20013f66:	0001                	nop
20013f68:	40f6                	lw	ra,92(sp)
20013f6a:	42e6                	lw	t0,88(sp)
20013f6c:	4356                	lw	t1,84(sp)
20013f6e:	43c6                	lw	t2,80(sp)
20013f70:	4436                	lw	s0,76(sp)
20013f72:	4526                	lw	a0,72(sp)
20013f74:	4596                	lw	a1,68(sp)
20013f76:	4606                	lw	a2,64(sp)
20013f78:	56f2                	lw	a3,60(sp)
20013f7a:	5762                	lw	a4,56(sp)
20013f7c:	57d2                	lw	a5,52(sp)
20013f7e:	5842                	lw	a6,48(sp)
20013f80:	58b2                	lw	a7,44(sp)
20013f82:	5e22                	lw	t3,40(sp)
20013f84:	5e92                	lw	t4,36(sp)
20013f86:	5f02                	lw	t5,32(sp)
20013f88:	4ff2                	lw	t6,28(sp)
20013f8a:	6125                	addi	sp,sp,96
20013f8c:	30200073          	mret

20013f90 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20013f90:	711d                	addi	sp,sp,-96
20013f92:	ce86                	sw	ra,92(sp)
20013f94:	cc96                	sw	t0,88(sp)
20013f96:	ca9a                	sw	t1,84(sp)
20013f98:	c89e                	sw	t2,80(sp)
20013f9a:	c6a2                	sw	s0,76(sp)
20013f9c:	c4aa                	sw	a0,72(sp)
20013f9e:	c2ae                	sw	a1,68(sp)
20013fa0:	c0b2                	sw	a2,64(sp)
20013fa2:	de36                	sw	a3,60(sp)
20013fa4:	dc3a                	sw	a4,56(sp)
20013fa6:	da3e                	sw	a5,52(sp)
20013fa8:	d842                	sw	a6,48(sp)
20013faa:	d646                	sw	a7,44(sp)
20013fac:	d472                	sw	t3,40(sp)
20013fae:	d276                	sw	t4,36(sp)
20013fb0:	d07a                	sw	t5,32(sp)
20013fb2:	ce7e                	sw	t6,28(sp)
20013fb4:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
20013fb6:	957ff0ef          	jal	ra,2001390c <__metal_myhart_id>
20013fba:	872a                	mv	a4,a0
20013fbc:	800017b7          	lui	a5,0x80001
20013fc0:	070a                	slli	a4,a4,0x2
20013fc2:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20013fc6:	97ba                	add	a5,a5,a4
20013fc8:	439c                	lw	a5,0(a5)
20013fca:	faf42623          	sw	a5,-84(s0)
20013fce:	fac42783          	lw	a5,-84(s0)
20013fd2:	c78d                	beqz	a5,20013ffc <metal_lc1_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
20013fd4:	fac42503          	lw	a0,-84(s0)
20013fd8:	8b7ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20013fdc:	faa42423          	sw	a0,-88(s0)
20013fe0:	fa842783          	lw	a5,-88(s0)
20013fe4:	2307a783          	lw	a5,560(a5)
20013fe8:	faf42223          	sw	a5,-92(s0)
20013fec:	fa842783          	lw	a5,-88(s0)
20013ff0:	2287a783          	lw	a5,552(a5)
20013ff4:	fa442583          	lw	a1,-92(s0)
20013ff8:	4545                	li	a0,17
20013ffa:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:221
}
20013ffc:	0001                	nop
20013ffe:	40f6                	lw	ra,92(sp)
20014000:	42e6                	lw	t0,88(sp)
20014002:	4356                	lw	t1,84(sp)
20014004:	43c6                	lw	t2,80(sp)
20014006:	4436                	lw	s0,76(sp)
20014008:	4526                	lw	a0,72(sp)
2001400a:	4596                	lw	a1,68(sp)
2001400c:	4606                	lw	a2,64(sp)
2001400e:	56f2                	lw	a3,60(sp)
20014010:	5762                	lw	a4,56(sp)
20014012:	57d2                	lw	a5,52(sp)
20014014:	5842                	lw	a6,48(sp)
20014016:	58b2                	lw	a7,44(sp)
20014018:	5e22                	lw	t3,40(sp)
2001401a:	5e92                	lw	t4,36(sp)
2001401c:	5f02                	lw	t5,32(sp)
2001401e:	4ff2                	lw	t6,28(sp)
20014020:	6125                	addi	sp,sp,96
20014022:	30200073          	mret

20014026 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20014026:	711d                	addi	sp,sp,-96
20014028:	ce86                	sw	ra,92(sp)
2001402a:	cc96                	sw	t0,88(sp)
2001402c:	ca9a                	sw	t1,84(sp)
2001402e:	c89e                	sw	t2,80(sp)
20014030:	c6a2                	sw	s0,76(sp)
20014032:	c4aa                	sw	a0,72(sp)
20014034:	c2ae                	sw	a1,68(sp)
20014036:	c0b2                	sw	a2,64(sp)
20014038:	de36                	sw	a3,60(sp)
2001403a:	dc3a                	sw	a4,56(sp)
2001403c:	da3e                	sw	a5,52(sp)
2001403e:	d842                	sw	a6,48(sp)
20014040:	d646                	sw	a7,44(sp)
20014042:	d472                	sw	t3,40(sp)
20014044:	d276                	sw	t4,36(sp)
20014046:	d07a                	sw	t5,32(sp)
20014048:	ce7e                	sw	t6,28(sp)
2001404a:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2001404c:	8c1ff0ef          	jal	ra,2001390c <__metal_myhart_id>
20014050:	872a                	mv	a4,a0
20014052:	800017b7          	lui	a5,0x80001
20014056:	070a                	slli	a4,a4,0x2
20014058:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
2001405c:	97ba                	add	a5,a5,a4
2001405e:	439c                	lw	a5,0(a5)
20014060:	faf42623          	sw	a5,-84(s0)
20014064:	fac42783          	lw	a5,-84(s0)
20014068:	c78d                	beqz	a5,20014092 <metal_lc2_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
2001406a:	fac42503          	lw	a0,-84(s0)
2001406e:	821ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014072:	faa42423          	sw	a0,-88(s0)
20014076:	fa842783          	lw	a5,-88(s0)
2001407a:	2487a783          	lw	a5,584(a5)
2001407e:	faf42223          	sw	a5,-92(s0)
20014082:	fa842783          	lw	a5,-88(s0)
20014086:	2407a783          	lw	a5,576(a5)
2001408a:	fa442583          	lw	a1,-92(s0)
2001408e:	4549                	li	a0,18
20014090:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:226
}
20014092:	0001                	nop
20014094:	40f6                	lw	ra,92(sp)
20014096:	42e6                	lw	t0,88(sp)
20014098:	4356                	lw	t1,84(sp)
2001409a:	43c6                	lw	t2,80(sp)
2001409c:	4436                	lw	s0,76(sp)
2001409e:	4526                	lw	a0,72(sp)
200140a0:	4596                	lw	a1,68(sp)
200140a2:	4606                	lw	a2,64(sp)
200140a4:	56f2                	lw	a3,60(sp)
200140a6:	5762                	lw	a4,56(sp)
200140a8:	57d2                	lw	a5,52(sp)
200140aa:	5842                	lw	a6,48(sp)
200140ac:	58b2                	lw	a7,44(sp)
200140ae:	5e22                	lw	t3,40(sp)
200140b0:	5e92                	lw	t4,36(sp)
200140b2:	5f02                	lw	t5,32(sp)
200140b4:	4ff2                	lw	t6,28(sp)
200140b6:	6125                	addi	sp,sp,96
200140b8:	30200073          	mret

200140bc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
200140bc:	711d                	addi	sp,sp,-96
200140be:	ce86                	sw	ra,92(sp)
200140c0:	cc96                	sw	t0,88(sp)
200140c2:	ca9a                	sw	t1,84(sp)
200140c4:	c89e                	sw	t2,80(sp)
200140c6:	c6a2                	sw	s0,76(sp)
200140c8:	c4aa                	sw	a0,72(sp)
200140ca:	c2ae                	sw	a1,68(sp)
200140cc:	c0b2                	sw	a2,64(sp)
200140ce:	de36                	sw	a3,60(sp)
200140d0:	dc3a                	sw	a4,56(sp)
200140d2:	da3e                	sw	a5,52(sp)
200140d4:	d842                	sw	a6,48(sp)
200140d6:	d646                	sw	a7,44(sp)
200140d8:	d472                	sw	t3,40(sp)
200140da:	d276                	sw	t4,36(sp)
200140dc:	d07a                	sw	t5,32(sp)
200140de:	ce7e                	sw	t6,28(sp)
200140e0:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
200140e2:	82bff0ef          	jal	ra,2001390c <__metal_myhart_id>
200140e6:	872a                	mv	a4,a0
200140e8:	800017b7          	lui	a5,0x80001
200140ec:	070a                	slli	a4,a4,0x2
200140ee:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
200140f2:	97ba                	add	a5,a5,a4
200140f4:	439c                	lw	a5,0(a5)
200140f6:	faf42623          	sw	a5,-84(s0)
200140fa:	fac42783          	lw	a5,-84(s0)
200140fe:	c78d                	beqz	a5,20014128 <metal_lc3_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20014100:	fac42503          	lw	a0,-84(s0)
20014104:	f8aff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014108:	faa42423          	sw	a0,-88(s0)
2001410c:	fa842783          	lw	a5,-88(s0)
20014110:	2607a783          	lw	a5,608(a5)
20014114:	faf42223          	sw	a5,-92(s0)
20014118:	fa842783          	lw	a5,-88(s0)
2001411c:	2587a783          	lw	a5,600(a5)
20014120:	fa442583          	lw	a1,-92(s0)
20014124:	454d                	li	a0,19
20014126:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:231
}
20014128:	0001                	nop
2001412a:	40f6                	lw	ra,92(sp)
2001412c:	42e6                	lw	t0,88(sp)
2001412e:	4356                	lw	t1,84(sp)
20014130:	43c6                	lw	t2,80(sp)
20014132:	4436                	lw	s0,76(sp)
20014134:	4526                	lw	a0,72(sp)
20014136:	4596                	lw	a1,68(sp)
20014138:	4606                	lw	a2,64(sp)
2001413a:	56f2                	lw	a3,60(sp)
2001413c:	5762                	lw	a4,56(sp)
2001413e:	57d2                	lw	a5,52(sp)
20014140:	5842                	lw	a6,48(sp)
20014142:	58b2                	lw	a7,44(sp)
20014144:	5e22                	lw	t3,40(sp)
20014146:	5e92                	lw	t4,36(sp)
20014148:	5f02                	lw	t5,32(sp)
2001414a:	4ff2                	lw	t6,28(sp)
2001414c:	6125                	addi	sp,sp,96
2001414e:	30200073          	mret

20014152 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20014152:	711d                	addi	sp,sp,-96
20014154:	ce86                	sw	ra,92(sp)
20014156:	cc96                	sw	t0,88(sp)
20014158:	ca9a                	sw	t1,84(sp)
2001415a:	c89e                	sw	t2,80(sp)
2001415c:	c6a2                	sw	s0,76(sp)
2001415e:	c4aa                	sw	a0,72(sp)
20014160:	c2ae                	sw	a1,68(sp)
20014162:	c0b2                	sw	a2,64(sp)
20014164:	de36                	sw	a3,60(sp)
20014166:	dc3a                	sw	a4,56(sp)
20014168:	da3e                	sw	a5,52(sp)
2001416a:	d842                	sw	a6,48(sp)
2001416c:	d646                	sw	a7,44(sp)
2001416e:	d472                	sw	t3,40(sp)
20014170:	d276                	sw	t4,36(sp)
20014172:	d07a                	sw	t5,32(sp)
20014174:	ce7e                	sw	t6,28(sp)
20014176:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20014178:	f94ff0ef          	jal	ra,2001390c <__metal_myhart_id>
2001417c:	872a                	mv	a4,a0
2001417e:	800017b7          	lui	a5,0x80001
20014182:	070a                	slli	a4,a4,0x2
20014184:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20014188:	97ba                	add	a5,a5,a4
2001418a:	439c                	lw	a5,0(a5)
2001418c:	faf42623          	sw	a5,-84(s0)
20014190:	fac42783          	lw	a5,-84(s0)
20014194:	c78d                	beqz	a5,200141be <metal_lc4_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20014196:	fac42503          	lw	a0,-84(s0)
2001419a:	ef4ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
2001419e:	faa42423          	sw	a0,-88(s0)
200141a2:	fa842783          	lw	a5,-88(s0)
200141a6:	2787a783          	lw	a5,632(a5)
200141aa:	faf42223          	sw	a5,-92(s0)
200141ae:	fa842783          	lw	a5,-88(s0)
200141b2:	2707a783          	lw	a5,624(a5)
200141b6:	fa442583          	lw	a1,-92(s0)
200141ba:	4551                	li	a0,20
200141bc:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:236
}
200141be:	0001                	nop
200141c0:	40f6                	lw	ra,92(sp)
200141c2:	42e6                	lw	t0,88(sp)
200141c4:	4356                	lw	t1,84(sp)
200141c6:	43c6                	lw	t2,80(sp)
200141c8:	4436                	lw	s0,76(sp)
200141ca:	4526                	lw	a0,72(sp)
200141cc:	4596                	lw	a1,68(sp)
200141ce:	4606                	lw	a2,64(sp)
200141d0:	56f2                	lw	a3,60(sp)
200141d2:	5762                	lw	a4,56(sp)
200141d4:	57d2                	lw	a5,52(sp)
200141d6:	5842                	lw	a6,48(sp)
200141d8:	58b2                	lw	a7,44(sp)
200141da:	5e22                	lw	t3,40(sp)
200141dc:	5e92                	lw	t4,36(sp)
200141de:	5f02                	lw	t5,32(sp)
200141e0:	4ff2                	lw	t6,28(sp)
200141e2:	6125                	addi	sp,sp,96
200141e4:	30200073          	mret

200141e8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
200141e8:	711d                	addi	sp,sp,-96
200141ea:	ce86                	sw	ra,92(sp)
200141ec:	cc96                	sw	t0,88(sp)
200141ee:	ca9a                	sw	t1,84(sp)
200141f0:	c89e                	sw	t2,80(sp)
200141f2:	c6a2                	sw	s0,76(sp)
200141f4:	c4aa                	sw	a0,72(sp)
200141f6:	c2ae                	sw	a1,68(sp)
200141f8:	c0b2                	sw	a2,64(sp)
200141fa:	de36                	sw	a3,60(sp)
200141fc:	dc3a                	sw	a4,56(sp)
200141fe:	da3e                	sw	a5,52(sp)
20014200:	d842                	sw	a6,48(sp)
20014202:	d646                	sw	a7,44(sp)
20014204:	d472                	sw	t3,40(sp)
20014206:	d276                	sw	t4,36(sp)
20014208:	d07a                	sw	t5,32(sp)
2001420a:	ce7e                	sw	t6,28(sp)
2001420c:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
2001420e:	efeff0ef          	jal	ra,2001390c <__metal_myhart_id>
20014212:	872a                	mv	a4,a0
20014214:	800017b7          	lui	a5,0x80001
20014218:	070a                	slli	a4,a4,0x2
2001421a:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
2001421e:	97ba                	add	a5,a5,a4
20014220:	439c                	lw	a5,0(a5)
20014222:	faf42623          	sw	a5,-84(s0)
20014226:	fac42783          	lw	a5,-84(s0)
2001422a:	c78d                	beqz	a5,20014254 <metal_lc5_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
2001422c:	fac42503          	lw	a0,-84(s0)
20014230:	e5eff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014234:	faa42423          	sw	a0,-88(s0)
20014238:	fa842783          	lw	a5,-88(s0)
2001423c:	2907a783          	lw	a5,656(a5)
20014240:	faf42223          	sw	a5,-92(s0)
20014244:	fa842783          	lw	a5,-88(s0)
20014248:	2887a783          	lw	a5,648(a5)
2001424c:	fa442583          	lw	a1,-92(s0)
20014250:	4555                	li	a0,21
20014252:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:241
}
20014254:	0001                	nop
20014256:	40f6                	lw	ra,92(sp)
20014258:	42e6                	lw	t0,88(sp)
2001425a:	4356                	lw	t1,84(sp)
2001425c:	43c6                	lw	t2,80(sp)
2001425e:	4436                	lw	s0,76(sp)
20014260:	4526                	lw	a0,72(sp)
20014262:	4596                	lw	a1,68(sp)
20014264:	4606                	lw	a2,64(sp)
20014266:	56f2                	lw	a3,60(sp)
20014268:	5762                	lw	a4,56(sp)
2001426a:	57d2                	lw	a5,52(sp)
2001426c:	5842                	lw	a6,48(sp)
2001426e:	58b2                	lw	a7,44(sp)
20014270:	5e22                	lw	t3,40(sp)
20014272:	5e92                	lw	t4,36(sp)
20014274:	5f02                	lw	t5,32(sp)
20014276:	4ff2                	lw	t6,28(sp)
20014278:	6125                	addi	sp,sp,96
2001427a:	30200073          	mret

2001427e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
2001427e:	711d                	addi	sp,sp,-96
20014280:	ce86                	sw	ra,92(sp)
20014282:	cc96                	sw	t0,88(sp)
20014284:	ca9a                	sw	t1,84(sp)
20014286:	c89e                	sw	t2,80(sp)
20014288:	c6a2                	sw	s0,76(sp)
2001428a:	c4aa                	sw	a0,72(sp)
2001428c:	c2ae                	sw	a1,68(sp)
2001428e:	c0b2                	sw	a2,64(sp)
20014290:	de36                	sw	a3,60(sp)
20014292:	dc3a                	sw	a4,56(sp)
20014294:	da3e                	sw	a5,52(sp)
20014296:	d842                	sw	a6,48(sp)
20014298:	d646                	sw	a7,44(sp)
2001429a:	d472                	sw	t3,40(sp)
2001429c:	d276                	sw	t4,36(sp)
2001429e:	d07a                	sw	t5,32(sp)
200142a0:	ce7e                	sw	t6,28(sp)
200142a2:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
200142a4:	e68ff0ef          	jal	ra,2001390c <__metal_myhart_id>
200142a8:	872a                	mv	a4,a0
200142aa:	800017b7          	lui	a5,0x80001
200142ae:	070a                	slli	a4,a4,0x2
200142b0:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
200142b4:	97ba                	add	a5,a5,a4
200142b6:	439c                	lw	a5,0(a5)
200142b8:	faf42623          	sw	a5,-84(s0)
200142bc:	fac42783          	lw	a5,-84(s0)
200142c0:	c78d                	beqz	a5,200142ea <metal_lc6_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
200142c2:	fac42503          	lw	a0,-84(s0)
200142c6:	dc8ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
200142ca:	faa42423          	sw	a0,-88(s0)
200142ce:	fa842783          	lw	a5,-88(s0)
200142d2:	2a87a783          	lw	a5,680(a5)
200142d6:	faf42223          	sw	a5,-92(s0)
200142da:	fa842783          	lw	a5,-88(s0)
200142de:	2a07a783          	lw	a5,672(a5)
200142e2:	fa442583          	lw	a1,-92(s0)
200142e6:	4559                	li	a0,22
200142e8:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:246
}
200142ea:	0001                	nop
200142ec:	40f6                	lw	ra,92(sp)
200142ee:	42e6                	lw	t0,88(sp)
200142f0:	4356                	lw	t1,84(sp)
200142f2:	43c6                	lw	t2,80(sp)
200142f4:	4436                	lw	s0,76(sp)
200142f6:	4526                	lw	a0,72(sp)
200142f8:	4596                	lw	a1,68(sp)
200142fa:	4606                	lw	a2,64(sp)
200142fc:	56f2                	lw	a3,60(sp)
200142fe:	5762                	lw	a4,56(sp)
20014300:	57d2                	lw	a5,52(sp)
20014302:	5842                	lw	a6,48(sp)
20014304:	58b2                	lw	a7,44(sp)
20014306:	5e22                	lw	t3,40(sp)
20014308:	5e92                	lw	t4,36(sp)
2001430a:	5f02                	lw	t5,32(sp)
2001430c:	4ff2                	lw	t6,28(sp)
2001430e:	6125                	addi	sp,sp,96
20014310:	30200073          	mret

20014314 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20014314:	711d                	addi	sp,sp,-96
20014316:	ce86                	sw	ra,92(sp)
20014318:	cc96                	sw	t0,88(sp)
2001431a:	ca9a                	sw	t1,84(sp)
2001431c:	c89e                	sw	t2,80(sp)
2001431e:	c6a2                	sw	s0,76(sp)
20014320:	c4aa                	sw	a0,72(sp)
20014322:	c2ae                	sw	a1,68(sp)
20014324:	c0b2                	sw	a2,64(sp)
20014326:	de36                	sw	a3,60(sp)
20014328:	dc3a                	sw	a4,56(sp)
2001432a:	da3e                	sw	a5,52(sp)
2001432c:	d842                	sw	a6,48(sp)
2001432e:	d646                	sw	a7,44(sp)
20014330:	d472                	sw	t3,40(sp)
20014332:	d276                	sw	t4,36(sp)
20014334:	d07a                	sw	t5,32(sp)
20014336:	ce7e                	sw	t6,28(sp)
20014338:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
2001433a:	dd2ff0ef          	jal	ra,2001390c <__metal_myhart_id>
2001433e:	872a                	mv	a4,a0
20014340:	800017b7          	lui	a5,0x80001
20014344:	070a                	slli	a4,a4,0x2
20014346:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
2001434a:	97ba                	add	a5,a5,a4
2001434c:	439c                	lw	a5,0(a5)
2001434e:	faf42623          	sw	a5,-84(s0)
20014352:	fac42783          	lw	a5,-84(s0)
20014356:	c78d                	beqz	a5,20014380 <metal_lc7_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20014358:	fac42503          	lw	a0,-84(s0)
2001435c:	d32ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014360:	faa42423          	sw	a0,-88(s0)
20014364:	fa842783          	lw	a5,-88(s0)
20014368:	2c07a783          	lw	a5,704(a5)
2001436c:	faf42223          	sw	a5,-92(s0)
20014370:	fa842783          	lw	a5,-88(s0)
20014374:	2b87a783          	lw	a5,696(a5)
20014378:	fa442583          	lw	a1,-92(s0)
2001437c:	455d                	li	a0,23
2001437e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:251
}
20014380:	0001                	nop
20014382:	40f6                	lw	ra,92(sp)
20014384:	42e6                	lw	t0,88(sp)
20014386:	4356                	lw	t1,84(sp)
20014388:	43c6                	lw	t2,80(sp)
2001438a:	4436                	lw	s0,76(sp)
2001438c:	4526                	lw	a0,72(sp)
2001438e:	4596                	lw	a1,68(sp)
20014390:	4606                	lw	a2,64(sp)
20014392:	56f2                	lw	a3,60(sp)
20014394:	5762                	lw	a4,56(sp)
20014396:	57d2                	lw	a5,52(sp)
20014398:	5842                	lw	a6,48(sp)
2001439a:	58b2                	lw	a7,44(sp)
2001439c:	5e22                	lw	t3,40(sp)
2001439e:	5e92                	lw	t4,36(sp)
200143a0:	5f02                	lw	t5,32(sp)
200143a2:	4ff2                	lw	t6,28(sp)
200143a4:	6125                	addi	sp,sp,96
200143a6:	30200073          	mret

200143aa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
200143aa:	711d                	addi	sp,sp,-96
200143ac:	ce86                	sw	ra,92(sp)
200143ae:	cc96                	sw	t0,88(sp)
200143b0:	ca9a                	sw	t1,84(sp)
200143b2:	c89e                	sw	t2,80(sp)
200143b4:	c6a2                	sw	s0,76(sp)
200143b6:	c4aa                	sw	a0,72(sp)
200143b8:	c2ae                	sw	a1,68(sp)
200143ba:	c0b2                	sw	a2,64(sp)
200143bc:	de36                	sw	a3,60(sp)
200143be:	dc3a                	sw	a4,56(sp)
200143c0:	da3e                	sw	a5,52(sp)
200143c2:	d842                	sw	a6,48(sp)
200143c4:	d646                	sw	a7,44(sp)
200143c6:	d472                	sw	t3,40(sp)
200143c8:	d276                	sw	t4,36(sp)
200143ca:	d07a                	sw	t5,32(sp)
200143cc:	ce7e                	sw	t6,28(sp)
200143ce:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
200143d0:	d3cff0ef          	jal	ra,2001390c <__metal_myhart_id>
200143d4:	872a                	mv	a4,a0
200143d6:	800017b7          	lui	a5,0x80001
200143da:	070a                	slli	a4,a4,0x2
200143dc:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
200143e0:	97ba                	add	a5,a5,a4
200143e2:	439c                	lw	a5,0(a5)
200143e4:	faf42623          	sw	a5,-84(s0)
200143e8:	fac42783          	lw	a5,-84(s0)
200143ec:	c78d                	beqz	a5,20014416 <metal_lc8_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
200143ee:	fac42503          	lw	a0,-84(s0)
200143f2:	c9cff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
200143f6:	faa42423          	sw	a0,-88(s0)
200143fa:	fa842783          	lw	a5,-88(s0)
200143fe:	2d87a783          	lw	a5,728(a5)
20014402:	faf42223          	sw	a5,-92(s0)
20014406:	fa842783          	lw	a5,-88(s0)
2001440a:	2d07a783          	lw	a5,720(a5)
2001440e:	fa442583          	lw	a1,-92(s0)
20014412:	4561                	li	a0,24
20014414:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:256
}
20014416:	0001                	nop
20014418:	40f6                	lw	ra,92(sp)
2001441a:	42e6                	lw	t0,88(sp)
2001441c:	4356                	lw	t1,84(sp)
2001441e:	43c6                	lw	t2,80(sp)
20014420:	4436                	lw	s0,76(sp)
20014422:	4526                	lw	a0,72(sp)
20014424:	4596                	lw	a1,68(sp)
20014426:	4606                	lw	a2,64(sp)
20014428:	56f2                	lw	a3,60(sp)
2001442a:	5762                	lw	a4,56(sp)
2001442c:	57d2                	lw	a5,52(sp)
2001442e:	5842                	lw	a6,48(sp)
20014430:	58b2                	lw	a7,44(sp)
20014432:	5e22                	lw	t3,40(sp)
20014434:	5e92                	lw	t4,36(sp)
20014436:	5f02                	lw	t5,32(sp)
20014438:	4ff2                	lw	t6,28(sp)
2001443a:	6125                	addi	sp,sp,96
2001443c:	30200073          	mret

20014440 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20014440:	711d                	addi	sp,sp,-96
20014442:	ce86                	sw	ra,92(sp)
20014444:	cc96                	sw	t0,88(sp)
20014446:	ca9a                	sw	t1,84(sp)
20014448:	c89e                	sw	t2,80(sp)
2001444a:	c6a2                	sw	s0,76(sp)
2001444c:	c4aa                	sw	a0,72(sp)
2001444e:	c2ae                	sw	a1,68(sp)
20014450:	c0b2                	sw	a2,64(sp)
20014452:	de36                	sw	a3,60(sp)
20014454:	dc3a                	sw	a4,56(sp)
20014456:	da3e                	sw	a5,52(sp)
20014458:	d842                	sw	a6,48(sp)
2001445a:	d646                	sw	a7,44(sp)
2001445c:	d472                	sw	t3,40(sp)
2001445e:	d276                	sw	t4,36(sp)
20014460:	d07a                	sw	t5,32(sp)
20014462:	ce7e                	sw	t6,28(sp)
20014464:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20014466:	ca6ff0ef          	jal	ra,2001390c <__metal_myhart_id>
2001446a:	872a                	mv	a4,a0
2001446c:	800017b7          	lui	a5,0x80001
20014470:	070a                	slli	a4,a4,0x2
20014472:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20014476:	97ba                	add	a5,a5,a4
20014478:	439c                	lw	a5,0(a5)
2001447a:	faf42623          	sw	a5,-84(s0)
2001447e:	fac42783          	lw	a5,-84(s0)
20014482:	c78d                	beqz	a5,200144ac <metal_lc9_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20014484:	fac42503          	lw	a0,-84(s0)
20014488:	c06ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
2001448c:	faa42423          	sw	a0,-88(s0)
20014490:	fa842783          	lw	a5,-88(s0)
20014494:	2f07a783          	lw	a5,752(a5)
20014498:	faf42223          	sw	a5,-92(s0)
2001449c:	fa842783          	lw	a5,-88(s0)
200144a0:	2e87a783          	lw	a5,744(a5)
200144a4:	fa442583          	lw	a1,-92(s0)
200144a8:	4565                	li	a0,25
200144aa:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:261
}
200144ac:	0001                	nop
200144ae:	40f6                	lw	ra,92(sp)
200144b0:	42e6                	lw	t0,88(sp)
200144b2:	4356                	lw	t1,84(sp)
200144b4:	43c6                	lw	t2,80(sp)
200144b6:	4436                	lw	s0,76(sp)
200144b8:	4526                	lw	a0,72(sp)
200144ba:	4596                	lw	a1,68(sp)
200144bc:	4606                	lw	a2,64(sp)
200144be:	56f2                	lw	a3,60(sp)
200144c0:	5762                	lw	a4,56(sp)
200144c2:	57d2                	lw	a5,52(sp)
200144c4:	5842                	lw	a6,48(sp)
200144c6:	58b2                	lw	a7,44(sp)
200144c8:	5e22                	lw	t3,40(sp)
200144ca:	5e92                	lw	t4,36(sp)
200144cc:	5f02                	lw	t5,32(sp)
200144ce:	4ff2                	lw	t6,28(sp)
200144d0:	6125                	addi	sp,sp,96
200144d2:	30200073          	mret

200144d6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
200144d6:	711d                	addi	sp,sp,-96
200144d8:	ce86                	sw	ra,92(sp)
200144da:	cc96                	sw	t0,88(sp)
200144dc:	ca9a                	sw	t1,84(sp)
200144de:	c89e                	sw	t2,80(sp)
200144e0:	c6a2                	sw	s0,76(sp)
200144e2:	c4aa                	sw	a0,72(sp)
200144e4:	c2ae                	sw	a1,68(sp)
200144e6:	c0b2                	sw	a2,64(sp)
200144e8:	de36                	sw	a3,60(sp)
200144ea:	dc3a                	sw	a4,56(sp)
200144ec:	da3e                	sw	a5,52(sp)
200144ee:	d842                	sw	a6,48(sp)
200144f0:	d646                	sw	a7,44(sp)
200144f2:	d472                	sw	t3,40(sp)
200144f4:	d276                	sw	t4,36(sp)
200144f6:	d07a                	sw	t5,32(sp)
200144f8:	ce7e                	sw	t6,28(sp)
200144fa:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
200144fc:	c10ff0ef          	jal	ra,2001390c <__metal_myhart_id>
20014500:	872a                	mv	a4,a0
20014502:	800017b7          	lui	a5,0x80001
20014506:	070a                	slli	a4,a4,0x2
20014508:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
2001450c:	97ba                	add	a5,a5,a4
2001450e:	439c                	lw	a5,0(a5)
20014510:	faf42623          	sw	a5,-84(s0)
20014514:	fac42783          	lw	a5,-84(s0)
20014518:	c78d                	beqz	a5,20014542 <metal_lc10_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
2001451a:	fac42503          	lw	a0,-84(s0)
2001451e:	b70ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014522:	faa42423          	sw	a0,-88(s0)
20014526:	fa842783          	lw	a5,-88(s0)
2001452a:	3087a783          	lw	a5,776(a5)
2001452e:	faf42223          	sw	a5,-92(s0)
20014532:	fa842783          	lw	a5,-88(s0)
20014536:	3007a783          	lw	a5,768(a5)
2001453a:	fa442583          	lw	a1,-92(s0)
2001453e:	4569                	li	a0,26
20014540:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:267
}
20014542:	0001                	nop
20014544:	40f6                	lw	ra,92(sp)
20014546:	42e6                	lw	t0,88(sp)
20014548:	4356                	lw	t1,84(sp)
2001454a:	43c6                	lw	t2,80(sp)
2001454c:	4436                	lw	s0,76(sp)
2001454e:	4526                	lw	a0,72(sp)
20014550:	4596                	lw	a1,68(sp)
20014552:	4606                	lw	a2,64(sp)
20014554:	56f2                	lw	a3,60(sp)
20014556:	5762                	lw	a4,56(sp)
20014558:	57d2                	lw	a5,52(sp)
2001455a:	5842                	lw	a6,48(sp)
2001455c:	58b2                	lw	a7,44(sp)
2001455e:	5e22                	lw	t3,40(sp)
20014560:	5e92                	lw	t4,36(sp)
20014562:	5f02                	lw	t5,32(sp)
20014564:	4ff2                	lw	t6,28(sp)
20014566:	6125                	addi	sp,sp,96
20014568:	30200073          	mret

2001456c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
2001456c:	711d                	addi	sp,sp,-96
2001456e:	ce86                	sw	ra,92(sp)
20014570:	cc96                	sw	t0,88(sp)
20014572:	ca9a                	sw	t1,84(sp)
20014574:	c89e                	sw	t2,80(sp)
20014576:	c6a2                	sw	s0,76(sp)
20014578:	c4aa                	sw	a0,72(sp)
2001457a:	c2ae                	sw	a1,68(sp)
2001457c:	c0b2                	sw	a2,64(sp)
2001457e:	de36                	sw	a3,60(sp)
20014580:	dc3a                	sw	a4,56(sp)
20014582:	da3e                	sw	a5,52(sp)
20014584:	d842                	sw	a6,48(sp)
20014586:	d646                	sw	a7,44(sp)
20014588:	d472                	sw	t3,40(sp)
2001458a:	d276                	sw	t4,36(sp)
2001458c:	d07a                	sw	t5,32(sp)
2001458e:	ce7e                	sw	t6,28(sp)
20014590:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20014592:	b7aff0ef          	jal	ra,2001390c <__metal_myhart_id>
20014596:	872a                	mv	a4,a0
20014598:	800017b7          	lui	a5,0x80001
2001459c:	070a                	slli	a4,a4,0x2
2001459e:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
200145a2:	97ba                	add	a5,a5,a4
200145a4:	439c                	lw	a5,0(a5)
200145a6:	faf42623          	sw	a5,-84(s0)
200145aa:	fac42783          	lw	a5,-84(s0)
200145ae:	c78d                	beqz	a5,200145d8 <metal_lc11_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
200145b0:	fac42503          	lw	a0,-84(s0)
200145b4:	adaff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
200145b8:	faa42423          	sw	a0,-88(s0)
200145bc:	fa842783          	lw	a5,-88(s0)
200145c0:	3207a783          	lw	a5,800(a5)
200145c4:	faf42223          	sw	a5,-92(s0)
200145c8:	fa842783          	lw	a5,-88(s0)
200145cc:	3187a783          	lw	a5,792(a5)
200145d0:	fa442583          	lw	a1,-92(s0)
200145d4:	456d                	li	a0,27
200145d6:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:273
}
200145d8:	0001                	nop
200145da:	40f6                	lw	ra,92(sp)
200145dc:	42e6                	lw	t0,88(sp)
200145de:	4356                	lw	t1,84(sp)
200145e0:	43c6                	lw	t2,80(sp)
200145e2:	4436                	lw	s0,76(sp)
200145e4:	4526                	lw	a0,72(sp)
200145e6:	4596                	lw	a1,68(sp)
200145e8:	4606                	lw	a2,64(sp)
200145ea:	56f2                	lw	a3,60(sp)
200145ec:	5762                	lw	a4,56(sp)
200145ee:	57d2                	lw	a5,52(sp)
200145f0:	5842                	lw	a6,48(sp)
200145f2:	58b2                	lw	a7,44(sp)
200145f4:	5e22                	lw	t3,40(sp)
200145f6:	5e92                	lw	t4,36(sp)
200145f8:	5f02                	lw	t5,32(sp)
200145fa:	4ff2                	lw	t6,28(sp)
200145fc:	6125                	addi	sp,sp,96
200145fe:	30200073          	mret

20014602 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20014602:	711d                	addi	sp,sp,-96
20014604:	ce86                	sw	ra,92(sp)
20014606:	cc96                	sw	t0,88(sp)
20014608:	ca9a                	sw	t1,84(sp)
2001460a:	c89e                	sw	t2,80(sp)
2001460c:	c6a2                	sw	s0,76(sp)
2001460e:	c4aa                	sw	a0,72(sp)
20014610:	c2ae                	sw	a1,68(sp)
20014612:	c0b2                	sw	a2,64(sp)
20014614:	de36                	sw	a3,60(sp)
20014616:	dc3a                	sw	a4,56(sp)
20014618:	da3e                	sw	a5,52(sp)
2001461a:	d842                	sw	a6,48(sp)
2001461c:	d646                	sw	a7,44(sp)
2001461e:	d472                	sw	t3,40(sp)
20014620:	d276                	sw	t4,36(sp)
20014622:	d07a                	sw	t5,32(sp)
20014624:	ce7e                	sw	t6,28(sp)
20014626:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20014628:	ae4ff0ef          	jal	ra,2001390c <__metal_myhart_id>
2001462c:	872a                	mv	a4,a0
2001462e:	800017b7          	lui	a5,0x80001
20014632:	070a                	slli	a4,a4,0x2
20014634:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20014638:	97ba                	add	a5,a5,a4
2001463a:	439c                	lw	a5,0(a5)
2001463c:	faf42623          	sw	a5,-84(s0)
20014640:	fac42783          	lw	a5,-84(s0)
20014644:	c78d                	beqz	a5,2001466e <metal_lc12_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20014646:	fac42503          	lw	a0,-84(s0)
2001464a:	a44ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
2001464e:	faa42423          	sw	a0,-88(s0)
20014652:	fa842783          	lw	a5,-88(s0)
20014656:	3387a783          	lw	a5,824(a5)
2001465a:	faf42223          	sw	a5,-92(s0)
2001465e:	fa842783          	lw	a5,-88(s0)
20014662:	3307a783          	lw	a5,816(a5)
20014666:	fa442583          	lw	a1,-92(s0)
2001466a:	4571                	li	a0,28
2001466c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:279
}
2001466e:	0001                	nop
20014670:	40f6                	lw	ra,92(sp)
20014672:	42e6                	lw	t0,88(sp)
20014674:	4356                	lw	t1,84(sp)
20014676:	43c6                	lw	t2,80(sp)
20014678:	4436                	lw	s0,76(sp)
2001467a:	4526                	lw	a0,72(sp)
2001467c:	4596                	lw	a1,68(sp)
2001467e:	4606                	lw	a2,64(sp)
20014680:	56f2                	lw	a3,60(sp)
20014682:	5762                	lw	a4,56(sp)
20014684:	57d2                	lw	a5,52(sp)
20014686:	5842                	lw	a6,48(sp)
20014688:	58b2                	lw	a7,44(sp)
2001468a:	5e22                	lw	t3,40(sp)
2001468c:	5e92                	lw	t4,36(sp)
2001468e:	5f02                	lw	t5,32(sp)
20014690:	4ff2                	lw	t6,28(sp)
20014692:	6125                	addi	sp,sp,96
20014694:	30200073          	mret

20014698 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20014698:	711d                	addi	sp,sp,-96
2001469a:	ce86                	sw	ra,92(sp)
2001469c:	cc96                	sw	t0,88(sp)
2001469e:	ca9a                	sw	t1,84(sp)
200146a0:	c89e                	sw	t2,80(sp)
200146a2:	c6a2                	sw	s0,76(sp)
200146a4:	c4aa                	sw	a0,72(sp)
200146a6:	c2ae                	sw	a1,68(sp)
200146a8:	c0b2                	sw	a2,64(sp)
200146aa:	de36                	sw	a3,60(sp)
200146ac:	dc3a                	sw	a4,56(sp)
200146ae:	da3e                	sw	a5,52(sp)
200146b0:	d842                	sw	a6,48(sp)
200146b2:	d646                	sw	a7,44(sp)
200146b4:	d472                	sw	t3,40(sp)
200146b6:	d276                	sw	t4,36(sp)
200146b8:	d07a                	sw	t5,32(sp)
200146ba:	ce7e                	sw	t6,28(sp)
200146bc:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
200146be:	a4eff0ef          	jal	ra,2001390c <__metal_myhart_id>
200146c2:	872a                	mv	a4,a0
200146c4:	800017b7          	lui	a5,0x80001
200146c8:	070a                	slli	a4,a4,0x2
200146ca:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
200146ce:	97ba                	add	a5,a5,a4
200146d0:	439c                	lw	a5,0(a5)
200146d2:	faf42623          	sw	a5,-84(s0)
200146d6:	fac42783          	lw	a5,-84(s0)
200146da:	c78d                	beqz	a5,20014704 <metal_lc13_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
200146dc:	fac42503          	lw	a0,-84(s0)
200146e0:	9aeff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
200146e4:	faa42423          	sw	a0,-88(s0)
200146e8:	fa842783          	lw	a5,-88(s0)
200146ec:	3507a783          	lw	a5,848(a5)
200146f0:	faf42223          	sw	a5,-92(s0)
200146f4:	fa842783          	lw	a5,-88(s0)
200146f8:	3487a783          	lw	a5,840(a5)
200146fc:	fa442583          	lw	a1,-92(s0)
20014700:	4575                	li	a0,29
20014702:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:285
}
20014704:	0001                	nop
20014706:	40f6                	lw	ra,92(sp)
20014708:	42e6                	lw	t0,88(sp)
2001470a:	4356                	lw	t1,84(sp)
2001470c:	43c6                	lw	t2,80(sp)
2001470e:	4436                	lw	s0,76(sp)
20014710:	4526                	lw	a0,72(sp)
20014712:	4596                	lw	a1,68(sp)
20014714:	4606                	lw	a2,64(sp)
20014716:	56f2                	lw	a3,60(sp)
20014718:	5762                	lw	a4,56(sp)
2001471a:	57d2                	lw	a5,52(sp)
2001471c:	5842                	lw	a6,48(sp)
2001471e:	58b2                	lw	a7,44(sp)
20014720:	5e22                	lw	t3,40(sp)
20014722:	5e92                	lw	t4,36(sp)
20014724:	5f02                	lw	t5,32(sp)
20014726:	4ff2                	lw	t6,28(sp)
20014728:	6125                	addi	sp,sp,96
2001472a:	30200073          	mret

2001472e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
2001472e:	711d                	addi	sp,sp,-96
20014730:	ce86                	sw	ra,92(sp)
20014732:	cc96                	sw	t0,88(sp)
20014734:	ca9a                	sw	t1,84(sp)
20014736:	c89e                	sw	t2,80(sp)
20014738:	c6a2                	sw	s0,76(sp)
2001473a:	c4aa                	sw	a0,72(sp)
2001473c:	c2ae                	sw	a1,68(sp)
2001473e:	c0b2                	sw	a2,64(sp)
20014740:	de36                	sw	a3,60(sp)
20014742:	dc3a                	sw	a4,56(sp)
20014744:	da3e                	sw	a5,52(sp)
20014746:	d842                	sw	a6,48(sp)
20014748:	d646                	sw	a7,44(sp)
2001474a:	d472                	sw	t3,40(sp)
2001474c:	d276                	sw	t4,36(sp)
2001474e:	d07a                	sw	t5,32(sp)
20014750:	ce7e                	sw	t6,28(sp)
20014752:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20014754:	9b8ff0ef          	jal	ra,2001390c <__metal_myhart_id>
20014758:	872a                	mv	a4,a0
2001475a:	800017b7          	lui	a5,0x80001
2001475e:	070a                	slli	a4,a4,0x2
20014760:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
20014764:	97ba                	add	a5,a5,a4
20014766:	439c                	lw	a5,0(a5)
20014768:	faf42623          	sw	a5,-84(s0)
2001476c:	fac42783          	lw	a5,-84(s0)
20014770:	c78d                	beqz	a5,2001479a <metal_lc14_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20014772:	fac42503          	lw	a0,-84(s0)
20014776:	918ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
2001477a:	faa42423          	sw	a0,-88(s0)
2001477e:	fa842783          	lw	a5,-88(s0)
20014782:	3687a783          	lw	a5,872(a5)
20014786:	faf42223          	sw	a5,-92(s0)
2001478a:	fa842783          	lw	a5,-88(s0)
2001478e:	3607a783          	lw	a5,864(a5)
20014792:	fa442583          	lw	a1,-92(s0)
20014796:	4579                	li	a0,30
20014798:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:291
}
2001479a:	0001                	nop
2001479c:	40f6                	lw	ra,92(sp)
2001479e:	42e6                	lw	t0,88(sp)
200147a0:	4356                	lw	t1,84(sp)
200147a2:	43c6                	lw	t2,80(sp)
200147a4:	4436                	lw	s0,76(sp)
200147a6:	4526                	lw	a0,72(sp)
200147a8:	4596                	lw	a1,68(sp)
200147aa:	4606                	lw	a2,64(sp)
200147ac:	56f2                	lw	a3,60(sp)
200147ae:	5762                	lw	a4,56(sp)
200147b0:	57d2                	lw	a5,52(sp)
200147b2:	5842                	lw	a6,48(sp)
200147b4:	58b2                	lw	a7,44(sp)
200147b6:	5e22                	lw	t3,40(sp)
200147b8:	5e92                	lw	t4,36(sp)
200147ba:	5f02                	lw	t5,32(sp)
200147bc:	4ff2                	lw	t6,28(sp)
200147be:	6125                	addi	sp,sp,96
200147c0:	30200073          	mret

200147c4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
200147c4:	711d                	addi	sp,sp,-96
200147c6:	ce86                	sw	ra,92(sp)
200147c8:	cc96                	sw	t0,88(sp)
200147ca:	ca9a                	sw	t1,84(sp)
200147cc:	c89e                	sw	t2,80(sp)
200147ce:	c6a2                	sw	s0,76(sp)
200147d0:	c4aa                	sw	a0,72(sp)
200147d2:	c2ae                	sw	a1,68(sp)
200147d4:	c0b2                	sw	a2,64(sp)
200147d6:	de36                	sw	a3,60(sp)
200147d8:	dc3a                	sw	a4,56(sp)
200147da:	da3e                	sw	a5,52(sp)
200147dc:	d842                	sw	a6,48(sp)
200147de:	d646                	sw	a7,44(sp)
200147e0:	d472                	sw	t3,40(sp)
200147e2:	d276                	sw	t4,36(sp)
200147e4:	d07a                	sw	t5,32(sp)
200147e6:	ce7e                	sw	t6,28(sp)
200147e8:	1080                	addi	s0,sp,96
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
200147ea:	922ff0ef          	jal	ra,2001390c <__metal_myhart_id>
200147ee:	872a                	mv	a4,a0
200147f0:	800017b7          	lui	a5,0x80001
200147f4:	070a                	slli	a4,a4,0x2
200147f6:	aa878793          	addi	a5,a5,-1368 # 80000aa8 <metal_segment_heap_target_end+0xffffe798>
200147fa:	97ba                	add	a5,a5,a4
200147fc:	439c                	lw	a5,0(a5)
200147fe:	faf42623          	sw	a5,-84(s0)
20014802:	fac42783          	lw	a5,-84(s0)
20014806:	c78d                	beqz	a5,20014830 <metal_lc15_interrupt_vector_handler+0x6c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20014808:	fac42503          	lw	a0,-84(s0)
2001480c:	882ff0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014810:	faa42423          	sw	a0,-88(s0)
20014814:	fa842783          	lw	a5,-88(s0)
20014818:	3807a783          	lw	a5,896(a5)
2001481c:	faf42223          	sw	a5,-92(s0)
20014820:	fa842783          	lw	a5,-88(s0)
20014824:	3787a783          	lw	a5,888(a5)
20014828:	fa442583          	lw	a1,-92(s0)
2001482c:	457d                	li	a0,31
2001482e:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:297
}
20014830:	0001                	nop
20014832:	40f6                	lw	ra,92(sp)
20014834:	42e6                	lw	t0,88(sp)
20014836:	4356                	lw	t1,84(sp)
20014838:	43c6                	lw	t2,80(sp)
2001483a:	4436                	lw	s0,76(sp)
2001483c:	4526                	lw	a0,72(sp)
2001483e:	4596                	lw	a1,68(sp)
20014840:	4606                	lw	a2,64(sp)
20014842:	56f2                	lw	a3,60(sp)
20014844:	5762                	lw	a4,56(sp)
20014846:	57d2                	lw	a5,52(sp)
20014848:	5842                	lw	a6,48(sp)
2001484a:	58b2                	lw	a7,44(sp)
2001484c:	5e22                	lw	t3,40(sp)
2001484e:	5e92                	lw	t4,36(sp)
20014850:	5f02                	lw	t5,32(sp)
20014852:	4ff2                	lw	t6,28(sp)
20014854:	6125                	addi	sp,sp,96
20014856:	30200073          	mret

2001485a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
2001485a:	1101                	addi	sp,sp,-32
2001485c:	ce22                	sw	s0,28(sp)
2001485e:	1000                	addi	s0,sp,32
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20014860:	305027f3          	csrr	a5,mtvec
20014864:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20014868:	fec42783          	lw	a5,-20(s0)
2001486c:	03f7f793          	andi	a5,a5,63
20014870:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20014874:	fec42703          	lw	a4,-20(s0)
20014878:	478d                	li	a5,3
2001487a:	02f70363          	beq	a4,a5,200148a0 <__metal_controller_interrupt_vector_mode+0x46>
2001487e:	fec42703          	lw	a4,-20(s0)
20014882:	478d                	li	a5,3
20014884:	02e7e263          	bltu	a5,a4,200148a8 <__metal_controller_interrupt_vector_mode+0x4e>
20014888:	fec42703          	lw	a4,-20(s0)
2001488c:	4785                	li	a5,1
2001488e:	00f70b63          	beq	a4,a5,200148a4 <__metal_controller_interrupt_vector_mode+0x4a>
20014892:	fec42703          	lw	a4,-20(s0)
20014896:	4789                	li	a5,2
20014898:	00f71863          	bne	a4,a5,200148a8 <__metal_controller_interrupt_vector_mode+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2001489c:	478d                	li	a5,3
2001489e:	a031                	j	200148aa <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
200148a0:	4791                	li	a5,4
200148a2:	a021                	j	200148aa <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
200148a4:	4785                	li	a5,1
200148a6:	a011                	j	200148aa <__metal_controller_interrupt_vector_mode+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
200148a8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:314
}
200148aa:	853e                	mv	a0,a5
200148ac:	4472                	lw	s0,28(sp)
200148ae:	6105                	addi	sp,sp,32
200148b0:	8082                	ret

200148b2 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
200148b2:	7179                	addi	sp,sp,-48
200148b4:	d622                	sw	s0,44(sp)
200148b6:	1800                	addi	s0,sp,48
200148b8:	fca42e23          	sw	a0,-36(s0)
200148bc:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
200148c0:	305027f3          	csrr	a5,mtvec
200148c4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
200148c8:	fec42783          	lw	a5,-20(s0)
200148cc:	fc07f793          	andi	a5,a5,-64
200148d0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
200148d4:	fd842783          	lw	a5,-40(s0)
200148d8:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
200148dc:	fdc42703          	lw	a4,-36(s0)
200148e0:	4791                	li	a5,4
200148e2:	04f70563          	beq	a4,a5,2001492c <__metal_controller_interrupt_vector+0x7a>
200148e6:	fdc42703          	lw	a4,-36(s0)
200148ea:	4791                	li	a5,4
200148ec:	06e7e863          	bltu	a5,a4,2001495c <__metal_controller_interrupt_vector+0xaa>
200148f0:	fdc42703          	lw	a4,-36(s0)
200148f4:	478d                	li	a5,3
200148f6:	06e7e363          	bltu	a5,a4,2001495c <__metal_controller_interrupt_vector+0xaa>
200148fa:	fdc42703          	lw	a4,-36(s0)
200148fe:	4789                	li	a5,2
20014900:	00f77b63          	bgeu	a4,a5,20014916 <__metal_controller_interrupt_vector+0x64>
20014904:	fdc42783          	lw	a5,-36(s0)
20014908:	c7a1                	beqz	a5,20014950 <__metal_controller_interrupt_vector+0x9e>
2001490a:	fdc42703          	lw	a4,-36(s0)
2001490e:	4785                	li	a5,1
20014910:	02f70963          	beq	a4,a5,20014942 <__metal_controller_interrupt_vector+0x90>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20014914:	a0a1                	j	2001495c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20014916:	fe842783          	lw	a5,-24(s0)
2001491a:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2001491e:	fec42783          	lw	a5,-20(s0)
20014922:	0027e793          	ori	a5,a5,2
20014926:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
2001492a:	a80d                	j	2001495c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2001492c:	fe842783          	lw	a5,-24(s0)
20014930:	30779073          	csrw	mtvt,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20014934:	fec42783          	lw	a5,-20(s0)
20014938:	0037e793          	ori	a5,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
2001493c:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20014940:	a831                	j	2001495c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20014942:	fe842783          	lw	a5,-24(s0)
20014946:	0017e793          	ori	a5,a5,1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
2001494a:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
2001494e:	a039                	j	2001495c <__metal_controller_interrupt_vector+0xaa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20014950:	fe842783          	lw	a5,-24(s0)
20014954:	9bf1                	andi	a5,a5,-4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20014956:	30579073          	csrw	mtvec,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
2001495a:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:344
}
2001495c:	0001                	nop
2001495e:	5432                	lw	s0,44(sp)
20014960:	6145                	addi	sp,sp,48
20014962:	8082                	ret

20014964 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20014964:	1101                	addi	sp,sp,-32
20014966:	ce22                	sw	s0,28(sp)
20014968:	1000                	addi	s0,sp,32
2001496a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2001496e:	fec42703          	lw	a4,-20(s0)
20014972:	47fd                	li	a5,31
20014974:	02e7c663          	blt	a5,a4,200149a0 <__metal_valid_interrupt_id+0x3c>
20014978:	fec42703          	lw	a4,-20(s0)
2001497c:	478d                	li	a5,3
2001497e:	02f74963          	blt	a4,a5,200149b0 <__metal_valid_interrupt_id+0x4c>
20014982:	fec42783          	lw	a5,-20(s0)
20014986:	4705                	li	a4,1
20014988:	00f71733          	sll	a4,a4,a5
2001498c:	77c5                	lui	a5,0xffff1
2001498e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffee578>
20014992:	8ff9                	and	a5,a5,a4
20014994:	00f037b3          	snez	a5,a5
20014998:	0ff7f793          	zext.b	a5,a5
2001499c:	eb81                	bnez	a5,200149ac <__metal_valid_interrupt_id+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2001499e:	a809                	j	200149b0 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
200149a0:	fec42703          	lw	a4,-20(s0)
200149a4:	08000793          	li	a5,128
200149a8:	00f71463          	bne	a4,a5,200149b0 <__metal_valid_interrupt_id+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
200149ac:	4785                	li	a5,1
200149ae:	a019                	j	200149b4 <__metal_valid_interrupt_id+0x50>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
200149b0:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
200149b2:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:374
}
200149b4:	853e                	mv	a0,a5
200149b6:	4472                	lw	s0,28(sp)
200149b8:	6105                	addi	sp,sp,32
200149ba:	8082                	ret

200149bc <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
200149bc:	7179                	addi	sp,sp,-48
200149be:	d606                	sw	ra,44(sp)
200149c0:	d422                	sw	s0,40(sp)
200149c2:	1800                	addi	s0,sp,48
200149c4:	fca42e23          	sw	a0,-36(s0)
200149c8:	fcb42c23          	sw	a1,-40(s0)
200149cc:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
200149d0:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
200149d4:	fdc42783          	lw	a5,-36(s0)
200149d8:	e399                	bnez	a5,200149de <__metal_local_interrupt_enable+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
200149da:	57fd                	li	a5,-1
200149dc:	a849                	j	20014a6e <__metal_local_interrupt_enable+0xb2>
200149de:	fd842703          	lw	a4,-40(s0)
200149e2:	47fd                	li	a5,31
200149e4:	08e7e063          	bltu	a5,a4,20014a64 <__metal_local_interrupt_enable+0xa8>
200149e8:	fd842783          	lw	a5,-40(s0)
200149ec:	00279713          	slli	a4,a5,0x2
200149f0:	200107b7          	lui	a5,0x20010
200149f4:	50c78793          	addi	a5,a5,1292 # 2001050c <__metal_driver_vtable_riscv_clint0+0x64>
200149f8:	97ba                	add	a5,a5,a4
200149fa:	439c                	lw	a5,0(a5)
200149fc:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
200149fe:	fd442783          	lw	a5,-44(s0)
20014a02:	c781                	beqz	a5,20014a0a <__metal_local_interrupt_enable+0x4e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20014a04:	f23fe0ef          	jal	ra,20013926 <__metal_interrupt_global_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20014a08:	a08d                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
20014a0a:	f35fe0ef          	jal	ra,2001393e <__metal_interrupt_global_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
20014a0e:	a8b1                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20014a10:	fd442783          	lw	a5,-44(s0)
20014a14:	c781                	beqz	a5,20014a1c <__metal_local_interrupt_enable+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20014a16:	f41fe0ef          	jal	ra,20013956 <__metal_interrupt_software_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
20014a1a:	a881                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
20014a1c:	f53fe0ef          	jal	ra,2001396e <__metal_interrupt_software_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20014a20:	a0a9                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20014a22:	fd442783          	lw	a5,-44(s0)
20014a26:	c781                	beqz	a5,20014a2e <__metal_local_interrupt_enable+0x72>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20014a28:	f5ffe0ef          	jal	ra,20013986 <__metal_interrupt_timer_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
20014a2c:	a83d                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
20014a2e:	f73fe0ef          	jal	ra,200139a0 <__metal_interrupt_timer_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20014a32:	a825                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20014a34:	fd442783          	lw	a5,-44(s0)
20014a38:	c781                	beqz	a5,20014a40 <__metal_local_interrupt_enable+0x84>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
20014a3a:	f81fe0ef          	jal	ra,200139ba <__metal_interrupt_external_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
20014a3e:	a035                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20014a40:	f97fe0ef          	jal	ra,200139d6 <__metal_interrupt_external_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20014a44:	a01d                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20014a46:	fd442783          	lw	a5,-44(s0)
20014a4a:	c799                	beqz	a5,20014a58 <__metal_local_interrupt_enable+0x9c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
20014a4c:	fd842783          	lw	a5,-40(s0)
20014a50:	853e                	mv	a0,a5
20014a52:	fa1fe0ef          	jal	ra,200139f2 <__metal_interrupt_local_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20014a56:	a811                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20014a58:	fd842783          	lw	a5,-40(s0)
20014a5c:	853e                	mv	a0,a5
20014a5e:	fc1fe0ef          	jal	ra,20013a1e <__metal_interrupt_local_disable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20014a62:	a021                	j	20014a6a <__metal_local_interrupt_enable+0xae>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20014a64:	57fd                	li	a5,-1
20014a66:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
20014a6a:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:439
}
20014a6e:	853e                	mv	a0,a5
20014a70:	50b2                	lw	ra,44(sp)
20014a72:	5422                	lw	s0,40(sp)
20014a74:	6145                	addi	sp,sp,48
20014a76:	8082                	ret

20014a78 <__metal_exception_register>:
__metal_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20014a78:	7179                	addi	sp,sp,-48
20014a7a:	d622                	sw	s0,44(sp)
20014a7c:	1800                	addi	s0,sp,48
20014a7e:	fca42e23          	sw	a0,-36(s0)
20014a82:	fcb42c23          	sw	a1,-40(s0)
20014a86:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20014a8a:	fdc42783          	lw	a5,-36(s0)
20014a8e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20014a92:	fd842703          	lw	a4,-40(s0)
20014a96:	47ad                	li	a5,11
20014a98:	02e7c263          	blt	a5,a4,20014abc <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
20014a9c:	fd442783          	lw	a5,-44(s0)
20014aa0:	cf91                	beqz	a5,20014abc <__metal_exception_register+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
20014aa2:	fec42703          	lw	a4,-20(s0)
20014aa6:	fd842783          	lw	a5,-40(s0)
20014aaa:	0e878793          	addi	a5,a5,232
20014aae:	078a                	slli	a5,a5,0x2
20014ab0:	97ba                	add	a5,a5,a4
20014ab2:	fd442703          	lw	a4,-44(s0)
20014ab6:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
20014ab8:	4781                	li	a5,0
20014aba:	a011                	j	20014abe <__metal_exception_register+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
20014abc:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:450
}
20014abe:	853e                	mv	a0,a5
20014ac0:	5432                	lw	s0,44(sp)
20014ac2:	6145                	addi	sp,sp,48
20014ac4:	8082                	ret

20014ac6 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
20014ac6:	7179                	addi	sp,sp,-48
20014ac8:	d606                	sw	ra,44(sp)
20014aca:	d422                	sw	s0,40(sp)
20014acc:	1800                	addi	s0,sp,48
20014ace:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20014ad2:	fdc42783          	lw	a5,-36(s0)
20014ad6:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
20014ada:	fe442783          	lw	a5,-28(s0)
20014ade:	43dc                	lw	a5,4(a5)
20014ae0:	e3e1                	bnez	a5,20014ba0 <__metal_driver_riscv_cpu_controller_interrupt_init+0xda>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
20014ae2:	fe042623          	sw	zero,-20(s0)
20014ae6:	a0b9                	j	20014b34 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
20014ae8:	fe442683          	lw	a3,-28(s0)
20014aec:	fec42703          	lw	a4,-20(s0)
20014af0:	87ba                	mv	a5,a4
20014af2:	0786                	slli	a5,a5,0x1
20014af4:	97ba                	add	a5,a5,a4
20014af6:	078e                	slli	a5,a5,0x3
20014af8:	97b6                	add	a5,a5,a3
20014afa:	0807a823          	sw	zero,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
20014afe:	fe442683          	lw	a3,-28(s0)
20014b02:	fec42703          	lw	a4,-20(s0)
20014b06:	87ba                	mv	a5,a4
20014b08:	0786                	slli	a5,a5,0x1
20014b0a:	97ba                	add	a5,a5,a4
20014b0c:	078e                	slli	a5,a5,0x3
20014b0e:	97b6                	add	a5,a5,a3
20014b10:	0807aa23          	sw	zero,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20014b14:	fe442683          	lw	a3,-28(s0)
20014b18:	fec42703          	lw	a4,-20(s0)
20014b1c:	87ba                	mv	a5,a4
20014b1e:	0786                	slli	a5,a5,0x1
20014b20:	97ba                	add	a5,a5,a4
20014b22:	078e                	slli	a5,a5,0x3
20014b24:	97b6                	add	a5,a5,a3
20014b26:	0807ac23          	sw	zero,152(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
20014b2a:	fec42783          	lw	a5,-20(s0)
20014b2e:	0785                	addi	a5,a5,1
20014b30:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20014b34:	fec42703          	lw	a4,-20(s0)
20014b38:	47fd                	li	a5,31
20014b3a:	fae7d7e3          	bge	a5,a4,20014ae8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
20014b3e:	fe042423          	sw	zero,-24(s0)
20014b42:	a01d                	j	20014b68 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20014b44:	fe442703          	lw	a4,-28(s0)
20014b48:	fe842783          	lw	a5,-24(s0)
20014b4c:	0e878793          	addi	a5,a5,232
20014b50:	078a                	slli	a5,a5,0x2
20014b52:	97ba                	add	a5,a5,a4
20014b54:	20014737          	lui	a4,0x20014
20014b58:	a4a70713          	addi	a4,a4,-1462 # 20013a4a <__metal_default_exception_handler>
20014b5c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
20014b5e:	fe842783          	lw	a5,-24(s0)
20014b62:	0785                	addi	a5,a5,1
20014b64:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20014b68:	fe842703          	lw	a4,-24(s0)
20014b6c:	47ad                	li	a5,11
20014b6e:	fce7dbe3          	bge	a5,a4,20014b44 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20014b72:	305027f3          	csrr	a5,mtvec
20014b76:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
20014b7a:	200107b7          	lui	a5,0x20010
20014b7e:	13878793          	addi	a5,a5,312 # 20010138 <early_trap_vector>
20014b82:	fe042703          	lw	a4,-32(s0)
20014b86:	00f71963          	bne	a4,a5,20014b98 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
20014b8a:	200147b7          	lui	a5,0x20014
20014b8e:	d0078593          	addi	a1,a5,-768 # 20013d00 <__metal_exception_handler>
20014b92:	4501                	li	a0,0
20014b94:	d1fff0ef          	jal	ra,200148b2 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20014b98:	fe442783          	lw	a5,-28(s0)
20014b9c:	4705                	li	a4,1
20014b9e:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
20014ba0:	0001                	nop
20014ba2:	50b2                	lw	ra,44(sp)
20014ba4:	5422                	lw	s0,40(sp)
20014ba6:	6145                	addi	sp,sp,48
20014ba8:	8082                	ret

20014baa <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
20014baa:	7179                	addi	sp,sp,-48
20014bac:	d606                	sw	ra,44(sp)
20014bae:	d422                	sw	s0,40(sp)
20014bb0:	1800                	addi	s0,sp,48
20014bb2:	fca42e23          	sw	a0,-36(s0)
20014bb6:	fcb42c23          	sw	a1,-40(s0)
20014bba:	fcc42a23          	sw	a2,-44(s0)
20014bbe:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
20014bc2:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
20014bc6:	fdc42783          	lw	a5,-36(s0)
20014bca:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
20014bce:	fd842503          	lw	a0,-40(s0)
20014bd2:	3b49                	jal	20014964 <__metal_valid_interrupt_id>
20014bd4:	87aa                	mv	a5,a0
20014bd6:	e399                	bnez	a5,20014bdc <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
20014bd8:	57d5                	li	a5,-11
20014bda:	a265                	j	20014d82 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20014bdc:	fd842703          	lw	a4,-40(s0)
20014be0:	08000793          	li	a5,128
20014be4:	00f71863          	bne	a4,a5,20014bf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
20014be8:	c73ff0ef          	jal	ra,2001485a <__metal_controller_interrupt_vector_mode>
20014bec:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
20014bee:	c399                	beqz	a5,20014bf4 <__metal_driver_riscv_cpu_controller_interrupt_register+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
20014bf0:	57cd                	li	a5,-13
20014bf2:	aa41                	j	20014d82 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
20014bf4:	fd442783          	lw	a5,-44(s0)
20014bf8:	cfb9                	beqz	a5,20014c56 <__metal_driver_riscv_cpu_controller_interrupt_register+0xac>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
20014bfa:	fd842703          	lw	a4,-40(s0)
20014bfe:	08000793          	li	a5,128
20014c02:	00f71f63          	bne	a4,a5,20014c20 <__metal_driver_riscv_cpu_controller_interrupt_register+0x76>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20014c06:	fe842783          	lw	a5,-24(s0)
20014c0a:	fd442703          	lw	a4,-44(s0)
20014c0e:	38e7a823          	sw	a4,912(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
20014c12:	fe842783          	lw	a5,-24(s0)
20014c16:	fd042703          	lw	a4,-48(s0)
20014c1a:	38e7ac23          	sw	a4,920(a5)
20014c1e:	a285                	j	20014d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
20014c20:	fe842683          	lw	a3,-24(s0)
20014c24:	fd842703          	lw	a4,-40(s0)
20014c28:	87ba                	mv	a5,a4
20014c2a:	0786                	slli	a5,a5,0x1
20014c2c:	97ba                	add	a5,a5,a4
20014c2e:	078e                	slli	a5,a5,0x3
20014c30:	97b6                	add	a5,a5,a3
20014c32:	fd442703          	lw	a4,-44(s0)
20014c36:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20014c3a:	fe842683          	lw	a3,-24(s0)
20014c3e:	fd842703          	lw	a4,-40(s0)
20014c42:	87ba                	mv	a5,a4
20014c44:	0786                	slli	a5,a5,0x1
20014c46:	97ba                	add	a5,a5,a4
20014c48:	078e                	slli	a5,a5,0x3
20014c4a:	97b6                	add	a5,a5,a3
20014c4c:	fd042703          	lw	a4,-48(s0)
20014c50:	08e7ac23          	sw	a4,152(a5)
20014c54:	a22d                	j	20014d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20014c56:	fd842703          	lw	a4,-40(s0)
20014c5a:	08000793          	li	a5,128
20014c5e:	0cf70163          	beq	a4,a5,20014d20 <__metal_driver_riscv_cpu_controller_interrupt_register+0x176>
20014c62:	fd842703          	lw	a4,-40(s0)
20014c66:	08000793          	li	a5,128
20014c6a:	10e7c763          	blt	a5,a4,20014d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20014c6e:	fd842703          	lw	a4,-40(s0)
20014c72:	47fd                	li	a5,31
20014c74:	10e7c263          	blt	a5,a4,20014d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20014c78:	fd842703          	lw	a4,-40(s0)
20014c7c:	47c1                	li	a5,16
20014c7e:	0cf75063          	bge	a4,a5,20014d3e <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20014c82:	fd842703          	lw	a4,-40(s0)
20014c86:	47ad                	li	a5,11
20014c88:	0af70b63          	beq	a4,a5,20014d3e <__metal_driver_riscv_cpu_controller_interrupt_register+0x194>
20014c8c:	fd842703          	lw	a4,-40(s0)
20014c90:	47ad                	li	a5,11
20014c92:	0ee7c363          	blt	a5,a4,20014d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
20014c96:	fd842703          	lw	a4,-40(s0)
20014c9a:	478d                	li	a5,3
20014c9c:	00f70863          	beq	a4,a5,20014cac <__metal_driver_riscv_cpu_controller_interrupt_register+0x102>
20014ca0:	fd842703          	lw	a4,-40(s0)
20014ca4:	479d                	li	a5,7
20014ca6:	04f70063          	beq	a4,a5,20014ce6 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13c>
20014caa:	a0f9                	j	20014d78 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1ce>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
20014cac:	fe842683          	lw	a3,-24(s0)
20014cb0:	fd842703          	lw	a4,-40(s0)
20014cb4:	87ba                	mv	a5,a4
20014cb6:	0786                	slli	a5,a5,0x1
20014cb8:	97ba                	add	a5,a5,a4
20014cba:	078e                	slli	a5,a5,0x3
20014cbc:	97b6                	add	a5,a5,a3
20014cbe:	20014737          	lui	a4,0x20014
20014cc2:	b3a70713          	addi	a4,a4,-1222 # 20013b3a <__metal_default_sw_handler>
20014cc6:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
20014cca:	fe842683          	lw	a3,-24(s0)
20014cce:	fd842703          	lw	a4,-40(s0)
20014cd2:	87ba                	mv	a5,a4
20014cd4:	0786                	slli	a5,a5,0x1
20014cd6:	97ba                	add	a5,a5,a4
20014cd8:	078e                	slli	a5,a5,0x3
20014cda:	97b6                	add	a5,a5,a3
20014cdc:	fd042703          	lw	a4,-48(s0)
20014ce0:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
20014ce4:	a869                	j	20014d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
20014ce6:	fe842683          	lw	a3,-24(s0)
20014cea:	fd842703          	lw	a4,-40(s0)
20014cee:	87ba                	mv	a5,a4
20014cf0:	0786                	slli	a5,a5,0x1
20014cf2:	97ba                	add	a5,a5,a4
20014cf4:	078e                	slli	a5,a5,0x3
20014cf6:	97b6                	add	a5,a5,a3
20014cf8:	20014737          	lui	a4,0x20014
20014cfc:	c4a70713          	addi	a4,a4,-950 # 20013c4a <__metal_default_timer_handler>
20014d00:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20014d04:	fe842683          	lw	a3,-24(s0)
20014d08:	fd842703          	lw	a4,-40(s0)
20014d0c:	87ba                	mv	a5,a4
20014d0e:	0786                	slli	a5,a5,0x1
20014d10:	97ba                	add	a5,a5,a4
20014d12:	078e                	slli	a5,a5,0x3
20014d14:	97b6                	add	a5,a5,a3
20014d16:	fd042703          	lw	a4,-48(s0)
20014d1a:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
20014d1e:	a085                	j	20014d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
20014d20:	fe842783          	lw	a5,-24(s0)
20014d24:	20014737          	lui	a4,0x20014
20014d28:	c3470713          	addi	a4,a4,-972 # 20013c34 <__metal_default_beu_handler>
20014d2c:	38e7a823          	sw	a4,912(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
20014d30:	fe842783          	lw	a5,-24(s0)
20014d34:	fd042703          	lw	a4,-48(s0)
20014d38:	38e7ac23          	sw	a4,920(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20014d3c:	a089                	j	20014d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
20014d3e:	fe842683          	lw	a3,-24(s0)
20014d42:	fd842703          	lw	a4,-40(s0)
20014d46:	87ba                	mv	a5,a4
20014d48:	0786                	slli	a5,a5,0x1
20014d4a:	97ba                	add	a5,a5,a4
20014d4c:	078e                	slli	a5,a5,0x3
20014d4e:	97b6                	add	a5,a5,a3
20014d50:	20014737          	lui	a4,0x20014
20014d54:	a6270713          	addi	a4,a4,-1438 # 20013a62 <__metal_default_interrupt_handler>
20014d58:	08e7a823          	sw	a4,144(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20014d5c:	fe842683          	lw	a3,-24(s0)
20014d60:	fd842703          	lw	a4,-40(s0)
20014d64:	87ba                	mv	a5,a4
20014d66:	0786                	slli	a5,a5,0x1
20014d68:	97ba                	add	a5,a5,a4
20014d6a:	078e                	slli	a5,a5,0x3
20014d6c:	97b6                	add	a5,a5,a3
20014d6e:	fd042703          	lw	a4,-48(s0)
20014d72:	08e7aa23          	sw	a4,148(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20014d76:	a021                	j	20014d7e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20014d78:	57d1                	li	a5,-12
20014d7a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
20014d7e:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:549
}
20014d82:	853e                	mv	a0,a5
20014d84:	50b2                	lw	ra,44(sp)
20014d86:	5422                	lw	s0,40(sp)
20014d88:	6145                	addi	sp,sp,48
20014d8a:	8082                	ret

20014d8c <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20014d8c:	1101                	addi	sp,sp,-32
20014d8e:	ce06                	sw	ra,28(sp)
20014d90:	cc22                	sw	s0,24(sp)
20014d92:	1000                	addi	s0,sp,32
20014d94:	fea42623          	sw	a0,-20(s0)
20014d98:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20014d9c:	fe842783          	lw	a5,-24(s0)
20014da0:	4605                	li	a2,1
20014da2:	85be                	mv	a1,a5
20014da4:	fec42503          	lw	a0,-20(s0)
20014da8:	c15ff0ef          	jal	ra,200149bc <__metal_local_interrupt_enable>
20014dac:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:554
}
20014dae:	853e                	mv	a0,a5
20014db0:	40f2                	lw	ra,28(sp)
20014db2:	4462                	lw	s0,24(sp)
20014db4:	6105                	addi	sp,sp,32
20014db6:	8082                	ret

20014db8 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
20014db8:	1101                	addi	sp,sp,-32
20014dba:	ce06                	sw	ra,28(sp)
20014dbc:	cc22                	sw	s0,24(sp)
20014dbe:	1000                	addi	s0,sp,32
20014dc0:	fea42623          	sw	a0,-20(s0)
20014dc4:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
20014dc8:	fe842783          	lw	a5,-24(s0)
20014dcc:	4601                	li	a2,0
20014dce:	85be                	mv	a1,a5
20014dd0:	fec42503          	lw	a0,-20(s0)
20014dd4:	be9ff0ef          	jal	ra,200149bc <__metal_local_interrupt_enable>
20014dd8:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:559
}
20014dda:	853e                	mv	a0,a5
20014ddc:	40f2                	lw	ra,28(sp)
20014dde:	4462                	lw	s0,24(sp)
20014de0:	6105                	addi	sp,sp,32
20014de2:	8082                	ret

20014de4 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
20014de4:	1101                	addi	sp,sp,-32
20014de6:	ce06                	sw	ra,28(sp)
20014de8:	cc22                	sw	s0,24(sp)
20014dea:	1000                	addi	s0,sp,32
20014dec:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
20014df0:	a6bff0ef          	jal	ra,2001485a <__metal_controller_interrupt_vector_mode>
20014df4:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:593
}
20014df6:	853e                	mv	a0,a5
20014df8:	40f2                	lw	ra,28(sp)
20014dfa:	4462                	lw	s0,24(sp)
20014dfc:	6105                	addi	sp,sp,32
20014dfe:	8082                	ret

20014e00 <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20014e00:	1101                	addi	sp,sp,-32
20014e02:	ce06                	sw	ra,28(sp)
20014e04:	cc22                	sw	s0,24(sp)
20014e06:	1000                	addi	s0,sp,32
20014e08:	fea42623          	sw	a0,-20(s0)
20014e0c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
20014e10:	fe842783          	lw	a5,-24(s0)
20014e14:	eb99                	bnez	a5,20014e2a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20014e16:	200147b7          	lui	a5,0x20014
20014e1a:	d0078593          	addi	a1,a5,-768 # 20013d00 <__metal_exception_handler>
20014e1e:	fe842503          	lw	a0,-24(s0)
20014e22:	a91ff0ef          	jal	ra,200148b2 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20014e26:	4781                	li	a5,0
20014e28:	a00d                	j	20014e4a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20014e2a:	fe842703          	lw	a4,-24(s0)
20014e2e:	4785                	li	a5,1
20014e30:	00f71c63          	bne	a4,a5,20014e48 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20014e34:	200187b7          	lui	a5,0x20018
20014e38:	80078593          	addi	a1,a5,-2048 # 20017800 <__metal_vector_table>
20014e3c:	fe842503          	lw	a0,-24(s0)
20014e40:	a73ff0ef          	jal	ra,200148b2 <__metal_controller_interrupt_vector>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20014e44:	4781                	li	a5,0
20014e46:	a011                	j	20014e4a <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20014e48:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:609
}
20014e4a:	853e                	mv	a0,a5
20014e4c:	40f2                	lw	ra,28(sp)
20014e4e:	4462                	lw	s0,24(sp)
20014e50:	6105                	addi	sp,sp,32
20014e52:	8082                	ret

20014e54 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20014e54:	1101                	addi	sp,sp,-32
20014e56:	ce22                	sw	s0,28(sp)
20014e58:	1000                	addi	s0,sp,32
20014e5a:	fea42623          	sw	a0,-20(s0)
20014e5e:	feb42423          	sw	a1,-24(s0)
20014e62:	fec42223          	sw	a2,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20014e66:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:616
}
20014e68:	853e                	mv	a0,a5
20014e6a:	4472                	lw	s0,28(sp)
20014e6c:	6105                	addi	sp,sp,32
20014e6e:	8082                	ret

20014e70 <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
20014e70:	7139                	addi	sp,sp,-64
20014e72:	de22                	sw	s0,60(sp)
20014e74:	0080                	addi	s0,sp,64
20014e76:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20014e7a:	4501                	li	a0,0
20014e7c:	4581                	li	a1,0
20014e7e:	fea42423          	sw	a0,-24(s0)
20014e82:	feb42623          	sw	a1,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20014e86:	b80025f3          	csrr	a1,mcycleh
20014e8a:	feb42223          	sw	a1,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
20014e8e:	b00025f3          	csrr	a1,mcycle
20014e92:	feb42023          	sw	a1,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20014e96:	b80025f3          	csrr	a1,mcycleh
20014e9a:	fcb42e23          	sw	a1,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
20014e9e:	fe442503          	lw	a0,-28(s0)
20014ea2:	fdc42583          	lw	a1,-36(s0)
20014ea6:	feb510e3          	bne	a0,a1,20014e86 <__metal_driver_cpu_mcycle_get+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
20014eaa:	fe442583          	lw	a1,-28(s0)
20014eae:	882e                	mv	a6,a1
20014eb0:	4881                	li	a7,0
20014eb2:	00081793          	slli	a5,a6,0x0
20014eb6:	4701                	li	a4,0
20014eb8:	fe042583          	lw	a1,-32(s0)
20014ebc:	862e                	mv	a2,a1
20014ebe:	4681                	li	a3,0
20014ec0:	00c765b3          	or	a1,a4,a2
20014ec4:	feb42423          	sw	a1,-24(s0)
20014ec8:	8fd5                	or	a5,a5,a3
20014eca:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
20014ece:	fe842703          	lw	a4,-24(s0)
20014ed2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:640
}
20014ed6:	853a                	mv	a0,a4
20014ed8:	85be                	mv	a1,a5
20014eda:	5472                	lw	s0,60(sp)
20014edc:	6121                	addi	sp,sp,64
20014ede:	8082                	ret

20014ee0 <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
20014ee0:	7179                	addi	sp,sp,-48
20014ee2:	d606                	sw	ra,44(sp)
20014ee4:	d422                	sw	s0,40(sp)
20014ee6:	d24a                	sw	s2,36(sp)
20014ee8:	d04e                	sw	s3,32(sp)
20014eea:	1800                	addi	s0,sp,48
20014eec:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
20014ef0:	fdc42783          	lw	a5,-36(s0)
20014ef4:	e781                	bnez	a5,20014efc <__metal_driver_cpu_timebase_get+0x1c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
20014ef6:	4901                	li	s2,0
20014ef8:	4981                	li	s3,0
20014efa:	a821                	j	20014f12 <__metal_driver_cpu_timebase_get+0x32>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
20014efc:	fdc42503          	lw	a0,-36(s0)
20014f00:	965fe0ef          	jal	ra,20013864 <__metal_driver_cpu_timebase>
20014f04:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20014f08:	fec42783          	lw	a5,-20(s0)
20014f0c:	893e                	mv	s2,a5
20014f0e:	87fd                	srai	a5,a5,0x1f
20014f10:	89be                	mv	s3,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:650
}
20014f12:	874a                	mv	a4,s2
20014f14:	87ce                	mv	a5,s3
20014f16:	853a                	mv	a0,a4
20014f18:	85be                	mv	a1,a5
20014f1a:	50b2                	lw	ra,44(sp)
20014f1c:	5422                	lw	s0,40(sp)
20014f1e:	5912                	lw	s2,36(sp)
20014f20:	5982                	lw	s3,32(sp)
20014f22:	6145                	addi	sp,sp,48
20014f24:	8082                	ret

20014f26 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20014f26:	7179                	addi	sp,sp,-48
20014f28:	d606                	sw	ra,44(sp)
20014f2a:	d422                	sw	s0,40(sp)
20014f2c:	1800                	addi	s0,sp,48
20014f2e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
20014f32:	4781                	li	a5,0
20014f34:	4801                	li	a6,0
20014f36:	fef42023          	sw	a5,-32(s0)
20014f3a:	ff042223          	sw	a6,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014f3e:	fdc42503          	lw	a0,-36(s0)
20014f42:	94dfe0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014f46:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20014f4a:	fec42783          	lw	a5,-20(s0)
20014f4e:	c78d                	beqz	a5,20014f78 <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014f50:	fec42783          	lw	a5,-20(s0)
20014f54:	13c7a783          	lw	a5,316(a5)
20014f58:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20014f5c:	fe842783          	lw	a5,-24(s0)
20014f60:	cf81                	beqz	a5,20014f78 <__metal_driver_cpu_mtime_get+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
20014f62:	fe842783          	lw	a5,-24(s0)
20014f66:	439c                	lw	a5,0(a5)
20014f68:	47f8                	lw	a4,76(a5)
20014f6a:	fe040793          	addi	a5,s0,-32
20014f6e:	863e                	mv	a2,a5
20014f70:	4585                	li	a1,1
20014f72:	fe842503          	lw	a0,-24(s0)
20014f76:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20014f78:	fe042703          	lw	a4,-32(s0)
20014f7c:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:667
}
20014f80:	853a                	mv	a0,a4
20014f82:	85be                	mv	a1,a5
20014f84:	50b2                	lw	ra,44(sp)
20014f86:	5422                	lw	s0,40(sp)
20014f88:	6145                	addi	sp,sp,48
20014f8a:	8082                	ret

20014f8c <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20014f8c:	7179                	addi	sp,sp,-48
20014f8e:	d606                	sw	ra,44(sp)
20014f90:	d422                	sw	s0,40(sp)
20014f92:	d226                	sw	s1,36(sp)
20014f94:	1800                	addi	s0,sp,48
20014f96:	fca42e23          	sw	a0,-36(s0)
20014f9a:	fcb42823          	sw	a1,-48(s0)
20014f9e:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
20014fa2:	57fd                	li	a5,-1
20014fa4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20014fa8:	fdc42503          	lw	a0,-36(s0)
20014fac:	8e3fe0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20014fb0:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
20014fb4:	fe842783          	lw	a5,-24(s0)
20014fb8:	cf8d                	beqz	a5,20014ff2 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
20014fba:	fe842783          	lw	a5,-24(s0)
20014fbe:	13c7a783          	lw	a5,316(a5)
20014fc2:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
20014fc6:	fe442783          	lw	a5,-28(s0)
20014fca:	c785                	beqz	a5,20014ff2 <__metal_driver_cpu_mtimecmp_set+0x66>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
20014fcc:	fe442783          	lw	a5,-28(s0)
20014fd0:	439c                	lw	a5,0(a5)
20014fd2:	4ba4                	lw	s1,80(a5)
20014fd4:	fdc42503          	lw	a0,-36(s0)
20014fd8:	869fe0ef          	jal	ra,20013840 <__metal_driver_cpu_hartid>
20014fdc:	87aa                	mv	a5,a0
20014fde:	fd042603          	lw	a2,-48(s0)
20014fe2:	fd442683          	lw	a3,-44(s0)
20014fe6:	85be                	mv	a1,a5
20014fe8:	fe442503          	lw	a0,-28(s0)
20014fec:	9482                	jalr	s1
20014fee:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
20014ff2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:685
}
20014ff6:	853e                	mv	a0,a5
20014ff8:	50b2                	lw	ra,44(sp)
20014ffa:	5422                	lw	s0,40(sp)
20014ffc:	5492                	lw	s1,36(sp)
20014ffe:	6145                	addi	sp,sp,48
20015000:	8082                	ret

20015002 <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
20015002:	1101                	addi	sp,sp,-32
20015004:	ce22                	sw	s0,28(sp)
20015006:	1000                	addi	s0,sp,32
20015008:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2001500c:	800017b7          	lui	a5,0x80001
20015010:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xffffe79c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20015014:	853e                	mv	a0,a5
20015016:	4472                	lw	s0,28(sp)
20015018:	6105                	addi	sp,sp,32
2001501a:	8082                	ret

2001501c <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
2001501c:	1101                	addi	sp,sp,-32
2001501e:	ce22                	sw	s0,28(sp)
20015020:	1000                	addi	s0,sp,32
20015022:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20015026:	479d                	li	a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:703
}
20015028:	853e                	mv	a0,a5
2001502a:	4472                	lw	s0,28(sp)
2001502c:	6105                	addi	sp,sp,32
2001502e:	8082                	ret

20015030 <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
20015030:	1101                	addi	sp,sp,-32
20015032:	ce22                	sw	s0,28(sp)
20015034:	1000                	addi	s0,sp,32
20015036:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
2001503a:	800017b7          	lui	a5,0x80001
2001503e:	aac78793          	addi	a5,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xffffe79c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
20015042:	853e                	mv	a0,a5
20015044:	4472                	lw	s0,28(sp)
20015046:	6105                	addi	sp,sp,32
20015048:	8082                	ret

2001504a <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
2001504a:	1101                	addi	sp,sp,-32
2001504c:	ce22                	sw	s0,28(sp)
2001504e:	1000                	addi	s0,sp,32
20015050:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20015054:	478d                	li	a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:721
}
20015056:	853e                	mv	a0,a5
20015058:	4472                	lw	s0,28(sp)
2001505a:	6105                	addi	sp,sp,32
2001505c:	8082                	ret

2001505e <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
2001505e:	7179                	addi	sp,sp,-48
20015060:	d606                	sw	ra,44(sp)
20015062:	d422                	sw	s0,40(sp)
20015064:	1800                	addi	s0,sp,48
20015066:	fca42e23          	sw	a0,-36(s0)
2001506a:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
2001506e:	57fd                	li	a5,-1
20015070:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20015074:	fdc42503          	lw	a0,-36(s0)
20015078:	817fe0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
2001507c:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
20015080:	fe842783          	lw	a5,-24(s0)
20015084:	c79d                	beqz	a5,200150b2 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20015086:	fe842783          	lw	a5,-24(s0)
2001508a:	0dc7a783          	lw	a5,220(a5)
2001508e:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
20015092:	fe442783          	lw	a5,-28(s0)
20015096:	cf91                	beqz	a5,200150b2 <__metal_driver_cpu_set_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20015098:	fe442783          	lw	a5,-28(s0)
2001509c:	439c                	lw	a5,0(a5)
2001509e:	47f8                	lw	a4,76(a5)
200150a0:	fd840793          	addi	a5,s0,-40
200150a4:	863e                	mv	a2,a5
200150a6:	458d                	li	a1,3
200150a8:	fe442503          	lw	a0,-28(s0)
200150ac:	9702                	jalr	a4
200150ae:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
200150b2:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:738
}
200150b6:	853e                	mv	a0,a5
200150b8:	50b2                	lw	ra,44(sp)
200150ba:	5422                	lw	s0,40(sp)
200150bc:	6145                	addi	sp,sp,48
200150be:	8082                	ret

200150c0 <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
200150c0:	7179                	addi	sp,sp,-48
200150c2:	d606                	sw	ra,44(sp)
200150c4:	d422                	sw	s0,40(sp)
200150c6:	1800                	addi	s0,sp,48
200150c8:	fca42e23          	sw	a0,-36(s0)
200150cc:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
200150d0:	57fd                	li	a5,-1
200150d2:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200150d6:	fdc42503          	lw	a0,-36(s0)
200150da:	fb4fe0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
200150de:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
200150e2:	fe842783          	lw	a5,-24(s0)
200150e6:	c79d                	beqz	a5,20015114 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
200150e8:	fe842783          	lw	a5,-24(s0)
200150ec:	0dc7a783          	lw	a5,220(a5)
200150f0:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
200150f4:	fe442783          	lw	a5,-28(s0)
200150f8:	cf91                	beqz	a5,20015114 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
200150fa:	fe442783          	lw	a5,-28(s0)
200150fe:	439c                	lw	a5,0(a5)
20015100:	47f8                	lw	a4,76(a5)
20015102:	fd840793          	addi	a5,s0,-40
20015106:	863e                	mv	a2,a5
20015108:	4589                	li	a1,2
2001510a:	fe442503          	lw	a0,-28(s0)
2001510e:	9702                	jalr	a4
20015110:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20015114:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:755
}
20015118:	853e                	mv	a0,a5
2001511a:	50b2                	lw	ra,44(sp)
2001511c:	5422                	lw	s0,40(sp)
2001511e:	6145                	addi	sp,sp,48
20015120:	8082                	ret

20015122 <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20015122:	7179                	addi	sp,sp,-48
20015124:	d606                	sw	ra,44(sp)
20015126:	d422                	sw	s0,40(sp)
20015128:	1800                	addi	s0,sp,48
2001512a:	fca42e23          	sw	a0,-36(s0)
2001512e:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20015132:	fe042623          	sw	zero,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20015136:	fdc42503          	lw	a0,-36(s0)
2001513a:	f54fe0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
2001513e:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20015142:	fe842783          	lw	a5,-24(s0)
20015146:	c79d                	beqz	a5,20015174 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20015148:	fe842783          	lw	a5,-24(s0)
2001514c:	0dc7a783          	lw	a5,220(a5)
20015150:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20015154:	fe442783          	lw	a5,-28(s0)
20015158:	cf91                	beqz	a5,20015174 <__metal_driver_cpu_get_msip+0x52>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
2001515a:	fe442783          	lw	a5,-28(s0)
2001515e:	439c                	lw	a5,0(a5)
20015160:	47f8                	lw	a4,76(a5)
20015162:	fd840793          	addi	a5,s0,-40
20015166:	863e                	mv	a2,a5
20015168:	4591                	li	a1,4
2001516a:	fe442503          	lw	a0,-28(s0)
2001516e:	9702                	jalr	a4
20015170:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20015174:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:772
}
20015178:	853e                	mv	a0,a5
2001517a:	50b2                	lw	ra,44(sp)
2001517c:	5422                	lw	s0,40(sp)
2001517e:	6145                	addi	sp,sp,48
20015180:	8082                	ret

20015182 <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20015182:	1101                	addi	sp,sp,-32
20015184:	ce06                	sw	ra,28(sp)
20015186:	cc22                	sw	s0,24(sp)
20015188:	1000                	addi	s0,sp,32
2001518a:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
2001518e:	fec42503          	lw	a0,-20(s0)
20015192:	efcfe0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
20015196:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:777
}
20015198:	853e                	mv	a0,a5
2001519a:	40f2                	lw	ra,28(sp)
2001519c:	4462                	lw	s0,24(sp)
2001519e:	6105                	addi	sp,sp,32
200151a0:	8082                	ret

200151a2 <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
200151a2:	7179                	addi	sp,sp,-48
200151a4:	d606                	sw	ra,44(sp)
200151a6:	d422                	sw	s0,40(sp)
200151a8:	1800                	addi	s0,sp,48
200151aa:	fca42e23          	sw	a0,-36(s0)
200151ae:	fcb42c23          	sw	a1,-40(s0)
200151b2:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
200151b6:	fdc42503          	lw	a0,-36(s0)
200151ba:	ed4fe0ef          	jal	ra,2001388e <__metal_driver_cpu_interrupt_controller>
200151be:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
200151c2:	fec42783          	lw	a5,-20(s0)
200151c6:	cb99                	beqz	a5,200151dc <__metal_driver_cpu_exception_register+0x3a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
200151c8:	fd442603          	lw	a2,-44(s0)
200151cc:	fd842583          	lw	a1,-40(s0)
200151d0:	fec42503          	lw	a0,-20(s0)
200151d4:	8a5ff0ef          	jal	ra,20014a78 <__metal_exception_register>
200151d8:	87aa                	mv	a5,a0
200151da:	a011                	j	200151de <__metal_driver_cpu_exception_register+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
200151dc:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:808
}
200151de:	853e                	mv	a0,a5
200151e0:	50b2                	lw	ra,44(sp)
200151e2:	5422                	lw	s0,40(sp)
200151e4:	6145                	addi	sp,sp,48
200151e6:	8082                	ret

200151e8 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
200151e8:	1101                	addi	sp,sp,-32
200151ea:	ce22                	sw	s0,28(sp)
200151ec:	1000                	addi	s0,sp,32
200151ee:	fea42623          	sw	a0,-20(s0)
200151f2:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
200151f6:	fe842783          	lw	a5,-24(s0)
200151fa:	0007d783          	lhu	a5,0(a5)
200151fe:	0037f713          	andi	a4,a5,3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20015202:	478d                	li	a5,3
20015204:	00f71463          	bne	a4,a5,2001520c <__metal_driver_cpu_get_instruction_length+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20015208:	4791                	li	a5,4
2001520a:	a011                	j	2001520e <__metal_driver_cpu_get_instruction_length+0x26>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
2001520c:	4789                	li	a5,2
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
2001520e:	853e                	mv	a0,a5
20015210:	4472                	lw	s0,28(sp)
20015212:	6105                	addi	sp,sp,32
20015214:	8082                	ret

20015216 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20015216:	7179                	addi	sp,sp,-48
20015218:	d622                	sw	s0,44(sp)
2001521a:	1800                	addi	s0,sp,48
2001521c:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20015220:	341027f3          	csrr	a5,mepc
20015224:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20015228:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:827
}
2001522c:	853e                	mv	a0,a5
2001522e:	5432                	lw	s0,44(sp)
20015230:	6145                	addi	sp,sp,48
20015232:	8082                	ret

20015234 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20015234:	1101                	addi	sp,sp,-32
20015236:	ce22                	sw	s0,28(sp)
20015238:	1000                	addi	s0,sp,32
2001523a:	fea42623          	sw	a0,-20(s0)
2001523e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20015242:	fe842783          	lw	a5,-24(s0)
20015246:	34179073          	csrw	mepc,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
2001524a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:832
}
2001524c:	853e                	mv	a0,a5
2001524e:	4472                	lw	s0,28(sp)
20015250:	6105                	addi	sp,sp,32
20015252:	8082                	ret

20015254 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20015254:	1101                	addi	sp,sp,-32
20015256:	ce06                	sw	ra,28(sp)
20015258:	cc22                	sw	s0,24(sp)
2001525a:	1000                	addi	s0,sp,32
2001525c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20015260:	fec42503          	lw	a0,-20(s0)
20015264:	e54fe0ef          	jal	ra,200138b8 <__metal_driver_cpu_buserror>
20015268:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_cpu.c:836
}
2001526a:	853e                	mv	a0,a5
2001526c:	40f2                	lw	ra,28(sp)
2001526e:	4462                	lw	s0,24(sp)
20015270:	6105                	addi	sp,sp,32
20015272:	8082                	ret

20015274 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:345



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20015274:	1101                	addi	sp,sp,-32
20015276:	ce22                	sw	s0,28(sp)
20015278:	1000                	addi	s0,sp,32
2001527a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:346
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
2001527e:	fec42703          	lw	a4,-20(s0)
20015282:	800007b7          	lui	a5,0x80000
20015286:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffe150>
2001528a:	00f71563          	bne	a4,a5,20015294 <__metal_driver_sifive_plic0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:347
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
2001528e:	0c0007b7          	lui	a5,0xc000
20015292:	a011                	j	20015296 <__metal_driver_sifive_plic0_control_base+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:350
	}
	else {
		return 0;
20015294:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:352
	}
}
20015296:	853e                	mv	a0,a5
20015298:	4472                	lw	s0,28(sp)
2001529a:	6105                	addi	sp,sp,32
2001529c:	8082                	ret

2001529e <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:365
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
2001529e:	1101                	addi	sp,sp,-32
200152a0:	ce22                	sw	s0,28(sp)
200152a2:	1000                	addi	s0,sp,32
200152a4:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:366
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200152a8:	fec42703          	lw	a4,-20(s0)
200152ac:	800007b7          	lui	a5,0x80000
200152b0:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffe150>
200152b4:	00f71563          	bne	a4,a5,200152be <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:367
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
200152b8:	03500793          	li	a5,53
200152bc:	a011                	j	200152c0 <__metal_driver_sifive_plic0_num_interrupts+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:370
	}
	else {
		return 0;
200152be:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:372
	}
}
200152c0:	853e                	mv	a0,a5
200152c2:	4472                	lw	s0,28(sp)
200152c4:	6105                	addi	sp,sp,32
200152c6:	8082                	ret

200152c8 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:375

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
200152c8:	1101                	addi	sp,sp,-32
200152ca:	ce22                	sw	s0,28(sp)
200152cc:	1000                	addi	s0,sp,32
200152ce:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:376
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
200152d2:	fec42703          	lw	a4,-20(s0)
200152d6:	800007b7          	lui	a5,0x80000
200152da:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffe150>
200152de:	00f71463          	bne	a4,a5,200152e6 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:377
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
200152e2:	479d                	li	a5,7
200152e4:	a011                	j	200152e8 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:380
	}
	else {
		return 0;
200152e6:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:382
	}
}
200152e8:	853e                	mv	a0,a5
200152ea:	4472                	lw	s0,28(sp)
200152ec:	6105                	addi	sp,sp,32
200152ee:	8082                	ret

200152f0 <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:385

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
200152f0:	1101                	addi	sp,sp,-32
200152f2:	ce22                	sw	s0,28(sp)
200152f4:	1000                	addi	s0,sp,32
200152f6:	fea42623          	sw	a0,-20(s0)
200152fa:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:386
	if (idx == 0) {
200152fe:	fe842783          	lw	a5,-24(s0)
20015302:	e791                	bnez	a5,2001530e <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:387
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20015304:	800007b7          	lui	a5,0x80000
20015308:	09078793          	addi	a5,a5,144 # 80000090 <metal_segment_heap_target_end+0xffffdd80>
2001530c:	a011                	j	20015310 <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:390
	}
	else {
		return NULL;
2001530e:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:392
	}
}
20015310:	853e                	mv	a0,a5
20015312:	4472                	lw	s0,28(sp)
20015314:	6105                	addi	sp,sp,32
20015316:	8082                	ret

20015318 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:395

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20015318:	1101                	addi	sp,sp,-32
2001531a:	ce22                	sw	s0,28(sp)
2001531c:	1000                	addi	s0,sp,32
2001531e:	fea42623          	sw	a0,-20(s0)
20015322:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:396
	if (idx == 0) {
20015326:	fe842783          	lw	a5,-24(s0)
2001532a:	e399                	bnez	a5,20015330 <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:397
		return 11;
2001532c:	47ad                	li	a5,11
2001532e:	a011                	j	20015332 <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:400
	}
	else {
		return 0;
20015330:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:402
	}
}
20015332:	853e                	mv	a0,a5
20015334:	4472                	lw	s0,28(sp)
20015336:	6105                	addi	sp,sp,32
20015338:	8082                	ret

2001533a <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:405

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
2001533a:	1101                	addi	sp,sp,-32
2001533c:	ce22                	sw	s0,28(sp)
2001533e:	1000                	addi	s0,sp,32
20015340:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:406
	if (hartid == 0) {
20015344:	fec42783          	lw	a5,-20(s0)
20015348:	e399                	bnez	a5,2001534e <__metal_driver_sifive_plic0_context_ids+0x14>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:407
		return 0;
2001534a:	4781                	li	a5,0
2001534c:	a011                	j	20015350 <__metal_driver_sifive_plic0_context_ids+0x16>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:410
	}
	else {
		return -1;
2001534e:	57fd                	li	a5,-1
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:412
	}
}
20015350:	853e                	mv	a0,a5
20015352:	4472                	lw	s0,28(sp)
20015354:	6105                	addi	sp,sp,32
20015356:	8082                	ret

20015358 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20015358:	7179                	addi	sp,sp,-48
2001535a:	d606                	sw	ra,44(sp)
2001535c:	d422                	sw	s0,40(sp)
2001535e:	1800                	addi	s0,sp,48
20015360:	fca42e23          	sw	a0,-36(s0)
20015364:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20015368:	fdc42503          	lw	a0,-36(s0)
2001536c:	3721                	jal	20015274 <__metal_driver_sifive_plic0_control_base>
2001536e:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20015372:	fd842783          	lw	a5,-40(s0)
20015376:	00c79713          	slli	a4,a5,0xc
2001537a:	fec42783          	lw	a5,-20(s0)
2001537e:	973e                	add	a4,a4,a5
20015380:	002007b7          	lui	a5,0x200
20015384:	0791                	addi	a5,a5,4
20015386:	97ba                	add	a5,a5,a4
20015388:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
2001538a:	853e                	mv	a0,a5
2001538c:	50b2                	lw	ra,44(sp)
2001538e:	5422                	lw	s0,40(sp)
20015390:	6145                	addi	sp,sp,48
20015392:	8082                	ret

20015394 <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20015394:	7179                	addi	sp,sp,-48
20015396:	d606                	sw	ra,44(sp)
20015398:	d422                	sw	s0,40(sp)
2001539a:	1800                	addi	s0,sp,48
2001539c:	fca42e23          	sw	a0,-36(s0)
200153a0:	fcb42c23          	sw	a1,-40(s0)
200153a4:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
200153a8:	fdc42503          	lw	a0,-36(s0)
200153ac:	35e1                	jal	20015274 <__metal_driver_sifive_plic0_control_base>
200153ae:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
200153b2:	fd842783          	lw	a5,-40(s0)
200153b6:	00c79713          	slli	a4,a5,0xc
200153ba:	fec42783          	lw	a5,-20(s0)
200153be:	973e                	add	a4,a4,a5
200153c0:	002007b7          	lui	a5,0x200
200153c4:	0791                	addi	a5,a5,4
200153c6:	97ba                	add	a5,a5,a4
200153c8:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
200153ca:	fd442783          	lw	a5,-44(s0)
200153ce:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:35
}
200153d0:	0001                	nop
200153d2:	50b2                	lw	ra,44(sp)
200153d4:	5422                	lw	s0,40(sp)
200153d6:	6145                	addi	sp,sp,48
200153d8:	8082                	ret

200153da <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
200153da:	7179                	addi	sp,sp,-48
200153dc:	d606                	sw	ra,44(sp)
200153de:	d422                	sw	s0,40(sp)
200153e0:	1800                	addi	s0,sp,48
200153e2:	fca42e23          	sw	a0,-36(s0)
200153e6:	fcb42c23          	sw	a1,-40(s0)
200153ea:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
200153ee:	fdc42503          	lw	a0,-36(s0)
200153f2:	3549                	jal	20015274 <__metal_driver_sifive_plic0_control_base>
200153f4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
200153f8:	fd842783          	lw	a5,-40(s0)
200153fc:	00c79713          	slli	a4,a5,0xc
20015400:	fec42783          	lw	a5,-20(s0)
20015404:	973e                	add	a4,a4,a5
20015406:	002007b7          	lui	a5,0x200
2001540a:	97ba                	add	a5,a5,a4
2001540c:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
2001540e:	fd442783          	lw	a5,-44(s0)
20015412:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20015414:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:46
}
20015416:	853e                	mv	a0,a5
20015418:	50b2                	lw	ra,44(sp)
2001541a:	5422                	lw	s0,40(sp)
2001541c:	6145                	addi	sp,sp,48
2001541e:	8082                	ret

20015420 <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20015420:	7179                	addi	sp,sp,-48
20015422:	d606                	sw	ra,44(sp)
20015424:	d422                	sw	s0,40(sp)
20015426:	1800                	addi	s0,sp,48
20015428:	fca42e23          	sw	a0,-36(s0)
2001542c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20015430:	fdc42503          	lw	a0,-36(s0)
20015434:	3581                	jal	20015274 <__metal_driver_sifive_plic0_control_base>
20015436:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
2001543a:	fd842783          	lw	a5,-40(s0)
2001543e:	00c79713          	slli	a4,a5,0xc
20015442:	fec42783          	lw	a5,-20(s0)
20015446:	973e                	add	a4,a4,a5
20015448:	002007b7          	lui	a5,0x200
2001544c:	97ba                	add	a5,a5,a4
2001544e:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20015450:	853e                	mv	a0,a5
20015452:	50b2                	lw	ra,44(sp)
20015454:	5422                	lw	s0,40(sp)
20015456:	6145                	addi	sp,sp,48
20015458:	8082                	ret

2001545a <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
2001545a:	7179                	addi	sp,sp,-48
2001545c:	d606                	sw	ra,44(sp)
2001545e:	d422                	sw	s0,40(sp)
20015460:	1800                	addi	s0,sp,48
20015462:	fca42e23          	sw	a0,-36(s0)
20015466:	fcb42c23          	sw	a1,-40(s0)
2001546a:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
2001546e:	fdc42503          	lw	a0,-36(s0)
20015472:	3509                	jal	20015274 <__metal_driver_sifive_plic0_control_base>
20015474:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20015478:	fdc42503          	lw	a0,-36(s0)
2001547c:	35b1                	jal	200152c8 <__metal_driver_sifive_plic0_max_priority>
2001547e:	87aa                	mv	a5,a0
20015480:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20015484:	fe842783          	lw	a5,-24(s0)
20015488:	c785                	beqz	a5,200154b0 <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
2001548a:	fd442703          	lw	a4,-44(s0)
2001548e:	fe842783          	lw	a5,-24(s0)
20015492:	00f77f63          	bgeu	a4,a5,200154b0 <__metal_driver_riscv_plic0_set_priority+0x56>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20015496:	fd842783          	lw	a5,-40(s0)
2001549a:	078a                	slli	a5,a5,0x2
2001549c:	873e                	mv	a4,a5
2001549e:	fec42783          	lw	a5,-20(s0)
200154a2:	97ba                	add	a5,a5,a4
200154a4:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
200154a6:	fd442783          	lw	a5,-44(s0)
200154aa:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
200154ac:	4781                	li	a5,0
200154ae:	a011                	j	200154b2 <__metal_driver_riscv_plic0_set_priority+0x58>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
200154b0:	57fd                	li	a5,-1
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:72
}
200154b2:	853e                	mv	a0,a5
200154b4:	50b2                	lw	ra,44(sp)
200154b6:	5422                	lw	s0,40(sp)
200154b8:	6145                	addi	sp,sp,48
200154ba:	8082                	ret

200154bc <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
200154bc:	7179                	addi	sp,sp,-48
200154be:	d606                	sw	ra,44(sp)
200154c0:	d422                	sw	s0,40(sp)
200154c2:	1800                	addi	s0,sp,48
200154c4:	fca42e23          	sw	a0,-36(s0)
200154c8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
200154cc:	fdc42503          	lw	a0,-36(s0)
200154d0:	3355                	jal	20015274 <__metal_driver_sifive_plic0_control_base>
200154d2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
200154d6:	fd842783          	lw	a5,-40(s0)
200154da:	078a                	slli	a5,a5,0x2
200154dc:	873e                	mv	a4,a5
200154de:	fec42783          	lw	a5,-20(s0)
200154e2:	97ba                	add	a5,a5,a4
200154e4:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
200154e6:	853e                	mv	a0,a5
200154e8:	50b2                	lw	ra,44(sp)
200154ea:	5422                	lw	s0,40(sp)
200154ec:	6145                	addi	sp,sp,48
200154ee:	8082                	ret

200154f0 <__metal_plic0_enable>:
__metal_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
200154f0:	7179                	addi	sp,sp,-48
200154f2:	d606                	sw	ra,44(sp)
200154f4:	d422                	sw	s0,40(sp)
200154f6:	1800                	addi	s0,sp,48
200154f8:	fca42e23          	sw	a0,-36(s0)
200154fc:	fcb42c23          	sw	a1,-40(s0)
20015500:	fcc42a23          	sw	a2,-44(s0)
20015504:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20015508:	fdc42503          	lw	a0,-36(s0)
2001550c:	d69ff0ef          	jal	ra,20015274 <__metal_driver_sifive_plic0_control_base>
20015510:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20015514:	fd842783          	lw	a5,-40(s0)
20015518:	00779713          	slli	a4,a5,0x7
2001551c:	fec42783          	lw	a5,-20(s0)
20015520:	97ba                	add	a5,a5,a4
20015522:	fd442703          	lw	a4,-44(s0)
20015526:	8715                	srai	a4,a4,0x5
20015528:	070a                	slli	a4,a4,0x2
2001552a:	973e                	add	a4,a4,a5
2001552c:	6789                	lui	a5,0x2
2001552e:	97ba                	add	a5,a5,a4
20015530:	439c                	lw	a5,0(a5)
20015532:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20015536:	fd042783          	lw	a5,-48(s0)
2001553a:	cf81                	beqz	a5,20015552 <__metal_plic0_enable+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
2001553c:	fd442783          	lw	a5,-44(s0)
20015540:	8bfd                	andi	a5,a5,31
20015542:	4705                	li	a4,1
20015544:	00f717b3          	sll	a5,a4,a5
20015548:	873e                	mv	a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
2001554a:	fe842783          	lw	a5,-24(s0)
2001554e:	8fd9                	or	a5,a5,a4
20015550:	a829                	j	2001556a <__metal_plic0_enable+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20015552:	fd442783          	lw	a5,-44(s0)
20015556:	8bfd                	andi	a5,a5,31
20015558:	4705                	li	a4,1
2001555a:	00f717b3          	sll	a5,a4,a5
2001555e:	fff7c793          	not	a5,a5
20015562:	873e                	mv	a4,a5
20015564:	fe842783          	lw	a5,-24(s0)
20015568:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
2001556a:	fd842703          	lw	a4,-40(s0)
2001556e:	00771693          	slli	a3,a4,0x7
20015572:	fec42703          	lw	a4,-20(s0)
20015576:	9736                	add	a4,a4,a3
20015578:	fd442683          	lw	a3,-44(s0)
2001557c:	8695                	srai	a3,a3,0x5
2001557e:	068a                	slli	a3,a3,0x2
20015580:	96ba                	add	a3,a3,a4
20015582:	6709                	lui	a4,0x2
20015584:	9736                	add	a4,a4,a3
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20015586:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20015588:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:103
}
2001558a:	853e                	mv	a0,a5
2001558c:	50b2                	lw	ra,44(sp)
2001558e:	5422                	lw	s0,40(sp)
20015590:	6145                	addi	sp,sp,48
20015592:	8082                	ret

20015594 <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20015594:	1101                	addi	sp,sp,-32
20015596:	ce06                	sw	ra,28(sp)
20015598:	cc22                	sw	s0,24(sp)
2001559a:	1000                	addi	s0,sp,32
2001559c:	fea42623          	sw	a0,-20(s0)
200155a0:	feb42423          	sw	a1,-24(s0)
200155a4:	12c00513          	li	a0,300
200155a8:	1fc020ef          	jal	ra,200177a4 <metal_shutdown>

200155ac <__metal_plic0_handler>:
__metal_plic0_handler():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
200155ac:	7179                	addi	sp,sp,-48
200155ae:	d606                	sw	ra,44(sp)
200155b0:	d422                	sw	s0,40(sp)
200155b2:	1800                	addi	s0,sp,48
200155b4:	fca42e23          	sw	a0,-36(s0)
200155b8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
200155bc:	fd842783          	lw	a5,-40(s0)
200155c0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
200155c4:	b48fe0ef          	jal	ra,2001390c <__metal_myhart_id>
200155c8:	87aa                	mv	a5,a0
200155ca:	853e                	mv	a0,a5
200155cc:	d6fff0ef          	jal	ra,2001533a <__metal_driver_sifive_plic0_context_ids>
200155d0:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
200155d4:	fe842583          	lw	a1,-24(s0)
200155d8:	fec42503          	lw	a0,-20(s0)
200155dc:	d7dff0ef          	jal	ra,20015358 <__metal_plic0_claim_interrupt>
200155e0:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
200155e4:	fec42503          	lw	a0,-20(s0)
200155e8:	cb7ff0ef          	jal	ra,2001529e <__metal_driver_sifive_plic0_num_interrupts>
200155ec:	87aa                	mv	a5,a0
200155ee:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
200155f2:	fe442703          	lw	a4,-28(s0)
200155f6:	fe042783          	lw	a5,-32(s0)
200155fa:	04f77263          	bgeu	a4,a5,2001563e <__metal_plic0_handler+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
200155fe:	fec42703          	lw	a4,-20(s0)
20015602:	fe442783          	lw	a5,-28(s0)
20015606:	078a                	slli	a5,a5,0x2
20015608:	97ba                	add	a5,a5,a4
2001560a:	479c                	lw	a5,8(a5)
2001560c:	cb8d                	beqz	a5,2001563e <__metal_plic0_handler+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
2001560e:	fec42703          	lw	a4,-20(s0)
20015612:	fe442783          	lw	a5,-28(s0)
20015616:	078a                	slli	a5,a5,0x2
20015618:	97ba                	add	a5,a5,a4
2001561a:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
2001561e:	fe442603          	lw	a2,-28(s0)
20015622:	fec42683          	lw	a3,-20(s0)
20015626:	fe442703          	lw	a4,-28(s0)
2001562a:	87ba                	mv	a5,a4
2001562c:	0786                	slli	a5,a5,0x1
2001562e:	97ba                	add	a5,a5,a4
20015630:	078e                	slli	a5,a5,0x3
20015632:	97b6                	add	a5,a5,a3
20015634:	0f07a783          	lw	a5,240(a5)
20015638:	85be                	mv	a1,a5
2001563a:	8532                	mv	a0,a2
2001563c:	9802                	jalr	a6
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
2001563e:	fe442603          	lw	a2,-28(s0)
20015642:	fe842583          	lw	a1,-24(s0)
20015646:	fec42503          	lw	a0,-20(s0)
2001564a:	d4bff0ef          	jal	ra,20015394 <__metal_plic0_complete_interrupt>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:121
}
2001564e:	0001                	nop
20015650:	50b2                	lw	ra,44(sp)
20015652:	5422                	lw	s0,40(sp)
20015654:	6145                	addi	sp,sp,48
20015656:	8082                	ret

20015658 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20015658:	7139                	addi	sp,sp,-64
2001565a:	de06                	sw	ra,60(sp)
2001565c:	dc22                	sw	s0,56(sp)
2001565e:	0080                	addi	s0,sp,64
20015660:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015664:	fcc42783          	lw	a5,-52(s0)
20015668:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
2001566c:	fe442783          	lw	a5,-28(s0)
20015670:	43dc                	lw	a5,4(a5)
20015672:	12079b63          	bnez	a5,200157a8 <__metal_driver_riscv_plic0_init+0x150>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20015676:	fe042623          	sw	zero,-20(s0)
2001567a:	aa39                	j	20015798 <__metal_driver_riscv_plic0_init+0x140>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
2001567c:	fcc42503          	lw	a0,-52(s0)
20015680:	c1fff0ef          	jal	ra,2001529e <__metal_driver_sifive_plic0_num_interrupts>
20015684:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20015688:	fec42583          	lw	a1,-20(s0)
2001568c:	fcc42503          	lw	a0,-52(s0)
20015690:	c61ff0ef          	jal	ra,200152f0 <__metal_driver_sifive_plic0_interrupt_parents>
20015694:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20015698:	fec42583          	lw	a1,-20(s0)
2001569c:	fcc42503          	lw	a0,-52(s0)
200156a0:	c79ff0ef          	jal	ra,20015318 <__metal_driver_sifive_plic0_interrupt_lines>
200156a4:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
200156a8:	fdc42783          	lw	a5,-36(s0)
200156ac:	439c                	lw	a5,0(a5)
200156ae:	439c                	lw	a5,0(a5)
200156b0:	fdc42503          	lw	a0,-36(s0)
200156b4:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
200156b6:	fe042423          	sw	zero,-24(s0)
200156ba:	a88d                	j	2001572c <__metal_driver_riscv_plic0_init+0xd4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
200156bc:	4681                	li	a3,0
200156be:	fe842603          	lw	a2,-24(s0)
200156c2:	fec42583          	lw	a1,-20(s0)
200156c6:	fe442503          	lw	a0,-28(s0)
200156ca:	351d                	jal	200154f0 <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
200156cc:	fe842703          	lw	a4,-24(s0)
200156d0:	fe042783          	lw	a5,-32(s0)
200156d4:	04f75763          	bge	a4,a5,20015722 <__metal_driver_riscv_plic0_init+0xca>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
200156d8:	4601                	li	a2,0
200156da:	fe842583          	lw	a1,-24(s0)
200156de:	fcc42503          	lw	a0,-52(s0)
200156e2:	d79ff0ef          	jal	ra,2001545a <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
200156e6:	fe442703          	lw	a4,-28(s0)
200156ea:	fe842783          	lw	a5,-24(s0)
200156ee:	078a                	slli	a5,a5,0x2
200156f0:	97ba                	add	a5,a5,a4
200156f2:	0007a423          	sw	zero,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
200156f6:	fe442683          	lw	a3,-28(s0)
200156fa:	fe842703          	lw	a4,-24(s0)
200156fe:	87ba                	mv	a5,a4
20015700:	0786                	slli	a5,a5,0x1
20015702:	97ba                	add	a5,a5,a4
20015704:	078e                	slli	a5,a5,0x3
20015706:	97b6                	add	a5,a5,a3
20015708:	0e07a623          	sw	zero,236(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
2001570c:	fe442683          	lw	a3,-28(s0)
20015710:	fe842703          	lw	a4,-24(s0)
20015714:	87ba                	mv	a5,a4
20015716:	0786                	slli	a5,a5,0x1
20015718:	97ba                	add	a5,a5,a4
2001571a:	078e                	slli	a5,a5,0x3
2001571c:	97b6                	add	a5,a5,a3
2001571e:	0e07a823          	sw	zero,240(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20015722:	fe842783          	lw	a5,-24(s0)
20015726:	0785                	addi	a5,a5,1
20015728:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2001572c:	fe842703          	lw	a4,-24(s0)
20015730:	3ff00793          	li	a5,1023
20015734:	f8e7d4e3          	bge	a5,a4,200156bc <__metal_driver_riscv_plic0_init+0x64>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20015738:	4601                	li	a2,0
2001573a:	fec42583          	lw	a1,-20(s0)
2001573e:	fcc42503          	lw	a0,-52(s0)
20015742:	c99ff0ef          	jal	ra,200153da <__metal_plic0_set_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20015746:	fdc42783          	lw	a5,-36(s0)
2001574a:	439c                	lw	a5,0(a5)
2001574c:	4fdc                	lw	a5,28(a5)
2001574e:	fe442683          	lw	a3,-28(s0)
20015752:	4601                	li	a2,0
20015754:	fd842583          	lw	a1,-40(s0)
20015758:	fdc42503          	lw	a0,-36(s0)
2001575c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
2001575e:	fdc42783          	lw	a5,-36(s0)
20015762:	439c                	lw	a5,0(a5)
20015764:	4fd8                	lw	a4,28(a5)
20015766:	fe442683          	lw	a3,-28(s0)
2001576a:	200157b7          	lui	a5,0x20015
2001576e:	5ac78613          	addi	a2,a5,1452 # 200155ac <__metal_plic0_handler>
20015772:	fd842583          	lw	a1,-40(s0)
20015776:	fdc42503          	lw	a0,-36(s0)
2001577a:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
2001577c:	fdc42783          	lw	a5,-36(s0)
20015780:	439c                	lw	a5,0(a5)
20015782:	53dc                	lw	a5,36(a5)
20015784:	fd842583          	lw	a1,-40(s0)
20015788:	fdc42503          	lw	a0,-36(s0)
2001578c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2001578e:	fec42783          	lw	a5,-20(s0)
20015792:	0785                	addi	a5,a5,1
20015794:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20015798:	fec42783          	lw	a5,-20(s0)
2001579c:	eef050e3          	blez	a5,2001567c <__metal_driver_riscv_plic0_init+0x24>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
200157a0:	fe442783          	lw	a5,-28(s0)
200157a4:	4705                	li	a4,1
200157a6:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
200157a8:	0001                	nop
200157aa:	50f2                	lw	ra,60(sp)
200157ac:	5462                	lw	s0,56(sp)
200157ae:	6121                	addi	sp,sp,64
200157b0:	8082                	ret

200157b2 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
200157b2:	7179                	addi	sp,sp,-48
200157b4:	d606                	sw	ra,44(sp)
200157b6:	d422                	sw	s0,40(sp)
200157b8:	1800                	addi	s0,sp,48
200157ba:	fca42e23          	sw	a0,-36(s0)
200157be:	fcb42c23          	sw	a1,-40(s0)
200157c2:	fcc42a23          	sw	a2,-44(s0)
200157c6:	fcd42823          	sw	a3,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200157ca:	fdc42783          	lw	a5,-36(s0)
200157ce:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
200157d2:	fdc42503          	lw	a0,-36(s0)
200157d6:	ac9ff0ef          	jal	ra,2001529e <__metal_driver_sifive_plic0_num_interrupts>
200157da:	872a                	mv	a4,a0
200157dc:	fd842783          	lw	a5,-40(s0)
200157e0:	00e7c463          	blt	a5,a4,200157e8 <__metal_driver_riscv_plic0_register+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
200157e4:	57fd                	li	a5,-1
200157e6:	a051                	j	2001586a <__metal_driver_riscv_plic0_register+0xb8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
200157e8:	fd442783          	lw	a5,-44(s0)
200157ec:	cf9d                	beqz	a5,2001582a <__metal_driver_riscv_plic0_register+0x78>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
200157ee:	4609                	li	a2,2
200157f0:	fd842583          	lw	a1,-40(s0)
200157f4:	fdc42503          	lw	a0,-36(s0)
200157f8:	c63ff0ef          	jal	ra,2001545a <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
200157fc:	fec42703          	lw	a4,-20(s0)
20015800:	fd842783          	lw	a5,-40(s0)
20015804:	078a                	slli	a5,a5,0x2
20015806:	97ba                	add	a5,a5,a4
20015808:	fd442703          	lw	a4,-44(s0)
2001580c:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
2001580e:	fec42683          	lw	a3,-20(s0)
20015812:	fd842703          	lw	a4,-40(s0)
20015816:	87ba                	mv	a5,a4
20015818:	0786                	slli	a5,a5,0x1
2001581a:	97ba                	add	a5,a5,a4
2001581c:	078e                	slli	a5,a5,0x3
2001581e:	97b6                	add	a5,a5,a3
20015820:	fd042703          	lw	a4,-48(s0)
20015824:	0ee7a823          	sw	a4,240(a5)
20015828:	a081                	j	20015868 <__metal_driver_riscv_plic0_register+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
2001582a:	4605                	li	a2,1
2001582c:	fd842583          	lw	a1,-40(s0)
20015830:	fdc42503          	lw	a0,-36(s0)
20015834:	c27ff0ef          	jal	ra,2001545a <__metal_driver_riscv_plic0_set_priority>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20015838:	fec42703          	lw	a4,-20(s0)
2001583c:	fd842783          	lw	a5,-40(s0)
20015840:	078a                	slli	a5,a5,0x2
20015842:	97ba                	add	a5,a5,a4
20015844:	20015737          	lui	a4,0x20015
20015848:	59470713          	addi	a4,a4,1428 # 20015594 <__metal_plic0_default_handler>
2001584c:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
2001584e:	fec42683          	lw	a3,-20(s0)
20015852:	fd842703          	lw	a4,-40(s0)
20015856:	87ba                	mv	a5,a4
20015858:	0786                	slli	a5,a5,0x1
2001585a:	97ba                	add	a5,a5,a4
2001585c:	078e                	slli	a5,a5,0x3
2001585e:	97b6                	add	a5,a5,a3
20015860:	fd042703          	lw	a4,-48(s0)
20015864:	0ee7a623          	sw	a4,236(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20015868:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:185
}
2001586a:	853e                	mv	a0,a5
2001586c:	50b2                	lw	ra,44(sp)
2001586e:	5422                	lw	s0,40(sp)
20015870:	6145                	addi	sp,sp,48
20015872:	8082                	ret

20015874 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20015874:	7179                	addi	sp,sp,-48
20015876:	d606                	sw	ra,44(sp)
20015878:	d422                	sw	s0,40(sp)
2001587a:	1800                	addi	s0,sp,48
2001587c:	fca42e23          	sw	a0,-36(s0)
20015880:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015884:	fdc42783          	lw	a5,-36(s0)
20015888:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2001588c:	fdc42503          	lw	a0,-36(s0)
20015890:	a0fff0ef          	jal	ra,2001529e <__metal_driver_sifive_plic0_num_interrupts>
20015894:	872a                	mv	a4,a0
20015896:	fd842783          	lw	a5,-40(s0)
2001589a:	00e7c463          	blt	a5,a4,200158a2 <__metal_driver_riscv_plic0_enable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2001589e:	57fd                	li	a5,-1
200158a0:	a829                	j	200158ba <__metal_driver_riscv_plic0_enable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
200158a2:	86afe0ef          	jal	ra,2001390c <__metal_myhart_id>
200158a6:	87aa                	mv	a5,a0
200158a8:	4685                	li	a3,1
200158aa:	fd842603          	lw	a2,-40(s0)
200158ae:	85be                	mv	a1,a5
200158b0:	fec42503          	lw	a0,-20(s0)
200158b4:	c3dff0ef          	jal	ra,200154f0 <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
200158b8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:197
}
200158ba:	853e                	mv	a0,a5
200158bc:	50b2                	lw	ra,44(sp)
200158be:	5422                	lw	s0,40(sp)
200158c0:	6145                	addi	sp,sp,48
200158c2:	8082                	ret

200158c4 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
200158c4:	7179                	addi	sp,sp,-48
200158c6:	d606                	sw	ra,44(sp)
200158c8:	d422                	sw	s0,40(sp)
200158ca:	1800                	addi	s0,sp,48
200158cc:	fca42e23          	sw	a0,-36(s0)
200158d0:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
200158d4:	fdc42783          	lw	a5,-36(s0)
200158d8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
200158dc:	fdc42503          	lw	a0,-36(s0)
200158e0:	9bfff0ef          	jal	ra,2001529e <__metal_driver_sifive_plic0_num_interrupts>
200158e4:	872a                	mv	a4,a0
200158e6:	fd842783          	lw	a5,-40(s0)
200158ea:	00e7c463          	blt	a5,a4,200158f2 <__metal_driver_riscv_plic0_disable+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
200158ee:	57fd                	li	a5,-1
200158f0:	a829                	j	2001590a <__metal_driver_riscv_plic0_disable+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
200158f2:	81afe0ef          	jal	ra,2001390c <__metal_myhart_id>
200158f6:	87aa                	mv	a5,a0
200158f8:	4681                	li	a3,0
200158fa:	fd842603          	lw	a2,-40(s0)
200158fe:	85be                	mv	a1,a5
20015900:	fec42503          	lw	a0,-20(s0)
20015904:	bedff0ef          	jal	ra,200154f0 <__metal_plic0_enable>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
20015908:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:208
}
2001590a:	853e                	mv	a0,a5
2001590c:	50b2                	lw	ra,44(sp)
2001590e:	5422                	lw	s0,40(sp)
20015910:	6145                	addi	sp,sp,48
20015912:	8082                	ret

20015914 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20015914:	1101                	addi	sp,sp,-32
20015916:	ce06                	sw	ra,28(sp)
20015918:	cc22                	sw	s0,24(sp)
2001591a:	1000                	addi	s0,sp,32
2001591c:	fea42623          	sw	a0,-20(s0)
20015920:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20015924:	fe9fd0ef          	jal	ra,2001390c <__metal_myhart_id>
20015928:	87aa                	mv	a5,a0
2001592a:	fe842603          	lw	a2,-24(s0)
2001592e:	85be                	mv	a1,a5
20015930:	fec42503          	lw	a0,-20(s0)
20015934:	aa7ff0ef          	jal	ra,200153da <__metal_plic0_set_threshold>
20015938:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
2001593a:	853e                	mv	a0,a5
2001593c:	40f2                	lw	ra,28(sp)
2001593e:	4462                	lw	s0,24(sp)
20015940:	6105                	addi	sp,sp,32
20015942:	8082                	ret

20015944 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20015944:	1101                	addi	sp,sp,-32
20015946:	ce06                	sw	ra,28(sp)
20015948:	cc22                	sw	s0,24(sp)
2001594a:	1000                	addi	s0,sp,32
2001594c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
20015950:	fbdfd0ef          	jal	ra,2001390c <__metal_myhart_id>
20015954:	87aa                	mv	a5,a0
20015956:	85be                	mv	a1,a5
20015958:	fec42503          	lw	a0,-20(s0)
2001595c:	ac5ff0ef          	jal	ra,20015420 <__metal_plic0_get_threshold>
20015960:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:219
}
20015962:	853e                	mv	a0,a5
20015964:	40f2                	lw	ra,28(sp)
20015966:	4462                	lw	s0,24(sp)
20015968:	6105                	addi	sp,sp,32
2001596a:	8082                	ret

2001596c <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
2001596c:	7179                	addi	sp,sp,-48
2001596e:	d606                	sw	ra,44(sp)
20015970:	d422                	sw	s0,40(sp)
20015972:	1800                	addi	s0,sp,48
20015974:	fca42e23          	sw	a0,-36(s0)
20015978:	fcb42c23          	sw	a1,-40(s0)
2001597c:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
20015980:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015984:	fdc42783          	lw	a5,-36(s0)
20015988:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2001598c:	fdc42503          	lw	a0,-36(s0)
20015990:	90fff0ef          	jal	ra,2001529e <__metal_driver_sifive_plic0_num_interrupts>
20015994:	872a                	mv	a4,a0
20015996:	fd442783          	lw	a5,-44(s0)
2001599a:	00e7c863          	blt	a5,a4,200159aa <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2001599e:	57fd                	li	a5,-1
200159a0:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
200159a4:	fe442783          	lw	a5,-28(s0)
200159a8:	a899                	j	200159fe <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
200159aa:	fe042623          	sw	zero,-20(s0)
200159ae:	a099                	j	200159f4 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
200159b0:	fec42783          	lw	a5,-20(s0)
200159b4:	c795                	beqz	a5,200159e0 <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
200159b6:	4685                	li	a3,1
200159b8:	fd442603          	lw	a2,-44(s0)
200159bc:	fec42583          	lw	a1,-20(s0)
200159c0:	fe842503          	lw	a0,-24(s0)
200159c4:	b2dff0ef          	jal	ra,200154f0 <__metal_plic0_enable>
200159c8:	87aa                	mv	a5,a0
200159ca:	0017f713          	andi	a4,a5,1
200159ce:	fec42783          	lw	a5,-20(s0)
200159d2:	00f71733          	sll	a4,a4,a5
200159d6:	fe442783          	lw	a5,-28(s0)
200159da:	8fd9                	or	a5,a5,a4
200159dc:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
200159e0:	fec42783          	lw	a5,-20(s0)
200159e4:	0785                	addi	a5,a5,1
200159e6:	fef42623          	sw	a5,-20(s0)
200159ea:	fd842783          	lw	a5,-40(s0)
200159ee:	8385                	srli	a5,a5,0x1
200159f0:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
200159f4:	fd842783          	lw	a5,-40(s0)
200159f8:	ffc5                	bnez	a5,200159b0 <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
200159fa:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
200159fe:	853e                	mv	a0,a5
20015a00:	50b2                	lw	ra,44(sp)
20015a02:	5422                	lw	s0,40(sp)
20015a04:	6145                	addi	sp,sp,48
20015a06:	8082                	ret

20015a08 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
20015a08:	7179                	addi	sp,sp,-48
20015a0a:	d606                	sw	ra,44(sp)
20015a0c:	d422                	sw	s0,40(sp)
20015a0e:	1800                	addi	s0,sp,48
20015a10:	fca42e23          	sw	a0,-36(s0)
20015a14:	fcb42c23          	sw	a1,-40(s0)
20015a18:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
20015a1c:	fe042223          	sw	zero,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20015a20:	fdc42783          	lw	a5,-36(s0)
20015a24:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20015a28:	fdc42503          	lw	a0,-36(s0)
20015a2c:	873ff0ef          	jal	ra,2001529e <__metal_driver_sifive_plic0_num_interrupts>
20015a30:	872a                	mv	a4,a0
20015a32:	fd442783          	lw	a5,-44(s0)
20015a36:	00e7c863          	blt	a5,a4,20015a46 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20015a3a:	57fd                	li	a5,-1
20015a3c:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
20015a40:	fe442783          	lw	a5,-28(s0)
20015a44:	a899                	j	20015a9a <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20015a46:	fe042623          	sw	zero,-20(s0)
20015a4a:	a099                	j	20015a90 <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
20015a4c:	fec42783          	lw	a5,-20(s0)
20015a50:	c795                	beqz	a5,20015a7c <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20015a52:	4681                	li	a3,0
20015a54:	fd442603          	lw	a2,-44(s0)
20015a58:	fec42583          	lw	a1,-20(s0)
20015a5c:	fe842503          	lw	a0,-24(s0)
20015a60:	a91ff0ef          	jal	ra,200154f0 <__metal_plic0_enable>
20015a64:	87aa                	mv	a5,a0
20015a66:	0017f713          	andi	a4,a5,1
20015a6a:	fec42783          	lw	a5,-20(s0)
20015a6e:	00f71733          	sll	a4,a4,a5
20015a72:	fe442783          	lw	a5,-28(s0)
20015a76:	8fd9                	or	a5,a5,a4
20015a78:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20015a7c:	fec42783          	lw	a5,-20(s0)
20015a80:	0785                	addi	a5,a5,1
20015a82:	fef42623          	sw	a5,-20(s0)
20015a86:	fd842783          	lw	a5,-40(s0)
20015a8a:	8385                	srli	a5,a5,0x1
20015a8c:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
20015a90:	fd842783          	lw	a5,-40(s0)
20015a94:	ffc5                	bnez	a5,20015a4c <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20015a96:	fe442783          	lw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20015a9a:	853e                	mv	a0,a5
20015a9c:	50b2                	lw	ra,44(sp)
20015a9e:	5422                	lw	s0,40(sp)
20015aa0:	6145                	addi	sp,sp,48
20015aa2:	8082                	ret

20015aa4 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20015aa4:	7179                	addi	sp,sp,-48
20015aa6:	d606                	sw	ra,44(sp)
20015aa8:	d422                	sw	s0,40(sp)
20015aaa:	1800                	addi	s0,sp,48
20015aac:	fca42e23          	sw	a0,-36(s0)
20015ab0:	fcb42c23          	sw	a1,-40(s0)
20015ab4:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
20015ab8:	fe042423          	sw	zero,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
20015abc:	fe042623          	sw	zero,-20(s0)
20015ac0:	a091                	j	20015b04 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
20015ac2:	fec42783          	lw	a5,-20(s0)
20015ac6:	c78d                	beqz	a5,20015af0 <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
20015ac8:	fd442603          	lw	a2,-44(s0)
20015acc:	fec42583          	lw	a1,-20(s0)
20015ad0:	fdc42503          	lw	a0,-36(s0)
20015ad4:	907ff0ef          	jal	ra,200153da <__metal_plic0_set_threshold>
20015ad8:	87aa                	mv	a5,a0
20015ada:	0017f713          	andi	a4,a5,1
20015ade:	fec42783          	lw	a5,-20(s0)
20015ae2:	00f71733          	sll	a4,a4,a5
20015ae6:	fe842783          	lw	a5,-24(s0)
20015aea:	8fd9                	or	a5,a5,a4
20015aec:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
20015af0:	fec42783          	lw	a5,-20(s0)
20015af4:	0785                	addi	a5,a5,1
20015af6:	fef42623          	sw	a5,-20(s0)
20015afa:	fd842783          	lw	a5,-40(s0)
20015afe:	8385                	srli	a5,a5,0x1
20015b00:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
20015b04:	fd842783          	lw	a5,-40(s0)
20015b08:	ffcd                	bnez	a5,20015ac2 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
20015b0a:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:281
}
20015b0e:	853e                	mv	a0,a5
20015b10:	50b2                	lw	ra,44(sp)
20015b12:	5422                	lw	s0,40(sp)
20015b14:	6145                	addi	sp,sp,48
20015b16:	8082                	ret

20015b18 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20015b18:	1101                	addi	sp,sp,-32
20015b1a:	ce06                	sw	ra,28(sp)
20015b1c:	cc22                	sw	s0,24(sp)
20015b1e:	1000                	addi	s0,sp,32
20015b20:	fea42623          	sw	a0,-20(s0)
20015b24:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20015b28:	fe842583          	lw	a1,-24(s0)
20015b2c:	fec42503          	lw	a0,-20(s0)
20015b30:	8f1ff0ef          	jal	ra,20015420 <__metal_plic0_get_threshold>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20015b34:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/riscv_plic0.c:287
}
20015b36:	853e                	mv	a0,a5
20015b38:	40f2                	lw	ra,28(sp)
20015b3a:	4462                	lw	s0,24(sp)
20015b3c:	6105                	addi	sp,sp,32
20015b3e:	8082                	ret

20015b40 <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1242



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
20015b40:	1101                	addi	sp,sp,-32
20015b42:	ce22                	sw	s0,28(sp)
20015b44:	1000                	addi	s0,sp,32
20015b46:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1243
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20015b4a:	800007b7          	lui	a5,0x80000
20015b4e:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdd5c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1244
}
20015b52:	853e                	mv	a0,a5
20015b54:	4472                	lw	s0,28(sp)
20015b56:	6105                	addi	sp,sp,32
20015b58:	8082                	ret

20015b5a <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1247

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20015b5a:	1101                	addi	sp,sp,-32
20015b5c:	ce22                	sw	s0,28(sp)
20015b5e:	1000                	addi	s0,sp,32
20015b60:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1248
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015b64:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1249
}
20015b68:	853e                	mv	a0,a5
20015b6a:	4472                	lw	s0,28(sp)
20015b6c:	6105                	addi	sp,sp,32
20015b6e:	8082                	ret

20015b70 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1257
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
20015b70:	1101                	addi	sp,sp,-32
20015b72:	ce22                	sw	s0,28(sp)
20015b74:	1000                	addi	s0,sp,32
20015b76:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1258
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20015b7a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1259
}
20015b7c:	853e                	mv	a0,a5
20015b7e:	4472                	lw	s0,28(sp)
20015b80:	6105                	addi	sp,sp,32
20015b82:	8082                	ret

20015b84 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1374
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20015b84:	1141                	addi	sp,sp,-16
20015b86:	c622                	sw	s0,12(sp)
20015b88:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015b8a:	200117b7          	lui	a5,0x20011
20015b8e:	ff478793          	addi	a5,a5,-12 # 20010ff4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1376
}
20015b92:	853e                	mv	a0,a5
20015b94:	4432                	lw	s0,12(sp)
20015b96:	0141                	addi	sp,sp,16
20015b98:	8082                	ret

20015b9a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20015b9a:	7139                	addi	sp,sp,-64
20015b9c:	de06                	sw	ra,60(sp)
20015b9e:	dc22                	sw	s0,56(sp)
20015ba0:	0080                	addi	s0,sp,64
20015ba2:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20015ba6:	fcc42503          	lw	a0,-52(s0)
20015baa:	3f59                	jal	20015b40 <__metal_driver_sifive_fe310_g000_hfrosc_ref>
20015bac:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
20015bb0:	fcc42503          	lw	a0,-52(s0)
20015bb4:	3f75                	jal	20015b70 <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
20015bb6:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
20015bba:	fcc42503          	lw	a0,-52(s0)
20015bbe:	3f71                	jal	20015b5a <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
20015bc0:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20015bc4:	37c1                	jal	20015b84 <__metal_driver_sifive_fe310_g000_prci_vtable>
20015bc6:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
20015bca:	fe042783          	lw	a5,-32(s0)
20015bce:	439c                	lw	a5,0(a5)
20015bd0:	fe842583          	lw	a1,-24(s0)
20015bd4:	fe442503          	lw	a0,-28(s0)
20015bd8:	9782                	jalr	a5
20015bda:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
20015bde:	fdc42703          	lw	a4,-36(s0)
20015be2:	400007b7          	lui	a5,0x40000
20015be6:	8ff9                	and	a5,a5,a4
20015be8:	e399                	bnez	a5,20015bee <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
20015bea:	57fd                	li	a5,-1
20015bec:	a025                	j	20015c14 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
20015bee:	fdc42783          	lw	a5,-36(s0)
20015bf2:	0007c463          	bltz	a5,20015bfa <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
20015bf6:	57fd                	li	a5,-1
20015bf8:	a831                	j	20015c14 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
20015bfa:	fec42503          	lw	a0,-20(s0)
20015bfe:	2d1010ef          	jal	ra,200176ce <metal_clock_get_rate_hz>
20015c02:	87aa                	mv	a5,a0
20015c04:	873e                	mv	a4,a5
20015c06:	fdc42783          	lw	a5,-36(s0)
20015c0a:	03f7f793          	andi	a5,a5,63
20015c0e:	0785                	addi	a5,a5,1
20015c10:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20015c14:	853e                	mv	a0,a5
20015c16:	50f2                	lw	ra,60(sp)
20015c18:	5462                	lw	s0,56(sp)
20015c1a:	6121                	addi	sp,sp,64
20015c1c:	8082                	ret

20015c1e <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20015c1e:	1101                	addi	sp,sp,-32
20015c20:	ce06                	sw	ra,28(sp)
20015c22:	cc22                	sw	s0,24(sp)
20015c24:	1000                	addi	s0,sp,32
20015c26:	fea42623          	sw	a0,-20(s0)
20015c2a:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
20015c2e:	fec42503          	lw	a0,-20(s0)
20015c32:	37a5                	jal	20015b9a <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20015c34:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20015c36:	853e                	mv	a0,a5
20015c38:	40f2                	lw	ra,28(sp)
20015c3a:	4462                	lw	s0,24(sp)
20015c3c:	6105                	addi	sp,sp,32
20015c3e:	8082                	ret

20015c40 <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1265
{
20015c40:	1101                	addi	sp,sp,-32
20015c42:	ce22                	sw	s0,28(sp)
20015c44:	1000                	addi	s0,sp,32
20015c46:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1266
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20015c4a:	800007b7          	lui	a5,0x80000
20015c4e:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdd50>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1267
}
20015c52:	853e                	mv	a0,a5
20015c54:	4472                	lw	s0,28(sp)
20015c56:	6105                	addi	sp,sp,32
20015c58:	8082                	ret

20015c5a <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1270
{
20015c5a:	1101                	addi	sp,sp,-32
20015c5c:	ce22                	sw	s0,28(sp)
20015c5e:	1000                	addi	s0,sp,32
20015c60:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1271
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015c64:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1272
}
20015c68:	853e                	mv	a0,a5
20015c6a:	4472                	lw	s0,28(sp)
20015c6c:	6105                	addi	sp,sp,32
20015c6e:	8082                	ret

20015c70 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1275
{
20015c70:	1101                	addi	sp,sp,-32
20015c72:	ce22                	sw	s0,28(sp)
20015c74:	1000                	addi	s0,sp,32
20015c76:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1276
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20015c7a:	4791                	li	a5,4
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1277
}
20015c7c:	853e                	mv	a0,a5
20015c7e:	4472                	lw	s0,28(sp)
20015c80:	6105                	addi	sp,sp,32
20015c82:	8082                	ret

20015c84 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1374
{
20015c84:	1141                	addi	sp,sp,-16
20015c86:	c622                	sw	s0,12(sp)
20015c88:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015c8a:	200117b7          	lui	a5,0x20011
20015c8e:	ff478793          	addi	a5,a5,-12 # 20010ff4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1376
}
20015c92:	853e                	mv	a0,a5
20015c94:	4432                	lw	s0,12(sp)
20015c96:	0141                	addi	sp,sp,16
20015c98:	8082                	ret

20015c9a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20015c9a:	7139                	addi	sp,sp,-64
20015c9c:	de06                	sw	ra,60(sp)
20015c9e:	dc22                	sw	s0,56(sp)
20015ca0:	0080                	addi	s0,sp,64
20015ca2:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20015ca6:	fcc42503          	lw	a0,-52(s0)
20015caa:	3f59                	jal	20015c40 <__metal_driver_sifive_fe310_g000_hfxosc_ref>
20015cac:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
20015cb0:	fcc42503          	lw	a0,-52(s0)
20015cb4:	3f75                	jal	20015c70 <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
20015cb6:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
20015cba:	fcc42503          	lw	a0,-52(s0)
20015cbe:	3f71                	jal	20015c5a <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
20015cc0:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
20015cc4:	37c1                	jal	20015c84 <__metal_driver_sifive_fe310_g000_prci_vtable>
20015cc6:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
20015cca:	fe042783          	lw	a5,-32(s0)
20015cce:	439c                	lw	a5,0(a5)
20015cd0:	fe842583          	lw	a1,-24(s0)
20015cd4:	fe442503          	lw	a0,-28(s0)
20015cd8:	9782                	jalr	a5
20015cda:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
20015cde:	fdc42703          	lw	a4,-36(s0)
20015ce2:	400007b7          	lui	a5,0x40000
20015ce6:	8ff9                	and	a5,a5,a4
20015ce8:	e399                	bnez	a5,20015cee <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
20015cea:	57fd                	li	a5,-1
20015cec:	a821                	j	20015d04 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
20015cee:	fdc42783          	lw	a5,-36(s0)
20015cf2:	0007c463          	bltz	a5,20015cfa <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
20015cf6:	57fd                	li	a5,-1
20015cf8:	a031                	j	20015d04 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
20015cfa:	fec42503          	lw	a0,-20(s0)
20015cfe:	1d1010ef          	jal	ra,200176ce <metal_clock_get_rate_hz>
20015d02:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
20015d04:	853e                	mv	a0,a5
20015d06:	50f2                	lw	ra,60(sp)
20015d08:	5462                	lw	s0,56(sp)
20015d0a:	6121                	addi	sp,sp,64
20015d0c:	8082                	ret

20015d0e <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
20015d0e:	1101                	addi	sp,sp,-32
20015d10:	ce06                	sw	ra,28(sp)
20015d12:	cc22                	sw	s0,24(sp)
20015d14:	1000                	addi	s0,sp,32
20015d16:	fea42623          	sw	a0,-20(s0)
20015d1a:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
20015d1e:	fec42503          	lw	a0,-20(s0)
20015d22:	3fa5                	jal	20015c9a <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20015d24:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20015d26:	853e                	mv	a0,a5
20015d28:	40f2                	lw	ra,28(sp)
20015d2a:	4462                	lw	s0,24(sp)
20015d2c:	6105                	addi	sp,sp,32
20015d2e:	8082                	ret

20015d30 <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1326
{
20015d30:	1101                	addi	sp,sp,-32
20015d32:	ce22                	sw	s0,28(sp)
20015d34:	1000                	addi	s0,sp,32
20015d36:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1327
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20015d3a:	800017b7          	lui	a5,0x80001
20015d3e:	a7878793          	addi	a5,a5,-1416 # 80000a78 <metal_segment_heap_target_end+0xffffe768>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1328
}
20015d42:	853e                	mv	a0,a5
20015d44:	4472                	lw	s0,28(sp)
20015d46:	6105                	addi	sp,sp,32
20015d48:	8082                	ret

20015d4a <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1331
{
20015d4a:	1101                	addi	sp,sp,-32
20015d4c:	ce22                	sw	s0,28(sp)
20015d4e:	1000                	addi	s0,sp,32
20015d50:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1332
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20015d54:	800017b7          	lui	a5,0x80001
20015d58:	a8478793          	addi	a5,a5,-1404 # 80000a84 <metal_segment_heap_target_end+0xffffe774>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1333
}
20015d5c:	853e                	mv	a0,a5
20015d5e:	4472                	lw	s0,28(sp)
20015d60:	6105                	addi	sp,sp,32
20015d62:	8082                	ret

20015d64 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1336
{
20015d64:	1101                	addi	sp,sp,-32
20015d66:	ce22                	sw	s0,28(sp)
20015d68:	1000                	addi	s0,sp,32
20015d6a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1337
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015d6e:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1338
}
20015d72:	853e                	mv	a0,a5
20015d74:	4472                	lw	s0,28(sp)
20015d76:	6105                	addi	sp,sp,32
20015d78:	8082                	ret

20015d7a <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1341
{
20015d7a:	1101                	addi	sp,sp,-32
20015d7c:	ce22                	sw	s0,28(sp)
20015d7e:	1000                	addi	s0,sp,32
20015d80:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1342
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20015d84:	47b1                	li	a5,12
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1343
}
20015d86:	853e                	mv	a0,a5
20015d88:	4472                	lw	s0,28(sp)
20015d8a:	6105                	addi	sp,sp,32
20015d8c:	8082                	ret

20015d8e <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1346
{
20015d8e:	1141                	addi	sp,sp,-16
20015d90:	c622                	sw	s0,12(sp)
20015d92:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1347
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20015d94:	82018793          	addi	a5,gp,-2016 # 80000ac0 <__metal_dt_prci_10008000>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1348
}
20015d98:	853e                	mv	a0,a5
20015d9a:	4432                	lw	s0,12(sp)
20015d9c:	0141                	addi	sp,sp,16
20015d9e:	8082                	ret

20015da0 <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1351
{
20015da0:	1141                	addi	sp,sp,-16
20015da2:	c622                	sw	s0,12(sp)
20015da4:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1352
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20015da6:	47a1                	li	a5,8
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1353
}
20015da8:	853e                	mv	a0,a5
20015daa:	4432                	lw	s0,12(sp)
20015dac:	0141                	addi	sp,sp,16
20015dae:	8082                	ret

20015db0 <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1356
{
20015db0:	1141                	addi	sp,sp,-16
20015db2:	c622                	sw	s0,12(sp)
20015db4:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1357
		return 16000000;
20015db6:	00f427b7          	lui	a5,0xf42
20015dba:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1358
}
20015dbe:	853e                	mv	a0,a5
20015dc0:	4432                	lw	s0,12(sp)
20015dc2:	0141                	addi	sp,sp,16
20015dc4:	8082                	ret

20015dc6 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1364
{
20015dc6:	1141                	addi	sp,sp,-16
20015dc8:	c622                	sw	s0,12(sp)
20015dca:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20015dcc:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1366
}
20015dd0:	853e                	mv	a0,a5
20015dd2:	4432                	lw	s0,12(sp)
20015dd4:	0141                	addi	sp,sp,16
20015dd6:	8082                	ret

20015dd8 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1374
{
20015dd8:	1141                	addi	sp,sp,-16
20015dda:	c622                	sw	s0,12(sp)
20015ddc:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1375
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20015dde:	200117b7          	lui	a5,0x20011
20015de2:	ff478793          	addi	a5,a5,-12 # 20010ff4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1376
}
20015de6:	853e                	mv	a0,a5
20015de8:	4432                	lw	s0,12(sp)
20015dea:	0141                	addi	sp,sp,16
20015dec:	8082                	ret

20015dee <get_pll_config_freq>:
get_pll_config_freq():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
20015dee:	1101                	addi	sp,sp,-32
20015df0:	ce22                	sw	s0,28(sp)
20015df2:	1000                	addi	s0,sp,32
20015df4:	fea42623          	sw	a0,-20(s0)
20015df8:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
20015dfc:	fe842783          	lw	a5,-24(s0)
20015e00:	479c                	lw	a5,8(a5)
20015e02:	fec42703          	lw	a4,-20(s0)
20015e06:	00f76963          	bltu	a4,a5,20015e18 <get_pll_config_freq+0x2a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
20015e0a:	fe842783          	lw	a5,-24(s0)
20015e0e:	47dc                	lw	a5,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
20015e10:	fec42703          	lw	a4,-20(s0)
20015e14:	00e7f463          	bgeu	a5,a4,20015e1c <get_pll_config_freq+0x2e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20015e18:	57fd                	li	a5,-1
20015e1a:	a829                	j	20015e34 <get_pll_config_freq+0x46>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
20015e1c:	fe842783          	lw	a5,-24(s0)
20015e20:	4398                	lw	a4,0(a5)
20015e22:	fec42783          	lw	a5,-20(s0)
20015e26:	02f70733          	mul	a4,a4,a5
20015e2a:	fe842783          	lw	a5,-24(s0)
20015e2e:	43dc                	lw	a5,4(a5)
20015e30:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20015e34:	853e                	mv	a0,a5
20015e36:	4472                	lw	s0,28(sp)
20015e38:	6105                	addi	sp,sp,32
20015e3a:	8082                	ret

20015e3c <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
20015e3c:	7139                	addi	sp,sp,-64
20015e3e:	de06                	sw	ra,60(sp)
20015e40:	dc22                	sw	s0,56(sp)
20015e42:	0080                	addi	s0,sp,64
20015e44:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20015e48:	fcc42783          	lw	a5,-52(s0)
20015e4c:	853e                	mv	a0,a5
20015e4e:	3df5                	jal	20015d4a <__metal_driver_sifive_fe310_g000_pll_pllref>
20015e50:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20015e54:	3fb1                	jal	20015db0 <__metal_driver_sifive_fe310_g000_pll_init_rate>
20015e56:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20015e5a:	3799                	jal	20015da0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015e5c:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20015e60:	379d                	jal	20015dc6 <__metal_driver_sifive_fe310_g000_prci_base>
20015e62:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20015e66:	fe042703          	lw	a4,-32(s0)
20015e6a:	fe442783          	lw	a5,-28(s0)
20015e6e:	97ba                	add	a5,a5,a4
20015e70:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20015e74:	fcc42783          	lw	a5,-52(s0)
20015e78:	43dc                	lw	a5,4(a5)
20015e7a:	853e                	mv	a0,a5
20015e7c:	7bc010ef          	jal	ra,20017638 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
20015e80:	fdc42783          	lw	a5,-36(s0)
20015e84:	4398                	lw	a4,0(a5)
20015e86:	67c1                	lui	a5,0x10
20015e88:	8ff9                	and	a5,a5,a4
20015e8a:	cb91                	beqz	a5,20015e9e <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20015e8c:	fdc42783          	lw	a5,-36(s0)
20015e90:	4398                	lw	a4,0(a5)
20015e92:	77c1                	lui	a5,0xffff0
20015e94:	17fd                	addi	a5,a5,-1
20015e96:	8f7d                	and	a4,a4,a5
20015e98:	fdc42783          	lw	a5,-36(s0)
20015e9c:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
20015e9e:	fec42783          	lw	a5,-20(s0)
20015ea2:	cb91                	beqz	a5,20015eb6 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20015ea4:	fdc42783          	lw	a5,-36(s0)
20015ea8:	4398                	lw	a4,0(a5)
20015eaa:	000207b7          	lui	a5,0x20
20015eae:	8f5d                	or	a4,a4,a5
20015eb0:	fdc42783          	lw	a5,-36(s0)
20015eb4:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
20015eb6:	fcc42783          	lw	a5,-52(s0)
20015eba:	439c                	lw	a5,0(a5)
20015ebc:	43d8                	lw	a4,4(a5)
20015ebe:	fcc42783          	lw	a5,-52(s0)
20015ec2:	fe842583          	lw	a1,-24(s0)
20015ec6:	853e                	mv	a0,a5
20015ec8:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
20015eca:	fcc42783          	lw	a5,-52(s0)
20015ece:	479c                	lw	a5,8(a5)
20015ed0:	853e                	mv	a0,a5
20015ed2:	766010ef          	jal	ra,20017638 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
20015ed6:	0001                	nop
20015ed8:	50f2                	lw	ra,60(sp)
20015eda:	5462                	lw	s0,56(sp)
20015edc:	6121                	addi	sp,sp,64
20015ede:	8082                	ret

20015ee0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
20015ee0:	711d                	addi	sp,sp,-96
20015ee2:	ce86                	sw	ra,92(sp)
20015ee4:	cca2                	sw	s0,88(sp)
20015ee6:	1080                	addi	s0,sp,96
20015ee8:	faa42623          	sw	a0,-84(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20015eec:	fac42503          	lw	a0,-84(s0)
20015ef0:	e5bff0ef          	jal	ra,20015d4a <__metal_driver_sifive_fe310_g000_pll_pllref>
20015ef4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20015ef8:	fac42503          	lw	a0,-84(s0)
20015efc:	e35ff0ef          	jal	ra,20015d30 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20015f00:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20015f04:	fac42503          	lw	a0,-84(s0)
20015f08:	e99ff0ef          	jal	ra,20015da0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
20015f0c:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
20015f10:	fac42503          	lw	a0,-84(s0)
20015f14:	e7bff0ef          	jal	ra,20015d8e <__metal_driver_sifive_fe310_g000_pll_config_base>
20015f18:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20015f1c:	fac42503          	lw	a0,-84(s0)
20015f20:	e5bff0ef          	jal	ra,20015d7a <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20015f24:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
20015f28:	fac42503          	lw	a0,-84(s0)
20015f2c:	e39ff0ef          	jal	ra,20015d64 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20015f30:	fca42c23          	sw	a0,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20015f34:	3555                	jal	20015dd8 <__metal_driver_sifive_fe310_g000_prci_vtable>
20015f36:	fca42a23          	sw	a0,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
20015f3a:	fd442783          	lw	a5,-44(s0)
20015f3e:	439c                	lw	a5,0(a5)
20015f40:	fe442583          	lw	a1,-28(s0)
20015f44:	fe042503          	lw	a0,-32(s0)
20015f48:	9782                	jalr	a5
20015f4a:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20015f4e:	fd442783          	lw	a5,-44(s0)
20015f52:	439c                	lw	a5,0(a5)
20015f54:	fdc42583          	lw	a1,-36(s0)
20015f58:	fd842503          	lw	a0,-40(s0)
20015f5c:	9782                	jalr	a5
20015f5e:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20015f62:	fd042703          	lw	a4,-48(s0)
20015f66:	67c1                	lui	a5,0x10
20015f68:	8f7d                	and	a4,a4,a5
20015f6a:	67c1                	lui	a5,0x10
20015f6c:	00f77863          	bgeu	a4,a5,20015f7c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x9c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20015f70:	fe842503          	lw	a0,-24(s0)
20015f74:	75a010ef          	jal	ra,200176ce <metal_clock_get_rate_hz>
20015f78:	87aa                	mv	a5,a0
20015f7a:	a8e1                	j	20016052 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
20015f7c:	fd042703          	lw	a4,-48(s0)
20015f80:	000207b7          	lui	a5,0x20
20015f84:	8f7d                	and	a4,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20015f86:	000207b7          	lui	a5,0x20
20015f8a:	00f76563          	bltu	a4,a5,20015f94 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20015f8e:	fec42783          	lw	a5,-20(s0)
20015f92:	a019                	j	20015f98 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xb8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20015f94:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
20015f98:	853e                	mv	a0,a5
20015f9a:	734010ef          	jal	ra,200176ce <metal_clock_get_rate_hz>
20015f9e:	fca42423          	sw	a0,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20015fa2:	fd042703          	lw	a4,-48(s0)
20015fa6:	000407b7          	lui	a5,0x40
20015faa:	8f7d                	and	a4,a4,a5
20015fac:	000407b7          	lui	a5,0x40
20015fb0:	00f76563          	bltu	a4,a5,20015fba <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xda>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20015fb4:	fc842783          	lw	a5,-56(s0)
20015fb8:	a869                	j	20016052 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
20015fba:	fd042783          	lw	a5,-48(s0)
20015fbe:	8b9d                	andi	a5,a5,7
20015fc0:	0785                	addi	a5,a5,1
20015fc2:	fcf42223          	sw	a5,-60(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
20015fc6:	fd042783          	lw	a5,-48(s0)
20015fca:	3f07f793          	andi	a5,a5,1008
20015fce:	8391                	srli	a5,a5,0x4
20015fd0:	0785                	addi	a5,a5,1
20015fd2:	0786                	slli	a5,a5,0x1
20015fd4:	fcf42023          	sw	a5,-64(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
20015fd8:	fd042703          	lw	a4,-48(s0)
20015fdc:	6785                	lui	a5,0x1
20015fde:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015fe2:	8f7d                	and	a4,a4,a5
20015fe4:	3ff00793          	li	a5,1023
20015fe8:	00e7e463          	bltu	a5,a4,20015ff0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x110>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
20015fec:	57fd                	li	a5,-1
20015fee:	a095                	j	20016052 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
20015ff0:	fd042703          	lw	a4,-48(s0)
20015ff4:	6785                	lui	a5,0x1
20015ff6:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20015ffa:	8ff9                	and	a5,a5,a4
20015ffc:	83a9                	srli	a5,a5,0xa
20015ffe:	4705                	li	a4,1
20016000:	00f717b3          	sll	a5,a4,a5
20016004:	faf42e23          	sw	a5,-68(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
20016008:	fc842703          	lw	a4,-56(s0)
2001600c:	fc442783          	lw	a5,-60(s0)
20016010:	02f74733          	div	a4,a4,a5
20016014:	fc042783          	lw	a5,-64(s0)
20016018:	02f70733          	mul	a4,a4,a5
2001601c:	fbc42783          	lw	a5,-68(s0)
20016020:	02f747b3          	div	a5,a4,a5
20016024:	faf42c23          	sw	a5,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
20016028:	fcc42783          	lw	a5,-52(s0)
2001602c:	1007f713          	andi	a4,a5,256
20016030:	0ff00793          	li	a5,255
20016034:	00e7f563          	bgeu	a5,a4,2001603e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x15e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
20016038:	fb842783          	lw	a5,-72(s0)
2001603c:	a819                	j	20016052 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
2001603e:	fb842703          	lw	a4,-72(s0)
20016042:	fcc42783          	lw	a5,-52(s0)
20016046:	03f7f793          	andi	a5,a5,63
2001604a:	0785                	addi	a5,a5,1
2001604c:	0786                	slli	a5,a5,0x1
2001604e:	02f757b3          	divu	a5,a4,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20016052:	853e                	mv	a0,a5
20016054:	40f6                	lw	ra,92(sp)
20016056:	4466                	lw	s0,88(sp)
20016058:	6125                	addi	sp,sp,96
2001605a:	8082                	ret

2001605c <find_closest_config>:
find_closest_config():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2001605c:	7139                	addi	sp,sp,-64
2001605e:	de06                	sw	ra,60(sp)
20016060:	dc22                	sw	s0,56(sp)
20016062:	0080                	addi	s0,sp,64
20016064:	fca42623          	sw	a0,-52(s0)
20016068:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2001606c:	57fd                	li	a5,-1
2001606e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20016072:	800007b7          	lui	a5,0x80000
20016076:	fff7c793          	not	a5,a5
2001607a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
2001607e:	04300793          	li	a5,67
20016082:	fef42223          	sw	a5,-28(s0)
20016086:	a0b5                	j	200160f2 <find_closest_config+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
20016088:	fcc42683          	lw	a3,-52(s0)
2001608c:	fe442783          	lw	a5,-28(s0)
20016090:	00579713          	slli	a4,a5,0x5
20016094:	200107b7          	lui	a5,0x20010
20016098:	69878793          	addi	a5,a5,1688 # 20010698 <pll_configs>
2001609c:	97ba                	add	a5,a5,a4
2001609e:	85be                	mv	a1,a5
200160a0:	8536                	mv	a0,a3
200160a2:	d4dff0ef          	jal	ra,20015dee <get_pll_config_freq>
200160a6:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
200160aa:	fe042703          	lw	a4,-32(s0)
200160ae:	57fd                	li	a5,-1
200160b0:	02f70c63          	beq	a4,a5,200160e8 <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
200160b4:	fe042703          	lw	a4,-32(s0)
200160b8:	fc842783          	lw	a5,-56(s0)
200160bc:	8f1d                	sub	a4,a4,a5
200160be:	41f75793          	srai	a5,a4,0x1f
200160c2:	8f3d                	xor	a4,a4,a5
200160c4:	40f707b3          	sub	a5,a4,a5
200160c8:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
200160cc:	fdc42703          	lw	a4,-36(s0)
200160d0:	fe842783          	lw	a5,-24(s0)
200160d4:	00f75a63          	bge	a4,a5,200160e8 <find_closest_config+0x8c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
200160d8:	fe442783          	lw	a5,-28(s0)
200160dc:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
200160e0:	fdc42783          	lw	a5,-36(s0)
200160e4:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
200160e8:	fe442783          	lw	a5,-28(s0)
200160ec:	17fd                	addi	a5,a5,-1
200160ee:	fef42223          	sw	a5,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
200160f2:	fe442783          	lw	a5,-28(s0)
200160f6:	f807d9e3          	bgez	a5,20016088 <find_closest_config+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
200160fa:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
200160fe:	853e                	mv	a0,a5
20016100:	50f2                	lw	ra,60(sp)
20016102:	5462                	lw	s0,56(sp)
20016104:	6121                	addi	sp,sp,64
20016106:	8082                	ret

20016108 <configure_pll>:
configure_pll():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
20016108:	7179                	addi	sp,sp,-48
2001610a:	d606                	sw	ra,44(sp)
2001610c:	d422                	sw	s0,40(sp)
2001610e:	1800                	addi	s0,sp,48
20016110:	fca42e23          	sw	a0,-36(s0)
20016114:	fcb42c23          	sw	a1,-40(s0)
20016118:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
2001611c:	fdc42783          	lw	a5,-36(s0)
20016120:	439c                	lw	a5,0(a5)
20016122:	ff87f713          	andi	a4,a5,-8
20016126:	fdc42783          	lw	a5,-36(s0)
2001612a:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
2001612c:	fdc42783          	lw	a5,-36(s0)
20016130:	4398                	lw	a4,0(a5)
20016132:	fd442783          	lw	a5,-44(s0)
20016136:	4b9c                	lw	a5,16(a5)
20016138:	8b9d                	andi	a5,a5,7
2001613a:	8f5d                	or	a4,a4,a5
2001613c:	fdc42783          	lw	a5,-36(s0)
20016140:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20016142:	fdc42783          	lw	a5,-36(s0)
20016146:	439c                	lw	a5,0(a5)
20016148:	c0f7f713          	andi	a4,a5,-1009
2001614c:	fdc42783          	lw	a5,-36(s0)
20016150:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20016152:	fdc42783          	lw	a5,-36(s0)
20016156:	4398                	lw	a4,0(a5)
20016158:	fd442783          	lw	a5,-44(s0)
2001615c:	4bdc                	lw	a5,20(a5)
2001615e:	0792                	slli	a5,a5,0x4
20016160:	3f07f793          	andi	a5,a5,1008
20016164:	8f5d                	or	a4,a4,a5
20016166:	fdc42783          	lw	a5,-36(s0)
2001616a:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
2001616c:	fdc42783          	lw	a5,-36(s0)
20016170:	4398                	lw	a4,0(a5)
20016172:	77fd                	lui	a5,0xfffff
20016174:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffd0ef>
20016178:	8f7d                	and	a4,a4,a5
2001617a:	fdc42783          	lw	a5,-36(s0)
2001617e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20016180:	fdc42783          	lw	a5,-36(s0)
20016184:	4398                	lw	a4,0(a5)
20016186:	fd442783          	lw	a5,-44(s0)
2001618a:	4f9c                	lw	a5,24(a5)
2001618c:	00a79693          	slli	a3,a5,0xa
20016190:	6785                	lui	a5,0x1
20016192:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20016196:	8ff5                	and	a5,a5,a3
20016198:	8f5d                	or	a4,a4,a5
2001619a:	fdc42783          	lw	a5,-36(s0)
2001619e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
200161a0:	fd442783          	lw	a5,-44(s0)
200161a4:	4fdc                	lw	a5,28(a5)
200161a6:	0207db63          	bgez	a5,200161dc <configure_pll+0xd4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
200161aa:	fd842783          	lw	a5,-40(s0)
200161ae:	439c                	lw	a5,0(a5)
200161b0:	1007e713          	ori	a4,a5,256
200161b4:	fd842783          	lw	a5,-40(s0)
200161b8:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200161ba:	fd842783          	lw	a5,-40(s0)
200161be:	439c                	lw	a5,0(a5)
200161c0:	fc07f713          	andi	a4,a5,-64
200161c4:	fd842783          	lw	a5,-40(s0)
200161c8:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
200161ca:	fd842783          	lw	a5,-40(s0)
200161ce:	439c                	lw	a5,0(a5)
200161d0:	0017e713          	ori	a4,a5,1
200161d4:	fd842783          	lw	a5,-40(s0)
200161d8:	c398                	sw	a4,0(a5)
200161da:	a82d                	j	20016214 <configure_pll+0x10c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
200161dc:	fd842783          	lw	a5,-40(s0)
200161e0:	439c                	lw	a5,0(a5)
200161e2:	eff7f713          	andi	a4,a5,-257
200161e6:	fd842783          	lw	a5,-40(s0)
200161ea:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
200161ec:	fd842783          	lw	a5,-40(s0)
200161f0:	439c                	lw	a5,0(a5)
200161f2:	fc07f713          	andi	a4,a5,-64
200161f6:	fd842783          	lw	a5,-40(s0)
200161fa:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
200161fc:	fd842783          	lw	a5,-40(s0)
20016200:	4398                	lw	a4,0(a5)
20016202:	fd442783          	lw	a5,-44(s0)
20016206:	4fdc                	lw	a5,28(a5)
20016208:	03f7f793          	andi	a5,a5,63
2001620c:	8f5d                	or	a4,a4,a5
2001620e:	fd842783          	lw	a5,-40(s0)
20016212:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20016214:	fdc42783          	lw	a5,-36(s0)
20016218:	4398                	lw	a4,0(a5)
2001621a:	fffc07b7          	lui	a5,0xfffc0
2001621e:	17fd                	addi	a5,a5,-1
20016220:	8f7d                	and	a4,a4,a5
20016222:	fdc42783          	lw	a5,-36(s0)
20016226:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20016228:	fe040793          	addi	a5,s0,-32
2001622c:	863e                	mv	a2,a5
2001622e:	4585                	li	a1,1
20016230:	800017b7          	lui	a5,0x80001
20016234:	aac78513          	addi	a0,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xffffe79c>
20016238:	c60fd0ef          	jal	ra,20013698 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
2001623c:	fe042603          	lw	a2,-32(s0)
20016240:	fe442683          	lw	a3,-28(s0)
20016244:	4511                	li	a0,4
20016246:	4581                	li	a1,0
20016248:	00a60733          	add	a4,a2,a0
2001624c:	883a                	mv	a6,a4
2001624e:	00c83833          	sltu	a6,a6,a2
20016252:	00b687b3          	add	a5,a3,a1
20016256:	00f806b3          	add	a3,a6,a5
2001625a:	87b6                	mv	a5,a3
2001625c:	fee42423          	sw	a4,-24(s0)
20016260:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20016264:	a819                	j	2001627a <configure_pll+0x172>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20016266:	fe040793          	addi	a5,s0,-32
2001626a:	863e                	mv	a2,a5
2001626c:	4585                	li	a1,1
2001626e:	800017b7          	lui	a5,0x80001
20016272:	aac78513          	addi	a0,a5,-1364 # 80000aac <metal_segment_heap_target_end+0xffffe79c>
20016276:	c22fd0ef          	jal	ra,20013698 <__metal_driver_riscv_clint0_command_request>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
2001627a:	fe042703          	lw	a4,-32(s0)
2001627e:	fe442783          	lw	a5,-28(s0)
20016282:	fec42683          	lw	a3,-20(s0)
20016286:	863e                	mv	a2,a5
20016288:	00c6ec63          	bltu	a3,a2,200162a0 <configure_pll+0x198>
2001628c:	fec42683          	lw	a3,-20(s0)
20016290:	863e                	mv	a2,a5
20016292:	fcc69ae3          	bne	a3,a2,20016266 <configure_pll+0x15e>
20016296:	fe842683          	lw	a3,-24(s0)
2001629a:	87ba                	mv	a5,a4
2001629c:	fcf6f5e3          	bgeu	a3,a5,20016266 <configure_pll+0x15e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
200162a0:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
200162a2:	fdc42783          	lw	a5,-36(s0)
200162a6:	439c                	lw	a5,0(a5)
200162a8:	fe07dde3          	bgez	a5,200162a2 <configure_pll+0x19a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
200162ac:	0001                	nop
200162ae:	0001                	nop
200162b0:	50b2                	lw	ra,44(sp)
200162b2:	5422                	lw	s0,40(sp)
200162b4:	6145                	addi	sp,sp,48
200162b6:	8082                	ret

200162b8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
200162b8:	715d                	addi	sp,sp,-80
200162ba:	c686                	sw	ra,76(sp)
200162bc:	c4a2                	sw	s0,72(sp)
200162be:	0880                	addi	s0,sp,80
200162c0:	faa42e23          	sw	a0,-68(s0)
200162c4:	fab42c23          	sw	a1,-72(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
200162c8:	fbc42503          	lw	a0,-68(s0)
200162cc:	a7fff0ef          	jal	ra,20015d4a <__metal_driver_sifive_fe310_g000_pll_pllref>
200162d0:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
200162d4:	fbc42503          	lw	a0,-68(s0)
200162d8:	a59ff0ef          	jal	ra,20015d30 <__metal_driver_sifive_fe310_g000_pll_pllsel0>
200162dc:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
200162e0:	fbc42503          	lw	a0,-68(s0)
200162e4:	abdff0ef          	jal	ra,20015da0 <__metal_driver_sifive_fe310_g000_pll_config_offset>
200162e8:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
200162ec:	fbc42503          	lw	a0,-68(s0)
200162f0:	a8bff0ef          	jal	ra,20015d7a <__metal_driver_sifive_fe310_g000_pll_divider_offset>
200162f4:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
200162f8:	acfff0ef          	jal	ra,20015dc6 <__metal_driver_sifive_fe310_g000_prci_base>
200162fc:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20016300:	fdc42703          	lw	a4,-36(s0)
20016304:	fe442783          	lw	a5,-28(s0)
20016308:	97ba                	add	a5,a5,a4
2001630a:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
2001630e:	fdc42703          	lw	a4,-36(s0)
20016312:	fe042783          	lw	a5,-32(s0)
20016316:	97ba                	add	a5,a5,a4
20016318:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
2001631c:	fd842783          	lw	a5,-40(s0)
20016320:	4398                	lw	a4,0(a5)
20016322:	67c1                	lui	a5,0x10
20016324:	8ff9                	and	a5,a5,a4
20016326:	cb91                	beqz	a5,2001633a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20016328:	fd842783          	lw	a5,-40(s0)
2001632c:	4398                	lw	a4,0(a5)
2001632e:	77c1                	lui	a5,0xffff0
20016330:	17fd                	addi	a5,a5,-1
20016332:	8f7d                	and	a4,a4,a5
20016334:	fd842783          	lw	a5,-40(s0)
20016338:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
2001633a:	fd842783          	lw	a5,-40(s0)
2001633e:	4398                	lw	a4,0(a5)
20016340:	000207b7          	lui	a5,0x20
20016344:	8ff9                	and	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20016346:	c781                	beqz	a5,2001634e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20016348:	fec42783          	lw	a5,-20(s0)
2001634c:	a019                	j	20016352 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
2001634e:	fe842783          	lw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20016352:	853e                	mv	a0,a5
20016354:	37a010ef          	jal	ra,200176ce <metal_clock_get_rate_hz>
20016358:	fca42823          	sw	a0,-48(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
2001635c:	fd042703          	lw	a4,-48(s0)
20016360:	87ba                	mv	a5,a4
20016362:	0786                	slli	a5,a5,0x1
20016364:	97ba                	add	a5,a5,a4
20016366:	41f7d713          	srai	a4,a5,0x1f
2001636a:	8b0d                	andi	a4,a4,3
2001636c:	97ba                	add	a5,a5,a4
2001636e:	8789                	srai	a5,a5,0x2
20016370:	873e                	mv	a4,a5
20016372:	fb842783          	lw	a5,-72(s0)
20016376:	02e7cb63          	blt	a5,a4,200163ac <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
2001637a:	fd042703          	lw	a4,-48(s0)
2001637e:	87ba                	mv	a5,a4
20016380:	078a                	slli	a5,a5,0x2
20016382:	97ba                	add	a5,a5,a4
20016384:	41f7d713          	srai	a4,a5,0x1f
20016388:	8b0d                	andi	a4,a4,3
2001638a:	97ba                	add	a5,a5,a4
2001638c:	8789                	srai	a5,a5,0x2
2001638e:	873e                	mv	a4,a5
20016390:	fb842783          	lw	a5,-72(s0)
20016394:	00f74c63          	blt	a4,a5,200163ac <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20016398:	fd842783          	lw	a5,-40(s0)
2001639c:	4398                	lw	a4,0(a5)
2001639e:	000407b7          	lui	a5,0x40
200163a2:	8f5d                	or	a4,a4,a5
200163a4:	fd842783          	lw	a5,-40(s0)
200163a8:	c398                	sw	a4,0(a5)
200163aa:	a881                	j	200163fa <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
200163ac:	fb842583          	lw	a1,-72(s0)
200163b0:	fd042503          	lw	a0,-48(s0)
200163b4:	ca9ff0ef          	jal	ra,2001605c <find_closest_config>
200163b8:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
200163bc:	fcc42703          	lw	a4,-52(s0)
200163c0:	57fd                	li	a5,-1
200163c2:	02f70363          	beq	a4,a5,200163e8 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
200163c6:	fcc42783          	lw	a5,-52(s0)
200163ca:	00579713          	slli	a4,a5,0x5
200163ce:	200107b7          	lui	a5,0x20010
200163d2:	69878793          	addi	a5,a5,1688 # 20010698 <pll_configs>
200163d6:	97ba                	add	a5,a5,a4
200163d8:	863e                	mv	a2,a5
200163da:	fd442583          	lw	a1,-44(s0)
200163de:	fd842503          	lw	a0,-40(s0)
200163e2:	d27ff0ef          	jal	ra,20016108 <configure_pll>
200163e6:	a811                	j	200163fa <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
200163e8:	fd842783          	lw	a5,-40(s0)
200163ec:	4398                	lw	a4,0(a5)
200163ee:	000407b7          	lui	a5,0x40
200163f2:	8f5d                	or	a4,a4,a5
200163f4:	fd842783          	lw	a5,-40(s0)
200163f8:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
200163fa:	fd842783          	lw	a5,-40(s0)
200163fe:	4398                	lw	a4,0(a5)
20016400:	67c1                	lui	a5,0x10
20016402:	8f5d                	or	a4,a4,a5
20016404:	fd842783          	lw	a5,-40(s0)
20016408:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
2001640a:	fbc42503          	lw	a0,-68(s0)
2001640e:	ad3ff0ef          	jal	ra,20015ee0 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20016412:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20016414:	853e                	mv	a0,a5
20016416:	40b6                	lw	ra,76(sp)
20016418:	4426                	lw	s0,72(sp)
2001641a:	6161                	addi	sp,sp,80
2001641c:	8082                	ret

2001641e <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1364
{
2001641e:	1141                	addi	sp,sp,-16
20016420:	c622                	sw	s0,12(sp)
20016422:	0800                	addi	s0,sp,16
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1365
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20016424:	100087b7          	lui	a5,0x10008
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1366
}
20016428:	853e                	mv	a0,a5
2001642a:	4432                	lw	s0,12(sp)
2001642c:	0141                	addi	sp,sp,16
2001642e:	8082                	ret

20016430 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20016430:	7179                	addi	sp,sp,-48
20016432:	d606                	sw	ra,44(sp)
20016434:	d422                	sw	s0,40(sp)
20016436:	1800                	addi	s0,sp,48
20016438:	fca42e23          	sw	a0,-36(s0)
2001643c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20016440:	3ff9                	jal	2001641e <__metal_driver_sifive_fe310_g000_prci_base>
20016442:	87aa                	mv	a5,a0
20016444:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20016448:	fd842703          	lw	a4,-40(s0)
2001644c:	fec42783          	lw	a5,-20(s0)
20016450:	97ba                	add	a5,a5,a4
20016452:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20016454:	853e                	mv	a0,a5
20016456:	50b2                	lw	ra,44(sp)
20016458:	5422                	lw	s0,40(sp)
2001645a:	6145                	addi	sp,sp,48
2001645c:	8082                	ret

2001645e <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
2001645e:	7179                	addi	sp,sp,-48
20016460:	d606                	sw	ra,44(sp)
20016462:	d422                	sw	s0,40(sp)
20016464:	1800                	addi	s0,sp,48
20016466:	fca42e23          	sw	a0,-36(s0)
2001646a:	fcb42c23          	sw	a1,-40(s0)
2001646e:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20016472:	3775                	jal	2001641e <__metal_driver_sifive_fe310_g000_prci_base>
20016474:	87aa                	mv	a5,a0
20016476:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
2001647a:	fd842703          	lw	a4,-40(s0)
2001647e:	fec42783          	lw	a5,-20(s0)
20016482:	97ba                	add	a5,a5,a4
20016484:	873e                	mv	a4,a5
20016486:	fd442783          	lw	a5,-44(s0)
2001648a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
2001648c:	853e                	mv	a0,a5
2001648e:	50b2                	lw	ra,44(sp)
20016490:	5422                	lw	s0,40(sp)
20016492:	6145                	addi	sp,sp,48
20016494:	8082                	ret

20016496 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:430
{
20016496:	1101                	addi	sp,sp,-32
20016498:	ce22                	sw	s0,28(sp)
2001649a:	1000                	addi	s0,sp,32
2001649c:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:431
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200164a0:	fec42703          	lw	a4,-20(s0)
200164a4:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200164a8:	00f71563          	bne	a4,a5,200164b2 <__metal_driver_sifive_gpio0_base+0x1c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:432
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
200164ac:	100127b7          	lui	a5,0x10012
200164b0:	a011                	j	200164b4 <__metal_driver_sifive_gpio0_base+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:435
		return 0;
200164b2:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:437
}
200164b4:	853e                	mv	a0,a5
200164b6:	4472                	lw	s0,28(sp)
200164b8:	6105                	addi	sp,sp,32
200164ba:	8082                	ret

200164bc <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:460
{
200164bc:	1101                	addi	sp,sp,-32
200164be:	ce22                	sw	s0,28(sp)
200164c0:	1000                	addi	s0,sp,32
200164c2:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:461
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
200164c6:	fec42703          	lw	a4,-20(s0)
200164ca:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200164ce:	00f71763          	bne	a4,a5,200164dc <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:462
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
200164d2:	800007b7          	lui	a5,0x80000
200164d6:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffe150>
200164da:	a011                	j	200164de <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:465
		return 0;
200164dc:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:467
}
200164de:	853e                	mv	a0,a5
200164e0:	4472                	lw	s0,28(sp)
200164e2:	6105                	addi	sp,sp,32
200164e4:	8082                	ret

200164e6 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:470
{
200164e6:	1101                	addi	sp,sp,-32
200164e8:	ce22                	sw	s0,28(sp)
200164ea:	1000                	addi	s0,sp,32
200164ec:	fea42623          	sw	a0,-20(s0)
200164f0:	feb42423          	sw	a1,-24(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:471
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
200164f4:	fec42703          	lw	a4,-20(s0)
200164f8:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200164fc:	00f71763          	bne	a4,a5,2001650a <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:471 (discriminator 1)
20016500:	fe842783          	lw	a5,-24(s0)
20016504:	e399                	bnez	a5,2001650a <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:472
		return 8;
20016506:	47a1                	li	a5,8
20016508:	ae15                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:474
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
2001650a:	fec42703          	lw	a4,-20(s0)
2001650e:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016512:	00f71963          	bne	a4,a5,20016524 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:474 (discriminator 1)
20016516:	fe842703          	lw	a4,-24(s0)
2001651a:	4785                	li	a5,1
2001651c:	00f71463          	bne	a4,a5,20016524 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:475
		return 9;
20016520:	47a5                	li	a5,9
20016522:	ae29                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:477
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20016524:	fec42703          	lw	a4,-20(s0)
20016528:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001652c:	00f71963          	bne	a4,a5,2001653e <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:477 (discriminator 1)
20016530:	fe842703          	lw	a4,-24(s0)
20016534:	4789                	li	a5,2
20016536:	00f71463          	bne	a4,a5,2001653e <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:478
		return 10;
2001653a:	47a9                	li	a5,10
2001653c:	a601                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:480
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
2001653e:	fec42703          	lw	a4,-20(s0)
20016542:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016546:	00f71963          	bne	a4,a5,20016558 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:480 (discriminator 1)
2001654a:	fe842703          	lw	a4,-24(s0)
2001654e:	478d                	li	a5,3
20016550:	00f71463          	bne	a4,a5,20016558 <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:481
		return 11;
20016554:	47ad                	li	a5,11
20016556:	a4dd                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:483
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20016558:	fec42703          	lw	a4,-20(s0)
2001655c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016560:	00f71963          	bne	a4,a5,20016572 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:483 (discriminator 1)
20016564:	fe842703          	lw	a4,-24(s0)
20016568:	4791                	li	a5,4
2001656a:	00f71463          	bne	a4,a5,20016572 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:484
		return 12;
2001656e:	47b1                	li	a5,12
20016570:	a4f1                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:486
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20016572:	fec42703          	lw	a4,-20(s0)
20016576:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001657a:	00f71963          	bne	a4,a5,2001658c <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:486 (discriminator 1)
2001657e:	fe842703          	lw	a4,-24(s0)
20016582:	4795                	li	a5,5
20016584:	00f71463          	bne	a4,a5,2001658c <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:487
		return 13;
20016588:	47b5                	li	a5,13
2001658a:	ac4d                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:489
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
2001658c:	fec42703          	lw	a4,-20(s0)
20016590:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016594:	00f71963          	bne	a4,a5,200165a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:489 (discriminator 1)
20016598:	fe842703          	lw	a4,-24(s0)
2001659c:	4799                	li	a5,6
2001659e:	00f71463          	bne	a4,a5,200165a6 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:490
		return 14;
200165a2:	47b9                	li	a5,14
200165a4:	ac61                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:492
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
200165a6:	fec42703          	lw	a4,-20(s0)
200165aa:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200165ae:	00f71963          	bne	a4,a5,200165c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:492 (discriminator 1)
200165b2:	fe842703          	lw	a4,-24(s0)
200165b6:	479d                	li	a5,7
200165b8:	00f71463          	bne	a4,a5,200165c0 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:493
		return 15;
200165bc:	47bd                	li	a5,15
200165be:	acbd                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:495
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
200165c0:	fec42703          	lw	a4,-20(s0)
200165c4:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200165c8:	00f71963          	bne	a4,a5,200165da <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:495 (discriminator 1)
200165cc:	fe842703          	lw	a4,-24(s0)
200165d0:	47a1                	li	a5,8
200165d2:	00f71463          	bne	a4,a5,200165da <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:496
		return 16;
200165d6:	47c1                	li	a5,16
200165d8:	a495                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:498
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
200165da:	fec42703          	lw	a4,-20(s0)
200165de:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200165e2:	00f71963          	bne	a4,a5,200165f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:498 (discriminator 1)
200165e6:	fe842703          	lw	a4,-24(s0)
200165ea:	47a5                	li	a5,9
200165ec:	00f71463          	bne	a4,a5,200165f4 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:499
		return 17;
200165f0:	47c5                	li	a5,17
200165f2:	a4a9                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:501
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
200165f4:	fec42703          	lw	a4,-20(s0)
200165f8:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200165fc:	00f71963          	bne	a4,a5,2001660e <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:501 (discriminator 1)
20016600:	fe842703          	lw	a4,-24(s0)
20016604:	47a9                	li	a5,10
20016606:	00f71463          	bne	a4,a5,2001660e <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:502
		return 18;
2001660a:	47c9                	li	a5,18
2001660c:	ac05                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:504
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
2001660e:	fec42703          	lw	a4,-20(s0)
20016612:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016616:	00f71963          	bne	a4,a5,20016628 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:504 (discriminator 1)
2001661a:	fe842703          	lw	a4,-24(s0)
2001661e:	47ad                	li	a5,11
20016620:	00f71463          	bne	a4,a5,20016628 <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:505
		return 19;
20016624:	47cd                	li	a5,19
20016626:	ac19                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:507
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20016628:	fec42703          	lw	a4,-20(s0)
2001662c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016630:	00f71963          	bne	a4,a5,20016642 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:507 (discriminator 1)
20016634:	fe842703          	lw	a4,-24(s0)
20016638:	47b1                	li	a5,12
2001663a:	00f71463          	bne	a4,a5,20016642 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:508
		return 20;
2001663e:	47d1                	li	a5,20
20016640:	aaf5                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:510
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20016642:	fec42703          	lw	a4,-20(s0)
20016646:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001664a:	00f71963          	bne	a4,a5,2001665c <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:510 (discriminator 1)
2001664e:	fe842703          	lw	a4,-24(s0)
20016652:	47b5                	li	a5,13
20016654:	00f71463          	bne	a4,a5,2001665c <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:511
		return 21;
20016658:	47d5                	li	a5,21
2001665a:	a2cd                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:513
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
2001665c:	fec42703          	lw	a4,-20(s0)
20016660:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016664:	00f71963          	bne	a4,a5,20016676 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:513 (discriminator 1)
20016668:	fe842703          	lw	a4,-24(s0)
2001666c:	47b9                	li	a5,14
2001666e:	00f71463          	bne	a4,a5,20016676 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:514
		return 22;
20016672:	47d9                	li	a5,22
20016674:	a2e1                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:516
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20016676:	fec42703          	lw	a4,-20(s0)
2001667a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001667e:	00f71963          	bne	a4,a5,20016690 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:516 (discriminator 1)
20016682:	fe842703          	lw	a4,-24(s0)
20016686:	47bd                	li	a5,15
20016688:	00f71463          	bne	a4,a5,20016690 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:517
		return 23;
2001668c:	47dd                	li	a5,23
2001668e:	a27d                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:519
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 16))) {
20016690:	fec42703          	lw	a4,-20(s0)
20016694:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016698:	00f71963          	bne	a4,a5,200166aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:519 (discriminator 1)
2001669c:	fe842703          	lw	a4,-24(s0)
200166a0:	47c1                	li	a5,16
200166a2:	00f71463          	bne	a4,a5,200166aa <__metal_driver_sifive_gpio0_interrupt_lines+0x1c4>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:520
		return 24;
200166a6:	47e1                	li	a5,24
200166a8:	aa51                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:522
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 17))) {
200166aa:	fec42703          	lw	a4,-20(s0)
200166ae:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200166b2:	00f71963          	bne	a4,a5,200166c4 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:522 (discriminator 1)
200166b6:	fe842703          	lw	a4,-24(s0)
200166ba:	47c5                	li	a5,17
200166bc:	00f71463          	bne	a4,a5,200166c4 <__metal_driver_sifive_gpio0_interrupt_lines+0x1de>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:523
		return 25;
200166c0:	47e5                	li	a5,25
200166c2:	aaad                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:525
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 18))) {
200166c4:	fec42703          	lw	a4,-20(s0)
200166c8:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200166cc:	00f71963          	bne	a4,a5,200166de <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:525 (discriminator 1)
200166d0:	fe842703          	lw	a4,-24(s0)
200166d4:	47c9                	li	a5,18
200166d6:	00f71463          	bne	a4,a5,200166de <__metal_driver_sifive_gpio0_interrupt_lines+0x1f8>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:526
		return 26;
200166da:	47e9                	li	a5,26
200166dc:	a285                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:528
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 19))) {
200166de:	fec42703          	lw	a4,-20(s0)
200166e2:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200166e6:	00f71963          	bne	a4,a5,200166f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:528 (discriminator 1)
200166ea:	fe842703          	lw	a4,-24(s0)
200166ee:	47cd                	li	a5,19
200166f0:	00f71463          	bne	a4,a5,200166f8 <__metal_driver_sifive_gpio0_interrupt_lines+0x212>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:529
		return 27;
200166f4:	47ed                	li	a5,27
200166f6:	a299                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:531
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 20))) {
200166f8:	fec42703          	lw	a4,-20(s0)
200166fc:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016700:	00f71963          	bne	a4,a5,20016712 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:531 (discriminator 1)
20016704:	fe842703          	lw	a4,-24(s0)
20016708:	47d1                	li	a5,20
2001670a:	00f71463          	bne	a4,a5,20016712 <__metal_driver_sifive_gpio0_interrupt_lines+0x22c>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:532
		return 28;
2001670e:	47f1                	li	a5,28
20016710:	a235                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:534
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 21))) {
20016712:	fec42703          	lw	a4,-20(s0)
20016716:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001671a:	00f71963          	bne	a4,a5,2001672c <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:534 (discriminator 1)
2001671e:	fe842703          	lw	a4,-24(s0)
20016722:	47d5                	li	a5,21
20016724:	00f71463          	bne	a4,a5,2001672c <__metal_driver_sifive_gpio0_interrupt_lines+0x246>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:535
		return 29;
20016728:	47f5                	li	a5,29
2001672a:	aa09                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:537
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 22))) {
2001672c:	fec42703          	lw	a4,-20(s0)
20016730:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016734:	00f71963          	bne	a4,a5,20016746 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:537 (discriminator 1)
20016738:	fe842703          	lw	a4,-24(s0)
2001673c:	47d9                	li	a5,22
2001673e:	00f71463          	bne	a4,a5,20016746 <__metal_driver_sifive_gpio0_interrupt_lines+0x260>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:538
		return 30;
20016742:	47f9                	li	a5,30
20016744:	a8e5                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:540
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 23))) {
20016746:	fec42703          	lw	a4,-20(s0)
2001674a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001674e:	00f71963          	bne	a4,a5,20016760 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:540 (discriminator 1)
20016752:	fe842703          	lw	a4,-24(s0)
20016756:	47dd                	li	a5,23
20016758:	00f71463          	bne	a4,a5,20016760 <__metal_driver_sifive_gpio0_interrupt_lines+0x27a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:541
		return 31;
2001675c:	47fd                	li	a5,31
2001675e:	a8f9                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:543
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 24))) {
20016760:	fec42703          	lw	a4,-20(s0)
20016764:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016768:	00f71a63          	bne	a4,a5,2001677c <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:543 (discriminator 1)
2001676c:	fe842703          	lw	a4,-24(s0)
20016770:	47e1                	li	a5,24
20016772:	00f71563          	bne	a4,a5,2001677c <__metal_driver_sifive_gpio0_interrupt_lines+0x296>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:544
		return 32;
20016776:	02000793          	li	a5,32
2001677a:	a0c9                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:546
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 25))) {
2001677c:	fec42703          	lw	a4,-20(s0)
20016780:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016784:	00f71a63          	bne	a4,a5,20016798 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:546 (discriminator 1)
20016788:	fe842703          	lw	a4,-24(s0)
2001678c:	47e5                	li	a5,25
2001678e:	00f71563          	bne	a4,a5,20016798 <__metal_driver_sifive_gpio0_interrupt_lines+0x2b2>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:547
		return 33;
20016792:	02100793          	li	a5,33
20016796:	a05d                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:549
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 26))) {
20016798:	fec42703          	lw	a4,-20(s0)
2001679c:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200167a0:	00f71a63          	bne	a4,a5,200167b4 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:549 (discriminator 1)
200167a4:	fe842703          	lw	a4,-24(s0)
200167a8:	47e9                	li	a5,26
200167aa:	00f71563          	bne	a4,a5,200167b4 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ce>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:550
		return 34;
200167ae:	02200793          	li	a5,34
200167b2:	a069                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:552
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 27))) {
200167b4:	fec42703          	lw	a4,-20(s0)
200167b8:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200167bc:	00f71a63          	bne	a4,a5,200167d0 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:552 (discriminator 1)
200167c0:	fe842703          	lw	a4,-24(s0)
200167c4:	47ed                	li	a5,27
200167c6:	00f71563          	bne	a4,a5,200167d0 <__metal_driver_sifive_gpio0_interrupt_lines+0x2ea>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:553
		return 35;
200167ca:	02300793          	li	a5,35
200167ce:	a0bd                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:555
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 28))) {
200167d0:	fec42703          	lw	a4,-20(s0)
200167d4:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200167d8:	00f71a63          	bne	a4,a5,200167ec <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:555 (discriminator 1)
200167dc:	fe842703          	lw	a4,-24(s0)
200167e0:	47f1                	li	a5,28
200167e2:	00f71563          	bne	a4,a5,200167ec <__metal_driver_sifive_gpio0_interrupt_lines+0x306>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:556
		return 36;
200167e6:	02400793          	li	a5,36
200167ea:	a889                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:558
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 29))) {
200167ec:	fec42703          	lw	a4,-20(s0)
200167f0:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
200167f4:	00f71963          	bne	a4,a5,20016806 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:558 (discriminator 1)
200167f8:	fe842703          	lw	a4,-24(s0)
200167fc:	47f5                	li	a5,29
200167fe:	00f71463          	bne	a4,a5,20016806 <__metal_driver_sifive_gpio0_interrupt_lines+0x320>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:559
		return 27;
20016802:	47ed                	li	a5,27
20016804:	a825                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:561
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 30))) {
20016806:	fec42703          	lw	a4,-20(s0)
2001680a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001680e:	00f71963          	bne	a4,a5,20016820 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:561 (discriminator 1)
20016812:	fe842703          	lw	a4,-24(s0)
20016816:	47f9                	li	a5,30
20016818:	00f71463          	bne	a4,a5,20016820 <__metal_driver_sifive_gpio0_interrupt_lines+0x33a>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:562
		return 28;
2001681c:	47f1                	li	a5,28
2001681e:	a839                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:564
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 31))) {
20016820:	fec42703          	lw	a4,-20(s0)
20016824:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20016828:	00f71963          	bne	a4,a5,2001683a <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:564 (discriminator 1)
2001682c:	fe842703          	lw	a4,-24(s0)
20016830:	47fd                	li	a5,31
20016832:	00f71463          	bne	a4,a5,2001683a <__metal_driver_sifive_gpio0_interrupt_lines+0x354>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:565
		return 29;
20016836:	47f5                	li	a5,29
20016838:	a011                	j	2001683c <__metal_driver_sifive_gpio0_interrupt_lines+0x356>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:568
		return 0;
2001683a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:570
}
2001683c:	853e                	mv	a0,a5
2001683e:	4472                	lw	s0,28(sp)
20016840:	6105                	addi	sp,sp,32
20016842:	8082                	ret

20016844 <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20016844:	7179                	addi	sp,sp,-48
20016846:	d606                	sw	ra,44(sp)
20016848:	d422                	sw	s0,40(sp)
2001684a:	1800                	addi	s0,sp,48
2001684c:	fca42e23          	sw	a0,-36(s0)
20016850:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016854:	fdc42503          	lw	a0,-36(s0)
20016858:	c3fff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
2001685c:	87aa                	mv	a5,a0
2001685e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20016862:	fec42783          	lw	a5,-20(s0)
20016866:	0791                	addi	a5,a5,4
20016868:	4398                	lw	a4,0(a5)
2001686a:	fd842783          	lw	a5,-40(s0)
2001686e:	fec42683          	lw	a3,-20(s0)
20016872:	0691                	addi	a3,a3,4
20016874:	8fd9                	or	a5,a5,a4
20016876:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20016878:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:20
}
2001687a:	853e                	mv	a0,a5
2001687c:	50b2                	lw	ra,44(sp)
2001687e:	5422                	lw	s0,40(sp)
20016880:	6145                	addi	sp,sp,48
20016882:	8082                	ret

20016884 <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20016884:	7179                	addi	sp,sp,-48
20016886:	d606                	sw	ra,44(sp)
20016888:	d422                	sw	s0,40(sp)
2001688a:	1800                	addi	s0,sp,48
2001688c:	fca42e23          	sw	a0,-36(s0)
20016890:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016894:	fdc42503          	lw	a0,-36(s0)
20016898:	bffff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
2001689c:	87aa                	mv	a5,a0
2001689e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
200168a2:	fec42783          	lw	a5,-20(s0)
200168a6:	0791                	addi	a5,a5,4
200168a8:	439c                	lw	a5,0(a5)
200168aa:	fd842703          	lw	a4,-40(s0)
200168ae:	fff74713          	not	a4,a4
200168b2:	86ba                	mv	a3,a4
200168b4:	fec42703          	lw	a4,-20(s0)
200168b8:	0711                	addi	a4,a4,4
200168ba:	8ff5                	and	a5,a5,a3
200168bc:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
200168be:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:30
}
200168c0:	853e                	mv	a0,a5
200168c2:	50b2                	lw	ra,44(sp)
200168c4:	5422                	lw	s0,40(sp)
200168c6:	6145                	addi	sp,sp,48
200168c8:	8082                	ret

200168ca <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
200168ca:	7179                	addi	sp,sp,-48
200168cc:	d606                	sw	ra,44(sp)
200168ce:	d422                	sw	s0,40(sp)
200168d0:	1800                	addi	s0,sp,48
200168d2:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200168d6:	fdc42503          	lw	a0,-36(s0)
200168da:	bbdff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
200168de:	87aa                	mv	a5,a0
200168e0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
200168e4:	fec42783          	lw	a5,-20(s0)
200168e8:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
200168ea:	853e                	mv	a0,a5
200168ec:	50b2                	lw	ra,44(sp)
200168ee:	5422                	lw	s0,40(sp)
200168f0:	6145                	addi	sp,sp,48
200168f2:	8082                	ret

200168f4 <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
200168f4:	7179                	addi	sp,sp,-48
200168f6:	d606                	sw	ra,44(sp)
200168f8:	d422                	sw	s0,40(sp)
200168fa:	1800                	addi	s0,sp,48
200168fc:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016900:	fdc42503          	lw	a0,-36(s0)
20016904:	b93ff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
20016908:	87aa                	mv	a5,a0
2001690a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
2001690e:	fec42783          	lw	a5,-20(s0)
20016912:	07b1                	addi	a5,a5,12
20016914:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
20016916:	853e                	mv	a0,a5
20016918:	50b2                	lw	ra,44(sp)
2001691a:	5422                	lw	s0,40(sp)
2001691c:	6145                	addi	sp,sp,48
2001691e:	8082                	ret

20016920 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20016920:	7179                	addi	sp,sp,-48
20016922:	d606                	sw	ra,44(sp)
20016924:	d422                	sw	s0,40(sp)
20016926:	1800                	addi	s0,sp,48
20016928:	fca42e23          	sw	a0,-36(s0)
2001692c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016930:	fdc42503          	lw	a0,-36(s0)
20016934:	b63ff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
20016938:	87aa                	mv	a5,a0
2001693a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
2001693e:	fec42783          	lw	a5,-20(s0)
20016942:	07a1                	addi	a5,a5,8
20016944:	439c                	lw	a5,0(a5)
20016946:	fd842703          	lw	a4,-40(s0)
2001694a:	fff74713          	not	a4,a4
2001694e:	86ba                	mv	a3,a4
20016950:	fec42703          	lw	a4,-20(s0)
20016954:	0721                	addi	a4,a4,8
20016956:	8ff5                	and	a5,a5,a3
20016958:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
2001695a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:54
}
2001695c:	853e                	mv	a0,a5
2001695e:	50b2                	lw	ra,44(sp)
20016960:	5422                	lw	s0,40(sp)
20016962:	6145                	addi	sp,sp,48
20016964:	8082                	ret

20016966 <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
20016966:	7179                	addi	sp,sp,-48
20016968:	d606                	sw	ra,44(sp)
2001696a:	d422                	sw	s0,40(sp)
2001696c:	1800                	addi	s0,sp,48
2001696e:	fca42e23          	sw	a0,-36(s0)
20016972:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016976:	fdc42503          	lw	a0,-36(s0)
2001697a:	b1dff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
2001697e:	87aa                	mv	a5,a0
20016980:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
20016984:	fec42783          	lw	a5,-20(s0)
20016988:	07a1                	addi	a5,a5,8
2001698a:	4398                	lw	a4,0(a5)
2001698c:	fd842783          	lw	a5,-40(s0)
20016990:	fec42683          	lw	a3,-20(s0)
20016994:	06a1                	addi	a3,a3,8
20016996:	8fd9                	or	a5,a5,a4
20016998:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
2001699a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:64
}
2001699c:	853e                	mv	a0,a5
2001699e:	50b2                	lw	ra,44(sp)
200169a0:	5422                	lw	s0,40(sp)
200169a2:	6145                	addi	sp,sp,48
200169a4:	8082                	ret

200169a6 <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
200169a6:	7179                	addi	sp,sp,-48
200169a8:	d606                	sw	ra,44(sp)
200169aa:	d422                	sw	s0,40(sp)
200169ac:	1800                	addi	s0,sp,48
200169ae:	fca42e23          	sw	a0,-36(s0)
200169b2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200169b6:	fdc42503          	lw	a0,-36(s0)
200169ba:	addff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
200169be:	87aa                	mv	a5,a0
200169c0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
200169c4:	fec42783          	lw	a5,-20(s0)
200169c8:	07b1                	addi	a5,a5,12
200169ca:	4398                	lw	a4,0(a5)
200169cc:	fd842783          	lw	a5,-40(s0)
200169d0:	fec42683          	lw	a3,-20(s0)
200169d4:	06b1                	addi	a3,a3,12
200169d6:	8fd9                	or	a5,a5,a4
200169d8:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
200169da:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:74
}
200169dc:	853e                	mv	a0,a5
200169de:	50b2                	lw	ra,44(sp)
200169e0:	5422                	lw	s0,40(sp)
200169e2:	6145                	addi	sp,sp,48
200169e4:	8082                	ret

200169e6 <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
200169e6:	7179                	addi	sp,sp,-48
200169e8:	d606                	sw	ra,44(sp)
200169ea:	d422                	sw	s0,40(sp)
200169ec:	1800                	addi	s0,sp,48
200169ee:	fca42e23          	sw	a0,-36(s0)
200169f2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
200169f6:	fdc42503          	lw	a0,-36(s0)
200169fa:	a9dff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
200169fe:	87aa                	mv	a5,a0
20016a00:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20016a04:	fec42783          	lw	a5,-20(s0)
20016a08:	07b1                	addi	a5,a5,12
20016a0a:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20016a0c:	fd842703          	lw	a4,-40(s0)
20016a10:	fff74713          	not	a4,a4
20016a14:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
20016a16:	fec42703          	lw	a4,-20(s0)
20016a1a:	0731                	addi	a4,a4,12
20016a1c:	8ff5                	and	a5,a5,a3
20016a1e:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20016a20:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:84
}
20016a22:	853e                	mv	a0,a5
20016a24:	50b2                	lw	ra,44(sp)
20016a26:	5422                	lw	s0,40(sp)
20016a28:	6145                	addi	sp,sp,48
20016a2a:	8082                	ret

20016a2c <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20016a2c:	7179                	addi	sp,sp,-48
20016a2e:	d606                	sw	ra,44(sp)
20016a30:	d422                	sw	s0,40(sp)
20016a32:	1800                	addi	s0,sp,48
20016a34:	fca42e23          	sw	a0,-36(s0)
20016a38:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016a3c:	fdc42503          	lw	a0,-36(s0)
20016a40:	a57ff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
20016a44:	87aa                	mv	a5,a0
20016a46:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20016a4a:	fec42783          	lw	a5,-20(s0)
20016a4e:	07b1                	addi	a5,a5,12
20016a50:	4398                	lw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20016a52:	fd842783          	lw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20016a56:	fec42683          	lw	a3,-20(s0)
20016a5a:	06b1                	addi	a3,a3,12
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20016a5c:	8fb9                	xor	a5,a5,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20016a5e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20016a60:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:96
}
20016a62:	853e                	mv	a0,a5
20016a64:	50b2                	lw	ra,44(sp)
20016a66:	5422                	lw	s0,40(sp)
20016a68:	6145                	addi	sp,sp,48
20016a6a:	8082                	ret

20016a6c <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
20016a6c:	7179                	addi	sp,sp,-48
20016a6e:	d606                	sw	ra,44(sp)
20016a70:	d422                	sw	s0,40(sp)
20016a72:	1800                	addi	s0,sp,48
20016a74:	fca42e23          	sw	a0,-36(s0)
20016a78:	fcb42c23          	sw	a1,-40(s0)
20016a7c:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016a80:	fdc42503          	lw	a0,-36(s0)
20016a84:	a13ff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
20016a88:	87aa                	mv	a5,a0
20016a8a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
20016a8e:	fec42783          	lw	a5,-20(s0)
20016a92:	03c78793          	addi	a5,a5,60
20016a96:	4398                	lw	a4,0(a5)
20016a98:	fd842783          	lw	a5,-40(s0)
20016a9c:	fec42683          	lw	a3,-20(s0)
20016aa0:	03c68693          	addi	a3,a3,60
20016aa4:	8fd9                	or	a5,a5,a4
20016aa6:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
20016aa8:	fec42783          	lw	a5,-20(s0)
20016aac:	03878793          	addi	a5,a5,56
20016ab0:	4398                	lw	a4,0(a5)
20016ab2:	fd442783          	lw	a5,-44(s0)
20016ab6:	fec42683          	lw	a3,-20(s0)
20016aba:	03868693          	addi	a3,a3,56
20016abe:	8fd9                	or	a5,a5,a4
20016ac0:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
20016ac2:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:108
}
20016ac4:	853e                	mv	a0,a5
20016ac6:	50b2                	lw	ra,44(sp)
20016ac8:	5422                	lw	s0,40(sp)
20016aca:	6145                	addi	sp,sp,48
20016acc:	8082                	ret

20016ace <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20016ace:	7179                	addi	sp,sp,-48
20016ad0:	d606                	sw	ra,44(sp)
20016ad2:	d422                	sw	s0,40(sp)
20016ad4:	1800                	addi	s0,sp,48
20016ad6:	fca42e23          	sw	a0,-36(s0)
20016ada:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016ade:	fdc42503          	lw	a0,-36(s0)
20016ae2:	9b5ff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
20016ae6:	87aa                	mv	a5,a0
20016ae8:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20016aec:	fec42783          	lw	a5,-20(s0)
20016af0:	03878793          	addi	a5,a5,56
20016af4:	439c                	lw	a5,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
20016af6:	fd842703          	lw	a4,-40(s0)
20016afa:	fff74713          	not	a4,a4
20016afe:	86ba                	mv	a3,a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20016b00:	fec42703          	lw	a4,-20(s0)
20016b04:	03870713          	addi	a4,a4,56
20016b08:	8ff5                	and	a5,a5,a3
20016b0a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20016b0c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20016b0e:	853e                	mv	a0,a5
20016b10:	50b2                	lw	ra,44(sp)
20016b12:	5422                	lw	s0,40(sp)
20016b14:	6145                	addi	sp,sp,48
20016b16:	8082                	ret

20016b18 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20016b18:	7179                	addi	sp,sp,-48
20016b1a:	d606                	sw	ra,44(sp)
20016b1c:	d422                	sw	s0,40(sp)
20016b1e:	1800                	addi	s0,sp,48
20016b20:	fca42e23          	sw	a0,-36(s0)
20016b24:	fcb42c23          	sw	a1,-40(s0)
20016b28:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016b2c:	fdc42503          	lw	a0,-36(s0)
20016b30:	967ff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
20016b34:	87aa                	mv	a5,a0
20016b36:	fef42623          	sw	a5,-20(s0)
20016b3a:	fd442703          	lw	a4,-44(s0)
20016b3e:	479d                	li	a5,7
20016b40:	1ce7e963          	bltu	a5,a4,20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
20016b44:	fd442783          	lw	a5,-44(s0)
20016b48:	00279713          	slli	a4,a5,0x2
20016b4c:	200117b7          	lui	a5,0x20011
20016b50:	f2478793          	addi	a5,a5,-220 # 20010f24 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
20016b54:	97ba                	add	a5,a5,a4
20016b56:	439c                	lw	a5,0(a5)
20016b58:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20016b5a:	fec42783          	lw	a5,-20(s0)
20016b5e:	07e1                	addi	a5,a5,24
20016b60:	439c                	lw	a5,0(a5)
20016b62:	fd842703          	lw	a4,-40(s0)
20016b66:	fff74713          	not	a4,a4
20016b6a:	86ba                	mv	a3,a4
20016b6c:	fec42703          	lw	a4,-20(s0)
20016b70:	0761                	addi	a4,a4,24
20016b72:	8ff5                	and	a5,a5,a3
20016b74:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
20016b76:	fec42783          	lw	a5,-20(s0)
20016b7a:	02078793          	addi	a5,a5,32
20016b7e:	439c                	lw	a5,0(a5)
20016b80:	fd842703          	lw	a4,-40(s0)
20016b84:	fff74713          	not	a4,a4
20016b88:	86ba                	mv	a3,a4
20016b8a:	fec42703          	lw	a4,-20(s0)
20016b8e:	02070713          	addi	a4,a4,32
20016b92:	8ff5                	and	a5,a5,a3
20016b94:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
20016b96:	fec42783          	lw	a5,-20(s0)
20016b9a:	02878793          	addi	a5,a5,40
20016b9e:	439c                	lw	a5,0(a5)
20016ba0:	fd842703          	lw	a4,-40(s0)
20016ba4:	fff74713          	not	a4,a4
20016ba8:	86ba                	mv	a3,a4
20016baa:	fec42703          	lw	a4,-20(s0)
20016bae:	02870713          	addi	a4,a4,40
20016bb2:	8ff5                	and	a5,a5,a3
20016bb4:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
20016bb6:	fec42783          	lw	a5,-20(s0)
20016bba:	03078793          	addi	a5,a5,48
20016bbe:	439c                	lw	a5,0(a5)
20016bc0:	fd842703          	lw	a4,-40(s0)
20016bc4:	fff74713          	not	a4,a4
20016bc8:	86ba                	mv	a3,a4
20016bca:	fec42703          	lw	a4,-20(s0)
20016bce:	03070713          	addi	a4,a4,48
20016bd2:	8ff5                	and	a5,a5,a3
20016bd4:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
20016bd6:	aa35                	j	20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20016bd8:	fec42783          	lw	a5,-20(s0)
20016bdc:	07e1                	addi	a5,a5,24
20016bde:	4398                	lw	a4,0(a5)
20016be0:	fd842783          	lw	a5,-40(s0)
20016be4:	fec42683          	lw	a3,-20(s0)
20016be8:	06e1                	addi	a3,a3,24
20016bea:	8fd9                	or	a5,a5,a4
20016bec:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20016bee:	a215                	j	20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20016bf0:	fec42783          	lw	a5,-20(s0)
20016bf4:	02078793          	addi	a5,a5,32
20016bf8:	4398                	lw	a4,0(a5)
20016bfa:	fd842783          	lw	a5,-40(s0)
20016bfe:	fec42683          	lw	a3,-20(s0)
20016c02:	02068693          	addi	a3,a3,32
20016c06:	8fd9                	or	a5,a5,a4
20016c08:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20016c0a:	a221                	j	20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20016c0c:	fec42783          	lw	a5,-20(s0)
20016c10:	07e1                	addi	a5,a5,24
20016c12:	4398                	lw	a4,0(a5)
20016c14:	fd842783          	lw	a5,-40(s0)
20016c18:	fec42683          	lw	a3,-20(s0)
20016c1c:	06e1                	addi	a3,a3,24
20016c1e:	8fd9                	or	a5,a5,a4
20016c20:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20016c22:	fec42783          	lw	a5,-20(s0)
20016c26:	02078793          	addi	a5,a5,32
20016c2a:	4398                	lw	a4,0(a5)
20016c2c:	fd842783          	lw	a5,-40(s0)
20016c30:	fec42683          	lw	a3,-20(s0)
20016c34:	02068693          	addi	a3,a3,32
20016c38:	8fd9                	or	a5,a5,a4
20016c3a:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20016c3c:	a8d9                	j	20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016c3e:	fec42783          	lw	a5,-20(s0)
20016c42:	02878793          	addi	a5,a5,40
20016c46:	4398                	lw	a4,0(a5)
20016c48:	fd842783          	lw	a5,-40(s0)
20016c4c:	fec42683          	lw	a3,-20(s0)
20016c50:	02868693          	addi	a3,a3,40
20016c54:	8fd9                	or	a5,a5,a4
20016c56:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20016c58:	a86d                	j	20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20016c5a:	fec42783          	lw	a5,-20(s0)
20016c5e:	03078793          	addi	a5,a5,48
20016c62:	4398                	lw	a4,0(a5)
20016c64:	fd842783          	lw	a5,-40(s0)
20016c68:	fec42683          	lw	a3,-20(s0)
20016c6c:	03068693          	addi	a3,a3,48
20016c70:	8fd9                	or	a5,a5,a4
20016c72:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
20016c74:	a879                	j	20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016c76:	fec42783          	lw	a5,-20(s0)
20016c7a:	02878793          	addi	a5,a5,40
20016c7e:	4398                	lw	a4,0(a5)
20016c80:	fd842783          	lw	a5,-40(s0)
20016c84:	fec42683          	lw	a3,-20(s0)
20016c88:	02868693          	addi	a3,a3,40
20016c8c:	8fd9                	or	a5,a5,a4
20016c8e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20016c90:	fec42783          	lw	a5,-20(s0)
20016c94:	03078793          	addi	a5,a5,48
20016c98:	4398                	lw	a4,0(a5)
20016c9a:	fd842783          	lw	a5,-40(s0)
20016c9e:	fec42683          	lw	a3,-20(s0)
20016ca2:	03068693          	addi	a3,a3,48
20016ca6:	8fd9                	or	a5,a5,a4
20016ca8:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
20016caa:	a0a5                	j	20016d12 <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20016cac:	fec42783          	lw	a5,-20(s0)
20016cb0:	07e1                	addi	a5,a5,24
20016cb2:	4398                	lw	a4,0(a5)
20016cb4:	fd842783          	lw	a5,-40(s0)
20016cb8:	fec42683          	lw	a3,-20(s0)
20016cbc:	06e1                	addi	a3,a3,24
20016cbe:	8fd9                	or	a5,a5,a4
20016cc0:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20016cc2:	fec42783          	lw	a5,-20(s0)
20016cc6:	02078793          	addi	a5,a5,32
20016cca:	4398                	lw	a4,0(a5)
20016ccc:	fd842783          	lw	a5,-40(s0)
20016cd0:	fec42683          	lw	a3,-20(s0)
20016cd4:	02068693          	addi	a3,a3,32
20016cd8:	8fd9                	or	a5,a5,a4
20016cda:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20016cdc:	fec42783          	lw	a5,-20(s0)
20016ce0:	02878793          	addi	a5,a5,40
20016ce4:	4398                	lw	a4,0(a5)
20016ce6:	fd842783          	lw	a5,-40(s0)
20016cea:	fec42683          	lw	a3,-20(s0)
20016cee:	02868693          	addi	a3,a3,40
20016cf2:	8fd9                	or	a5,a5,a4
20016cf4:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20016cf6:	fec42783          	lw	a5,-20(s0)
20016cfa:	03078793          	addi	a5,a5,48
20016cfe:	4398                	lw	a4,0(a5)
20016d00:	fd842783          	lw	a5,-40(s0)
20016d04:	fec42683          	lw	a3,-20(s0)
20016d08:	03068693          	addi	a3,a3,48
20016d0c:	8fd9                	or	a5,a5,a4
20016d0e:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20016d10:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
20016d12:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:175
}
20016d14:	853e                	mv	a0,a5
20016d16:	50b2                	lw	ra,44(sp)
20016d18:	5422                	lw	s0,40(sp)
20016d1a:	6145                	addi	sp,sp,48
20016d1c:	8082                	ret

20016d1e <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20016d1e:	7179                	addi	sp,sp,-48
20016d20:	d606                	sw	ra,44(sp)
20016d22:	d422                	sw	s0,40(sp)
20016d24:	1800                	addi	s0,sp,48
20016d26:	fca42e23          	sw	a0,-36(s0)
20016d2a:	fcb42c23          	sw	a1,-40(s0)
20016d2e:	fcc42a23          	sw	a2,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20016d32:	fdc42503          	lw	a0,-36(s0)
20016d36:	f60ff0ef          	jal	ra,20016496 <__metal_driver_sifive_gpio0_base>
20016d3a:	87aa                	mv	a5,a0
20016d3c:	fef42623          	sw	a5,-20(s0)
20016d40:	fd442703          	lw	a4,-44(s0)
20016d44:	479d                	li	a5,7
20016d46:	14e7ea63          	bltu	a5,a4,20016e9a <__metal_driver_sifive_gpio0_clear_int+0x17c>
20016d4a:	fd442783          	lw	a5,-44(s0)
20016d4e:	00279713          	slli	a4,a5,0x2
20016d52:	200117b7          	lui	a5,0x20011
20016d56:	f4478793          	addi	a5,a5,-188 # 20010f44 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20016d5a:	97ba                	add	a5,a5,a4
20016d5c:	439c                	lw	a5,0(a5)
20016d5e:	8782                	jr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016d60:	fec42783          	lw	a5,-20(s0)
20016d64:	07f1                	addi	a5,a5,28
20016d66:	4398                	lw	a4,0(a5)
20016d68:	fd842783          	lw	a5,-40(s0)
20016d6c:	fec42683          	lw	a3,-20(s0)
20016d70:	06f1                	addi	a3,a3,28
20016d72:	8fd9                	or	a5,a5,a4
20016d74:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
20016d76:	a215                	j	20016e9a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016d78:	fec42783          	lw	a5,-20(s0)
20016d7c:	02478793          	addi	a5,a5,36
20016d80:	4398                	lw	a4,0(a5)
20016d82:	fd842783          	lw	a5,-40(s0)
20016d86:	fec42683          	lw	a3,-20(s0)
20016d8a:	02468693          	addi	a3,a3,36
20016d8e:	8fd9                	or	a5,a5,a4
20016d90:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
20016d92:	a221                	j	20016e9a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016d94:	fec42783          	lw	a5,-20(s0)
20016d98:	07f1                	addi	a5,a5,28
20016d9a:	4398                	lw	a4,0(a5)
20016d9c:	fd842783          	lw	a5,-40(s0)
20016da0:	fec42683          	lw	a3,-20(s0)
20016da4:	06f1                	addi	a3,a3,28
20016da6:	8fd9                	or	a5,a5,a4
20016da8:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016daa:	fec42783          	lw	a5,-20(s0)
20016dae:	02478793          	addi	a5,a5,36
20016db2:	4398                	lw	a4,0(a5)
20016db4:	fd842783          	lw	a5,-40(s0)
20016db8:	fec42683          	lw	a3,-20(s0)
20016dbc:	02468693          	addi	a3,a3,36
20016dc0:	8fd9                	or	a5,a5,a4
20016dc2:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
20016dc4:	a8d9                	j	20016e9a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016dc6:	fec42783          	lw	a5,-20(s0)
20016dca:	02c78793          	addi	a5,a5,44
20016dce:	4398                	lw	a4,0(a5)
20016dd0:	fd842783          	lw	a5,-40(s0)
20016dd4:	fec42683          	lw	a3,-20(s0)
20016dd8:	02c68693          	addi	a3,a3,44
20016ddc:	8fd9                	or	a5,a5,a4
20016dde:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20016de0:	a86d                	j	20016e9a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016de2:	fec42783          	lw	a5,-20(s0)
20016de6:	03478793          	addi	a5,a5,52
20016dea:	4398                	lw	a4,0(a5)
20016dec:	fd842783          	lw	a5,-40(s0)
20016df0:	fec42683          	lw	a3,-20(s0)
20016df4:	03468693          	addi	a3,a3,52
20016df8:	8fd9                	or	a5,a5,a4
20016dfa:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20016dfc:	a879                	j	20016e9a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016dfe:	fec42783          	lw	a5,-20(s0)
20016e02:	02c78793          	addi	a5,a5,44
20016e06:	4398                	lw	a4,0(a5)
20016e08:	fd842783          	lw	a5,-40(s0)
20016e0c:	fec42683          	lw	a3,-20(s0)
20016e10:	02c68693          	addi	a3,a3,44
20016e14:	8fd9                	or	a5,a5,a4
20016e16:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016e18:	fec42783          	lw	a5,-20(s0)
20016e1c:	03478793          	addi	a5,a5,52
20016e20:	4398                	lw	a4,0(a5)
20016e22:	fd842783          	lw	a5,-40(s0)
20016e26:	fec42683          	lw	a3,-20(s0)
20016e2a:	03468693          	addi	a3,a3,52
20016e2e:	8fd9                	or	a5,a5,a4
20016e30:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
20016e32:	a0a5                	j	20016e9a <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20016e34:	fec42783          	lw	a5,-20(s0)
20016e38:	07f1                	addi	a5,a5,28
20016e3a:	4398                	lw	a4,0(a5)
20016e3c:	fd842783          	lw	a5,-40(s0)
20016e40:	fec42683          	lw	a3,-20(s0)
20016e44:	06f1                	addi	a3,a3,28
20016e46:	8fd9                	or	a5,a5,a4
20016e48:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20016e4a:	fec42783          	lw	a5,-20(s0)
20016e4e:	02478793          	addi	a5,a5,36
20016e52:	4398                	lw	a4,0(a5)
20016e54:	fd842783          	lw	a5,-40(s0)
20016e58:	fec42683          	lw	a3,-20(s0)
20016e5c:	02468693          	addi	a3,a3,36
20016e60:	8fd9                	or	a5,a5,a4
20016e62:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20016e64:	fec42783          	lw	a5,-20(s0)
20016e68:	02c78793          	addi	a5,a5,44
20016e6c:	4398                	lw	a4,0(a5)
20016e6e:	fd842783          	lw	a5,-40(s0)
20016e72:	fec42683          	lw	a3,-20(s0)
20016e76:	02c68693          	addi	a3,a3,44
20016e7a:	8fd9                	or	a5,a5,a4
20016e7c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20016e7e:	fec42783          	lw	a5,-20(s0)
20016e82:	03478793          	addi	a5,a5,52
20016e86:	4398                	lw	a4,0(a5)
20016e88:	fd842783          	lw	a5,-40(s0)
20016e8c:	fec42683          	lw	a3,-20(s0)
20016e90:	03468693          	addi	a3,a3,52
20016e94:	8fd9                	or	a5,a5,a4
20016e96:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
20016e98:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
20016e9a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:222
}
20016e9c:	853e                	mv	a0,a5
20016e9e:	50b2                	lw	ra,44(sp)
20016ea0:	5422                	lw	s0,40(sp)
20016ea2:	6145                	addi	sp,sp,48
20016ea4:	8082                	ret

20016ea6 <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
20016ea6:	1101                	addi	sp,sp,-32
20016ea8:	ce06                	sw	ra,28(sp)
20016eaa:	cc22                	sw	s0,24(sp)
20016eac:	1000                	addi	s0,sp,32
20016eae:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
20016eb2:	fec42503          	lw	a0,-20(s0)
20016eb6:	e06ff0ef          	jal	ra,200164bc <__metal_driver_sifive_gpio0_interrupt_parent>
20016eba:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:227
}
20016ebc:	853e                	mv	a0,a5
20016ebe:	40f2                	lw	ra,28(sp)
20016ec0:	4462                	lw	s0,24(sp)
20016ec2:	6105                	addi	sp,sp,32
20016ec4:	8082                	ret

20016ec6 <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
20016ec6:	7179                	addi	sp,sp,-48
20016ec8:	d606                	sw	ra,44(sp)
20016eca:	d422                	sw	s0,40(sp)
20016ecc:	1800                	addi	s0,sp,48
20016ece:	fca42e23          	sw	a0,-36(s0)
20016ed2:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
20016ed6:	fd842583          	lw	a1,-40(s0)
20016eda:	fdc42503          	lw	a0,-36(s0)
20016ede:	e08ff0ef          	jal	ra,200164e6 <__metal_driver_sifive_gpio0_interrupt_lines>
20016ee2:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
20016ee6:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20016eea:	853e                	mv	a0,a5
20016eec:	50b2                	lw	ra,44(sp)
20016eee:	5422                	lw	s0,40(sp)
20016ef0:	6145                	addi	sp,sp,48
20016ef2:	8082                	ret

20016ef4 <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1066
{
20016ef4:	1101                	addi	sp,sp,-32
20016ef6:	ce22                	sw	s0,28(sp)
20016ef8:	1000                	addi	s0,sp,32
20016efa:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1067
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016efe:	fec42703          	lw	a4,-20(s0)
20016f02:	800017b7          	lui	a5,0x80001
20016f06:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20016f0a:	00f71563          	bne	a4,a5,20016f14 <__metal_driver_sifive_uart0_control_base+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1068
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
20016f0e:	100137b7          	lui	a5,0x10013
20016f12:	a829                	j	20016f2c <__metal_driver_sifive_uart0_control_base+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1070
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f14:	fec42703          	lw	a4,-20(s0)
20016f18:	800017b7          	lui	a5,0x80001
20016f1c:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xffffe748>
20016f20:	00f71563          	bne	a4,a5,20016f2a <__metal_driver_sifive_uart0_control_base+0x36>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_UART0_10023000_BASE_ADDRESS;
20016f24:	100237b7          	lui	a5,0x10023
20016f28:	a011                	j	20016f2c <__metal_driver_sifive_uart0_control_base+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1074
		return 0;
20016f2a:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1076
}
20016f2c:	853e                	mv	a0,a5
20016f2e:	4472                	lw	s0,28(sp)
20016f30:	6105                	addi	sp,sp,32
20016f32:	8082                	ret

20016f34 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1105
{
20016f34:	1101                	addi	sp,sp,-32
20016f36:	ce22                	sw	s0,28(sp)
20016f38:	1000                	addi	s0,sp,32
20016f3a:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1106
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016f3e:	fec42703          	lw	a4,-20(s0)
20016f42:	800017b7          	lui	a5,0x80001
20016f46:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20016f4a:	00f71763          	bne	a4,a5,20016f58 <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1107
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016f4e:	800007b7          	lui	a5,0x80000
20016f52:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffe150>
20016f56:	a839                	j	20016f74 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1109
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f58:	fec42703          	lw	a4,-20(s0)
20016f5c:	800017b7          	lui	a5,0x80001
20016f60:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xffffe748>
20016f64:	00f71763          	bne	a4,a5,20016f72 <__metal_driver_sifive_uart0_interrupt_parent+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1110
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20016f68:	800007b7          	lui	a5,0x80000
20016f6c:	46078793          	addi	a5,a5,1120 # 80000460 <metal_segment_heap_target_end+0xffffe150>
20016f70:	a011                	j	20016f74 <__metal_driver_sifive_uart0_interrupt_parent+0x40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1113
		return 0;
20016f72:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1115
}
20016f74:	853e                	mv	a0,a5
20016f76:	4472                	lw	s0,28(sp)
20016f78:	6105                	addi	sp,sp,32
20016f7a:	8082                	ret

20016f7c <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1118
{
20016f7c:	1101                	addi	sp,sp,-32
20016f7e:	ce22                	sw	s0,28(sp)
20016f80:	1000                	addi	s0,sp,32
20016f82:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1119
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016f86:	fec42703          	lw	a4,-20(s0)
20016f8a:	800017b7          	lui	a5,0x80001
20016f8e:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20016f92:	00f71463          	bne	a4,a5,20016f9a <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1120
		return 3;
20016f96:	478d                	li	a5,3
20016f98:	a821                	j	20016fb0 <__metal_driver_sifive_uart0_interrupt_line+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1122
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016f9a:	fec42703          	lw	a4,-20(s0)
20016f9e:	800017b7          	lui	a5,0x80001
20016fa2:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xffffe748>
20016fa6:	00f71463          	bne	a4,a5,20016fae <__metal_driver_sifive_uart0_interrupt_line+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1123
		return 4;
20016faa:	4791                	li	a5,4
20016fac:	a011                	j	20016fb0 <__metal_driver_sifive_uart0_interrupt_line+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1126
		return 0;
20016fae:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1128
}
20016fb0:	853e                	mv	a0,a5
20016fb2:	4472                	lw	s0,28(sp)
20016fb4:	6105                	addi	sp,sp,32
20016fb6:	8082                	ret

20016fb8 <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1131
{
20016fb8:	1101                	addi	sp,sp,-32
20016fba:	ce22                	sw	s0,28(sp)
20016fbc:	1000                	addi	s0,sp,32
20016fbe:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1132
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20016fc2:	fec42703          	lw	a4,-20(s0)
20016fc6:	800017b7          	lui	a5,0x80001
20016fca:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20016fce:	00f71763          	bne	a4,a5,20016fdc <__metal_driver_sifive_uart0_clock+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1133
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016fd2:	800017b7          	lui	a5,0x80001
20016fd6:	a9078793          	addi	a5,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xffffe780>
20016fda:	a839                	j	20016ff8 <__metal_driver_sifive_uart0_clock+0x40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1135
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20016fdc:	fec42703          	lw	a4,-20(s0)
20016fe0:	800017b7          	lui	a5,0x80001
20016fe4:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xffffe748>
20016fe8:	00f71763          	bne	a4,a5,20016ff6 <__metal_driver_sifive_uart0_clock+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1136
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20016fec:	800017b7          	lui	a5,0x80001
20016ff0:	a9078793          	addi	a5,a5,-1392 # 80000a90 <metal_segment_heap_target_end+0xffffe780>
20016ff4:	a011                	j	20016ff8 <__metal_driver_sifive_uart0_clock+0x40>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1139
		return 0;
20016ff6:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1141
}
20016ff8:	853e                	mv	a0,a5
20016ffa:	4472                	lw	s0,28(sp)
20016ffc:	6105                	addi	sp,sp,32
20016ffe:	8082                	ret

20017000 <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1144
{
20017000:	1101                	addi	sp,sp,-32
20017002:	ce22                	sw	s0,28(sp)
20017004:	1000                	addi	s0,sp,32
20017006:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1145
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2001700a:	fec42703          	lw	a4,-20(s0)
2001700e:	800017b7          	lui	a5,0x80001
20017012:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20017016:	00f71563          	bne	a4,a5,20017020 <__metal_driver_sifive_uart0_pinmux+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1146
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
2001701a:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
2001701e:	a829                	j	20017038 <__metal_driver_sifive_uart0_pinmux+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1148
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
20017020:	fec42703          	lw	a4,-20(s0)
20017024:	800017b7          	lui	a5,0x80001
20017028:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xffffe748>
2001702c:	00f71563          	bne	a4,a5,20017036 <__metal_driver_sifive_uart0_pinmux+0x36>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1149
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20017030:	81c18793          	addi	a5,gp,-2020 # 80000abc <__metal_dt_gpio_10012000>
20017034:	a011                	j	20017038 <__metal_driver_sifive_uart0_pinmux+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1152
		return 0;
20017036:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1154
}
20017038:	853e                	mv	a0,a5
2001703a:	4472                	lw	s0,28(sp)
2001703c:	6105                	addi	sp,sp,32
2001703e:	8082                	ret

20017040 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1157
{
20017040:	1101                	addi	sp,sp,-32
20017042:	ce22                	sw	s0,28(sp)
20017044:	1000                	addi	s0,sp,32
20017046:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1158
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2001704a:	fec42703          	lw	a4,-20(s0)
2001704e:	800017b7          	lui	a5,0x80001
20017052:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20017056:	00f71463          	bne	a4,a5,2001705e <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1159
		return 0;
2001705a:	4781                	li	a5,0
2001705c:	a821                	j	20017074 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1161
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
2001705e:	fec42703          	lw	a4,-20(s0)
20017062:	800017b7          	lui	a5,0x80001
20017066:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xffffe748>
2001706a:	00f71463          	bne	a4,a5,20017072 <__metal_driver_sifive_uart0_pinmux_output_selector+0x32>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1162
		return 0;
2001706e:	4781                	li	a5,0
20017070:	a011                	j	20017074 <__metal_driver_sifive_uart0_pinmux_output_selector+0x34>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1165
		return 0;
20017072:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1167
}
20017074:	853e                	mv	a0,a5
20017076:	4472                	lw	s0,28(sp)
20017078:	6105                	addi	sp,sp,32
2001707a:	8082                	ret

2001707c <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1170
{
2001707c:	1101                	addi	sp,sp,-32
2001707e:	ce22                	sw	s0,28(sp)
20017080:	1000                	addi	s0,sp,32
20017082:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1171
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20017086:	fec42703          	lw	a4,-20(s0)
2001708a:	800017b7          	lui	a5,0x80001
2001708e:	a3878793          	addi	a5,a5,-1480 # 80000a38 <metal_segment_heap_target_end+0xffffe728>
20017092:	00f71563          	bne	a4,a5,2001709c <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1172
		return 196608;
20017096:	000307b7          	lui	a5,0x30
2001709a:	a829                	j	200170b4 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1174
	else if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10023000) {
2001709c:	fec42703          	lw	a4,-20(s0)
200170a0:	800017b7          	lui	a5,0x80001
200170a4:	a5878793          	addi	a5,a5,-1448 # 80000a58 <metal_segment_heap_target_end+0xffffe748>
200170a8:	00f71563          	bne	a4,a5,200170b2 <__metal_driver_sifive_uart0_pinmux_source_selector+0x36>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1175
		return 8650752;
200170ac:	008407b7          	lui	a5,0x840
200170b0:	a011                	j	200170b4 <__metal_driver_sifive_uart0_pinmux_source_selector+0x38>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1178
		return 0;
200170b2:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:1180
}
200170b4:	853e                	mv	a0,a5
200170b6:	4472                	lw	s0,28(sp)
200170b8:	6105                	addi	sp,sp,32
200170ba:	8082                	ret

200170bc <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
200170bc:	1101                	addi	sp,sp,-32
200170be:	ce06                	sw	ra,28(sp)
200170c0:	cc22                	sw	s0,24(sp)
200170c2:	1000                	addi	s0,sp,32
200170c4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
200170c8:	fec42503          	lw	a0,-20(s0)
200170cc:	e69ff0ef          	jal	ra,20016f34 <__metal_driver_sifive_uart0_interrupt_parent>
200170d0:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:39
}
200170d2:	853e                	mv	a0,a5
200170d4:	40f2                	lw	ra,28(sp)
200170d6:	4462                	lw	s0,24(sp)
200170d8:	6105                	addi	sp,sp,32
200170da:	8082                	ret

200170dc <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
200170dc:	1101                	addi	sp,sp,-32
200170de:	ce06                	sw	ra,28(sp)
200170e0:	cc22                	sw	s0,24(sp)
200170e2:	1000                	addi	s0,sp,32
200170e4:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
200170e8:	fec42503          	lw	a0,-20(s0)
200170ec:	e91ff0ef          	jal	ra,20016f7c <__metal_driver_sifive_uart0_interrupt_line>
200170f0:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:43
}
200170f2:	853e                	mv	a0,a5
200170f4:	40f2                	lw	ra,28(sp)
200170f6:	4462                	lw	s0,24(sp)
200170f8:	6105                	addi	sp,sp,32
200170fa:	8082                	ret

200170fc <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
200170fc:	7179                	addi	sp,sp,-48
200170fe:	d606                	sw	ra,44(sp)
20017100:	d422                	sw	s0,40(sp)
20017102:	1800                	addi	s0,sp,48
20017104:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017108:	fdc42503          	lw	a0,-36(s0)
2001710c:	de9ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
20017110:	87aa                	mv	a5,a0
20017112:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
20017116:	fec42783          	lw	a5,-20(s0)
2001711a:	07c1                	addi	a5,a5,16
2001711c:	439c                	lw	a5,0(a5)
2001711e:	fec42703          	lw	a4,-20(s0)
20017122:	0741                	addi	a4,a4,16
20017124:	0017e793          	ori	a5,a5,1
20017128:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
2001712a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:50
}
2001712c:	853e                	mv	a0,a5
2001712e:	50b2                	lw	ra,44(sp)
20017130:	5422                	lw	s0,40(sp)
20017132:	6145                	addi	sp,sp,48
20017134:	8082                	ret

20017136 <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
20017136:	7179                	addi	sp,sp,-48
20017138:	d606                	sw	ra,44(sp)
2001713a:	d422                	sw	s0,40(sp)
2001713c:	1800                	addi	s0,sp,48
2001713e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017142:	fdc42503          	lw	a0,-36(s0)
20017146:	dafff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
2001714a:	87aa                	mv	a5,a0
2001714c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20017150:	fec42783          	lw	a5,-20(s0)
20017154:	07c1                	addi	a5,a5,16
20017156:	439c                	lw	a5,0(a5)
20017158:	fec42703          	lw	a4,-20(s0)
2001715c:	0741                	addi	a4,a4,16
2001715e:	9bf9                	andi	a5,a5,-2
20017160:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20017162:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:57
}
20017164:	853e                	mv	a0,a5
20017166:	50b2                	lw	ra,44(sp)
20017168:	5422                	lw	s0,40(sp)
2001716a:	6145                	addi	sp,sp,48
2001716c:	8082                	ret

2001716e <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
2001716e:	7179                	addi	sp,sp,-48
20017170:	d606                	sw	ra,44(sp)
20017172:	d422                	sw	s0,40(sp)
20017174:	1800                	addi	s0,sp,48
20017176:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001717a:	fdc42503          	lw	a0,-36(s0)
2001717e:	d77ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
20017182:	87aa                	mv	a5,a0
20017184:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
20017188:	fec42783          	lw	a5,-20(s0)
2001718c:	07c1                	addi	a5,a5,16
2001718e:	439c                	lw	a5,0(a5)
20017190:	fec42703          	lw	a4,-20(s0)
20017194:	0741                	addi	a4,a4,16
20017196:	0027e793          	ori	a5,a5,2
2001719a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
2001719c:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:64
}
2001719e:	853e                	mv	a0,a5
200171a0:	50b2                	lw	ra,44(sp)
200171a2:	5422                	lw	s0,40(sp)
200171a4:	6145                	addi	sp,sp,48
200171a6:	8082                	ret

200171a8 <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
200171a8:	7179                	addi	sp,sp,-48
200171aa:	d606                	sw	ra,44(sp)
200171ac:	d422                	sw	s0,40(sp)
200171ae:	1800                	addi	s0,sp,48
200171b0:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200171b4:	fdc42503          	lw	a0,-36(s0)
200171b8:	d3dff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
200171bc:	87aa                	mv	a5,a0
200171be:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
200171c2:	fec42783          	lw	a5,-20(s0)
200171c6:	07c1                	addi	a5,a5,16
200171c8:	439c                	lw	a5,0(a5)
200171ca:	fec42703          	lw	a4,-20(s0)
200171ce:	0741                	addi	a4,a4,16
200171d0:	9bf5                	andi	a5,a5,-3
200171d2:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
200171d4:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:71
}
200171d6:	853e                	mv	a0,a5
200171d8:	50b2                	lw	ra,44(sp)
200171da:	5422                	lw	s0,40(sp)
200171dc:	6145                	addi	sp,sp,48
200171de:	8082                	ret

200171e0 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
200171e0:	7179                	addi	sp,sp,-48
200171e2:	d606                	sw	ra,44(sp)
200171e4:	d422                	sw	s0,40(sp)
200171e6:	1800                	addi	s0,sp,48
200171e8:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200171ec:	fdc42503          	lw	a0,-36(s0)
200171f0:	d05ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
200171f4:	87aa                	mv	a5,a0
200171f6:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
200171fa:	fec42783          	lw	a5,-20(s0)
200171fe:	439c                	lw	a5,0(a5)
20017200:	83fd                	srli	a5,a5,0x1f
20017202:	0ff7f793          	zext.b	a5,a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:77
}
20017206:	853e                	mv	a0,a5
20017208:	50b2                	lw	ra,44(sp)
2001720a:	5422                	lw	s0,40(sp)
2001720c:	6145                	addi	sp,sp,48
2001720e:	8082                	ret

20017210 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20017210:	7179                	addi	sp,sp,-48
20017212:	d606                	sw	ra,44(sp)
20017214:	d422                	sw	s0,40(sp)
20017216:	1800                	addi	s0,sp,48
20017218:	fca42e23          	sw	a0,-36(s0)
2001721c:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017220:	fdc42503          	lw	a0,-36(s0)
20017224:	cd1ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
20017228:	87aa                	mv	a5,a0
2001722a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
2001722e:	fec42783          	lw	a5,-20(s0)
20017232:	07a1                	addi	a5,a5,8
20017234:	4398                	lw	a4,0(a5)
20017236:	fd842783          	lw	a5,-40(s0)
2001723a:	01079693          	slli	a3,a5,0x10
2001723e:	000707b7          	lui	a5,0x70
20017242:	8ff5                	and	a5,a5,a3
20017244:	fec42683          	lw	a3,-20(s0)
20017248:	06a1                	addi	a3,a3,8
2001724a:	8fd9                	or	a5,a5,a4
2001724c:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
2001724e:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:85
}
20017250:	853e                	mv	a0,a5
20017252:	50b2                	lw	ra,44(sp)
20017254:	5422                	lw	s0,40(sp)
20017256:	6145                	addi	sp,sp,48
20017258:	8082                	ret

2001725a <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
2001725a:	7179                	addi	sp,sp,-48
2001725c:	d606                	sw	ra,44(sp)
2001725e:	d422                	sw	s0,40(sp)
20017260:	1800                	addi	s0,sp,48
20017262:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017266:	fdc42503          	lw	a0,-36(s0)
2001726a:	c8bff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
2001726e:	87aa                	mv	a5,a0
20017270:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
20017274:	fec42783          	lw	a5,-20(s0)
20017278:	07a1                	addi	a5,a5,8
2001727a:	439c                	lw	a5,0(a5)
2001727c:	83c1                	srli	a5,a5,0x10
2001727e:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:91
}
20017280:	853e                	mv	a0,a5
20017282:	50b2                	lw	ra,44(sp)
20017284:	5422                	lw	s0,40(sp)
20017286:	6145                	addi	sp,sp,48
20017288:	8082                	ret

2001728a <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
2001728a:	7179                	addi	sp,sp,-48
2001728c:	d606                	sw	ra,44(sp)
2001728e:	d422                	sw	s0,40(sp)
20017290:	1800                	addi	s0,sp,48
20017292:	fca42e23          	sw	a0,-36(s0)
20017296:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2001729a:	fdc42503          	lw	a0,-36(s0)
2001729e:	c57ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
200172a2:	87aa                	mv	a5,a0
200172a4:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
200172a8:	fec42783          	lw	a5,-20(s0)
200172ac:	07b1                	addi	a5,a5,12
200172ae:	4398                	lw	a4,0(a5)
200172b0:	fd842783          	lw	a5,-40(s0)
200172b4:	01079693          	slli	a3,a5,0x10
200172b8:	000707b7          	lui	a5,0x70
200172bc:	8ff5                	and	a5,a5,a3
200172be:	fec42683          	lw	a3,-20(s0)
200172c2:	06b1                	addi	a3,a3,12
200172c4:	8fd9                	or	a5,a5,a4
200172c6:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
200172c8:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:99
}
200172ca:	853e                	mv	a0,a5
200172cc:	50b2                	lw	ra,44(sp)
200172ce:	5422                	lw	s0,40(sp)
200172d0:	6145                	addi	sp,sp,48
200172d2:	8082                	ret

200172d4 <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
200172d4:	7179                	addi	sp,sp,-48
200172d6:	d606                	sw	ra,44(sp)
200172d8:	d422                	sw	s0,40(sp)
200172da:	1800                	addi	s0,sp,48
200172dc:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
200172e0:	fdc42503          	lw	a0,-36(s0)
200172e4:	c11ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
200172e8:	87aa                	mv	a5,a0
200172ea:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
200172ee:	fec42783          	lw	a5,-20(s0)
200172f2:	07b1                	addi	a5,a5,12
200172f4:	439c                	lw	a5,0(a5)
200172f6:	83c1                	srli	a5,a5,0x10
200172f8:	8b9d                	andi	a5,a5,7
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:105
}
200172fa:	853e                	mv	a0,a5
200172fc:	50b2                	lw	ra,44(sp)
200172fe:	5422                	lw	s0,40(sp)
20017300:	6145                	addi	sp,sp,48
20017302:	8082                	ret

20017304 <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20017304:	7179                	addi	sp,sp,-48
20017306:	d606                	sw	ra,44(sp)
20017308:	d422                	sw	s0,40(sp)
2001730a:	1800                	addi	s0,sp,48
2001730c:	fca42e23          	sw	a0,-36(s0)
20017310:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017314:	fdc42503          	lw	a0,-36(s0)
20017318:	bddff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
2001731c:	87aa                	mv	a5,a0
2001731e:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20017322:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20017324:	fdc42503          	lw	a0,-36(s0)
20017328:	eb9ff0ef          	jal	ra,200171e0 <__metal_driver_sifive_uart0_txready>
2001732c:	87aa                	mv	a5,a0
2001732e:	fbfd                	bnez	a5,20017324 <__metal_driver_sifive_uart0_putc+0x20>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20017330:	fec42783          	lw	a5,-20(s0)
20017334:	fd842703          	lw	a4,-40(s0)
20017338:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
2001733a:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:115
}
2001733c:	853e                	mv	a0,a5
2001733e:	50b2                	lw	ra,44(sp)
20017340:	5422                	lw	s0,40(sp)
20017342:	6145                	addi	sp,sp,48
20017344:	8082                	ret

20017346 <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20017346:	7179                	addi	sp,sp,-48
20017348:	d606                	sw	ra,44(sp)
2001734a:	d422                	sw	s0,40(sp)
2001734c:	1800                	addi	s0,sp,48
2001734e:	fca42e23          	sw	a0,-36(s0)
20017352:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20017356:	fdc42503          	lw	a0,-36(s0)
2001735a:	b9bff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
2001735e:	87aa                	mv	a5,a0
20017360:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20017364:	fec42783          	lw	a5,-20(s0)
20017368:	0791                	addi	a5,a5,4
2001736a:	439c                	lw	a5,0(a5)
2001736c:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20017370:	fe842783          	lw	a5,-24(s0)
20017374:	0007d763          	bgez	a5,20017382 <__metal_driver_sifive_uart0_getc+0x3c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20017378:	fd842783          	lw	a5,-40(s0)
2001737c:	577d                	li	a4,-1
2001737e:	c398                	sw	a4,0(a5)
20017380:	a801                	j	20017390 <__metal_driver_sifive_uart0_getc+0x4a>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20017382:	fe842783          	lw	a5,-24(s0)
20017386:	0ff7f713          	zext.b	a4,a5
2001738a:	fd842783          	lw	a5,-40(s0)
2001738e:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20017390:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:129
}
20017392:	853e                	mv	a0,a5
20017394:	50b2                	lw	ra,44(sp)
20017396:	5422                	lw	s0,40(sp)
20017398:	6145                	addi	sp,sp,48
2001739a:	8082                	ret

2001739c <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
2001739c:	7179                	addi	sp,sp,-48
2001739e:	d622                	sw	s0,44(sp)
200173a0:	1800                	addi	s0,sp,48
200173a2:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200173a6:	fdc42783          	lw	a5,-36(s0)
200173aa:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
200173ae:	fec42783          	lw	a5,-20(s0)
200173b2:	43dc                	lw	a5,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:134
}
200173b4:	853e                	mv	a0,a5
200173b6:	5432                	lw	s0,44(sp)
200173b8:	6145                	addi	sp,sp,48
200173ba:	8082                	ret

200173bc <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
200173bc:	7179                	addi	sp,sp,-48
200173be:	d606                	sw	ra,44(sp)
200173c0:	d422                	sw	s0,40(sp)
200173c2:	1800                	addi	s0,sp,48
200173c4:	fca42e23          	sw	a0,-36(s0)
200173c8:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
200173cc:	fdc42783          	lw	a5,-36(s0)
200173d0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
200173d4:	fdc42503          	lw	a0,-36(s0)
200173d8:	b1dff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
200173dc:	87aa                	mv	a5,a0
200173de:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
200173e2:	fdc42503          	lw	a0,-36(s0)
200173e6:	bd3ff0ef          	jal	ra,20016fb8 <__metal_driver_sifive_uart0_clock>
200173ea:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
200173ee:	fd842703          	lw	a4,-40(s0)
200173f2:	fec42783          	lw	a5,-20(s0)
200173f6:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
200173f8:	fe442783          	lw	a5,-28(s0)
200173fc:	cbb1                	beqz	a5,20017450 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
200173fe:	fe442783          	lw	a5,-28(s0)
20017402:	439c                	lw	a5,0(a5)
20017404:	439c                	lw	a5,0(a5)
20017406:	fe442503          	lw	a0,-28(s0)
2001740a:	9782                	jalr	a5
2001740c:	fea42023          	sw	a0,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20017410:	fe042703          	lw	a4,-32(s0)
20017414:	fd842783          	lw	a5,-40(s0)
20017418:	02f747b3          	div	a5,a4,a5
2001741c:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20017420:	fe842783          	lw	a5,-24(s0)
20017424:	07e1                	addi	a5,a5,24
20017426:	c398                	sw	a4,0(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20017428:	fe842783          	lw	a5,-24(s0)
2001742c:	07a1                	addi	a5,a5,8
2001742e:	439c                	lw	a5,0(a5)
20017430:	fe842703          	lw	a4,-24(s0)
20017434:	0721                	addi	a4,a4,8
20017436:	0017e793          	ori	a5,a5,1
2001743a:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
2001743c:	fe842783          	lw	a5,-24(s0)
20017440:	07b1                	addi	a5,a5,12
20017442:	439c                	lw	a5,0(a5)
20017444:	fe842703          	lw	a4,-24(s0)
20017448:	0731                	addi	a4,a4,12
2001744a:	0017e793          	ori	a5,a5,1
2001744e:	c31c                	sw	a5,0(a4)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20017450:	4781                	li	a5,0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:151
}
20017452:	853e                	mv	a0,a5
20017454:	50b2                	lw	ra,44(sp)
20017456:	5422                	lw	s0,40(sp)
20017458:	6145                	addi	sp,sp,48
2001745a:	8082                	ret

2001745c <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
2001745c:	7139                	addi	sp,sp,-64
2001745e:	de06                	sw	ra,60(sp)
20017460:	dc22                	sw	s0,56(sp)
20017462:	0080                	addi	s0,sp,64
20017464:	fca42623          	sw	a0,-52(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20017468:	fcc42783          	lw	a5,-52(s0)
2001746c:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20017470:	fcc42503          	lw	a0,-52(s0)
20017474:	a81ff0ef          	jal	ra,20016ef4 <__metal_driver_sifive_uart0_control_base>
20017478:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
2001747a:	fef42423          	sw	a5,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
2001747e:	fcc42503          	lw	a0,-52(s0)
20017482:	b37ff0ef          	jal	ra,20016fb8 <__metal_driver_sifive_uart0_clock>
20017486:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
2001748a:	fe842783          	lw	a5,-24(s0)
2001748e:	07a1                	addi	a5,a5,8
20017490:	4398                	lw	a4,0(a5)
20017492:	fe842783          	lw	a5,-24(s0)
20017496:	07a1                	addi	a5,a5,8
20017498:	86be                	mv	a3,a5
2001749a:	fff907b7          	lui	a5,0xfff90
2001749e:	17fd                	addi	a5,a5,-1
200174a0:	8ff9                	and	a5,a5,a4
200174a2:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
200174a4:	fe842783          	lw	a5,-24(s0)
200174a8:	07a1                	addi	a5,a5,8
200174aa:	4398                	lw	a4,0(a5)
200174ac:	fe842783          	lw	a5,-24(s0)
200174b0:	07a1                	addi	a5,a5,8
200174b2:	86be                	mv	a3,a5
200174b4:	67c1                	lui	a5,0x10
200174b6:	8fd9                	or	a5,a5,a4
200174b8:	c29c                	sw	a5,0(a3)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
200174ba:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
200174bc:	fe842783          	lw	a5,-24(s0)
200174c0:	07d1                	addi	a5,a5,20
200174c2:	439c                	lw	a5,0(a5)
200174c4:	8b85                	andi	a5,a5,1
200174c6:	dbfd                	beqz	a5,200174bc <pre_rate_change_callback_func+0x60>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
200174c8:	fe842783          	lw	a5,-24(s0)
200174cc:	07a1                	addi	a5,a5,8
200174ce:	439c                	lw	a5,0(a5)
200174d0:	8b89                	andi	a5,a5,2
200174d2:	c399                	beqz	a5,200174d8 <pre_rate_change_callback_func+0x7c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
200174d4:	47a5                	li	a5,9
200174d6:	a011                	j	200174da <pre_rate_change_callback_func+0x7e>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
200174d8:	47a9                	li	a5,10
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
200174da:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
200174de:	fe442783          	lw	a5,-28(s0)
200174e2:	439c                	lw	a5,0(a5)
200174e4:	439c                	lw	a5,0(a5)
200174e6:	fe442503          	lw	a0,-28(s0)
200174ea:	9782                	jalr	a5
200174ec:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
200174f0:	fe042703          	lw	a4,-32(s0)
200174f4:	fdc42783          	lw	a5,-36(s0)
200174f8:	02f707b3          	mul	a5,a4,a5
200174fc:	873e                	mv	a4,a5
200174fe:	fec42783          	lw	a5,-20(s0)
20017502:	43dc                	lw	a5,4(a5)
20017504:	02f757b3          	divu	a5,a4,a5
20017508:	fcf42c23          	sw	a5,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
2001750c:	fc042a23          	sw	zero,-44(s0)
20017510:	a039                	j	2001751e <pre_rate_change_callback_func+0xc2>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20017512:	0001                	nop
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20017514:	fd442783          	lw	a5,-44(s0)
20017518:	0785                	addi	a5,a5,1
2001751a:	fcf42a23          	sw	a5,-44(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
2001751e:	fd442783          	lw	a5,-44(s0)
20017522:	fd842703          	lw	a4,-40(s0)
20017526:	fee7c6e3          	blt	a5,a4,20017512 <pre_rate_change_callback_func+0xb6>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:180
}
2001752a:	0001                	nop
2001752c:	0001                	nop
2001752e:	50f2                	lw	ra,60(sp)
20017530:	5462                	lw	s0,56(sp)
20017532:	6121                	addi	sp,sp,64
20017534:	8082                	ret

20017536 <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20017536:	7179                	addi	sp,sp,-48
20017538:	d606                	sw	ra,44(sp)
2001753a:	d422                	sw	s0,40(sp)
2001753c:	1800                	addi	s0,sp,48
2001753e:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20017542:	fdc42783          	lw	a5,-36(s0)
20017546:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
2001754a:	fec42703          	lw	a4,-20(s0)
2001754e:	fec42783          	lw	a5,-20(s0)
20017552:	43dc                	lw	a5,4(a5)
20017554:	85be                	mv	a1,a5
20017556:	853a                	mv	a0,a4
20017558:	b8bfb0ef          	jal	ra,200130e2 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:185
}
2001755c:	0001                	nop
2001755e:	50b2                	lw	ra,44(sp)
20017560:	5422                	lw	s0,40(sp)
20017562:	6145                	addi	sp,sp,48
20017564:	8082                	ret

20017566 <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20017566:	7139                	addi	sp,sp,-64
20017568:	de06                	sw	ra,60(sp)
2001756a:	dc22                	sw	s0,56(sp)
2001756c:	0080                	addi	s0,sp,64
2001756e:	fca42623          	sw	a0,-52(s0)
20017572:	fcb42423          	sw	a1,-56(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20017576:	fcc42783          	lw	a5,-52(s0)
2001757a:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
2001757e:	fcc42503          	lw	a0,-52(s0)
20017582:	a37ff0ef          	jal	ra,20016fb8 <__metal_driver_sifive_uart0_clock>
20017586:	fea42423          	sw	a0,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
2001758a:	fcc42503          	lw	a0,-52(s0)
2001758e:	a73ff0ef          	jal	ra,20017000 <__metal_driver_sifive_uart0_pinmux>
20017592:	fea42223          	sw	a0,-28(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20017596:	fe842783          	lw	a5,-24(s0)
2001759a:	c7b9                	beqz	a5,200175e8 <__metal_driver_sifive_uart0_init+0x82>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
2001759c:	fec42783          	lw	a5,-20(s0)
200175a0:	20017737          	lui	a4,0x20017
200175a4:	45c70713          	addi	a4,a4,1116 # 2001745c <pre_rate_change_callback_func>
200175a8:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
200175aa:	fec42783          	lw	a5,-20(s0)
200175ae:	fcc42703          	lw	a4,-52(s0)
200175b2:	c7d8                	sw	a4,12(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
200175b4:	fec42783          	lw	a5,-20(s0)
200175b8:	07a1                	addi	a5,a5,8
200175ba:	85be                	mv	a1,a5
200175bc:	fe842503          	lw	a0,-24(s0)
200175c0:	2241                	jal	20017740 <metal_clock_register_pre_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
200175c2:	fec42783          	lw	a5,-20(s0)
200175c6:	20017737          	lui	a4,0x20017
200175ca:	53670713          	addi	a4,a4,1334 # 20017536 <post_rate_change_callback_func>
200175ce:	cbd8                	sw	a4,20(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
200175d0:	fec42783          	lw	a5,-20(s0)
200175d4:	fcc42703          	lw	a4,-52(s0)
200175d8:	cf98                	sw	a4,24(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
200175da:	fec42783          	lw	a5,-20(s0)
200175de:	07d1                	addi	a5,a5,20
200175e0:	85be                	mv	a1,a5
200175e2:	fe842503          	lw	a0,-24(s0)
200175e6:	2271                	jal	20017772 <metal_clock_register_post_rate_change_callback>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
200175e8:	fec42783          	lw	a5,-20(s0)
200175ec:	fc842583          	lw	a1,-56(s0)
200175f0:	853e                	mv	a0,a5
200175f2:	af1fb0ef          	jal	ra,200130e2 <metal_uart_set_baud_rate>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
200175f6:	fe442783          	lw	a5,-28(s0)
200175fa:	cb95                	beqz	a5,2001762e <__metal_driver_sifive_uart0_init+0xc8>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
200175fc:	fcc42503          	lw	a0,-52(s0)
20017600:	a41ff0ef          	jal	ra,20017040 <__metal_driver_sifive_uart0_pinmux_output_selector>
20017604:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20017606:	fef42023          	sw	a5,-32(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
2001760a:	fcc42503          	lw	a0,-52(s0)
2001760e:	a6fff0ef          	jal	ra,2001707c <__metal_driver_sifive_uart0_pinmux_source_selector>
20017612:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20017614:	fcf42e23          	sw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20017618:	fe442783          	lw	a5,-28(s0)
2001761c:	439c                	lw	a5,0(a5)
2001761e:	53dc                	lw	a5,36(a5)
20017620:	fdc42603          	lw	a2,-36(s0)
20017624:	fe042583          	lw	a1,-32(s0)
20017628:	fe442503          	lw	a0,-28(s0)
2001762c:	9782                	jalr	a5
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
2001762e:	0001                	nop
20017630:	50f2                	lw	ra,60(sp)
20017632:	5462                	lw	s0,56(sp)
20017634:	6121                	addi	sp,sp,64
20017636:	8082                	ret

20017638 <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20017638:	7179                	addi	sp,sp,-48
2001763a:	d606                	sw	ra,44(sp)
2001763c:	d422                	sw	s0,40(sp)
2001763e:	1800                	addi	s0,sp,48
20017640:	fca42e23          	sw	a0,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20017644:	fdc42783          	lw	a5,-36(s0)
20017648:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:52
    while (current) {
2001764c:	a831                	j	20017668 <_metal_clock_call_all_callbacks+0x30>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
2001764e:	fec42783          	lw	a5,-20(s0)
20017652:	4398                	lw	a4,0(a5)
20017654:	fec42783          	lw	a5,-20(s0)
20017658:	43dc                	lw	a5,4(a5)
2001765a:	853e                	mv	a0,a5
2001765c:	9702                	jalr	a4
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:54
        current = current->_next;
2001765e:	fec42783          	lw	a5,-20(s0)
20017662:	479c                	lw	a5,8(a5)
20017664:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:52
    while (current) {
20017668:	fec42783          	lw	a5,-20(s0)
2001766c:	f3ed                	bnez	a5,2001764e <_metal_clock_call_all_callbacks+0x16>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:56
    }
}
2001766e:	0001                	nop
20017670:	0001                	nop
20017672:	50b2                	lw	ra,44(sp)
20017674:	5422                	lw	s0,40(sp)
20017676:	6145                	addi	sp,sp,48
20017678:	8082                	ret

2001767a <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
2001767a:	7179                	addi	sp,sp,-48
2001767c:	d622                	sw	s0,44(sp)
2001767e:	1800                	addi	s0,sp,48
20017680:	fca42e23          	sw	a0,-36(s0)
20017684:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20017688:	fd842783          	lw	a5,-40(s0)
2001768c:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:66

    if (!list) {
20017690:	fdc42783          	lw	a5,-36(s0)
20017694:	e781                	bnez	a5,2001769c <_metal_clock_append_to_callbacks+0x22>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:67
        return cb;
20017696:	fd842783          	lw	a5,-40(s0)
2001769a:	a035                	j	200176c6 <_metal_clock_append_to_callbacks+0x4c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
2001769c:	fdc42783          	lw	a5,-36(s0)
200176a0:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
200176a4:	a031                	j	200176b0 <_metal_clock_append_to_callbacks+0x36>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:73
        current = current->_next;
200176a6:	fec42783          	lw	a5,-20(s0)
200176aa:	479c                	lw	a5,8(a5)
200176ac:	fef42623          	sw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
200176b0:	fec42783          	lw	a5,-20(s0)
200176b4:	479c                	lw	a5,8(a5)
200176b6:	fbe5                	bnez	a5,200176a6 <_metal_clock_append_to_callbacks+0x2c>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
200176b8:	fec42783          	lw	a5,-20(s0)
200176bc:	fd842703          	lw	a4,-40(s0)
200176c0:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:78

    return list;
200176c2:	fdc42783          	lw	a5,-36(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:79
}
200176c6:	853e                	mv	a0,a5
200176c8:	5432                	lw	s0,44(sp)
200176ca:	6145                	addi	sp,sp,48
200176cc:	8082                	ret

200176ce <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
200176ce:	1101                	addi	sp,sp,-32
200176d0:	ce06                	sw	ra,28(sp)
200176d2:	cc22                	sw	s0,24(sp)
200176d4:	1000                	addi	s0,sp,32
200176d6:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
200176da:	fec42783          	lw	a5,-20(s0)
200176de:	439c                	lw	a5,0(a5)
200176e0:	439c                	lw	a5,0(a5)
200176e2:	fec42503          	lw	a0,-20(s0)
200176e6:	9782                	jalr	a5
200176e8:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:112
}
200176ea:	853e                	mv	a0,a5
200176ec:	40f2                	lw	ra,28(sp)
200176ee:	4462                	lw	s0,24(sp)
200176f0:	6105                	addi	sp,sp,32
200176f2:	8082                	ret

200176f4 <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
200176f4:	7179                	addi	sp,sp,-48
200176f6:	d606                	sw	ra,44(sp)
200176f8:	d422                	sw	s0,40(sp)
200176fa:	1800                	addi	s0,sp,48
200176fc:	fca42e23          	sw	a0,-36(s0)
20017700:	fcb42c23          	sw	a1,-40(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20017704:	fdc42783          	lw	a5,-36(s0)
20017708:	43dc                	lw	a5,4(a5)
2001770a:	853e                	mv	a0,a5
2001770c:	f2dff0ef          	jal	ra,20017638 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20017710:	fdc42783          	lw	a5,-36(s0)
20017714:	439c                	lw	a5,0(a5)
20017716:	43dc                	lw	a5,4(a5)
20017718:	fd842583          	lw	a1,-40(s0)
2001771c:	fdc42503          	lw	a0,-36(s0)
20017720:	9782                	jalr	a5
20017722:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20017726:	fdc42783          	lw	a5,-36(s0)
2001772a:	479c                	lw	a5,8(a5)
2001772c:	853e                	mv	a0,a5
2001772e:	f0bff0ef          	jal	ra,20017638 <_metal_clock_call_all_callbacks>
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:135

    return out;
20017732:	fec42783          	lw	a5,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:136
}
20017736:	853e                	mv	a0,a5
20017738:	50b2                	lw	ra,44(sp)
2001773a:	5422                	lw	s0,40(sp)
2001773c:	6145                	addi	sp,sp,48
2001773e:	8082                	ret

20017740 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20017740:	1101                	addi	sp,sp,-32
20017742:	ce06                	sw	ra,28(sp)
20017744:	cc22                	sw	s0,24(sp)
20017746:	1000                	addi	s0,sp,32
20017748:	fea42623          	sw	a0,-20(s0)
2001774c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20017750:	fec42783          	lw	a5,-20(s0)
20017754:	43dc                	lw	a5,4(a5)
20017756:	fe842583          	lw	a1,-24(s0)
2001775a:	853e                	mv	a0,a5
2001775c:	f1fff0ef          	jal	ra,2001767a <_metal_clock_append_to_callbacks>
20017760:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20017762:	fec42783          	lw	a5,-20(s0)
20017766:	c3d8                	sw	a4,4(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:149
}
20017768:	0001                	nop
2001776a:	40f2                	lw	ra,28(sp)
2001776c:	4462                	lw	s0,24(sp)
2001776e:	6105                	addi	sp,sp,32
20017770:	8082                	ret

20017772 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20017772:	1101                	addi	sp,sp,-32
20017774:	ce06                	sw	ra,28(sp)
20017776:	cc22                	sw	s0,24(sp)
20017778:	1000                	addi	s0,sp,32
2001777a:	fea42623          	sw	a0,-20(s0)
2001777e:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20017782:	fec42783          	lw	a5,-20(s0)
20017786:	479c                	lw	a5,8(a5)
20017788:	fe842583          	lw	a1,-24(s0)
2001778c:	853e                	mv	a0,a5
2001778e:	eedff0ef          	jal	ra,2001767a <_metal_clock_append_to_callbacks>
20017792:	872a                	mv	a4,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20017794:	fec42783          	lw	a5,-20(s0)
20017798:	c798                	sw	a4,8(a5)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/metal/clock.h:162
}
2001779a:	0001                	nop
2001779c:	40f2                	lw	ra,28(sp)
2001779e:	4462                	lw	s0,24(sp)
200177a0:	6105                	addi	sp,sp,32
200177a2:	8082                	ret

200177a4 <metal_shutdown>:
metal_shutdown():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/shutdown.c:17
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
}
#else
#pragma message(                                                               \
    "There is no defined shutdown mechanism, metal_shutdown() will spin.")
void metal_shutdown(int code) {
200177a4:	1101                	addi	sp,sp,-32
200177a6:	ce22                	sw	s0,28(sp)
200177a8:	1000                	addi	s0,sp,32
200177aa:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/shutdown.c:19 (discriminator 1)
    while (1) {
        __asm__ volatile("nop");
200177ae:	0001                	nop
200177b0:	bffd                	j	200177ae <metal_shutdown+0xa>
	...

20017800 <__metal_vector_table>:
IRQ_0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20017800:	a7afc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017804 <IRQ_1>:
IRQ_1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20017804:	a76fc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017808 <IRQ_2>:
IRQ_2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20017808:	a72fc06f          	j	20013a7a <metal_interrupt_vector_handler>

2001780c <IRQ_3>:
IRQ_3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
2001780c:	a9cfc06f          	j	20013aa8 <metal_software_interrupt_vector_handler>

20017810 <IRQ_4>:
IRQ_4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20017810:	a6afc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017814 <IRQ_5>:
IRQ_5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20017814:	a66fc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017818 <IRQ_6>:
IRQ_6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20017818:	a62fc06f          	j	20013a7a <metal_interrupt_vector_handler>

2001781c <IRQ_7>:
IRQ_7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
2001781c:	b86fc06f          	j	20013ba2 <metal_timer_interrupt_vector_handler>

20017820 <IRQ_8>:
IRQ_8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20017820:	a5afc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017824 <IRQ_9>:
IRQ_9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20017824:	a56fc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017828 <IRQ_10>:
IRQ_10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20017828:	a52fc06f          	j	20013a7a <metal_interrupt_vector_handler>

2001782c <IRQ_11>:
IRQ_11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
2001782c:	a4efc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017830 <IRQ_12>:
IRQ_12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20017830:	a4afc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017834 <IRQ_13>:
IRQ_13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20017834:	a46fc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017838 <IRQ_14>:
IRQ_14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20017838:	a42fc06f          	j	20013a7a <metal_interrupt_vector_handler>

2001783c <IRQ_15>:
IRQ_15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
2001783c:	a3efc06f          	j	20013a7a <metal_interrupt_vector_handler>

20017840 <IRQ_LC0>:
IRQ_LC0():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20017840:	ebafc06f          	j	20013efa <metal_lc0_interrupt_vector_handler>

20017844 <IRQ_LC1>:
IRQ_LC1():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20017844:	f4cfc06f          	j	20013f90 <metal_lc1_interrupt_vector_handler>

20017848 <IRQ_LC2>:
IRQ_LC2():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20017848:	fdefc06f          	j	20014026 <metal_lc2_interrupt_vector_handler>

2001784c <IRQ_LC3>:
IRQ_LC3():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
2001784c:	871fc06f          	j	200140bc <metal_lc3_interrupt_vector_handler>

20017850 <IRQ_LC4>:
IRQ_LC4():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20017850:	903fc06f          	j	20014152 <metal_lc4_interrupt_vector_handler>

20017854 <IRQ_LC5>:
IRQ_LC5():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20017854:	995fc06f          	j	200141e8 <metal_lc5_interrupt_vector_handler>

20017858 <IRQ_LC6>:
IRQ_LC6():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20017858:	a27fc06f          	j	2001427e <metal_lc6_interrupt_vector_handler>

2001785c <IRQ_LC7>:
IRQ_LC7():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
2001785c:	ab9fc06f          	j	20014314 <metal_lc7_interrupt_vector_handler>

20017860 <IRQ_LC8>:
IRQ_LC8():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20017860:	b4bfc06f          	j	200143aa <metal_lc8_interrupt_vector_handler>

20017864 <IRQ_LC9>:
IRQ_LC9():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20017864:	bddfc06f          	j	20014440 <metal_lc9_interrupt_vector_handler>

20017868 <IRQ_LC10>:
IRQ_LC10():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20017868:	c6ffc06f          	j	200144d6 <metal_lc10_interrupt_vector_handler>

2001786c <IRQ_LC11>:
IRQ_LC11():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
2001786c:	d01fc06f          	j	2001456c <metal_lc11_interrupt_vector_handler>

20017870 <IRQ_LC12>:
IRQ_LC12():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20017870:	d93fc06f          	j	20014602 <metal_lc12_interrupt_vector_handler>

20017874 <IRQ_LC13>:
IRQ_LC13():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20017874:	e25fc06f          	j	20014698 <metal_lc13_interrupt_vector_handler>

20017878 <IRQ_LC14>:
IRQ_LC14():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20017878:	eb7fc06f          	j	2001472e <metal_lc14_interrupt_vector_handler>

2001787c <IRQ_LC15>:
IRQ_LC15():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
2001787c:	f49fc06f          	j	200147c4 <metal_lc15_interrupt_vector_handler>

20017880 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:208
{
20017880:	1101                	addi	sp,sp,-32
20017882:	ce22                	sw	s0,28(sp)
20017884:	1000                	addi	s0,sp,32
20017886:	fea42623          	sw	a0,-20(s0)
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:209
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2001788a:	fec42703          	lw	a4,-20(s0)
2001788e:	800007b7          	lui	a5,0x80000
20017892:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffdd50>
20017896:	00f71763          	bne	a4,a5,200178a4 <__metal_driver_fixed_clock_rate+0x24>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:210
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2001789a:	00f427b7          	lui	a5,0xf42
2001789e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
200178a2:	a099                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:212
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
200178a4:	fec42703          	lw	a4,-20(s0)
200178a8:	800007b7          	lui	a5,0x80000
200178ac:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffdd5c>
200178b0:	00f71763          	bne	a4,a5,200178be <__metal_driver_fixed_clock_rate+0x3e>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:213
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
200178b4:	044aa7b7          	lui	a5,0x44aa
200178b8:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
200178bc:	a035                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:215
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
200178be:	fec42703          	lw	a4,-20(s0)
200178c2:	800007b7          	lui	a5,0x80000
200178c6:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffdd68>
200178ca:	00f71463          	bne	a4,a5,200178d2 <__metal_driver_fixed_clock_rate+0x52>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:216
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
200178ce:	67a1                	lui	a5,0x8
200178d0:	a821                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:218
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_6) {
200178d2:	fec42703          	lw	a4,-20(s0)
200178d6:	800007b7          	lui	a5,0x80000
200178da:	08478793          	addi	a5,a5,132 # 80000084 <metal_segment_heap_target_end+0xffffdd74>
200178de:	00f71463          	bne	a4,a5,200178e6 <__metal_driver_fixed_clock_rate+0x66>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:219
		return METAL_FIXED_CLOCK_6_CLOCK_FREQUENCY;
200178e2:	67a1                	lui	a5,0x8
200178e4:	a011                	j	200178e8 <__metal_driver_fixed_clock_rate+0x68>
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:222
		return 0;
200178e6:	4781                	li	a5,0
C:\Users\jjrh\Dropbox\Telecom\Tesis\Source\kernel_sifive\kernel_red-v\bsp\build\debug/./metal/machine.h:224
}
200178e8:	853e                	mv	a0,a5
200178ea:	4472                	lw	s0,28(sp)
200178ec:	6105                	addi	sp,sp,32
200178ee:	8082                	ret

200178f0 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
200178f0:	1101                	addi	sp,sp,-32
200178f2:	ce06                	sw	ra,28(sp)
200178f4:	cc22                	sw	s0,24(sp)
200178f6:	1000                	addi	s0,sp,32
200178f8:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
200178fc:	fec42503          	lw	a0,-20(s0)
20017900:	f81ff0ef          	jal	ra,20017880 <__metal_driver_fixed_clock_rate>
20017904:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/fixed-clock.c:14
}
20017906:	853e                	mv	a0,a5
20017908:	40f2                	lw	ra,28(sp)
2001790a:	4462                	lw	s0,24(sp)
2001790c:	6105                	addi	sp,sp,32
2001790e:	8082                	ret

20017910 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20017910:	1101                	addi	sp,sp,-32
20017912:	ce06                	sw	ra,28(sp)
20017914:	cc22                	sw	s0,24(sp)
20017916:	1000                	addi	s0,sp,32
20017918:	fea42623          	sw	a0,-20(s0)
2001791c:	feb42423          	sw	a1,-24(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20017920:	fec42503          	lw	a0,-20(s0)
20017924:	fcdff0ef          	jal	ra,200178f0 <__metal_driver_fixed_clock_get_rate_hz>
20017928:	87aa                	mv	a5,a0
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/src/drivers/fixed-clock.c:19
}
2001792a:	853e                	mv	a0,a5
2001792c:	40f2                	lw	ra,28(sp)
2001792e:	4462                	lw	s0,24(sp)
20017930:	6105                	addi	sp,sp,32
20017932:	8082                	ret

20017934 <_exit>:
_exit():
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
20017934:	1101                	addi	sp,sp,-32
20017936:	ce06                	sw	ra,28(sp)
20017938:	cc22                	sw	s0,24(sp)
2001793a:	1000                	addi	s0,sp,32
2001793c:	fea42623          	sw	a0,-20(s0)
C:/Users/jjrh/Dropbox/Telecom/Tesis/Source/kernel_sifive/kernel_red-v/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
20017940:	fec42503          	lw	a0,-20(s0)
20017944:	e61ff0ef          	jal	ra,200177a4 <metal_shutdown>
