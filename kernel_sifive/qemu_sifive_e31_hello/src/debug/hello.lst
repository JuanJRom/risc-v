
C:/wsFreedomStudio/qemu_sifive_e31_hello/src/debug/hello.elf:     file format elf32-littleriscv
C:/wsFreedomStudio/qemu_sifive_e31_hello/src/debug/hello.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x20400000

Program Header:
    LOAD off    0x00001000 vaddr 0x20400000 paddr 0x20400000 align 2**12
         filesz 0x00000ff8 memsz 0x00000ff8 flags rwx
    LOAD off    0x00009000 vaddr 0x80000000 paddr 0x204070b8 align 2**12
         filesz 0x000007c8 memsz 0x000007c8 flags rw-
     TLS off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x000007c8 vaddr 0x800007c8 paddr 0x800007c8 align 2**12
         filesz 0x00000000 memsz 0x00000fe8 flags rw-
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---
    LOAD off    0x00002000 vaddr 0x20401000 paddr 0x20401000 align 2**12
         filesz 0x000060b6 memsz 0x000060b6 flags r-x
    LOAD off    0x00000114 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000000 memsz 0x00000000 flags ---

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .init             000002dc  20400000  20400000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .init_array       0000000c  204002e0  204002e0  000012e0  2**3  CONTENTS, ALLOC, LOAD, DATA
  2 .ctors            0000007a  204002ec  204002ec  000012ec  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata           00000c90  20400368  20400368  00001368  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .text             000060b6  20401000  20401000  00002000  2**7  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             000007c8  80000000  204070b8  00009000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .bss              000003e0  800007c8  800007c8  000097c8  2**3  ALLOC
  7 .stack            00000400  80000bb0  80000bb0  000097c8  2**4  ALLOC
  8 .heap             00000800  80000fb0  80000fb0  000097c8  2**3  ALLOC
  9 .debug_info       0001f14f  00000000  00000000  000097c8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     00002c08  00000000  00000000  00028917  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000c10  00000000  00000000  0002b520  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     000009f0  00000000  00000000  0002c130  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0000a13f  00000000  00000000  0002cb20  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str        00004a74  00000000  00000000  00036c5f  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment          00000030  00000000  00000000  0003b6d3  2**0  CONTENTS, READONLY
 16 .riscv.attributes 0000002f  00000000  00000000  0003b703  2**0  CONTENTS, READONLY
 17 .debug_frame      00002f9c  00000000  00000000  0003b734  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
20400000 l    d  .init	00000000 .init
204002e0 l    d  .init_array	00000000 .init_array
204002ec l    d  .ctors	00000000 .ctors
20400368 l    d  .rodata	00000000 .rodata
20401000 l    d  .text	00000000 .text
80000000 l    d  .data	00000000 .data
800007c8 l    d  .bss	00000000 .bss
80000bb0 l    d  .stack	00000000 .stack
80000fb0 l    d  .heap	00000000 .heap
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 scrub.o
204000c0 l     F .init	00000000 __metal_memory_scrub
2040012e l       .init	00000000 skip_scrub
00000000 l    df *ABS*	00000000 synchronize_harts.c
00000000 l    df *ABS*	00000000 crt0.o
20400240 l       .init	00000000 _skip_init
20400480 l       .rodata	00000000 argv
20400484 l       .rodata	00000000 envp
20400488 l       .rodata	00000000 name
00000000 l    df *ABS*	00000000 tty.c
00000000 l    df *ABS*	00000000 sifive_fe310-g000_pll.c
2040561e l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllsel0
20405638 l     F .text	0000001a __metal_driver_sifive_fe310_g000_pll_pllref
20405652 l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_divider_base
20405668 l     F .text	00000014 __metal_driver_sifive_fe310_g000_pll_divider_offset
2040567c l     F .text	00000012 __metal_driver_sifive_fe310_g000_pll_config_base
2040568e l     F .text	00000010 __metal_driver_sifive_fe310_g000_pll_config_offset
2040569e l     F .text	00000016 __metal_driver_sifive_fe310_g000_pll_init_rate
204056b4 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
204056c6 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
20400684 l     O .rodata	00000880 pll_configs
204056dc l     F .text	0000004e get_pll_config_freq
2040593e l     F .text	000000ac find_closest_config
204059ea l     F .text	000001b0 configure_pll
00000000 l    df *ABS*	00000000 hello.c
00000000 l    df *ABS*	00000000 kernel.c
2040108c l     F .text	0000001a w_mepc
204010a6 l     F .text	0000001a r_mie
204010c0 l     F .text	0000001a w_mie
204010da l     F .text	0000001a w_mtvec
00000000 l    df *ABS*	00000000 findfp.c
20401302 l     F .text	00000068 std
00000000 l    df *ABS*	00000000 nano-vfprintf.c
204016ae l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 riscv_clint0.c
204029fe l     F .text	0000002a __metal_driver_sifive_clint0_control_base
20402a28 l     F .text	00000028 __metal_driver_sifive_clint0_num_interrupts
20402a50 l     F .text	0000003c __metal_driver_sifive_clint0_interrupt_parents
20402a8c l     F .text	00000030 __metal_driver_sifive_clint0_interrupt_lines
20402bec l     F .text	00000036 _get_cpu_intc
00000000 l    df *ABS*	00000000 riscv_cpu.c
2040312c l     F .text	00000024 __metal_driver_cpu_hartid
20403150 l     F .text	0000002a __metal_driver_cpu_timebase
2040317a l     F .text	0000002a __metal_driver_cpu_interrupt_controller
204031a4 l     F .text	00000024 __metal_driver_cpu_buserror
00000000 l    df *ABS*	00000000 riscv_plic0.c
20404b70 l     F .text	0000002a __metal_driver_sifive_plic0_control_base
20404b9a l     F .text	00000028 __metal_driver_sifive_plic0_num_interrupts
20404bc2 l     F .text	00000028 __metal_driver_sifive_plic0_max_priority
20404bea l     F .text	00000028 __metal_driver_sifive_plic0_interrupt_parents
20404c12 l     F .text	00000022 __metal_driver_sifive_plic0_interrupt_lines
20404c34 l     F .text	0000001e __metal_driver_sifive_plic0_context_ids
00000000 l    df *ABS*	00000000 sifive_gpio0.c
20405d78 l     F .text	00000026 __metal_driver_sifive_gpio0_base
20405d9e l     F .text	0000002a __metal_driver_sifive_gpio0_interrupt_parent
20405dc8 l     F .text	000001b4 __metal_driver_sifive_gpio0_interrupt_lines
00000000 l    df *ABS*	00000000 sifive_uart0.c
2040669c l     F .text	0000002a __metal_driver_sifive_uart0_control_base
204066c6 l     F .text	0000002e __metal_driver_sifive_uart0_interrupt_parent
204066f4 l     F .text	00000028 __metal_driver_sifive_uart0_interrupt_line
2040671c l     F .text	0000002e __metal_driver_sifive_uart0_clock
2040674a l     F .text	0000002a __metal_driver_sifive_uart0_pinmux
20406774 l     F .text	00000028 __metal_driver_sifive_uart0_pinmux_output_selector
2040679c l     F .text	0000002a __metal_driver_sifive_uart0_pinmux_source_selector
20406b62 l     F .text	000000da pre_rate_change_callback_func
20406c3c l     F .text	00000030 post_rate_change_callback_func
00000000 l    df *ABS*	00000000 impure.c
80000000 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfrosc.c
2040542e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfrosc_ref
20405448 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfrosc_config_base
2040545e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfrosc_config_offset
20405472 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_hfxosc.c
2040552e l     F .text	0000001a __metal_driver_sifive_fe310_g000_hfxosc_ref
20405548 l     F .text	00000016 __metal_driver_sifive_fe310_g000_hfxosc_config_base
2040555e l     F .text	00000014 __metal_driver_sifive_fe310_g000_hfxosc_config_offset
20405572 l     F .text	00000016 __metal_driver_sifive_fe310_g000_prci_vtable
00000000 l    df *ABS*	00000000 sifive_fe310-g000_prci.c
20405d00 l     F .text	00000012 __metal_driver_sifive_fe310_g000_prci_base
00000000 l    df *ABS*	00000000 sifive_test0.c
2040662c l     F .text	00000026 __metal_driver_sifive_test0_base
00000000 l    df *ABS*	00000000 fixed-clock.c
20407000 l     F .text	00000062 __metal_driver_fixed_clock_rate
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 sys_close.c
00000000 l    df *ABS*	00000000 sys_fstat.c
00000000 l    df *ABS*	00000000 sys_isatty.c
00000000 l    df *ABS*	00000000 sys_lseek.c
00000000 l    df *ABS*	00000000 sys_read.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
800007a4 l     O .data	00000004 __brk
00000000 l    df *ABS*	00000000 sys_write.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fini.c
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 __atexit.c
800007e8 l     O .bss	0000008c _global_atexit0
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 init.c
800007e0 l     O .bss	00000004 init_done.1
800007e4 l     O .bss	00000004 fini_done.0
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    df *ABS*	00000000 vector.o
20406f80 l       .text	00000000 IRQ_0
20406f84 l       .text	00000000 IRQ_1
20406f88 l       .text	00000000 IRQ_2
20406f8c l       .text	00000000 IRQ_3
20406f90 l       .text	00000000 IRQ_4
20406f94 l       .text	00000000 IRQ_5
20406f98 l       .text	00000000 IRQ_6
20406f9c l       .text	00000000 IRQ_7
20406fa0 l       .text	00000000 IRQ_8
20406fa4 l       .text	00000000 IRQ_9
20406fa8 l       .text	00000000 IRQ_10
20406fac l       .text	00000000 IRQ_11
20406fb0 l       .text	00000000 IRQ_12
20406fb4 l       .text	00000000 IRQ_13
20406fb8 l       .text	00000000 IRQ_14
20406fbc l       .text	00000000 IRQ_15
20406fc0 l       .text	00000000 IRQ_LC0
20406fc4 l       .text	00000000 IRQ_LC1
20406fc8 l       .text	00000000 IRQ_LC2
20406fcc l       .text	00000000 IRQ_LC3
20406fd0 l       .text	00000000 IRQ_LC4
20406fd4 l       .text	00000000 IRQ_LC5
20406fd8 l       .text	00000000 IRQ_LC6
20406fdc l       .text	00000000 IRQ_LC7
20406fe0 l       .text	00000000 IRQ_LC8
20406fe4 l       .text	00000000 IRQ_LC9
20406fe8 l       .text	00000000 IRQ_LC10
20406fec l       .text	00000000 IRQ_LC11
20406ff0 l       .text	00000000 IRQ_LC12
20406ff4 l       .text	00000000 IRQ_LC13
20406ff8 l       .text	00000000 IRQ_LC14
20406ffc l       .text	00000000 IRQ_LC15
00000000 l    df *ABS*	00000000 sys_exit.c
00000000 l    df *ABS*	00000000 inline.c
00000000 l    df *ABS*	00000000 
204002ec l       .init_array	00000000 metal_constructors_end
204002f0 l       .init_array	00000000 __fini_array_end
204002f0 l       .init_array	00000000 metal_destructors_end
204002f0 l       .init_array	00000000 metal_destructors_start
204002f0 l       .init_array	00000000 __fini_array_start
204002e0 l       .init_array	00000000 __init_array_end
204002e0 l       .init_array	00000000 __preinit_array_end
204002e0 l       .init_array	00000000 __init_array_start
204002e0 l       .init_array	00000000 metal_constructors_start
204002e0 l       .init_array	00000000 __preinit_array_start
20400f8c g     O .rodata	00000040 __metal_driver_vtable_sifive_uart0
20402440 g     F .text	0000002e _isatty_r
20403a52  w    F .text	00000096 metal_lc4_interrupt_vector_handler
20401e78 g     F .text	00000032 _lseek_r
20406dd4 g     F .text	00000026 metal_clock_get_rate_hz
20406ac2 g     F .text	000000a0 __metal_driver_sifive_uart0_set_baud_rate
20402dc8 g     F .text	00000058 __metal_driver_riscv_clint0_set_vector_mode
20406916 g     F .text	0000004a __metal_driver_sifive_uart0_set_tx_watermark
204039bc  w    F .text	00000096 metal_lc3_interrupt_vector_handler
20404264 g     F .text	00000058 __metal_valid_interrupt_id
204012c6 g     F .text	0000003c printf
204002e8 g     O .init_array	00000004 _use_hfxosc_ptr
204046e0 g     F .text	0000001c __metal_driver_riscv_cpu_controller_get_vector_mode
80000fa0 g       .data	00000000 __global_pointer$
204002ec g     F .ctors	00000024 metal_tty_init
20406d80 g     F .text	00000054 _metal_clock_append_to_callbacks
20404c8e g     F .text	00000046 __metal_plic0_complete_interrupt
204044a8 g     F .text	000001e0 __metal_driver_riscv_cpu_controller_interrupt_register
204002e4 g     O .init_array	00000004 _metal_sifive_fe310_g000_pll_init_ptr
20401a5e g     F .text	00000036 __sseek
204013b8 g     F .text	0000006a __sinit
20401a9a g     F .text	000000c2 __swbuf_r
800007c8 g       .data	00000000 __tls_base
20401374 g     F .text	00000044 __sfmoreglue
20401fbe g     F .text	00000002 __malloc_unlock
20406ece g     F .text	0000002e metal_cpu_get
80000758 g     O .data	00000020 __metal_dt_serial_10013000
20406206 g     F .text	0000004a __metal_driver_sifive_gpio0_disable_io
20400494 g     O .rodata	00000064 __metal_driver_vtable_riscv_clint0
80000ba8 g       .bss	00000000 metal_segment_bss_target_end
20402abc g     F .text	0000009a __metal_clint0_mtime_get
20404ae4 g     F .text	0000002e __metal_driver_cpu_get_instruction_length
00000001 g       *ABS*	00000000 __metal_chicken_bit
204011e0 g     F .text	0000002c system_init
204069da g     F .text	00000030 __metal_driver_sifive_uart0_get_rx_watermark
20405fbc g     F .text	00000046 __metal_driver_sifive_gpio0_disable_input
20406652 g     F .text	0000004a __metal_driver_sifive_test0_exit
2040262c g     F .text	0000000a __errno
80000000 g       .rodata	00000000 metal_segment_itim_target_start
204068e6 g     F .text	00000030 __metal_driver_sifive_uart0_txready
20406874 g     F .text	0000003a __metal_driver_sifive_uart0_rx_interrupt_enable
20400142 g     F .init	0000000e __metal_synchronize_harts
800007c8 g       .data	00000000 metal_segment_bss_target_start
20402b56 g     F .text	00000096 __metal_driver_riscv_clint0_mtimecmp_set
20402410 g     F .text	00000030 _fstat_r
20406456 g     F .text	00000188 __metal_driver_sifive_gpio0_clear_int
800007d8 g     O .bss	00000004 errno
204057ce g     F .text	00000170 __metal_driver_sifive_fe310_g000_pll_get_rate_hz
00000400 g       *ABS*	00000000 __stack_size
20406e44 g     F .text	00000032 metal_clock_register_pre_rate_change_callback
20403d40  w    F .text	00000096 metal_lc9_interrupt_vector_handler
204000cc  w    F .init	00000000 __metal_before_start
20402928  w    F .text	00000014 metal_init_run
20400620 g     O .rodata	00000064 __metal_driver_vtable_riscv_plic0
204005dc g     O .rodata	00000044 __metal_driver_vtable_cpu
204029d0 g     F .text	0000002e metal_uart_set_baud_rate
20406c6c g     F .text	000000d2 __metal_driver_sifive_uart0_init
00000000 g       *ABS*	00000000 __metal_eccscrub_bit
2040476c g     F .text	00000070 __metal_driver_cpu_mcycle_get
20400f04 g     O .rodata	0000000c __metal_driver_vtable_sifive_fe310_g000_pll
80000fb0 g       .heap	00000000 metal_segment_heap_target_start
2040136a g     F .text	0000000a _cleanup_r
800007b4 g     O .data	00000008 __metal_dt_cpu_0
20403caa  w    F .text	00000096 metal_lc8_interrupt_vector_handler
20405b9a g     F .text	00000166 __metal_driver_sifive_fe310_g000_pll_set_rate_hz
20405392 g     F .text	00000074 __metal_driver_riscv_plic0_affinity_set_threshold
20403f98  w    F .text	00000096 metal_lc13_interrupt_vector_handler
20403336 g     F .text	00000018 __metal_default_exception_handler
20402490 g     F .text	00000026 _fstat
204030f8 g     F .text	00000034 __metal_driver_riscv_clint0_set_interrupt
204046fc g     F .text	00000054 __metal_driver_riscv_cpu_controller_set_vector_mode
204010f4 g     F .text	0000003c handle_trap
204031c8 g     F .text	00000030 __metal_driver_cpu_get
20400578 g     O .rodata	00000064 __metal_driver_vtable_riscv_cpu_intc
2040322a g     F .text	00000018 __metal_interrupt_global_disable
20405406 g     F .text	00000028 __metal_driver_riscv_plic0_affinity_get_threshold
20403c14  w    F .text	00000096 metal_lc7_interrupt_vector_handler
20403dd6  w    F .text	00000096 metal_lc10_interrupt_vector_handler
204019ae g     F .text	00000030 _sbrk_r
204051b2 g     F .text	00000050 __metal_driver_riscv_plic0_disable
20404378 g     F .text	0000004e __metal_exception_register
204011ca g     F .text	00000016 osKernelLaunch
20402838 g     F .text	00000078 metal_init
204023de g     F .text	00000032 _read_r
204048fe g     F .text	0000001a __metal_driver_cpu_timer_controller_interrupt
2040609e g     F .text	00000040 __metal_driver_sifive_gpio0_enable_output
80000000 g       .rodata	00000000 metal_segment_lim_target_end
20403426 g     F .text	00000068 __metal_default_sw_handler
20406e76 g     F .text	00000032 metal_clock_register_post_rate_change_callback
8000006c g     O .data	0000000c __metal_dt_clock_2
204067c6 g     F .text	0000001e __metal_driver_sifive_uart0_interrupt_controller
204024b6 g     F .text	00000020 _isatty
20406164 g     F .text	00000040 __metal_driver_sifive_gpio0_output_toggle
20406802 g     F .text	0000003a __metal_driver_sifive_uart0_tx_interrupt_enable
20400ff0 g     O .rodata	00000008 __metal_driver_vtable_fixed_clock
20400fd0 g     O .rodata	00000004 _global_impure_ptr
2040348e  w    F .text	00000092 metal_timer_interrupt_vector_handler
20402696 g     F .text	0000005e __libc_init_array
204060de g     F .text	00000040 __metal_driver_sifive_gpio0_output_set
20403e6c  w    F .text	00000096 metal_lc11_interrupt_vector_handler
204055fc g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz
20404688 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_enable
2040252a g     F .text	0000008a _sbrk
20406058 g     F .text	00000046 __metal_driver_sifive_gpio0_disable_output
20406d3e g     F .text	00000042 _metal_clock_call_all_callbacks
20401280 g       .text	00000000 switch_to
204002ba g     F .init	00000002 _init
2040328c g     F .text	0000001a __metal_interrupt_timer_disable
20406250 g     F .text	00000206 __metal_driver_sifive_gpio0_config_int
204049bc g     F .text	00000062 __metal_driver_cpu_clear_sw_ipi
20400f50 g     O .rodata	0000003c __metal_driver_vtable_sifive_gpio0
2040683c g     F .text	00000038 __metal_driver_sifive_uart0_tx_interrupt_disable
204061a4 g     F .text	00000062 __metal_driver_sifive_gpio0_enable_io
20402660 g     F .text	00000036 __libc_fini_array
80000790 g     O .data	0000000c __metal_dt_clock_4
204065de g     F .text	00000020 __metal_driver_gpio_interrupt_controller
204028b0 g     F .text	00000078 metal_fini
20404946 g     F .text	00000014 __metal_driver_cpu_get_sw_interrupt_id
20404b50 g     F .text	00000020 __metal_driver_cpu_get_buserror
80000000 g       .data	00000000 metal_segment_data_target_start
204032de g     F .text	0000002c __metal_interrupt_local_enable
204030c4 g     F .text	00000034 __metal_driver_riscv_clint0_clear_interrupt
80000874 g     O .bss	00000004 currentPt
20402950 g     F .text	00000026 metal_tty_putc
2040120c g     F .text	00000064 timer_init
20404e8c g     F .text	00000018 __metal_plic0_default_handler
204025b4  w    F .text	0000006e write
00000000 g       *ABS*	00000000 __tbss_size
80000060 g     O .data	0000000c __metal_dt_clock_0
00000800 g       *ABS*	00000000 __heap_size
20405202 g     F .text	00000030 __metal_driver_riscv_plic0_set_threshold
20403520 g     F .text	00000016 __metal_default_beu_handler
2040038c g     O .rodata	00000020 __sf_fake_stderr
204032c2 g     F .text	0000001c __metal_interrupt_external_disable
204067e4 g     F .text	0000001e __metal_driver_sifive_uart0_get_interrupt_id
20404750 g     F .text	0000001c __metal_driver_riscv_cpu_controller_command_request
204043c6 g     F .text	000000e2 __metal_driver_riscv_cpu_controller_interrupt_init
204016d6 g     F .text	00000042 __sfputs_r
20404a9e g     F .text	00000046 __metal_driver_cpu_exception_register
20403242 g     F .text	00000018 __metal_interrupt_software_enable
20403890  w    F .text	00000096 metal_lc1_interrupt_vector_handler
20401fa2 g     F .text	0000001a memchr
20401032 g     F .text	00000032 task1
20401fc0 g     F .text	000000a2 _free_r
800007dc g     O .bss	00000004 _global_atexit
20404d54 g     F .text	00000062 __metal_driver_riscv_plic0_set_priority
2040415a g     F .text	00000058 __metal_controller_interrupt_vector_mode
20402770 g     F .text	000000c8 __call_exitprocs
80000fb0 g       .stack	00000000 _sp
204002e0 g     O .init_array	00000004 _metal_tty_init_ptr
20400150 g     F .init	00000000 _start
20405488 g     F .text	00000084 __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz
204024d6 g     F .text	0000002a _lseek
20404a7e g     F .text	00000020 __metal_driver_cpu_controller_interrupt
20404b12 g     F .text	0000001e __metal_driver_cpu_get_exception_pc
204032a6 g     F .text	0000001c __metal_interrupt_external_enable
204026f4 g     F .text	0000007c __register_exitproc
20406a0a g     F .text	00000042 __metal_driver_sifive_uart0_putc
20404f48 g     F .text	00000158 __metal_driver_riscv_plic0_init
20405162 g     F .text	00000050 __metal_driver_riscv_plic0_enable
2040602c g     F .text	0000002c __metal_driver_sifive_gpio0_output
20403b7e  w    F .text	00000096 metal_lc6_interrupt_vector_handler
204031f8 g     F .text	0000001a __metal_myhart_id
204065fe g     F .text	0000002e __metal_driver_gpio_get_interrupt_id
80000878 g     O .bss	00000010 tcbs
20403394  w    F .text	00000092 metal_software_interrupt_vector_handler
204046b4 g     F .text	0000002c __metal_driver_riscv_cpu_controller_interrupt_disable
20401c9c g     F .text	00000030 _close_r
20406aa2 g     F .text	00000020 __metal_driver_sifive_uart0_get_baud_rate
20401000 g     F .text	00000032 task
20402caa g     F .text	000000da __metal_driver_riscv_clint0_register
800007ac g     O .data	00000008 __metal_dt_clint_2000000
20401b90 g     F .text	0000010c __swsetup_r
20401422 g     F .text	0000009c __sfp
20406dfa g     F .text	0000004a metal_clock_set_rate_hz
204019de g     F .text	00000032 __sread
20405f7c g     F .text	00000040 __metal_driver_sifive_gpio0_enable_input
204002bc  w    F .init	00000000 secondary_main
20403366  w    F .text	0000002e metal_interrupt_vector_handler
20401fbc g     F .text	00000002 __malloc_lock
204068ae g     F .text	00000038 __metal_driver_sifive_uart0_rx_interrupt_disable
20401e12 g     F .text	00000066 _fflush_r
20404d1a g     F .text	0000003a __metal_plic0_get_threshold
20405d12 g     F .text	0000002e __metal_driver_sifive_fe310_g000_prci_get_reg
204003ac g     O .rodata	00000020 __sf_fake_stdin
204042bc g     F .text	000000bc __metal_local_interrupt_enable
20402f84 g     F .text	00000140 __metal_driver_riscv_clint0_command_request
20401528 g     F .text	000000a8 memset
20403ae8  w    F .text	00000096 metal_lc5_interrupt_vector_handler
20401064 g     F .text	00000028 main
800007c8 g       .data	00000000 metal_segment_data_target_end
20406990 g     F .text	0000004a __metal_driver_sifive_uart0_set_rx_watermark
20400fd4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfrosc
2040495a g     F .text	00000062 __metal_driver_cpu_set_sw_ipi
20404a1e g     F .text	00000060 __metal_driver_cpu_get_msip
20406f38 g     F .text	00000016 metal_shutdown
80000000 g       .rodata	00000000 metal_segment_itim_target_end
20404b30 g     F .text	00000020 __metal_driver_cpu_set_exception_pc
20404c52 g     F .text	0000003c __metal_plic0_claim_interrupt
20406960 g     F .text	00000030 __metal_driver_sifive_uart0_get_tx_watermark
20401a94 g     F .text	00000006 __sclose
20403f02  w    F .text	00000096 metal_lc12_interrupt_vector_handler
2040008a g     F .init	00000000 metal_mem_scrub
20401270 g       .text	00000000 osSchedulerLaunch
204015d0 g     F .text	000000de _malloc_r
20402dac g     F .text	0000001c __metal_driver_riscv_clint0_get_vector_mode
800007c4 g     O .data	00000004 __metal_dt_prci_10008000
204047dc g     F .text	00000046 __metal_driver_cpu_timebase_get
204052f6 g     F .text	0000009c __metal_driver_riscv_plic0_affinity_disable
20400000 g       .init	00000000 _enter
20406efc g     F .text	0000001a metal_cpu_get_current_hartid
20405588 g     F .text	00000074 __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz
20406f80 g       .text	00000000 __metal_vector_table
20400ff8 g       *ABS*	00000000 metal_segment_itim_source_start
800007a8  w    O .data	00000004 __metal_cpu_table
800007c8 g     O .bss	00000004 count
80000088 g     O .data	000003d0 __metal_dt_cpu_0_interrupt_controller
2040116a g     F .text	00000060 osKernelAddThreads
204002ba g     F .init	00000002 _fini
204012c6 g     F .text	0000003c iprintf
80000000 g       .rodata	00000000 metal_segment_lim_target_start
20404db6 g     F .text	00000034 __metal_driver_riscv_plic0_get_priority
2040033c g     F .ctors	0000002a use_hfxosc
20403212 g     F .text	00000018 __metal_interrupt_global_enable
20402622 g     F .text	0000000a atexit
20401b5c g     F .text	00000034 _write_r
800007cc g     O .bss	00000004 count1
20403272 g     F .text	0000001a __metal_interrupt_timer_enable
20406a4c g     F .text	00000056 __metal_driver_sifive_uart0_getc
20402ed2 g     F .text	000000b2 __metal_driver_riscv_clint0_disable
20402062 g     F .text	0000010c _printf_common
800007a0 g     O .data	00000004 _impure_ptr
20404888 g     F .text	00000076 __metal_driver_cpu_mtimecmp_set
20401ccc g     F .text	00000146 __sflush_r
20406f16 g     F .text	00000022 __metal_shutdown_exit
20405232 g     F .text	00000028 __metal_driver_riscv_plic0_get_threshold
2040572a g     F .text	000000a4 __metal_driver_sifive_fe310_g000_pll_init
80000078 g     O .data	0000000c __metal_dt_clock_5
20405d40 g     F .text	00000038 __metal_driver_sifive_fe310_g000_prci_set_reg
20407062 g     F .text	0000001e __metal_driver_fixed_clock_get_rate_hz
20402e20 g     F .text	000000b2 __metal_driver_riscv_clint0_enable
20400fec g     O .rodata	00000004 __metal_driver_vtable_sifive_test0
204070b8 g       *ABS*	00000000 metal_segment_data_source_start
20400134 g       .init	00000000 early_trap_vector
800017b0 g       .heap	00000000 metal_segment_heap_target_end
204041b2 g     F .text	000000b2 __metal_controller_interrupt_vector
80000784 g     O .data	0000000c __metal_dt_clock_1
80000458 g     O .data	00000300 __metal_dt_interrupt_controller_c000000
20401eaa g     F .text	0000005a __swhatbuf_r
2040611e g     F .text	00000046 __metal_driver_sifive_gpio0_output_clear
20403536 g     F .text	00000066 __metal_default_timer_handler
204025b4 g     F .text	0000006e _write
20404ea4 g     F .text	000000a4 __metal_plic0_handler
20403926  w    F .text	00000096 metal_lc2_interrupt_vector_handler
204040c4  w    F .text	00000096 metal_lc15_interrupt_vector_handler
20406ea8 g     F .text	00000026 metal_cpu_interrupt_controller
20401130 g     F .text	0000003a osKernelStackInit
800007c0 g     O .data	00000004 __metal_dt_test_100000
80000888 g     O .bss	00000320 TCB_STACK
20401a10 g     F .text	0000004e __swrite
20402636 g     F .text	0000002a exit
20401718 g     F .text	00000296 _vfiprintf_r
204014be g     F .text	0000006a _fwalk_reent
20407080 g     F .text	00000022 __metal_driver_fixed_clock_set_rate_hz
20400ff8 g       *ABS*	00000000 metal_segment_lim_source_start
204003cc g     O .rodata	00000020 __sf_fake_stdout
800007bc g     O .data	00000004 __metal_dt_gpio_10012000
2040334e g     F .text	00000018 __metal_default_interrupt_handler
204029a2 g     F .text	0000002e metal_uart_putc
20402500 g     F .text	0000002a _read
2040293c  w    F .text	00000014 metal_fini_run
20406002 g     F .text	0000002a __metal_driver_sifive_gpio0_input
20403600 g     F .text	00000180 __metal_exception_handler
204037fa  w    F .text	00000096 metal_lc0_interrupt_vector_handler
204070a2 g     F .text	00000014 _exit
20404822 g     F .text	00000066 __metal_driver_cpu_mtime_get
20401f04 g     F .text	0000009e __smakebuf_r
20402d84 g     F .text	00000028 __metal_driver_riscv_clint0_vector_register
2040216e g     F .text	00000270 _printf_i
800007d4 g     O .bss	00000004 __malloc_sbrk_start
2040402e  w    F .text	00000096 metal_lc14_interrupt_vector_handler
20400fdc g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_hfxosc
20402c22 g     F .text	00000088 __metal_driver_riscv_clint0_init
800007d0 g     O .bss	00000004 __malloc_free_list
20400310 g     F .ctors	0000002c metal_sifive_fe310_g000_pll_init
20401718 g     F .text	00000296 _vfprintf_r
20404918 g     F .text	00000014 __metal_driver_cpu_get_timer_interrupt_id
20404dea g     F .text	000000a2 __metal_plic0_enable
20400088  w      .init	00000000 __register_frame_info
2040550c g     F .text	00000022 __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz
2040492c g     F .text	0000001a __metal_driver_cpu_sw_controller_interrupt
2040330a g     F .text	0000002c __metal_interrupt_local_disable
2040325a g     F .text	00000018 __metal_interrupt_software_disable
20402976 g     F .text	0000002c metal_uart_init
80000778 g     O .data	0000000c __metal_dt_clock_3
20404cd4 g     F .text	00000046 __metal_plic0_set_threshold
2040525a g     F .text	0000009c __metal_driver_riscv_plic0_affinity_enable
2040246e g     F .text	00000022 _close
20400fe4 g     O .rodata	00000008 __metal_driver_vtable_sifive_fe310_g000_prci
00000000 g       *ABS*	00000000 __metal_boot_hart
204050a0 g     F .text	000000c2 __metal_driver_riscv_plic0_register



Disassembly of section .init:

20400000 <_enter>:
_enter():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:24
     * it's not valid to obtain the address of any symbol without GP
     * configured.  The C environment might go ahead and do this again, but
     * that's safe as it's a fixed register. */
.option push
.option norelax
    la gp, __global_pointer$
20400000:	5fc01197          	auipc	gp,0x5fc01
20400004:	fa018193          	addi	gp,gp,-96 # 80000fa0 <__global_pointer$>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:28
.option pop

    /* trap over the chicken bit register clearing, aloe & fe310 dont have it */
    la t0, 1f
20400008:	00000297          	auipc	t0,0x0
2040000c:	01828293          	addi	t0,t0,24 # 20400020 <_enter+0x20>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:29
    csrw mtvec, t0
20400010:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:31
    /* chicken bit is enable if core are sifive series. */
    la t0, __metal_chicken_bit
20400014:	00100293          	li	t0,1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:32
    beqz t0, 1f
20400018:	00028463          	beqz	t0,20400020 <_enter+0x20>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:34
    /* If set, always clear the feature disable register for all cores series */
    csrwi 0x7C1, 0
2040001c:	7c105073          	csrwi	0x7c1,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:39
.align 4
1:
    /* Set up a simple trap vector to catch anything that goes wrong early in
     * the boot process. */
    la t0, early_trap_vector
20400020:	00000297          	auipc	t0,0x0
20400024:	11428293          	addi	t0,t0,276 # 20400134 <early_trap_vector>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:40
    csrw mtvec, t0
20400028:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:48
     * C, so here we set up a C environment. First we set up a stack pointer,
     * which is left as a weak reference in order to allow initialization
     * routines that do not need a stack to be set up to transparently be
     * called. */
    .weak __metal_stack_pointer
    la sp, __metal_stack_pointer
2040002c:	00000113          	li	sp,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:55
   /* The METAL is designed for a bare-metal environment and therefore is expected
    * to define its own stack pointer. We also align the stack pointer here
    * because the only RISC-V ABI that's currently defined, mandates 16-byte
    * stack alignment. */

    bne sp, zero, 1f
20400030:	00011463          	bnez	sp,20400038 <_enter+0x38>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:56
    la sp, _sp
20400034:	01018113          	addi	sp,gp,16 # 80000fb0 <_sp>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:59
1:
    /* Increment by hartid number of stack sizes */
    csrr a0, mhartid
20400038:	f1402573          	csrr	a0,mhartid
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:60
    li t0, 0
2040003c:	4281                	li	t0,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:61
    la t1, __stack_size
2040003e:	40000313          	li	t1,1024
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:63
1:
    andi sp, sp, -16
20400042:	ff017113          	andi	sp,sp,-16
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:64
    beq t0, a0, 1f
20400046:	00a28563          	beq	t0,a0,20400050 <_enter+0x50>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:65
    add sp, sp, t1
2040004a:	911a                	add	sp,sp,t1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:66
    addi t0, t0, 1
2040004c:	0285                	addi	t0,t0,1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:67
    j 1b
2040004e:	bfd5                	j	20400042 <_enter+0x42>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:76
     * just skip over the call entirely.   Note that __metal_initialize isn't
     * actually a full C function, as it doesn't end up with the .bss or .data
     * segments having been initialized.  This is done to avoid putting a
     * burden on systems that can be initialized without having a C environment
     * set up. */
    la ra, __metal_before_start
20400050:	00000097          	auipc	ra,0x0
20400054:	07c08093          	addi	ra,ra,124 # 204000cc <__metal_before_start>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:77
    beqz ra, 1f
20400058:	00008363          	beqz	ra,2040005e <_enter+0x5e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:78
    jalr ra
2040005c:	9082                	jalr	ra
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:84
1:

    /* At this point we can enter the C runtime's startup file.  The arguments
     * to this function are designed to match those provided to the SEE, just
     * so we don't have to write another ABI. */
    csrr a0, mhartid
2040005e:	f1402573          	csrr	a0,mhartid
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:85
    li a1, 0
20400062:	4581                	li	a1,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:86
    li a2, 0
20400064:	4601                	li	a2,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:87
    call _start
20400066:	20ed                	jal	20400150 <_start>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:92

    /* If we've made it back here then there's probably something wrong.  We
     * allow the METAL to register a handler here. */
    .weak __metal_after_main
    la ra, __metal_after_main
20400068:	00000093          	li	ra,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:93
    beqz ra, 1f
2040006c:	00008363          	beqz	ra,20400072 <_enter+0x72>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:94
    jalr ra
20400070:	9082                	jalr	ra
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:99
1:

    /* If that handler returns then there's not a whole lot we can do.  Just
     * try to make some noise. */
     la t0, 1f
20400072:	00000297          	auipc	t0,0x0
20400076:	00c28293          	addi	t0,t0,12 # 2040007e <_enter+0x7e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:100
     csrw mtvec, t0
2040007a:	30529073          	csrw	mtvec,t0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:102
1:
     lw t1, 0(x0)
2040007e:	00002303          	lw	t1,0(zero) # 0 <__metal_boot_hart>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:103
     j 1b
20400082:	bff5                	j	2040007e <_enter+0x7e>
20400084:	0000                	unimp
	...

20400088 <__register_frame_info>:
__register_frame_info():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/entry.S:117
.weak __register_frame_info
.global __register_frame_info
.section .text.metal.init.__register_frame_info
__register_frame_info:
    .cfi_startproc
    ret
20400088:	8082                	ret

2040008a <metal_mem_scrub>:
metal_mem_scrub():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:24
.type metal_mem_scrub, @function
metal_mem_scrub:

    /* Disable machine interrupts,
    restore previous mstatus value at exit */
    li      a3, 8
2040008a:	46a1                	li	a3,8
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:25
    csrrc   t1, mstatus, a3
2040008c:	3006b373          	csrrc	t1,mstatus,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:28

#if __riscv_xlen == 32
    addi    t0, x0, 4
20400090:	4291                	li	t0,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:30
1:
    blt     a1, t0, 2f
20400092:	0055c563          	blt	a1,t0,2040009c <metal_mem_scrub+0x12>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:31
    andi    a2, a0, 3
20400096:	00357613          	andi	a2,a0,3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:32
    beqz    a2, 3f
2040009a:	ca11                	beqz	a2,204000ae <metal_mem_scrub+0x24>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:34
2:
    sb      x0, 0(a0)
2040009c:	00050023          	sb	zero,0(a0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:35
    addi    a0, a0, 1
204000a0:	0505                	addi	a0,a0,1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:36
    addi    a1, a1, -1
204000a2:	15fd                	addi	a1,a1,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:37
    bgtz    a1, 1b
204000a4:	feb047e3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:38
    csrw    mstatus, t1
204000a8:	30031073          	csrw	mstatus,t1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:39
    ret
204000ac:	8082                	ret
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:41
3:
    sw      x0, 0(a0)
204000ae:	00052023          	sw	zero,0(a0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:42
    addi    a0, a0, 4
204000b2:	0511                	addi	a0,a0,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:43
    addi    a1, a1, -4
204000b4:	15f1                	addi	a1,a1,-4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:44
    bgtz    a1, 1b
204000b6:	fcb04ee3          	bgtz	a1,20400092 <metal_mem_scrub+0x8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:45
    csrw    mstatus, t1
204000ba:	30031073          	csrw	mstatus,t1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:46
    ret
204000be:	8082                	ret

204000c0 <__metal_memory_scrub>:
__metal_memory_scrub():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:74
.type __metal_memory_scrub, @function
__metal_memory_scrub:
/* Zero out specified memory regions */
1:
#if __riscv_xlen == 32
    sw      x0, 0(t1)
204000c0:	00032023          	sw	zero,0(t1)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:75
    addi    t1, t1, 4
204000c4:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:76
    blt     t1, t2, 1b
204000c6:	fe734de3          	blt	t1,t2,204000c0 <__metal_memory_scrub>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:82
#else
    sd      x0, 0(t1)
    addi    t1, t1, 8
    blt     t1, t2, 1b
#endif
    ret
204000ca:	8082                	ret

204000cc <__metal_before_start>:
__metal_before_start():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:94
.weak __metal_before_start
.global __metal_before_start
.type __metal_before_start, @function
__metal_before_start:
    /* Save caller ra */
    mv      s0, ra
204000cc:	8406                	mv	s0,ra
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:96

    la      t0, __metal_eccscrub_bit
204000ce:	dfc00297          	auipc	t0,0xdfc00
204000d2:	f3228293          	addi	t0,t0,-206 # 0 <__metal_boot_hart>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:97
    beqz    t0, skip_scrub
204000d6:	04028c63          	beqz	t0,2040012e <skip_scrub>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:99

    la      t0, __metal_boot_hart
204000da:	dfc00297          	auipc	t0,0xdfc00
204000de:	f2628293          	addi	t0,t0,-218 # 0 <__metal_boot_hart>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:100
    csrr    a5, mhartid
204000e2:	f14027f3          	csrr	a5,mhartid
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:103

    /* Disable machine interrupts to be safe */
    li      a3, 8
204000e6:	46a1                	li	a3,8
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:104
    csrc    mstatus, a3
204000e8:	3006b073          	csrc	mstatus,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:107

    /* Zero out per hart stack */
    mv      t1, sp
204000ec:	830a                	mv	t1,sp
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:108
    la      t2, __stack_size
204000ee:	dfc00397          	auipc	t2,0xdfc00
204000f2:	31238393          	addi	t2,t2,786 # 400 <__stack_size>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:109
    add     t2, t2, sp
204000f6:	938a                	add	t2,t2,sp
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:110
    beq     t1, t2, 1f
204000f8:	00730363          	beq	t1,t2,204000fe <__metal_before_start+0x32>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:111
    jal     __metal_memory_scrub
204000fc:	37d1                	jal	204000c0 <__metal_memory_scrub>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:113
1:
    bne     a5, t0, skip_scrub
204000fe:	02579863          	bne	a5,t0,2040012e <skip_scrub>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:116

    /* Zero out data segment */
    la      t1, metal_segment_data_target_start
20400102:	5fc00317          	auipc	t1,0x5fc00
20400106:	efe30313          	addi	t1,t1,-258 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:117
    la      t2, metal_segment_data_target_end
2040010a:	5fc00397          	auipc	t2,0x5fc00
2040010e:	6be38393          	addi	t2,t2,1726 # 800007c8 <count>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:118
    beq     t1, t2, 1f
20400112:	00730363          	beq	t1,t2,20400118 <__metal_before_start+0x4c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:119
    jal     __metal_memory_scrub
20400116:	376d                	jal	204000c0 <__metal_memory_scrub>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:122
1:
    /* Zero out itim memory */
    la      t1, metal_segment_itim_target_start
20400118:	5fc00317          	auipc	t1,0x5fc00
2040011c:	ee830313          	addi	t1,t1,-280 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:123
    la      t2, metal_segment_itim_target_end
20400120:	5fc00397          	auipc	t2,0x5fc00
20400124:	ee038393          	addi	t2,t2,-288 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:124
    beq     t1, t2, skip_scrub
20400128:	00730363          	beq	t1,t2,2040012e <skip_scrub>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:125
    jal     __metal_memory_scrub
2040012c:	3f51                	jal	204000c0 <__metal_memory_scrub>

2040012e <skip_scrub>:
skip_scrub():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:129

skip_scrub:
    /* Restore caller ra */
    mv      ra, s0
2040012e:	80a2                	mv	ra,s0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/scrub.S:130
    ret
20400130:	8082                	ret
	...

20400134 <early_trap_vector>:
early_trap_vector():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/trap.S:64
.section .text.metal.init.trapvec
.global early_trap_vector
.align 2
early_trap_vector:
    .cfi_startproc
    csrr t0, mcause
20400134:	342022f3          	csrr	t0,mcause
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/trap.S:65
    csrr t1, mepc
20400138:	34102373          	csrr	t1,mepc
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/trap.S:66
    csrr t2, mtval
2040013c:	343023f3          	csrr	t2,mtval
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/trap.S:67
    j early_trap_vector
20400140:	bfd5                	j	20400134 <early_trap_vector>

20400142 <__metal_synchronize_harts>:
__metal_synchronize_harts():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/synchronize_harts.c:19
/*
 * _synchronize_harts() is called by crt0.S to cause harts > 0 to wait for
 * hart 0 to finish copying the datat section, zeroing the BSS, and running
 * the libc contstructors.
 */
__attribute__((section(".init"))) void __metal_synchronize_harts() {
20400142:	1141                	addi	sp,sp,-16
20400144:	c622                	sw	s0,12(sp)
20400146:	0800                	addi	s0,sp,16
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/synchronize_harts.c:66
        while (METAL_MSIP(msip_base, hart) == 1)
            ;
    }

#endif /* __METAL_DT_MAX_HARTS > 1 */
}
20400148:	0001                	nop
2040014a:	4432                	lw	s0,12(sp)
2040014c:	0141                	addi	sp,sp,16
2040014e:	8082                	ret

20400150 <_start>:
_start():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:36
.cfi_startproc
.cfi_undefined ra

  /* This is a bit funky: it's not usually sane for _start to return, but in
   * this case we actually want to in order to signal an error to the METAL. */
  mv s0, ra
20400150:	8406                	mv	s0,ra
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:44
   * safely perform any access that may be relaxed without GP being set.  This
   * is done with relaxation disabled to avoid relaxing the address calculation
   * to just "addi gp, gp, 0". */
.option push
.option norelax
  la gp, __global_pointer$
20400152:	5fc01197          	auipc	gp,0x5fc01
20400156:	e4e18193          	addi	gp,gp,-434 # 80000fa0 <__global_pointer$>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:50
.option pop

  /* Stack pointer is expected to be initialized before _start */

  /* If we're not hart 0, skip the initialization work */
  la t0, __metal_boot_hart
2040015a:	00000293          	li	t0,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:51
  bne a0, t0, _skip_init
2040015e:	0e551163          	bne	a0,t0,20400240 <_skip_init>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:60
   * boot and then need to get relocated into a non-persistant writable memory
   * before C code can execute.  If this is the case we do so here.  This step
   * is optional: if the METAL provides an environment in which this relocation
   * is not necessary then it must simply set metal_segment_data_source_start to
   * be equal to metal_segment_data_target_start. */
  la t0, metal_segment_data_source_start
20400162:	00007297          	auipc	t0,0x7
20400166:	f5628293          	addi	t0,t0,-170 # 204070b8 <metal_segment_data_source_start>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:61
  la t1, metal_segment_data_target_start
2040016a:	5fc00317          	auipc	t1,0x5fc00
2040016e:	e9630313          	addi	t1,t1,-362 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:62
  la t2, metal_segment_data_target_end
20400172:	5fc00397          	auipc	t2,0x5fc00
20400176:	65638393          	addi	t2,t2,1622 # 800007c8 <count>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:64

  beq t0, t1, 2f
2040017a:	00628c63          	beq	t0,t1,20400192 <_start+0x42>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:65
  bge t1, t2, 2f
2040017e:	00735a63          	bge	t1,t2,20400192 <_start+0x42>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:69

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
20400182:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:70
  addi t0, t0, 4
20400186:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:71
  sw   a0, 0(t1)
20400188:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:72
  addi t1, t1, 4
2040018c:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:73
  blt  t1, t2, 1b
2040018e:	fe734ae3          	blt	t1,t2,20400182 <_start+0x32>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:84
  blt  t1, t2, 1b
#endif
2:

  /* Copy the ITIM section */
  la t0, metal_segment_itim_source_start
20400192:	00001297          	auipc	t0,0x1
20400196:	e6628293          	addi	t0,t0,-410 # 20400ff8 <metal_segment_itim_source_start>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:85
  la t1, metal_segment_itim_target_start
2040019a:	5fc00317          	auipc	t1,0x5fc00
2040019e:	e6630313          	addi	t1,t1,-410 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:86
  la t2, metal_segment_itim_target_end
204001a2:	5fc00397          	auipc	t2,0x5fc00
204001a6:	e5e38393          	addi	t2,t2,-418 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:88

  beq t0, t1, 2f
204001aa:	00628c63          	beq	t0,t1,204001c2 <_start+0x72>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:89
  bge t1, t2, 2f
204001ae:	00735a63          	bge	t1,t2,204001c2 <_start+0x72>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:93

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001b2:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:94
  addi t0, t0, 4
204001b6:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:95
  sw   a0, 0(t1)
204001b8:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:96
  addi t1, t1, 4
204001bc:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:97
  blt  t1, t2, 1b
204001be:	fe734ae3          	blt	t1,t2,204001b2 <_start+0x62>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:109
#endif
2:

  /* Fence all subsequent instruction fetches until after the ITIM writes
     complete */
  fence.i
204001c2:	0000100f          	fence.i
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:114

2:

  /* Copy the LIM section */
  la t0, metal_segment_lim_source_start
204001c6:	00001297          	auipc	t0,0x1
204001ca:	e3228293          	addi	t0,t0,-462 # 20400ff8 <metal_segment_itim_source_start>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:115
  la t1, metal_segment_lim_target_start
204001ce:	5fc00317          	auipc	t1,0x5fc00
204001d2:	e3230313          	addi	t1,t1,-462 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:116
  la t2, metal_segment_lim_target_end
204001d6:	5fc00397          	auipc	t2,0x5fc00
204001da:	e2a38393          	addi	t2,t2,-470 # 80000000 <impure_data>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:118

  beq t0, t1, 2f
204001de:	00628c63          	beq	t0,t1,204001f6 <_start+0xa6>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:119
  bge t1, t2, 2f
204001e2:	00735a63          	bge	t1,t2,204001f6 <_start+0xa6>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:123

1:
#if __riscv_xlen == 32
  lw   a0, 0(t0)
204001e6:	0002a503          	lw	a0,0(t0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:124
  addi t0, t0, 4
204001ea:	0291                	addi	t0,t0,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:125
  sw   a0, 0(t1)
204001ec:	00a32023          	sw	a0,0(t1)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:126
  addi t1, t1, 4
204001f0:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:127
  blt  t1, t2, 1b
204001f2:	fe734ae3          	blt	t1,t2,204001e6 <_start+0x96>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:139
#endif
2:

  /* Fence all subsequent instruction fetches until after the LIM writes
     complete */
  fence.i
204001f6:	0000100f          	fence.i
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:142

  /* Zero the BSS segment. */
  la t1, metal_segment_bss_target_start
204001fa:	5fc00317          	auipc	t1,0x5fc00
204001fe:	5ce30313          	addi	t1,t1,1486 # 800007c8 <count>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:143
  la t2, metal_segment_bss_target_end
20400202:	c0818393          	addi	t2,gp,-1016 # 80000ba8 <metal_segment_bss_target_end>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:145

  bge t1, t2, 2f
20400206:	00735763          	bge	t1,t2,20400214 <_start+0xc4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:149

1:
#if __riscv_xlen == 32
  sw   x0, 0(t1)
2040020a:	00032023          	sw	zero,0(t1)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:150
  addi t1, t1, 4
2040020e:	0311                	addi	t1,t1,4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:151
  blt  t1, t2, 1b
20400210:	fe734de3          	blt	t1,t2,2040020a <_start+0xba>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:161
#endif
2:

  /* Set TLS pointer */
  .weak __tls_base	
  la tp, __tls_base
20400214:	5fc00217          	auipc	tp,0x5fc00
20400218:	5b420213          	addi	tp,tp,1460 # 800007c8 <count>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:166

  /* At this point we're in an environment that can execute C code.  The first
   * thing to do is to make the callback to the parent environment if it's been
   * requested to do so. */
  beqz a2, 1f
2040021c:	c211                	beqz	a2,20400220 <_start+0xd0>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:167
  jalr a2
2040021e:	9602                	jalr	a2
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:171
1:

  /* The RISC-V port only uses new-style constructors and destructors. */
  la a0, __libc_fini_array
20400220:	00002517          	auipc	a0,0x2
20400224:	44050513          	addi	a0,a0,1088 # 20402660 <__libc_fini_array>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:172
  call atexit
20400228:	3fa020ef          	jal	ra,20402622 <atexit>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:173
  call __libc_init_array
2040022c:	46a020ef          	jal	ra,20402696 <__libc_init_array>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:177

  /* Register metal_fini_run as a destructor and call metal_init_run to
   * run and setup Metal constructors */
  la a0, metal_fini_run
20400230:	00002517          	auipc	a0,0x2
20400234:	70c50513          	addi	a0,a0,1804 # 2040293c <metal_fini_run>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:178
  call atexit
20400238:	3ea020ef          	jal	ra,20402622 <atexit>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:179
  call metal_init_run
2040023c:	6ec020ef          	jal	ra,20402928 <metal_init_run>

20400240 <_skip_init>:
_skip_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:185

_skip_init:

  /* Synchronize harts so that secondary harts wait until hart 0 finishes
     initializing */
  call __metal_synchronize_harts
20400240:	3709                	jal	20400142 <__metal_synchronize_harts>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:188

  /* Disable and clear all interrupt sources */
  li   a3, -1
20400242:	56fd                	li	a3,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:189
  csrc mie, a3
20400244:	3046b073          	csrc	mie,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:190
  csrc mip, a3
20400248:	3446b073          	csrc	mip,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:194

  /* The delegation CSRs exist if user mode interrupts (N extension) or
   * supervisor mode (S extension) are supported */
  csrr a5, misa
2040024c:	301027f3          	csrr	a5,misa
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:195
  lui  a4, 0x42
20400250:	00042737          	lui	a4,0x42
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:196
  and  a4, a4, a5
20400254:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:197
  beqz a4, 1f
20400256:	c709                	beqz	a4,20400260 <_skip_init+0x20>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:198
  csrc mideleg, a3
20400258:	3036b073          	csrc	mideleg,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:199
  csrc medeleg, a3
2040025c:	3026b073          	csrc	medeleg,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:203
1:

  /* The satp CSR exists if supervisor mode (S extension) is supported */
  lui  a4, 0x40
20400260:	00040737          	lui	a4,0x40
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:204
  and  a4, a4, a5
20400264:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:205
  beqz a4, 1f
20400266:	c319                	beqz	a4,2040026c <_skip_init+0x2c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:206
  csrc satp, a3
20400268:	1806b073          	csrc	satp,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:210
1:

  /* Check RISC-V isa and enable FS bits if Floating Point architecture. */
  li   a4, 0x10028
2040026c:	6741                	lui	a4,0x10
2040026e:	02870713          	addi	a4,a4,40 # 10028 <__heap_size+0xf828>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:211
  and  a5, a5, a4
20400272:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:212
  beqz a5, 1f
20400274:	cb89                	beqz	a5,20400286 <_skip_init+0x46>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:213
  csrr a5, mstatus
20400276:	300027f3          	csrr	a5,mstatus
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:214
  lui  a4, 0x2
2040027a:	6709                	lui	a4,0x2
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:215
  or   a5, a5, a4
2040027c:	8fd9                	or	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:216
  csrw mstatus, a5
2040027e:	30079073          	csrw	mstatus,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:217
  csrwi fcsr, 0
20400282:	00305073          	csrwi	fcsr,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:221
1:

  /* Check for vector extension support and enable it if found */
  csrr a5, misa
20400286:	301027f3          	csrr	a5,misa
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:222
  li a4, 0x200000
2040028a:	00200737          	lui	a4,0x200
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:223
  and a5, a5, a4
2040028e:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:224
  beqz a5, 1f
20400290:	c799                	beqz	a5,2040029e <_skip_init+0x5e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:225
  csrr a5, mstatus
20400292:	300027f3          	csrr	a5,mstatus
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:226
  ori a5, a5, 0x200
20400296:	2007e793          	ori	a5,a5,512
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:227
  csrw mstatus, a5
2040029a:	30079073          	csrw	mstatus,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:233
1:

  /* This is a C runtime, so main() is defined to have some arguments.  Since
   * there's nothing sane the METAL can pass we don't bother with that but
   * instead just setup as close to a NOP as we can. */
  li a0, 1     /* argc=1 */
2040029e:	4505                	li	a0,1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:234
  la a1, argv  /* argv = {"libgloss", NULL} */
204002a0:	00000597          	auipc	a1,0x0
204002a4:	1e058593          	addi	a1,a1,480 # 20400480 <argv>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:235
  la a2, envp  /* envp = {NULL} */
204002a8:	00000617          	auipc	a2,0x0
204002ac:	1dc60613          	addi	a2,a2,476 # 20400484 <envp>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:236
  call secondary_main
204002b0:	2031                	jal	204002bc <secondary_main>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:242

  /* Call exit to handle libc's cleanup routines.  Under normal contains this
   * shouldn't even get called, but I'm still not using a tail call here
   * because returning to the METAL is the right thing to do in pathological
   * situations. */
  call exit
204002b2:	384020ef          	jal	ra,20402636 <exit>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:247

  /* And here's where we return.  Again, it's a bit odd but the METAL defines
   * this as a bad idea (ie, as opposed to leaving it undefined) and at this
   * point it's really the only thing left to do. */
  mv ra, s0
204002b6:	80a2                	mv	ra,s0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:248
  ret
204002b8:	8082                	ret

204002ba <_fini>:
_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:260
.type   _init, @function
.global _fini
.type   _fini, @function
_init:
_fini:
  ret
204002ba:	8082                	ret

204002bc <secondary_main>:
secondary_main():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:271
.weak   secondary_main
.global secondary_main
.type   secondary_main, @function

secondary_main:
  addi sp, sp, -16
204002bc:	1141                	addi	sp,sp,-16
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:273
#if __riscv_xlen == 32
  sw ra, 4(sp)
204002be:	c206                	sw	ra,4(sp)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:277
#else
  sd ra, 8(sp)
#endif
  csrr t0, mhartid
204002c0:	f14022f3          	csrr	t0,mhartid
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:278
  la t1, __metal_boot_hart
204002c4:	00000313          	li	t1,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:279
  beq t0, t1, 2f
204002c8:	00628563          	beq	t0,t1,204002d2 <secondary_main+0x16>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:281
1:
  wfi
204002cc:	10500073          	wfi
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:282
  j 1b
204002d0:	bff5                	j	204002cc <secondary_main+0x10>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:284
2:
  call main
204002d2:	593000ef          	jal	ra,20401064 <main>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:286
#if __riscv_xlen == 32
  lw ra, 4(sp)
204002d6:	4092                	lw	ra,4(sp)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:290
#else
  ld ra, 8(sp)
#endif
  addi sp, sp, 16
204002d8:	0141                	addi	sp,sp,16
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/crt0.S:291
  ret
204002da:	8082                	ret

Disassembly of section .ctors:

204002ec <metal_tty_init>:
metal_tty_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/tty.c:28

#ifndef __METAL_DT_STDOUT_UART_BAUD
#define __METAL_DT_STDOUT_UART_BAUD 115200
#endif

METAL_CONSTRUCTOR(metal_tty_init) {
204002ec:	1141                	addi	sp,sp,-16
204002ee:	c606                	sw	ra,12(sp)
204002f0:	c422                	sw	s0,8(sp)
204002f2:	0800                	addi	s0,sp,16
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/tty.c:29
    metal_uart_init(__METAL_DT_STDOUT_UART_HANDLE, __METAL_DT_STDOUT_UART_BAUD);
204002f4:	67f1                	lui	a5,0x1c
204002f6:	20078593          	addi	a1,a5,512 # 1c200 <__heap_size+0x1ba00>
204002fa:	800007b7          	lui	a5,0x80000
204002fe:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
20400302:	674020ef          	jal	ra,20402976 <metal_uart_init>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/tty.c:30
}
20400306:	0001                	nop
20400308:	40b2                	lw	ra,12(sp)
2040030a:	4422                	lw	s0,8(sp)
2040030c:	0141                	addi	sp,sp,16
2040030e:	8082                	ret

20400310 <metal_sifive_fe310_g000_pll_init>:
metal_sifive_fe310_g000_pll_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:151
    return pll_input_rate * config->multiplier / config->divisor;
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE

METAL_CONSTRUCTOR(metal_sifive_fe310_g000_pll_init) {
20400310:	1101                	addi	sp,sp,-32
20400312:	ce06                	sw	ra,28(sp)
20400314:	cc22                	sw	s0,24(sp)
20400316:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:152
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400318:	386050ef          	jal	ra,2040569e <__metal_driver_sifive_fe310_g000_pll_init_rate>
2040031c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:154
    /* If the PLL init_rate is zero, don't initialize the PLL */
    if (init_rate != 0)
20400320:	fec42783          	lw	a5,-20(s0)
20400324:	c799                	beqz	a5,20400332 <metal_sifive_fe310_g000_pll_init+0x22>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:155
        __metal_driver_sifive_fe310_g000_pll_init(
20400326:	800007b7          	lui	a5,0x80000
2040032a:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffefe0>
2040032e:	3fc050ef          	jal	ra,2040572a <__metal_driver_sifive_fe310_g000_pll_init>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:157
            __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE);
}
20400332:	0001                	nop
20400334:	40f2                	lw	ra,28(sp)
20400336:	4462                	lw	s0,24(sp)
20400338:	6105                	addi	sp,sp,32
2040033a:	8082                	ret

2040033c <use_hfxosc>:
use_hfxosc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:389

    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
}

#ifdef __METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE
METAL_CONSTRUCTOR(use_hfxosc) {
2040033c:	1101                	addi	sp,sp,-32
2040033e:	ce06                	sw	ra,28(sp)
20400340:	cc22                	sw	s0,24(sp)
20400342:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:390
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20400344:	35a050ef          	jal	ra,2040569e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20400348:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:391
    metal_clock_set_rate_hz(&__METAL_DT_SIFIVE_FE310_G000_PLL_HANDLE->clock,
2040034c:	fec42583          	lw	a1,-20(s0)
20400350:	800007b7          	lui	a5,0x80000
20400354:	79078513          	addi	a0,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffefe0>
20400358:	2a3060ef          	jal	ra,20406dfa <metal_clock_set_rate_hz>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:393
                            init_rate);
}
2040035c:	0001                	nop
2040035e:	40f2                	lw	ra,28(sp)
20400360:	4462                	lw	s0,24(sp)
20400362:	6105                	addi	sp,sp,32
20400364:	8082                	ret

Disassembly of section .text:

20401000 <task>:
task():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:11
#include <stdio.h>


int count = 0, count1= 0;

void task(void){
20401000:	1141                	addi	sp,sp,-16
20401002:	c606                	sw	ra,12(sp)
20401004:	c422                	sw	s0,8(sp)
20401006:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:13 (discriminator 1)
	while(1){
		count++;
20401008:	800007b7          	lui	a5,0x80000
2040100c:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xfffff018>
20401010:	00178713          	addi	a4,a5,1
20401014:	800007b7          	lui	a5,0x80000
20401018:	7ce7a423          	sw	a4,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xfffff018>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:14 (discriminator 1)
		printf("Value: %d\n", count);
2040101c:	800007b7          	lui	a5,0x80000
20401020:	7c87a783          	lw	a5,1992(a5) # 800007c8 <metal_segment_heap_target_end+0xfffff018>
20401024:	85be                	mv	a1,a5
20401026:	204007b7          	lui	a5,0x20400
2040102a:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
2040102e:	2c61                	jal	204012c6 <iprintf>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:13 (discriminator 1)
		count++;
20401030:	bfe1                	j	20401008 <task+0x8>

20401032 <task1>:
task1():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:18
	}
}

void task1(void){
20401032:	1141                	addi	sp,sp,-16
20401034:	c606                	sw	ra,12(sp)
20401036:	c422                	sw	s0,8(sp)
20401038:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:20 (discriminator 1)
	while(1){
		count1++;
2040103a:	800007b7          	lui	a5,0x80000
2040103e:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xfffff01c>
20401042:	00178713          	addi	a4,a5,1
20401046:	800007b7          	lui	a5,0x80000
2040104a:	7ce7a623          	sw	a4,1996(a5) # 800007cc <metal_segment_heap_target_end+0xfffff01c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:21 (discriminator 1)
		printf("Value: %d\n", count1);
2040104e:	800007b7          	lui	a5,0x80000
20401052:	7cc7a783          	lw	a5,1996(a5) # 800007cc <metal_segment_heap_target_end+0xfffff01c>
20401056:	85be                	mv	a1,a5
20401058:	204007b7          	lui	a5,0x20400
2040105c:	36878513          	addi	a0,a5,872 # 20400368 <use_hfxosc+0x2c>
20401060:	249d                	jal	204012c6 <iprintf>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:20 (discriminator 1)
		count1++;
20401062:	bfe1                	j	2040103a <task1+0x8>

20401064 <main>:
main():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:25
	}
}

int main() {
20401064:	1141                	addi	sp,sp,-16
20401066:	c606                	sw	ra,12(sp)
20401068:	c422                	sw	s0,8(sp)
2040106a:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:27
//	printf("Value: %d\n", count);
	osKernelAddThreads(&task, &task1);
2040106c:	204017b7          	lui	a5,0x20401
20401070:	03278593          	addi	a1,a5,50 # 20401032 <task1>
20401074:	204017b7          	lui	a5,0x20401
20401078:	00078513          	mv	a0,a5
2040107c:	20fd                	jal	2040116a <osKernelAddThreads>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:28
	osKernelLaunch();
2040107e:	22b1                	jal	204011ca <osKernelLaunch>
20401080:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/hello.c:29
}
20401082:	853e                	mv	a0,a5
20401084:	40b2                	lw	ra,12(sp)
20401086:	4422                	lw	s0,8(sp)
20401088:	0141                	addi	sp,sp,16
2040108a:	8082                	ret

2040108c <w_mepc>:
w_mepc():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:41
}

// machine exception program counter, holds the
// instruction address to which a return from
// exception will go.
static inline void w_mepc(uint32_t x) {
2040108c:	1101                	addi	sp,sp,-32
2040108e:	ce22                	sw	s0,28(sp)
20401090:	1000                	addi	s0,sp,32
20401092:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:42
    asm volatile("csrw mepc, %0" : : "r"(x));
20401096:	fec42783          	lw	a5,-20(s0)
2040109a:	34179073          	csrw	mepc,a5
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:43
}
2040109e:	0001                	nop
204010a0:	4472                	lw	s0,28(sp)
204010a2:	6105                	addi	sp,sp,32
204010a4:	8082                	ret

204010a6 <r_mie>:
r_mie():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:92

// Machine-mode Interrupt Enable
#define MIE_MEIE (1L << 11)  // external
#define MIE_MTIE (1L << 7)   // timer
#define MIE_MSIE (1L << 3)   // software
static inline uint32_t r_mie() {
204010a6:	1101                	addi	sp,sp,-32
204010a8:	ce22                	sw	s0,28(sp)
204010aa:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:94
    uint32_t x;
    asm volatile("csrr %0, mie" : "=r"(x));
204010ac:	304027f3          	csrr	a5,mie
204010b0:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:95
    return x;
204010b4:	fec42783          	lw	a5,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:96
}
204010b8:	853e                	mv	a0,a5
204010ba:	4472                	lw	s0,28(sp)
204010bc:	6105                	addi	sp,sp,32
204010be:	8082                	ret

204010c0 <w_mie>:
w_mie():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:98

static inline void w_mie(uint32_t x) {
204010c0:	1101                	addi	sp,sp,-32
204010c2:	ce22                	sw	s0,28(sp)
204010c4:	1000                	addi	s0,sp,32
204010c6:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:99
    asm volatile("csrw mie, %0" : : "r"(x));
204010ca:	fec42783          	lw	a5,-20(s0)
204010ce:	30479073          	csrw	mie,a5
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:100
}
204010d2:	0001                	nop
204010d4:	4472                	lw	s0,28(sp)
204010d6:	6105                	addi	sp,sp,32
204010d8:	8082                	ret

204010da <w_mtvec>:
w_mtvec():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:150
    asm volatile("csrr %0, stvec" : "=r"(x));
    return x;
}

// Machine-mode interrupt vector
static inline void w_mtvec(uint32_t x) {
204010da:	1101                	addi	sp,sp,-32
204010dc:	ce22                	sw	s0,28(sp)
204010de:	1000                	addi	s0,sp,32
204010e0:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:151
    asm volatile("csrw mtvec, %0" : : "r"(x));
204010e4:	fec42783          	lw	a5,-20(s0)
204010e8:	30579073          	csrw	mtvec,a5
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/riscv.h:152
}
204010ec:	0001                	nop
204010ee:	4472                	lw	s0,28(sp)
204010f0:	6105                	addi	sp,sp,32
204010f2:	8082                	ret

204010f4 <handle_trap>:
handle_trap():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:17

extern void osSchedulerLaunch(void);
extern int main(void);
extern void switch_to(void);

void handle_trap() {
204010f4:	1101                	addi	sp,sp,-32
204010f6:	ce06                	sw	ra,28(sp)
204010f8:	cc22                	sw	s0,24(sp)
204010fa:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:19
    uint32_t mcause, mepc;
    asm volatile("csrr %0, mcause" : "=r"(mcause));
204010fc:	342027f3          	csrr	a5,mcause
20401100:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:20
    asm volatile("csrr %0, mepc" : "=r"(mepc));
20401104:	341027f3          	csrr	a5,mepc
20401108:	fef42423          	sw	a5,-24(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:22
    //*MTIMECMP = *MTIME + 0xfffff * 5;
    printf("Unknown interrupt: %x\n ",mcause << 1 >> 1);
2040110c:	fec42703          	lw	a4,-20(s0)
20401110:	800007b7          	lui	a5,0x80000
20401114:	fff7c793          	not	a5,a5
20401118:	8ff9                	and	a5,a5,a4
2040111a:	85be                	mv	a1,a5
2040111c:	204007b7          	lui	a5,0x20400
20401120:	37478513          	addi	a0,a5,884 # 20400374 <use_hfxosc+0x38>
20401124:	224d                	jal	204012c6 <iprintf>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:23
}
20401126:	0001                	nop
20401128:	40f2                	lw	ra,28(sp)
2040112a:	4462                	lw	s0,24(sp)
2040112c:	6105                	addi	sp,sp,32
2040112e:	8082                	ret

20401130 <osKernelStackInit>:
osKernelStackInit():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:35
typedef struct tcb tcb_t;
tcb_t tcbs[NUM_OF_THREADS];
tcb_t *currentPt;
int32_t TCB_STACK[NUM_OF_THREADS][STACKSIZE];

void osKernelStackInit(int i){
20401130:	1101                	addi	sp,sp,-32
20401132:	ce22                	sw	s0,28(sp)
20401134:	1000                	addi	s0,sp,32
20401136:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:36
	tcbs[i].stackPt	= &TCB_STACK[i][STACKSIZE];
2040113a:	fec42783          	lw	a5,-20(s0)
2040113e:	00178713          	addi	a4,a5,1
20401142:	19000793          	li	a5,400
20401146:	02f70733          	mul	a4,a4,a5
2040114a:	800017b7          	lui	a5,0x80001
2040114e:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xfffff0d8>
20401152:	973e                	add	a4,a4,a5
20401154:	8d818693          	addi	a3,gp,-1832 # 80000878 <tcbs>
20401158:	fec42783          	lw	a5,-20(s0)
2040115c:	078e                	slli	a5,a5,0x3
2040115e:	97b6                	add	a5,a5,a3
20401160:	c398                	sw	a4,0(a5)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:38
	//TCB_STACK[i][STACKSIZE-1] = 0x01000000;
}
20401162:	0001                	nop
20401164:	4472                	lw	s0,28(sp)
20401166:	6105                	addi	sp,sp,32
20401168:	8082                	ret

2040116a <osKernelAddThreads>:
osKernelAddThreads():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:40

uint32_t osKernelAddThreads(void(*task0)(void), void(*task1)(void)){
2040116a:	1101                	addi	sp,sp,-32
2040116c:	ce06                	sw	ra,28(sp)
2040116e:	cc22                	sw	s0,24(sp)
20401170:	1000                	addi	s0,sp,32
20401172:	fea42623          	sw	a0,-20(s0)
20401176:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:42
	//__disable_irq();
	tcbs[0].nextPt = &tcbs[1];
2040117a:	8d818793          	addi	a5,gp,-1832 # 80000878 <tcbs>
2040117e:	8e018713          	addi	a4,gp,-1824 # 80000880 <tcbs+0x8>
20401182:	c3d8                	sw	a4,4(a5)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:43
	tcbs[1].nextPt = &tcbs[0];
20401184:	8d818793          	addi	a5,gp,-1832 # 80000878 <tcbs>
20401188:	8d818713          	addi	a4,gp,-1832 # 80000878 <tcbs>
2040118c:	c7d8                	sw	a4,12(a5)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:44
	osKernelStackInit(0);
2040118e:	4501                	li	a0,0
20401190:	3745                	jal	20401130 <osKernelStackInit>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:45
	TCB_STACK[0][STACKSIZE] = (int32_t)(task0);
20401192:	fec42703          	lw	a4,-20(s0)
20401196:	800017b7          	lui	a5,0x80001
2040119a:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xfffff0d8>
2040119e:	18e7a823          	sw	a4,400(a5)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:46
	osKernelStackInit(1);
204011a2:	4505                	li	a0,1
204011a4:	3771                	jal	20401130 <osKernelStackInit>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:47
	TCB_STACK[1][STACKSIZE] = (int32_t)(task1);
204011a6:	fe842703          	lw	a4,-24(s0)
204011aa:	800017b7          	lui	a5,0x80001
204011ae:	88878793          	addi	a5,a5,-1912 # 80000888 <metal_segment_heap_target_end+0xfffff0d8>
204011b2:	32e7a023          	sw	a4,800(a5)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:48
	currentPt = &tcbs[0];
204011b6:	8d818713          	addi	a4,gp,-1832 # 80000878 <tcbs>
204011ba:	8ce1aa23          	sw	a4,-1836(gp) # 80000874 <currentPt>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:50
	//__enable_irq();
	return 1;
204011be:	4785                	li	a5,1
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:51
}
204011c0:	853e                	mv	a0,a5
204011c2:	40f2                	lw	ra,28(sp)
204011c4:	4462                	lw	s0,24(sp)
204011c6:	6105                	addi	sp,sp,32
204011c8:	8082                	ret

204011ca <osKernelLaunch>:
osKernelLaunch():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:53

void osKernelLaunch(void){
204011ca:	1141                	addi	sp,sp,-16
204011cc:	c606                	sw	ra,12(sp)
204011ce:	c422                	sw	s0,8(sp)
204011d0:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:54
	system_init();
204011d2:	2039                	jal	204011e0 <system_init>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:56
//	asm volatile("ecall");
	osSchedulerLaunch();
204011d4:	2871                	jal	20401270 <osSchedulerLaunch>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:57
}
204011d6:	0001                	nop
204011d8:	40b2                	lw	ra,12(sp)
204011da:	4422                	lw	s0,8(sp)
204011dc:	0141                	addi	sp,sp,16
204011de:	8082                	ret

204011e0 <system_init>:
system_init():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:59

void system_init(){
204011e0:	1141                	addi	sp,sp,-16
204011e2:	c606                	sw	ra,12(sp)
204011e4:	c422                	sw	s0,8(sp)
204011e6:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:60
	w_mepc((uint32_t)main);
204011e8:	204017b7          	lui	a5,0x20401
204011ec:	06478793          	addi	a5,a5,100 # 20401064 <main>
204011f0:	853e                	mv	a0,a5
204011f2:	3d69                	jal	2040108c <w_mepc>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:61
	w_mtvec((uint32_t)switch_to);
204011f4:	204017b7          	lui	a5,0x20401
204011f8:	28078793          	addi	a5,a5,640 # 20401280 <switch_to>
204011fc:	853e                	mv	a0,a5
204011fe:	3df1                	jal	204010da <w_mtvec>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:62
	timer_init();
20401200:	2031                	jal	2040120c <timer_init>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:63
}
20401202:	0001                	nop
20401204:	40b2                	lw	ra,12(sp)
20401206:	4422                	lw	s0,8(sp)
20401208:	0141                	addi	sp,sp,16
2040120a:	8082                	ret

2040120c <timer_init>:
timer_init():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:66


void timer_init(void) {
2040120c:	1101                	addi	sp,sp,-32
2040120e:	ce06                	sw	ra,28(sp)
20401210:	cc22                	sw	s0,24(sp)
20401212:	1000                	addi	s0,sp,32
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:67
	*MTIMECMP = *MTIME + 0xfffff ;
20401214:	0200c7b7          	lui	a5,0x200c
20401218:	17e1                	addi	a5,a5,-8
2040121a:	4398                	lw	a4,0(a5)
2040121c:	43dc                	lw	a5,4(a5)
2040121e:	02004837          	lui	a6,0x2004
20401222:	00100537          	lui	a0,0x100
20401226:	157d                	addi	a0,a0,-1
20401228:	4581                	li	a1,0
2040122a:	00a70633          	add	a2,a4,a0
2040122e:	88b2                	mv	a7,a2
20401230:	00e8b8b3          	sltu	a7,a7,a4
20401234:	00b786b3          	add	a3,a5,a1
20401238:	00d887b3          	add	a5,a7,a3
2040123c:	86be                	mv	a3,a5
2040123e:	8732                	mv	a4,a2
20401240:	87b6                	mv	a5,a3
20401242:	00e82023          	sw	a4,0(a6) # 2004000 <__heap_size+0x2003800>
20401246:	00f82223          	sw	a5,4(a6)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:68
	uint32_t mie = r_mie();
2040124a:	3db1                	jal	204010a6 <r_mie>
2040124c:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:69
	mie |= (1 << 7);
20401250:	fec42783          	lw	a5,-20(s0)
20401254:	0807e793          	ori	a5,a5,128
20401258:	fef42623          	sw	a5,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:70
	asm volatile ("csrsi mstatus, 8");
2040125c:	30046073          	csrsi	mstatus,8
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:71
	w_mie(mie);
20401260:	fec42503          	lw	a0,-20(s0)
20401264:	3db1                	jal	204010c0 <w_mie>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.c:72
}
20401266:	0001                	nop
20401268:	40f2                	lw	ra,28(sp)
2040126a:	4462                	lw	s0,24(sp)
2040126c:	6105                	addi	sp,sp,32
2040126e:	8082                	ret

20401270 <osSchedulerLaunch>:
osSchedulerLaunch():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:7
        .global osSchedulerLaunch
        .global switch_to
        .extern currentPt

osSchedulerLaunch:
    lw t0, currentPt   # Load currentPt into T0
20401270:	8d41a283          	lw	t0,-1836(gp) # 80000874 <currentPt>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:8
    lw sp, (t0)        # t1 = &t0
20401274:	0002a103          	lw	sp,0(t0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:9
    lw ra, (sp)
20401278:	4082                	lw	ra,0(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:11
    #lw sp, 4(sp)
    lw gp, 8(sp)
2040127a:	41a2                	lw	gp,8(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:12
    lw tp, 12(sp)
2040127c:	4232                	lw	tp,12(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:14

    ret
2040127e:	8082                	ret

20401280 <switch_to>:
switch_to():
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:17

switch_to:
    sw ra, (sp)
20401280:	c006                	sw	ra,0(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:18
    sw sp, 4(sp)
20401282:	c20a                	sw	sp,4(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:19
    sw gp, 8(sp)
20401284:	c40e                	sw	gp,8(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:20
    sw tp, 12(sp)
20401286:	c612                	sw	tp,12(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:21
    sw t0, 16(sp)
20401288:	c816                	sw	t0,16(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:22
    sw t1, 20(sp)
2040128a:	ca1a                	sw	t1,20(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:23
    sw t2, 24(sp)
2040128c:	cc1e                	sw	t2,24(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:24
    sw t3, 28(sp)
2040128e:	ce72                	sw	t3,28(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:25
    sw s0, 32(sp)
20401290:	d022                	sw	s0,32(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:26
    sw s1, 36(sp)
20401292:	d226                	sw	s1,36(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:27
    sw a0, 40(sp)
20401294:	d42a                	sw	a0,40(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:28
    sw a1, 44(sp)
20401296:	d62e                	sw	a1,44(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:29
    sw a2, 48(sp)
20401298:	d832                	sw	a2,48(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:30
    sw a3, 52(sp)
2040129a:	da36                	sw	a3,52(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:31
    sw a4, 56(sp)
2040129c:	dc3a                	sw	a4,56(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:32
    sw a5, 60(sp)
2040129e:	de3e                	sw	a5,60(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:33
    sw a6, 64(sp)
204012a0:	c0c2                	sw	a6,64(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:34
    sw a7, 68(sp)
204012a2:	c2c6                	sw	a7,68(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:35
    sw s2, 72(sp)
204012a4:	c4ca                	sw	s2,72(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:36
    sw s3, 76(sp)
204012a6:	c6ce                	sw	s3,76(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:37
    sw s4, 80(sp)
204012a8:	c8d2                	sw	s4,80(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:38
    sw s5, 84(sp)
204012aa:	cad6                	sw	s5,84(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:39
    sw s6, 88(sp)
204012ac:	ccda                	sw	s6,88(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:40
    sw s7, 92(sp)
204012ae:	cede                	sw	s7,92(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:41
    sw s8, 96(sp)
204012b0:	d0e2                	sw	s8,96(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:42
    sw s9, 100(sp)
204012b2:	d2e6                	sw	s9,100(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:43
    sw s10,104(sp)
204012b4:	d4ea                	sw	s10,104(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:44
    sw s11,108(sp)
204012b6:	d6ee                	sw	s11,108(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:45
    sw t3, 112(sp)
204012b8:	d8f2                	sw	t3,112(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:46
    sw t4, 116(sp)
204012ba:	daf6                	sw	t4,116(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:47
    sw t5, 120(sp)
204012bc:	dcfa                	sw	t5,120(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:48
    sw t6, 124(sp)
204012be:	defe                	sw	t6,124(sp)
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:54

    #lw t0, currentPt   # Load currentPt into t0
    #lw sp, (t0)        # t1 = &t0
    #lw ra, (sp)
    #addi sp, sp, 4
    call handle_trap
204012c0:	3d15                	jal	204010f4 <handle_trap>
C:\wsFreedomStudio\qemu_sifive_e31_hello\src/kernel.S:55
    mret
204012c2:	30200073          	mret

204012c6 <iprintf>:
printf():
204012c6:	715d                	addi	sp,sp,-80
204012c8:	d422                	sw	s0,40(sp)
204012ca:	d606                	sw	ra,44(sp)
204012cc:	842a                	mv	s0,a0
204012ce:	da2e                	sw	a1,52(sp)
204012d0:	dc32                	sw	a2,56(sp)
204012d2:	de36                	sw	a3,60(sp)
204012d4:	c0ba                	sw	a4,64(sp)
204012d6:	c2be                	sw	a5,68(sp)
204012d8:	c4c2                	sw	a6,72(sp)
204012da:	c6c6                	sw	a7,76(sp)
204012dc:	5fbff517          	auipc	a0,0x5fbff
204012e0:	4c452503          	lw	a0,1220(a0) # 800007a0 <_impure_ptr>
204012e4:	c511                	beqz	a0,204012f0 <iprintf+0x2a>
204012e6:	4d1c                	lw	a5,24(a0)
204012e8:	e781                	bnez	a5,204012f0 <iprintf+0x2a>
204012ea:	c62a                	sw	a0,12(sp)
204012ec:	20f1                	jal	204013b8 <__sinit>
204012ee:	4532                	lw	a0,12(sp)
204012f0:	450c                	lw	a1,8(a0)
204012f2:	1854                	addi	a3,sp,52
204012f4:	8622                	mv	a2,s0
204012f6:	ce36                	sw	a3,28(sp)
204012f8:	2105                	jal	20401718 <_vfiprintf_r>
204012fa:	50b2                	lw	ra,44(sp)
204012fc:	5422                	lw	s0,40(sp)
204012fe:	6161                	addi	sp,sp,80
20401300:	8082                	ret

20401302 <std>:
std():
20401302:	1141                	addi	sp,sp,-16
20401304:	c422                	sw	s0,8(sp)
20401306:	c606                	sw	ra,12(sp)
20401308:	842a                	mv	s0,a0
2040130a:	00b51623          	sh	a1,12(a0)
2040130e:	00c51723          	sh	a2,14(a0)
20401312:	00052023          	sw	zero,0(a0)
20401316:	00052223          	sw	zero,4(a0)
2040131a:	00052423          	sw	zero,8(a0)
2040131e:	06052223          	sw	zero,100(a0)
20401322:	00052823          	sw	zero,16(a0)
20401326:	00052a23          	sw	zero,20(a0)
2040132a:	00052c23          	sw	zero,24(a0)
2040132e:	4621                	li	a2,8
20401330:	4581                	li	a1,0
20401332:	05c50513          	addi	a0,a0,92
20401336:	2acd                	jal	20401528 <memset>
20401338:	00000797          	auipc	a5,0x0
2040133c:	6a678793          	addi	a5,a5,1702 # 204019de <__sread>
20401340:	d05c                	sw	a5,36(s0)
20401342:	00000797          	auipc	a5,0x0
20401346:	6ce78793          	addi	a5,a5,1742 # 20401a10 <__swrite>
2040134a:	d41c                	sw	a5,40(s0)
2040134c:	00000797          	auipc	a5,0x0
20401350:	71278793          	addi	a5,a5,1810 # 20401a5e <__sseek>
20401354:	d45c                	sw	a5,44(s0)
20401356:	00000797          	auipc	a5,0x0
2040135a:	73e78793          	addi	a5,a5,1854 # 20401a94 <__sclose>
2040135e:	40b2                	lw	ra,12(sp)
20401360:	d000                	sw	s0,32(s0)
20401362:	d81c                	sw	a5,48(s0)
20401364:	4422                	lw	s0,8(sp)
20401366:	0141                	addi	sp,sp,16
20401368:	8082                	ret

2040136a <_cleanup_r>:
_cleanup_r():
2040136a:	00001597          	auipc	a1,0x1
2040136e:	aa858593          	addi	a1,a1,-1368 # 20401e12 <_fflush_r>
20401372:	a2b1                	j	204014be <_fwalk_reent>

20401374 <__sfmoreglue>:
__sfmoreglue():
20401374:	1141                	addi	sp,sp,-16
20401376:	c226                	sw	s1,4(sp)
20401378:	06800613          	li	a2,104
2040137c:	fff58493          	addi	s1,a1,-1
20401380:	02c484b3          	mul	s1,s1,a2
20401384:	c04a                	sw	s2,0(sp)
20401386:	892e                	mv	s2,a1
20401388:	c422                	sw	s0,8(sp)
2040138a:	c606                	sw	ra,12(sp)
2040138c:	07448593          	addi	a1,s1,116
20401390:	2481                	jal	204015d0 <_malloc_r>
20401392:	842a                	mv	s0,a0
20401394:	c919                	beqz	a0,204013aa <__sfmoreglue+0x36>
20401396:	00052023          	sw	zero,0(a0)
2040139a:	01252223          	sw	s2,4(a0)
2040139e:	0531                	addi	a0,a0,12
204013a0:	c408                	sw	a0,8(s0)
204013a2:	06848613          	addi	a2,s1,104
204013a6:	4581                	li	a1,0
204013a8:	2241                	jal	20401528 <memset>
204013aa:	40b2                	lw	ra,12(sp)
204013ac:	8522                	mv	a0,s0
204013ae:	4422                	lw	s0,8(sp)
204013b0:	4492                	lw	s1,4(sp)
204013b2:	4902                	lw	s2,0(sp)
204013b4:	0141                	addi	sp,sp,16
204013b6:	8082                	ret

204013b8 <__sinit>:
__sinit():
204013b8:	4d1c                	lw	a5,24(a0)
204013ba:	e3bd                	bnez	a5,20401420 <__sinit+0x68>
204013bc:	1141                	addi	sp,sp,-16
204013be:	c422                	sw	s0,8(sp)
204013c0:	c606                	sw	ra,12(sp)
204013c2:	00000797          	auipc	a5,0x0
204013c6:	fa878793          	addi	a5,a5,-88 # 2040136a <_cleanup_r>
204013ca:	d51c                	sw	a5,40(a0)
204013cc:	04052423          	sw	zero,72(a0)
204013d0:	04052623          	sw	zero,76(a0)
204013d4:	04052823          	sw	zero,80(a0)
204013d8:	00000797          	auipc	a5,0x0
204013dc:	bf87a783          	lw	a5,-1032(a5) # 20400fd0 <_global_impure_ptr>
204013e0:	842a                	mv	s0,a0
204013e2:	00f51463          	bne	a0,a5,204013ea <__sinit+0x32>
204013e6:	4785                	li	a5,1
204013e8:	cd1c                	sw	a5,24(a0)
204013ea:	8522                	mv	a0,s0
204013ec:	281d                	jal	20401422 <__sfp>
204013ee:	c048                	sw	a0,4(s0)
204013f0:	8522                	mv	a0,s0
204013f2:	2805                	jal	20401422 <__sfp>
204013f4:	c408                	sw	a0,8(s0)
204013f6:	8522                	mv	a0,s0
204013f8:	202d                	jal	20401422 <__sfp>
204013fa:	c448                	sw	a0,12(s0)
204013fc:	4048                	lw	a0,4(s0)
204013fe:	4601                	li	a2,0
20401400:	4591                	li	a1,4
20401402:	3701                	jal	20401302 <std>
20401404:	4408                	lw	a0,8(s0)
20401406:	4605                	li	a2,1
20401408:	45a5                	li	a1,9
2040140a:	3de5                	jal	20401302 <std>
2040140c:	4448                	lw	a0,12(s0)
2040140e:	4609                	li	a2,2
20401410:	45c9                	li	a1,18
20401412:	3dc5                	jal	20401302 <std>
20401414:	4785                	li	a5,1
20401416:	40b2                	lw	ra,12(sp)
20401418:	cc1c                	sw	a5,24(s0)
2040141a:	4422                	lw	s0,8(sp)
2040141c:	0141                	addi	sp,sp,16
2040141e:	8082                	ret
20401420:	8082                	ret

20401422 <__sfp>:
__sfp():
20401422:	1141                	addi	sp,sp,-16
20401424:	c226                	sw	s1,4(sp)
20401426:	00000497          	auipc	s1,0x0
2040142a:	baa4a483          	lw	s1,-1110(s1) # 20400fd0 <_global_impure_ptr>
2040142e:	4c9c                	lw	a5,24(s1)
20401430:	c04a                	sw	s2,0(sp)
20401432:	c606                	sw	ra,12(sp)
20401434:	c422                	sw	s0,8(sp)
20401436:	892a                	mv	s2,a0
20401438:	e399                	bnez	a5,2040143e <__sfp+0x1c>
2040143a:	8526                	mv	a0,s1
2040143c:	3fb5                	jal	204013b8 <__sinit>
2040143e:	04848493          	addi	s1,s1,72
20401442:	4480                	lw	s0,8(s1)
20401444:	40dc                	lw	a5,4(s1)
20401446:	17fd                	addi	a5,a5,-1
20401448:	0007d663          	bgez	a5,20401454 <__sfp+0x32>
2040144c:	409c                	lw	a5,0(s1)
2040144e:	cfb1                	beqz	a5,204014aa <__sfp+0x88>
20401450:	4084                	lw	s1,0(s1)
20401452:	bfc5                	j	20401442 <__sfp+0x20>
20401454:	00c41703          	lh	a4,12(s0)
20401458:	e731                	bnez	a4,204014a4 <__sfp+0x82>
2040145a:	77c1                	lui	a5,0xffff0
2040145c:	0785                	addi	a5,a5,1
2040145e:	06042223          	sw	zero,100(s0)
20401462:	00042023          	sw	zero,0(s0)
20401466:	00042223          	sw	zero,4(s0)
2040146a:	00042423          	sw	zero,8(s0)
2040146e:	c45c                	sw	a5,12(s0)
20401470:	00042823          	sw	zero,16(s0)
20401474:	00042a23          	sw	zero,20(s0)
20401478:	00042c23          	sw	zero,24(s0)
2040147c:	4621                	li	a2,8
2040147e:	4581                	li	a1,0
20401480:	05c40513          	addi	a0,s0,92
20401484:	2055                	jal	20401528 <memset>
20401486:	02042a23          	sw	zero,52(s0)
2040148a:	02042c23          	sw	zero,56(s0)
2040148e:	04042423          	sw	zero,72(s0)
20401492:	04042623          	sw	zero,76(s0)
20401496:	40b2                	lw	ra,12(sp)
20401498:	8522                	mv	a0,s0
2040149a:	4422                	lw	s0,8(sp)
2040149c:	4492                	lw	s1,4(sp)
2040149e:	4902                	lw	s2,0(sp)
204014a0:	0141                	addi	sp,sp,16
204014a2:	8082                	ret
204014a4:	06840413          	addi	s0,s0,104
204014a8:	bf79                	j	20401446 <__sfp+0x24>
204014aa:	4591                	li	a1,4
204014ac:	854a                	mv	a0,s2
204014ae:	35d9                	jal	20401374 <__sfmoreglue>
204014b0:	c088                	sw	a0,0(s1)
204014b2:	842a                	mv	s0,a0
204014b4:	fd51                	bnez	a0,20401450 <__sfp+0x2e>
204014b6:	47b1                	li	a5,12
204014b8:	00f92023          	sw	a5,0(s2)
204014bc:	bfe9                	j	20401496 <__sfp+0x74>

204014be <_fwalk_reent>:
_fwalk_reent():
204014be:	7179                	addi	sp,sp,-48
204014c0:	d422                	sw	s0,40(sp)
204014c2:	d04a                	sw	s2,32(sp)
204014c4:	ce4e                	sw	s3,28(sp)
204014c6:	cc52                	sw	s4,24(sp)
204014c8:	c85a                	sw	s6,16(sp)
204014ca:	c65e                	sw	s7,12(sp)
204014cc:	d606                	sw	ra,44(sp)
204014ce:	d226                	sw	s1,36(sp)
204014d0:	ca56                	sw	s5,20(sp)
204014d2:	892a                	mv	s2,a0
204014d4:	8a2e                	mv	s4,a1
204014d6:	04850413          	addi	s0,a0,72
204014da:	4981                	li	s3,0
204014dc:	4b05                	li	s6,1
204014de:	5bfd                	li	s7,-1
204014e0:	4404                	lw	s1,8(s0)
204014e2:	00442a83          	lw	s5,4(s0)
204014e6:	1afd                	addi	s5,s5,-1
204014e8:	020ad063          	bgez	s5,20401508 <_fwalk_reent+0x4a>
204014ec:	4000                	lw	s0,0(s0)
204014ee:	f86d                	bnez	s0,204014e0 <_fwalk_reent+0x22>
204014f0:	50b2                	lw	ra,44(sp)
204014f2:	5422                	lw	s0,40(sp)
204014f4:	5492                	lw	s1,36(sp)
204014f6:	5902                	lw	s2,32(sp)
204014f8:	4a62                	lw	s4,24(sp)
204014fa:	4ad2                	lw	s5,20(sp)
204014fc:	4b42                	lw	s6,16(sp)
204014fe:	4bb2                	lw	s7,12(sp)
20401500:	854e                	mv	a0,s3
20401502:	49f2                	lw	s3,28(sp)
20401504:	6145                	addi	sp,sp,48
20401506:	8082                	ret
20401508:	00c4d783          	lhu	a5,12(s1)
2040150c:	00fb7b63          	bgeu	s6,a5,20401522 <_fwalk_reent+0x64>
20401510:	00e49783          	lh	a5,14(s1)
20401514:	01778763          	beq	a5,s7,20401522 <_fwalk_reent+0x64>
20401518:	85a6                	mv	a1,s1
2040151a:	854a                	mv	a0,s2
2040151c:	9a02                	jalr	s4
2040151e:	00a9e9b3          	or	s3,s3,a0
20401522:	06848493          	addi	s1,s1,104
20401526:	b7c1                	j	204014e6 <_fwalk_reent+0x28>

20401528 <memset>:
memset():
20401528:	433d                	li	t1,15
2040152a:	872a                	mv	a4,a0
2040152c:	02c37363          	bgeu	t1,a2,20401552 <memset+0x2a>
20401530:	00f77793          	andi	a5,a4,15
20401534:	efbd                	bnez	a5,204015b2 <memset+0x8a>
20401536:	e5ad                	bnez	a1,204015a0 <memset+0x78>
20401538:	ff067693          	andi	a3,a2,-16
2040153c:	8a3d                	andi	a2,a2,15
2040153e:	96ba                	add	a3,a3,a4
20401540:	c30c                	sw	a1,0(a4)
20401542:	c34c                	sw	a1,4(a4)
20401544:	c70c                	sw	a1,8(a4)
20401546:	c74c                	sw	a1,12(a4)
20401548:	0741                	addi	a4,a4,16
2040154a:	fed76be3          	bltu	a4,a3,20401540 <memset+0x18>
2040154e:	e211                	bnez	a2,20401552 <memset+0x2a>
20401550:	8082                	ret
20401552:	40c306b3          	sub	a3,t1,a2
20401556:	068a                	slli	a3,a3,0x2
20401558:	00000297          	auipc	t0,0x0
2040155c:	9696                	add	a3,a3,t0
2040155e:	00a68067          	jr	10(a3)
20401562:	00b70723          	sb	a1,14(a4) # 20000e <__heap_size+0x1ff80e>
20401566:	00b706a3          	sb	a1,13(a4)
2040156a:	00b70623          	sb	a1,12(a4)
2040156e:	00b705a3          	sb	a1,11(a4)
20401572:	00b70523          	sb	a1,10(a4)
20401576:	00b704a3          	sb	a1,9(a4)
2040157a:	00b70423          	sb	a1,8(a4)
2040157e:	00b703a3          	sb	a1,7(a4)
20401582:	00b70323          	sb	a1,6(a4)
20401586:	00b702a3          	sb	a1,5(a4)
2040158a:	00b70223          	sb	a1,4(a4)
2040158e:	00b701a3          	sb	a1,3(a4)
20401592:	00b70123          	sb	a1,2(a4)
20401596:	00b700a3          	sb	a1,1(a4)
2040159a:	00b70023          	sb	a1,0(a4)
2040159e:	8082                	ret
204015a0:	0ff5f593          	zext.b	a1,a1
204015a4:	00859693          	slli	a3,a1,0x8
204015a8:	8dd5                	or	a1,a1,a3
204015aa:	01059693          	slli	a3,a1,0x10
204015ae:	8dd5                	or	a1,a1,a3
204015b0:	b761                	j	20401538 <memset+0x10>
204015b2:	00279693          	slli	a3,a5,0x2
204015b6:	00000297          	auipc	t0,0x0
204015ba:	9696                	add	a3,a3,t0
204015bc:	8286                	mv	t0,ra
204015be:	fa8680e7          	jalr	-88(a3)
204015c2:	8096                	mv	ra,t0
204015c4:	17c1                	addi	a5,a5,-16
204015c6:	8f1d                	sub	a4,a4,a5
204015c8:	963e                	add	a2,a2,a5
204015ca:	f8c374e3          	bgeu	t1,a2,20401552 <memset+0x2a>
204015ce:	b7a5                	j	20401536 <memset+0xe>

204015d0 <_malloc_r>:
_malloc_r():
204015d0:	1101                	addi	sp,sp,-32
204015d2:	ca26                	sw	s1,20(sp)
204015d4:	00358493          	addi	s1,a1,3
204015d8:	98f1                	andi	s1,s1,-4
204015da:	c84a                	sw	s2,16(sp)
204015dc:	ce06                	sw	ra,28(sp)
204015de:	cc22                	sw	s0,24(sp)
204015e0:	c64e                	sw	s3,12(sp)
204015e2:	04a1                	addi	s1,s1,8
204015e4:	47b1                	li	a5,12
204015e6:	892a                	mv	s2,a0
204015e8:	04f4f663          	bgeu	s1,a5,20401634 <_malloc_r+0x64>
204015ec:	44b1                	li	s1,12
204015ee:	04b4e563          	bltu	s1,a1,20401638 <_malloc_r+0x68>
204015f2:	854a                	mv	a0,s2
204015f4:	1c9000ef          	jal	ra,20401fbc <__malloc_lock>
204015f8:	5fbff697          	auipc	a3,0x5fbff
204015fc:	1d868693          	addi	a3,a3,472 # 800007d0 <__malloc_free_list>
20401600:	4298                	lw	a4,0(a3)
20401602:	843a                	mv	s0,a4
20401604:	e429                	bnez	s0,2040164e <_malloc_r+0x7e>
20401606:	5fbff417          	auipc	s0,0x5fbff
2040160a:	1ce40413          	addi	s0,s0,462 # 800007d4 <__malloc_sbrk_start>
2040160e:	401c                	lw	a5,0(s0)
20401610:	e789                	bnez	a5,2040161a <_malloc_r+0x4a>
20401612:	4581                	li	a1,0
20401614:	854a                	mv	a0,s2
20401616:	2e61                	jal	204019ae <_sbrk_r>
20401618:	c008                	sw	a0,0(s0)
2040161a:	85a6                	mv	a1,s1
2040161c:	854a                	mv	a0,s2
2040161e:	2e41                	jal	204019ae <_sbrk_r>
20401620:	59fd                	li	s3,-1
20401622:	07351a63          	bne	a0,s3,20401696 <_malloc_r+0xc6>
20401626:	47b1                	li	a5,12
20401628:	00f92023          	sw	a5,0(s2)
2040162c:	854a                	mv	a0,s2
2040162e:	191000ef          	jal	ra,20401fbe <__malloc_unlock>
20401632:	a031                	j	2040163e <_malloc_r+0x6e>
20401634:	fa04dde3          	bgez	s1,204015ee <_malloc_r+0x1e>
20401638:	47b1                	li	a5,12
2040163a:	00f92023          	sw	a5,0(s2)
2040163e:	4501                	li	a0,0
20401640:	40f2                	lw	ra,28(sp)
20401642:	4462                	lw	s0,24(sp)
20401644:	44d2                	lw	s1,20(sp)
20401646:	4942                	lw	s2,16(sp)
20401648:	49b2                	lw	s3,12(sp)
2040164a:	6105                	addi	sp,sp,32
2040164c:	8082                	ret
2040164e:	401c                	lw	a5,0(s0)
20401650:	8f85                	sub	a5,a5,s1
20401652:	0207cf63          	bltz	a5,20401690 <_malloc_r+0xc0>
20401656:	462d                	li	a2,11
20401658:	00f67663          	bgeu	a2,a5,20401664 <_malloc_r+0x94>
2040165c:	c01c                	sw	a5,0(s0)
2040165e:	943e                	add	s0,s0,a5
20401660:	c004                	sw	s1,0(s0)
20401662:	a029                	j	2040166c <_malloc_r+0x9c>
20401664:	405c                	lw	a5,4(s0)
20401666:	02871363          	bne	a4,s0,2040168c <_malloc_r+0xbc>
2040166a:	c29c                	sw	a5,0(a3)
2040166c:	854a                	mv	a0,s2
2040166e:	151000ef          	jal	ra,20401fbe <__malloc_unlock>
20401672:	00b40513          	addi	a0,s0,11
20401676:	00440793          	addi	a5,s0,4
2040167a:	9961                	andi	a0,a0,-8
2040167c:	40f50733          	sub	a4,a0,a5
20401680:	fcf500e3          	beq	a0,a5,20401640 <_malloc_r+0x70>
20401684:	943a                	add	s0,s0,a4
20401686:	8f89                	sub	a5,a5,a0
20401688:	c01c                	sw	a5,0(s0)
2040168a:	bf5d                	j	20401640 <_malloc_r+0x70>
2040168c:	c35c                	sw	a5,4(a4)
2040168e:	bff9                	j	2040166c <_malloc_r+0x9c>
20401690:	8722                	mv	a4,s0
20401692:	4040                	lw	s0,4(s0)
20401694:	bf85                	j	20401604 <_malloc_r+0x34>
20401696:	00350413          	addi	s0,a0,3
2040169a:	9871                	andi	s0,s0,-4
2040169c:	fc8502e3          	beq	a0,s0,20401660 <_malloc_r+0x90>
204016a0:	40a405b3          	sub	a1,s0,a0
204016a4:	854a                	mv	a0,s2
204016a6:	2621                	jal	204019ae <_sbrk_r>
204016a8:	fb351ce3          	bne	a0,s3,20401660 <_malloc_r+0x90>
204016ac:	bfad                	j	20401626 <_malloc_r+0x56>

204016ae <__sfputc_r>:
__sfputc_r():
204016ae:	461c                	lw	a5,8(a2)
204016b0:	17fd                	addi	a5,a5,-1
204016b2:	c61c                	sw	a5,8(a2)
204016b4:	0007d963          	bgez	a5,204016c6 <__sfputc_r+0x18>
204016b8:	4e18                	lw	a4,24(a2)
204016ba:	00e7c563          	blt	a5,a4,204016c4 <__sfputc_r+0x16>
204016be:	47a9                	li	a5,10
204016c0:	00f59363          	bne	a1,a5,204016c6 <__sfputc_r+0x18>
204016c4:	aed9                	j	20401a9a <__swbuf_r>
204016c6:	421c                	lw	a5,0(a2)
204016c8:	852e                	mv	a0,a1
204016ca:	00178713          	addi	a4,a5,1 # ffff0001 <metal_segment_heap_target_end+0x7ffee851>
204016ce:	c218                	sw	a4,0(a2)
204016d0:	00b78023          	sb	a1,0(a5)
204016d4:	8082                	ret

204016d6 <__sfputs_r>:
__sfputs_r():
204016d6:	1101                	addi	sp,sp,-32
204016d8:	cc22                	sw	s0,24(sp)
204016da:	ca26                	sw	s1,20(sp)
204016dc:	c84a                	sw	s2,16(sp)
204016de:	c64e                	sw	s3,12(sp)
204016e0:	c452                	sw	s4,8(sp)
204016e2:	ce06                	sw	ra,28(sp)
204016e4:	892a                	mv	s2,a0
204016e6:	89ae                	mv	s3,a1
204016e8:	8432                	mv	s0,a2
204016ea:	00d604b3          	add	s1,a2,a3
204016ee:	5a7d                	li	s4,-1
204016f0:	00941463          	bne	s0,s1,204016f8 <__sfputs_r+0x22>
204016f4:	4501                	li	a0,0
204016f6:	a809                	j	20401708 <__sfputs_r+0x32>
204016f8:	00044583          	lbu	a1,0(s0)
204016fc:	864e                	mv	a2,s3
204016fe:	854a                	mv	a0,s2
20401700:	377d                	jal	204016ae <__sfputc_r>
20401702:	0405                	addi	s0,s0,1
20401704:	ff4516e3          	bne	a0,s4,204016f0 <__sfputs_r+0x1a>
20401708:	40f2                	lw	ra,28(sp)
2040170a:	4462                	lw	s0,24(sp)
2040170c:	44d2                	lw	s1,20(sp)
2040170e:	4942                	lw	s2,16(sp)
20401710:	49b2                	lw	s3,12(sp)
20401712:	4a22                	lw	s4,8(sp)
20401714:	6105                	addi	sp,sp,32
20401716:	8082                	ret

20401718 <_vfiprintf_r>:
_vfiprintf_r():
20401718:	7135                	addi	sp,sp,-160
2040171a:	cd22                	sw	s0,152(sp)
2040171c:	cb26                	sw	s1,148(sp)
2040171e:	c94a                	sw	s2,144(sp)
20401720:	c74e                	sw	s3,140(sp)
20401722:	cf06                	sw	ra,156(sp)
20401724:	c552                	sw	s4,136(sp)
20401726:	c356                	sw	s5,132(sp)
20401728:	c15a                	sw	s6,128(sp)
2040172a:	dede                	sw	s7,124(sp)
2040172c:	dce2                	sw	s8,120(sp)
2040172e:	dae6                	sw	s9,116(sp)
20401730:	89aa                	mv	s3,a0
20401732:	84ae                	mv	s1,a1
20401734:	8932                	mv	s2,a2
20401736:	8436                	mv	s0,a3
20401738:	c501                	beqz	a0,20401740 <_vfiprintf_r+0x28>
2040173a:	4d1c                	lw	a5,24(a0)
2040173c:	e391                	bnez	a5,20401740 <_vfiprintf_r+0x28>
2040173e:	39ad                	jal	204013b8 <__sinit>
20401740:	fffff797          	auipc	a5,0xfffff
20401744:	c6c78793          	addi	a5,a5,-916 # 204003ac <__sf_fake_stdin>
20401748:	0cf49c63          	bne	s1,a5,20401820 <_vfiprintf_r+0x108>
2040174c:	0049a483          	lw	s1,4(s3)
20401750:	00c4d783          	lhu	a5,12(s1)
20401754:	8ba1                	andi	a5,a5,8
20401756:	c7fd                	beqz	a5,20401844 <_vfiprintf_r+0x12c>
20401758:	489c                	lw	a5,16(s1)
2040175a:	c7ed                	beqz	a5,20401844 <_vfiprintf_r+0x12c>
2040175c:	02000793          	li	a5,32
20401760:	02f104a3          	sb	a5,41(sp)
20401764:	03000793          	li	a5,48
20401768:	d202                	sw	zero,36(sp)
2040176a:	02f10523          	sb	a5,42(sp)
2040176e:	c622                	sw	s0,12(sp)
20401770:	02500b93          	li	s7,37
20401774:	fffffa97          	auipc	s5,0xfffff
20401778:	c78a8a93          	addi	s5,s5,-904 # 204003ec <__sf_fake_stdout+0x20>
2040177c:	4c05                	li	s8,1
2040177e:	4b29                	li	s6,10
20401780:	844a                	mv	s0,s2
20401782:	00044783          	lbu	a5,0(s0)
20401786:	c399                	beqz	a5,2040178c <_vfiprintf_r+0x74>
20401788:	0f779063          	bne	a5,s7,20401868 <_vfiprintf_r+0x150>
2040178c:	41240cb3          	sub	s9,s0,s2
20401790:	01240d63          	beq	s0,s2,204017aa <_vfiprintf_r+0x92>
20401794:	86e6                	mv	a3,s9
20401796:	864a                	mv	a2,s2
20401798:	85a6                	mv	a1,s1
2040179a:	854e                	mv	a0,s3
2040179c:	3f2d                	jal	204016d6 <__sfputs_r>
2040179e:	57fd                	li	a5,-1
204017a0:	1ef50463          	beq	a0,a5,20401988 <_vfiprintf_r+0x270>
204017a4:	5792                	lw	a5,36(sp)
204017a6:	97e6                	add	a5,a5,s9
204017a8:	d23e                	sw	a5,36(sp)
204017aa:	00044783          	lbu	a5,0(s0)
204017ae:	1c078d63          	beqz	a5,20401988 <_vfiprintf_r+0x270>
204017b2:	57fd                	li	a5,-1
204017b4:	00140913          	addi	s2,s0,1
204017b8:	c802                	sw	zero,16(sp)
204017ba:	ce02                	sw	zero,28(sp)
204017bc:	ca3e                	sw	a5,20(sp)
204017be:	cc02                	sw	zero,24(sp)
204017c0:	040109a3          	sb	zero,83(sp)
204017c4:	d482                	sw	zero,104(sp)
204017c6:	00094583          	lbu	a1,0(s2)
204017ca:	4615                	li	a2,5
204017cc:	8556                	mv	a0,s5
204017ce:	7d4000ef          	jal	ra,20401fa2 <memchr>
204017d2:	47c2                	lw	a5,16(sp)
204017d4:	00190413          	addi	s0,s2,1
204017d8:	e951                	bnez	a0,2040186c <_vfiprintf_r+0x154>
204017da:	0107f713          	andi	a4,a5,16
204017de:	c709                	beqz	a4,204017e8 <_vfiprintf_r+0xd0>
204017e0:	02000713          	li	a4,32
204017e4:	04e109a3          	sb	a4,83(sp)
204017e8:	0087f713          	andi	a4,a5,8
204017ec:	c709                	beqz	a4,204017f6 <_vfiprintf_r+0xde>
204017ee:	02b00713          	li	a4,43
204017f2:	04e109a3          	sb	a4,83(sp)
204017f6:	00094683          	lbu	a3,0(s2)
204017fa:	02a00713          	li	a4,42
204017fe:	06e68f63          	beq	a3,a4,2040187c <_vfiprintf_r+0x164>
20401802:	47f2                	lw	a5,28(sp)
20401804:	844a                	mv	s0,s2
20401806:	4681                	li	a3,0
20401808:	4625                	li	a2,9
2040180a:	00044703          	lbu	a4,0(s0)
2040180e:	00140593          	addi	a1,s0,1
20401812:	fd070713          	addi	a4,a4,-48
20401816:	0ae67863          	bgeu	a2,a4,204018c6 <_vfiprintf_r+0x1ae>
2040181a:	caad                	beqz	a3,2040188c <_vfiprintf_r+0x174>
2040181c:	ce3e                	sw	a5,28(sp)
2040181e:	a0bd                	j	2040188c <_vfiprintf_r+0x174>
20401820:	fffff797          	auipc	a5,0xfffff
20401824:	bac78793          	addi	a5,a5,-1108 # 204003cc <__sf_fake_stdout>
20401828:	00f49563          	bne	s1,a5,20401832 <_vfiprintf_r+0x11a>
2040182c:	0089a483          	lw	s1,8(s3)
20401830:	b705                	j	20401750 <_vfiprintf_r+0x38>
20401832:	fffff797          	auipc	a5,0xfffff
20401836:	b5a78793          	addi	a5,a5,-1190 # 2040038c <__sf_fake_stderr>
2040183a:	f0f49be3          	bne	s1,a5,20401750 <_vfiprintf_r+0x38>
2040183e:	00c9a483          	lw	s1,12(s3)
20401842:	b739                	j	20401750 <_vfiprintf_r+0x38>
20401844:	85a6                	mv	a1,s1
20401846:	854e                	mv	a0,s3
20401848:	26a1                	jal	20401b90 <__swsetup_r>
2040184a:	d909                	beqz	a0,2040175c <_vfiprintf_r+0x44>
2040184c:	557d                	li	a0,-1
2040184e:	40fa                	lw	ra,156(sp)
20401850:	446a                	lw	s0,152(sp)
20401852:	44da                	lw	s1,148(sp)
20401854:	494a                	lw	s2,144(sp)
20401856:	49ba                	lw	s3,140(sp)
20401858:	4a2a                	lw	s4,136(sp)
2040185a:	4a9a                	lw	s5,132(sp)
2040185c:	4b0a                	lw	s6,128(sp)
2040185e:	5bf6                	lw	s7,124(sp)
20401860:	5c66                	lw	s8,120(sp)
20401862:	5cd6                	lw	s9,116(sp)
20401864:	610d                	addi	sp,sp,160
20401866:	8082                	ret
20401868:	0405                	addi	s0,s0,1
2040186a:	bf21                	j	20401782 <_vfiprintf_r+0x6a>
2040186c:	41550533          	sub	a0,a0,s5
20401870:	00ac1533          	sll	a0,s8,a0
20401874:	8fc9                	or	a5,a5,a0
20401876:	c83e                	sw	a5,16(sp)
20401878:	8922                	mv	s2,s0
2040187a:	b7b1                	j	204017c6 <_vfiprintf_r+0xae>
2040187c:	4732                	lw	a4,12(sp)
2040187e:	00470693          	addi	a3,a4,4
20401882:	4318                	lw	a4,0(a4)
20401884:	c636                	sw	a3,12(sp)
20401886:	02074963          	bltz	a4,204018b8 <_vfiprintf_r+0x1a0>
2040188a:	ce3a                	sw	a4,28(sp)
2040188c:	00044703          	lbu	a4,0(s0)
20401890:	02e00793          	li	a5,46
20401894:	04f71f63          	bne	a4,a5,204018f2 <_vfiprintf_r+0x1da>
20401898:	00144703          	lbu	a4,1(s0)
2040189c:	02a00793          	li	a5,42
204018a0:	02f71b63          	bne	a4,a5,204018d6 <_vfiprintf_r+0x1be>
204018a4:	47b2                	lw	a5,12(sp)
204018a6:	0409                	addi	s0,s0,2
204018a8:	00478713          	addi	a4,a5,4
204018ac:	439c                	lw	a5,0(a5)
204018ae:	c63a                	sw	a4,12(sp)
204018b0:	0207c163          	bltz	a5,204018d2 <_vfiprintf_r+0x1ba>
204018b4:	ca3e                	sw	a5,20(sp)
204018b6:	a835                	j	204018f2 <_vfiprintf_r+0x1da>
204018b8:	40e00733          	neg	a4,a4
204018bc:	0027e793          	ori	a5,a5,2
204018c0:	ce3a                	sw	a4,28(sp)
204018c2:	c83e                	sw	a5,16(sp)
204018c4:	b7e1                	j	2040188c <_vfiprintf_r+0x174>
204018c6:	036787b3          	mul	a5,a5,s6
204018ca:	842e                	mv	s0,a1
204018cc:	4685                	li	a3,1
204018ce:	97ba                	add	a5,a5,a4
204018d0:	bf2d                	j	2040180a <_vfiprintf_r+0xf2>
204018d2:	57fd                	li	a5,-1
204018d4:	b7c5                	j	204018b4 <_vfiprintf_r+0x19c>
204018d6:	0405                	addi	s0,s0,1
204018d8:	ca02                	sw	zero,20(sp)
204018da:	4681                	li	a3,0
204018dc:	4781                	li	a5,0
204018de:	4625                	li	a2,9
204018e0:	00044703          	lbu	a4,0(s0)
204018e4:	00140593          	addi	a1,s0,1
204018e8:	fd070713          	addi	a4,a4,-48
204018ec:	06e67463          	bgeu	a2,a4,20401954 <_vfiprintf_r+0x23c>
204018f0:	f2f1                	bnez	a3,204018b4 <_vfiprintf_r+0x19c>
204018f2:	00044583          	lbu	a1,0(s0)
204018f6:	460d                	li	a2,3
204018f8:	fffff517          	auipc	a0,0xfffff
204018fc:	afc50513          	addi	a0,a0,-1284 # 204003f4 <__sf_fake_stdout+0x28>
20401900:	254d                	jal	20401fa2 <memchr>
20401902:	cd11                	beqz	a0,2040191e <_vfiprintf_r+0x206>
20401904:	fffff797          	auipc	a5,0xfffff
20401908:	af078793          	addi	a5,a5,-1296 # 204003f4 <__sf_fake_stdout+0x28>
2040190c:	8d1d                	sub	a0,a0,a5
2040190e:	04000793          	li	a5,64
20401912:	00a797b3          	sll	a5,a5,a0
20401916:	4542                	lw	a0,16(sp)
20401918:	0405                	addi	s0,s0,1
2040191a:	8d5d                	or	a0,a0,a5
2040191c:	c82a                	sw	a0,16(sp)
2040191e:	00044583          	lbu	a1,0(s0)
20401922:	4619                	li	a2,6
20401924:	fffff517          	auipc	a0,0xfffff
20401928:	ad450513          	addi	a0,a0,-1324 # 204003f8 <__sf_fake_stdout+0x2c>
2040192c:	00140913          	addi	s2,s0,1
20401930:	02b10423          	sb	a1,40(sp)
20401934:	25bd                	jal	20401fa2 <memchr>
20401936:	c12d                	beqz	a0,20401998 <_vfiprintf_r+0x280>
20401938:	00000793          	li	a5,0
2040193c:	e795                	bnez	a5,20401968 <_vfiprintf_r+0x250>
2040193e:	4742                	lw	a4,16(sp)
20401940:	47b2                	lw	a5,12(sp)
20401942:	10077713          	andi	a4,a4,256
20401946:	cf09                	beqz	a4,20401960 <_vfiprintf_r+0x248>
20401948:	0791                	addi	a5,a5,4
2040194a:	c63e                	sw	a5,12(sp)
2040194c:	5792                	lw	a5,36(sp)
2040194e:	97d2                	add	a5,a5,s4
20401950:	d23e                	sw	a5,36(sp)
20401952:	b53d                	j	20401780 <_vfiprintf_r+0x68>
20401954:	036787b3          	mul	a5,a5,s6
20401958:	842e                	mv	s0,a1
2040195a:	4685                	li	a3,1
2040195c:	97ba                	add	a5,a5,a4
2040195e:	b749                	j	204018e0 <_vfiprintf_r+0x1c8>
20401960:	079d                	addi	a5,a5,7
20401962:	9be1                	andi	a5,a5,-8
20401964:	07a1                	addi	a5,a5,8
20401966:	b7d5                	j	2040194a <_vfiprintf_r+0x232>
20401968:	0078                	addi	a4,sp,12
2040196a:	00000697          	auipc	a3,0x0
2040196e:	d6c68693          	addi	a3,a3,-660 # 204016d6 <__sfputs_r>
20401972:	8626                	mv	a2,s1
20401974:	080c                	addi	a1,sp,16
20401976:	854e                	mv	a0,s3
20401978:	00000097          	auipc	ra,0x0
2040197c:	000000e7          	jalr	zero # 0 <__metal_boot_hart>
20401980:	57fd                	li	a5,-1
20401982:	8a2a                	mv	s4,a0
20401984:	fcf514e3          	bne	a0,a5,2040194c <_vfiprintf_r+0x234>
20401988:	00c4d783          	lhu	a5,12(s1)
2040198c:	0407f793          	andi	a5,a5,64
20401990:	ea079ee3          	bnez	a5,2040184c <_vfiprintf_r+0x134>
20401994:	5512                	lw	a0,36(sp)
20401996:	bd65                	j	2040184e <_vfiprintf_r+0x136>
20401998:	0078                	addi	a4,sp,12
2040199a:	00000697          	auipc	a3,0x0
2040199e:	d3c68693          	addi	a3,a3,-708 # 204016d6 <__sfputs_r>
204019a2:	8626                	mv	a2,s1
204019a4:	080c                	addi	a1,sp,16
204019a6:	854e                	mv	a0,s3
204019a8:	7c6000ef          	jal	ra,2040216e <_printf_i>
204019ac:	bfd1                	j	20401980 <_vfiprintf_r+0x268>

204019ae <_sbrk_r>:
_sbrk_r():
204019ae:	1141                	addi	sp,sp,-16
204019b0:	c422                	sw	s0,8(sp)
204019b2:	842a                	mv	s0,a0
204019b4:	852e                	mv	a0,a1
204019b6:	5fbff797          	auipc	a5,0x5fbff
204019ba:	e207a123          	sw	zero,-478(a5) # 800007d8 <errno>
204019be:	c606                	sw	ra,12(sp)
204019c0:	36b000ef          	jal	ra,2040252a <_sbrk>
204019c4:	57fd                	li	a5,-1
204019c6:	00f51863          	bne	a0,a5,204019d6 <_sbrk_r+0x28>
204019ca:	5fbff797          	auipc	a5,0x5fbff
204019ce:	e0e7a783          	lw	a5,-498(a5) # 800007d8 <errno>
204019d2:	c391                	beqz	a5,204019d6 <_sbrk_r+0x28>
204019d4:	c01c                	sw	a5,0(s0)
204019d6:	40b2                	lw	ra,12(sp)
204019d8:	4422                	lw	s0,8(sp)
204019da:	0141                	addi	sp,sp,16
204019dc:	8082                	ret

204019de <__sread>:
__sread():
204019de:	1141                	addi	sp,sp,-16
204019e0:	c422                	sw	s0,8(sp)
204019e2:	842e                	mv	s0,a1
204019e4:	00e59583          	lh	a1,14(a1)
204019e8:	c606                	sw	ra,12(sp)
204019ea:	1f5000ef          	jal	ra,204023de <_read_r>
204019ee:	00054963          	bltz	a0,20401a00 <__sread+0x22>
204019f2:	487c                	lw	a5,84(s0)
204019f4:	97aa                	add	a5,a5,a0
204019f6:	c87c                	sw	a5,84(s0)
204019f8:	40b2                	lw	ra,12(sp)
204019fa:	4422                	lw	s0,8(sp)
204019fc:	0141                	addi	sp,sp,16
204019fe:	8082                	ret
20401a00:	00c45783          	lhu	a5,12(s0)
20401a04:	777d                	lui	a4,0xfffff
20401a06:	177d                	addi	a4,a4,-1
20401a08:	8ff9                	and	a5,a5,a4
20401a0a:	00f41623          	sh	a5,12(s0)
20401a0e:	b7ed                	j	204019f8 <__sread+0x1a>

20401a10 <__swrite>:
__swrite():
20401a10:	00c5d783          	lhu	a5,12(a1)
20401a14:	1101                	addi	sp,sp,-32
20401a16:	cc22                	sw	s0,24(sp)
20401a18:	ca26                	sw	s1,20(sp)
20401a1a:	c84a                	sw	s2,16(sp)
20401a1c:	c64e                	sw	s3,12(sp)
20401a1e:	ce06                	sw	ra,28(sp)
20401a20:	1007f793          	andi	a5,a5,256
20401a24:	84aa                	mv	s1,a0
20401a26:	842e                	mv	s0,a1
20401a28:	8932                	mv	s2,a2
20401a2a:	89b6                	mv	s3,a3
20401a2c:	c791                	beqz	a5,20401a38 <__swrite+0x28>
20401a2e:	00e59583          	lh	a1,14(a1)
20401a32:	4689                	li	a3,2
20401a34:	4601                	li	a2,0
20401a36:	2189                	jal	20401e78 <_lseek_r>
20401a38:	00c45783          	lhu	a5,12(s0)
20401a3c:	777d                	lui	a4,0xfffff
20401a3e:	177d                	addi	a4,a4,-1
20401a40:	8ff9                	and	a5,a5,a4
20401a42:	00e41583          	lh	a1,14(s0)
20401a46:	00f41623          	sh	a5,12(s0)
20401a4a:	4462                	lw	s0,24(sp)
20401a4c:	40f2                	lw	ra,28(sp)
20401a4e:	86ce                	mv	a3,s3
20401a50:	864a                	mv	a2,s2
20401a52:	49b2                	lw	s3,12(sp)
20401a54:	4942                	lw	s2,16(sp)
20401a56:	8526                	mv	a0,s1
20401a58:	44d2                	lw	s1,20(sp)
20401a5a:	6105                	addi	sp,sp,32
20401a5c:	a201                	j	20401b5c <_write_r>

20401a5e <__sseek>:
__sseek():
20401a5e:	1141                	addi	sp,sp,-16
20401a60:	c422                	sw	s0,8(sp)
20401a62:	842e                	mv	s0,a1
20401a64:	00e59583          	lh	a1,14(a1)
20401a68:	c606                	sw	ra,12(sp)
20401a6a:	2139                	jal	20401e78 <_lseek_r>
20401a6c:	57fd                	li	a5,-1
20401a6e:	00c45703          	lhu	a4,12(s0)
20401a72:	00f51b63          	bne	a0,a5,20401a88 <__sseek+0x2a>
20401a76:	77fd                	lui	a5,0xfffff
20401a78:	17fd                	addi	a5,a5,-1
20401a7a:	8ff9                	and	a5,a5,a4
20401a7c:	00f41623          	sh	a5,12(s0)
20401a80:	40b2                	lw	ra,12(sp)
20401a82:	4422                	lw	s0,8(sp)
20401a84:	0141                	addi	sp,sp,16
20401a86:	8082                	ret
20401a88:	6785                	lui	a5,0x1
20401a8a:	8fd9                	or	a5,a5,a4
20401a8c:	00f41623          	sh	a5,12(s0)
20401a90:	c868                	sw	a0,84(s0)
20401a92:	b7fd                	j	20401a80 <__sseek+0x22>

20401a94 <__sclose>:
__sclose():
20401a94:	00e59583          	lh	a1,14(a1)
20401a98:	a411                	j	20401c9c <_close_r>

20401a9a <__swbuf_r>:
__swbuf_r():
20401a9a:	1101                	addi	sp,sp,-32
20401a9c:	cc22                	sw	s0,24(sp)
20401a9e:	ca26                	sw	s1,20(sp)
20401aa0:	c84a                	sw	s2,16(sp)
20401aa2:	ce06                	sw	ra,28(sp)
20401aa4:	c64e                	sw	s3,12(sp)
20401aa6:	84aa                	mv	s1,a0
20401aa8:	892e                	mv	s2,a1
20401aaa:	8432                	mv	s0,a2
20401aac:	c509                	beqz	a0,20401ab6 <__swbuf_r+0x1c>
20401aae:	4d1c                	lw	a5,24(a0)
20401ab0:	e399                	bnez	a5,20401ab6 <__swbuf_r+0x1c>
20401ab2:	907ff0ef          	jal	ra,204013b8 <__sinit>
20401ab6:	fffff797          	auipc	a5,0xfffff
20401aba:	8f678793          	addi	a5,a5,-1802 # 204003ac <__sf_fake_stdin>
20401abe:	06f41963          	bne	s0,a5,20401b30 <__swbuf_r+0x96>
20401ac2:	40c0                	lw	s0,4(s1)
20401ac4:	4c1c                	lw	a5,24(s0)
20401ac6:	c41c                	sw	a5,8(s0)
20401ac8:	00c45783          	lhu	a5,12(s0)
20401acc:	8ba1                	andi	a5,a5,8
20401ace:	c3c9                	beqz	a5,20401b50 <__swbuf_r+0xb6>
20401ad0:	481c                	lw	a5,16(s0)
20401ad2:	cfbd                	beqz	a5,20401b50 <__swbuf_r+0xb6>
20401ad4:	481c                	lw	a5,16(s0)
20401ad6:	4008                	lw	a0,0(s0)
20401ad8:	0ff97993          	zext.b	s3,s2
20401adc:	0ff97913          	zext.b	s2,s2
20401ae0:	8d1d                	sub	a0,a0,a5
20401ae2:	485c                	lw	a5,20(s0)
20401ae4:	00f54663          	blt	a0,a5,20401af0 <__swbuf_r+0x56>
20401ae8:	85a2                	mv	a1,s0
20401aea:	8526                	mv	a0,s1
20401aec:	261d                	jal	20401e12 <_fflush_r>
20401aee:	e52d                	bnez	a0,20401b58 <__swbuf_r+0xbe>
20401af0:	441c                	lw	a5,8(s0)
20401af2:	0505                	addi	a0,a0,1
20401af4:	17fd                	addi	a5,a5,-1
20401af6:	c41c                	sw	a5,8(s0)
20401af8:	401c                	lw	a5,0(s0)
20401afa:	00178713          	addi	a4,a5,1
20401afe:	c018                	sw	a4,0(s0)
20401b00:	01378023          	sb	s3,0(a5)
20401b04:	485c                	lw	a5,20(s0)
20401b06:	00a78963          	beq	a5,a0,20401b18 <__swbuf_r+0x7e>
20401b0a:	00c45783          	lhu	a5,12(s0)
20401b0e:	8b85                	andi	a5,a5,1
20401b10:	cb81                	beqz	a5,20401b20 <__swbuf_r+0x86>
20401b12:	47a9                	li	a5,10
20401b14:	00f91663          	bne	s2,a5,20401b20 <__swbuf_r+0x86>
20401b18:	85a2                	mv	a1,s0
20401b1a:	8526                	mv	a0,s1
20401b1c:	2cdd                	jal	20401e12 <_fflush_r>
20401b1e:	ed0d                	bnez	a0,20401b58 <__swbuf_r+0xbe>
20401b20:	40f2                	lw	ra,28(sp)
20401b22:	4462                	lw	s0,24(sp)
20401b24:	44d2                	lw	s1,20(sp)
20401b26:	49b2                	lw	s3,12(sp)
20401b28:	854a                	mv	a0,s2
20401b2a:	4942                	lw	s2,16(sp)
20401b2c:	6105                	addi	sp,sp,32
20401b2e:	8082                	ret
20401b30:	fffff797          	auipc	a5,0xfffff
20401b34:	89c78793          	addi	a5,a5,-1892 # 204003cc <__sf_fake_stdout>
20401b38:	00f41463          	bne	s0,a5,20401b40 <__swbuf_r+0xa6>
20401b3c:	4480                	lw	s0,8(s1)
20401b3e:	b759                	j	20401ac4 <__swbuf_r+0x2a>
20401b40:	fffff797          	auipc	a5,0xfffff
20401b44:	84c78793          	addi	a5,a5,-1972 # 2040038c <__sf_fake_stderr>
20401b48:	f6f41ee3          	bne	s0,a5,20401ac4 <__swbuf_r+0x2a>
20401b4c:	44c0                	lw	s0,12(s1)
20401b4e:	bf9d                	j	20401ac4 <__swbuf_r+0x2a>
20401b50:	85a2                	mv	a1,s0
20401b52:	8526                	mv	a0,s1
20401b54:	2835                	jal	20401b90 <__swsetup_r>
20401b56:	dd3d                	beqz	a0,20401ad4 <__swbuf_r+0x3a>
20401b58:	597d                	li	s2,-1
20401b5a:	b7d9                	j	20401b20 <__swbuf_r+0x86>

20401b5c <_write_r>:
_write_r():
20401b5c:	1141                	addi	sp,sp,-16
20401b5e:	c422                	sw	s0,8(sp)
20401b60:	842a                	mv	s0,a0
20401b62:	852e                	mv	a0,a1
20401b64:	85b2                	mv	a1,a2
20401b66:	8636                	mv	a2,a3
20401b68:	5fbff797          	auipc	a5,0x5fbff
20401b6c:	c607a823          	sw	zero,-912(a5) # 800007d8 <errno>
20401b70:	c606                	sw	ra,12(sp)
20401b72:	243000ef          	jal	ra,204025b4 <_write>
20401b76:	57fd                	li	a5,-1
20401b78:	00f51863          	bne	a0,a5,20401b88 <_write_r+0x2c>
20401b7c:	5fbff797          	auipc	a5,0x5fbff
20401b80:	c5c7a783          	lw	a5,-932(a5) # 800007d8 <errno>
20401b84:	c391                	beqz	a5,20401b88 <_write_r+0x2c>
20401b86:	c01c                	sw	a5,0(s0)
20401b88:	40b2                	lw	ra,12(sp)
20401b8a:	4422                	lw	s0,8(sp)
20401b8c:	0141                	addi	sp,sp,16
20401b8e:	8082                	ret

20401b90 <__swsetup_r>:
__swsetup_r():
20401b90:	1141                	addi	sp,sp,-16
20401b92:	c422                	sw	s0,8(sp)
20401b94:	c226                	sw	s1,4(sp)
20401b96:	c04a                	sw	s2,0(sp)
20401b98:	c606                	sw	ra,12(sp)
20401b9a:	5fbff497          	auipc	s1,0x5fbff
20401b9e:	c064a483          	lw	s1,-1018(s1) # 800007a0 <_impure_ptr>
20401ba2:	892a                	mv	s2,a0
20401ba4:	842e                	mv	s0,a1
20401ba6:	c491                	beqz	s1,20401bb2 <__swsetup_r+0x22>
20401ba8:	4c9c                	lw	a5,24(s1)
20401baa:	e781                	bnez	a5,20401bb2 <__swsetup_r+0x22>
20401bac:	8526                	mv	a0,s1
20401bae:	80bff0ef          	jal	ra,204013b8 <__sinit>
20401bb2:	ffffe797          	auipc	a5,0xffffe
20401bb6:	7fa78793          	addi	a5,a5,2042 # 204003ac <__sf_fake_stdin>
20401bba:	02f41763          	bne	s0,a5,20401be8 <__swsetup_r+0x58>
20401bbe:	40c0                	lw	s0,4(s1)
20401bc0:	00c41783          	lh	a5,12(s0)
20401bc4:	01079713          	slli	a4,a5,0x10
20401bc8:	0087f693          	andi	a3,a5,8
20401bcc:	8341                	srli	a4,a4,0x10
20401bce:	eaad                	bnez	a3,20401c40 <__swsetup_r+0xb0>
20401bd0:	01077693          	andi	a3,a4,16
20401bd4:	ea95                	bnez	a3,20401c08 <__swsetup_r+0x78>
20401bd6:	4725                	li	a4,9
20401bd8:	00e92023          	sw	a4,0(s2)
20401bdc:	0407e793          	ori	a5,a5,64
20401be0:	00f41623          	sh	a5,12(s0)
20401be4:	557d                	li	a0,-1
20401be6:	a871                	j	20401c82 <__swsetup_r+0xf2>
20401be8:	ffffe797          	auipc	a5,0xffffe
20401bec:	7e478793          	addi	a5,a5,2020 # 204003cc <__sf_fake_stdout>
20401bf0:	00f41463          	bne	s0,a5,20401bf8 <__swsetup_r+0x68>
20401bf4:	4480                	lw	s0,8(s1)
20401bf6:	b7e9                	j	20401bc0 <__swsetup_r+0x30>
20401bf8:	ffffe797          	auipc	a5,0xffffe
20401bfc:	79478793          	addi	a5,a5,1940 # 2040038c <__sf_fake_stderr>
20401c00:	fcf410e3          	bne	s0,a5,20401bc0 <__swsetup_r+0x30>
20401c04:	44c0                	lw	s0,12(s1)
20401c06:	bf6d                	j	20401bc0 <__swsetup_r+0x30>
20401c08:	8b11                	andi	a4,a4,4
20401c0a:	c70d                	beqz	a4,20401c34 <__swsetup_r+0xa4>
20401c0c:	584c                	lw	a1,52(s0)
20401c0e:	c989                	beqz	a1,20401c20 <__swsetup_r+0x90>
20401c10:	04440793          	addi	a5,s0,68
20401c14:	00f58463          	beq	a1,a5,20401c1c <__swsetup_r+0x8c>
20401c18:	854a                	mv	a0,s2
20401c1a:	265d                	jal	20401fc0 <_free_r>
20401c1c:	02042a23          	sw	zero,52(s0)
20401c20:	00c45783          	lhu	a5,12(s0)
20401c24:	00042223          	sw	zero,4(s0)
20401c28:	fdb7f793          	andi	a5,a5,-37
20401c2c:	00f41623          	sh	a5,12(s0)
20401c30:	481c                	lw	a5,16(s0)
20401c32:	c01c                	sw	a5,0(s0)
20401c34:	00c45783          	lhu	a5,12(s0)
20401c38:	0087e793          	ori	a5,a5,8
20401c3c:	00f41623          	sh	a5,12(s0)
20401c40:	481c                	lw	a5,16(s0)
20401c42:	ef81                	bnez	a5,20401c5a <__swsetup_r+0xca>
20401c44:	00c45783          	lhu	a5,12(s0)
20401c48:	20000713          	li	a4,512
20401c4c:	2807f793          	andi	a5,a5,640
20401c50:	00e78563          	beq	a5,a4,20401c5a <__swsetup_r+0xca>
20401c54:	85a2                	mv	a1,s0
20401c56:	854a                	mv	a0,s2
20401c58:	2475                	jal	20401f04 <__smakebuf_r>
20401c5a:	00c41783          	lh	a5,12(s0)
20401c5e:	01079713          	slli	a4,a5,0x10
20401c62:	0017f693          	andi	a3,a5,1
20401c66:	8341                	srli	a4,a4,0x10
20401c68:	c29d                	beqz	a3,20401c8e <__swsetup_r+0xfe>
20401c6a:	4854                	lw	a3,20(s0)
20401c6c:	00042423          	sw	zero,8(s0)
20401c70:	40d006b3          	neg	a3,a3
20401c74:	cc14                	sw	a3,24(s0)
20401c76:	4814                	lw	a3,16(s0)
20401c78:	4501                	li	a0,0
20401c7a:	e681                	bnez	a3,20401c82 <__swsetup_r+0xf2>
20401c7c:	08077713          	andi	a4,a4,128
20401c80:	ff31                	bnez	a4,20401bdc <__swsetup_r+0x4c>
20401c82:	40b2                	lw	ra,12(sp)
20401c84:	4422                	lw	s0,8(sp)
20401c86:	4492                	lw	s1,4(sp)
20401c88:	4902                	lw	s2,0(sp)
20401c8a:	0141                	addi	sp,sp,16
20401c8c:	8082                	ret
20401c8e:	00277693          	andi	a3,a4,2
20401c92:	4601                	li	a2,0
20401c94:	e291                	bnez	a3,20401c98 <__swsetup_r+0x108>
20401c96:	4850                	lw	a2,20(s0)
20401c98:	c410                	sw	a2,8(s0)
20401c9a:	bff1                	j	20401c76 <__swsetup_r+0xe6>

20401c9c <_close_r>:
_close_r():
20401c9c:	1141                	addi	sp,sp,-16
20401c9e:	c422                	sw	s0,8(sp)
20401ca0:	842a                	mv	s0,a0
20401ca2:	852e                	mv	a0,a1
20401ca4:	5fbff797          	auipc	a5,0x5fbff
20401ca8:	b207aa23          	sw	zero,-1228(a5) # 800007d8 <errno>
20401cac:	c606                	sw	ra,12(sp)
20401cae:	7c0000ef          	jal	ra,2040246e <_close>
20401cb2:	57fd                	li	a5,-1
20401cb4:	00f51863          	bne	a0,a5,20401cc4 <_close_r+0x28>
20401cb8:	5fbff797          	auipc	a5,0x5fbff
20401cbc:	b207a783          	lw	a5,-1248(a5) # 800007d8 <errno>
20401cc0:	c391                	beqz	a5,20401cc4 <_close_r+0x28>
20401cc2:	c01c                	sw	a5,0(s0)
20401cc4:	40b2                	lw	ra,12(sp)
20401cc6:	4422                	lw	s0,8(sp)
20401cc8:	0141                	addi	sp,sp,16
20401cca:	8082                	ret

20401ccc <__sflush_r>:
__sflush_r():
20401ccc:	00c5d783          	lhu	a5,12(a1)
20401cd0:	1101                	addi	sp,sp,-32
20401cd2:	cc22                	sw	s0,24(sp)
20401cd4:	ca26                	sw	s1,20(sp)
20401cd6:	ce06                	sw	ra,28(sp)
20401cd8:	c84a                	sw	s2,16(sp)
20401cda:	c64e                	sw	s3,12(sp)
20401cdc:	0087f713          	andi	a4,a5,8
20401ce0:	84aa                	mv	s1,a0
20401ce2:	842e                	mv	s0,a1
20401ce4:	e375                	bnez	a4,20401dc8 <__sflush_r+0xfc>
20401ce6:	41d8                	lw	a4,4(a1)
20401ce8:	00e04763          	bgtz	a4,20401cf6 <__sflush_r+0x2a>
20401cec:	41b8                	lw	a4,64(a1)
20401cee:	00e04463          	bgtz	a4,20401cf6 <__sflush_r+0x2a>
20401cf2:	4501                	li	a0,0
20401cf4:	a875                	j	20401db0 <__sflush_r+0xe4>
20401cf6:	5458                	lw	a4,44(s0)
20401cf8:	df6d                	beqz	a4,20401cf2 <__sflush_r+0x26>
20401cfa:	6685                	lui	a3,0x1
20401cfc:	0004a903          	lw	s2,0(s1)
20401d00:	8ff5                	and	a5,a5,a3
20401d02:	0004a023          	sw	zero,0(s1)
20401d06:	cfa5                	beqz	a5,20401d7e <__sflush_r+0xb2>
20401d08:	4868                	lw	a0,84(s0)
20401d0a:	00c45783          	lhu	a5,12(s0)
20401d0e:	8b91                	andi	a5,a5,4
20401d10:	c799                	beqz	a5,20401d1e <__sflush_r+0x52>
20401d12:	405c                	lw	a5,4(s0)
20401d14:	8d1d                	sub	a0,a0,a5
20401d16:	585c                	lw	a5,52(s0)
20401d18:	c399                	beqz	a5,20401d1e <__sflush_r+0x52>
20401d1a:	403c                	lw	a5,64(s0)
20401d1c:	8d1d                	sub	a0,a0,a5
20401d1e:	545c                	lw	a5,44(s0)
20401d20:	500c                	lw	a1,32(s0)
20401d22:	862a                	mv	a2,a0
20401d24:	4681                	li	a3,0
20401d26:	8526                	mv	a0,s1
20401d28:	9782                	jalr	a5
20401d2a:	57fd                	li	a5,-1
20401d2c:	00c45703          	lhu	a4,12(s0)
20401d30:	00f51d63          	bne	a0,a5,20401d4a <__sflush_r+0x7e>
20401d34:	4094                	lw	a3,0(s1)
20401d36:	47f5                	li	a5,29
20401d38:	08d7e363          	bltu	a5,a3,20401dbe <__sflush_r+0xf2>
20401d3c:	204007b7          	lui	a5,0x20400
20401d40:	0785                	addi	a5,a5,1
20401d42:	00d7d7b3          	srl	a5,a5,a3
20401d46:	8b85                	andi	a5,a5,1
20401d48:	cbbd                	beqz	a5,20401dbe <__sflush_r+0xf2>
20401d4a:	481c                	lw	a5,16(s0)
20401d4c:	00042223          	sw	zero,4(s0)
20401d50:	c01c                	sw	a5,0(s0)
20401d52:	6785                	lui	a5,0x1
20401d54:	8f7d                	and	a4,a4,a5
20401d56:	c719                	beqz	a4,20401d64 <__sflush_r+0x98>
20401d58:	57fd                	li	a5,-1
20401d5a:	00f51463          	bne	a0,a5,20401d62 <__sflush_r+0x96>
20401d5e:	409c                	lw	a5,0(s1)
20401d60:	e391                	bnez	a5,20401d64 <__sflush_r+0x98>
20401d62:	c868                	sw	a0,84(s0)
20401d64:	584c                	lw	a1,52(s0)
20401d66:	0124a023          	sw	s2,0(s1)
20401d6a:	d5c1                	beqz	a1,20401cf2 <__sflush_r+0x26>
20401d6c:	04440793          	addi	a5,s0,68
20401d70:	00f58463          	beq	a1,a5,20401d78 <__sflush_r+0xac>
20401d74:	8526                	mv	a0,s1
20401d76:	24a9                	jal	20401fc0 <_free_r>
20401d78:	02042a23          	sw	zero,52(s0)
20401d7c:	bf9d                	j	20401cf2 <__sflush_r+0x26>
20401d7e:	500c                	lw	a1,32(s0)
20401d80:	4685                	li	a3,1
20401d82:	4601                	li	a2,0
20401d84:	8526                	mv	a0,s1
20401d86:	9702                	jalr	a4
20401d88:	57fd                	li	a5,-1
20401d8a:	f8f510e3          	bne	a0,a5,20401d0a <__sflush_r+0x3e>
20401d8e:	409c                	lw	a5,0(s1)
20401d90:	dfad                	beqz	a5,20401d0a <__sflush_r+0x3e>
20401d92:	4775                	li	a4,29
20401d94:	00e78563          	beq	a5,a4,20401d9e <__sflush_r+0xd2>
20401d98:	4759                	li	a4,22
20401d9a:	00e79563          	bne	a5,a4,20401da4 <__sflush_r+0xd8>
20401d9e:	0124a023          	sw	s2,0(s1)
20401da2:	bf81                	j	20401cf2 <__sflush_r+0x26>
20401da4:	00c45783          	lhu	a5,12(s0)
20401da8:	0407e793          	ori	a5,a5,64
20401dac:	00f41623          	sh	a5,12(s0)
20401db0:	40f2                	lw	ra,28(sp)
20401db2:	4462                	lw	s0,24(sp)
20401db4:	44d2                	lw	s1,20(sp)
20401db6:	4942                	lw	s2,16(sp)
20401db8:	49b2                	lw	s3,12(sp)
20401dba:	6105                	addi	sp,sp,32
20401dbc:	8082                	ret
20401dbe:	04076713          	ori	a4,a4,64
20401dc2:	00e41623          	sh	a4,12(s0)
20401dc6:	b7ed                	j	20401db0 <__sflush_r+0xe4>
20401dc8:	0105a983          	lw	s3,16(a1)
20401dcc:	f20983e3          	beqz	s3,20401cf2 <__sflush_r+0x26>
20401dd0:	0005a903          	lw	s2,0(a1)
20401dd4:	8b8d                	andi	a5,a5,3
20401dd6:	0135a023          	sw	s3,0(a1)
20401dda:	41390933          	sub	s2,s2,s3
20401dde:	4701                	li	a4,0
20401de0:	e391                	bnez	a5,20401de4 <__sflush_r+0x118>
20401de2:	49d8                	lw	a4,20(a1)
20401de4:	c418                	sw	a4,8(s0)
20401de6:	f12056e3          	blez	s2,20401cf2 <__sflush_r+0x26>
20401dea:	541c                	lw	a5,40(s0)
20401dec:	500c                	lw	a1,32(s0)
20401dee:	86ca                	mv	a3,s2
20401df0:	864e                	mv	a2,s3
20401df2:	8526                	mv	a0,s1
20401df4:	9782                	jalr	a5
20401df6:	00a04a63          	bgtz	a0,20401e0a <__sflush_r+0x13e>
20401dfa:	00c45783          	lhu	a5,12(s0)
20401dfe:	557d                	li	a0,-1
20401e00:	0407e793          	ori	a5,a5,64
20401e04:	00f41623          	sh	a5,12(s0)
20401e08:	b765                	j	20401db0 <__sflush_r+0xe4>
20401e0a:	99aa                	add	s3,s3,a0
20401e0c:	40a90933          	sub	s2,s2,a0
20401e10:	bfd9                	j	20401de6 <__sflush_r+0x11a>

20401e12 <_fflush_r>:
_fflush_r():
20401e12:	499c                	lw	a5,16(a1)
20401e14:	c3a5                	beqz	a5,20401e74 <_fflush_r+0x62>
20401e16:	1101                	addi	sp,sp,-32
20401e18:	cc22                	sw	s0,24(sp)
20401e1a:	ce06                	sw	ra,28(sp)
20401e1c:	842a                	mv	s0,a0
20401e1e:	c519                	beqz	a0,20401e2c <_fflush_r+0x1a>
20401e20:	4d1c                	lw	a5,24(a0)
20401e22:	e789                	bnez	a5,20401e2c <_fflush_r+0x1a>
20401e24:	c62e                	sw	a1,12(sp)
20401e26:	d92ff0ef          	jal	ra,204013b8 <__sinit>
20401e2a:	45b2                	lw	a1,12(sp)
20401e2c:	ffffe797          	auipc	a5,0xffffe
20401e30:	58078793          	addi	a5,a5,1408 # 204003ac <__sf_fake_stdin>
20401e34:	00f59b63          	bne	a1,a5,20401e4a <_fflush_r+0x38>
20401e38:	404c                	lw	a1,4(s0)
20401e3a:	00c59783          	lh	a5,12(a1)
20401e3e:	c795                	beqz	a5,20401e6a <_fflush_r+0x58>
20401e40:	8522                	mv	a0,s0
20401e42:	4462                	lw	s0,24(sp)
20401e44:	40f2                	lw	ra,28(sp)
20401e46:	6105                	addi	sp,sp,32
20401e48:	b551                	j	20401ccc <__sflush_r>
20401e4a:	ffffe797          	auipc	a5,0xffffe
20401e4e:	58278793          	addi	a5,a5,1410 # 204003cc <__sf_fake_stdout>
20401e52:	00f59463          	bne	a1,a5,20401e5a <_fflush_r+0x48>
20401e56:	440c                	lw	a1,8(s0)
20401e58:	b7cd                	j	20401e3a <_fflush_r+0x28>
20401e5a:	ffffe797          	auipc	a5,0xffffe
20401e5e:	53278793          	addi	a5,a5,1330 # 2040038c <__sf_fake_stderr>
20401e62:	fcf59ce3          	bne	a1,a5,20401e3a <_fflush_r+0x28>
20401e66:	444c                	lw	a1,12(s0)
20401e68:	bfc9                	j	20401e3a <_fflush_r+0x28>
20401e6a:	40f2                	lw	ra,28(sp)
20401e6c:	4462                	lw	s0,24(sp)
20401e6e:	4501                	li	a0,0
20401e70:	6105                	addi	sp,sp,32
20401e72:	8082                	ret
20401e74:	4501                	li	a0,0
20401e76:	8082                	ret

20401e78 <_lseek_r>:
_lseek_r():
20401e78:	1141                	addi	sp,sp,-16
20401e7a:	c422                	sw	s0,8(sp)
20401e7c:	842a                	mv	s0,a0
20401e7e:	852e                	mv	a0,a1
20401e80:	85b2                	mv	a1,a2
20401e82:	8636                	mv	a2,a3
20401e84:	5fbff797          	auipc	a5,0x5fbff
20401e88:	9407aa23          	sw	zero,-1708(a5) # 800007d8 <errno>
20401e8c:	c606                	sw	ra,12(sp)
20401e8e:	25a1                	jal	204024d6 <_lseek>
20401e90:	57fd                	li	a5,-1
20401e92:	00f51863          	bne	a0,a5,20401ea2 <_lseek_r+0x2a>
20401e96:	5fbff797          	auipc	a5,0x5fbff
20401e9a:	9427a783          	lw	a5,-1726(a5) # 800007d8 <errno>
20401e9e:	c391                	beqz	a5,20401ea2 <_lseek_r+0x2a>
20401ea0:	c01c                	sw	a5,0(s0)
20401ea2:	40b2                	lw	ra,12(sp)
20401ea4:	4422                	lw	s0,8(sp)
20401ea6:	0141                	addi	sp,sp,16
20401ea8:	8082                	ret

20401eaa <__swhatbuf_r>:
__swhatbuf_r():
20401eaa:	7159                	addi	sp,sp,-112
20401eac:	d0ca                	sw	s2,96(sp)
20401eae:	892e                	mv	s2,a1
20401eb0:	00e59583          	lh	a1,14(a1)
20401eb4:	d4a2                	sw	s0,104(sp)
20401eb6:	d2a6                	sw	s1,100(sp)
20401eb8:	d686                	sw	ra,108(sp)
20401eba:	8432                	mv	s0,a2
20401ebc:	84b6                	mv	s1,a3
20401ebe:	0005dc63          	bgez	a1,20401ed6 <__swhatbuf_r+0x2c>
20401ec2:	00c91783          	lh	a5,12(s2)
20401ec6:	0004a023          	sw	zero,0(s1)
20401eca:	0807f793          	andi	a5,a5,128
20401ece:	e38d                	bnez	a5,20401ef0 <__swhatbuf_r+0x46>
20401ed0:	40000793          	li	a5,1024
20401ed4:	a005                	j	20401ef4 <__swhatbuf_r+0x4a>
20401ed6:	0030                	addi	a2,sp,8
20401ed8:	2b25                	jal	20402410 <_fstat_r>
20401eda:	fe0544e3          	bltz	a0,20401ec2 <__swhatbuf_r+0x18>
20401ede:	4732                	lw	a4,12(sp)
20401ee0:	67bd                	lui	a5,0xf
20401ee2:	8ff9                	and	a5,a5,a4
20401ee4:	7779                	lui	a4,0xffffe
20401ee6:	97ba                	add	a5,a5,a4
20401ee8:	0017b793          	seqz	a5,a5
20401eec:	c09c                	sw	a5,0(s1)
20401eee:	b7cd                	j	20401ed0 <__swhatbuf_r+0x26>
20401ef0:	04000793          	li	a5,64
20401ef4:	50b6                	lw	ra,108(sp)
20401ef6:	c01c                	sw	a5,0(s0)
20401ef8:	5426                	lw	s0,104(sp)
20401efa:	5496                	lw	s1,100(sp)
20401efc:	5906                	lw	s2,96(sp)
20401efe:	4501                	li	a0,0
20401f00:	6165                	addi	sp,sp,112
20401f02:	8082                	ret

20401f04 <__smakebuf_r>:
__smakebuf_r():
20401f04:	00c5d783          	lhu	a5,12(a1)
20401f08:	1101                	addi	sp,sp,-32
20401f0a:	cc22                	sw	s0,24(sp)
20401f0c:	ce06                	sw	ra,28(sp)
20401f0e:	ca26                	sw	s1,20(sp)
20401f10:	c84a                	sw	s2,16(sp)
20401f12:	8b89                	andi	a5,a5,2
20401f14:	842e                	mv	s0,a1
20401f16:	cf89                	beqz	a5,20401f30 <__smakebuf_r+0x2c>
20401f18:	04740793          	addi	a5,s0,71
20401f1c:	c01c                	sw	a5,0(s0)
20401f1e:	c81c                	sw	a5,16(s0)
20401f20:	4785                	li	a5,1
20401f22:	c85c                	sw	a5,20(s0)
20401f24:	40f2                	lw	ra,28(sp)
20401f26:	4462                	lw	s0,24(sp)
20401f28:	44d2                	lw	s1,20(sp)
20401f2a:	4942                	lw	s2,16(sp)
20401f2c:	6105                	addi	sp,sp,32
20401f2e:	8082                	ret
20401f30:	0074                	addi	a3,sp,12
20401f32:	0030                	addi	a2,sp,8
20401f34:	892a                	mv	s2,a0
20401f36:	3f95                	jal	20401eaa <__swhatbuf_r>
20401f38:	45a2                	lw	a1,8(sp)
20401f3a:	84aa                	mv	s1,a0
20401f3c:	854a                	mv	a0,s2
20401f3e:	e92ff0ef          	jal	ra,204015d0 <_malloc_r>
20401f42:	ed01                	bnez	a0,20401f5a <__smakebuf_r+0x56>
20401f44:	00c41783          	lh	a5,12(s0)
20401f48:	2007f713          	andi	a4,a5,512
20401f4c:	ff61                	bnez	a4,20401f24 <__smakebuf_r+0x20>
20401f4e:	9bf1                	andi	a5,a5,-4
20401f50:	0027e793          	ori	a5,a5,2
20401f54:	00f41623          	sh	a5,12(s0)
20401f58:	b7c1                	j	20401f18 <__smakebuf_r+0x14>
20401f5a:	fffff797          	auipc	a5,0xfffff
20401f5e:	41078793          	addi	a5,a5,1040 # 2040136a <_cleanup_r>
20401f62:	02f92423          	sw	a5,40(s2)
20401f66:	00c45783          	lhu	a5,12(s0)
20401f6a:	c008                	sw	a0,0(s0)
20401f6c:	c808                	sw	a0,16(s0)
20401f6e:	0807e793          	ori	a5,a5,128
20401f72:	00f41623          	sh	a5,12(s0)
20401f76:	47a2                	lw	a5,8(sp)
20401f78:	c85c                	sw	a5,20(s0)
20401f7a:	47b2                	lw	a5,12(sp)
20401f7c:	cf89                	beqz	a5,20401f96 <__smakebuf_r+0x92>
20401f7e:	00e41583          	lh	a1,14(s0)
20401f82:	854a                	mv	a0,s2
20401f84:	2975                	jal	20402440 <_isatty_r>
20401f86:	c901                	beqz	a0,20401f96 <__smakebuf_r+0x92>
20401f88:	00c45783          	lhu	a5,12(s0)
20401f8c:	9bf1                	andi	a5,a5,-4
20401f8e:	0017e793          	ori	a5,a5,1
20401f92:	00f41623          	sh	a5,12(s0)
20401f96:	00c45503          	lhu	a0,12(s0)
20401f9a:	8cc9                	or	s1,s1,a0
20401f9c:	00941623          	sh	s1,12(s0)
20401fa0:	b751                	j	20401f24 <__smakebuf_r+0x20>

20401fa2 <memchr>:
memchr():
20401fa2:	0ff5f593          	zext.b	a1,a1
20401fa6:	962a                	add	a2,a2,a0
20401fa8:	00c51463          	bne	a0,a2,20401fb0 <memchr+0xe>
20401fac:	4501                	li	a0,0
20401fae:	8082                	ret
20401fb0:	00054783          	lbu	a5,0(a0)
20401fb4:	feb78de3          	beq	a5,a1,20401fae <memchr+0xc>
20401fb8:	0505                	addi	a0,a0,1
20401fba:	b7fd                	j	20401fa8 <memchr+0x6>

20401fbc <__malloc_lock>:
__malloc_lock():
20401fbc:	8082                	ret

20401fbe <__malloc_unlock>:
__malloc_unlock():
20401fbe:	8082                	ret

20401fc0 <_free_r>:
_free_r():
20401fc0:	c1c5                	beqz	a1,20402060 <_free_r+0xa0>
20401fc2:	ffc5a783          	lw	a5,-4(a1)
20401fc6:	1101                	addi	sp,sp,-32
20401fc8:	cc22                	sw	s0,24(sp)
20401fca:	ce06                	sw	ra,28(sp)
20401fcc:	ffc58413          	addi	s0,a1,-4
20401fd0:	0007d363          	bgez	a5,20401fd6 <_free_r+0x16>
20401fd4:	943e                	add	s0,s0,a5
20401fd6:	c62a                	sw	a0,12(sp)
20401fd8:	37d5                	jal	20401fbc <__malloc_lock>
20401fda:	5fbfe717          	auipc	a4,0x5fbfe
20401fde:	7f670713          	addi	a4,a4,2038 # 800007d0 <__malloc_free_list>
20401fe2:	431c                	lw	a5,0(a4)
20401fe4:	4532                	lw	a0,12(sp)
20401fe6:	eb81                	bnez	a5,20401ff6 <_free_r+0x36>
20401fe8:	00042223          	sw	zero,4(s0)
20401fec:	c300                	sw	s0,0(a4)
20401fee:	4462                	lw	s0,24(sp)
20401ff0:	40f2                	lw	ra,28(sp)
20401ff2:	6105                	addi	sp,sp,32
20401ff4:	b7e9                	j	20401fbe <__malloc_unlock>
20401ff6:	00f47d63          	bgeu	s0,a5,20402010 <_free_r+0x50>
20401ffa:	4010                	lw	a2,0(s0)
20401ffc:	00c406b3          	add	a3,s0,a2
20402000:	00d79663          	bne	a5,a3,2040200c <_free_r+0x4c>
20402004:	4394                	lw	a3,0(a5)
20402006:	43dc                	lw	a5,4(a5)
20402008:	96b2                	add	a3,a3,a2
2040200a:	c014                	sw	a3,0(s0)
2040200c:	c05c                	sw	a5,4(s0)
2040200e:	bff9                	j	20401fec <_free_r+0x2c>
20402010:	873e                	mv	a4,a5
20402012:	43dc                	lw	a5,4(a5)
20402014:	c399                	beqz	a5,2040201a <_free_r+0x5a>
20402016:	fef47de3          	bgeu	s0,a5,20402010 <_free_r+0x50>
2040201a:	4314                	lw	a3,0(a4)
2040201c:	00d70633          	add	a2,a4,a3
20402020:	00861f63          	bne	a2,s0,2040203e <_free_r+0x7e>
20402024:	4010                	lw	a2,0(s0)
20402026:	96b2                	add	a3,a3,a2
20402028:	c314                	sw	a3,0(a4)
2040202a:	00d70633          	add	a2,a4,a3
2040202e:	fcc790e3          	bne	a5,a2,20401fee <_free_r+0x2e>
20402032:	4390                	lw	a2,0(a5)
20402034:	43dc                	lw	a5,4(a5)
20402036:	96b2                	add	a3,a3,a2
20402038:	c314                	sw	a3,0(a4)
2040203a:	c35c                	sw	a5,4(a4)
2040203c:	bf4d                	j	20401fee <_free_r+0x2e>
2040203e:	00c47563          	bgeu	s0,a2,20402048 <_free_r+0x88>
20402042:	47b1                	li	a5,12
20402044:	c11c                	sw	a5,0(a0)
20402046:	b765                	j	20401fee <_free_r+0x2e>
20402048:	4010                	lw	a2,0(s0)
2040204a:	00c406b3          	add	a3,s0,a2
2040204e:	00d79663          	bne	a5,a3,2040205a <_free_r+0x9a>
20402052:	4394                	lw	a3,0(a5)
20402054:	43dc                	lw	a5,4(a5)
20402056:	96b2                	add	a3,a3,a2
20402058:	c014                	sw	a3,0(s0)
2040205a:	c05c                	sw	a5,4(s0)
2040205c:	c340                	sw	s0,4(a4)
2040205e:	bf41                	j	20401fee <_free_r+0x2e>
20402060:	8082                	ret

20402062 <_printf_common>:
_printf_common():
20402062:	7179                	addi	sp,sp,-48
20402064:	cc52                	sw	s4,24(sp)
20402066:	499c                	lw	a5,16(a1)
20402068:	8a3a                	mv	s4,a4
2040206a:	4598                	lw	a4,8(a1)
2040206c:	d422                	sw	s0,40(sp)
2040206e:	d226                	sw	s1,36(sp)
20402070:	ce4e                	sw	s3,28(sp)
20402072:	ca56                	sw	s5,20(sp)
20402074:	d606                	sw	ra,44(sp)
20402076:	d04a                	sw	s2,32(sp)
20402078:	c85a                	sw	s6,16(sp)
2040207a:	c65e                	sw	s7,12(sp)
2040207c:	89aa                	mv	s3,a0
2040207e:	842e                	mv	s0,a1
20402080:	84b2                	mv	s1,a2
20402082:	8ab6                	mv	s5,a3
20402084:	00e7d363          	bge	a5,a4,2040208a <_printf_common+0x28>
20402088:	87ba                	mv	a5,a4
2040208a:	c09c                	sw	a5,0(s1)
2040208c:	04344703          	lbu	a4,67(s0)
20402090:	c319                	beqz	a4,20402096 <_printf_common+0x34>
20402092:	0785                	addi	a5,a5,1
20402094:	c09c                	sw	a5,0(s1)
20402096:	401c                	lw	a5,0(s0)
20402098:	0207f793          	andi	a5,a5,32
2040209c:	c781                	beqz	a5,204020a4 <_printf_common+0x42>
2040209e:	409c                	lw	a5,0(s1)
204020a0:	0789                	addi	a5,a5,2
204020a2:	c09c                	sw	a5,0(s1)
204020a4:	00042903          	lw	s2,0(s0)
204020a8:	00697913          	andi	s2,s2,6
204020ac:	00091a63          	bnez	s2,204020c0 <_printf_common+0x5e>
204020b0:	01940b13          	addi	s6,s0,25
204020b4:	5bfd                	li	s7,-1
204020b6:	445c                	lw	a5,12(s0)
204020b8:	4098                	lw	a4,0(s1)
204020ba:	8f99                	sub	a5,a5,a4
204020bc:	04f94c63          	blt	s2,a5,20402114 <_printf_common+0xb2>
204020c0:	04344783          	lbu	a5,67(s0)
204020c4:	00f036b3          	snez	a3,a5
204020c8:	401c                	lw	a5,0(s0)
204020ca:	0207f793          	andi	a5,a5,32
204020ce:	eba5                	bnez	a5,2040213e <_printf_common+0xdc>
204020d0:	04340613          	addi	a2,s0,67
204020d4:	85d6                	mv	a1,s5
204020d6:	854e                	mv	a0,s3
204020d8:	9a02                	jalr	s4
204020da:	57fd                	li	a5,-1
204020dc:	04f50363          	beq	a0,a5,20402122 <_printf_common+0xc0>
204020e0:	401c                	lw	a5,0(s0)
204020e2:	4611                	li	a2,4
204020e4:	4098                	lw	a4,0(s1)
204020e6:	8b99                	andi	a5,a5,6
204020e8:	4454                	lw	a3,12(s0)
204020ea:	4481                	li	s1,0
204020ec:	00c79763          	bne	a5,a2,204020fa <_printf_common+0x98>
204020f0:	40e684b3          	sub	s1,a3,a4
204020f4:	0004d363          	bgez	s1,204020fa <_printf_common+0x98>
204020f8:	4481                	li	s1,0
204020fa:	441c                	lw	a5,8(s0)
204020fc:	4818                	lw	a4,16(s0)
204020fe:	00f75463          	bge	a4,a5,20402106 <_printf_common+0xa4>
20402102:	8f99                	sub	a5,a5,a4
20402104:	94be                	add	s1,s1,a5
20402106:	4901                	li	s2,0
20402108:	0469                	addi	s0,s0,26
2040210a:	5b7d                	li	s6,-1
2040210c:	05249863          	bne	s1,s2,2040215c <_printf_common+0xfa>
20402110:	4501                	li	a0,0
20402112:	a809                	j	20402124 <_printf_common+0xc2>
20402114:	4685                	li	a3,1
20402116:	865a                	mv	a2,s6
20402118:	85d6                	mv	a1,s5
2040211a:	854e                	mv	a0,s3
2040211c:	9a02                	jalr	s4
2040211e:	01751e63          	bne	a0,s7,2040213a <_printf_common+0xd8>
20402122:	557d                	li	a0,-1
20402124:	50b2                	lw	ra,44(sp)
20402126:	5422                	lw	s0,40(sp)
20402128:	5492                	lw	s1,36(sp)
2040212a:	5902                	lw	s2,32(sp)
2040212c:	49f2                	lw	s3,28(sp)
2040212e:	4a62                	lw	s4,24(sp)
20402130:	4ad2                	lw	s5,20(sp)
20402132:	4b42                	lw	s6,16(sp)
20402134:	4bb2                	lw	s7,12(sp)
20402136:	6145                	addi	sp,sp,48
20402138:	8082                	ret
2040213a:	0905                	addi	s2,s2,1
2040213c:	bfad                	j	204020b6 <_printf_common+0x54>
2040213e:	00d40733          	add	a4,s0,a3
20402142:	03000613          	li	a2,48
20402146:	04c701a3          	sb	a2,67(a4)
2040214a:	04544703          	lbu	a4,69(s0)
2040214e:	00168793          	addi	a5,a3,1 # 1001 <__heap_size+0x801>
20402152:	97a2                	add	a5,a5,s0
20402154:	0689                	addi	a3,a3,2
20402156:	04e781a3          	sb	a4,67(a5)
2040215a:	bf9d                	j	204020d0 <_printf_common+0x6e>
2040215c:	4685                	li	a3,1
2040215e:	8622                	mv	a2,s0
20402160:	85d6                	mv	a1,s5
20402162:	854e                	mv	a0,s3
20402164:	9a02                	jalr	s4
20402166:	fb650ee3          	beq	a0,s6,20402122 <_printf_common+0xc0>
2040216a:	0905                	addi	s2,s2,1
2040216c:	b745                	j	2040210c <_printf_common+0xaa>

2040216e <_printf_i>:
_printf_i():
2040216e:	7179                	addi	sp,sp,-48
20402170:	d422                	sw	s0,40(sp)
20402172:	d226                	sw	s1,36(sp)
20402174:	d04a                	sw	s2,32(sp)
20402176:	ce4e                	sw	s3,28(sp)
20402178:	d606                	sw	ra,44(sp)
2040217a:	cc52                	sw	s4,24(sp)
2040217c:	ca56                	sw	s5,20(sp)
2040217e:	c85a                	sw	s6,16(sp)
20402180:	0185c803          	lbu	a6,24(a1)
20402184:	07800793          	li	a5,120
20402188:	84aa                	mv	s1,a0
2040218a:	842e                	mv	s0,a1
2040218c:	8932                	mv	s2,a2
2040218e:	89b6                	mv	s3,a3
20402190:	0107ee63          	bltu	a5,a6,204021ac <_printf_i+0x3e>
20402194:	06200793          	li	a5,98
20402198:	04358693          	addi	a3,a1,67
2040219c:	0107ed63          	bltu	a5,a6,204021b6 <_printf_i+0x48>
204021a0:	1c080563          	beqz	a6,2040236a <_printf_i+0x1fc>
204021a4:	05800793          	li	a5,88
204021a8:	12f80a63          	beq	a6,a5,204022dc <_printf_i+0x16e>
204021ac:	04240a93          	addi	s5,s0,66
204021b0:	05040123          	sb	a6,66(s0)
204021b4:	a815                	j	204021e8 <_printf_i+0x7a>
204021b6:	f9d80793          	addi	a5,a6,-99
204021ba:	0ff7f793          	zext.b	a5,a5
204021be:	4655                	li	a2,21
204021c0:	fef666e3          	bltu	a2,a5,204021ac <_printf_i+0x3e>
204021c4:	ffffe617          	auipc	a2,0xffffe
204021c8:	26460613          	addi	a2,a2,612 # 20400428 <__sf_fake_stdout+0x5c>
204021cc:	078a                	slli	a5,a5,0x2
204021ce:	97b2                	add	a5,a5,a2
204021d0:	439c                	lw	a5,0(a5)
204021d2:	97b2                	add	a5,a5,a2
204021d4:	8782                	jr	a5
204021d6:	431c                	lw	a5,0(a4)
204021d8:	04258a93          	addi	s5,a1,66
204021dc:	00478693          	addi	a3,a5,4
204021e0:	439c                	lw	a5,0(a5)
204021e2:	c314                	sw	a3,0(a4)
204021e4:	04f58123          	sb	a5,66(a1)
204021e8:	4785                	li	a5,1
204021ea:	a25d                	j	20402390 <_printf_i+0x222>
204021ec:	419c                	lw	a5,0(a1)
204021ee:	4308                	lw	a0,0(a4)
204021f0:	0807f613          	andi	a2,a5,128
204021f4:	00450593          	addi	a1,a0,4
204021f8:	c20d                	beqz	a2,2040221a <_printf_i+0xac>
204021fa:	411c                	lw	a5,0(a0)
204021fc:	c30c                	sw	a1,0(a4)
204021fe:	0007d863          	bgez	a5,2040220e <_printf_i+0xa0>
20402202:	02d00713          	li	a4,45
20402206:	40f007b3          	neg	a5,a5
2040220a:	04e401a3          	sb	a4,67(s0)
2040220e:	ffffe617          	auipc	a2,0xffffe
20402212:	1f260613          	addi	a2,a2,498 # 20400400 <__sf_fake_stdout+0x34>
20402216:	4829                	li	a6,10
20402218:	a0a1                	j	20402260 <_printf_i+0xf2>
2040221a:	0407f613          	andi	a2,a5,64
2040221e:	411c                	lw	a5,0(a0)
20402220:	c30c                	sw	a1,0(a4)
20402222:	de71                	beqz	a2,204021fe <_printf_i+0x90>
20402224:	07c2                	slli	a5,a5,0x10
20402226:	87c1                	srai	a5,a5,0x10
20402228:	bfd9                	j	204021fe <_printf_i+0x90>
2040222a:	4190                	lw	a2,0(a1)
2040222c:	431c                	lw	a5,0(a4)
2040222e:	08067513          	andi	a0,a2,128
20402232:	00478593          	addi	a1,a5,4
20402236:	c501                	beqz	a0,2040223e <_printf_i+0xd0>
20402238:	c30c                	sw	a1,0(a4)
2040223a:	439c                	lw	a5,0(a5)
2040223c:	a039                	j	2040224a <_printf_i+0xdc>
2040223e:	04067613          	andi	a2,a2,64
20402242:	c30c                	sw	a1,0(a4)
20402244:	da7d                	beqz	a2,2040223a <_printf_i+0xcc>
20402246:	0007d783          	lhu	a5,0(a5)
2040224a:	06f00713          	li	a4,111
2040224e:	ffffe617          	auipc	a2,0xffffe
20402252:	1b260613          	addi	a2,a2,434 # 20400400 <__sf_fake_stdout+0x34>
20402256:	0ee80463          	beq	a6,a4,2040233e <_printf_i+0x1d0>
2040225a:	4829                	li	a6,10
2040225c:	040401a3          	sb	zero,67(s0)
20402260:	4058                	lw	a4,4(s0)
20402262:	c418                	sw	a4,8(s0)
20402264:	00074563          	bltz	a4,2040226e <_printf_i+0x100>
20402268:	400c                	lw	a1,0(s0)
2040226a:	99ed                	andi	a1,a1,-5
2040226c:	c00c                	sw	a1,0(s0)
2040226e:	e399                	bnez	a5,20402274 <_printf_i+0x106>
20402270:	8ab6                	mv	s5,a3
20402272:	cf19                	beqz	a4,20402290 <_printf_i+0x122>
20402274:	8ab6                	mv	s5,a3
20402276:	0307f733          	remu	a4,a5,a6
2040227a:	1afd                	addi	s5,s5,-1
2040227c:	9732                	add	a4,a4,a2
2040227e:	00074703          	lbu	a4,0(a4)
20402282:	00ea8023          	sb	a4,0(s5)
20402286:	873e                	mv	a4,a5
20402288:	0307d7b3          	divu	a5,a5,a6
2040228c:	ff0775e3          	bgeu	a4,a6,20402276 <_printf_i+0x108>
20402290:	47a1                	li	a5,8
20402292:	00f81e63          	bne	a6,a5,204022ae <_printf_i+0x140>
20402296:	401c                	lw	a5,0(s0)
20402298:	8b85                	andi	a5,a5,1
2040229a:	cb91                	beqz	a5,204022ae <_printf_i+0x140>
2040229c:	4058                	lw	a4,4(s0)
2040229e:	481c                	lw	a5,16(s0)
204022a0:	00e7c763          	blt	a5,a4,204022ae <_printf_i+0x140>
204022a4:	03000793          	li	a5,48
204022a8:	fefa8fa3          	sb	a5,-1(s5)
204022ac:	1afd                	addi	s5,s5,-1
204022ae:	415686b3          	sub	a3,a3,s5
204022b2:	c814                	sw	a3,16(s0)
204022b4:	874e                	mv	a4,s3
204022b6:	86ca                	mv	a3,s2
204022b8:	0070                	addi	a2,sp,12
204022ba:	85a2                	mv	a1,s0
204022bc:	8526                	mv	a0,s1
204022be:	3355                	jal	20402062 <_printf_common>
204022c0:	5a7d                	li	s4,-1
204022c2:	0d451b63          	bne	a0,s4,20402398 <_printf_i+0x22a>
204022c6:	557d                	li	a0,-1
204022c8:	50b2                	lw	ra,44(sp)
204022ca:	5422                	lw	s0,40(sp)
204022cc:	5492                	lw	s1,36(sp)
204022ce:	5902                	lw	s2,32(sp)
204022d0:	49f2                	lw	s3,28(sp)
204022d2:	4a62                	lw	s4,24(sp)
204022d4:	4ad2                	lw	s5,20(sp)
204022d6:	4b42                	lw	s6,16(sp)
204022d8:	6145                	addi	sp,sp,48
204022da:	8082                	ret
204022dc:	050582a3          	sb	a6,69(a1)
204022e0:	ffffe617          	auipc	a2,0xffffe
204022e4:	12060613          	addi	a2,a2,288 # 20400400 <__sf_fake_stdout+0x34>
204022e8:	400c                	lw	a1,0(s0)
204022ea:	4308                	lw	a0,0(a4)
204022ec:	0805f813          	andi	a6,a1,128
204022f0:	411c                	lw	a5,0(a0)
204022f2:	0511                	addi	a0,a0,4
204022f4:	02080d63          	beqz	a6,2040232e <_printf_i+0x1c0>
204022f8:	c308                	sw	a0,0(a4)
204022fa:	0015f713          	andi	a4,a1,1
204022fe:	c701                	beqz	a4,20402306 <_printf_i+0x198>
20402300:	0205e593          	ori	a1,a1,32
20402304:	c00c                	sw	a1,0(s0)
20402306:	4841                	li	a6,16
20402308:	fbb1                	bnez	a5,2040225c <_printf_i+0xee>
2040230a:	4018                	lw	a4,0(s0)
2040230c:	fdf77713          	andi	a4,a4,-33
20402310:	c018                	sw	a4,0(s0)
20402312:	b7a9                	j	2040225c <_printf_i+0xee>
20402314:	419c                	lw	a5,0(a1)
20402316:	0207e793          	ori	a5,a5,32
2040231a:	c19c                	sw	a5,0(a1)
2040231c:	07800793          	li	a5,120
20402320:	04f402a3          	sb	a5,69(s0)
20402324:	ffffe617          	auipc	a2,0xffffe
20402328:	0f060613          	addi	a2,a2,240 # 20400414 <__sf_fake_stdout+0x48>
2040232c:	bf75                	j	204022e8 <_printf_i+0x17a>
2040232e:	0405f813          	andi	a6,a1,64
20402332:	c308                	sw	a0,0(a4)
20402334:	fc0803e3          	beqz	a6,204022fa <_printf_i+0x18c>
20402338:	07c2                	slli	a5,a5,0x10
2040233a:	83c1                	srli	a5,a5,0x10
2040233c:	bf7d                	j	204022fa <_printf_i+0x18c>
2040233e:	4821                	li	a6,8
20402340:	bf31                	j	2040225c <_printf_i+0xee>
20402342:	4190                	lw	a2,0(a1)
20402344:	431c                	lw	a5,0(a4)
20402346:	49cc                	lw	a1,20(a1)
20402348:	08067813          	andi	a6,a2,128
2040234c:	00478513          	addi	a0,a5,4
20402350:	00080663          	beqz	a6,2040235c <_printf_i+0x1ee>
20402354:	c308                	sw	a0,0(a4)
20402356:	439c                	lw	a5,0(a5)
20402358:	c38c                	sw	a1,0(a5)
2040235a:	a801                	j	2040236a <_printf_i+0x1fc>
2040235c:	c308                	sw	a0,0(a4)
2040235e:	04067613          	andi	a2,a2,64
20402362:	439c                	lw	a5,0(a5)
20402364:	da75                	beqz	a2,20402358 <_printf_i+0x1ea>
20402366:	00b79023          	sh	a1,0(a5)
2040236a:	00042823          	sw	zero,16(s0)
2040236e:	8ab6                	mv	s5,a3
20402370:	b791                	j	204022b4 <_printf_i+0x146>
20402372:	431c                	lw	a5,0(a4)
20402374:	41d0                	lw	a2,4(a1)
20402376:	4581                	li	a1,0
20402378:	00478693          	addi	a3,a5,4
2040237c:	c314                	sw	a3,0(a4)
2040237e:	0007aa83          	lw	s5,0(a5)
20402382:	8556                	mv	a0,s5
20402384:	3939                	jal	20401fa2 <memchr>
20402386:	c501                	beqz	a0,2040238e <_printf_i+0x220>
20402388:	41550533          	sub	a0,a0,s5
2040238c:	c048                	sw	a0,4(s0)
2040238e:	405c                	lw	a5,4(s0)
20402390:	c81c                	sw	a5,16(s0)
20402392:	040401a3          	sb	zero,67(s0)
20402396:	bf39                	j	204022b4 <_printf_i+0x146>
20402398:	4814                	lw	a3,16(s0)
2040239a:	8656                	mv	a2,s5
2040239c:	85ca                	mv	a1,s2
2040239e:	8526                	mv	a0,s1
204023a0:	9982                	jalr	s3
204023a2:	f34502e3          	beq	a0,s4,204022c6 <_printf_i+0x158>
204023a6:	401c                	lw	a5,0(s0)
204023a8:	8b89                	andi	a5,a5,2
204023aa:	e78d                	bnez	a5,204023d4 <_printf_i+0x266>
204023ac:	47b2                	lw	a5,12(sp)
204023ae:	4448                	lw	a0,12(s0)
204023b0:	f0f55ce3          	bge	a0,a5,204022c8 <_printf_i+0x15a>
204023b4:	853e                	mv	a0,a5
204023b6:	bf09                	j	204022c8 <_printf_i+0x15a>
204023b8:	4685                	li	a3,1
204023ba:	8656                	mv	a2,s5
204023bc:	85ca                	mv	a1,s2
204023be:	8526                	mv	a0,s1
204023c0:	9982                	jalr	s3
204023c2:	f16502e3          	beq	a0,s6,204022c6 <_printf_i+0x158>
204023c6:	0a05                	addi	s4,s4,1
204023c8:	445c                	lw	a5,12(s0)
204023ca:	4732                	lw	a4,12(sp)
204023cc:	8f99                	sub	a5,a5,a4
204023ce:	fefa45e3          	blt	s4,a5,204023b8 <_printf_i+0x24a>
204023d2:	bfe9                	j	204023ac <_printf_i+0x23e>
204023d4:	4a01                	li	s4,0
204023d6:	01940a93          	addi	s5,s0,25
204023da:	5b7d                	li	s6,-1
204023dc:	b7f5                	j	204023c8 <_printf_i+0x25a>

204023de <_read_r>:
_read_r():
204023de:	1141                	addi	sp,sp,-16
204023e0:	c422                	sw	s0,8(sp)
204023e2:	842a                	mv	s0,a0
204023e4:	852e                	mv	a0,a1
204023e6:	85b2                	mv	a1,a2
204023e8:	8636                	mv	a2,a3
204023ea:	5fbfe797          	auipc	a5,0x5fbfe
204023ee:	3e07a723          	sw	zero,1006(a5) # 800007d8 <errno>
204023f2:	c606                	sw	ra,12(sp)
204023f4:	2231                	jal	20402500 <_read>
204023f6:	57fd                	li	a5,-1
204023f8:	00f51863          	bne	a0,a5,20402408 <_read_r+0x2a>
204023fc:	5fbfe797          	auipc	a5,0x5fbfe
20402400:	3dc7a783          	lw	a5,988(a5) # 800007d8 <errno>
20402404:	c391                	beqz	a5,20402408 <_read_r+0x2a>
20402406:	c01c                	sw	a5,0(s0)
20402408:	40b2                	lw	ra,12(sp)
2040240a:	4422                	lw	s0,8(sp)
2040240c:	0141                	addi	sp,sp,16
2040240e:	8082                	ret

20402410 <_fstat_r>:
_fstat_r():
20402410:	1141                	addi	sp,sp,-16
20402412:	c422                	sw	s0,8(sp)
20402414:	842a                	mv	s0,a0
20402416:	852e                	mv	a0,a1
20402418:	85b2                	mv	a1,a2
2040241a:	5fbfe797          	auipc	a5,0x5fbfe
2040241e:	3a07af23          	sw	zero,958(a5) # 800007d8 <errno>
20402422:	c606                	sw	ra,12(sp)
20402424:	20b5                	jal	20402490 <_fstat>
20402426:	57fd                	li	a5,-1
20402428:	00f51863          	bne	a0,a5,20402438 <_fstat_r+0x28>
2040242c:	5fbfe797          	auipc	a5,0x5fbfe
20402430:	3ac7a783          	lw	a5,940(a5) # 800007d8 <errno>
20402434:	c391                	beqz	a5,20402438 <_fstat_r+0x28>
20402436:	c01c                	sw	a5,0(s0)
20402438:	40b2                	lw	ra,12(sp)
2040243a:	4422                	lw	s0,8(sp)
2040243c:	0141                	addi	sp,sp,16
2040243e:	8082                	ret

20402440 <_isatty_r>:
_isatty_r():
20402440:	1141                	addi	sp,sp,-16
20402442:	c422                	sw	s0,8(sp)
20402444:	842a                	mv	s0,a0
20402446:	852e                	mv	a0,a1
20402448:	5fbfe797          	auipc	a5,0x5fbfe
2040244c:	3807a823          	sw	zero,912(a5) # 800007d8 <errno>
20402450:	c606                	sw	ra,12(sp)
20402452:	2095                	jal	204024b6 <_isatty>
20402454:	57fd                	li	a5,-1
20402456:	00f51863          	bne	a0,a5,20402466 <_isatty_r+0x26>
2040245a:	5fbfe797          	auipc	a5,0x5fbfe
2040245e:	37e7a783          	lw	a5,894(a5) # 800007d8 <errno>
20402462:	c391                	beqz	a5,20402466 <_isatty_r+0x26>
20402464:	c01c                	sw	a5,0(s0)
20402466:	40b2                	lw	ra,12(sp)
20402468:	4422                	lw	s0,8(sp)
2040246a:	0141                	addi	sp,sp,16
2040246c:	8082                	ret

2040246e <_close>:
_close():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_close.c:3
#include <errno.h>

int _close(int file) {
2040246e:	1101                	addi	sp,sp,-32
20402470:	ce06                	sw	ra,28(sp)
20402472:	cc22                	sw	s0,24(sp)
20402474:	1000                	addi	s0,sp,32
20402476:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_close.c:4
    errno = ENOSYS;
2040247a:	2a4d                	jal	2040262c <__errno>
2040247c:	872a                	mv	a4,a0
2040247e:	05800793          	li	a5,88
20402482:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_close.c:5
    return -1;
20402484:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_close.c:6
}
20402486:	853e                	mv	a0,a5
20402488:	40f2                	lw	ra,28(sp)
2040248a:	4462                	lw	s0,24(sp)
2040248c:	6105                	addi	sp,sp,32
2040248e:	8082                	ret

20402490 <_fstat>:
_fstat():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_fstat.c:4
#include <errno.h>
#include <sys/stat.h>

int _fstat(int file, struct stat *st) {
20402490:	1101                	addi	sp,sp,-32
20402492:	ce06                	sw	ra,28(sp)
20402494:	cc22                	sw	s0,24(sp)
20402496:	1000                	addi	s0,sp,32
20402498:	fea42623          	sw	a0,-20(s0)
2040249c:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_fstat.c:5
    errno = -ENOSYS;
204024a0:	2271                	jal	2040262c <__errno>
204024a2:	872a                	mv	a4,a0
204024a4:	fa800793          	li	a5,-88
204024a8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_fstat.c:6
    return -1;
204024aa:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_fstat.c:7
}
204024ac:	853e                	mv	a0,a5
204024ae:	40f2                	lw	ra,28(sp)
204024b0:	4462                	lw	s0,24(sp)
204024b2:	6105                	addi	sp,sp,32
204024b4:	8082                	ret

204024b6 <_isatty>:
_isatty():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_isatty.c:3
#include <unistd.h>

int _isatty(int file) { return (file == STDOUT_FILENO); }
204024b6:	1101                	addi	sp,sp,-32
204024b8:	ce22                	sw	s0,28(sp)
204024ba:	1000                	addi	s0,sp,32
204024bc:	fea42623          	sw	a0,-20(s0)
204024c0:	fec42783          	lw	a5,-20(s0)
204024c4:	17fd                	addi	a5,a5,-1
204024c6:	0017b793          	seqz	a5,a5
204024ca:	0ff7f793          	zext.b	a5,a5
204024ce:	853e                	mv	a0,a5
204024d0:	4472                	lw	s0,28(sp)
204024d2:	6105                	addi	sp,sp,32
204024d4:	8082                	ret

204024d6 <_lseek>:
_lseek():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_lseek.c:4
#include <errno.h>
#include <sys/types.h>

off_t _lseek(int file, off_t ptr, int dir) {
204024d6:	1101                	addi	sp,sp,-32
204024d8:	ce06                	sw	ra,28(sp)
204024da:	cc22                	sw	s0,24(sp)
204024dc:	1000                	addi	s0,sp,32
204024de:	fea42623          	sw	a0,-20(s0)
204024e2:	feb42423          	sw	a1,-24(s0)
204024e6:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_lseek.c:5
    errno = ENOSYS;
204024ea:	2289                	jal	2040262c <__errno>
204024ec:	872a                	mv	a4,a0
204024ee:	05800793          	li	a5,88
204024f2:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_lseek.c:6
    return -1;
204024f4:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_lseek.c:7
}
204024f6:	853e                	mv	a0,a5
204024f8:	40f2                	lw	ra,28(sp)
204024fa:	4462                	lw	s0,24(sp)
204024fc:	6105                	addi	sp,sp,32
204024fe:	8082                	ret

20402500 <_read>:
_read():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_read.c:4
#include <errno.h>
#include <sys/types.h>

ssize_t _read(int file, void *ptr, size_t len) {
20402500:	1101                	addi	sp,sp,-32
20402502:	ce06                	sw	ra,28(sp)
20402504:	cc22                	sw	s0,24(sp)
20402506:	1000                	addi	s0,sp,32
20402508:	fea42623          	sw	a0,-20(s0)
2040250c:	feb42423          	sw	a1,-24(s0)
20402510:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_read.c:5
    errno = ENOSYS;
20402514:	2a21                	jal	2040262c <__errno>
20402516:	872a                	mv	a4,a0
20402518:	05800793          	li	a5,88
2040251c:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_read.c:6
    return -1;
2040251e:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_read.c:7
}
20402520:	853e                	mv	a0,a5
20402522:	40f2                	lw	ra,28(sp)
20402524:	4462                	lw	s0,24(sp)
20402526:	6105                	addi	sp,sp,32
20402528:	8082                	ret

2040252a <_sbrk>:
_sbrk():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:24
int _brk(void *addr) {
    __brk = addr;
    return 0;
}

char *_sbrk(ptrdiff_t incr) {
2040252a:	7179                	addi	sp,sp,-48
2040252c:	d606                	sw	ra,44(sp)
2040252e:	d422                	sw	s0,40(sp)
20402530:	1800                	addi	s0,sp,48
20402532:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:25
    char *old = __brk;
20402536:	800007b7          	lui	a5,0x80000
2040253a:	7a47a783          	lw	a5,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffeff4>
2040253e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:28

    /* If __heap_size == 0, we can't allocate memory on the heap */
    if (&metal_segment_heap_target_start == &metal_segment_heap_target_end) {
20402542:	01018713          	addi	a4,gp,16 # 80000fb0 <_sp>
20402546:	800017b7          	lui	a5,0x80001
2040254a:	7b078793          	addi	a5,a5,1968 # 800017b0 <metal_segment_heap_target_end+0x0>
2040254e:	00f71463          	bne	a4,a5,20402556 <_sbrk+0x2c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:29
        return (void *)-1;
20402552:	57fd                	li	a5,-1
20402554:	a899                	j	204025aa <_sbrk+0x80>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:33
    }

    /* Don't move the break past the end of the heap */
    if ((__brk + incr) < &metal_segment_heap_target_end) {
20402556:	800007b7          	lui	a5,0x80000
2040255a:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffeff4>
2040255e:	fdc42783          	lw	a5,-36(s0)
20402562:	973e                	add	a4,a4,a5
20402564:	800017b7          	lui	a5,0x80001
20402568:	7b078793          	addi	a5,a5,1968 # 800017b0 <metal_segment_heap_target_end+0x0>
2040256c:	02f77663          	bgeu	a4,a5,20402598 <_sbrk+0x6e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:34
        __brk += incr;
20402570:	800007b7          	lui	a5,0x80000
20402574:	7a47a703          	lw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffeff4>
20402578:	fdc42783          	lw	a5,-36(s0)
2040257c:	973e                	add	a4,a4,a5
2040257e:	800007b7          	lui	a5,0x80000
20402582:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffeff4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:40
    } else {
        __brk = &metal_segment_heap_target_end;
        return (void *)-1;
    }
    /* Scrub out allocated memory to avoid spurious ECC errors */
    metal_mem_scrub(old, incr);
20402586:	fdc42583          	lw	a1,-36(s0)
2040258a:	fec42503          	lw	a0,-20(s0)
2040258e:	afdfd0ef          	jal	ra,2040008a <metal_mem_scrub>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:42

    return old;
20402592:	fec42783          	lw	a5,-20(s0)
20402596:	a811                	j	204025aa <_sbrk+0x80>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:36
        __brk = &metal_segment_heap_target_end;
20402598:	800007b7          	lui	a5,0x80000
2040259c:	80001737          	lui	a4,0x80001
204025a0:	7b070713          	addi	a4,a4,1968 # 800017b0 <metal_segment_heap_target_end+0x0>
204025a4:	7ae7a223          	sw	a4,1956(a5) # 800007a4 <metal_segment_heap_target_end+0xffffeff4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:37
        return (void *)-1;
204025a8:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_sbrk.c:43
}
204025aa:	853e                	mv	a0,a5
204025ac:	50b2                	lw	ra,44(sp)
204025ae:	5422                	lw	s0,40(sp)
204025b0:	6145                	addi	sp,sp,48
204025b2:	8082                	ret

204025b4 <_write>:
_write():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:7
#include <metal/tty.h>
#include <sys/types.h>
#include <unistd.h>

/* Write to a file.  */
ssize_t _write(int file, const void *ptr, size_t len) {
204025b4:	7179                	addi	sp,sp,-48
204025b6:	d606                	sw	ra,44(sp)
204025b8:	d422                	sw	s0,40(sp)
204025ba:	1800                	addi	s0,sp,48
204025bc:	fca42e23          	sw	a0,-36(s0)
204025c0:	fcb42c23          	sw	a1,-40(s0)
204025c4:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:8
    if (file != STDOUT_FILENO) {
204025c8:	fdc42703          	lw	a4,-36(s0)
204025cc:	4785                	li	a5,1
204025ce:	00f70963          	beq	a4,a5,204025e0 <_write+0x2c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:9
        errno = ENOSYS;
204025d2:	28a9                	jal	2040262c <__errno>
204025d4:	872a                	mv	a4,a0
204025d6:	05800793          	li	a5,88
204025da:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:10
        return -1;
204025dc:	57fd                	li	a5,-1
204025de:	a82d                	j	20402618 <_write+0x64>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:13
    }

    const char *bptr = ptr;
204025e0:	fd842783          	lw	a5,-40(s0)
204025e4:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:14
    for (size_t i = 0; i < len; ++i)
204025e8:	fe042623          	sw	zero,-20(s0)
204025ec:	a839                	j	2040260a <_write+0x56>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:15 (discriminator 3)
        metal_tty_putc(bptr[i]);
204025ee:	fe842703          	lw	a4,-24(s0)
204025f2:	fec42783          	lw	a5,-20(s0)
204025f6:	97ba                	add	a5,a5,a4
204025f8:	0007c783          	lbu	a5,0(a5)
204025fc:	853e                	mv	a0,a5
204025fe:	2e89                	jal	20402950 <metal_tty_putc>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:14 (discriminator 3)
    for (size_t i = 0; i < len; ++i)
20402600:	fec42783          	lw	a5,-20(s0)
20402604:	0785                	addi	a5,a5,1
20402606:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:14 (discriminator 1)
2040260a:	fec42703          	lw	a4,-20(s0)
2040260e:	fd442783          	lw	a5,-44(s0)
20402612:	fcf76ee3          	bltu	a4,a5,204025ee <_write+0x3a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:16
    return 0;
20402616:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_write.c:17
}
20402618:	853e                	mv	a0,a5
2040261a:	50b2                	lw	ra,44(sp)
2040261c:	5422                	lw	s0,40(sp)
2040261e:	6145                	addi	sp,sp,48
20402620:	8082                	ret

20402622 <atexit>:
atexit():
20402622:	85aa                	mv	a1,a0
20402624:	4681                	li	a3,0
20402626:	4601                	li	a2,0
20402628:	4501                	li	a0,0
2040262a:	a0e9                	j	204026f4 <__register_exitproc>

2040262c <__errno>:
__errno():
2040262c:	5fbfe517          	auipc	a0,0x5fbfe
20402630:	17452503          	lw	a0,372(a0) # 800007a0 <_impure_ptr>
20402634:	8082                	ret

20402636 <exit>:
exit():
20402636:	1141                	addi	sp,sp,-16
20402638:	c422                	sw	s0,8(sp)
2040263a:	c606                	sw	ra,12(sp)
2040263c:	00000797          	auipc	a5,0x0
20402640:	13478793          	addi	a5,a5,308 # 20402770 <__call_exitprocs>
20402644:	842a                	mv	s0,a0
20402646:	c399                	beqz	a5,2040264c <exit+0x16>
20402648:	4581                	li	a1,0
2040264a:	221d                	jal	20402770 <__call_exitprocs>
2040264c:	fffff517          	auipc	a0,0xfffff
20402650:	98452503          	lw	a0,-1660(a0) # 20400fd0 <_global_impure_ptr>
20402654:	551c                	lw	a5,40(a0)
20402656:	c391                	beqz	a5,2040265a <exit+0x24>
20402658:	9782                	jalr	a5
2040265a:	8522                	mv	a0,s0
2040265c:	247040ef          	jal	ra,204070a2 <_exit>

20402660 <__libc_fini_array>:
__libc_fini_array():
20402660:	1141                	addi	sp,sp,-16
20402662:	c422                	sw	s0,8(sp)
20402664:	c226                	sw	s1,4(sp)
20402666:	ffffe417          	auipc	s0,0xffffe
2040266a:	c8a40413          	addi	s0,s0,-886 # 204002f0 <__fini_array_end>
2040266e:	ffffe497          	auipc	s1,0xffffe
20402672:	c8248493          	addi	s1,s1,-894 # 204002f0 <__fini_array_end>
20402676:	8c05                	sub	s0,s0,s1
20402678:	c606                	sw	ra,12(sp)
2040267a:	8409                	srai	s0,s0,0x2
2040267c:	e411                	bnez	s0,20402688 <__libc_fini_array+0x28>
2040267e:	40b2                	lw	ra,12(sp)
20402680:	4422                	lw	s0,8(sp)
20402682:	4492                	lw	s1,4(sp)
20402684:	0141                	addi	sp,sp,16
20402686:	8082                	ret
20402688:	147d                	addi	s0,s0,-1
2040268a:	00241793          	slli	a5,s0,0x2
2040268e:	97a6                	add	a5,a5,s1
20402690:	439c                	lw	a5,0(a5)
20402692:	9782                	jalr	a5
20402694:	b7e5                	j	2040267c <__libc_fini_array+0x1c>

20402696 <__libc_init_array>:
__libc_init_array():
20402696:	1141                	addi	sp,sp,-16
20402698:	c422                	sw	s0,8(sp)
2040269a:	c226                	sw	s1,4(sp)
2040269c:	ffffe417          	auipc	s0,0xffffe
204026a0:	c4440413          	addi	s0,s0,-956 # 204002e0 <_metal_tty_init_ptr>
204026a4:	ffffe497          	auipc	s1,0xffffe
204026a8:	c3c48493          	addi	s1,s1,-964 # 204002e0 <_metal_tty_init_ptr>
204026ac:	8c81                	sub	s1,s1,s0
204026ae:	c04a                	sw	s2,0(sp)
204026b0:	c606                	sw	ra,12(sp)
204026b2:	8489                	srai	s1,s1,0x2
204026b4:	4901                	li	s2,0
204026b6:	02991563          	bne	s2,s1,204026e0 <__libc_init_array+0x4a>
204026ba:	ffffe417          	auipc	s0,0xffffe
204026be:	c2640413          	addi	s0,s0,-986 # 204002e0 <_metal_tty_init_ptr>
204026c2:	ffffe497          	auipc	s1,0xffffe
204026c6:	c1e48493          	addi	s1,s1,-994 # 204002e0 <_metal_tty_init_ptr>
204026ca:	8c81                	sub	s1,s1,s0
204026cc:	8489                	srai	s1,s1,0x2
204026ce:	4901                	li	s2,0
204026d0:	00991d63          	bne	s2,s1,204026ea <__libc_init_array+0x54>
204026d4:	40b2                	lw	ra,12(sp)
204026d6:	4422                	lw	s0,8(sp)
204026d8:	4492                	lw	s1,4(sp)
204026da:	4902                	lw	s2,0(sp)
204026dc:	0141                	addi	sp,sp,16
204026de:	8082                	ret
204026e0:	401c                	lw	a5,0(s0)
204026e2:	0905                	addi	s2,s2,1
204026e4:	0411                	addi	s0,s0,4
204026e6:	9782                	jalr	a5
204026e8:	b7f9                	j	204026b6 <__libc_init_array+0x20>
204026ea:	401c                	lw	a5,0(s0)
204026ec:	0905                	addi	s2,s2,1
204026ee:	0411                	addi	s0,s0,4
204026f0:	9782                	jalr	a5
204026f2:	bff9                	j	204026d0 <__libc_init_array+0x3a>

204026f4 <__register_exitproc>:
__register_exitproc():
204026f4:	88aa                	mv	a7,a0
204026f6:	5fbfe517          	auipc	a0,0x5fbfe
204026fa:	0e650513          	addi	a0,a0,230 # 800007dc <_global_atexit>
204026fe:	411c                	lw	a5,0(a0)
20402700:	ef91                	bnez	a5,2040271c <__register_exitproc+0x28>
20402702:	5fbfe717          	auipc	a4,0x5fbfe
20402706:	0e670713          	addi	a4,a4,230 # 800007e8 <_global_atexit0>
2040270a:	c118                	sw	a4,0(a0)
2040270c:	00000513          	li	a0,0
20402710:	87ba                	mv	a5,a4
20402712:	c509                	beqz	a0,2040271c <__register_exitproc+0x28>
20402714:	411c                	lw	a5,0(a0)
20402716:	08f72423          	sw	a5,136(a4)
2040271a:	87ba                	mv	a5,a4
2040271c:	43d8                	lw	a4,4(a5)
2040271e:	487d                	li	a6,31
20402720:	557d                	li	a0,-1
20402722:	04e84663          	blt	a6,a4,2040276e <__register_exitproc+0x7a>
20402726:	02088d63          	beqz	a7,20402760 <__register_exitproc+0x6c>
2040272a:	0887a803          	lw	a6,136(a5)
2040272e:	04080063          	beqz	a6,2040276e <__register_exitproc+0x7a>
20402732:	00271513          	slli	a0,a4,0x2
20402736:	9542                	add	a0,a0,a6
20402738:	c110                	sw	a2,0(a0)
2040273a:	10082303          	lw	t1,256(a6)
2040273e:	4605                	li	a2,1
20402740:	00e61633          	sll	a2,a2,a4
20402744:	00c36333          	or	t1,t1,a2
20402748:	10682023          	sw	t1,256(a6)
2040274c:	08d52023          	sw	a3,128(a0)
20402750:	4689                	li	a3,2
20402752:	00d89763          	bne	a7,a3,20402760 <__register_exitproc+0x6c>
20402756:	10482683          	lw	a3,260(a6)
2040275a:	8e55                	or	a2,a2,a3
2040275c:	10c82223          	sw	a2,260(a6)
20402760:	00170693          	addi	a3,a4,1
20402764:	070a                	slli	a4,a4,0x2
20402766:	c3d4                	sw	a3,4(a5)
20402768:	97ba                	add	a5,a5,a4
2040276a:	c78c                	sw	a1,8(a5)
2040276c:	4501                	li	a0,0
2040276e:	8082                	ret

20402770 <__call_exitprocs>:
__call_exitprocs():
20402770:	7179                	addi	sp,sp,-48
20402772:	ca56                	sw	s5,20(sp)
20402774:	c85a                	sw	s6,16(sp)
20402776:	c65e                	sw	s7,12(sp)
20402778:	c462                	sw	s8,8(sp)
2040277a:	d606                	sw	ra,44(sp)
2040277c:	d422                	sw	s0,40(sp)
2040277e:	d226                	sw	s1,36(sp)
20402780:	d04a                	sw	s2,32(sp)
20402782:	ce4e                	sw	s3,28(sp)
20402784:	cc52                	sw	s4,24(sp)
20402786:	c266                	sw	s9,4(sp)
20402788:	8b2a                	mv	s6,a0
2040278a:	8aae                	mv	s5,a1
2040278c:	5fbfeb97          	auipc	s7,0x5fbfe
20402790:	050b8b93          	addi	s7,s7,80 # 800007dc <_global_atexit>
20402794:	4c05                	li	s8,1
20402796:	000ba483          	lw	s1,0(s7)
2040279a:	cc81                	beqz	s1,204027b2 <__call_exitprocs+0x42>
2040279c:	40c0                	lw	s0,4(s1)
2040279e:	0884a983          	lw	s3,136(s1)
204027a2:	fff40913          	addi	s2,s0,-1
204027a6:	040a                	slli	s0,s0,0x2
204027a8:	00898a33          	add	s4,s3,s0
204027ac:	9426                	add	s0,s0,s1
204027ae:	00095f63          	bgez	s2,204027cc <__call_exitprocs+0x5c>
204027b2:	50b2                	lw	ra,44(sp)
204027b4:	5422                	lw	s0,40(sp)
204027b6:	5492                	lw	s1,36(sp)
204027b8:	5902                	lw	s2,32(sp)
204027ba:	49f2                	lw	s3,28(sp)
204027bc:	4a62                	lw	s4,24(sp)
204027be:	4ad2                	lw	s5,20(sp)
204027c0:	4b42                	lw	s6,16(sp)
204027c2:	4bb2                	lw	s7,12(sp)
204027c4:	4c22                	lw	s8,8(sp)
204027c6:	4c92                	lw	s9,4(sp)
204027c8:	6145                	addi	sp,sp,48
204027ca:	8082                	ret
204027cc:	000a8c63          	beqz	s5,204027e4 <__call_exitprocs+0x74>
204027d0:	00099663          	bnez	s3,204027dc <__call_exitprocs+0x6c>
204027d4:	197d                	addi	s2,s2,-1
204027d6:	1a71                	addi	s4,s4,-4
204027d8:	1471                	addi	s0,s0,-4
204027da:	bfd1                	j	204027ae <__call_exitprocs+0x3e>
204027dc:	07ca2783          	lw	a5,124(s4)
204027e0:	ff579ae3          	bne	a5,s5,204027d4 <__call_exitprocs+0x64>
204027e4:	40d8                	lw	a4,4(s1)
204027e6:	405c                	lw	a5,4(s0)
204027e8:	177d                	addi	a4,a4,-1
204027ea:	03271863          	bne	a4,s2,2040281a <__call_exitprocs+0xaa>
204027ee:	0124a223          	sw	s2,4(s1)
204027f2:	d3ed                	beqz	a5,204027d4 <__call_exitprocs+0x64>
204027f4:	0044ac83          	lw	s9,4(s1)
204027f8:	00098863          	beqz	s3,20402808 <__call_exitprocs+0x98>
204027fc:	1009a683          	lw	a3,256(s3)
20402800:	012c1733          	sll	a4,s8,s2
20402804:	8ef9                	and	a3,a3,a4
20402806:	ee89                	bnez	a3,20402820 <__call_exitprocs+0xb0>
20402808:	9782                	jalr	a5
2040280a:	40d8                	lw	a4,4(s1)
2040280c:	000ba783          	lw	a5,0(s7)
20402810:	f99713e3          	bne	a4,s9,20402796 <__call_exitprocs+0x26>
20402814:	fcf480e3          	beq	s1,a5,204027d4 <__call_exitprocs+0x64>
20402818:	bfbd                	j	20402796 <__call_exitprocs+0x26>
2040281a:	00042223          	sw	zero,4(s0)
2040281e:	bfd1                	j	204027f2 <__call_exitprocs+0x82>
20402820:	1049a683          	lw	a3,260(s3)
20402824:	ffca2583          	lw	a1,-4(s4)
20402828:	8f75                	and	a4,a4,a3
2040282a:	e701                	bnez	a4,20402832 <__call_exitprocs+0xc2>
2040282c:	855a                	mv	a0,s6
2040282e:	9782                	jalr	a5
20402830:	bfe9                	j	2040280a <__call_exitprocs+0x9a>
20402832:	852e                	mv	a0,a1
20402834:	9782                	jalr	a5
20402836:	bfd1                	j	2040280a <__call_exitprocs+0x9a>

20402838 <metal_init>:
metal_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:17
extern metal_constructor_t metal_constructors_start;
extern metal_constructor_t metal_constructors_end;
extern metal_destructor_t metal_destructors_start;
extern metal_destructor_t metal_destructors_end;

void metal_init(void) {
20402838:	1101                	addi	sp,sp,-32
2040283a:	ce06                	sw	ra,28(sp)
2040283c:	cc22                	sw	s0,24(sp)
2040283e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:20
    /* Make sure the constructors only run once */
    static int init_done = 0;
    if (init_done) {
20402840:	800007b7          	lui	a5,0x80000
20402844:	7e07a783          	lw	a5,2016(a5) # 800007e0 <metal_segment_heap_target_end+0xfffff030>
20402848:	efa9                	bnez	a5,204028a2 <metal_init+0x6a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:23
        return;
    }
    init_done = 1;
2040284a:	800007b7          	lui	a5,0x80000
2040284e:	4705                	li	a4,1
20402850:	7ee7a023          	sw	a4,2016(a5) # 800007e0 <metal_segment_heap_target_end+0xfffff030>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:25

    if (&metal_constructors_end <= &metal_constructors_start) {
20402854:	204007b7          	lui	a5,0x20400
20402858:	2ec78713          	addi	a4,a5,748 # 204002ec <metal_tty_init>
2040285c:	204007b7          	lui	a5,0x20400
20402860:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402864:	04e7f163          	bgeu	a5,a4,204028a6 <metal_init+0x6e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:29
        return;
    }

    metal_constructor_t *funcptr = &metal_constructors_start;
20402868:	204007b7          	lui	a5,0x20400
2040286c:	2e078793          	addi	a5,a5,736 # 204002e0 <_metal_tty_init_ptr>
20402870:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402874:	a831                	j	20402890 <metal_init+0x58>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:31
        metal_constructor_t func = *funcptr;
20402876:	fec42783          	lw	a5,-20(s0)
2040287a:	439c                	lw	a5,0(a5)
2040287c:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:33

        func();
20402880:	fe842783          	lw	a5,-24(s0)
20402884:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:35

        funcptr += 1;
20402886:	fec42783          	lw	a5,-20(s0)
2040288a:	0791                	addi	a5,a5,4
2040288c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:30
    while (funcptr != &metal_constructors_end) {
20402890:	fec42703          	lw	a4,-20(s0)
20402894:	204007b7          	lui	a5,0x20400
20402898:	2ec78793          	addi	a5,a5,748 # 204002ec <metal_tty_init>
2040289c:	fcf71de3          	bne	a4,a5,20402876 <metal_init+0x3e>
204028a0:	a021                	j	204028a8 <metal_init+0x70>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:21
        return;
204028a2:	0001                	nop
204028a4:	a011                	j	204028a8 <metal_init+0x70>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:26
        return;
204028a6:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:37
    }
}
204028a8:	40f2                	lw	ra,28(sp)
204028aa:	4462                	lw	s0,24(sp)
204028ac:	6105                	addi	sp,sp,32
204028ae:	8082                	ret

204028b0 <metal_fini>:
metal_fini():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:39

void metal_fini(void) {
204028b0:	1101                	addi	sp,sp,-32
204028b2:	ce06                	sw	ra,28(sp)
204028b4:	cc22                	sw	s0,24(sp)
204028b6:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:42
    /* Make sure the destructors only run once */
    static int fini_done = 0;
    if (fini_done) {
204028b8:	800007b7          	lui	a5,0x80000
204028bc:	7e47a783          	lw	a5,2020(a5) # 800007e4 <metal_segment_heap_target_end+0xfffff034>
204028c0:	efa9                	bnez	a5,2040291a <metal_fini+0x6a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:45
        return;
    }
    fini_done = 1;
204028c2:	800007b7          	lui	a5,0x80000
204028c6:	4705                	li	a4,1
204028c8:	7ee7a223          	sw	a4,2020(a5) # 800007e4 <metal_segment_heap_target_end+0xfffff034>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:47

    if (&metal_destructors_end <= &metal_destructors_start) {
204028cc:	204007b7          	lui	a5,0x20400
204028d0:	2f078713          	addi	a4,a5,752 # 204002f0 <__fini_array_end>
204028d4:	204007b7          	lui	a5,0x20400
204028d8:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
204028dc:	04e7f163          	bgeu	a5,a4,2040291e <metal_fini+0x6e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:51
        return;
    }

    metal_destructor_t *funcptr = &metal_destructors_start;
204028e0:	204007b7          	lui	a5,0x20400
204028e4:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
204028e8:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
204028ec:	a831                	j	20402908 <metal_fini+0x58>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:53
        metal_destructor_t func = *funcptr;
204028ee:	fec42783          	lw	a5,-20(s0)
204028f2:	439c                	lw	a5,0(a5)
204028f4:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:55

        func();
204028f8:	fe842783          	lw	a5,-24(s0)
204028fc:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:57

        funcptr += 1;
204028fe:	fec42783          	lw	a5,-20(s0)
20402902:	0791                	addi	a5,a5,4
20402904:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:52
    while (funcptr != &metal_destructors_end) {
20402908:	fec42703          	lw	a4,-20(s0)
2040290c:	204007b7          	lui	a5,0x20400
20402910:	2f078793          	addi	a5,a5,752 # 204002f0 <__fini_array_end>
20402914:	fcf71de3          	bne	a4,a5,204028ee <metal_fini+0x3e>
20402918:	a021                	j	20402920 <metal_fini+0x70>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:43
        return;
2040291a:	0001                	nop
2040291c:	a011                	j	20402920 <metal_fini+0x70>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:48
        return;
2040291e:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:59
    }
}
20402920:	40f2                	lw	ra,28(sp)
20402922:	4462                	lw	s0,24(sp)
20402924:	6105                	addi	sp,sp,32
20402926:	8082                	ret

20402928 <metal_init_run>:
metal_init_run():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:69
 * in the case that users don't want the metal constructors or
 * destructors to run.
 */

void metal_init_run(void) __attribute__((weak));
void metal_init_run(void) { metal_init(); }
20402928:	1141                	addi	sp,sp,-16
2040292a:	c606                	sw	ra,12(sp)
2040292c:	c422                	sw	s0,8(sp)
2040292e:	0800                	addi	s0,sp,16
20402930:	3721                	jal	20402838 <metal_init>
20402932:	0001                	nop
20402934:	40b2                	lw	ra,12(sp)
20402936:	4422                	lw	s0,8(sp)
20402938:	0141                	addi	sp,sp,16
2040293a:	8082                	ret

2040293c <metal_fini_run>:
metal_fini_run():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/init.c:72

void metal_fini_run(void) __attribute__((weak));
void metal_fini_run(void) { metal_fini(); }
2040293c:	1141                	addi	sp,sp,-16
2040293e:	c606                	sw	ra,12(sp)
20402940:	c422                	sw	s0,8(sp)
20402942:	0800                	addi	s0,sp,16
20402944:	37b5                	jal	204028b0 <metal_fini>
20402946:	0001                	nop
20402948:	40b2                	lw	ra,12(sp)
2040294a:	4422                	lw	s0,8(sp)
2040294c:	0141                	addi	sp,sp,16
2040294e:	8082                	ret

20402950 <metal_tty_putc>:
metal_tty_putc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/tty.c:12
int metal_tty_putc(int c) {
20402950:	1101                	addi	sp,sp,-32
20402952:	ce06                	sw	ra,28(sp)
20402954:	cc22                	sw	s0,24(sp)
20402956:	1000                	addi	s0,sp,32
20402958:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/tty.c:13
    return metal_uart_putc(__METAL_DT_STDOUT_UART_HANDLE, c);
2040295c:	fec42583          	lw	a1,-20(s0)
20402960:	800007b7          	lui	a5,0x80000
20402964:	75878513          	addi	a0,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
20402968:	282d                	jal	204029a2 <metal_uart_putc>
2040296a:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/tty.c:14
}
2040296c:	853e                	mv	a0,a5
2040296e:	40f2                	lw	ra,28(sp)
20402970:	4462                	lw	s0,24(sp)
20402972:	6105                	addi	sp,sp,32
20402974:	8082                	ret

20402976 <metal_uart_init>:
metal_uart_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:59
 more than once.
 *
 * @param uart The UART device handle
 * @param baud_rate the baud rate to set the UART to
 */
__inline__ void metal_uart_init(struct metal_uart *uart, int baud_rate) {
20402976:	1101                	addi	sp,sp,-32
20402978:	ce06                	sw	ra,28(sp)
2040297a:	cc22                	sw	s0,24(sp)
2040297c:	1000                	addi	s0,sp,32
2040297e:	fea42623          	sw	a0,-20(s0)
20402982:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:60
    uart->vtable->init(uart, baud_rate);
20402986:	fec42783          	lw	a5,-20(s0)
2040298a:	439c                	lw	a5,0(a5)
2040298c:	439c                	lw	a5,0(a5)
2040298e:	fe842583          	lw	a1,-24(s0)
20402992:	fec42503          	lw	a0,-20(s0)
20402996:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:61
}
20402998:	0001                	nop
2040299a:	40f2                	lw	ra,28(sp)
2040299c:	4462                	lw	s0,24(sp)
2040299e:	6105                	addi	sp,sp,32
204029a0:	8082                	ret

204029a2 <metal_uart_putc>:
metal_uart_putc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:69
 * @brief Output a character over the UART
 * @param uart The UART device handle
 * @param c The character to send over the UART
 * @return 0 upon success
 */
__inline__ int metal_uart_putc(struct metal_uart *uart, int c) {
204029a2:	1101                	addi	sp,sp,-32
204029a4:	ce06                	sw	ra,28(sp)
204029a6:	cc22                	sw	s0,24(sp)
204029a8:	1000                	addi	s0,sp,32
204029aa:	fea42623          	sw	a0,-20(s0)
204029ae:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:70
    return uart->vtable->putc(uart, c);
204029b2:	fec42783          	lw	a5,-20(s0)
204029b6:	439c                	lw	a5,0(a5)
204029b8:	43dc                	lw	a5,4(a5)
204029ba:	fe842583          	lw	a1,-24(s0)
204029be:	fec42503          	lw	a0,-20(s0)
204029c2:	9782                	jalr	a5
204029c4:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:71
}
204029c6:	853e                	mv	a0,a5
204029c8:	40f2                	lw	ra,28(sp)
204029ca:	4462                	lw	s0,24(sp)
204029cc:	6105                	addi	sp,sp,32
204029ce:	8082                	ret

204029d0 <metal_uart_set_baud_rate>:
metal_uart_set_baud_rate():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:111
 * @param uart The UART device handle
 * @param baud_rate The baud rate to configure
 * @return the new baud rate of the UART
 */
__inline__ int metal_uart_set_baud_rate(struct metal_uart *uart,
                                        int baud_rate) {
204029d0:	1101                	addi	sp,sp,-32
204029d2:	ce06                	sw	ra,28(sp)
204029d4:	cc22                	sw	s0,24(sp)
204029d6:	1000                	addi	s0,sp,32
204029d8:	fea42623          	sw	a0,-20(s0)
204029dc:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:112
    return uart->vtable->set_baud_rate(uart, baud_rate);
204029e0:	fec42783          	lw	a5,-20(s0)
204029e4:	439c                	lw	a5,0(a5)
204029e6:	4bdc                	lw	a5,20(a5)
204029e8:	fe842583          	lw	a1,-24(s0)
204029ec:	fec42503          	lw	a0,-20(s0)
204029f0:	9782                	jalr	a5
204029f2:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/uart.h:113
}
204029f4:	853e                	mv	a0,a5
204029f6:	40f2                	lw	ra,28(sp)
204029f8:	4462                	lw	s0,24(sp)
204029fa:	6105                	addi	sp,sp,32
204029fc:	8082                	ret

204029fe <__metal_driver_sifive_clint0_control_base>:
__metal_driver_sifive_clint0_control_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:202
/* --------------------- fixed_factor_clock ------------ */


/* --------------------- sifive_clint0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_clint0_control_base(struct metal_interrupt *controller)
{
204029fe:	1101                	addi	sp,sp,-32
20402a00:	ce22                	sw	s0,28(sp)
20402a02:	1000                	addi	s0,sp,32
20402a04:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:203
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402a08:	fec42703          	lw	a4,-20(s0)
20402a0c:	800007b7          	lui	a5,0x80000
20402a10:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffeffc>
20402a14:	00f71563          	bne	a4,a5,20402a1e <__metal_driver_sifive_clint0_control_base+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:204
		return METAL_RISCV_CLINT0_2000000_BASE_ADDRESS;
20402a18:	020007b7          	lui	a5,0x2000
20402a1c:	a011                	j	20402a20 <__metal_driver_sifive_clint0_control_base+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:207
	}
	else {
		return 0;
20402a1e:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:209
	}
}
20402a20:	853e                	mv	a0,a5
20402a22:	4472                	lw	s0,28(sp)
20402a24:	6105                	addi	sp,sp,32
20402a26:	8082                	ret

20402a28 <__metal_driver_sifive_clint0_num_interrupts>:
__metal_driver_sifive_clint0_num_interrupts():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:222
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_clint0_num_interrupts(struct metal_interrupt *controller)
{
20402a28:	1101                	addi	sp,sp,-32
20402a2a:	ce22                	sw	s0,28(sp)
20402a2c:	1000                	addi	s0,sp,32
20402a2e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:223
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_clint_2000000) {
20402a32:	fec42703          	lw	a4,-20(s0)
20402a36:	800007b7          	lui	a5,0x80000
20402a3a:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffeffc>
20402a3e:	00f71463          	bne	a4,a5,20402a46 <__metal_driver_sifive_clint0_num_interrupts+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:224
		return METAL_MAX_CLINT_INTERRUPTS;
20402a42:	4789                	li	a5,2
20402a44:	a011                	j	20402a48 <__metal_driver_sifive_clint0_num_interrupts+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:227
	}
	else {
		return 0;
20402a46:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:229
	}
}
20402a48:	853e                	mv	a0,a5
20402a4a:	4472                	lw	s0,28(sp)
20402a4c:	6105                	addi	sp,sp,32
20402a4e:	8082                	ret

20402a50 <__metal_driver_sifive_clint0_interrupt_parents>:
__metal_driver_sifive_clint0_interrupt_parents():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:232

static __inline__ struct metal_interrupt * __metal_driver_sifive_clint0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20402a50:	1101                	addi	sp,sp,-32
20402a52:	ce22                	sw	s0,28(sp)
20402a54:	1000                	addi	s0,sp,32
20402a56:	fea42623          	sw	a0,-20(s0)
20402a5a:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:233
	if (idx == 0) {
20402a5e:	fe842783          	lw	a5,-24(s0)
20402a62:	e791                	bnez	a5,20402a6e <__metal_driver_sifive_clint0_interrupt_parents+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:234
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402a64:	800007b7          	lui	a5,0x80000
20402a68:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe8d8>
20402a6c:	a821                	j	20402a84 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:236
	}
	else if (idx == 1) {
20402a6e:	fe842703          	lw	a4,-24(s0)
20402a72:	4785                	li	a5,1
20402a74:	00f71763          	bne	a4,a5,20402a82 <__metal_driver_sifive_clint0_interrupt_parents+0x32>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:237
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20402a78:	800007b7          	lui	a5,0x80000
20402a7c:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe8d8>
20402a80:	a011                	j	20402a84 <__metal_driver_sifive_clint0_interrupt_parents+0x34>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:240
	}
	else {
		return NULL;
20402a82:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:242
	}
}
20402a84:	853e                	mv	a0,a5
20402a86:	4472                	lw	s0,28(sp)
20402a88:	6105                	addi	sp,sp,32
20402a8a:	8082                	ret

20402a8c <__metal_driver_sifive_clint0_interrupt_lines>:
__metal_driver_sifive_clint0_interrupt_lines():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:245

static __inline__ int __metal_driver_sifive_clint0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20402a8c:	1101                	addi	sp,sp,-32
20402a8e:	ce22                	sw	s0,28(sp)
20402a90:	1000                	addi	s0,sp,32
20402a92:	fea42623          	sw	a0,-20(s0)
20402a96:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:246
	if (idx == 0) {
20402a9a:	fe842783          	lw	a5,-24(s0)
20402a9e:	e399                	bnez	a5,20402aa4 <__metal_driver_sifive_clint0_interrupt_lines+0x18>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:247
		return 3;
20402aa0:	478d                	li	a5,3
20402aa2:	a809                	j	20402ab4 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:249
	}
	else if (idx == 1) {
20402aa4:	fe842703          	lw	a4,-24(s0)
20402aa8:	4785                	li	a5,1
20402aaa:	00f71463          	bne	a4,a5,20402ab2 <__metal_driver_sifive_clint0_interrupt_lines+0x26>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:250
		return 7;
20402aae:	479d                	li	a5,7
20402ab0:	a011                	j	20402ab4 <__metal_driver_sifive_clint0_interrupt_lines+0x28>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:253
	}
	else {
		return 0;
20402ab2:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:255
	}
}
20402ab4:	853e                	mv	a0,a5
20402ab6:	4472                	lw	s0,28(sp)
20402ab8:	6105                	addi	sp,sp,32
20402aba:	8082                	ret

20402abc <__metal_clint0_mtime_get>:
__metal_clint0_mtime_get():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:14
#include <metal/drivers/riscv_clint0.h>
#include <metal/io.h>
#include <metal/machine.h>

unsigned long long
__metal_clint0_mtime_get(struct __metal_driver_riscv_clint0 *clint) {
20402abc:	715d                	addi	sp,sp,-80
20402abe:	c686                	sw	ra,76(sp)
20402ac0:	c4a2                	sw	s0,72(sp)
20402ac2:	c2ca                	sw	s2,68(sp)
20402ac4:	c0ce                	sw	s3,64(sp)
20402ac6:	de52                	sw	s4,60(sp)
20402ac8:	dc56                	sw	s5,56(sp)
20402aca:	da5a                	sw	s6,52(sp)
20402acc:	d85e                	sw	s7,48(sp)
20402ace:	d662                	sw	s8,44(sp)
20402ad0:	d466                	sw	s9,40(sp)
20402ad2:	0880                	addi	s0,sp,80
20402ad4:	faa42e23          	sw	a0,-68(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:17
    __metal_io_u32 lo, hi;
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402ad8:	fbc42783          	lw	a5,-68(s0)
20402adc:	853e                	mv	a0,a5
20402ade:	3705                	jal	204029fe <__metal_driver_sifive_clint0_control_base>
20402ae0:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:21 (discriminator 1)

    /* Guard against rollover when reading */
    do {
        hi = __METAL_ACCESS_ONCE(
20402ae4:	fcc42703          	lw	a4,-52(s0)
20402ae8:	67b1                	lui	a5,0xc
20402aea:	17f1                	addi	a5,a5,-4
20402aec:	97ba                	add	a5,a5,a4
20402aee:	439c                	lw	a5,0(a5)
20402af0:	fcf42423          	sw	a5,-56(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:23 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME + 4));
        lo = __METAL_ACCESS_ONCE(
20402af4:	fcc42703          	lw	a4,-52(s0)
20402af8:	67b1                	lui	a5,0xc
20402afa:	17e1                	addi	a5,a5,-8
20402afc:	97ba                	add	a5,a5,a4
20402afe:	439c                	lw	a5,0(a5)
20402b00:	fcf42223          	sw	a5,-60(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:25 (discriminator 1)
            (__metal_io_u32 *)(control_base + METAL_RISCV_CLINT0_MTIME));
    } while (__METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base +
20402b04:	fcc42703          	lw	a4,-52(s0)
20402b08:	67b1                	lui	a5,0xc
20402b0a:	17f1                	addi	a5,a5,-4
20402b0c:	97ba                	add	a5,a5,a4
20402b0e:	439c                	lw	a5,0(a5)
20402b10:	fc842703          	lw	a4,-56(s0)
20402b14:	fcf718e3          	bne	a4,a5,20402ae4 <__metal_clint0_mtime_get+0x28>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:29
                                                    METAL_RISCV_CLINT0_MTIME +
                                                    4)) != hi);

    return (((unsigned long long)hi) << 32) | lo;
20402b18:	fc842783          	lw	a5,-56(s0)
20402b1c:	8c3e                	mv	s8,a5
20402b1e:	4c81                	li	s9,0
20402b20:	000c1993          	slli	s3,s8,0x0
20402b24:	4901                	li	s2,0
20402b26:	fc442783          	lw	a5,-60(s0)
20402b2a:	8a3e                	mv	s4,a5
20402b2c:	4a81                	li	s5,0
20402b2e:	01496b33          	or	s6,s2,s4
20402b32:	0159ebb3          	or	s7,s3,s5
20402b36:	875a                	mv	a4,s6
20402b38:	87de                	mv	a5,s7
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:30
}
20402b3a:	853a                	mv	a0,a4
20402b3c:	85be                	mv	a1,a5
20402b3e:	40b6                	lw	ra,76(sp)
20402b40:	4426                	lw	s0,72(sp)
20402b42:	4916                	lw	s2,68(sp)
20402b44:	4986                	lw	s3,64(sp)
20402b46:	5a72                	lw	s4,60(sp)
20402b48:	5ae2                	lw	s5,56(sp)
20402b4a:	5b52                	lw	s6,52(sp)
20402b4c:	5bc2                	lw	s7,48(sp)
20402b4e:	5c32                	lw	s8,44(sp)
20402b50:	5ca2                	lw	s9,40(sp)
20402b52:	6161                	addi	sp,sp,80
20402b54:	8082                	ret

20402b56 <__metal_driver_riscv_clint0_mtimecmp_set>:
__metal_driver_riscv_clint0_mtimecmp_set():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:34

int __metal_driver_riscv_clint0_mtimecmp_set(struct metal_interrupt *controller,
                                             int hartid,
                                             unsigned long long time) {
20402b56:	7179                	addi	sp,sp,-48
20402b58:	d606                	sw	ra,44(sp)
20402b5a:	d422                	sw	s0,40(sp)
20402b5c:	d24a                	sw	s2,36(sp)
20402b5e:	d04e                	sw	s3,32(sp)
20402b60:	1800                	addi	s0,sp,48
20402b62:	fca42e23          	sw	a0,-36(s0)
20402b66:	fcb42c23          	sw	a1,-40(s0)
20402b6a:	fcc42823          	sw	a2,-48(s0)
20402b6e:	fcd42a23          	sw	a3,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:35
    struct __metal_driver_riscv_clint0 *clint =
20402b72:	fdc42783          	lw	a5,-36(s0)
20402b76:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:38
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(&clint->controller);
20402b7a:	fec42783          	lw	a5,-20(s0)
20402b7e:	853e                	mv	a0,a5
20402b80:	3dbd                	jal	204029fe <__metal_driver_sifive_clint0_control_base>
20402b82:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:45
     * and are NOT internally latched for multiword transfers.
     * Need to be careful about sequencing to avoid triggering
     * spurious interrupts: For that set the high word to a max
     * value first.
     */
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402b86:	fd842783          	lw	a5,-40(s0)
20402b8a:	078e                	slli	a5,a5,0x3
20402b8c:	873e                	mv	a4,a5
20402b8e:	fe842783          	lw	a5,-24(s0)
20402b92:	973e                	add	a4,a4,a5
20402b94:	6791                	lui	a5,0x4
20402b96:	0791                	addi	a5,a5,4
20402b98:	97ba                	add	a5,a5,a4
20402b9a:	873e                	mv	a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:47
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = 0xFFFFFFFF;
20402b9c:	57fd                	li	a5,-1
20402b9e:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:48
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402ba0:	fd842783          	lw	a5,-40(s0)
20402ba4:	078e                	slli	a5,a5,0x3
20402ba6:	873e                	mv	a4,a5
20402ba8:	fe842783          	lw	a5,-24(s0)
20402bac:	973e                	add	a4,a4,a5
20402bae:	6791                	lui	a5,0x4
20402bb0:	97ba                	add	a5,a5,a4
20402bb2:	873e                	mv	a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:50
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
        (__metal_io_u32)time;
20402bb4:	fd042783          	lw	a5,-48(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:49
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE)) =
20402bb8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:53
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
                                           METAL_RISCV_CLINT0_MTIMECMP_BASE +
                                           4)) = (__metal_io_u32)(time >> 32);
20402bba:	fd442783          	lw	a5,-44(s0)
20402bbe:	0007d913          	srli	s2,a5,0x0
20402bc2:	4981                	li	s3,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:51
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(control_base + (8 * hartid) +
20402bc4:	fd842783          	lw	a5,-40(s0)
20402bc8:	078e                	slli	a5,a5,0x3
20402bca:	873e                	mv	a4,a5
20402bcc:	fe842783          	lw	a5,-24(s0)
20402bd0:	973e                	add	a4,a4,a5
20402bd2:	6791                	lui	a5,0x4
20402bd4:	0791                	addi	a5,a5,4
20402bd6:	97ba                	add	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:53
                                           4)) = (__metal_io_u32)(time >> 32);
20402bd8:	874a                	mv	a4,s2
20402bda:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:54
    return 0;
20402bdc:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:55
}
20402bde:	853e                	mv	a0,a5
20402be0:	50b2                	lw	ra,44(sp)
20402be2:	5422                	lw	s0,40(sp)
20402be4:	5912                	lw	s2,36(sp)
20402be6:	5982                	lw	s3,32(sp)
20402be8:	6145                	addi	sp,sp,48
20402bea:	8082                	ret

20402bec <_get_cpu_intc>:
_get_cpu_intc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:57

static struct metal_interrupt *_get_cpu_intc() {
20402bec:	1101                	addi	sp,sp,-32
20402bee:	ce06                	sw	ra,28(sp)
20402bf0:	cc22                	sw	s0,24(sp)
20402bf2:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:58
    int hartid = 0;
20402bf4:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:59
    __asm__ volatile("csrr %[hartid], mhartid"
20402bf8:	f14027f3          	csrr	a5,mhartid
20402bfc:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:62
                     : [hartid] "=r"(hartid)::"memory");

    struct metal_cpu *cpu = metal_cpu_get(hartid);
20402c00:	fec42783          	lw	a5,-20(s0)
20402c04:	853e                	mv	a0,a5
20402c06:	2c8040ef          	jal	ra,20406ece <metal_cpu_get>
20402c0a:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:64

    return metal_cpu_interrupt_controller(cpu);
20402c0e:	fe842503          	lw	a0,-24(s0)
20402c12:	296040ef          	jal	ra,20406ea8 <metal_cpu_interrupt_controller>
20402c16:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:65
}
20402c18:	853e                	mv	a0,a5
20402c1a:	40f2                	lw	ra,28(sp)
20402c1c:	4462                	lw	s0,24(sp)
20402c1e:	6105                	addi	sp,sp,32
20402c20:	8082                	ret

20402c22 <__metal_driver_riscv_clint0_init>:
__metal_driver_riscv_clint0_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:67

void __metal_driver_riscv_clint0_init(struct metal_interrupt *controller) {
20402c22:	7139                	addi	sp,sp,-64
20402c24:	de06                	sw	ra,60(sp)
20402c26:	dc22                	sw	s0,56(sp)
20402c28:	0080                	addi	s0,sp,64
20402c2a:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:69
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20402c2e:	fcc42503          	lw	a0,-52(s0)
20402c32:	3bdd                	jal	20402a28 <__metal_driver_sifive_clint0_num_interrupts>
20402c34:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:70
    struct __metal_driver_riscv_clint0 *clint =
20402c38:	fcc42783          	lw	a5,-52(s0)
20402c3c:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:73
        (struct __metal_driver_riscv_clint0 *)(controller);

    if (!clint->init_done) {
20402c40:	fe442783          	lw	a5,-28(s0)
20402c44:	43dc                	lw	a5,4(a5)
20402c46:	efa9                	bnez	a5,20402ca0 <__metal_driver_riscv_clint0_init+0x7e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:76
        /* Register its interrupts with with parent controller, aka sw and
         * timerto its default isr */
        for (int i = 0; i < num_interrupts; i++) {
20402c48:	fe042623          	sw	zero,-20(s0)
20402c4c:	a081                	j	20402c8c <__metal_driver_riscv_clint0_init+0x6a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:78 (discriminator 3)
            struct metal_interrupt *intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402c4e:	fec42583          	lw	a1,-20(s0)
20402c52:	fcc42503          	lw	a0,-52(s0)
20402c56:	3bed                	jal	20402a50 <__metal_driver_sifive_clint0_interrupt_parents>
20402c58:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:80 (discriminator 3)
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402c5c:	fec42583          	lw	a1,-20(s0)
20402c60:	fcc42503          	lw	a0,-52(s0)
20402c64:	3525                	jal	20402a8c <__metal_driver_sifive_clint0_interrupt_lines>
20402c66:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:81 (discriminator 3)
            intc->vtable->interrupt_register(intc, line, NULL, controller);
20402c6a:	fe042783          	lw	a5,-32(s0)
20402c6e:	439c                	lw	a5,0(a5)
20402c70:	4fdc                	lw	a5,28(a5)
20402c72:	fcc42683          	lw	a3,-52(s0)
20402c76:	4601                	li	a2,0
20402c78:	fdc42583          	lw	a1,-36(s0)
20402c7c:	fe042503          	lw	a0,-32(s0)
20402c80:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 3)
        for (int i = 0; i < num_interrupts; i++) {
20402c82:	fec42783          	lw	a5,-20(s0)
20402c86:	0785                	addi	a5,a5,1
20402c88:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:76 (discriminator 1)
20402c8c:	fec42703          	lw	a4,-20(s0)
20402c90:	fe842783          	lw	a5,-24(s0)
20402c94:	faf74de3          	blt	a4,a5,20402c4e <__metal_driver_riscv_clint0_init+0x2c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:83
        }
        clint->init_done = 1;
20402c98:	fe442783          	lw	a5,-28(s0)
20402c9c:	4705                	li	a4,1
20402c9e:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:85
    }
}
20402ca0:	0001                	nop
20402ca2:	50f2                	lw	ra,60(sp)
20402ca4:	5462                	lw	s0,56(sp)
20402ca6:	6121                	addi	sp,sp,64
20402ca8:	8082                	ret

20402caa <__metal_driver_riscv_clint0_register>:
__metal_driver_riscv_clint0_register():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:89

int __metal_driver_riscv_clint0_register(struct metal_interrupt *controller,
                                         int id, metal_interrupt_handler_t isr,
                                         void *priv) {
20402caa:	7139                	addi	sp,sp,-64
20402cac:	de06                	sw	ra,60(sp)
20402cae:	dc22                	sw	s0,56(sp)
20402cb0:	0080                	addi	s0,sp,64
20402cb2:	fca42623          	sw	a0,-52(s0)
20402cb6:	fcb42423          	sw	a1,-56(s0)
20402cba:	fcc42223          	sw	a2,-60(s0)
20402cbe:	fcd42023          	sw	a3,-64(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:90
    int rc = -1;
20402cc2:	57fd                	li	a5,-1
20402cc4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:91
    metal_vector_mode mode = __metal_controller_interrupt_vector_mode();
20402cc8:	492010ef          	jal	ra,2040415a <__metal_controller_interrupt_vector_mode>
20402ccc:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:92
    struct metal_interrupt *intc = NULL;
20402cd0:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:93
    struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402cd4:	3f21                	jal	20402bec <_get_cpu_intc>
20402cd6:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:95
    int num_interrupts =
        __metal_driver_sifive_clint0_num_interrupts(controller);
20402cda:	fcc42503          	lw	a0,-52(s0)
20402cde:	33a9                	jal	20402a28 <__metal_driver_sifive_clint0_num_interrupts>
20402ce0:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:97

    if ((mode != METAL_VECTOR_MODE) && (mode != METAL_DIRECT_MODE)) {
20402ce4:	fe042703          	lw	a4,-32(s0)
20402ce8:	4785                	li	a5,1
20402cea:	00f70863          	beq	a4,a5,20402cfa <__metal_driver_riscv_clint0_register+0x50>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:97 (discriminator 1)
20402cee:	fe042783          	lw	a5,-32(s0)
20402cf2:	c781                	beqz	a5,20402cfa <__metal_driver_riscv_clint0_register+0x50>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:98
        return rc;
20402cf4:	fec42783          	lw	a5,-20(s0)
20402cf8:	a049                	j	20402d7a <__metal_driver_riscv_clint0_register+0xd0>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:101
    }

    for (int i = 0; i < num_interrupts; i++) {
20402cfa:	fe042223          	sw	zero,-28(s0)
20402cfe:	a091                	j	20402d42 <__metal_driver_riscv_clint0_register+0x98>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:102
        int line = __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402d00:	fe442583          	lw	a1,-28(s0)
20402d04:	fcc42503          	lw	a0,-52(s0)
20402d08:	3351                	jal	20402a8c <__metal_driver_sifive_clint0_interrupt_lines>
20402d0a:	fca42a23          	sw	a0,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:103
        intc = __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402d0e:	fe442583          	lw	a1,-28(s0)
20402d12:	fcc42503          	lw	a0,-52(s0)
20402d16:	3b2d                	jal	20402a50 <__metal_driver_sifive_clint0_interrupt_parents>
20402d18:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:104
        if (cpu_intc == intc && id == line) {
20402d1c:	fdc42703          	lw	a4,-36(s0)
20402d20:	fe842783          	lw	a5,-24(s0)
20402d24:	00f71863          	bne	a4,a5,20402d34 <__metal_driver_riscv_clint0_register+0x8a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:104 (discriminator 1)
20402d28:	fc842703          	lw	a4,-56(s0)
20402d2c:	fd442783          	lw	a5,-44(s0)
20402d30:	02f70063          	beq	a4,a5,20402d50 <__metal_driver_riscv_clint0_register+0xa6>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:107 (discriminator 2)
            break;
        }
        intc = NULL;
20402d34:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 2)
    for (int i = 0; i < num_interrupts; i++) {
20402d38:	fe442783          	lw	a5,-28(s0)
20402d3c:	0785                	addi	a5,a5,1
20402d3e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:101 (discriminator 1)
20402d42:	fe442703          	lw	a4,-28(s0)
20402d46:	fd842783          	lw	a5,-40(s0)
20402d4a:	faf74be3          	blt	a4,a5,20402d00 <__metal_driver_riscv_clint0_register+0x56>
20402d4e:	a011                	j	20402d52 <__metal_driver_riscv_clint0_register+0xa8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:105
            break;
20402d50:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:111
    }

    /* Register its interrupts with parent controller */
    if (intc) {
20402d52:	fe842783          	lw	a5,-24(s0)
20402d56:	c385                	beqz	a5,20402d76 <__metal_driver_riscv_clint0_register+0xcc>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:112
        rc = intc->vtable->interrupt_register(intc, id, isr, priv);
20402d58:	fe842783          	lw	a5,-24(s0)
20402d5c:	439c                	lw	a5,0(a5)
20402d5e:	4fdc                	lw	a5,28(a5)
20402d60:	fc042683          	lw	a3,-64(s0)
20402d64:	fc442603          	lw	a2,-60(s0)
20402d68:	fc842583          	lw	a1,-56(s0)
20402d6c:	fe842503          	lw	a0,-24(s0)
20402d70:	9782                	jalr	a5
20402d72:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:114
    }
    return rc;
20402d76:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:115
}
20402d7a:	853e                	mv	a0,a5
20402d7c:	50f2                	lw	ra,60(sp)
20402d7e:	5462                	lw	s0,56(sp)
20402d80:	6121                	addi	sp,sp,64
20402d82:	8082                	ret

20402d84 <__metal_driver_riscv_clint0_vector_register>:
__metal_driver_riscv_clint0_vector_register():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:119

int __metal_driver_riscv_clint0_vector_register(
    struct metal_interrupt *controller, int id,
    metal_interrupt_vector_handler_t isr, void *priv) {
20402d84:	7179                	addi	sp,sp,-48
20402d86:	d622                	sw	s0,44(sp)
20402d88:	1800                	addi	s0,sp,48
20402d8a:	fca42e23          	sw	a0,-36(s0)
20402d8e:	fcb42c23          	sw	a1,-40(s0)
20402d92:	fcc42a23          	sw	a2,-44(s0)
20402d96:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:121
    /* Not supported. User can override the 'weak' handler with their own */
    int rc = -1;
20402d9a:	57fd                	li	a5,-1
20402d9c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:122
    return rc;
20402da0:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:123
}
20402da4:	853e                	mv	a0,a5
20402da6:	5432                	lw	s0,44(sp)
20402da8:	6145                	addi	sp,sp,48
20402daa:	8082                	ret

20402dac <__metal_driver_riscv_clint0_get_vector_mode>:
__metal_driver_riscv_clint0_get_vector_mode():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:126

metal_vector_mode __metal_driver_riscv_clint0_get_vector_mode(
    struct metal_interrupt *controller) {
20402dac:	1101                	addi	sp,sp,-32
20402dae:	ce06                	sw	ra,28(sp)
20402db0:	cc22                	sw	s0,24(sp)
20402db2:	1000                	addi	s0,sp,32
20402db4:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:127
    return __metal_controller_interrupt_vector_mode();
20402db8:	3a2010ef          	jal	ra,2040415a <__metal_controller_interrupt_vector_mode>
20402dbc:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:128
}
20402dbe:	853e                	mv	a0,a5
20402dc0:	40f2                	lw	ra,28(sp)
20402dc2:	4462                	lw	s0,24(sp)
20402dc4:	6105                	addi	sp,sp,32
20402dc6:	8082                	ret

20402dc8 <__metal_driver_riscv_clint0_set_vector_mode>:
__metal_driver_riscv_clint0_set_vector_mode():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:131

int __metal_driver_riscv_clint0_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
20402dc8:	7179                	addi	sp,sp,-48
20402dca:	d606                	sw	ra,44(sp)
20402dcc:	d422                	sw	s0,40(sp)
20402dce:	1800                	addi	s0,sp,48
20402dd0:	fca42e23          	sw	a0,-36(s0)
20402dd4:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:132
    int rc = -1;
20402dd8:	57fd                	li	a5,-1
20402dda:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:133
    struct metal_interrupt *intc = _get_cpu_intc();
20402dde:	3539                	jal	20402bec <_get_cpu_intc>
20402de0:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:135

    if (intc) {
20402de4:	fe842783          	lw	a5,-24(s0)
20402de8:	c395                	beqz	a5,20402e0c <__metal_driver_riscv_clint0_set_vector_mode+0x44>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:138
        /* Valid vector modes are VECTOR and DIRECT, anything else is invalid
         * (-1) */
        switch (mode) {
20402dea:	fd842703          	lw	a4,-40(s0)
20402dee:	4785                	li	a5,1
20402df0:	02e7e063          	bltu	a5,a4,20402e10 <__metal_driver_riscv_clint0_set_vector_mode+0x48>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:141
        case METAL_VECTOR_MODE:
        case METAL_DIRECT_MODE:
            rc = intc->vtable->interrupt_set_vector_mode(intc, mode);
20402df4:	fe842783          	lw	a5,-24(s0)
20402df8:	439c                	lw	a5,0(a5)
20402dfa:	43dc                	lw	a5,4(a5)
20402dfc:	fd842583          	lw	a1,-40(s0)
20402e00:	fe842503          	lw	a0,-24(s0)
20402e04:	9782                	jalr	a5
20402e06:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:142
            break;
20402e0a:	a021                	j	20402e12 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:146
        default:
            break;
        }
    }
20402e0c:	0001                	nop
20402e0e:	a011                	j	20402e12 <__metal_driver_riscv_clint0_set_vector_mode+0x4a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:144
            break;
20402e10:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:147
    return rc;
20402e12:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:148
}
20402e16:	853e                	mv	a0,a5
20402e18:	50b2                	lw	ra,44(sp)
20402e1a:	5422                	lw	s0,40(sp)
20402e1c:	6145                	addi	sp,sp,48
20402e1e:	8082                	ret

20402e20 <__metal_driver_riscv_clint0_enable>:
__metal_driver_riscv_clint0_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:151

int __metal_driver_riscv_clint0_enable(struct metal_interrupt *controller,
                                       int id) {
20402e20:	7139                	addi	sp,sp,-64
20402e22:	de06                	sw	ra,60(sp)
20402e24:	dc22                	sw	s0,56(sp)
20402e26:	0080                	addi	s0,sp,64
20402e28:	fca42623          	sw	a0,-52(s0)
20402e2c:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:152
    int rc = -1;
20402e30:	57fd                	li	a5,-1
20402e32:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:154

    if (id) {
20402e36:	fc842783          	lw	a5,-56(s0)
20402e3a:	c7c9                	beqz	a5,20402ec4 <__metal_driver_riscv_clint0_enable+0xa4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:155
        struct metal_interrupt *intc = NULL;
20402e3c:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:156
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402e40:	3375                	jal	20402bec <_get_cpu_intc>
20402e42:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:158
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402e46:	fcc42503          	lw	a0,-52(s0)
20402e4a:	3ef9                	jal	20402a28 <__metal_driver_sifive_clint0_num_interrupts>
20402e4c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:160

        for (int i = 0; i < num_interrupts; i++) {
20402e50:	fe042223          	sw	zero,-28(s0)
20402e54:	a091                	j	20402e98 <__metal_driver_riscv_clint0_enable+0x78>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:162
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402e56:	fe442583          	lw	a1,-28(s0)
20402e5a:	fcc42503          	lw	a0,-52(s0)
20402e5e:	313d                	jal	20402a8c <__metal_driver_sifive_clint0_interrupt_lines>
20402e60:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:164
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402e64:	fe442583          	lw	a1,-28(s0)
20402e68:	fcc42503          	lw	a0,-52(s0)
20402e6c:	36d5                	jal	20402a50 <__metal_driver_sifive_clint0_interrupt_parents>
20402e6e:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:165
            if (cpu_intc == intc && id == line) {
20402e72:	fe042703          	lw	a4,-32(s0)
20402e76:	fe842783          	lw	a5,-24(s0)
20402e7a:	00f71863          	bne	a4,a5,20402e8a <__metal_driver_riscv_clint0_enable+0x6a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:165 (discriminator 1)
20402e7e:	fc842703          	lw	a4,-56(s0)
20402e82:	fd842783          	lw	a5,-40(s0)
20402e86:	02f70063          	beq	a4,a5,20402ea6 <__metal_driver_riscv_clint0_enable+0x86>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:168 (discriminator 2)
                break;
            }
            intc = NULL;
20402e8a:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20402e8e:	fe442783          	lw	a5,-28(s0)
20402e92:	0785                	addi	a5,a5,1
20402e94:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:160 (discriminator 1)
20402e98:	fe442703          	lw	a4,-28(s0)
20402e9c:	fdc42783          	lw	a5,-36(s0)
20402ea0:	faf74be3          	blt	a4,a5,20402e56 <__metal_driver_riscv_clint0_enable+0x36>
20402ea4:	a011                	j	20402ea8 <__metal_driver_riscv_clint0_enable+0x88>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:166
                break;
20402ea6:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:172
        }

        /* Enable its interrupts with parent controller */
        if (intc) {
20402ea8:	fe842783          	lw	a5,-24(s0)
20402eac:	cf81                	beqz	a5,20402ec4 <__metal_driver_riscv_clint0_enable+0xa4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:173
            rc = intc->vtable->interrupt_enable(intc, id);
20402eae:	fe842783          	lw	a5,-24(s0)
20402eb2:	439c                	lw	a5,0(a5)
20402eb4:	53dc                	lw	a5,36(a5)
20402eb6:	fc842583          	lw	a1,-56(s0)
20402eba:	fe842503          	lw	a0,-24(s0)
20402ebe:	9782                	jalr	a5
20402ec0:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:177
        }
    }

    return rc;
20402ec4:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:178
}
20402ec8:	853e                	mv	a0,a5
20402eca:	50f2                	lw	ra,60(sp)
20402ecc:	5462                	lw	s0,56(sp)
20402ece:	6121                	addi	sp,sp,64
20402ed0:	8082                	ret

20402ed2 <__metal_driver_riscv_clint0_disable>:
__metal_driver_riscv_clint0_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:181

int __metal_driver_riscv_clint0_disable(struct metal_interrupt *controller,
                                        int id) {
20402ed2:	7139                	addi	sp,sp,-64
20402ed4:	de06                	sw	ra,60(sp)
20402ed6:	dc22                	sw	s0,56(sp)
20402ed8:	0080                	addi	s0,sp,64
20402eda:	fca42623          	sw	a0,-52(s0)
20402ede:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:182
    int rc = -1;
20402ee2:	57fd                	li	a5,-1
20402ee4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:184

    if (id) {
20402ee8:	fc842783          	lw	a5,-56(s0)
20402eec:	c7c9                	beqz	a5,20402f76 <__metal_driver_riscv_clint0_disable+0xa4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:185
        struct metal_interrupt *intc = NULL;
20402eee:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:186
        struct metal_interrupt *cpu_intc = _get_cpu_intc();
20402ef2:	39ed                	jal	20402bec <_get_cpu_intc>
20402ef4:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:188
        int num_interrupts =
            __metal_driver_sifive_clint0_num_interrupts(controller);
20402ef8:	fcc42503          	lw	a0,-52(s0)
20402efc:	3635                	jal	20402a28 <__metal_driver_sifive_clint0_num_interrupts>
20402efe:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:190

        for (int i = 0; i < num_interrupts; i++) {
20402f02:	fe042223          	sw	zero,-28(s0)
20402f06:	a091                	j	20402f4a <__metal_driver_riscv_clint0_disable+0x78>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:192
            int line =
                __metal_driver_sifive_clint0_interrupt_lines(controller, i);
20402f08:	fe442583          	lw	a1,-28(s0)
20402f0c:	fcc42503          	lw	a0,-52(s0)
20402f10:	3eb5                	jal	20402a8c <__metal_driver_sifive_clint0_interrupt_lines>
20402f12:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:194
            intc =
                __metal_driver_sifive_clint0_interrupt_parents(controller, i);
20402f16:	fe442583          	lw	a1,-28(s0)
20402f1a:	fcc42503          	lw	a0,-52(s0)
20402f1e:	3e0d                	jal	20402a50 <__metal_driver_sifive_clint0_interrupt_parents>
20402f20:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:195
            if (cpu_intc == intc && id == line) {
20402f24:	fe042703          	lw	a4,-32(s0)
20402f28:	fe842783          	lw	a5,-24(s0)
20402f2c:	00f71863          	bne	a4,a5,20402f3c <__metal_driver_riscv_clint0_disable+0x6a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:195 (discriminator 1)
20402f30:	fc842703          	lw	a4,-56(s0)
20402f34:	fd842783          	lw	a5,-40(s0)
20402f38:	02f70063          	beq	a4,a5,20402f58 <__metal_driver_riscv_clint0_disable+0x86>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:198 (discriminator 2)
                break;
            }
            intc = NULL;
20402f3c:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 2)
        for (int i = 0; i < num_interrupts; i++) {
20402f40:	fe442783          	lw	a5,-28(s0)
20402f44:	0785                	addi	a5,a5,1
20402f46:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:190 (discriminator 1)
20402f4a:	fe442703          	lw	a4,-28(s0)
20402f4e:	fdc42783          	lw	a5,-36(s0)
20402f52:	faf74be3          	blt	a4,a5,20402f08 <__metal_driver_riscv_clint0_disable+0x36>
20402f56:	a011                	j	20402f5a <__metal_driver_riscv_clint0_disable+0x88>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:196
                break;
20402f58:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:202
        }

        /* Disable its interrupts with parent controller */
        if (intc) {
20402f5a:	fe842783          	lw	a5,-24(s0)
20402f5e:	cf81                	beqz	a5,20402f76 <__metal_driver_riscv_clint0_disable+0xa4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:203
            rc = intc->vtable->interrupt_disable(intc, id);
20402f60:	fe842783          	lw	a5,-24(s0)
20402f64:	439c                	lw	a5,0(a5)
20402f66:	579c                	lw	a5,40(a5)
20402f68:	fc842583          	lw	a1,-56(s0)
20402f6c:	fe842503          	lw	a0,-24(s0)
20402f70:	9782                	jalr	a5
20402f72:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:207
        }
    }

    return rc;
20402f76:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:208
}
20402f7a:	853e                	mv	a0,a5
20402f7c:	50f2                	lw	ra,60(sp)
20402f7e:	5462                	lw	s0,56(sp)
20402f80:	6121                	addi	sp,sp,64
20402f82:	8082                	ret

20402f84 <__metal_driver_riscv_clint0_command_request>:
__metal_driver_riscv_clint0_command_request():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:211

int __metal_driver_riscv_clint0_command_request(
    struct metal_interrupt *controller, int command, void *data) {
20402f84:	7179                	addi	sp,sp,-48
20402f86:	d606                	sw	ra,44(sp)
20402f88:	d422                	sw	s0,40(sp)
20402f8a:	1800                	addi	s0,sp,48
20402f8c:	fca42e23          	sw	a0,-36(s0)
20402f90:	fcb42c23          	sw	a1,-40(s0)
20402f94:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:213
    int hartid;
    int rc = -1;
20402f98:	57fd                	li	a5,-1
20402f9a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:214
    struct __metal_driver_riscv_clint0 *clint =
20402f9e:	fdc42783          	lw	a5,-36(s0)
20402fa2:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:217
        (struct __metal_driver_riscv_clint0 *)(controller);
    unsigned long control_base =
        __metal_driver_sifive_clint0_control_base(controller);
20402fa6:	fdc42503          	lw	a0,-36(s0)
20402faa:	a55ff0ef          	jal	ra,204029fe <__metal_driver_sifive_clint0_control_base>
20402fae:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:219

    switch (command) {
20402fb2:	fd842703          	lw	a4,-40(s0)
20402fb6:	4791                	li	a5,4
20402fb8:	0cf70163          	beq	a4,a5,2040307a <__metal_driver_riscv_clint0_command_request+0xf6>
20402fbc:	fd842703          	lw	a4,-40(s0)
20402fc0:	4791                	li	a5,4
20402fc2:	0ee7c163          	blt	a5,a4,204030a4 <__metal_driver_riscv_clint0_command_request+0x120>
20402fc6:	fd842703          	lw	a4,-40(s0)
20402fca:	478d                	li	a5,3
20402fcc:	06f70663          	beq	a4,a5,20403038 <__metal_driver_riscv_clint0_command_request+0xb4>
20402fd0:	fd842703          	lw	a4,-40(s0)
20402fd4:	478d                	li	a5,3
20402fd6:	0ce7c763          	blt	a5,a4,204030a4 <__metal_driver_riscv_clint0_command_request+0x120>
20402fda:	fd842703          	lw	a4,-40(s0)
20402fde:	4785                	li	a5,1
20402fe0:	00f70863          	beq	a4,a5,20402ff0 <__metal_driver_riscv_clint0_command_request+0x6c>
20402fe4:	fd842703          	lw	a4,-40(s0)
20402fe8:	4789                	li	a5,2
20402fea:	02f70363          	beq	a4,a5,20403010 <__metal_driver_riscv_clint0_command_request+0x8c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:263
            rc = __METAL_ACCESS_ONCE(
                (__metal_io_u32 *)(control_base + (hartid * 4)));
        }
        break;
    default:
        break;
20402fee:	a85d                	j	204030a4 <__metal_driver_riscv_clint0_command_request+0x120>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:221
        if (data) {
20402ff0:	fd442783          	lw	a5,-44(s0)
20402ff4:	cbd5                	beqz	a5,204030a8 <__metal_driver_riscv_clint0_command_request+0x124>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:222
            *(unsigned long long *)data = __metal_clint0_mtime_get(clint);
20402ff6:	fe842503          	lw	a0,-24(s0)
20402ffa:	ac3ff0ef          	jal	ra,20402abc <__metal_clint0_mtime_get>
20402ffe:	872a                	mv	a4,a0
20403000:	87ae                	mv	a5,a1
20403002:	fd442683          	lw	a3,-44(s0)
20403006:	c298                	sw	a4,0(a3)
20403008:	c2dc                	sw	a5,4(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:223
            rc = 0;
2040300a:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
2040300e:	a869                	j	204030a8 <__metal_driver_riscv_clint0_command_request+0x124>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:227
        if (data) {
20403010:	fd442783          	lw	a5,-44(s0)
20403014:	cfc1                	beqz	a5,204030ac <__metal_driver_riscv_clint0_command_request+0x128>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:228
            hartid = *(int *)data;
20403016:	fd442783          	lw	a5,-44(s0)
2040301a:	439c                	lw	a5,0(a5)
2040301c:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:229
            __METAL_ACCESS_ONCE((
20403020:	fe042783          	lw	a5,-32(s0)
20403024:	078a                	slli	a5,a5,0x2
20403026:	873e                	mv	a4,a5
20403028:	fe442783          	lw	a5,-28(s0)
2040302c:	97ba                	add	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:230
                __metal_io_u32 *)(control_base + (hartid * 4))) = METAL_DISABLE;
2040302e:	0007a023          	sw	zero,0(a5) # 4000 <__heap_size+0x3800>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:231
            rc = 0;
20403032:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
20403036:	a89d                	j	204030ac <__metal_driver_riscv_clint0_command_request+0x128>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:235
        if (data) {
20403038:	fd442783          	lw	a5,-44(s0)
2040303c:	cbb5                	beqz	a5,204030b0 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:236
            hartid = *(int *)data;
2040303e:	fd442783          	lw	a5,-44(s0)
20403042:	439c                	lw	a5,0(a5)
20403044:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:237
            __METAL_ACCESS_ONCE(
20403048:	fe042783          	lw	a5,-32(s0)
2040304c:	078a                	slli	a5,a5,0x2
2040304e:	873e                	mv	a4,a5
20403050:	fe442783          	lw	a5,-28(s0)
20403054:	97ba                	add	a5,a5,a4
20403056:	873e                	mv	a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:238
                (__metal_io_u32 *)(control_base + (hartid * 4))) = METAL_ENABLE;
20403058:	4785                	li	a5,1
2040305a:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:248
            __METAL_IO_FENCE(o, i);
2040305c:	0480000f          	fence	o,i
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:249
            rc = __METAL_ACCESS_ONCE(
20403060:	fe042783          	lw	a5,-32(s0)
20403064:	078a                	slli	a5,a5,0x2
20403066:	873e                	mv	a4,a5
20403068:	fe442783          	lw	a5,-28(s0)
2040306c:	97ba                	add	a5,a5,a4
2040306e:	439c                	lw	a5,0(a5)
20403070:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:251
            rc = 0;
20403074:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
20403078:	a825                	j	204030b0 <__metal_driver_riscv_clint0_command_request+0x12c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:255
        rc = 0;
2040307a:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:256
        if (data) {
2040307e:	fd442783          	lw	a5,-44(s0)
20403082:	cb8d                	beqz	a5,204030b4 <__metal_driver_riscv_clint0_command_request+0x130>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:257
            hartid = *(int *)data;
20403084:	fd442783          	lw	a5,-44(s0)
20403088:	439c                	lw	a5,0(a5)
2040308a:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:258
            rc = __METAL_ACCESS_ONCE(
2040308e:	fe042783          	lw	a5,-32(s0)
20403092:	078a                	slli	a5,a5,0x2
20403094:	873e                	mv	a4,a5
20403096:	fe442783          	lw	a5,-28(s0)
2040309a:	97ba                	add	a5,a5,a4
2040309c:	439c                	lw	a5,0(a5)
2040309e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204030a2:	a809                	j	204030b4 <__metal_driver_riscv_clint0_command_request+0x130>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:263
        break;
204030a4:	0001                	nop
204030a6:	a801                	j	204030b6 <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:225
        break;
204030a8:	0001                	nop
204030aa:	a031                	j	204030b6 <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:233
        break;
204030ac:	0001                	nop
204030ae:	a021                	j	204030b6 <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:253
        break;
204030b0:	0001                	nop
204030b2:	a011                	j	204030b6 <__metal_driver_riscv_clint0_command_request+0x132>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:261
        break;
204030b4:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:266
    }

    return rc;
204030b6:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:267
}
204030ba:	853e                	mv	a0,a5
204030bc:	50b2                	lw	ra,44(sp)
204030be:	5422                	lw	s0,40(sp)
204030c0:	6145                	addi	sp,sp,48
204030c2:	8082                	ret

204030c4 <__metal_driver_riscv_clint0_clear_interrupt>:
__metal_driver_riscv_clint0_clear_interrupt():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:270

int __metal_driver_riscv_clint0_clear_interrupt(
    struct metal_interrupt *controller, int id) {
204030c4:	7179                	addi	sp,sp,-48
204030c6:	d606                	sw	ra,44(sp)
204030c8:	d422                	sw	s0,40(sp)
204030ca:	1800                	addi	s0,sp,48
204030cc:	fca42e23          	sw	a0,-36(s0)
204030d0:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:271
    int hartid = metal_cpu_get_current_hartid();
204030d4:	629030ef          	jal	ra,20406efc <metal_cpu_get_current_hartid>
204030d8:	87aa                	mv	a5,a0
204030da:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:272
    return __metal_driver_riscv_clint0_command_request(
204030de:	fec40793          	addi	a5,s0,-20
204030e2:	863e                	mv	a2,a5
204030e4:	4589                	li	a1,2
204030e6:	fdc42503          	lw	a0,-36(s0)
204030ea:	3d69                	jal	20402f84 <__metal_driver_riscv_clint0_command_request>
204030ec:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:274
        controller, METAL_SOFTWARE_IPI_CLEAR, &hartid);
}
204030ee:	853e                	mv	a0,a5
204030f0:	50b2                	lw	ra,44(sp)
204030f2:	5422                	lw	s0,40(sp)
204030f4:	6145                	addi	sp,sp,48
204030f6:	8082                	ret

204030f8 <__metal_driver_riscv_clint0_set_interrupt>:
__metal_driver_riscv_clint0_set_interrupt():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:277

int __metal_driver_riscv_clint0_set_interrupt(
    struct metal_interrupt *controller, int id) {
204030f8:	7179                	addi	sp,sp,-48
204030fa:	d606                	sw	ra,44(sp)
204030fc:	d422                	sw	s0,40(sp)
204030fe:	1800                	addi	s0,sp,48
20403100:	fca42e23          	sw	a0,-36(s0)
20403104:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:278
    int hartid = metal_cpu_get_current_hartid();
20403108:	5f5030ef          	jal	ra,20406efc <metal_cpu_get_current_hartid>
2040310c:	87aa                	mv	a5,a0
2040310e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:279
    return __metal_driver_riscv_clint0_command_request(
20403112:	fec40793          	addi	a5,s0,-20
20403116:	863e                	mv	a2,a5
20403118:	458d                	li	a1,3
2040311a:	fdc42503          	lw	a0,-36(s0)
2040311e:	359d                	jal	20402f84 <__metal_driver_riscv_clint0_command_request>
20403120:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_clint0.c:281
        controller, METAL_SOFTWARE_IPI_SET, &hartid);
}
20403122:	853e                	mv	a0,a5
20403124:	50b2                	lw	ra,44(sp)
20403126:	5422                	lw	s0,40(sp)
20403128:	6145                	addi	sp,sp,48
2040312a:	8082                	ret

2040312c <__metal_driver_cpu_hartid>:
__metal_driver_cpu_hartid():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:261



/* --------------------- cpu ------------ */
static __inline__ int __metal_driver_cpu_hartid(struct metal_cpu *cpu)
{
2040312c:	1101                	addi	sp,sp,-32
2040312e:	ce22                	sw	s0,28(sp)
20403130:	1000                	addi	s0,sp,32
20403132:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:262
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403136:	fec42703          	lw	a4,-20(s0)
2040313a:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040313e:	00f71463          	bne	a4,a5,20403146 <__metal_driver_cpu_hartid+0x1a>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:263
		return 0;
20403142:	4781                	li	a5,0
20403144:	a011                	j	20403148 <__metal_driver_cpu_hartid+0x1c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:266
	}
	else {
		return -1;
20403146:	57fd                	li	a5,-1
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:268
	}
}
20403148:	853e                	mv	a0,a5
2040314a:	4472                	lw	s0,28(sp)
2040314c:	6105                	addi	sp,sp,32
2040314e:	8082                	ret

20403150 <__metal_driver_cpu_timebase>:
__metal_driver_cpu_timebase():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:271

static __inline__ int __metal_driver_cpu_timebase(struct metal_cpu *cpu)
{
20403150:	1101                	addi	sp,sp,-32
20403152:	ce22                	sw	s0,28(sp)
20403154:	1000                	addi	s0,sp,32
20403156:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:272
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
2040315a:	fec42703          	lw	a4,-20(s0)
2040315e:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
20403162:	00f71763          	bne	a4,a5,20403170 <__metal_driver_cpu_timebase+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:273
		return 1000000;
20403166:	000f47b7          	lui	a5,0xf4
2040316a:	24078793          	addi	a5,a5,576 # f4240 <__heap_size+0xf3a40>
2040316e:	a011                	j	20403172 <__metal_driver_cpu_timebase+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:276
	}
	else {
		return 0;
20403170:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:278
	}
}
20403172:	853e                	mv	a0,a5
20403174:	4472                	lw	s0,28(sp)
20403176:	6105                	addi	sp,sp,32
20403178:	8082                	ret

2040317a <__metal_driver_cpu_interrupt_controller>:
__metal_driver_cpu_interrupt_controller():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:281

static __inline__ struct metal_interrupt * __metal_driver_cpu_interrupt_controller(struct metal_cpu *cpu)
{
2040317a:	1101                	addi	sp,sp,-32
2040317c:	ce22                	sw	s0,28(sp)
2040317e:	1000                	addi	s0,sp,32
20403180:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:282
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
20403184:	fec42703          	lw	a4,-20(s0)
20403188:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
2040318c:	00f71763          	bne	a4,a5,2040319a <__metal_driver_cpu_interrupt_controller+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:283
		return &__metal_dt_cpu_0_interrupt_controller.controller;
20403190:	800007b7          	lui	a5,0x80000
20403194:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe8d8>
20403198:	a011                	j	2040319c <__metal_driver_cpu_interrupt_controller+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:286
	}
	else {
		return NULL;
2040319a:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:288
	}
}
2040319c:	853e                	mv	a0,a5
2040319e:	4472                	lw	s0,28(sp)
204031a0:	6105                	addi	sp,sp,32
204031a2:	8082                	ret

204031a4 <__metal_driver_cpu_buserror>:
__metal_driver_cpu_buserror():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:301
		return 0;
	}
}

static __inline__ struct metal_buserror * __metal_driver_cpu_buserror(struct metal_cpu *cpu)
{
204031a4:	1101                	addi	sp,sp,-32
204031a6:	ce22                	sw	s0,28(sp)
204031a8:	1000                	addi	s0,sp,32
204031aa:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:302
	if ((uintptr_t)cpu == (uintptr_t)&__metal_dt_cpu_0) {
204031ae:	fec42703          	lw	a4,-20(s0)
204031b2:	81418793          	addi	a5,gp,-2028 # 800007b4 <__metal_dt_cpu_0>
204031b6:	00f71463          	bne	a4,a5,204031be <__metal_driver_cpu_buserror+0x1a>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:303
		return NULL;
204031ba:	4781                	li	a5,0
204031bc:	a011                	j	204031c0 <__metal_driver_cpu_buserror+0x1c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:306
	}
	else {
		return NULL;
204031be:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:308
	}
}
204031c0:	853e                	mv	a0,a5
204031c2:	4472                	lw	s0,28(sp)
204031c4:	6105                	addi	sp,sp,32
204031c6:	8082                	ret

204031c8 <__metal_driver_cpu_get>:
__metal_driver_cpu_get():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:25
extern void __metal_vector_table();
unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu);
int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time);

struct metal_cpu *__metal_driver_cpu_get(int hartid) {
204031c8:	1101                	addi	sp,sp,-32
204031ca:	ce22                	sw	s0,28(sp)
204031cc:	1000                	addi	s0,sp,32
204031ce:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:26
    if (hartid < __METAL_DT_MAX_HARTS) {
204031d2:	fec42783          	lw	a5,-20(s0)
204031d6:	00f04c63          	bgtz	a5,204031ee <__metal_driver_cpu_get+0x26>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:27
        return &(__metal_cpu_table[hartid]->cpu);
204031da:	800007b7          	lui	a5,0x80000
204031de:	fec42703          	lw	a4,-20(s0)
204031e2:	070a                	slli	a4,a4,0x2
204031e4:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
204031e8:	97ba                	add	a5,a5,a4
204031ea:	439c                	lw	a5,0(a5)
204031ec:	a011                	j	204031f0 <__metal_driver_cpu_get+0x28>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:29
    }
    return (struct metal_cpu *)NULL;
204031ee:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:30
}
204031f0:	853e                	mv	a0,a5
204031f2:	4472                	lw	s0,28(sp)
204031f4:	6105                	addi	sp,sp,32
204031f6:	8082                	ret

204031f8 <__metal_myhart_id>:
__metal_myhart_id():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:32

uintptr_t __metal_myhart_id(void) {
204031f8:	1101                	addi	sp,sp,-32
204031fa:	ce22                	sw	s0,28(sp)
204031fc:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:34
    uintptr_t myhart;
    __asm__ volatile("csrr %0, mhartid" : "=r"(myhart));
204031fe:	f14027f3          	csrr	a5,mhartid
20403202:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:35
    return myhart;
20403206:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:36
}
2040320a:	853e                	mv	a0,a5
2040320c:	4472                	lw	s0,28(sp)
2040320e:	6105                	addi	sp,sp,32
20403210:	8082                	ret

20403212 <__metal_interrupt_global_enable>:
__metal_interrupt_global_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:45
    for (ptr = base; ptr < (base + size); ptr++) {
        *ptr = 0;
    }
}

void __metal_interrupt_global_enable(void) {
20403212:	1101                	addi	sp,sp,-32
20403214:	ce22                	sw	s0,28(sp)
20403216:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:47
    uintptr_t m;
    __asm__ volatile("csrrs %0, mstatus, %1"
20403218:	47a1                	li	a5,8
2040321a:	3007a7f3          	csrrs	a5,mstatus,a5
2040321e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:50
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
20403222:	0001                	nop
20403224:	4472                	lw	s0,28(sp)
20403226:	6105                	addi	sp,sp,32
20403228:	8082                	ret

2040322a <__metal_interrupt_global_disable>:
__metal_interrupt_global_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:52

void __metal_interrupt_global_disable(void) {
2040322a:	1101                	addi	sp,sp,-32
2040322c:	ce22                	sw	s0,28(sp)
2040322e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:54
    uintptr_t m;
    __asm__ volatile("csrrc %0, mstatus, %1"
20403230:	47a1                	li	a5,8
20403232:	3007b7f3          	csrrc	a5,mstatus,a5
20403236:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:57
                     : "=r"(m)
                     : "r"(METAL_MIE_INTERRUPT));
}
2040323a:	0001                	nop
2040323c:	4472                	lw	s0,28(sp)
2040323e:	6105                	addi	sp,sp,32
20403240:	8082                	ret

20403242 <__metal_interrupt_software_enable>:
__metal_interrupt_software_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:59

void __metal_interrupt_software_enable(void) {
20403242:	1101                	addi	sp,sp,-32
20403244:	ce22                	sw	s0,28(sp)
20403246:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:61
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403248:	47a1                	li	a5,8
2040324a:	3047a7f3          	csrrs	a5,mie,a5
2040324e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:64
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
20403252:	0001                	nop
20403254:	4472                	lw	s0,28(sp)
20403256:	6105                	addi	sp,sp,32
20403258:	8082                	ret

2040325a <__metal_interrupt_software_disable>:
__metal_interrupt_software_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:66

void __metal_interrupt_software_disable(void) {
2040325a:	1101                	addi	sp,sp,-32
2040325c:	ce22                	sw	s0,28(sp)
2040325e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:68
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403260:	47a1                	li	a5,8
20403262:	3047b7f3          	csrrc	a5,mie,a5
20403266:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:71
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_SW));
}
2040326a:	0001                	nop
2040326c:	4472                	lw	s0,28(sp)
2040326e:	6105                	addi	sp,sp,32
20403270:	8082                	ret

20403272 <__metal_interrupt_timer_enable>:
__metal_interrupt_timer_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:73

void __metal_interrupt_timer_enable(void) {
20403272:	1101                	addi	sp,sp,-32
20403274:	ce22                	sw	s0,28(sp)
20403276:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:75
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
20403278:	08000793          	li	a5,128
2040327c:	3047a7f3          	csrrs	a5,mie,a5
20403280:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:78
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
20403284:	0001                	nop
20403286:	4472                	lw	s0,28(sp)
20403288:	6105                	addi	sp,sp,32
2040328a:	8082                	ret

2040328c <__metal_interrupt_timer_disable>:
__metal_interrupt_timer_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:80

void __metal_interrupt_timer_disable(void) {
2040328c:	1101                	addi	sp,sp,-32
2040328e:	ce22                	sw	s0,28(sp)
20403290:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:82
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1"
20403292:	08000793          	li	a5,128
20403296:	3047b7f3          	csrrc	a5,mie,a5
2040329a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:85
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_TMR));
}
2040329e:	0001                	nop
204032a0:	4472                	lw	s0,28(sp)
204032a2:	6105                	addi	sp,sp,32
204032a4:	8082                	ret

204032a6 <__metal_interrupt_external_enable>:
__metal_interrupt_external_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:87

void __metal_interrupt_external_enable(void) {
204032a6:	1101                	addi	sp,sp,-32
204032a8:	ce22                	sw	s0,28(sp)
204032aa:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:89
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1"
204032ac:	6785                	lui	a5,0x1
204032ae:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204032b2:	3047a7f3          	csrrs	a5,mie,a5
204032b6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:92
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204032ba:	0001                	nop
204032bc:	4472                	lw	s0,28(sp)
204032be:	6105                	addi	sp,sp,32
204032c0:	8082                	ret

204032c2 <__metal_interrupt_external_disable>:
__metal_interrupt_external_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:94

void __metal_interrupt_external_disable(void) {
204032c2:	1101                	addi	sp,sp,-32
204032c4:	ce22                	sw	s0,28(sp)
204032c6:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:96
    unsigned long m;
    __asm__ volatile("csrrc %0, mie, %1"
204032c8:	6785                	lui	a5,0x1
204032ca:	80078793          	addi	a5,a5,-2048 # 800 <__heap_size>
204032ce:	3047b7f3          	csrrc	a5,mie,a5
204032d2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:99
                     : "=r"(m)
                     : "r"(METAL_LOCAL_INTERRUPT_EXT));
}
204032d6:	0001                	nop
204032d8:	4472                	lw	s0,28(sp)
204032da:	6105                	addi	sp,sp,32
204032dc:	8082                	ret

204032de <__metal_interrupt_local_enable>:
__metal_interrupt_local_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:101

void __metal_interrupt_local_enable(int id) {
204032de:	7179                	addi	sp,sp,-48
204032e0:	d622                	sw	s0,44(sp)
204032e2:	1800                	addi	s0,sp,48
204032e4:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:102
    uintptr_t b = 1 << id;
204032e8:	fdc42783          	lw	a5,-36(s0)
204032ec:	4705                	li	a4,1
204032ee:	00f717b3          	sll	a5,a4,a5
204032f2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:104
    uintptr_t m;
    __asm__ volatile("csrrs %0, mie, %1" : "=r"(m) : "r"(b));
204032f6:	fec42783          	lw	a5,-20(s0)
204032fa:	3047a7f3          	csrrs	a5,mie,a5
204032fe:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:105
}
20403302:	0001                	nop
20403304:	5432                	lw	s0,44(sp)
20403306:	6145                	addi	sp,sp,48
20403308:	8082                	ret

2040330a <__metal_interrupt_local_disable>:
__metal_interrupt_local_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:107

void __metal_interrupt_local_disable(int id) {
2040330a:	7179                	addi	sp,sp,-48
2040330c:	d622                	sw	s0,44(sp)
2040330e:	1800                	addi	s0,sp,48
20403310:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:108
    uintptr_t b = 1 << id;
20403314:	fdc42783          	lw	a5,-36(s0)
20403318:	4705                	li	a4,1
2040331a:	00f717b3          	sll	a5,a4,a5
2040331e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:110
    uintptr_t m;
    __asm__ volatile("csrrc %0, mie, %1" : "=r"(m) : "r"(b));
20403322:	fec42783          	lw	a5,-20(s0)
20403326:	3047b7f3          	csrrc	a5,mie,a5
2040332a:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:111
}
2040332e:	0001                	nop
20403330:	5432                	lw	s0,44(sp)
20403332:	6145                	addi	sp,sp,48
20403334:	8082                	ret

20403336 <__metal_default_exception_handler>:
__metal_default_exception_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:113

void __metal_default_exception_handler(struct metal_cpu *cpu, int ecode) {
20403336:	1101                	addi	sp,sp,-32
20403338:	ce06                	sw	ra,28(sp)
2040333a:	cc22                	sw	s0,24(sp)
2040333c:	1000                	addi	s0,sp,32
2040333e:	fea42623          	sw	a0,-20(s0)
20403342:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:114
    metal_shutdown(100);
20403346:	06400513          	li	a0,100
2040334a:	3ef030ef          	jal	ra,20406f38 <metal_shutdown>

2040334e <__metal_default_interrupt_handler>:
__metal_default_interrupt_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:117
}

void __metal_default_interrupt_handler(int id, void *priv) {
2040334e:	1101                	addi	sp,sp,-32
20403350:	ce06                	sw	ra,28(sp)
20403352:	cc22                	sw	s0,24(sp)
20403354:	1000                	addi	s0,sp,32
20403356:	fea42623          	sw	a0,-20(s0)
2040335a:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:118
    metal_shutdown(200);
2040335e:	0c800513          	li	a0,200
20403362:	3d7030ef          	jal	ra,20406f38 <metal_shutdown>

20403366 <metal_interrupt_vector_handler>:
metal_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:122
}

/* The metal_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_interrupt_vector_handler(void) {
20403366:	715d                	addi	sp,sp,-80
20403368:	c686                	sw	ra,76(sp)
2040336a:	c496                	sw	t0,72(sp)
2040336c:	c29a                	sw	t1,68(sp)
2040336e:	c09e                	sw	t2,64(sp)
20403370:	de22                	sw	s0,60(sp)
20403372:	dc2a                	sw	a0,56(sp)
20403374:	da2e                	sw	a1,52(sp)
20403376:	d832                	sw	a2,48(sp)
20403378:	d636                	sw	a3,44(sp)
2040337a:	d43a                	sw	a4,40(sp)
2040337c:	d23e                	sw	a5,36(sp)
2040337e:	d042                	sw	a6,32(sp)
20403380:	ce46                	sw	a7,28(sp)
20403382:	cc72                	sw	t3,24(sp)
20403384:	ca76                	sw	t4,20(sp)
20403386:	c87a                	sw	t5,16(sp)
20403388:	c67e                	sw	t6,12(sp)
2040338a:	0880                	addi	s0,sp,80
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:123
    metal_shutdown(300);
2040338c:	12c00513          	li	a0,300
20403390:	3a9030ef          	jal	ra,20406f38 <metal_shutdown>

20403394 <metal_software_interrupt_vector_handler>:
metal_software_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:128
}

/* The metal_software_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_software_interrupt_vector_handler(void) {
20403394:	711d                	addi	sp,sp,-96
20403396:	ce86                	sw	ra,92(sp)
20403398:	cc96                	sw	t0,88(sp)
2040339a:	ca9a                	sw	t1,84(sp)
2040339c:	c89e                	sw	t2,80(sp)
2040339e:	c6a2                	sw	s0,76(sp)
204033a0:	c4aa                	sw	a0,72(sp)
204033a2:	c2ae                	sw	a1,68(sp)
204033a4:	c0b2                	sw	a2,64(sp)
204033a6:	de36                	sw	a3,60(sp)
204033a8:	dc3a                	sw	a4,56(sp)
204033aa:	da3e                	sw	a5,52(sp)
204033ac:	d842                	sw	a6,48(sp)
204033ae:	d646                	sw	a7,44(sp)
204033b0:	d472                	sw	t3,40(sp)
204033b2:	d276                	sw	t4,36(sp)
204033b4:	d07a                	sw	t5,32(sp)
204033b6:	ce7e                	sw	t6,28(sp)
204033b8:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:129
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_SW);
204033ba:	3d3d                	jal	204031f8 <__metal_myhart_id>
204033bc:	872a                	mv	a4,a0
204033be:	800007b7          	lui	a5,0x80000
204033c2:	070a                	slli	a4,a4,0x2
204033c4:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
204033c8:	97ba                	add	a5,a5,a4
204033ca:	439c                	lw	a5,0(a5)
204033cc:	faf42623          	sw	a5,-84(s0)
204033d0:	fac42783          	lw	a5,-84(s0)
204033d4:	c785                	beqz	a5,204033fc <metal_software_interrupt_vector_handler+0x68>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:129 (discriminator 1)
204033d6:	fac42503          	lw	a0,-84(s0)
204033da:	3345                	jal	2040317a <__metal_driver_cpu_interrupt_controller>
204033dc:	faa42423          	sw	a0,-88(s0)
204033e0:	fa842783          	lw	a5,-88(s0)
204033e4:	0e07a783          	lw	a5,224(a5)
204033e8:	faf42223          	sw	a5,-92(s0)
204033ec:	fa842783          	lw	a5,-88(s0)
204033f0:	0d87a783          	lw	a5,216(a5)
204033f4:	fa442583          	lw	a1,-92(s0)
204033f8:	450d                	li	a0,3
204033fa:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:130
}
204033fc:	0001                	nop
204033fe:	40f6                	lw	ra,92(sp)
20403400:	42e6                	lw	t0,88(sp)
20403402:	4356                	lw	t1,84(sp)
20403404:	43c6                	lw	t2,80(sp)
20403406:	4436                	lw	s0,76(sp)
20403408:	4526                	lw	a0,72(sp)
2040340a:	4596                	lw	a1,68(sp)
2040340c:	4606                	lw	a2,64(sp)
2040340e:	56f2                	lw	a3,60(sp)
20403410:	5762                	lw	a4,56(sp)
20403412:	57d2                	lw	a5,52(sp)
20403414:	5842                	lw	a6,48(sp)
20403416:	58b2                	lw	a7,44(sp)
20403418:	5e22                	lw	t3,40(sp)
2040341a:	5e92                	lw	t4,36(sp)
2040341c:	5f02                	lw	t5,32(sp)
2040341e:	4ff2                	lw	t6,28(sp)
20403420:	6125                	addi	sp,sp,96
20403422:	30200073          	mret

20403426 <__metal_default_sw_handler>:
__metal_default_sw_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:132

void __metal_default_sw_handler(int id, void *priv) {
20403426:	7179                	addi	sp,sp,-48
20403428:	d606                	sw	ra,44(sp)
2040342a:	d422                	sw	s0,40(sp)
2040342c:	1800                	addi	s0,sp,48
2040342e:	fca42e23          	sw	a0,-36(s0)
20403432:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:135
    uintptr_t mcause;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403436:	33c9                	jal	204031f8 <__metal_myhart_id>
20403438:	872a                	mv	a4,a0
2040343a:	800007b7          	lui	a5,0x80000
2040343e:	070a                	slli	a4,a4,0x2
20403440:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403444:	97ba                	add	a5,a5,a4
20403446:	439c                	lw	a5,0(a5)
20403448:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:137

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2040344c:	342027f3          	csrr	a5,mcause
20403450:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:138
    if (cpu) {
20403454:	fec42783          	lw	a5,-20(s0)
20403458:	c795                	beqz	a5,20403484 <__metal_default_sw_handler+0x5e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:140
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
2040345a:	fec42503          	lw	a0,-20(s0)
2040345e:	3b31                	jal	2040317a <__metal_driver_cpu_interrupt_controller>
20403460:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:141
        intc->metal_exception_table[mcause & METAL_MCAUSE_CAUSE](
20403464:	fe842783          	lw	a5,-24(s0)
20403468:	3ff7f793          	andi	a5,a5,1023
2040346c:	fe442703          	lw	a4,-28(s0)
20403470:	0e878793          	addi	a5,a5,232
20403474:	078a                	slli	a5,a5,0x2
20403476:	97ba                	add	a5,a5,a4
20403478:	439c                	lw	a5,0(a5)
2040347a:	fdc42583          	lw	a1,-36(s0)
2040347e:	fec42503          	lw	a0,-20(s0)
20403482:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:144
            (struct metal_cpu *)cpu, id);
    }
}
20403484:	0001                	nop
20403486:	50b2                	lw	ra,44(sp)
20403488:	5422                	lw	s0,40(sp)
2040348a:	6145                	addi	sp,sp,48
2040348c:	8082                	ret

2040348e <metal_timer_interrupt_vector_handler>:
metal_timer_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:148

/* The metal_timer_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_timer_interrupt_vector_handler(void) {
2040348e:	711d                	addi	sp,sp,-96
20403490:	ce86                	sw	ra,92(sp)
20403492:	cc96                	sw	t0,88(sp)
20403494:	ca9a                	sw	t1,84(sp)
20403496:	c89e                	sw	t2,80(sp)
20403498:	c6a2                	sw	s0,76(sp)
2040349a:	c4aa                	sw	a0,72(sp)
2040349c:	c2ae                	sw	a1,68(sp)
2040349e:	c0b2                	sw	a2,64(sp)
204034a0:	de36                	sw	a3,60(sp)
204034a2:	dc3a                	sw	a4,56(sp)
204034a4:	da3e                	sw	a5,52(sp)
204034a6:	d842                	sw	a6,48(sp)
204034a8:	d646                	sw	a7,44(sp)
204034aa:	d472                	sw	t3,40(sp)
204034ac:	d276                	sw	t4,36(sp)
204034ae:	d07a                	sw	t5,32(sp)
204034b0:	ce7e                	sw	t6,28(sp)
204034b2:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:149
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_TMR);
204034b4:	3391                	jal	204031f8 <__metal_myhart_id>
204034b6:	872a                	mv	a4,a0
204034b8:	800007b7          	lui	a5,0x80000
204034bc:	070a                	slli	a4,a4,0x2
204034be:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
204034c2:	97ba                	add	a5,a5,a4
204034c4:	439c                	lw	a5,0(a5)
204034c6:	faf42623          	sw	a5,-84(s0)
204034ca:	fac42783          	lw	a5,-84(s0)
204034ce:	c785                	beqz	a5,204034f6 <metal_timer_interrupt_vector_handler+0x68>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:149 (discriminator 1)
204034d0:	fac42503          	lw	a0,-84(s0)
204034d4:	315d                	jal	2040317a <__metal_driver_cpu_interrupt_controller>
204034d6:	faa42423          	sw	a0,-88(s0)
204034da:	fa842783          	lw	a5,-88(s0)
204034de:	1407a783          	lw	a5,320(a5)
204034e2:	faf42223          	sw	a5,-92(s0)
204034e6:	fa842783          	lw	a5,-88(s0)
204034ea:	1387a783          	lw	a5,312(a5)
204034ee:	fa442583          	lw	a1,-92(s0)
204034f2:	451d                	li	a0,7
204034f4:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:150
}
204034f6:	0001                	nop
204034f8:	40f6                	lw	ra,92(sp)
204034fa:	42e6                	lw	t0,88(sp)
204034fc:	4356                	lw	t1,84(sp)
204034fe:	43c6                	lw	t2,80(sp)
20403500:	4436                	lw	s0,76(sp)
20403502:	4526                	lw	a0,72(sp)
20403504:	4596                	lw	a1,68(sp)
20403506:	4606                	lw	a2,64(sp)
20403508:	56f2                	lw	a3,60(sp)
2040350a:	5762                	lw	a4,56(sp)
2040350c:	57d2                	lw	a5,52(sp)
2040350e:	5842                	lw	a6,48(sp)
20403510:	58b2                	lw	a7,44(sp)
20403512:	5e22                	lw	t3,40(sp)
20403514:	5e92                	lw	t4,36(sp)
20403516:	5f02                	lw	t5,32(sp)
20403518:	4ff2                	lw	t6,28(sp)
2040351a:	6125                	addi	sp,sp,96
2040351c:	30200073          	mret

20403520 <__metal_default_beu_handler>:
__metal_default_beu_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:152

void __metal_default_beu_handler(int id, void *priv) {}
20403520:	1101                	addi	sp,sp,-32
20403522:	ce22                	sw	s0,28(sp)
20403524:	1000                	addi	s0,sp,32
20403526:	fea42623          	sw	a0,-20(s0)
2040352a:	feb42423          	sw	a1,-24(s0)
2040352e:	0001                	nop
20403530:	4472                	lw	s0,28(sp)
20403532:	6105                	addi	sp,sp,32
20403534:	8082                	ret

20403536 <__metal_default_timer_handler>:
__metal_default_timer_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:154

void __metal_default_timer_handler(int id, void *priv) {
20403536:	7179                	addi	sp,sp,-48
20403538:	d606                	sw	ra,44(sp)
2040353a:	d422                	sw	s0,40(sp)
2040353c:	1800                	addi	s0,sp,48
2040353e:	fca42e23          	sw	a0,-36(s0)
20403542:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:155
    struct metal_cpu *cpu = __metal_driver_cpu_get(__metal_myhart_id());
20403546:	394d                	jal	204031f8 <__metal_myhart_id>
20403548:	87aa                	mv	a5,a0
2040354a:	853e                	mv	a0,a5
2040354c:	39b5                	jal	204031c8 <__metal_driver_cpu_get>
2040354e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:156
    unsigned long long time = __metal_driver_cpu_mtime_get(cpu);
20403552:	fec42503          	lw	a0,-20(s0)
20403556:	2cc010ef          	jal	ra,20404822 <__metal_driver_cpu_mtime_get>
2040355a:	fea42023          	sw	a0,-32(s0)
2040355e:	feb42223          	sw	a1,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:159

    /* Set a 10 cycle timer */
    __metal_driver_cpu_mtimecmp_set(cpu, time + 10);
20403562:	fe042703          	lw	a4,-32(s0)
20403566:	fe442783          	lw	a5,-28(s0)
2040356a:	4529                	li	a0,10
2040356c:	4581                	li	a1,0
2040356e:	00a70633          	add	a2,a4,a0
20403572:	8832                	mv	a6,a2
20403574:	00e83833          	sltu	a6,a6,a4
20403578:	00b786b3          	add	a3,a5,a1
2040357c:	00d807b3          	add	a5,a6,a3
20403580:	86be                	mv	a3,a5
20403582:	8732                	mv	a4,a2
20403584:	87b6                	mv	a5,a3
20403586:	85ba                	mv	a1,a4
20403588:	863e                	mv	a2,a5
2040358a:	fec42503          	lw	a0,-20(s0)
2040358e:	2fa010ef          	jal	ra,20404888 <__metal_driver_cpu_mtimecmp_set>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:160
}
20403592:	0001                	nop
20403594:	50b2                	lw	ra,44(sp)
20403596:	5422                	lw	s0,40(sp)
20403598:	6145                	addi	sp,sp,48
2040359a:	8082                	ret
	...

20403600 <__metal_exception_handler>:
__metal_exception_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:169
metal_external_interrupt_vector_handler(void) {
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_EXT);
}

void __metal_exception_handler(void) __attribute__((interrupt, aligned(128)));
void __metal_exception_handler(void) {
20403600:	7119                	addi	sp,sp,-128
20403602:	de86                	sw	ra,124(sp)
20403604:	dc96                	sw	t0,120(sp)
20403606:	da9a                	sw	t1,116(sp)
20403608:	d89e                	sw	t2,112(sp)
2040360a:	d6a2                	sw	s0,108(sp)
2040360c:	d4aa                	sw	a0,104(sp)
2040360e:	d2ae                	sw	a1,100(sp)
20403610:	d0b2                	sw	a2,96(sp)
20403612:	ceb6                	sw	a3,92(sp)
20403614:	ccba                	sw	a4,88(sp)
20403616:	cabe                	sw	a5,84(sp)
20403618:	c8c2                	sw	a6,80(sp)
2040361a:	c6c6                	sw	a7,76(sp)
2040361c:	c4f2                	sw	t3,72(sp)
2040361e:	c2f6                	sw	t4,68(sp)
20403620:	c0fa                	sw	t5,64(sp)
20403622:	de7e                	sw	t6,60(sp)
20403624:	0100                	addi	s0,sp,128
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:174
    int id;
    void *priv;
    uintptr_t mcause, mepc, mtval, mtvec;
    struct __metal_driver_riscv_cpu_intc *intc;
    struct __metal_driver_cpu *cpu = __metal_cpu_table[__metal_myhart_id()];
20403626:	bd3ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
2040362a:	872a                	mv	a4,a0
2040362c:	800007b7          	lui	a5,0x80000
20403630:	070a                	slli	a4,a4,0x2
20403632:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403636:	97ba                	add	a5,a5,a4
20403638:	439c                	lw	a5,0(a5)
2040363a:	faf42623          	sw	a5,-84(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:176

    __asm__ volatile("csrr %0, mcause" : "=r"(mcause));
2040363e:	342027f3          	csrr	a5,mcause
20403642:	faf42423          	sw	a5,-88(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:177
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20403646:	341027f3          	csrr	a5,mepc
2040364a:	faf42223          	sw	a5,-92(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:178
    __asm__ volatile("csrr %0, mtval" : "=r"(mtval));
2040364e:	343027f3          	csrr	a5,mtval
20403652:	faf42023          	sw	a5,-96(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:179
    __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20403656:	305027f3          	csrr	a5,mtvec
2040365a:	f8f42e23          	sw	a5,-100(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:181

    if (cpu) {
2040365e:	fac42783          	lw	a5,-84(s0)
20403662:	cbfd                	beqz	a5,20403758 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:183
        intc = (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller((struct metal_cpu *)cpu);
20403664:	fac42503          	lw	a0,-84(s0)
20403668:	b13ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
2040366c:	f8a42c23          	sw	a0,-104(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:184
        id = mcause & METAL_MCAUSE_CAUSE;
20403670:	fa842783          	lw	a5,-88(s0)
20403674:	3ff7f793          	andi	a5,a5,1023
20403678:	f8f42a23          	sw	a5,-108(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:185
        if (mcause & METAL_MCAUSE_INTR) {
2040367c:	fa842783          	lw	a5,-88(s0)
20403680:	0a07de63          	bgez	a5,2040373c <__metal_exception_handler+0x13c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:186
            if (id == METAL_INTERRUPT_ID_BEU) {
20403684:	f9442703          	lw	a4,-108(s0)
20403688:	08000793          	li	a5,128
2040368c:	02f71263          	bne	a4,a5,204036b0 <__metal_exception_handler+0xb0>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:187
                priv = intc->metal_int_beu.exint_data;
20403690:	f9842783          	lw	a5,-104(s0)
20403694:	3987a783          	lw	a5,920(a5)
20403698:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:188
                intc->metal_int_beu.handler(id, priv);
2040369c:	f9842783          	lw	a5,-104(s0)
204036a0:	3907a783          	lw	a5,912(a5)
204036a4:	f8c42583          	lw	a1,-116(s0)
204036a8:	f9442503          	lw	a0,-108(s0)
204036ac:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:189
                return;
204036ae:	a06d                	j	20403758 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:191
            }
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204036b0:	f9442703          	lw	a4,-108(s0)
204036b4:	47ad                	li	a5,11
204036b6:	00e7d763          	bge	a5,a4,204036c4 <__metal_exception_handler+0xc4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:192 (discriminator 1)
                ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_DIRECT)) {
204036ba:	f9c42783          	lw	a5,-100(s0)
204036be:	03f7f793          	andi	a5,a5,63
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:191 (discriminator 1)
            if ((id < METAL_INTERRUPT_ID_CSW) ||
204036c2:	ef9d                	bnez	a5,20403700 <__metal_exception_handler+0x100>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:193
                priv = intc->metal_int_table[id].exint_data;
204036c4:	f9842683          	lw	a3,-104(s0)
204036c8:	f9442703          	lw	a4,-108(s0)
204036cc:	87ba                	mv	a5,a4
204036ce:	0786                	slli	a5,a5,0x1
204036d0:	97ba                	add	a5,a5,a4
204036d2:	078e                	slli	a5,a5,0x3
204036d4:	97b6                	add	a5,a5,a3
204036d6:	0987a783          	lw	a5,152(a5)
204036da:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:194
                intc->metal_int_table[id].handler(id, priv);
204036de:	f9842683          	lw	a3,-104(s0)
204036e2:	f9442703          	lw	a4,-108(s0)
204036e6:	87ba                	mv	a5,a4
204036e8:	0786                	slli	a5,a5,0x1
204036ea:	97ba                	add	a5,a5,a4
204036ec:	078e                	slli	a5,a5,0x3
204036ee:	97b6                	add	a5,a5,a3
204036f0:	0907a783          	lw	a5,144(a5)
204036f4:	f8c42583          	lw	a1,-116(s0)
204036f8:	f9442503          	lw	a0,-108(s0)
204036fc:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:195
                return;
204036fe:	a8a9                	j	20403758 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:197
            }
            if ((mtvec & METAL_MTVEC_MASK) == METAL_MTVEC_CLIC) {
20403700:	f9c42783          	lw	a5,-100(s0)
20403704:	03f7f713          	andi	a4,a5,63
20403708:	4789                	li	a5,2
2040370a:	04f71763          	bne	a4,a5,20403758 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:201
                uintptr_t mtvt;
                metal_interrupt_handler_t mtvt_handler;

                __asm__ volatile("csrr %0, 0x307" : "=r"(mtvt));
2040370e:	307027f3          	csrr	a5,mtvt
20403712:	f8f42823          	sw	a5,-112(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:202
                priv = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20403716:	f9842783          	lw	a5,-104(s0)
2040371a:	0dc7a783          	lw	a5,220(a5)
2040371e:	f8f42623          	sw	a5,-116(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:203
                mtvt_handler = (metal_interrupt_handler_t) * (uintptr_t *)mtvt;
20403722:	f9042783          	lw	a5,-112(s0)
20403726:	439c                	lw	a5,0(a5)
20403728:	f8f42423          	sw	a5,-120(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:204
                mtvt_handler(id, priv);
2040372c:	f8842783          	lw	a5,-120(s0)
20403730:	f8c42583          	lw	a1,-116(s0)
20403734:	f9442503          	lw	a0,-108(s0)
20403738:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:205
                return;
2040373a:	a839                	j	20403758 <__metal_exception_handler+0x158>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:208
            }
        } else {
            intc->metal_exception_table[id]((struct metal_cpu *)cpu, id);
2040373c:	f9842703          	lw	a4,-104(s0)
20403740:	f9442783          	lw	a5,-108(s0)
20403744:	0e878793          	addi	a5,a5,232
20403748:	078a                	slli	a5,a5,0x2
2040374a:	97ba                	add	a5,a5,a4
2040374c:	439c                	lw	a5,0(a5)
2040374e:	f9442583          	lw	a1,-108(s0)
20403752:	fac42503          	lw	a0,-84(s0)
20403756:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:211
        }
    }
}
20403758:	50f6                	lw	ra,124(sp)
2040375a:	52e6                	lw	t0,120(sp)
2040375c:	5356                	lw	t1,116(sp)
2040375e:	53c6                	lw	t2,112(sp)
20403760:	5436                	lw	s0,108(sp)
20403762:	5526                	lw	a0,104(sp)
20403764:	5596                	lw	a1,100(sp)
20403766:	5606                	lw	a2,96(sp)
20403768:	46f6                	lw	a3,92(sp)
2040376a:	4766                	lw	a4,88(sp)
2040376c:	47d6                	lw	a5,84(sp)
2040376e:	4846                	lw	a6,80(sp)
20403770:	48b6                	lw	a7,76(sp)
20403772:	4e26                	lw	t3,72(sp)
20403774:	4e96                	lw	t4,68(sp)
20403776:	4f06                	lw	t5,64(sp)
20403778:	5ff2                	lw	t6,60(sp)
2040377a:	6109                	addi	sp,sp,128
2040377c:	30200073          	mret
	...

204037fa <metal_lc0_interrupt_vector_handler>:
metal_lc0_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:214

/* The metal_lc0_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc0_interrupt_vector_handler(void) {
204037fa:	711d                	addi	sp,sp,-96
204037fc:	ce86                	sw	ra,92(sp)
204037fe:	cc96                	sw	t0,88(sp)
20403800:	ca9a                	sw	t1,84(sp)
20403802:	c89e                	sw	t2,80(sp)
20403804:	c6a2                	sw	s0,76(sp)
20403806:	c4aa                	sw	a0,72(sp)
20403808:	c2ae                	sw	a1,68(sp)
2040380a:	c0b2                	sw	a2,64(sp)
2040380c:	de36                	sw	a3,60(sp)
2040380e:	dc3a                	sw	a4,56(sp)
20403810:	da3e                	sw	a5,52(sp)
20403812:	d842                	sw	a6,48(sp)
20403814:	d646                	sw	a7,44(sp)
20403816:	d472                	sw	t3,40(sp)
20403818:	d276                	sw	t4,36(sp)
2040381a:	d07a                	sw	t5,32(sp)
2040381c:	ce7e                	sw	t6,28(sp)
2040381e:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:215
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC0);
20403820:	9d9ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403824:	872a                	mv	a4,a0
20403826:	800007b7          	lui	a5,0x80000
2040382a:	070a                	slli	a4,a4,0x2
2040382c:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403830:	97ba                	add	a5,a5,a4
20403832:	439c                	lw	a5,0(a5)
20403834:	faf42623          	sw	a5,-84(s0)
20403838:	fac42783          	lw	a5,-84(s0)
2040383c:	c78d                	beqz	a5,20403866 <metal_lc0_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:215 (discriminator 1)
2040383e:	fac42503          	lw	a0,-84(s0)
20403842:	939ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403846:	faa42423          	sw	a0,-88(s0)
2040384a:	fa842783          	lw	a5,-88(s0)
2040384e:	2187a783          	lw	a5,536(a5)
20403852:	faf42223          	sw	a5,-92(s0)
20403856:	fa842783          	lw	a5,-88(s0)
2040385a:	2107a783          	lw	a5,528(a5)
2040385e:	fa442583          	lw	a1,-92(s0)
20403862:	4541                	li	a0,16
20403864:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:216
}
20403866:	0001                	nop
20403868:	40f6                	lw	ra,92(sp)
2040386a:	42e6                	lw	t0,88(sp)
2040386c:	4356                	lw	t1,84(sp)
2040386e:	43c6                	lw	t2,80(sp)
20403870:	4436                	lw	s0,76(sp)
20403872:	4526                	lw	a0,72(sp)
20403874:	4596                	lw	a1,68(sp)
20403876:	4606                	lw	a2,64(sp)
20403878:	56f2                	lw	a3,60(sp)
2040387a:	5762                	lw	a4,56(sp)
2040387c:	57d2                	lw	a5,52(sp)
2040387e:	5842                	lw	a6,48(sp)
20403880:	58b2                	lw	a7,44(sp)
20403882:	5e22                	lw	t3,40(sp)
20403884:	5e92                	lw	t4,36(sp)
20403886:	5f02                	lw	t5,32(sp)
20403888:	4ff2                	lw	t6,28(sp)
2040388a:	6125                	addi	sp,sp,96
2040388c:	30200073          	mret

20403890 <metal_lc1_interrupt_vector_handler>:
metal_lc1_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:219

/* The metal_lc1_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc1_interrupt_vector_handler(void) {
20403890:	711d                	addi	sp,sp,-96
20403892:	ce86                	sw	ra,92(sp)
20403894:	cc96                	sw	t0,88(sp)
20403896:	ca9a                	sw	t1,84(sp)
20403898:	c89e                	sw	t2,80(sp)
2040389a:	c6a2                	sw	s0,76(sp)
2040389c:	c4aa                	sw	a0,72(sp)
2040389e:	c2ae                	sw	a1,68(sp)
204038a0:	c0b2                	sw	a2,64(sp)
204038a2:	de36                	sw	a3,60(sp)
204038a4:	dc3a                	sw	a4,56(sp)
204038a6:	da3e                	sw	a5,52(sp)
204038a8:	d842                	sw	a6,48(sp)
204038aa:	d646                	sw	a7,44(sp)
204038ac:	d472                	sw	t3,40(sp)
204038ae:	d276                	sw	t4,36(sp)
204038b0:	d07a                	sw	t5,32(sp)
204038b2:	ce7e                	sw	t6,28(sp)
204038b4:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:220
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC1);
204038b6:	943ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
204038ba:	872a                	mv	a4,a0
204038bc:	800007b7          	lui	a5,0x80000
204038c0:	070a                	slli	a4,a4,0x2
204038c2:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
204038c6:	97ba                	add	a5,a5,a4
204038c8:	439c                	lw	a5,0(a5)
204038ca:	faf42623          	sw	a5,-84(s0)
204038ce:	fac42783          	lw	a5,-84(s0)
204038d2:	c78d                	beqz	a5,204038fc <metal_lc1_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:220 (discriminator 1)
204038d4:	fac42503          	lw	a0,-84(s0)
204038d8:	8a3ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
204038dc:	faa42423          	sw	a0,-88(s0)
204038e0:	fa842783          	lw	a5,-88(s0)
204038e4:	2307a783          	lw	a5,560(a5)
204038e8:	faf42223          	sw	a5,-92(s0)
204038ec:	fa842783          	lw	a5,-88(s0)
204038f0:	2287a783          	lw	a5,552(a5)
204038f4:	fa442583          	lw	a1,-92(s0)
204038f8:	4545                	li	a0,17
204038fa:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:221
}
204038fc:	0001                	nop
204038fe:	40f6                	lw	ra,92(sp)
20403900:	42e6                	lw	t0,88(sp)
20403902:	4356                	lw	t1,84(sp)
20403904:	43c6                	lw	t2,80(sp)
20403906:	4436                	lw	s0,76(sp)
20403908:	4526                	lw	a0,72(sp)
2040390a:	4596                	lw	a1,68(sp)
2040390c:	4606                	lw	a2,64(sp)
2040390e:	56f2                	lw	a3,60(sp)
20403910:	5762                	lw	a4,56(sp)
20403912:	57d2                	lw	a5,52(sp)
20403914:	5842                	lw	a6,48(sp)
20403916:	58b2                	lw	a7,44(sp)
20403918:	5e22                	lw	t3,40(sp)
2040391a:	5e92                	lw	t4,36(sp)
2040391c:	5f02                	lw	t5,32(sp)
2040391e:	4ff2                	lw	t6,28(sp)
20403920:	6125                	addi	sp,sp,96
20403922:	30200073          	mret

20403926 <metal_lc2_interrupt_vector_handler>:
metal_lc2_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:224

/* The metal_lc2_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc2_interrupt_vector_handler(void) {
20403926:	711d                	addi	sp,sp,-96
20403928:	ce86                	sw	ra,92(sp)
2040392a:	cc96                	sw	t0,88(sp)
2040392c:	ca9a                	sw	t1,84(sp)
2040392e:	c89e                	sw	t2,80(sp)
20403930:	c6a2                	sw	s0,76(sp)
20403932:	c4aa                	sw	a0,72(sp)
20403934:	c2ae                	sw	a1,68(sp)
20403936:	c0b2                	sw	a2,64(sp)
20403938:	de36                	sw	a3,60(sp)
2040393a:	dc3a                	sw	a4,56(sp)
2040393c:	da3e                	sw	a5,52(sp)
2040393e:	d842                	sw	a6,48(sp)
20403940:	d646                	sw	a7,44(sp)
20403942:	d472                	sw	t3,40(sp)
20403944:	d276                	sw	t4,36(sp)
20403946:	d07a                	sw	t5,32(sp)
20403948:	ce7e                	sw	t6,28(sp)
2040394a:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:225
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC2);
2040394c:	8adff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403950:	872a                	mv	a4,a0
20403952:	800007b7          	lui	a5,0x80000
20403956:	070a                	slli	a4,a4,0x2
20403958:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
2040395c:	97ba                	add	a5,a5,a4
2040395e:	439c                	lw	a5,0(a5)
20403960:	faf42623          	sw	a5,-84(s0)
20403964:	fac42783          	lw	a5,-84(s0)
20403968:	c78d                	beqz	a5,20403992 <metal_lc2_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:225 (discriminator 1)
2040396a:	fac42503          	lw	a0,-84(s0)
2040396e:	80dff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403972:	faa42423          	sw	a0,-88(s0)
20403976:	fa842783          	lw	a5,-88(s0)
2040397a:	2487a783          	lw	a5,584(a5)
2040397e:	faf42223          	sw	a5,-92(s0)
20403982:	fa842783          	lw	a5,-88(s0)
20403986:	2407a783          	lw	a5,576(a5)
2040398a:	fa442583          	lw	a1,-92(s0)
2040398e:	4549                	li	a0,18
20403990:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:226
}
20403992:	0001                	nop
20403994:	40f6                	lw	ra,92(sp)
20403996:	42e6                	lw	t0,88(sp)
20403998:	4356                	lw	t1,84(sp)
2040399a:	43c6                	lw	t2,80(sp)
2040399c:	4436                	lw	s0,76(sp)
2040399e:	4526                	lw	a0,72(sp)
204039a0:	4596                	lw	a1,68(sp)
204039a2:	4606                	lw	a2,64(sp)
204039a4:	56f2                	lw	a3,60(sp)
204039a6:	5762                	lw	a4,56(sp)
204039a8:	57d2                	lw	a5,52(sp)
204039aa:	5842                	lw	a6,48(sp)
204039ac:	58b2                	lw	a7,44(sp)
204039ae:	5e22                	lw	t3,40(sp)
204039b0:	5e92                	lw	t4,36(sp)
204039b2:	5f02                	lw	t5,32(sp)
204039b4:	4ff2                	lw	t6,28(sp)
204039b6:	6125                	addi	sp,sp,96
204039b8:	30200073          	mret

204039bc <metal_lc3_interrupt_vector_handler>:
metal_lc3_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:229

/* The metal_lc3_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc3_interrupt_vector_handler(void) {
204039bc:	711d                	addi	sp,sp,-96
204039be:	ce86                	sw	ra,92(sp)
204039c0:	cc96                	sw	t0,88(sp)
204039c2:	ca9a                	sw	t1,84(sp)
204039c4:	c89e                	sw	t2,80(sp)
204039c6:	c6a2                	sw	s0,76(sp)
204039c8:	c4aa                	sw	a0,72(sp)
204039ca:	c2ae                	sw	a1,68(sp)
204039cc:	c0b2                	sw	a2,64(sp)
204039ce:	de36                	sw	a3,60(sp)
204039d0:	dc3a                	sw	a4,56(sp)
204039d2:	da3e                	sw	a5,52(sp)
204039d4:	d842                	sw	a6,48(sp)
204039d6:	d646                	sw	a7,44(sp)
204039d8:	d472                	sw	t3,40(sp)
204039da:	d276                	sw	t4,36(sp)
204039dc:	d07a                	sw	t5,32(sp)
204039de:	ce7e                	sw	t6,28(sp)
204039e0:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:230
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC3);
204039e2:	817ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
204039e6:	872a                	mv	a4,a0
204039e8:	800007b7          	lui	a5,0x80000
204039ec:	070a                	slli	a4,a4,0x2
204039ee:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
204039f2:	97ba                	add	a5,a5,a4
204039f4:	439c                	lw	a5,0(a5)
204039f6:	faf42623          	sw	a5,-84(s0)
204039fa:	fac42783          	lw	a5,-84(s0)
204039fe:	c78d                	beqz	a5,20403a28 <metal_lc3_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:230 (discriminator 1)
20403a00:	fac42503          	lw	a0,-84(s0)
20403a04:	f76ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403a08:	faa42423          	sw	a0,-88(s0)
20403a0c:	fa842783          	lw	a5,-88(s0)
20403a10:	2607a783          	lw	a5,608(a5)
20403a14:	faf42223          	sw	a5,-92(s0)
20403a18:	fa842783          	lw	a5,-88(s0)
20403a1c:	2587a783          	lw	a5,600(a5)
20403a20:	fa442583          	lw	a1,-92(s0)
20403a24:	454d                	li	a0,19
20403a26:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:231
}
20403a28:	0001                	nop
20403a2a:	40f6                	lw	ra,92(sp)
20403a2c:	42e6                	lw	t0,88(sp)
20403a2e:	4356                	lw	t1,84(sp)
20403a30:	43c6                	lw	t2,80(sp)
20403a32:	4436                	lw	s0,76(sp)
20403a34:	4526                	lw	a0,72(sp)
20403a36:	4596                	lw	a1,68(sp)
20403a38:	4606                	lw	a2,64(sp)
20403a3a:	56f2                	lw	a3,60(sp)
20403a3c:	5762                	lw	a4,56(sp)
20403a3e:	57d2                	lw	a5,52(sp)
20403a40:	5842                	lw	a6,48(sp)
20403a42:	58b2                	lw	a7,44(sp)
20403a44:	5e22                	lw	t3,40(sp)
20403a46:	5e92                	lw	t4,36(sp)
20403a48:	5f02                	lw	t5,32(sp)
20403a4a:	4ff2                	lw	t6,28(sp)
20403a4c:	6125                	addi	sp,sp,96
20403a4e:	30200073          	mret

20403a52 <metal_lc4_interrupt_vector_handler>:
metal_lc4_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:234

/* The metal_lc4_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc4_interrupt_vector_handler(void) {
20403a52:	711d                	addi	sp,sp,-96
20403a54:	ce86                	sw	ra,92(sp)
20403a56:	cc96                	sw	t0,88(sp)
20403a58:	ca9a                	sw	t1,84(sp)
20403a5a:	c89e                	sw	t2,80(sp)
20403a5c:	c6a2                	sw	s0,76(sp)
20403a5e:	c4aa                	sw	a0,72(sp)
20403a60:	c2ae                	sw	a1,68(sp)
20403a62:	c0b2                	sw	a2,64(sp)
20403a64:	de36                	sw	a3,60(sp)
20403a66:	dc3a                	sw	a4,56(sp)
20403a68:	da3e                	sw	a5,52(sp)
20403a6a:	d842                	sw	a6,48(sp)
20403a6c:	d646                	sw	a7,44(sp)
20403a6e:	d472                	sw	t3,40(sp)
20403a70:	d276                	sw	t4,36(sp)
20403a72:	d07a                	sw	t5,32(sp)
20403a74:	ce7e                	sw	t6,28(sp)
20403a76:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:235
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC4);
20403a78:	f80ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403a7c:	872a                	mv	a4,a0
20403a7e:	800007b7          	lui	a5,0x80000
20403a82:	070a                	slli	a4,a4,0x2
20403a84:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403a88:	97ba                	add	a5,a5,a4
20403a8a:	439c                	lw	a5,0(a5)
20403a8c:	faf42623          	sw	a5,-84(s0)
20403a90:	fac42783          	lw	a5,-84(s0)
20403a94:	c78d                	beqz	a5,20403abe <metal_lc4_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:235 (discriminator 1)
20403a96:	fac42503          	lw	a0,-84(s0)
20403a9a:	ee0ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403a9e:	faa42423          	sw	a0,-88(s0)
20403aa2:	fa842783          	lw	a5,-88(s0)
20403aa6:	2787a783          	lw	a5,632(a5)
20403aaa:	faf42223          	sw	a5,-92(s0)
20403aae:	fa842783          	lw	a5,-88(s0)
20403ab2:	2707a783          	lw	a5,624(a5)
20403ab6:	fa442583          	lw	a1,-92(s0)
20403aba:	4551                	li	a0,20
20403abc:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:236
}
20403abe:	0001                	nop
20403ac0:	40f6                	lw	ra,92(sp)
20403ac2:	42e6                	lw	t0,88(sp)
20403ac4:	4356                	lw	t1,84(sp)
20403ac6:	43c6                	lw	t2,80(sp)
20403ac8:	4436                	lw	s0,76(sp)
20403aca:	4526                	lw	a0,72(sp)
20403acc:	4596                	lw	a1,68(sp)
20403ace:	4606                	lw	a2,64(sp)
20403ad0:	56f2                	lw	a3,60(sp)
20403ad2:	5762                	lw	a4,56(sp)
20403ad4:	57d2                	lw	a5,52(sp)
20403ad6:	5842                	lw	a6,48(sp)
20403ad8:	58b2                	lw	a7,44(sp)
20403ada:	5e22                	lw	t3,40(sp)
20403adc:	5e92                	lw	t4,36(sp)
20403ade:	5f02                	lw	t5,32(sp)
20403ae0:	4ff2                	lw	t6,28(sp)
20403ae2:	6125                	addi	sp,sp,96
20403ae4:	30200073          	mret

20403ae8 <metal_lc5_interrupt_vector_handler>:
metal_lc5_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:239

/* The metal_lc5_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc5_interrupt_vector_handler(void) {
20403ae8:	711d                	addi	sp,sp,-96
20403aea:	ce86                	sw	ra,92(sp)
20403aec:	cc96                	sw	t0,88(sp)
20403aee:	ca9a                	sw	t1,84(sp)
20403af0:	c89e                	sw	t2,80(sp)
20403af2:	c6a2                	sw	s0,76(sp)
20403af4:	c4aa                	sw	a0,72(sp)
20403af6:	c2ae                	sw	a1,68(sp)
20403af8:	c0b2                	sw	a2,64(sp)
20403afa:	de36                	sw	a3,60(sp)
20403afc:	dc3a                	sw	a4,56(sp)
20403afe:	da3e                	sw	a5,52(sp)
20403b00:	d842                	sw	a6,48(sp)
20403b02:	d646                	sw	a7,44(sp)
20403b04:	d472                	sw	t3,40(sp)
20403b06:	d276                	sw	t4,36(sp)
20403b08:	d07a                	sw	t5,32(sp)
20403b0a:	ce7e                	sw	t6,28(sp)
20403b0c:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:240
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC5);
20403b0e:	eeaff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403b12:	872a                	mv	a4,a0
20403b14:	800007b7          	lui	a5,0x80000
20403b18:	070a                	slli	a4,a4,0x2
20403b1a:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403b1e:	97ba                	add	a5,a5,a4
20403b20:	439c                	lw	a5,0(a5)
20403b22:	faf42623          	sw	a5,-84(s0)
20403b26:	fac42783          	lw	a5,-84(s0)
20403b2a:	c78d                	beqz	a5,20403b54 <metal_lc5_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:240 (discriminator 1)
20403b2c:	fac42503          	lw	a0,-84(s0)
20403b30:	e4aff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403b34:	faa42423          	sw	a0,-88(s0)
20403b38:	fa842783          	lw	a5,-88(s0)
20403b3c:	2907a783          	lw	a5,656(a5)
20403b40:	faf42223          	sw	a5,-92(s0)
20403b44:	fa842783          	lw	a5,-88(s0)
20403b48:	2887a783          	lw	a5,648(a5)
20403b4c:	fa442583          	lw	a1,-92(s0)
20403b50:	4555                	li	a0,21
20403b52:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:241
}
20403b54:	0001                	nop
20403b56:	40f6                	lw	ra,92(sp)
20403b58:	42e6                	lw	t0,88(sp)
20403b5a:	4356                	lw	t1,84(sp)
20403b5c:	43c6                	lw	t2,80(sp)
20403b5e:	4436                	lw	s0,76(sp)
20403b60:	4526                	lw	a0,72(sp)
20403b62:	4596                	lw	a1,68(sp)
20403b64:	4606                	lw	a2,64(sp)
20403b66:	56f2                	lw	a3,60(sp)
20403b68:	5762                	lw	a4,56(sp)
20403b6a:	57d2                	lw	a5,52(sp)
20403b6c:	5842                	lw	a6,48(sp)
20403b6e:	58b2                	lw	a7,44(sp)
20403b70:	5e22                	lw	t3,40(sp)
20403b72:	5e92                	lw	t4,36(sp)
20403b74:	5f02                	lw	t5,32(sp)
20403b76:	4ff2                	lw	t6,28(sp)
20403b78:	6125                	addi	sp,sp,96
20403b7a:	30200073          	mret

20403b7e <metal_lc6_interrupt_vector_handler>:
metal_lc6_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:244

/* The metal_lc6_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc6_interrupt_vector_handler(void) {
20403b7e:	711d                	addi	sp,sp,-96
20403b80:	ce86                	sw	ra,92(sp)
20403b82:	cc96                	sw	t0,88(sp)
20403b84:	ca9a                	sw	t1,84(sp)
20403b86:	c89e                	sw	t2,80(sp)
20403b88:	c6a2                	sw	s0,76(sp)
20403b8a:	c4aa                	sw	a0,72(sp)
20403b8c:	c2ae                	sw	a1,68(sp)
20403b8e:	c0b2                	sw	a2,64(sp)
20403b90:	de36                	sw	a3,60(sp)
20403b92:	dc3a                	sw	a4,56(sp)
20403b94:	da3e                	sw	a5,52(sp)
20403b96:	d842                	sw	a6,48(sp)
20403b98:	d646                	sw	a7,44(sp)
20403b9a:	d472                	sw	t3,40(sp)
20403b9c:	d276                	sw	t4,36(sp)
20403b9e:	d07a                	sw	t5,32(sp)
20403ba0:	ce7e                	sw	t6,28(sp)
20403ba2:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:245
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC6);
20403ba4:	e54ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403ba8:	872a                	mv	a4,a0
20403baa:	800007b7          	lui	a5,0x80000
20403bae:	070a                	slli	a4,a4,0x2
20403bb0:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403bb4:	97ba                	add	a5,a5,a4
20403bb6:	439c                	lw	a5,0(a5)
20403bb8:	faf42623          	sw	a5,-84(s0)
20403bbc:	fac42783          	lw	a5,-84(s0)
20403bc0:	c78d                	beqz	a5,20403bea <metal_lc6_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:245 (discriminator 1)
20403bc2:	fac42503          	lw	a0,-84(s0)
20403bc6:	db4ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403bca:	faa42423          	sw	a0,-88(s0)
20403bce:	fa842783          	lw	a5,-88(s0)
20403bd2:	2a87a783          	lw	a5,680(a5)
20403bd6:	faf42223          	sw	a5,-92(s0)
20403bda:	fa842783          	lw	a5,-88(s0)
20403bde:	2a07a783          	lw	a5,672(a5)
20403be2:	fa442583          	lw	a1,-92(s0)
20403be6:	4559                	li	a0,22
20403be8:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:246
}
20403bea:	0001                	nop
20403bec:	40f6                	lw	ra,92(sp)
20403bee:	42e6                	lw	t0,88(sp)
20403bf0:	4356                	lw	t1,84(sp)
20403bf2:	43c6                	lw	t2,80(sp)
20403bf4:	4436                	lw	s0,76(sp)
20403bf6:	4526                	lw	a0,72(sp)
20403bf8:	4596                	lw	a1,68(sp)
20403bfa:	4606                	lw	a2,64(sp)
20403bfc:	56f2                	lw	a3,60(sp)
20403bfe:	5762                	lw	a4,56(sp)
20403c00:	57d2                	lw	a5,52(sp)
20403c02:	5842                	lw	a6,48(sp)
20403c04:	58b2                	lw	a7,44(sp)
20403c06:	5e22                	lw	t3,40(sp)
20403c08:	5e92                	lw	t4,36(sp)
20403c0a:	5f02                	lw	t5,32(sp)
20403c0c:	4ff2                	lw	t6,28(sp)
20403c0e:	6125                	addi	sp,sp,96
20403c10:	30200073          	mret

20403c14 <metal_lc7_interrupt_vector_handler>:
metal_lc7_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:249

/* The metal_lc7_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc7_interrupt_vector_handler(void) {
20403c14:	711d                	addi	sp,sp,-96
20403c16:	ce86                	sw	ra,92(sp)
20403c18:	cc96                	sw	t0,88(sp)
20403c1a:	ca9a                	sw	t1,84(sp)
20403c1c:	c89e                	sw	t2,80(sp)
20403c1e:	c6a2                	sw	s0,76(sp)
20403c20:	c4aa                	sw	a0,72(sp)
20403c22:	c2ae                	sw	a1,68(sp)
20403c24:	c0b2                	sw	a2,64(sp)
20403c26:	de36                	sw	a3,60(sp)
20403c28:	dc3a                	sw	a4,56(sp)
20403c2a:	da3e                	sw	a5,52(sp)
20403c2c:	d842                	sw	a6,48(sp)
20403c2e:	d646                	sw	a7,44(sp)
20403c30:	d472                	sw	t3,40(sp)
20403c32:	d276                	sw	t4,36(sp)
20403c34:	d07a                	sw	t5,32(sp)
20403c36:	ce7e                	sw	t6,28(sp)
20403c38:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:250
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC7);
20403c3a:	dbeff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403c3e:	872a                	mv	a4,a0
20403c40:	800007b7          	lui	a5,0x80000
20403c44:	070a                	slli	a4,a4,0x2
20403c46:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403c4a:	97ba                	add	a5,a5,a4
20403c4c:	439c                	lw	a5,0(a5)
20403c4e:	faf42623          	sw	a5,-84(s0)
20403c52:	fac42783          	lw	a5,-84(s0)
20403c56:	c78d                	beqz	a5,20403c80 <metal_lc7_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:250 (discriminator 1)
20403c58:	fac42503          	lw	a0,-84(s0)
20403c5c:	d1eff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403c60:	faa42423          	sw	a0,-88(s0)
20403c64:	fa842783          	lw	a5,-88(s0)
20403c68:	2c07a783          	lw	a5,704(a5)
20403c6c:	faf42223          	sw	a5,-92(s0)
20403c70:	fa842783          	lw	a5,-88(s0)
20403c74:	2b87a783          	lw	a5,696(a5)
20403c78:	fa442583          	lw	a1,-92(s0)
20403c7c:	455d                	li	a0,23
20403c7e:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:251
}
20403c80:	0001                	nop
20403c82:	40f6                	lw	ra,92(sp)
20403c84:	42e6                	lw	t0,88(sp)
20403c86:	4356                	lw	t1,84(sp)
20403c88:	43c6                	lw	t2,80(sp)
20403c8a:	4436                	lw	s0,76(sp)
20403c8c:	4526                	lw	a0,72(sp)
20403c8e:	4596                	lw	a1,68(sp)
20403c90:	4606                	lw	a2,64(sp)
20403c92:	56f2                	lw	a3,60(sp)
20403c94:	5762                	lw	a4,56(sp)
20403c96:	57d2                	lw	a5,52(sp)
20403c98:	5842                	lw	a6,48(sp)
20403c9a:	58b2                	lw	a7,44(sp)
20403c9c:	5e22                	lw	t3,40(sp)
20403c9e:	5e92                	lw	t4,36(sp)
20403ca0:	5f02                	lw	t5,32(sp)
20403ca2:	4ff2                	lw	t6,28(sp)
20403ca4:	6125                	addi	sp,sp,96
20403ca6:	30200073          	mret

20403caa <metal_lc8_interrupt_vector_handler>:
metal_lc8_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:254

/* The metal_lc8_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc8_interrupt_vector_handler(void) {
20403caa:	711d                	addi	sp,sp,-96
20403cac:	ce86                	sw	ra,92(sp)
20403cae:	cc96                	sw	t0,88(sp)
20403cb0:	ca9a                	sw	t1,84(sp)
20403cb2:	c89e                	sw	t2,80(sp)
20403cb4:	c6a2                	sw	s0,76(sp)
20403cb6:	c4aa                	sw	a0,72(sp)
20403cb8:	c2ae                	sw	a1,68(sp)
20403cba:	c0b2                	sw	a2,64(sp)
20403cbc:	de36                	sw	a3,60(sp)
20403cbe:	dc3a                	sw	a4,56(sp)
20403cc0:	da3e                	sw	a5,52(sp)
20403cc2:	d842                	sw	a6,48(sp)
20403cc4:	d646                	sw	a7,44(sp)
20403cc6:	d472                	sw	t3,40(sp)
20403cc8:	d276                	sw	t4,36(sp)
20403cca:	d07a                	sw	t5,32(sp)
20403ccc:	ce7e                	sw	t6,28(sp)
20403cce:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:255
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC8);
20403cd0:	d28ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403cd4:	872a                	mv	a4,a0
20403cd6:	800007b7          	lui	a5,0x80000
20403cda:	070a                	slli	a4,a4,0x2
20403cdc:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403ce0:	97ba                	add	a5,a5,a4
20403ce2:	439c                	lw	a5,0(a5)
20403ce4:	faf42623          	sw	a5,-84(s0)
20403ce8:	fac42783          	lw	a5,-84(s0)
20403cec:	c78d                	beqz	a5,20403d16 <metal_lc8_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:255 (discriminator 1)
20403cee:	fac42503          	lw	a0,-84(s0)
20403cf2:	c88ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403cf6:	faa42423          	sw	a0,-88(s0)
20403cfa:	fa842783          	lw	a5,-88(s0)
20403cfe:	2d87a783          	lw	a5,728(a5)
20403d02:	faf42223          	sw	a5,-92(s0)
20403d06:	fa842783          	lw	a5,-88(s0)
20403d0a:	2d07a783          	lw	a5,720(a5)
20403d0e:	fa442583          	lw	a1,-92(s0)
20403d12:	4561                	li	a0,24
20403d14:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:256
}
20403d16:	0001                	nop
20403d18:	40f6                	lw	ra,92(sp)
20403d1a:	42e6                	lw	t0,88(sp)
20403d1c:	4356                	lw	t1,84(sp)
20403d1e:	43c6                	lw	t2,80(sp)
20403d20:	4436                	lw	s0,76(sp)
20403d22:	4526                	lw	a0,72(sp)
20403d24:	4596                	lw	a1,68(sp)
20403d26:	4606                	lw	a2,64(sp)
20403d28:	56f2                	lw	a3,60(sp)
20403d2a:	5762                	lw	a4,56(sp)
20403d2c:	57d2                	lw	a5,52(sp)
20403d2e:	5842                	lw	a6,48(sp)
20403d30:	58b2                	lw	a7,44(sp)
20403d32:	5e22                	lw	t3,40(sp)
20403d34:	5e92                	lw	t4,36(sp)
20403d36:	5f02                	lw	t5,32(sp)
20403d38:	4ff2                	lw	t6,28(sp)
20403d3a:	6125                	addi	sp,sp,96
20403d3c:	30200073          	mret

20403d40 <metal_lc9_interrupt_vector_handler>:
metal_lc9_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:259

/* The metal_lc9_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt)) metal_lc9_interrupt_vector_handler(void) {
20403d40:	711d                	addi	sp,sp,-96
20403d42:	ce86                	sw	ra,92(sp)
20403d44:	cc96                	sw	t0,88(sp)
20403d46:	ca9a                	sw	t1,84(sp)
20403d48:	c89e                	sw	t2,80(sp)
20403d4a:	c6a2                	sw	s0,76(sp)
20403d4c:	c4aa                	sw	a0,72(sp)
20403d4e:	c2ae                	sw	a1,68(sp)
20403d50:	c0b2                	sw	a2,64(sp)
20403d52:	de36                	sw	a3,60(sp)
20403d54:	dc3a                	sw	a4,56(sp)
20403d56:	da3e                	sw	a5,52(sp)
20403d58:	d842                	sw	a6,48(sp)
20403d5a:	d646                	sw	a7,44(sp)
20403d5c:	d472                	sw	t3,40(sp)
20403d5e:	d276                	sw	t4,36(sp)
20403d60:	d07a                	sw	t5,32(sp)
20403d62:	ce7e                	sw	t6,28(sp)
20403d64:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:260
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC9);
20403d66:	c92ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403d6a:	872a                	mv	a4,a0
20403d6c:	800007b7          	lui	a5,0x80000
20403d70:	070a                	slli	a4,a4,0x2
20403d72:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403d76:	97ba                	add	a5,a5,a4
20403d78:	439c                	lw	a5,0(a5)
20403d7a:	faf42623          	sw	a5,-84(s0)
20403d7e:	fac42783          	lw	a5,-84(s0)
20403d82:	c78d                	beqz	a5,20403dac <metal_lc9_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:260 (discriminator 1)
20403d84:	fac42503          	lw	a0,-84(s0)
20403d88:	bf2ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403d8c:	faa42423          	sw	a0,-88(s0)
20403d90:	fa842783          	lw	a5,-88(s0)
20403d94:	2f07a783          	lw	a5,752(a5)
20403d98:	faf42223          	sw	a5,-92(s0)
20403d9c:	fa842783          	lw	a5,-88(s0)
20403da0:	2e87a783          	lw	a5,744(a5)
20403da4:	fa442583          	lw	a1,-92(s0)
20403da8:	4565                	li	a0,25
20403daa:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:261
}
20403dac:	0001                	nop
20403dae:	40f6                	lw	ra,92(sp)
20403db0:	42e6                	lw	t0,88(sp)
20403db2:	4356                	lw	t1,84(sp)
20403db4:	43c6                	lw	t2,80(sp)
20403db6:	4436                	lw	s0,76(sp)
20403db8:	4526                	lw	a0,72(sp)
20403dba:	4596                	lw	a1,68(sp)
20403dbc:	4606                	lw	a2,64(sp)
20403dbe:	56f2                	lw	a3,60(sp)
20403dc0:	5762                	lw	a4,56(sp)
20403dc2:	57d2                	lw	a5,52(sp)
20403dc4:	5842                	lw	a6,48(sp)
20403dc6:	58b2                	lw	a7,44(sp)
20403dc8:	5e22                	lw	t3,40(sp)
20403dca:	5e92                	lw	t4,36(sp)
20403dcc:	5f02                	lw	t5,32(sp)
20403dce:	4ff2                	lw	t6,28(sp)
20403dd0:	6125                	addi	sp,sp,96
20403dd2:	30200073          	mret

20403dd6 <metal_lc10_interrupt_vector_handler>:
metal_lc10_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:265

/* The metal_lc10_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc10_interrupt_vector_handler(void) {
20403dd6:	711d                	addi	sp,sp,-96
20403dd8:	ce86                	sw	ra,92(sp)
20403dda:	cc96                	sw	t0,88(sp)
20403ddc:	ca9a                	sw	t1,84(sp)
20403dde:	c89e                	sw	t2,80(sp)
20403de0:	c6a2                	sw	s0,76(sp)
20403de2:	c4aa                	sw	a0,72(sp)
20403de4:	c2ae                	sw	a1,68(sp)
20403de6:	c0b2                	sw	a2,64(sp)
20403de8:	de36                	sw	a3,60(sp)
20403dea:	dc3a                	sw	a4,56(sp)
20403dec:	da3e                	sw	a5,52(sp)
20403dee:	d842                	sw	a6,48(sp)
20403df0:	d646                	sw	a7,44(sp)
20403df2:	d472                	sw	t3,40(sp)
20403df4:	d276                	sw	t4,36(sp)
20403df6:	d07a                	sw	t5,32(sp)
20403df8:	ce7e                	sw	t6,28(sp)
20403dfa:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:266
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC10);
20403dfc:	bfcff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403e00:	872a                	mv	a4,a0
20403e02:	800007b7          	lui	a5,0x80000
20403e06:	070a                	slli	a4,a4,0x2
20403e08:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403e0c:	97ba                	add	a5,a5,a4
20403e0e:	439c                	lw	a5,0(a5)
20403e10:	faf42623          	sw	a5,-84(s0)
20403e14:	fac42783          	lw	a5,-84(s0)
20403e18:	c78d                	beqz	a5,20403e42 <metal_lc10_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:266 (discriminator 1)
20403e1a:	fac42503          	lw	a0,-84(s0)
20403e1e:	b5cff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403e22:	faa42423          	sw	a0,-88(s0)
20403e26:	fa842783          	lw	a5,-88(s0)
20403e2a:	3087a783          	lw	a5,776(a5)
20403e2e:	faf42223          	sw	a5,-92(s0)
20403e32:	fa842783          	lw	a5,-88(s0)
20403e36:	3007a783          	lw	a5,768(a5)
20403e3a:	fa442583          	lw	a1,-92(s0)
20403e3e:	4569                	li	a0,26
20403e40:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:267
}
20403e42:	0001                	nop
20403e44:	40f6                	lw	ra,92(sp)
20403e46:	42e6                	lw	t0,88(sp)
20403e48:	4356                	lw	t1,84(sp)
20403e4a:	43c6                	lw	t2,80(sp)
20403e4c:	4436                	lw	s0,76(sp)
20403e4e:	4526                	lw	a0,72(sp)
20403e50:	4596                	lw	a1,68(sp)
20403e52:	4606                	lw	a2,64(sp)
20403e54:	56f2                	lw	a3,60(sp)
20403e56:	5762                	lw	a4,56(sp)
20403e58:	57d2                	lw	a5,52(sp)
20403e5a:	5842                	lw	a6,48(sp)
20403e5c:	58b2                	lw	a7,44(sp)
20403e5e:	5e22                	lw	t3,40(sp)
20403e60:	5e92                	lw	t4,36(sp)
20403e62:	5f02                	lw	t5,32(sp)
20403e64:	4ff2                	lw	t6,28(sp)
20403e66:	6125                	addi	sp,sp,96
20403e68:	30200073          	mret

20403e6c <metal_lc11_interrupt_vector_handler>:
metal_lc11_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:271

/* The metal_lc11_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc11_interrupt_vector_handler(void) {
20403e6c:	711d                	addi	sp,sp,-96
20403e6e:	ce86                	sw	ra,92(sp)
20403e70:	cc96                	sw	t0,88(sp)
20403e72:	ca9a                	sw	t1,84(sp)
20403e74:	c89e                	sw	t2,80(sp)
20403e76:	c6a2                	sw	s0,76(sp)
20403e78:	c4aa                	sw	a0,72(sp)
20403e7a:	c2ae                	sw	a1,68(sp)
20403e7c:	c0b2                	sw	a2,64(sp)
20403e7e:	de36                	sw	a3,60(sp)
20403e80:	dc3a                	sw	a4,56(sp)
20403e82:	da3e                	sw	a5,52(sp)
20403e84:	d842                	sw	a6,48(sp)
20403e86:	d646                	sw	a7,44(sp)
20403e88:	d472                	sw	t3,40(sp)
20403e8a:	d276                	sw	t4,36(sp)
20403e8c:	d07a                	sw	t5,32(sp)
20403e8e:	ce7e                	sw	t6,28(sp)
20403e90:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:272
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC11);
20403e92:	b66ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403e96:	872a                	mv	a4,a0
20403e98:	800007b7          	lui	a5,0x80000
20403e9c:	070a                	slli	a4,a4,0x2
20403e9e:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403ea2:	97ba                	add	a5,a5,a4
20403ea4:	439c                	lw	a5,0(a5)
20403ea6:	faf42623          	sw	a5,-84(s0)
20403eaa:	fac42783          	lw	a5,-84(s0)
20403eae:	c78d                	beqz	a5,20403ed8 <metal_lc11_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:272 (discriminator 1)
20403eb0:	fac42503          	lw	a0,-84(s0)
20403eb4:	ac6ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403eb8:	faa42423          	sw	a0,-88(s0)
20403ebc:	fa842783          	lw	a5,-88(s0)
20403ec0:	3207a783          	lw	a5,800(a5)
20403ec4:	faf42223          	sw	a5,-92(s0)
20403ec8:	fa842783          	lw	a5,-88(s0)
20403ecc:	3187a783          	lw	a5,792(a5)
20403ed0:	fa442583          	lw	a1,-92(s0)
20403ed4:	456d                	li	a0,27
20403ed6:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:273
}
20403ed8:	0001                	nop
20403eda:	40f6                	lw	ra,92(sp)
20403edc:	42e6                	lw	t0,88(sp)
20403ede:	4356                	lw	t1,84(sp)
20403ee0:	43c6                	lw	t2,80(sp)
20403ee2:	4436                	lw	s0,76(sp)
20403ee4:	4526                	lw	a0,72(sp)
20403ee6:	4596                	lw	a1,68(sp)
20403ee8:	4606                	lw	a2,64(sp)
20403eea:	56f2                	lw	a3,60(sp)
20403eec:	5762                	lw	a4,56(sp)
20403eee:	57d2                	lw	a5,52(sp)
20403ef0:	5842                	lw	a6,48(sp)
20403ef2:	58b2                	lw	a7,44(sp)
20403ef4:	5e22                	lw	t3,40(sp)
20403ef6:	5e92                	lw	t4,36(sp)
20403ef8:	5f02                	lw	t5,32(sp)
20403efa:	4ff2                	lw	t6,28(sp)
20403efc:	6125                	addi	sp,sp,96
20403efe:	30200073          	mret

20403f02 <metal_lc12_interrupt_vector_handler>:
metal_lc12_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:277

/* The metal_lc12_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc12_interrupt_vector_handler(void) {
20403f02:	711d                	addi	sp,sp,-96
20403f04:	ce86                	sw	ra,92(sp)
20403f06:	cc96                	sw	t0,88(sp)
20403f08:	ca9a                	sw	t1,84(sp)
20403f0a:	c89e                	sw	t2,80(sp)
20403f0c:	c6a2                	sw	s0,76(sp)
20403f0e:	c4aa                	sw	a0,72(sp)
20403f10:	c2ae                	sw	a1,68(sp)
20403f12:	c0b2                	sw	a2,64(sp)
20403f14:	de36                	sw	a3,60(sp)
20403f16:	dc3a                	sw	a4,56(sp)
20403f18:	da3e                	sw	a5,52(sp)
20403f1a:	d842                	sw	a6,48(sp)
20403f1c:	d646                	sw	a7,44(sp)
20403f1e:	d472                	sw	t3,40(sp)
20403f20:	d276                	sw	t4,36(sp)
20403f22:	d07a                	sw	t5,32(sp)
20403f24:	ce7e                	sw	t6,28(sp)
20403f26:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:278
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC12);
20403f28:	ad0ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403f2c:	872a                	mv	a4,a0
20403f2e:	800007b7          	lui	a5,0x80000
20403f32:	070a                	slli	a4,a4,0x2
20403f34:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403f38:	97ba                	add	a5,a5,a4
20403f3a:	439c                	lw	a5,0(a5)
20403f3c:	faf42623          	sw	a5,-84(s0)
20403f40:	fac42783          	lw	a5,-84(s0)
20403f44:	c78d                	beqz	a5,20403f6e <metal_lc12_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:278 (discriminator 1)
20403f46:	fac42503          	lw	a0,-84(s0)
20403f4a:	a30ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403f4e:	faa42423          	sw	a0,-88(s0)
20403f52:	fa842783          	lw	a5,-88(s0)
20403f56:	3387a783          	lw	a5,824(a5)
20403f5a:	faf42223          	sw	a5,-92(s0)
20403f5e:	fa842783          	lw	a5,-88(s0)
20403f62:	3307a783          	lw	a5,816(a5)
20403f66:	fa442583          	lw	a1,-92(s0)
20403f6a:	4571                	li	a0,28
20403f6c:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:279
}
20403f6e:	0001                	nop
20403f70:	40f6                	lw	ra,92(sp)
20403f72:	42e6                	lw	t0,88(sp)
20403f74:	4356                	lw	t1,84(sp)
20403f76:	43c6                	lw	t2,80(sp)
20403f78:	4436                	lw	s0,76(sp)
20403f7a:	4526                	lw	a0,72(sp)
20403f7c:	4596                	lw	a1,68(sp)
20403f7e:	4606                	lw	a2,64(sp)
20403f80:	56f2                	lw	a3,60(sp)
20403f82:	5762                	lw	a4,56(sp)
20403f84:	57d2                	lw	a5,52(sp)
20403f86:	5842                	lw	a6,48(sp)
20403f88:	58b2                	lw	a7,44(sp)
20403f8a:	5e22                	lw	t3,40(sp)
20403f8c:	5e92                	lw	t4,36(sp)
20403f8e:	5f02                	lw	t5,32(sp)
20403f90:	4ff2                	lw	t6,28(sp)
20403f92:	6125                	addi	sp,sp,96
20403f94:	30200073          	mret

20403f98 <metal_lc13_interrupt_vector_handler>:
metal_lc13_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:283

/* The metal_lc13_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc13_interrupt_vector_handler(void) {
20403f98:	711d                	addi	sp,sp,-96
20403f9a:	ce86                	sw	ra,92(sp)
20403f9c:	cc96                	sw	t0,88(sp)
20403f9e:	ca9a                	sw	t1,84(sp)
20403fa0:	c89e                	sw	t2,80(sp)
20403fa2:	c6a2                	sw	s0,76(sp)
20403fa4:	c4aa                	sw	a0,72(sp)
20403fa6:	c2ae                	sw	a1,68(sp)
20403fa8:	c0b2                	sw	a2,64(sp)
20403faa:	de36                	sw	a3,60(sp)
20403fac:	dc3a                	sw	a4,56(sp)
20403fae:	da3e                	sw	a5,52(sp)
20403fb0:	d842                	sw	a6,48(sp)
20403fb2:	d646                	sw	a7,44(sp)
20403fb4:	d472                	sw	t3,40(sp)
20403fb6:	d276                	sw	t4,36(sp)
20403fb8:	d07a                	sw	t5,32(sp)
20403fba:	ce7e                	sw	t6,28(sp)
20403fbc:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:284
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC13);
20403fbe:	a3aff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20403fc2:	872a                	mv	a4,a0
20403fc4:	800007b7          	lui	a5,0x80000
20403fc8:	070a                	slli	a4,a4,0x2
20403fca:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20403fce:	97ba                	add	a5,a5,a4
20403fd0:	439c                	lw	a5,0(a5)
20403fd2:	faf42623          	sw	a5,-84(s0)
20403fd6:	fac42783          	lw	a5,-84(s0)
20403fda:	c78d                	beqz	a5,20404004 <metal_lc13_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:284 (discriminator 1)
20403fdc:	fac42503          	lw	a0,-84(s0)
20403fe0:	99aff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20403fe4:	faa42423          	sw	a0,-88(s0)
20403fe8:	fa842783          	lw	a5,-88(s0)
20403fec:	3507a783          	lw	a5,848(a5)
20403ff0:	faf42223          	sw	a5,-92(s0)
20403ff4:	fa842783          	lw	a5,-88(s0)
20403ff8:	3487a783          	lw	a5,840(a5)
20403ffc:	fa442583          	lw	a1,-92(s0)
20404000:	4575                	li	a0,29
20404002:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:285
}
20404004:	0001                	nop
20404006:	40f6                	lw	ra,92(sp)
20404008:	42e6                	lw	t0,88(sp)
2040400a:	4356                	lw	t1,84(sp)
2040400c:	43c6                	lw	t2,80(sp)
2040400e:	4436                	lw	s0,76(sp)
20404010:	4526                	lw	a0,72(sp)
20404012:	4596                	lw	a1,68(sp)
20404014:	4606                	lw	a2,64(sp)
20404016:	56f2                	lw	a3,60(sp)
20404018:	5762                	lw	a4,56(sp)
2040401a:	57d2                	lw	a5,52(sp)
2040401c:	5842                	lw	a6,48(sp)
2040401e:	58b2                	lw	a7,44(sp)
20404020:	5e22                	lw	t3,40(sp)
20404022:	5e92                	lw	t4,36(sp)
20404024:	5f02                	lw	t5,32(sp)
20404026:	4ff2                	lw	t6,28(sp)
20404028:	6125                	addi	sp,sp,96
2040402a:	30200073          	mret

2040402e <metal_lc14_interrupt_vector_handler>:
metal_lc14_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:289

/* The metal_lc14_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc14_interrupt_vector_handler(void) {
2040402e:	711d                	addi	sp,sp,-96
20404030:	ce86                	sw	ra,92(sp)
20404032:	cc96                	sw	t0,88(sp)
20404034:	ca9a                	sw	t1,84(sp)
20404036:	c89e                	sw	t2,80(sp)
20404038:	c6a2                	sw	s0,76(sp)
2040403a:	c4aa                	sw	a0,72(sp)
2040403c:	c2ae                	sw	a1,68(sp)
2040403e:	c0b2                	sw	a2,64(sp)
20404040:	de36                	sw	a3,60(sp)
20404042:	dc3a                	sw	a4,56(sp)
20404044:	da3e                	sw	a5,52(sp)
20404046:	d842                	sw	a6,48(sp)
20404048:	d646                	sw	a7,44(sp)
2040404a:	d472                	sw	t3,40(sp)
2040404c:	d276                	sw	t4,36(sp)
2040404e:	d07a                	sw	t5,32(sp)
20404050:	ce7e                	sw	t6,28(sp)
20404052:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:290
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC14);
20404054:	9a4ff0ef          	jal	ra,204031f8 <__metal_myhart_id>
20404058:	872a                	mv	a4,a0
2040405a:	800007b7          	lui	a5,0x80000
2040405e:	070a                	slli	a4,a4,0x2
20404060:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20404064:	97ba                	add	a5,a5,a4
20404066:	439c                	lw	a5,0(a5)
20404068:	faf42623          	sw	a5,-84(s0)
2040406c:	fac42783          	lw	a5,-84(s0)
20404070:	c78d                	beqz	a5,2040409a <metal_lc14_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:290 (discriminator 1)
20404072:	fac42503          	lw	a0,-84(s0)
20404076:	904ff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
2040407a:	faa42423          	sw	a0,-88(s0)
2040407e:	fa842783          	lw	a5,-88(s0)
20404082:	3687a783          	lw	a5,872(a5)
20404086:	faf42223          	sw	a5,-92(s0)
2040408a:	fa842783          	lw	a5,-88(s0)
2040408e:	3607a783          	lw	a5,864(a5)
20404092:	fa442583          	lw	a1,-92(s0)
20404096:	4579                	li	a0,30
20404098:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:291
}
2040409a:	0001                	nop
2040409c:	40f6                	lw	ra,92(sp)
2040409e:	42e6                	lw	t0,88(sp)
204040a0:	4356                	lw	t1,84(sp)
204040a2:	43c6                	lw	t2,80(sp)
204040a4:	4436                	lw	s0,76(sp)
204040a6:	4526                	lw	a0,72(sp)
204040a8:	4596                	lw	a1,68(sp)
204040aa:	4606                	lw	a2,64(sp)
204040ac:	56f2                	lw	a3,60(sp)
204040ae:	5762                	lw	a4,56(sp)
204040b0:	57d2                	lw	a5,52(sp)
204040b2:	5842                	lw	a6,48(sp)
204040b4:	58b2                	lw	a7,44(sp)
204040b6:	5e22                	lw	t3,40(sp)
204040b8:	5e92                	lw	t4,36(sp)
204040ba:	5f02                	lw	t5,32(sp)
204040bc:	4ff2                	lw	t6,28(sp)
204040be:	6125                	addi	sp,sp,96
204040c0:	30200073          	mret

204040c4 <metal_lc15_interrupt_vector_handler>:
metal_lc15_interrupt_vector_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:295

/* The metal_lc15_interrupt_vector_handler() function can be redefined. */
void __attribute__((weak, interrupt))
metal_lc15_interrupt_vector_handler(void) {
204040c4:	711d                	addi	sp,sp,-96
204040c6:	ce86                	sw	ra,92(sp)
204040c8:	cc96                	sw	t0,88(sp)
204040ca:	ca9a                	sw	t1,84(sp)
204040cc:	c89e                	sw	t2,80(sp)
204040ce:	c6a2                	sw	s0,76(sp)
204040d0:	c4aa                	sw	a0,72(sp)
204040d2:	c2ae                	sw	a1,68(sp)
204040d4:	c0b2                	sw	a2,64(sp)
204040d6:	de36                	sw	a3,60(sp)
204040d8:	dc3a                	sw	a4,56(sp)
204040da:	da3e                	sw	a5,52(sp)
204040dc:	d842                	sw	a6,48(sp)
204040de:	d646                	sw	a7,44(sp)
204040e0:	d472                	sw	t3,40(sp)
204040e2:	d276                	sw	t4,36(sp)
204040e4:	d07a                	sw	t5,32(sp)
204040e6:	ce7e                	sw	t6,28(sp)
204040e8:	1080                	addi	s0,sp,96
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:296
    __METAL_IRQ_VECTOR_HANDLER(METAL_INTERRUPT_ID_LC15);
204040ea:	90eff0ef          	jal	ra,204031f8 <__metal_myhart_id>
204040ee:	872a                	mv	a4,a0
204040f0:	800007b7          	lui	a5,0x80000
204040f4:	070a                	slli	a4,a4,0x2
204040f6:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
204040fa:	97ba                	add	a5,a5,a4
204040fc:	439c                	lw	a5,0(a5)
204040fe:	faf42623          	sw	a5,-84(s0)
20404102:	fac42783          	lw	a5,-84(s0)
20404106:	c78d                	beqz	a5,20404130 <metal_lc15_interrupt_vector_handler+0x6c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:296 (discriminator 1)
20404108:	fac42503          	lw	a0,-84(s0)
2040410c:	86eff0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20404110:	faa42423          	sw	a0,-88(s0)
20404114:	fa842783          	lw	a5,-88(s0)
20404118:	3807a783          	lw	a5,896(a5)
2040411c:	faf42223          	sw	a5,-92(s0)
20404120:	fa842783          	lw	a5,-88(s0)
20404124:	3787a783          	lw	a5,888(a5)
20404128:	fa442583          	lw	a1,-92(s0)
2040412c:	457d                	li	a0,31
2040412e:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:297
}
20404130:	0001                	nop
20404132:	40f6                	lw	ra,92(sp)
20404134:	42e6                	lw	t0,88(sp)
20404136:	4356                	lw	t1,84(sp)
20404138:	43c6                	lw	t2,80(sp)
2040413a:	4436                	lw	s0,76(sp)
2040413c:	4526                	lw	a0,72(sp)
2040413e:	4596                	lw	a1,68(sp)
20404140:	4606                	lw	a2,64(sp)
20404142:	56f2                	lw	a3,60(sp)
20404144:	5762                	lw	a4,56(sp)
20404146:	57d2                	lw	a5,52(sp)
20404148:	5842                	lw	a6,48(sp)
2040414a:	58b2                	lw	a7,44(sp)
2040414c:	5e22                	lw	t3,40(sp)
2040414e:	5e92                	lw	t4,36(sp)
20404150:	5f02                	lw	t5,32(sp)
20404152:	4ff2                	lw	t6,28(sp)
20404154:	6125                	addi	sp,sp,96
20404156:	30200073          	mret

2040415a <__metal_controller_interrupt_vector_mode>:
__metal_controller_interrupt_vector_mode():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:299

metal_vector_mode __metal_controller_interrupt_vector_mode(void) {
2040415a:	1101                	addi	sp,sp,-32
2040415c:	ce22                	sw	s0,28(sp)
2040415e:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:302
    uintptr_t val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
20404160:	305027f3          	csrr	a5,mtvec
20404164:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:303
    val &= METAL_MTVEC_MASK;
20404168:	fec42783          	lw	a5,-20(s0)
2040416c:	03f7f793          	andi	a5,a5,63
20404170:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:305

    switch (val) {
20404174:	fec42703          	lw	a4,-20(s0)
20404178:	478d                	li	a5,3
2040417a:	02f70363          	beq	a4,a5,204041a0 <__metal_controller_interrupt_vector_mode+0x46>
2040417e:	fec42703          	lw	a4,-20(s0)
20404182:	478d                	li	a5,3
20404184:	02e7e263          	bltu	a5,a4,204041a8 <__metal_controller_interrupt_vector_mode+0x4e>
20404188:	fec42703          	lw	a4,-20(s0)
2040418c:	4785                	li	a5,1
2040418e:	00f70b63          	beq	a4,a5,204041a4 <__metal_controller_interrupt_vector_mode+0x4a>
20404192:	fec42703          	lw	a4,-20(s0)
20404196:	4789                	li	a5,2
20404198:	00f71863          	bne	a4,a5,204041a8 <__metal_controller_interrupt_vector_mode+0x4e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:307
    case METAL_MTVEC_CLIC:
        return METAL_SELECTIVE_VECTOR_MODE;
2040419c:	478d                	li	a5,3
2040419e:	a031                	j	204041aa <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:309
    case METAL_MTVEC_CLIC_VECTORED:
        return METAL_HARDWARE_VECTOR_MODE;
204041a0:	4791                	li	a5,4
204041a2:	a021                	j	204041aa <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:311
    case METAL_MTVEC_VECTORED:
        return METAL_VECTOR_MODE;
204041a4:	4785                	li	a5,1
204041a6:	a011                	j	204041aa <__metal_controller_interrupt_vector_mode+0x50>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:313
    }
    return METAL_DIRECT_MODE;
204041a8:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:314
}
204041aa:	853e                	mv	a0,a5
204041ac:	4472                	lw	s0,28(sp)
204041ae:	6105                	addi	sp,sp,32
204041b0:	8082                	ret

204041b2 <__metal_controller_interrupt_vector>:
__metal_controller_interrupt_vector():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:317

void __metal_controller_interrupt_vector(metal_vector_mode mode,
                                         void *vec_table) {
204041b2:	7179                	addi	sp,sp,-48
204041b4:	d622                	sw	s0,44(sp)
204041b6:	1800                	addi	s0,sp,48
204041b8:	fca42e23          	sw	a0,-36(s0)
204041bc:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:320
    uintptr_t trap_entry, val;

    __asm__ volatile("csrr %0, mtvec" : "=r"(val));
204041c0:	305027f3          	csrr	a5,mtvec
204041c4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:321
    val &= ~(METAL_MTVEC_CLIC_VECTORED | METAL_MTVEC_CLIC_RESERVED);
204041c8:	fec42783          	lw	a5,-20(s0)
204041cc:	fc07f793          	andi	a5,a5,-64
204041d0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:322
    trap_entry = (uintptr_t)vec_table;
204041d4:	fd842783          	lw	a5,-40(s0)
204041d8:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:324

    switch (mode) {
204041dc:	fdc42703          	lw	a4,-36(s0)
204041e0:	4791                	li	a5,4
204041e2:	04f70563          	beq	a4,a5,2040422c <__metal_controller_interrupt_vector+0x7a>
204041e6:	fdc42703          	lw	a4,-36(s0)
204041ea:	4791                	li	a5,4
204041ec:	06e7e863          	bltu	a5,a4,2040425c <__metal_controller_interrupt_vector+0xaa>
204041f0:	fdc42703          	lw	a4,-36(s0)
204041f4:	478d                	li	a5,3
204041f6:	06e7e363          	bltu	a5,a4,2040425c <__metal_controller_interrupt_vector+0xaa>
204041fa:	fdc42703          	lw	a4,-36(s0)
204041fe:	4789                	li	a5,2
20404200:	00f77b63          	bgeu	a4,a5,20404216 <__metal_controller_interrupt_vector+0x64>
20404204:	fdc42783          	lw	a5,-36(s0)
20404208:	c7a1                	beqz	a5,20404250 <__metal_controller_interrupt_vector+0x9e>
2040420a:	fdc42703          	lw	a4,-36(s0)
2040420e:	4785                	li	a5,1
20404210:	02f70963          	beq	a4,a5,20404242 <__metal_controller_interrupt_vector+0x90>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:344
    case METAL_DIRECT_MODE:
        __asm__ volatile(
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
        break;
    }
}
20404214:	a0a1                	j	2040425c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:327
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
20404216:	fe842783          	lw	a5,-24(s0)
2040421a:	30779073          	csrw	mtvt,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:328
        __asm__ volatile("csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC));
2040421e:	fec42783          	lw	a5,-20(s0)
20404222:	0027e793          	ori	a5,a5,2
20404226:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:329
        break;
2040422a:	a80d                	j	2040425c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:331
        __asm__ volatile("csrw 0x307, %0" ::"r"(trap_entry));
2040422c:	fe842783          	lw	a5,-24(s0)
20404230:	30779073          	csrw	mtvt,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:333
            "csrw mtvec, %0" ::"r"(val | METAL_MTVEC_CLIC_VECTORED));
20404234:	fec42783          	lw	a5,-20(s0)
20404238:	0037e793          	ori	a5,a5,3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:332
        __asm__ volatile(
2040423c:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:334
        break;
20404240:	a831                	j	2040425c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:337
            "csrw mtvec, %0" ::"r"(trap_entry | METAL_MTVEC_VECTORED));
20404242:	fe842783          	lw	a5,-24(s0)
20404246:	0017e793          	ori	a5,a5,1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:336
        __asm__ volatile(
2040424a:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:338
        break;
2040424e:	a039                	j	2040425c <__metal_controller_interrupt_vector+0xaa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:341
            "csrw mtvec, %0" ::"r"(trap_entry & ~METAL_MTVEC_CLIC_VECTORED));
20404250:	fe842783          	lw	a5,-24(s0)
20404254:	9bf1                	andi	a5,a5,-4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:340
        __asm__ volatile(
20404256:	30579073          	csrw	mtvec,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:342
        break;
2040425a:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:344
}
2040425c:	0001                	nop
2040425e:	5432                	lw	s0,44(sp)
20404260:	6145                	addi	sp,sp,48
20404262:	8082                	ret

20404264 <__metal_valid_interrupt_id>:
__metal_valid_interrupt_id():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:346

int __metal_valid_interrupt_id(int id) {
20404264:	1101                	addi	sp,sp,-32
20404266:	ce22                	sw	s0,28(sp)
20404268:	1000                	addi	s0,sp,32
2040426a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
2040426e:	fec42703          	lw	a4,-20(s0)
20404272:	47fd                	li	a5,31
20404274:	02e7c663          	blt	a5,a4,204042a0 <__metal_valid_interrupt_id+0x3c>
20404278:	fec42703          	lw	a4,-20(s0)
2040427c:	478d                	li	a5,3
2040427e:	02f74963          	blt	a4,a5,204042b0 <__metal_valid_interrupt_id+0x4c>
20404282:	fec42783          	lw	a5,-20(s0)
20404286:	4705                	li	a4,1
20404288:	00f71733          	sll	a4,a4,a5
2040428c:	77c5                	lui	a5,0xffff1
2040428e:	88878793          	addi	a5,a5,-1912 # ffff0888 <metal_segment_heap_target_end+0x7ffef0d8>
20404292:	8ff9                	and	a5,a5,a4
20404294:	00f037b3          	snez	a5,a5
20404298:	0ff7f793          	zext.b	a5,a5
2040429c:	eb81                	bnez	a5,204042ac <__metal_valid_interrupt_id+0x48>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:370
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
    case METAL_INTERRUPT_ID_BEU:
        return 1;
    default:
        break;
2040429e:	a809                	j	204042b0 <__metal_valid_interrupt_id+0x4c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:347
    switch (id) {
204042a0:	fec42703          	lw	a4,-20(s0)
204042a4:	08000793          	li	a5,128
204042a8:	00f71463          	bne	a4,a5,204042b0 <__metal_valid_interrupt_id+0x4c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:368
        return 1;
204042ac:	4785                	li	a5,1
204042ae:	a019                	j	204042b4 <__metal_valid_interrupt_id+0x50>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:370
        break;
204042b0:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:373
    }

    return 0;
204042b2:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:374
}
204042b4:	853e                	mv	a0,a5
204042b6:	4472                	lw	s0,28(sp)
204042b8:	6105                	addi	sp,sp,32
204042ba:	8082                	ret

204042bc <__metal_local_interrupt_enable>:
__metal_local_interrupt_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:377

int __metal_local_interrupt_enable(struct metal_interrupt *controller,
                                   metal_interrupt_id_e id, int enable) {
204042bc:	7179                	addi	sp,sp,-48
204042be:	d606                	sw	ra,44(sp)
204042c0:	d422                	sw	s0,40(sp)
204042c2:	1800                	addi	s0,sp,48
204042c4:	fca42e23          	sw	a0,-36(s0)
204042c8:	fcb42c23          	sw	a1,-40(s0)
204042cc:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:378
    int rc = 0;
204042d0:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:380

    if (!controller) {
204042d4:	fdc42783          	lw	a5,-36(s0)
204042d8:	e399                	bnez	a5,204042de <__metal_local_interrupt_enable+0x22>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:381
        return -1;
204042da:	57fd                	li	a5,-1
204042dc:	a849                	j	2040436e <__metal_local_interrupt_enable+0xb2>
204042de:	fd842703          	lw	a4,-40(s0)
204042e2:	47fd                	li	a5,31
204042e4:	08e7e063          	bltu	a5,a4,20404364 <__metal_local_interrupt_enable+0xa8>
204042e8:	fd842783          	lw	a5,-40(s0)
204042ec:	00279713          	slli	a4,a5,0x2
204042f0:	204007b7          	lui	a5,0x20400
204042f4:	4f878793          	addi	a5,a5,1272 # 204004f8 <__metal_driver_vtable_riscv_clint0+0x64>
204042f8:	97ba                	add	a5,a5,a4
204042fa:	439c                	lw	a5,0(a5)
204042fc:	8782                	jr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:386
    }

    switch (id) {
    case METAL_INTERRUPT_ID_BASE:
        if (enable) {
204042fe:	fd442783          	lw	a5,-44(s0)
20404302:	c781                	beqz	a5,2040430a <__metal_local_interrupt_enable+0x4e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:387
            __metal_interrupt_global_enable();
20404304:	f0ffe0ef          	jal	ra,20403212 <__metal_interrupt_global_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:391
        } else {
            __metal_interrupt_global_disable();
        }
        break;
20404308:	a08d                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:389
            __metal_interrupt_global_disable();
2040430a:	f21fe0ef          	jal	ra,2040322a <__metal_interrupt_global_disable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:391
        break;
2040430e:	a8b1                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:393
    case METAL_INTERRUPT_ID_SW:
        if (enable) {
20404310:	fd442783          	lw	a5,-44(s0)
20404314:	c781                	beqz	a5,2040431c <__metal_local_interrupt_enable+0x60>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:394
            __metal_interrupt_software_enable();
20404316:	f2dfe0ef          	jal	ra,20403242 <__metal_interrupt_software_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:398
        } else {
            __metal_interrupt_software_disable();
        }
        break;
2040431a:	a881                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:396
            __metal_interrupt_software_disable();
2040431c:	f3ffe0ef          	jal	ra,2040325a <__metal_interrupt_software_disable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:398
        break;
20404320:	a0a9                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:400
    case METAL_INTERRUPT_ID_TMR:
        if (enable) {
20404322:	fd442783          	lw	a5,-44(s0)
20404326:	c781                	beqz	a5,2040432e <__metal_local_interrupt_enable+0x72>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:401
            __metal_interrupt_timer_enable();
20404328:	f4bfe0ef          	jal	ra,20403272 <__metal_interrupt_timer_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:405
        } else {
            __metal_interrupt_timer_disable();
        }
        break;
2040432c:	a83d                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:403
            __metal_interrupt_timer_disable();
2040432e:	f5ffe0ef          	jal	ra,2040328c <__metal_interrupt_timer_disable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:405
        break;
20404332:	a825                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:407
    case METAL_INTERRUPT_ID_EXT:
        if (enable) {
20404334:	fd442783          	lw	a5,-44(s0)
20404338:	c781                	beqz	a5,20404340 <__metal_local_interrupt_enable+0x84>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:408
            __metal_interrupt_external_enable();
2040433a:	f6dfe0ef          	jal	ra,204032a6 <__metal_interrupt_external_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:412
        } else {
            __metal_interrupt_external_disable();
        }
        break;
2040433e:	a035                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:410
            __metal_interrupt_external_disable();
20404340:	f83fe0ef          	jal	ra,204032c2 <__metal_interrupt_external_disable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:412
        break;
20404344:	a01d                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:429
    case METAL_INTERRUPT_ID_LC11:
    case METAL_INTERRUPT_ID_LC12:
    case METAL_INTERRUPT_ID_LC13:
    case METAL_INTERRUPT_ID_LC14:
    case METAL_INTERRUPT_ID_LC15:
        if (enable) {
20404346:	fd442783          	lw	a5,-44(s0)
2040434a:	c799                	beqz	a5,20404358 <__metal_local_interrupt_enable+0x9c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:430
            __metal_interrupt_local_enable(id);
2040434c:	fd842783          	lw	a5,-40(s0)
20404350:	853e                	mv	a0,a5
20404352:	f8dfe0ef          	jal	ra,204032de <__metal_interrupt_local_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:434
        } else {
            __metal_interrupt_local_disable(id);
        }
        break;
20404356:	a811                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:432
            __metal_interrupt_local_disable(id);
20404358:	fd842783          	lw	a5,-40(s0)
2040435c:	853e                	mv	a0,a5
2040435e:	fadfe0ef          	jal	ra,2040330a <__metal_interrupt_local_disable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:434
        break;
20404362:	a021                	j	2040436a <__metal_local_interrupt_enable+0xae>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:436
    default:
        rc = -1;
20404364:	57fd                	li	a5,-1
20404366:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:438
    }
    return rc;
2040436a:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:439
}
2040436e:	853e                	mv	a0,a5
20404370:	50b2                	lw	ra,44(sp)
20404372:	5422                	lw	s0,40(sp)
20404374:	6145                	addi	sp,sp,48
20404376:	8082                	ret

20404378 <__metal_exception_register>:
__metal_exception_register():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:442

int __metal_exception_register(struct metal_interrupt *controller, int ecode,
                               metal_exception_handler_t isr) {
20404378:	7179                	addi	sp,sp,-48
2040437a:	d622                	sw	s0,44(sp)
2040437c:	1800                	addi	s0,sp,48
2040437e:	fca42e23          	sw	a0,-36(s0)
20404382:	fcb42c23          	sw	a1,-40(s0)
20404386:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:443
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
2040438a:	fdc42783          	lw	a5,-36(s0)
2040438e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:445

    if ((ecode < METAL_MAX_EXCEPTION_CODE) && isr) {
20404392:	fd842703          	lw	a4,-40(s0)
20404396:	47ad                	li	a5,11
20404398:	02e7c263          	blt	a5,a4,204043bc <__metal_exception_register+0x44>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:445 (discriminator 1)
2040439c:	fd442783          	lw	a5,-44(s0)
204043a0:	cf91                	beqz	a5,204043bc <__metal_exception_register+0x44>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:446
        intc->metal_exception_table[ecode] = isr;
204043a2:	fec42703          	lw	a4,-20(s0)
204043a6:	fd842783          	lw	a5,-40(s0)
204043aa:	0e878793          	addi	a5,a5,232
204043ae:	078a                	slli	a5,a5,0x2
204043b0:	97ba                	add	a5,a5,a4
204043b2:	fd442703          	lw	a4,-44(s0)
204043b6:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:447
        return 0;
204043b8:	4781                	li	a5,0
204043ba:	a011                	j	204043be <__metal_exception_register+0x46>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:449
    }
    return -1;
204043bc:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:450
}
204043be:	853e                	mv	a0,a5
204043c0:	5432                	lw	s0,44(sp)
204043c2:	6145                	addi	sp,sp,48
204043c4:	8082                	ret

204043c6 <__metal_driver_riscv_cpu_controller_interrupt_init>:
__metal_driver_riscv_cpu_controller_interrupt_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:454

extern void early_trap_vector(void);
void __metal_driver_riscv_cpu_controller_interrupt_init(
    struct metal_interrupt *controller) {
204043c6:	7179                	addi	sp,sp,-48
204043c8:	d606                	sw	ra,44(sp)
204043ca:	d422                	sw	s0,40(sp)
204043cc:	1800                	addi	s0,sp,48
204043ce:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:455
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204043d2:	fdc42783          	lw	a5,-36(s0)
204043d6:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:457

    if (!intc->init_done) {
204043da:	fe442783          	lw	a5,-28(s0)
204043de:	43dc                	lw	a5,4(a5)
204043e0:	efdd                	bnez	a5,2040449e <__metal_driver_riscv_cpu_controller_interrupt_init+0xd8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:459
        /* Default to use direct interrupt, setup sw cb table*/
        for (int i = 0; i < METAL_MAX_MI; i++) {
204043e2:	fe042623          	sw	zero,-20(s0)
204043e6:	a0b9                	j	20404434 <__metal_driver_riscv_cpu_controller_interrupt_init+0x6e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:460 (discriminator 3)
            intc->metal_int_table[i].handler = NULL;
204043e8:	fe442683          	lw	a3,-28(s0)
204043ec:	fec42703          	lw	a4,-20(s0)
204043f0:	87ba                	mv	a5,a4
204043f2:	0786                	slli	a5,a5,0x1
204043f4:	97ba                	add	a5,a5,a4
204043f6:	078e                	slli	a5,a5,0x3
204043f8:	97b6                	add	a5,a5,a3
204043fa:	0807a823          	sw	zero,144(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:461 (discriminator 3)
            intc->metal_int_table[i].sub_int = NULL;
204043fe:	fe442683          	lw	a3,-28(s0)
20404402:	fec42703          	lw	a4,-20(s0)
20404406:	87ba                	mv	a5,a4
20404408:	0786                	slli	a5,a5,0x1
2040440a:	97ba                	add	a5,a5,a4
2040440c:	078e                	slli	a5,a5,0x3
2040440e:	97b6                	add	a5,a5,a3
20404410:	0807aa23          	sw	zero,148(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:462 (discriminator 3)
            intc->metal_int_table[i].exint_data = NULL;
20404414:	fe442683          	lw	a3,-28(s0)
20404418:	fec42703          	lw	a4,-20(s0)
2040441c:	87ba                	mv	a5,a4
2040441e:	0786                	slli	a5,a5,0x1
20404420:	97ba                	add	a5,a5,a4
20404422:	078e                	slli	a5,a5,0x3
20404424:	97b6                	add	a5,a5,a3
20404426:	0807ac23          	sw	zero,152(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 3)
        for (int i = 0; i < METAL_MAX_MI; i++) {
2040442a:	fec42783          	lw	a5,-20(s0)
2040442e:	0785                	addi	a5,a5,1
20404430:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:459 (discriminator 1)
20404434:	fec42703          	lw	a4,-20(s0)
20404438:	47fd                	li	a5,31
2040443a:	fae7d7e3          	bge	a5,a4,204043e8 <__metal_driver_riscv_cpu_controller_interrupt_init+0x22>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:465
        }

        for (int i = 0; i < METAL_MAX_ME; i++) {
2040443e:	fe042423          	sw	zero,-24(s0)
20404442:	a01d                	j	20404468 <__metal_driver_riscv_cpu_controller_interrupt_init+0xa2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:466 (discriminator 3)
            intc->metal_exception_table[i] = __metal_default_exception_handler;
20404444:	fe442703          	lw	a4,-28(s0)
20404448:	fe842783          	lw	a5,-24(s0)
2040444c:	0e878793          	addi	a5,a5,232
20404450:	078a                	slli	a5,a5,0x2
20404452:	97ba                	add	a5,a5,a4
20404454:	20403737          	lui	a4,0x20403
20404458:	33670713          	addi	a4,a4,822 # 20403336 <__metal_default_exception_handler>
2040445c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 3)
        for (int i = 0; i < METAL_MAX_ME; i++) {
2040445e:	fe842783          	lw	a5,-24(s0)
20404462:	0785                	addi	a5,a5,1
20404464:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:465 (discriminator 1)
20404468:	fe842703          	lw	a4,-24(s0)
2040446c:	47ad                	li	a5,11
2040446e:	fce7dbe3          	bge	a5,a4,20404444 <__metal_driver_riscv_cpu_controller_interrupt_init+0x7e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:475
         * Set the real trap handler if the value of mtvec is equal to
         * early_trap_vector. If mtvec is not equal to early_trap_vector,
         * that means user has own trap handler, then we don't overwrite it.
         */
        uintptr_t mtvec;
        __asm__ volatile("csrr %0, mtvec" : "=r"(mtvec));
20404472:	305027f3          	csrr	a5,mtvec
20404476:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:476
        if (mtvec == (uintptr_t)&early_trap_vector) {
2040447a:	204007b7          	lui	a5,0x20400
2040447e:	13478793          	addi	a5,a5,308 # 20400134 <early_trap_vector>
20404482:	fe042703          	lw	a4,-32(s0)
20404486:	00f71863          	bne	a4,a5,20404496 <__metal_driver_riscv_cpu_controller_interrupt_init+0xd0>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:477
            __metal_controller_interrupt_vector(
2040448a:	204037b7          	lui	a5,0x20403
2040448e:	60078593          	addi	a1,a5,1536 # 20403600 <__metal_exception_handler>
20404492:	4501                	li	a0,0
20404494:	3b39                	jal	204041b2 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:481
                METAL_DIRECT_MODE,
                (void *)(uintptr_t)&__metal_exception_handler);
        }
        intc->init_done = 1;
20404496:	fe442783          	lw	a5,-28(s0)
2040449a:	4705                	li	a4,1
2040449c:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:483
    }
}
2040449e:	0001                	nop
204044a0:	50b2                	lw	ra,44(sp)
204044a2:	5422                	lw	s0,40(sp)
204044a4:	6145                	addi	sp,sp,48
204044a6:	8082                	ret

204044a8 <__metal_driver_riscv_cpu_controller_interrupt_register>:
__metal_driver_riscv_cpu_controller_interrupt_register():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:487

int __metal_driver_riscv_cpu_controller_interrupt_register(
    struct metal_interrupt *controller, int id, metal_interrupt_handler_t isr,
    void *priv) {
204044a8:	7179                	addi	sp,sp,-48
204044aa:	d606                	sw	ra,44(sp)
204044ac:	d422                	sw	s0,40(sp)
204044ae:	1800                	addi	s0,sp,48
204044b0:	fca42e23          	sw	a0,-36(s0)
204044b4:	fcb42c23          	sw	a1,-40(s0)
204044b8:	fcc42a23          	sw	a2,-44(s0)
204044bc:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:488
    int rc = 0;
204044c0:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:489
    struct __metal_driver_riscv_cpu_intc *intc = (void *)(controller);
204044c4:	fdc42783          	lw	a5,-36(s0)
204044c8:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:491

    if (!__metal_valid_interrupt_id(id)) {
204044cc:	fd842503          	lw	a0,-40(s0)
204044d0:	3b51                	jal	20404264 <__metal_valid_interrupt_id>
204044d2:	87aa                	mv	a5,a0
204044d4:	e399                	bnez	a5,204044da <__metal_driver_riscv_cpu_controller_interrupt_register+0x32>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:492
        return -11;
204044d6:	57d5                	li	a5,-11
204044d8:	a25d                	j	2040467e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:494
    }
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204044da:	fd842703          	lw	a4,-40(s0)
204044de:	08000793          	li	a5,128
204044e2:	00f71763          	bne	a4,a5,204044f0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:495 (discriminator 1)
        (__metal_controller_interrupt_vector_mode() != METAL_DIRECT_MODE)) {
204044e6:	3995                	jal	2040415a <__metal_controller_interrupt_vector_mode>
204044e8:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:494 (discriminator 1)
    if ((id == METAL_INTERRUPT_ID_BEU) &&
204044ea:	c399                	beqz	a5,204044f0 <__metal_driver_riscv_cpu_controller_interrupt_register+0x48>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:498
        /* Only allow registration of the bus error unit interrupt if
         * interrupt vectoring if off */
        return -13;
204044ec:	57cd                	li	a5,-13
204044ee:	aa41                	j	2040467e <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d6>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:501
    }

    if (isr) {
204044f0:	fd442783          	lw	a5,-44(s0)
204044f4:	cfb9                	beqz	a5,20404552 <__metal_driver_riscv_cpu_controller_interrupt_register+0xaa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:502
        if (id == METAL_INTERRUPT_ID_BEU) {
204044f6:	fd842703          	lw	a4,-40(s0)
204044fa:	08000793          	li	a5,128
204044fe:	00f71f63          	bne	a4,a5,2040451c <__metal_driver_riscv_cpu_controller_interrupt_register+0x74>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:503
            intc->metal_int_beu.handler = isr;
20404502:	fe842783          	lw	a5,-24(s0)
20404506:	fd442703          	lw	a4,-44(s0)
2040450a:	38e7a823          	sw	a4,912(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:504
            intc->metal_int_beu.exint_data = priv;
2040450e:	fe842783          	lw	a5,-24(s0)
20404512:	fd042703          	lw	a4,-48(s0)
20404516:	38e7ac23          	sw	a4,920(a5)
2040451a:	a285                	j	2040467a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:506
        } else {
            intc->metal_int_table[id].handler = isr;
2040451c:	fe842683          	lw	a3,-24(s0)
20404520:	fd842703          	lw	a4,-40(s0)
20404524:	87ba                	mv	a5,a4
20404526:	0786                	slli	a5,a5,0x1
20404528:	97ba                	add	a5,a5,a4
2040452a:	078e                	slli	a5,a5,0x3
2040452c:	97b6                	add	a5,a5,a3
2040452e:	fd442703          	lw	a4,-44(s0)
20404532:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:507
            intc->metal_int_table[id].exint_data = priv;
20404536:	fe842683          	lw	a3,-24(s0)
2040453a:	fd842703          	lw	a4,-40(s0)
2040453e:	87ba                	mv	a5,a4
20404540:	0786                	slli	a5,a5,0x1
20404542:	97ba                	add	a5,a5,a4
20404544:	078e                	slli	a5,a5,0x3
20404546:	97b6                	add	a5,a5,a3
20404548:	fd042703          	lw	a4,-48(s0)
2040454c:	08e7ac23          	sw	a4,152(a5)
20404550:	a22d                	j	2040467a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:510
        }
    } else {
        switch (id) {
20404552:	fd842703          	lw	a4,-40(s0)
20404556:	08000793          	li	a5,128
2040455a:	0cf70163          	beq	a4,a5,2040461c <__metal_driver_riscv_cpu_controller_interrupt_register+0x174>
2040455e:	fd842703          	lw	a4,-40(s0)
20404562:	08000793          	li	a5,128
20404566:	10e7c763          	blt	a5,a4,20404674 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
2040456a:	fd842703          	lw	a4,-40(s0)
2040456e:	47fd                	li	a5,31
20404570:	10e7c263          	blt	a5,a4,20404674 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20404574:	fd842703          	lw	a4,-40(s0)
20404578:	47c1                	li	a5,16
2040457a:	0cf75063          	bge	a4,a5,2040463a <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
2040457e:	fd842703          	lw	a4,-40(s0)
20404582:	47ad                	li	a5,11
20404584:	0af70b63          	beq	a4,a5,2040463a <__metal_driver_riscv_cpu_controller_interrupt_register+0x192>
20404588:	fd842703          	lw	a4,-40(s0)
2040458c:	47ad                	li	a5,11
2040458e:	0ee7c363          	blt	a5,a4,20404674 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
20404592:	fd842703          	lw	a4,-40(s0)
20404596:	478d                	li	a5,3
20404598:	00f70863          	beq	a4,a5,204045a8 <__metal_driver_riscv_cpu_controller_interrupt_register+0x100>
2040459c:	fd842703          	lw	a4,-40(s0)
204045a0:	479d                	li	a5,7
204045a2:	04f70063          	beq	a4,a5,204045e2 <__metal_driver_riscv_cpu_controller_interrupt_register+0x13a>
204045a6:	a0f9                	j	20404674 <__metal_driver_riscv_cpu_controller_interrupt_register+0x1cc>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:512
        case METAL_INTERRUPT_ID_SW:
            intc->metal_int_table[id].handler = __metal_default_sw_handler;
204045a8:	fe842683          	lw	a3,-24(s0)
204045ac:	fd842703          	lw	a4,-40(s0)
204045b0:	87ba                	mv	a5,a4
204045b2:	0786                	slli	a5,a5,0x1
204045b4:	97ba                	add	a5,a5,a4
204045b6:	078e                	slli	a5,a5,0x3
204045b8:	97b6                	add	a5,a5,a3
204045ba:	20403737          	lui	a4,0x20403
204045be:	42670713          	addi	a4,a4,1062 # 20403426 <__metal_default_sw_handler>
204045c2:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:513
            intc->metal_int_table[id].sub_int = priv;
204045c6:	fe842683          	lw	a3,-24(s0)
204045ca:	fd842703          	lw	a4,-40(s0)
204045ce:	87ba                	mv	a5,a4
204045d0:	0786                	slli	a5,a5,0x1
204045d2:	97ba                	add	a5,a5,a4
204045d4:	078e                	slli	a5,a5,0x3
204045d6:	97b6                	add	a5,a5,a3
204045d8:	fd042703          	lw	a4,-48(s0)
204045dc:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:514
            break;
204045e0:	a869                	j	2040467a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:516
        case METAL_INTERRUPT_ID_TMR:
            intc->metal_int_table[id].handler = __metal_default_timer_handler;
204045e2:	fe842683          	lw	a3,-24(s0)
204045e6:	fd842703          	lw	a4,-40(s0)
204045ea:	87ba                	mv	a5,a4
204045ec:	0786                	slli	a5,a5,0x1
204045ee:	97ba                	add	a5,a5,a4
204045f0:	078e                	slli	a5,a5,0x3
204045f2:	97b6                	add	a5,a5,a3
204045f4:	20403737          	lui	a4,0x20403
204045f8:	53670713          	addi	a4,a4,1334 # 20403536 <__metal_default_timer_handler>
204045fc:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:517
            intc->metal_int_table[id].sub_int = priv;
20404600:	fe842683          	lw	a3,-24(s0)
20404604:	fd842703          	lw	a4,-40(s0)
20404608:	87ba                	mv	a5,a4
2040460a:	0786                	slli	a5,a5,0x1
2040460c:	97ba                	add	a5,a5,a4
2040460e:	078e                	slli	a5,a5,0x3
20404610:	97b6                	add	a5,a5,a3
20404612:	fd042703          	lw	a4,-48(s0)
20404616:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:518
            break;
2040461a:	a085                	j	2040467a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:520
        case METAL_INTERRUPT_ID_BEU:
            intc->metal_int_beu.handler = __metal_default_beu_handler;
2040461c:	fe842783          	lw	a5,-24(s0)
20404620:	20403737          	lui	a4,0x20403
20404624:	52070713          	addi	a4,a4,1312 # 20403520 <__metal_default_beu_handler>
20404628:	38e7a823          	sw	a4,912(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:521
            intc->metal_int_beu.exint_data = priv;
2040462c:	fe842783          	lw	a5,-24(s0)
20404630:	fd042703          	lw	a4,-48(s0)
20404634:	38e7ac23          	sw	a4,920(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:522
            break;
20404638:	a089                	j	2040467a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:540
        case METAL_INTERRUPT_ID_LC11:
        case METAL_INTERRUPT_ID_LC12:
        case METAL_INTERRUPT_ID_LC13:
        case METAL_INTERRUPT_ID_LC14:
        case METAL_INTERRUPT_ID_LC15:
            intc->metal_int_table[id].handler =
2040463a:	fe842683          	lw	a3,-24(s0)
2040463e:	fd842703          	lw	a4,-40(s0)
20404642:	87ba                	mv	a5,a4
20404644:	0786                	slli	a5,a5,0x1
20404646:	97ba                	add	a5,a5,a4
20404648:	078e                	slli	a5,a5,0x3
2040464a:	97b6                	add	a5,a5,a3
2040464c:	20403737          	lui	a4,0x20403
20404650:	34e70713          	addi	a4,a4,846 # 2040334e <__metal_default_interrupt_handler>
20404654:	08e7a823          	sw	a4,144(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:542
                __metal_default_interrupt_handler;
            intc->metal_int_table[id].sub_int = priv;
20404658:	fe842683          	lw	a3,-24(s0)
2040465c:	fd842703          	lw	a4,-40(s0)
20404660:	87ba                	mv	a5,a4
20404662:	0786                	slli	a5,a5,0x1
20404664:	97ba                	add	a5,a5,a4
20404666:	078e                	slli	a5,a5,0x3
20404668:	97b6                	add	a5,a5,a3
2040466a:	fd042703          	lw	a4,-48(s0)
2040466e:	08e7aa23          	sw	a4,148(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:543
            break;
20404672:	a021                	j	2040467a <__metal_driver_riscv_cpu_controller_interrupt_register+0x1d2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:545
        default:
            rc = -12;
20404674:	57d1                	li	a5,-12
20404676:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:548
        }
    }
    return rc;
2040467a:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:549
}
2040467e:	853e                	mv	a0,a5
20404680:	50b2                	lw	ra,44(sp)
20404682:	5422                	lw	s0,40(sp)
20404684:	6145                	addi	sp,sp,48
20404686:	8082                	ret

20404688 <__metal_driver_riscv_cpu_controller_interrupt_enable>:
__metal_driver_riscv_cpu_controller_interrupt_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:552

int __metal_driver_riscv_cpu_controller_interrupt_enable(
    struct metal_interrupt *controller, int id) {
20404688:	1101                	addi	sp,sp,-32
2040468a:	ce06                	sw	ra,28(sp)
2040468c:	cc22                	sw	s0,24(sp)
2040468e:	1000                	addi	s0,sp,32
20404690:	fea42623          	sw	a0,-20(s0)
20404694:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:553
    return __metal_local_interrupt_enable(controller, id, METAL_ENABLE);
20404698:	fe842783          	lw	a5,-24(s0)
2040469c:	4605                	li	a2,1
2040469e:	85be                	mv	a1,a5
204046a0:	fec42503          	lw	a0,-20(s0)
204046a4:	c19ff0ef          	jal	ra,204042bc <__metal_local_interrupt_enable>
204046a8:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:554
}
204046aa:	853e                	mv	a0,a5
204046ac:	40f2                	lw	ra,28(sp)
204046ae:	4462                	lw	s0,24(sp)
204046b0:	6105                	addi	sp,sp,32
204046b2:	8082                	ret

204046b4 <__metal_driver_riscv_cpu_controller_interrupt_disable>:
__metal_driver_riscv_cpu_controller_interrupt_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:557

int __metal_driver_riscv_cpu_controller_interrupt_disable(
    struct metal_interrupt *controller, int id) {
204046b4:	1101                	addi	sp,sp,-32
204046b6:	ce06                	sw	ra,28(sp)
204046b8:	cc22                	sw	s0,24(sp)
204046ba:	1000                	addi	s0,sp,32
204046bc:	fea42623          	sw	a0,-20(s0)
204046c0:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:558
    return __metal_local_interrupt_enable(controller, id, METAL_DISABLE);
204046c4:	fe842783          	lw	a5,-24(s0)
204046c8:	4601                	li	a2,0
204046ca:	85be                	mv	a1,a5
204046cc:	fec42503          	lw	a0,-20(s0)
204046d0:	bedff0ef          	jal	ra,204042bc <__metal_local_interrupt_enable>
204046d4:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:559
}
204046d6:	853e                	mv	a0,a5
204046d8:	40f2                	lw	ra,28(sp)
204046da:	4462                	lw	s0,24(sp)
204046dc:	6105                	addi	sp,sp,32
204046de:	8082                	ret

204046e0 <__metal_driver_riscv_cpu_controller_get_vector_mode>:
__metal_driver_riscv_cpu_controller_get_vector_mode():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:591
    }
    return -1;
}

metal_vector_mode __metal_driver_riscv_cpu_controller_get_vector_mode(
    struct metal_interrupt *controller) {
204046e0:	1101                	addi	sp,sp,-32
204046e2:	ce06                	sw	ra,28(sp)
204046e4:	cc22                	sw	s0,24(sp)
204046e6:	1000                	addi	s0,sp,32
204046e8:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:592
    return __metal_controller_interrupt_vector_mode();
204046ec:	a6fff0ef          	jal	ra,2040415a <__metal_controller_interrupt_vector_mode>
204046f0:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:593
}
204046f2:	853e                	mv	a0,a5
204046f4:	40f2                	lw	ra,28(sp)
204046f6:	4462                	lw	s0,24(sp)
204046f8:	6105                	addi	sp,sp,32
204046fa:	8082                	ret

204046fc <__metal_driver_riscv_cpu_controller_set_vector_mode>:
__metal_driver_riscv_cpu_controller_set_vector_mode():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:596

int __metal_driver_riscv_cpu_controller_set_vector_mode(
    struct metal_interrupt *controller, metal_vector_mode mode) {
204046fc:	1101                	addi	sp,sp,-32
204046fe:	ce06                	sw	ra,28(sp)
20404700:	cc22                	sw	s0,24(sp)
20404702:	1000                	addi	s0,sp,32
20404704:	fea42623          	sw	a0,-20(s0)
20404708:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:598

    if (mode == METAL_DIRECT_MODE) {
2040470c:	fe842783          	lw	a5,-24(s0)
20404710:	eb99                	bnez	a5,20404726 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x2a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:599
        __metal_controller_interrupt_vector(
20404712:	204037b7          	lui	a5,0x20403
20404716:	60078593          	addi	a1,a5,1536 # 20403600 <__metal_exception_handler>
2040471a:	fe842503          	lw	a0,-24(s0)
2040471e:	a95ff0ef          	jal	ra,204041b2 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:601
            mode, (void *)(uintptr_t)&__metal_exception_handler);
        return 0;
20404722:	4781                	li	a5,0
20404724:	a00d                	j	20404746 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:603
    }
    if (mode == METAL_VECTOR_MODE) {
20404726:	fe842703          	lw	a4,-24(s0)
2040472a:	4785                	li	a5,1
2040472c:	00f71c63          	bne	a4,a5,20404744 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x48>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:604
        __metal_controller_interrupt_vector(
20404730:	204077b7          	lui	a5,0x20407
20404734:	f8078593          	addi	a1,a5,-128 # 20406f80 <__metal_vector_table>
20404738:	fe842503          	lw	a0,-24(s0)
2040473c:	a77ff0ef          	jal	ra,204041b2 <__metal_controller_interrupt_vector>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:606
            mode, (void *)(uintptr_t)__metal_vector_table);
        return 0;
20404740:	4781                	li	a5,0
20404742:	a011                	j	20404746 <__metal_driver_riscv_cpu_controller_set_vector_mode+0x4a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:608
    }
    return -1;
20404744:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:609
}
20404746:	853e                	mv	a0,a5
20404748:	40f2                	lw	ra,28(sp)
2040474a:	4462                	lw	s0,24(sp)
2040474c:	6105                	addi	sp,sp,32
2040474e:	8082                	ret

20404750 <__metal_driver_riscv_cpu_controller_command_request>:
__metal_driver_riscv_cpu_controller_command_request():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:612

int __metal_driver_riscv_cpu_controller_command_request(
    struct metal_interrupt *controller, int cmd, void *data) {
20404750:	1101                	addi	sp,sp,-32
20404752:	ce22                	sw	s0,28(sp)
20404754:	1000                	addi	s0,sp,32
20404756:	fea42623          	sw	a0,-20(s0)
2040475a:	feb42423          	sw	a1,-24(s0)
2040475e:	fec42223          	sw	a2,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:615
    /* NOP for now, unless local interrupt lines the like of clic, clint, plic
     */
    return 0;
20404762:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:616
}
20404764:	853e                	mv	a0,a5
20404766:	4472                	lw	s0,28(sp)
20404768:	6105                	addi	sp,sp,32
2040476a:	8082                	ret

2040476c <__metal_driver_cpu_mcycle_get>:
__metal_driver_cpu_mcycle_get():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:620

/* CPU driver !!! */

unsigned long long __metal_driver_cpu_mcycle_get(struct metal_cpu *cpu) {
2040476c:	7139                	addi	sp,sp,-64
2040476e:	de22                	sw	s0,60(sp)
20404770:	0080                	addi	s0,sp,64
20404772:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:621
    unsigned long long val = 0;
20404776:	4501                	li	a0,0
20404778:	4581                	li	a1,0
2040477a:	fea42423          	sw	a0,-24(s0)
2040477e:	feb42623          	sw	a1,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:627 (discriminator 1)

#if __riscv_xlen == 32
    unsigned long hi, hi1, lo;

    do {
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi));
20404782:	b80025f3          	csrr	a1,mcycleh
20404786:	feb42223          	sw	a1,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:628 (discriminator 1)
        __asm__ volatile("csrr %0, mcycle" : "=r"(lo));
2040478a:	b00025f3          	csrr	a1,mcycle
2040478e:	feb42023          	sw	a1,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:629 (discriminator 1)
        __asm__ volatile("csrr %0, mcycleh" : "=r"(hi1));
20404792:	b80025f3          	csrr	a1,mcycleh
20404796:	fcb42e23          	sw	a1,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:632 (discriminator 1)
        /* hi != hi1 means mcycle overflow during we get value,
         * so we must retry. */
    } while (hi != hi1);
2040479a:	fe442503          	lw	a0,-28(s0)
2040479e:	fdc42583          	lw	a1,-36(s0)
204047a2:	feb510e3          	bne	a0,a1,20404782 <__metal_driver_cpu_mcycle_get+0x16>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:634

    val = ((unsigned long long)hi << 32) | lo;
204047a6:	fe442583          	lw	a1,-28(s0)
204047aa:	882e                	mv	a6,a1
204047ac:	4881                	li	a7,0
204047ae:	00081793          	slli	a5,a6,0x0
204047b2:	4701                	li	a4,0
204047b4:	fe042583          	lw	a1,-32(s0)
204047b8:	862e                	mv	a2,a1
204047ba:	4681                	li	a3,0
204047bc:	00c765b3          	or	a1,a4,a2
204047c0:	feb42423          	sw	a1,-24(s0)
204047c4:	8fd5                	or	a5,a5,a3
204047c6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:639
#else
    __asm__ volatile("csrr %0, mcycle" : "=r"(val));
#endif

    return val;
204047ca:	fe842703          	lw	a4,-24(s0)
204047ce:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:640
}
204047d2:	853a                	mv	a0,a4
204047d4:	85be                	mv	a1,a5
204047d6:	5472                	lw	s0,60(sp)
204047d8:	6121                	addi	sp,sp,64
204047da:	8082                	ret

204047dc <__metal_driver_cpu_timebase_get>:
__metal_driver_cpu_timebase_get():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:642

unsigned long long __metal_driver_cpu_timebase_get(struct metal_cpu *cpu) {
204047dc:	7179                	addi	sp,sp,-48
204047de:	d606                	sw	ra,44(sp)
204047e0:	d422                	sw	s0,40(sp)
204047e2:	d24a                	sw	s2,36(sp)
204047e4:	d04e                	sw	s3,32(sp)
204047e6:	1800                	addi	s0,sp,48
204047e8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:644
    int timebase;
    if (!cpu) {
204047ec:	fdc42783          	lw	a5,-36(s0)
204047f0:	e781                	bnez	a5,204047f8 <__metal_driver_cpu_timebase_get+0x1c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:645
        return 0;
204047f2:	4901                	li	s2,0
204047f4:	4981                	li	s3,0
204047f6:	a821                	j	2040480e <__metal_driver_cpu_timebase_get+0x32>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:648
    }

    timebase = __metal_driver_cpu_timebase((struct metal_cpu *)cpu);
204047f8:	fdc42503          	lw	a0,-36(s0)
204047fc:	955fe0ef          	jal	ra,20403150 <__metal_driver_cpu_timebase>
20404800:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:649
    return timebase;
20404804:	fec42783          	lw	a5,-20(s0)
20404808:	893e                	mv	s2,a5
2040480a:	87fd                	srai	a5,a5,0x1f
2040480c:	89be                	mv	s3,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:650
}
2040480e:	874a                	mv	a4,s2
20404810:	87ce                	mv	a5,s3
20404812:	853a                	mv	a0,a4
20404814:	85be                	mv	a1,a5
20404816:	50b2                	lw	ra,44(sp)
20404818:	5422                	lw	s0,40(sp)
2040481a:	5912                	lw	s2,36(sp)
2040481c:	5982                	lw	s3,32(sp)
2040481e:	6145                	addi	sp,sp,48
20404820:	8082                	ret

20404822 <__metal_driver_cpu_mtime_get>:
__metal_driver_cpu_mtime_get():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:652

unsigned long long __metal_driver_cpu_mtime_get(struct metal_cpu *cpu) {
20404822:	7179                	addi	sp,sp,-48
20404824:	d606                	sw	ra,44(sp)
20404826:	d422                	sw	s0,40(sp)
20404828:	1800                	addi	s0,sp,48
2040482a:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:653
    unsigned long long time = 0;
2040482e:	4781                	li	a5,0
20404830:	4801                	li	a6,0
20404832:	fef42023          	sw	a5,-32(s0)
20404836:	ff042223          	sw	a6,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:657
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
2040483a:	fdc42503          	lw	a0,-36(s0)
2040483e:	93dfe0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20404842:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:659

    if (intc) {
20404846:	fec42783          	lw	a5,-20(s0)
2040484a:	c78d                	beqz	a5,20404874 <__metal_driver_cpu_mtime_get+0x52>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:660
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
2040484c:	fec42783          	lw	a5,-20(s0)
20404850:	13c7a783          	lw	a5,316(a5)
20404854:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:661
        if (tmr_intc) {
20404858:	fe842783          	lw	a5,-24(s0)
2040485c:	cf81                	beqz	a5,20404874 <__metal_driver_cpu_mtime_get+0x52>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:662
            tmr_intc->vtable->command_request(tmr_intc, METAL_TIMER_MTIME_GET,
2040485e:	fe842783          	lw	a5,-24(s0)
20404862:	439c                	lw	a5,0(a5)
20404864:	47f8                	lw	a4,76(a5)
20404866:	fe040793          	addi	a5,s0,-32
2040486a:	863e                	mv	a2,a5
2040486c:	4585                	li	a1,1
2040486e:	fe842503          	lw	a0,-24(s0)
20404872:	9702                	jalr	a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:666
                                              &time);
        }
    }
    return time;
20404874:	fe042703          	lw	a4,-32(s0)
20404878:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:667
}
2040487c:	853a                	mv	a0,a4
2040487e:	85be                	mv	a1,a5
20404880:	50b2                	lw	ra,44(sp)
20404882:	5422                	lw	s0,40(sp)
20404884:	6145                	addi	sp,sp,48
20404886:	8082                	ret

20404888 <__metal_driver_cpu_mtimecmp_set>:
__metal_driver_cpu_mtimecmp_set():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:670

int __metal_driver_cpu_mtimecmp_set(struct metal_cpu *cpu,
                                    unsigned long long time) {
20404888:	7179                	addi	sp,sp,-48
2040488a:	d606                	sw	ra,44(sp)
2040488c:	d422                	sw	s0,40(sp)
2040488e:	d226                	sw	s1,36(sp)
20404890:	1800                	addi	s0,sp,48
20404892:	fca42e23          	sw	a0,-36(s0)
20404896:	fcb42823          	sw	a1,-48(s0)
2040489a:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:671
    int rc = -1;
2040489e:	57fd                	li	a5,-1
204048a0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:675
    struct metal_interrupt *tmr_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204048a4:	fdc42503          	lw	a0,-36(s0)
204048a8:	8d3fe0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
204048ac:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:677

    if (intc) {
204048b0:	fe842783          	lw	a5,-24(s0)
204048b4:	cf8d                	beqz	a5,204048ee <__metal_driver_cpu_mtimecmp_set+0x66>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:678
        tmr_intc = intc->metal_int_table[METAL_INTERRUPT_ID_TMR].sub_int;
204048b6:	fe842783          	lw	a5,-24(s0)
204048ba:	13c7a783          	lw	a5,316(a5)
204048be:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:679
        if (tmr_intc) {
204048c2:	fe442783          	lw	a5,-28(s0)
204048c6:	c785                	beqz	a5,204048ee <__metal_driver_cpu_mtimecmp_set+0x66>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:680
            rc = tmr_intc->vtable->mtimecmp_set(
204048c8:	fe442783          	lw	a5,-28(s0)
204048cc:	439c                	lw	a5,0(a5)
204048ce:	4ba4                	lw	s1,80(a5)
204048d0:	fdc42503          	lw	a0,-36(s0)
204048d4:	859fe0ef          	jal	ra,2040312c <__metal_driver_cpu_hartid>
204048d8:	87aa                	mv	a5,a0
204048da:	fd042603          	lw	a2,-48(s0)
204048de:	fd442683          	lw	a3,-44(s0)
204048e2:	85be                	mv	a1,a5
204048e4:	fe442503          	lw	a0,-28(s0)
204048e8:	9482                	jalr	s1
204048ea:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:684
                tmr_intc, __metal_driver_cpu_hartid(cpu), time);
        }
    }
    return rc;
204048ee:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:685
}
204048f2:	853e                	mv	a0,a5
204048f4:	50b2                	lw	ra,44(sp)
204048f6:	5422                	lw	s0,40(sp)
204048f8:	5492                	lw	s1,36(sp)
204048fa:	6145                	addi	sp,sp,48
204048fc:	8082                	ret

204048fe <__metal_driver_cpu_timer_controller_interrupt>:
__metal_driver_cpu_timer_controller_interrupt():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:688

struct metal_interrupt *
__metal_driver_cpu_timer_controller_interrupt(struct metal_cpu *cpu) {
204048fe:	1101                	addi	sp,sp,-32
20404900:	ce22                	sw	s0,28(sp)
20404902:	1000                	addi	s0,sp,32
20404904:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:690
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404908:	800007b7          	lui	a5,0x80000
2040490c:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffeffc>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:699
#else
#pragma message("There is no interrupt controller for Timer interrupt")
    return NULL;
#endif
#endif
}
20404910:	853e                	mv	a0,a5
20404912:	4472                	lw	s0,28(sp)
20404914:	6105                	addi	sp,sp,32
20404916:	8082                	ret

20404918 <__metal_driver_cpu_get_timer_interrupt_id>:
__metal_driver_cpu_get_timer_interrupt_id():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:701

int __metal_driver_cpu_get_timer_interrupt_id(struct metal_cpu *cpu) {
20404918:	1101                	addi	sp,sp,-32
2040491a:	ce22                	sw	s0,28(sp)
2040491c:	1000                	addi	s0,sp,32
2040491e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:702
    return METAL_INTERRUPT_ID_TMR;
20404922:	479d                	li	a5,7
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:703
}
20404924:	853e                	mv	a0,a5
20404926:	4472                	lw	s0,28(sp)
20404928:	6105                	addi	sp,sp,32
2040492a:	8082                	ret

2040492c <__metal_driver_cpu_sw_controller_interrupt>:
__metal_driver_cpu_sw_controller_interrupt():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:706

struct metal_interrupt *
__metal_driver_cpu_sw_controller_interrupt(struct metal_cpu *cpu) {
2040492c:	1101                	addi	sp,sp,-32
2040492e:	ce22                	sw	s0,28(sp)
20404930:	1000                	addi	s0,sp,32
20404932:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:708
#ifdef __METAL_DT_RISCV_CLINT0_HANDLE
    return __METAL_DT_RISCV_CLINT0_HANDLE;
20404936:	800007b7          	lui	a5,0x80000
2040493a:	7ac78793          	addi	a5,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffeffc>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:717
#else
#pragma message("There is no interrupt controller for Software interrupt")
    return NULL;
#endif
#endif
}
2040493e:	853e                	mv	a0,a5
20404940:	4472                	lw	s0,28(sp)
20404942:	6105                	addi	sp,sp,32
20404944:	8082                	ret

20404946 <__metal_driver_cpu_get_sw_interrupt_id>:
__metal_driver_cpu_get_sw_interrupt_id():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:719

int __metal_driver_cpu_get_sw_interrupt_id(struct metal_cpu *cpu) {
20404946:	1101                	addi	sp,sp,-32
20404948:	ce22                	sw	s0,28(sp)
2040494a:	1000                	addi	s0,sp,32
2040494c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:720
    return METAL_INTERRUPT_ID_SW;
20404950:	478d                	li	a5,3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:721
}
20404952:	853e                	mv	a0,a5
20404954:	4472                	lw	s0,28(sp)
20404956:	6105                	addi	sp,sp,32
20404958:	8082                	ret

2040495a <__metal_driver_cpu_set_sw_ipi>:
__metal_driver_cpu_set_sw_ipi():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:723

int __metal_driver_cpu_set_sw_ipi(struct metal_cpu *cpu, int hartid) {
2040495a:	7179                	addi	sp,sp,-48
2040495c:	d606                	sw	ra,44(sp)
2040495e:	d422                	sw	s0,40(sp)
20404960:	1800                	addi	s0,sp,48
20404962:	fca42e23          	sw	a0,-36(s0)
20404966:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:724
    int rc = -1;
2040496a:	57fd                	li	a5,-1
2040496c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:728
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404970:	fdc42503          	lw	a0,-36(s0)
20404974:	807fe0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20404978:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:730

    if (intc) {
2040497c:	fe842783          	lw	a5,-24(s0)
20404980:	c79d                	beqz	a5,204049ae <__metal_driver_cpu_set_sw_ipi+0x54>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:731
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404982:	fe842783          	lw	a5,-24(s0)
20404986:	0dc7a783          	lw	a5,220(a5)
2040498a:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:732
        if (sw_intc) {
2040498e:	fe442783          	lw	a5,-28(s0)
20404992:	cf91                	beqz	a5,204049ae <__metal_driver_cpu_set_sw_ipi+0x54>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:733
            rc = sw_intc->vtable->command_request(
20404994:	fe442783          	lw	a5,-28(s0)
20404998:	439c                	lw	a5,0(a5)
2040499a:	47f8                	lw	a4,76(a5)
2040499c:	fd840793          	addi	a5,s0,-40
204049a0:	863e                	mv	a2,a5
204049a2:	458d                	li	a1,3
204049a4:	fe442503          	lw	a0,-28(s0)
204049a8:	9702                	jalr	a4
204049aa:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:737
                sw_intc, METAL_SOFTWARE_IPI_SET, &hartid);
        }
    }
    return rc;
204049ae:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:738
}
204049b2:	853e                	mv	a0,a5
204049b4:	50b2                	lw	ra,44(sp)
204049b6:	5422                	lw	s0,40(sp)
204049b8:	6145                	addi	sp,sp,48
204049ba:	8082                	ret

204049bc <__metal_driver_cpu_clear_sw_ipi>:
__metal_driver_cpu_clear_sw_ipi():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:740

int __metal_driver_cpu_clear_sw_ipi(struct metal_cpu *cpu, int hartid) {
204049bc:	7179                	addi	sp,sp,-48
204049be:	d606                	sw	ra,44(sp)
204049c0:	d422                	sw	s0,40(sp)
204049c2:	1800                	addi	s0,sp,48
204049c4:	fca42e23          	sw	a0,-36(s0)
204049c8:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:741
    int rc = -1;
204049cc:	57fd                	li	a5,-1
204049ce:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:745
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
204049d2:	fdc42503          	lw	a0,-36(s0)
204049d6:	fa4fe0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
204049da:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:747

    if (intc) {
204049de:	fe842783          	lw	a5,-24(s0)
204049e2:	c79d                	beqz	a5,20404a10 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:748
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
204049e4:	fe842783          	lw	a5,-24(s0)
204049e8:	0dc7a783          	lw	a5,220(a5)
204049ec:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:749
        if (sw_intc) {
204049f0:	fe442783          	lw	a5,-28(s0)
204049f4:	cf91                	beqz	a5,20404a10 <__metal_driver_cpu_clear_sw_ipi+0x54>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:750
            rc = sw_intc->vtable->command_request(
204049f6:	fe442783          	lw	a5,-28(s0)
204049fa:	439c                	lw	a5,0(a5)
204049fc:	47f8                	lw	a4,76(a5)
204049fe:	fd840793          	addi	a5,s0,-40
20404a02:	863e                	mv	a2,a5
20404a04:	4589                	li	a1,2
20404a06:	fe442503          	lw	a0,-28(s0)
20404a0a:	9702                	jalr	a4
20404a0c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:754
                sw_intc, METAL_SOFTWARE_IPI_CLEAR, &hartid);
        }
    }
    return rc;
20404a10:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:755
}
20404a14:	853e                	mv	a0,a5
20404a16:	50b2                	lw	ra,44(sp)
20404a18:	5422                	lw	s0,40(sp)
20404a1a:	6145                	addi	sp,sp,48
20404a1c:	8082                	ret

20404a1e <__metal_driver_cpu_get_msip>:
__metal_driver_cpu_get_msip():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:757

int __metal_driver_cpu_get_msip(struct metal_cpu *cpu, int hartid) {
20404a1e:	7179                	addi	sp,sp,-48
20404a20:	d606                	sw	ra,44(sp)
20404a22:	d422                	sw	s0,40(sp)
20404a24:	1800                	addi	s0,sp,48
20404a26:	fca42e23          	sw	a0,-36(s0)
20404a2a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:758
    int rc = 0;
20404a2e:	fe042623          	sw	zero,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:762
    struct metal_interrupt *sw_intc;
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404a32:	fdc42503          	lw	a0,-36(s0)
20404a36:	f44fe0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20404a3a:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:764

    if (intc) {
20404a3e:	fe842783          	lw	a5,-24(s0)
20404a42:	c79d                	beqz	a5,20404a70 <__metal_driver_cpu_get_msip+0x52>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:765
        sw_intc = intc->metal_int_table[METAL_INTERRUPT_ID_SW].sub_int;
20404a44:	fe842783          	lw	a5,-24(s0)
20404a48:	0dc7a783          	lw	a5,220(a5)
20404a4c:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:766
        if (sw_intc) {
20404a50:	fe442783          	lw	a5,-28(s0)
20404a54:	cf91                	beqz	a5,20404a70 <__metal_driver_cpu_get_msip+0x52>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:767
            rc = sw_intc->vtable->command_request(
20404a56:	fe442783          	lw	a5,-28(s0)
20404a5a:	439c                	lw	a5,0(a5)
20404a5c:	47f8                	lw	a4,76(a5)
20404a5e:	fd840793          	addi	a5,s0,-40
20404a62:	863e                	mv	a2,a5
20404a64:	4591                	li	a1,4
20404a66:	fe442503          	lw	a0,-28(s0)
20404a6a:	9702                	jalr	a4
20404a6c:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:771
                sw_intc, METAL_SOFTWARE_MSIP_GET, &hartid);
        }
    }
    return rc;
20404a70:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:772
}
20404a74:	853e                	mv	a0,a5
20404a76:	50b2                	lw	ra,44(sp)
20404a78:	5422                	lw	s0,40(sp)
20404a7a:	6145                	addi	sp,sp,48
20404a7c:	8082                	ret

20404a7e <__metal_driver_cpu_controller_interrupt>:
__metal_driver_cpu_controller_interrupt():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:775

struct metal_interrupt *
__metal_driver_cpu_controller_interrupt(struct metal_cpu *cpu) {
20404a7e:	1101                	addi	sp,sp,-32
20404a80:	ce06                	sw	ra,28(sp)
20404a82:	cc22                	sw	s0,24(sp)
20404a84:	1000                	addi	s0,sp,32
20404a86:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:776
    return __metal_driver_cpu_interrupt_controller(cpu);
20404a8a:	fec42503          	lw	a0,-20(s0)
20404a8e:	eecfe0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20404a92:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:777
}
20404a94:	853e                	mv	a0,a5
20404a96:	40f2                	lw	ra,28(sp)
20404a98:	4462                	lw	s0,24(sp)
20404a9a:	6105                	addi	sp,sp,32
20404a9c:	8082                	ret

20404a9e <__metal_driver_cpu_exception_register>:
__metal_driver_cpu_exception_register():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:798
    }
    return -1;
}

int __metal_driver_cpu_exception_register(struct metal_cpu *cpu, int ecode,
                                          metal_exception_handler_t isr) {
20404a9e:	7179                	addi	sp,sp,-48
20404aa0:	d606                	sw	ra,44(sp)
20404aa2:	d422                	sw	s0,40(sp)
20404aa4:	1800                	addi	s0,sp,48
20404aa6:	fca42e23          	sw	a0,-36(s0)
20404aaa:	fcb42c23          	sw	a1,-40(s0)
20404aae:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:801
    struct __metal_driver_riscv_cpu_intc *intc =
        (struct __metal_driver_riscv_cpu_intc *)
            __metal_driver_cpu_interrupt_controller(cpu);
20404ab2:	fdc42503          	lw	a0,-36(s0)
20404ab6:	ec4fe0ef          	jal	ra,2040317a <__metal_driver_cpu_interrupt_controller>
20404aba:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:803

    if (intc) {
20404abe:	fec42783          	lw	a5,-20(s0)
20404ac2:	cb99                	beqz	a5,20404ad8 <__metal_driver_cpu_exception_register+0x3a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:804
        return __metal_exception_register((struct metal_interrupt *)intc, ecode,
20404ac4:	fd442603          	lw	a2,-44(s0)
20404ac8:	fd842583          	lw	a1,-40(s0)
20404acc:	fec42503          	lw	a0,-20(s0)
20404ad0:	8a9ff0ef          	jal	ra,20404378 <__metal_exception_register>
20404ad4:	87aa                	mv	a5,a0
20404ad6:	a011                	j	20404ada <__metal_driver_cpu_exception_register+0x3c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:807
                                          isr);
    }
    return -1;
20404ad8:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:808
}
20404ada:	853e                	mv	a0,a5
20404adc:	50b2                	lw	ra,44(sp)
20404ade:	5422                	lw	s0,40(sp)
20404ae0:	6145                	addi	sp,sp,48
20404ae2:	8082                	ret

20404ae4 <__metal_driver_cpu_get_instruction_length>:
__metal_driver_cpu_get_instruction_length():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:811

int __metal_driver_cpu_get_instruction_length(struct metal_cpu *cpu,
                                              uintptr_t epc) {
20404ae4:	1101                	addi	sp,sp,-32
20404ae6:	ce22                	sw	s0,28(sp)
20404ae8:	1000                	addi	s0,sp,32
20404aea:	fea42623          	sw	a0,-20(s0)
20404aee:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:817
    /**
     * Per ISA compressed instruction has last two bits of opcode set.
     * The encoding '00' '01' '10' are used for compressed instruction.
     * Only enconding '11' isn't regarded as compressed instruction (>16b).
     */
    return ((*(unsigned short *)epc & METAL_INSN_LENGTH_MASK) ==
20404af2:	fe842783          	lw	a5,-24(s0)
20404af6:	0007d783          	lhu	a5,0(a5)
20404afa:	0037f713          	andi	a4,a5,3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:820
            METAL_INSN_NOT_COMPRESSED)
               ? 4
               : 2;
20404afe:	478d                	li	a5,3
20404b00:	00f71463          	bne	a4,a5,20404b08 <__metal_driver_cpu_get_instruction_length+0x24>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 1)
20404b04:	4791                	li	a5,4
20404b06:	a011                	j	20404b0a <__metal_driver_cpu_get_instruction_length+0x26>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:820 (discriminator 2)
20404b08:	4789                	li	a5,2
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:821 (discriminator 5)
}
20404b0a:	853e                	mv	a0,a5
20404b0c:	4472                	lw	s0,28(sp)
20404b0e:	6105                	addi	sp,sp,32
20404b10:	8082                	ret

20404b12 <__metal_driver_cpu_get_exception_pc>:
__metal_driver_cpu_get_exception_pc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:823

uintptr_t __metal_driver_cpu_get_exception_pc(struct metal_cpu *cpu) {
20404b12:	7179                	addi	sp,sp,-48
20404b14:	d622                	sw	s0,44(sp)
20404b16:	1800                	addi	s0,sp,48
20404b18:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:825
    uintptr_t mepc;
    __asm__ volatile("csrr %0, mepc" : "=r"(mepc));
20404b1c:	341027f3          	csrr	a5,mepc
20404b20:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:826
    return mepc;
20404b24:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:827
}
20404b28:	853e                	mv	a0,a5
20404b2a:	5432                	lw	s0,44(sp)
20404b2c:	6145                	addi	sp,sp,48
20404b2e:	8082                	ret

20404b30 <__metal_driver_cpu_set_exception_pc>:
__metal_driver_cpu_set_exception_pc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:829

int __metal_driver_cpu_set_exception_pc(struct metal_cpu *cpu, uintptr_t mepc) {
20404b30:	1101                	addi	sp,sp,-32
20404b32:	ce22                	sw	s0,28(sp)
20404b34:	1000                	addi	s0,sp,32
20404b36:	fea42623          	sw	a0,-20(s0)
20404b3a:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:830
    __asm__ volatile("csrw mepc, %0" ::"r"(mepc));
20404b3e:	fe842783          	lw	a5,-24(s0)
20404b42:	34179073          	csrw	mepc,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:831
    return 0;
20404b46:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:832
}
20404b48:	853e                	mv	a0,a5
20404b4a:	4472                	lw	s0,28(sp)
20404b4c:	6105                	addi	sp,sp,32
20404b4e:	8082                	ret

20404b50 <__metal_driver_cpu_get_buserror>:
__metal_driver_cpu_get_buserror():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:834

struct metal_buserror *__metal_driver_cpu_get_buserror(struct metal_cpu *cpu) {
20404b50:	1101                	addi	sp,sp,-32
20404b52:	ce06                	sw	ra,28(sp)
20404b54:	cc22                	sw	s0,24(sp)
20404b56:	1000                	addi	s0,sp,32
20404b58:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:835
    return __metal_driver_cpu_buserror(cpu);
20404b5c:	fec42503          	lw	a0,-20(s0)
20404b60:	e44fe0ef          	jal	ra,204031a4 <__metal_driver_cpu_buserror>
20404b64:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_cpu.c:836
}
20404b66:	853e                	mv	a0,a5
20404b68:	40f2                	lw	ra,28(sp)
20404b6a:	4462                	lw	s0,24(sp)
20404b6c:	6105                	addi	sp,sp,32
20404b6e:	8082                	ret

20404b70 <__metal_driver_sifive_plic0_control_base>:
__metal_driver_sifive_plic0_control_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:314



/* --------------------- sifive_plic0 ------------ */
static __inline__ unsigned long __metal_driver_sifive_plic0_control_base(struct metal_interrupt *controller)
{
20404b70:	1101                	addi	sp,sp,-32
20404b72:	ce22                	sw	s0,28(sp)
20404b74:	1000                	addi	s0,sp,32
20404b76:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:315
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404b7a:	fec42703          	lw	a4,-20(s0)
20404b7e:	800007b7          	lui	a5,0x80000
20404b82:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffeca8>
20404b86:	00f71563          	bne	a4,a5,20404b90 <__metal_driver_sifive_plic0_control_base+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:316
		return METAL_RISCV_PLIC0_C000000_BASE_ADDRESS;
20404b8a:	0c0007b7          	lui	a5,0xc000
20404b8e:	a011                	j	20404b92 <__metal_driver_sifive_plic0_control_base+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:319
	}
	else {
		return 0;
20404b90:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:321
	}
}
20404b92:	853e                	mv	a0,a5
20404b94:	4472                	lw	s0,28(sp)
20404b96:	6105                	addi	sp,sp,32
20404b98:	8082                	ret

20404b9a <__metal_driver_sifive_plic0_num_interrupts>:
__metal_driver_sifive_plic0_num_interrupts():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:334
		return 0;
	}
}

static __inline__ int __metal_driver_sifive_plic0_num_interrupts(struct metal_interrupt *controller)
{
20404b9a:	1101                	addi	sp,sp,-32
20404b9c:	ce22                	sw	s0,28(sp)
20404b9e:	1000                	addi	s0,sp,32
20404ba0:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:335
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404ba4:	fec42703          	lw	a4,-20(s0)
20404ba8:	800007b7          	lui	a5,0x80000
20404bac:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffeca8>
20404bb0:	00f71463          	bne	a4,a5,20404bb8 <__metal_driver_sifive_plic0_num_interrupts+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:336
		return METAL_RISCV_PLIC0_C000000_RISCV_NDEV;
20404bb4:	47ed                	li	a5,27
20404bb6:	a011                	j	20404bba <__metal_driver_sifive_plic0_num_interrupts+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:339
	}
	else {
		return 0;
20404bb8:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:341
	}
}
20404bba:	853e                	mv	a0,a5
20404bbc:	4472                	lw	s0,28(sp)
20404bbe:	6105                	addi	sp,sp,32
20404bc0:	8082                	ret

20404bc2 <__metal_driver_sifive_plic0_max_priority>:
__metal_driver_sifive_plic0_max_priority():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:344

static __inline__ int __metal_driver_sifive_plic0_max_priority(struct metal_interrupt *controller)
{
20404bc2:	1101                	addi	sp,sp,-32
20404bc4:	ce22                	sw	s0,28(sp)
20404bc6:	1000                	addi	s0,sp,32
20404bc8:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:345
	if ((uintptr_t)controller == (uintptr_t)&__metal_dt_interrupt_controller_c000000) {
20404bcc:	fec42703          	lw	a4,-20(s0)
20404bd0:	800007b7          	lui	a5,0x80000
20404bd4:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffeca8>
20404bd8:	00f71463          	bne	a4,a5,20404be0 <__metal_driver_sifive_plic0_max_priority+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:346
		return METAL_RISCV_PLIC0_C000000_RISCV_MAX_PRIORITY;
20404bdc:	479d                	li	a5,7
20404bde:	a011                	j	20404be2 <__metal_driver_sifive_plic0_max_priority+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:349
	}
	else {
		return 0;
20404be0:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:351
	}
}
20404be2:	853e                	mv	a0,a5
20404be4:	4472                	lw	s0,28(sp)
20404be6:	6105                	addi	sp,sp,32
20404be8:	8082                	ret

20404bea <__metal_driver_sifive_plic0_interrupt_parents>:
__metal_driver_sifive_plic0_interrupt_parents():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:354

static __inline__ struct metal_interrupt * __metal_driver_sifive_plic0_interrupt_parents(struct metal_interrupt *controller, int idx)
{
20404bea:	1101                	addi	sp,sp,-32
20404bec:	ce22                	sw	s0,28(sp)
20404bee:	1000                	addi	s0,sp,32
20404bf0:	fea42623          	sw	a0,-20(s0)
20404bf4:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:355
	if (idx == 0) {
20404bf8:	fe842783          	lw	a5,-24(s0)
20404bfc:	e791                	bnez	a5,20404c08 <__metal_driver_sifive_plic0_interrupt_parents+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:356
		return (struct metal_interrupt *)&__metal_dt_cpu_0_interrupt_controller.controller;
20404bfe:	800007b7          	lui	a5,0x80000
20404c02:	08878793          	addi	a5,a5,136 # 80000088 <metal_segment_heap_target_end+0xffffe8d8>
20404c06:	a011                	j	20404c0a <__metal_driver_sifive_plic0_interrupt_parents+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:359
	}
	else {
		return NULL;
20404c08:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:361
	}
}
20404c0a:	853e                	mv	a0,a5
20404c0c:	4472                	lw	s0,28(sp)
20404c0e:	6105                	addi	sp,sp,32
20404c10:	8082                	ret

20404c12 <__metal_driver_sifive_plic0_interrupt_lines>:
__metal_driver_sifive_plic0_interrupt_lines():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:364

static __inline__ int __metal_driver_sifive_plic0_interrupt_lines(struct metal_interrupt *controller, int idx)
{
20404c12:	1101                	addi	sp,sp,-32
20404c14:	ce22                	sw	s0,28(sp)
20404c16:	1000                	addi	s0,sp,32
20404c18:	fea42623          	sw	a0,-20(s0)
20404c1c:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:365
	if (idx == 0) {
20404c20:	fe842783          	lw	a5,-24(s0)
20404c24:	e399                	bnez	a5,20404c2a <__metal_driver_sifive_plic0_interrupt_lines+0x18>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:366
		return 11;
20404c26:	47ad                	li	a5,11
20404c28:	a011                	j	20404c2c <__metal_driver_sifive_plic0_interrupt_lines+0x1a>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:369
	}
	else {
		return 0;
20404c2a:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:371
	}
}
20404c2c:	853e                	mv	a0,a5
20404c2e:	4472                	lw	s0,28(sp)
20404c30:	6105                	addi	sp,sp,32
20404c32:	8082                	ret

20404c34 <__metal_driver_sifive_plic0_context_ids>:
__metal_driver_sifive_plic0_context_ids():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:374

static __inline__ int __metal_driver_sifive_plic0_context_ids(int hartid)
{
20404c34:	1101                	addi	sp,sp,-32
20404c36:	ce22                	sw	s0,28(sp)
20404c38:	1000                	addi	s0,sp,32
20404c3a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:375
	if (hartid == 0) {
20404c3e:	fec42783          	lw	a5,-20(s0)
20404c42:	e399                	bnez	a5,20404c48 <__metal_driver_sifive_plic0_context_ids+0x14>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:376
		return 0;
20404c44:	4781                	li	a5,0
20404c46:	a011                	j	20404c4a <__metal_driver_sifive_plic0_context_ids+0x16>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:379
	}
	else {
		return -1;
20404c48:	57fd                	li	a5,-1
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:381
	}
}
20404c4a:	853e                	mv	a0,a5
20404c4c:	4472                	lw	s0,28(sp)
20404c4e:	6105                	addi	sp,sp,32
20404c50:	8082                	ret

20404c52 <__metal_plic0_claim_interrupt>:
__metal_plic0_claim_interrupt():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:18
#include <metal/machine.h>
#include <metal/shutdown.h>

unsigned int
__metal_plic0_claim_interrupt(struct __metal_driver_riscv_plic0 *plic,
                              int context_id) {
20404c52:	7179                	addi	sp,sp,-48
20404c54:	d606                	sw	ra,44(sp)
20404c56:	d422                	sw	s0,40(sp)
20404c58:	1800                	addi	s0,sp,48
20404c5a:	fca42e23          	sw	a0,-36(s0)
20404c5e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:19
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404c62:	fdc42503          	lw	a0,-36(s0)
20404c66:	3729                	jal	20404b70 <__metal_driver_sifive_plic0_control_base>
20404c68:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:21
        (struct metal_interrupt *)plic);
    return __METAL_ACCESS_ONCE(
20404c6c:	fd842783          	lw	a5,-40(s0)
20404c70:	00c79713          	slli	a4,a5,0xc
20404c74:	fec42783          	lw	a5,-20(s0)
20404c78:	973e                	add	a4,a4,a5
20404c7a:	002007b7          	lui	a5,0x200
20404c7e:	0791                	addi	a5,a5,4
20404c80:	97ba                	add	a5,a5,a4
20404c82:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:25
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM));
}
20404c84:	853e                	mv	a0,a5
20404c86:	50b2                	lw	ra,44(sp)
20404c88:	5422                	lw	s0,40(sp)
20404c8a:	6145                	addi	sp,sp,48
20404c8c:	8082                	ret

20404c8e <__metal_plic0_complete_interrupt>:
__metal_plic0_complete_interrupt():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:28

void __metal_plic0_complete_interrupt(struct __metal_driver_riscv_plic0 *plic,
                                      int context_id, unsigned int id) {
20404c8e:	7179                	addi	sp,sp,-48
20404c90:	d606                	sw	ra,44(sp)
20404c92:	d422                	sw	s0,40(sp)
20404c94:	1800                	addi	s0,sp,48
20404c96:	fca42e23          	sw	a0,-36(s0)
20404c9a:	fcb42c23          	sw	a1,-40(s0)
20404c9e:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:29
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404ca2:	fdc42503          	lw	a0,-36(s0)
20404ca6:	35e9                	jal	20404b70 <__metal_driver_sifive_plic0_control_base>
20404ca8:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:31
        (struct metal_interrupt *)plic);
    __METAL_ACCESS_ONCE(
20404cac:	fd842783          	lw	a5,-40(s0)
20404cb0:	00c79713          	slli	a4,a5,0xc
20404cb4:	fec42783          	lw	a5,-20(s0)
20404cb8:	973e                	add	a4,a4,a5
20404cba:	002007b7          	lui	a5,0x200
20404cbe:	0791                	addi	a5,a5,4
20404cc0:	97ba                	add	a5,a5,a4
20404cc2:	873e                	mv	a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:34
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_CLAIM)) = id;
20404cc4:	fd442783          	lw	a5,-44(s0)
20404cc8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:35
}
20404cca:	0001                	nop
20404ccc:	50b2                	lw	ra,44(sp)
20404cce:	5422                	lw	s0,40(sp)
20404cd0:	6145                	addi	sp,sp,48
20404cd2:	8082                	ret

20404cd4 <__metal_plic0_set_threshold>:
__metal_plic0_set_threshold():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:38

int __metal_plic0_set_threshold(struct metal_interrupt *controller,
                                int context_id, unsigned int threshold) {
20404cd4:	7179                	addi	sp,sp,-48
20404cd6:	d606                	sw	ra,44(sp)
20404cd8:	d422                	sw	s0,40(sp)
20404cda:	1800                	addi	s0,sp,48
20404cdc:	fca42e23          	sw	a0,-36(s0)
20404ce0:	fcb42c23          	sw	a1,-40(s0)
20404ce4:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:40
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404ce8:	fdc42503          	lw	a0,-36(s0)
20404cec:	3551                	jal	20404b70 <__metal_driver_sifive_plic0_control_base>
20404cee:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:41
    __METAL_ACCESS_ONCE(
20404cf2:	fd842783          	lw	a5,-40(s0)
20404cf6:	00c79713          	slli	a4,a5,0xc
20404cfa:	fec42783          	lw	a5,-20(s0)
20404cfe:	973e                	add	a4,a4,a5
20404d00:	002007b7          	lui	a5,0x200
20404d04:	97ba                	add	a5,a5,a4
20404d06:	873e                	mv	a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:44
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD)) = threshold;
20404d08:	fd442783          	lw	a5,-44(s0)
20404d0c:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:45
    return 0;
20404d0e:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:46
}
20404d10:	853e                	mv	a0,a5
20404d12:	50b2                	lw	ra,44(sp)
20404d14:	5422                	lw	s0,40(sp)
20404d16:	6145                	addi	sp,sp,48
20404d18:	8082                	ret

20404d1a <__metal_plic0_get_threshold>:
__metal_plic0_get_threshold():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:49

unsigned int __metal_plic0_get_threshold(struct metal_interrupt *controller,
                                         int context_id) {
20404d1a:	7179                	addi	sp,sp,-48
20404d1c:	d606                	sw	ra,44(sp)
20404d1e:	d422                	sw	s0,40(sp)
20404d20:	1800                	addi	s0,sp,48
20404d22:	fca42e23          	sw	a0,-36(s0)
20404d26:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:51
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404d2a:	fdc42503          	lw	a0,-36(s0)
20404d2e:	3589                	jal	20404b70 <__metal_driver_sifive_plic0_control_base>
20404d30:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:52
    return __METAL_ACCESS_ONCE(
20404d34:	fd842783          	lw	a5,-40(s0)
20404d38:	00c79713          	slli	a4,a5,0xc
20404d3c:	fec42783          	lw	a5,-20(s0)
20404d40:	973e                	add	a4,a4,a5
20404d42:	002007b7          	lui	a5,0x200
20404d46:	97ba                	add	a5,a5,a4
20404d48:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:56
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_CONTEXT_BASE +
                           (context_id * METAL_RISCV_PLIC0_CONTEXT_PER_HART) +
                           METAL_RISCV_PLIC0_CONTEXT_THRESHOLD));
}
20404d4a:	853e                	mv	a0,a5
20404d4c:	50b2                	lw	ra,44(sp)
20404d4e:	5422                	lw	s0,40(sp)
20404d50:	6145                	addi	sp,sp,48
20404d52:	8082                	ret

20404d54 <__metal_driver_riscv_plic0_set_priority>:
__metal_driver_riscv_plic0_set_priority():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:59

int __metal_driver_riscv_plic0_set_priority(struct metal_interrupt *controller,
                                            int id, unsigned int priority) {
20404d54:	7179                	addi	sp,sp,-48
20404d56:	d606                	sw	ra,44(sp)
20404d58:	d422                	sw	s0,40(sp)
20404d5a:	1800                	addi	s0,sp,48
20404d5c:	fca42e23          	sw	a0,-36(s0)
20404d60:	fcb42c23          	sw	a1,-40(s0)
20404d64:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:60
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404d68:	fdc42503          	lw	a0,-36(s0)
20404d6c:	3511                	jal	20404b70 <__metal_driver_sifive_plic0_control_base>
20404d6e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:62
        (struct metal_interrupt *)controller);
    unsigned int max_priority = __metal_driver_sifive_plic0_max_priority(
20404d72:	fdc42503          	lw	a0,-36(s0)
20404d76:	35b1                	jal	20404bc2 <__metal_driver_sifive_plic0_max_priority>
20404d78:	87aa                	mv	a5,a0
20404d7a:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:64
        (struct metal_interrupt *)controller);
    if ((max_priority) && (priority < max_priority)) {
20404d7e:	fe842783          	lw	a5,-24(s0)
20404d82:	c785                	beqz	a5,20404daa <__metal_driver_riscv_plic0_set_priority+0x56>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:64 (discriminator 1)
20404d84:	fd442703          	lw	a4,-44(s0)
20404d88:	fe842783          	lw	a5,-24(s0)
20404d8c:	00f77f63          	bgeu	a4,a5,20404daa <__metal_driver_riscv_plic0_set_priority+0x56>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:65
        __METAL_ACCESS_ONCE(
20404d90:	fd842783          	lw	a5,-40(s0)
20404d94:	078a                	slli	a5,a5,0x2
20404d96:	873e                	mv	a4,a5
20404d98:	fec42783          	lw	a5,-20(s0)
20404d9c:	97ba                	add	a5,a5,a4
20404d9e:	873e                	mv	a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:67
            (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                               (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT))) =
20404da0:	fd442783          	lw	a5,-44(s0)
20404da4:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:69
            priority;
        return 0;
20404da6:	4781                	li	a5,0
20404da8:	a011                	j	20404dac <__metal_driver_riscv_plic0_set_priority+0x58>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:71
    }
    return -1;
20404daa:	57fd                	li	a5,-1
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:72
}
20404dac:	853e                	mv	a0,a5
20404dae:	50b2                	lw	ra,44(sp)
20404db0:	5422                	lw	s0,40(sp)
20404db2:	6145                	addi	sp,sp,48
20404db4:	8082                	ret

20404db6 <__metal_driver_riscv_plic0_get_priority>:
__metal_driver_riscv_plic0_get_priority():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:76

unsigned int
__metal_driver_riscv_plic0_get_priority(struct metal_interrupt *controller,
                                        int id) {
20404db6:	7179                	addi	sp,sp,-48
20404db8:	d606                	sw	ra,44(sp)
20404dba:	d422                	sw	s0,40(sp)
20404dbc:	1800                	addi	s0,sp,48
20404dbe:	fca42e23          	sw	a0,-36(s0)
20404dc2:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:78
    unsigned long control_base =
        __metal_driver_sifive_plic0_control_base(controller);
20404dc6:	fdc42503          	lw	a0,-36(s0)
20404dca:	335d                	jal	20404b70 <__metal_driver_sifive_plic0_control_base>
20404dcc:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:80

    return __METAL_ACCESS_ONCE(
20404dd0:	fd842783          	lw	a5,-40(s0)
20404dd4:	078a                	slli	a5,a5,0x2
20404dd6:	873e                	mv	a4,a5
20404dd8:	fec42783          	lw	a5,-20(s0)
20404ddc:	97ba                	add	a5,a5,a4
20404dde:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:83
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_PRIORITY_BASE +
                           (id << METAL_PLIC_SOURCE_PRIORITY_SHIFT)));
}
20404de0:	853e                	mv	a0,a5
20404de2:	50b2                	lw	ra,44(sp)
20404de4:	5422                	lw	s0,40(sp)
20404de6:	6145                	addi	sp,sp,48
20404de8:	8082                	ret

20404dea <__metal_plic0_enable>:
__metal_plic0_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:86

int __metal_plic0_enable(struct __metal_driver_riscv_plic0 *plic,
                         int context_id, int id, int enable) {
20404dea:	7179                	addi	sp,sp,-48
20404dec:	d606                	sw	ra,44(sp)
20404dee:	d422                	sw	s0,40(sp)
20404df0:	1800                	addi	s0,sp,48
20404df2:	fca42e23          	sw	a0,-36(s0)
20404df6:	fcb42c23          	sw	a1,-40(s0)
20404dfa:	fcc42a23          	sw	a2,-44(s0)
20404dfe:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:88
    unsigned int current;
    unsigned long control_base = __metal_driver_sifive_plic0_control_base(
20404e02:	fdc42503          	lw	a0,-36(s0)
20404e06:	33ad                	jal	20404b70 <__metal_driver_sifive_plic0_control_base>
20404e08:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:91
        (struct metal_interrupt *)plic);

    current = __METAL_ACCESS_ONCE(
20404e0c:	fd842783          	lw	a5,-40(s0)
20404e10:	00779713          	slli	a4,a5,0x7
20404e14:	fec42783          	lw	a5,-20(s0)
20404e18:	97ba                	add	a5,a5,a4
20404e1a:	fd442703          	lw	a4,-44(s0)
20404e1e:	8715                	srai	a4,a4,0x5
20404e20:	070a                	slli	a4,a4,0x2
20404e22:	973e                	add	a4,a4,a5
20404e24:	6789                	lui	a5,0x2
20404e26:	97ba                	add	a5,a5,a4
20404e28:	439c                	lw	a5,0(a5)
20404e2a:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:100
    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(control_base + METAL_RISCV_PLIC0_ENABLE_BASE +
                           (context_id * METAL_RISCV_PLIC0_ENABLE_PER_HART) +
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20404e2e:	fd042783          	lw	a5,-48(s0)
20404e32:	cf81                	beqz	a5,20404e4a <__metal_plic0_enable+0x60>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:99 (discriminator 1)
        enable ? (current | (1 << (id & METAL_PLIC_SOURCE_MASK)))
20404e34:	fd442783          	lw	a5,-44(s0)
20404e38:	8bfd                	andi	a5,a5,31
20404e3a:	4705                	li	a4,1
20404e3c:	00f717b3          	sll	a5,a4,a5
20404e40:	873e                	mv	a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 1)
               : (current & ~(1 << (id & METAL_PLIC_SOURCE_MASK)));
20404e42:	fe842783          	lw	a5,-24(s0)
20404e46:	8fd9                	or	a5,a5,a4
20404e48:	a829                	j	20404e62 <__metal_plic0_enable+0x78>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:100 (discriminator 2)
20404e4a:	fd442783          	lw	a5,-44(s0)
20404e4e:	8bfd                	andi	a5,a5,31
20404e50:	4705                	li	a4,1
20404e52:	00f717b3          	sll	a5,a4,a5
20404e56:	fff7c793          	not	a5,a5
20404e5a:	873e                	mv	a4,a5
20404e5c:	fe842783          	lw	a5,-24(s0)
20404e60:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:95
    __METAL_ACCESS_ONCE(
20404e62:	fd842703          	lw	a4,-40(s0)
20404e66:	00771693          	slli	a3,a4,0x7
20404e6a:	fec42703          	lw	a4,-20(s0)
20404e6e:	9736                	add	a4,a4,a3
20404e70:	fd442683          	lw	a3,-44(s0)
20404e74:	8695                	srai	a3,a3,0x5
20404e76:	068a                	slli	a3,a3,0x2
20404e78:	96ba                	add	a3,a3,a4
20404e7a:	6709                	lui	a4,0x2
20404e7c:	9736                	add	a4,a4,a3
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:98
                           ((id >> METAL_PLIC_SOURCE_SHIFT) * 4))) =
20404e7e:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:102

    return 0;
20404e80:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:103
}
20404e82:	853e                	mv	a0,a5
20404e84:	50b2                	lw	ra,44(sp)
20404e86:	5422                	lw	s0,40(sp)
20404e88:	6145                	addi	sp,sp,48
20404e8a:	8082                	ret

20404e8c <__metal_plic0_default_handler>:
__metal_plic0_default_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:105

void __metal_plic0_default_handler(int id, void *priv) { metal_shutdown(300); }
20404e8c:	1101                	addi	sp,sp,-32
20404e8e:	ce06                	sw	ra,28(sp)
20404e90:	cc22                	sw	s0,24(sp)
20404e92:	1000                	addi	s0,sp,32
20404e94:	fea42623          	sw	a0,-20(s0)
20404e98:	feb42423          	sw	a1,-24(s0)
20404e9c:	12c00513          	li	a0,300
20404ea0:	098020ef          	jal	ra,20406f38 <metal_shutdown>

20404ea4 <__metal_plic0_handler>:
__metal_plic0_handler():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:107

void __metal_plic0_handler(int id, void *priv) {
20404ea4:	7179                	addi	sp,sp,-48
20404ea6:	d606                	sw	ra,44(sp)
20404ea8:	d422                	sw	s0,40(sp)
20404eaa:	1800                	addi	s0,sp,48
20404eac:	fca42e23          	sw	a0,-36(s0)
20404eb0:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:108
    struct __metal_driver_riscv_plic0 *plic = priv;
20404eb4:	fd842783          	lw	a5,-40(s0)
20404eb8:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:110
    int contextid =
        __metal_driver_sifive_plic0_context_ids(__metal_myhart_id());
20404ebc:	b3cfe0ef          	jal	ra,204031f8 <__metal_myhart_id>
20404ec0:	87aa                	mv	a5,a0
20404ec2:	853e                	mv	a0,a5
20404ec4:	3b85                	jal	20404c34 <__metal_driver_sifive_plic0_context_ids>
20404ec6:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:111
    unsigned int idx = __metal_plic0_claim_interrupt(plic, contextid);
20404eca:	fe842583          	lw	a1,-24(s0)
20404ece:	fec42503          	lw	a0,-20(s0)
20404ed2:	3341                	jal	20404c52 <__metal_plic0_claim_interrupt>
20404ed4:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:112
    unsigned int num_interrupts = __metal_driver_sifive_plic0_num_interrupts(
20404ed8:	fec42503          	lw	a0,-20(s0)
20404edc:	397d                	jal	20404b9a <__metal_driver_sifive_plic0_num_interrupts>
20404ede:	87aa                	mv	a5,a0
20404ee0:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:115
        (struct metal_interrupt *)plic);

    if ((idx < num_interrupts) && (plic->metal_exint_table[idx])) {
20404ee4:	fe442703          	lw	a4,-28(s0)
20404ee8:	fe042783          	lw	a5,-32(s0)
20404eec:	04f77263          	bgeu	a4,a5,20404f30 <__metal_plic0_handler+0x8c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:115 (discriminator 1)
20404ef0:	fec42703          	lw	a4,-20(s0)
20404ef4:	fe442783          	lw	a5,-28(s0)
20404ef8:	078a                	slli	a5,a5,0x2
20404efa:	97ba                	add	a5,a5,a4
20404efc:	479c                	lw	a5,8(a5)
20404efe:	cb8d                	beqz	a5,20404f30 <__metal_plic0_handler+0x8c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:116
        plic->metal_exint_table[idx](idx,
20404f00:	fec42703          	lw	a4,-20(s0)
20404f04:	fe442783          	lw	a5,-28(s0)
20404f08:	078a                	slli	a5,a5,0x2
20404f0a:	97ba                	add	a5,a5,a4
20404f0c:	0087a803          	lw	a6,8(a5) # 2008 <__heap_size+0x1808>
20404f10:	fe442603          	lw	a2,-28(s0)
20404f14:	fec42683          	lw	a3,-20(s0)
20404f18:	fe442703          	lw	a4,-28(s0)
20404f1c:	87ba                	mv	a5,a4
20404f1e:	0786                	slli	a5,a5,0x1
20404f20:	97ba                	add	a5,a5,a4
20404f22:	078e                	slli	a5,a5,0x3
20404f24:	97b6                	add	a5,a5,a3
20404f26:	0887a783          	lw	a5,136(a5)
20404f2a:	85be                	mv	a1,a5
20404f2c:	8532                	mv	a0,a2
20404f2e:	9802                	jalr	a6
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:120
                                     plic->metal_exdata_table[idx].exint_data);
    }

    __metal_plic0_complete_interrupt(plic, contextid, idx);
20404f30:	fe442603          	lw	a2,-28(s0)
20404f34:	fe842583          	lw	a1,-24(s0)
20404f38:	fec42503          	lw	a0,-20(s0)
20404f3c:	3b89                	jal	20404c8e <__metal_plic0_complete_interrupt>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:121
}
20404f3e:	0001                	nop
20404f40:	50b2                	lw	ra,44(sp)
20404f42:	5422                	lw	s0,40(sp)
20404f44:	6145                	addi	sp,sp,48
20404f46:	8082                	ret

20404f48 <__metal_driver_riscv_plic0_init>:
__metal_driver_riscv_plic0_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:123

void __metal_driver_riscv_plic0_init(struct metal_interrupt *controller) {
20404f48:	7139                	addi	sp,sp,-64
20404f4a:	de06                	sw	ra,60(sp)
20404f4c:	dc22                	sw	s0,56(sp)
20404f4e:	0080                	addi	s0,sp,64
20404f50:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:124
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20404f54:	fcc42783          	lw	a5,-52(s0)
20404f58:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:126

    if (!plic->init_done) {
20404f5c:	fe442783          	lw	a5,-28(s0)
20404f60:	43dc                	lw	a5,4(a5)
20404f62:	12079a63          	bnez	a5,20405096 <__metal_driver_riscv_plic0_init+0x14e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:130
        int num_interrupts, line;
        struct metal_interrupt *intc;

        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
20404f66:	fe042623          	sw	zero,-20(s0)
20404f6a:	aa31                	j	20405086 <__metal_driver_riscv_plic0_init+0x13e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:132
            num_interrupts =
                __metal_driver_sifive_plic0_num_interrupts(controller);
20404f6c:	fcc42503          	lw	a0,-52(s0)
20404f70:	c2bff0ef          	jal	ra,20404b9a <__metal_driver_sifive_plic0_num_interrupts>
20404f74:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:133
            intc = __metal_driver_sifive_plic0_interrupt_parents(controller,
20404f78:	fec42583          	lw	a1,-20(s0)
20404f7c:	fcc42503          	lw	a0,-52(s0)
20404f80:	c6bff0ef          	jal	ra,20404bea <__metal_driver_sifive_plic0_interrupt_parents>
20404f84:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:136
                                                                 parent);
            line =
                __metal_driver_sifive_plic0_interrupt_lines(controller, parent);
20404f88:	fec42583          	lw	a1,-20(s0)
20404f8c:	fcc42503          	lw	a0,-52(s0)
20404f90:	c83ff0ef          	jal	ra,20404c12 <__metal_driver_sifive_plic0_interrupt_lines>
20404f94:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:139

            /* Initialize ist parent controller, aka cpu_intc. */
            intc->vtable->interrupt_init(intc);
20404f98:	fdc42783          	lw	a5,-36(s0)
20404f9c:	439c                	lw	a5,0(a5)
20404f9e:	439c                	lw	a5,0(a5)
20404fa0:	fdc42503          	lw	a0,-36(s0)
20404fa4:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:141

            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20404fa6:	fe042423          	sw	zero,-24(s0)
20404faa:	a885                	j	2040501a <__metal_driver_riscv_plic0_init+0xd2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:142
                __metal_plic0_enable(plic, parent, i, METAL_DISABLE);
20404fac:	4681                	li	a3,0
20404fae:	fe842603          	lw	a2,-24(s0)
20404fb2:	fec42583          	lw	a1,-20(s0)
20404fb6:	fe442503          	lw	a0,-28(s0)
20404fba:	3d05                	jal	20404dea <__metal_plic0_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:143
                if (i < num_interrupts) {
20404fbc:	fe842703          	lw	a4,-24(s0)
20404fc0:	fe042783          	lw	a5,-32(s0)
20404fc4:	04f75663          	bge	a4,a5,20405010 <__metal_driver_riscv_plic0_init+0xc8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:144
                    __metal_driver_riscv_plic0_set_priority(controller, i, 0);
20404fc8:	4601                	li	a2,0
20404fca:	fe842583          	lw	a1,-24(s0)
20404fce:	fcc42503          	lw	a0,-52(s0)
20404fd2:	3349                	jal	20404d54 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:145
                    plic->metal_exint_table[i] = NULL;
20404fd4:	fe442703          	lw	a4,-28(s0)
20404fd8:	fe842783          	lw	a5,-24(s0)
20404fdc:	078a                	slli	a5,a5,0x2
20404fde:	97ba                	add	a5,a5,a4
20404fe0:	0007a423          	sw	zero,8(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:146
                    plic->metal_exdata_table[i].sub_int = NULL;
20404fe4:	fe442683          	lw	a3,-28(s0)
20404fe8:	fe842703          	lw	a4,-24(s0)
20404fec:	87ba                	mv	a5,a4
20404fee:	0786                	slli	a5,a5,0x1
20404ff0:	97ba                	add	a5,a5,a4
20404ff2:	078e                	slli	a5,a5,0x3
20404ff4:	97b6                	add	a5,a5,a3
20404ff6:	0807a223          	sw	zero,132(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:147
                    plic->metal_exdata_table[i].exint_data = NULL;
20404ffa:	fe442683          	lw	a3,-28(s0)
20404ffe:	fe842703          	lw	a4,-24(s0)
20405002:	87ba                	mv	a5,a4
20405004:	0786                	slli	a5,a5,0x1
20405006:	97ba                	add	a5,a5,a4
20405008:	078e                	slli	a5,a5,0x3
2040500a:	97b6                	add	a5,a5,a3
2040500c:	0807a423          	sw	zero,136(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 2)
            for (int i = 0; i < PLIC0_MAX_INTERRUPTS; i++) {
20405010:	fe842783          	lw	a5,-24(s0)
20405014:	0785                	addi	a5,a5,1
20405016:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:141 (discriminator 1)
2040501a:	fe842703          	lw	a4,-24(s0)
2040501e:	3ff00793          	li	a5,1023
20405022:	f8e7d5e3          	bge	a5,a4,20404fac <__metal_driver_riscv_plic0_init+0x64>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:151 (discriminator 2)
                }
            }

            __metal_plic0_set_threshold(controller, parent, 0);
20405026:	4601                	li	a2,0
20405028:	fec42583          	lw	a1,-20(s0)
2040502c:	fcc42503          	lw	a0,-52(s0)
20405030:	ca5ff0ef          	jal	ra,20404cd4 <__metal_plic0_set_threshold>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:154 (discriminator 2)

            /* Register plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_register(intc, line, NULL, plic);
20405034:	fdc42783          	lw	a5,-36(s0)
20405038:	439c                	lw	a5,0(a5)
2040503a:	4fdc                	lw	a5,28(a5)
2040503c:	fe442683          	lw	a3,-28(s0)
20405040:	4601                	li	a2,0
20405042:	fd842583          	lw	a1,-40(s0)
20405046:	fdc42503          	lw	a0,-36(s0)
2040504a:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:156 (discriminator 2)
            /* Register plic handler for dispatching its device interrupts */
            intc->vtable->interrupt_register(intc, line, __metal_plic0_handler,
2040504c:	fdc42783          	lw	a5,-36(s0)
20405050:	439c                	lw	a5,0(a5)
20405052:	4fd8                	lw	a4,28(a5)
20405054:	fe442683          	lw	a3,-28(s0)
20405058:	204057b7          	lui	a5,0x20405
2040505c:	ea478613          	addi	a2,a5,-348 # 20404ea4 <__metal_plic0_handler>
20405060:	fd842583          	lw	a1,-40(s0)
20405064:	fdc42503          	lw	a0,-36(s0)
20405068:	9702                	jalr	a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:159 (discriminator 2)
                                             plic);
            /* Enable plic (ext) interrupt with with parent controller */
            intc->vtable->interrupt_enable(intc, line);
2040506a:	fdc42783          	lw	a5,-36(s0)
2040506e:	439c                	lw	a5,0(a5)
20405070:	53dc                	lw	a5,36(a5)
20405072:	fd842583          	lw	a1,-40(s0)
20405076:	fdc42503          	lw	a0,-36(s0)
2040507a:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 2)
        for (int parent = 0; parent < __METAL_PLIC_NUM_PARENTS; parent++) {
2040507c:	fec42783          	lw	a5,-20(s0)
20405080:	0785                	addi	a5,a5,1
20405082:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:130 (discriminator 1)
20405086:	fec42783          	lw	a5,-20(s0)
2040508a:	eef051e3          	blez	a5,20404f6c <__metal_driver_riscv_plic0_init+0x24>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:161
        }
        plic->init_done = 1;
2040508e:	fe442783          	lw	a5,-28(s0)
20405092:	4705                	li	a4,1
20405094:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:163
    }
}
20405096:	0001                	nop
20405098:	50f2                	lw	ra,60(sp)
2040509a:	5462                	lw	s0,56(sp)
2040509c:	6121                	addi	sp,sp,64
2040509e:	8082                	ret

204050a0 <__metal_driver_riscv_plic0_register>:
__metal_driver_riscv_plic0_register():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:167

int __metal_driver_riscv_plic0_register(struct metal_interrupt *controller,
                                        int id, metal_interrupt_handler_t isr,
                                        void *priv) {
204050a0:	7179                	addi	sp,sp,-48
204050a2:	d606                	sw	ra,44(sp)
204050a4:	d422                	sw	s0,40(sp)
204050a6:	1800                	addi	s0,sp,48
204050a8:	fca42e23          	sw	a0,-36(s0)
204050ac:	fcb42c23          	sw	a1,-40(s0)
204050b0:	fcc42a23          	sw	a2,-44(s0)
204050b4:	fcd42823          	sw	a3,-48(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:168
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204050b8:	fdc42783          	lw	a5,-36(s0)
204050bc:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:170

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204050c0:	fdc42503          	lw	a0,-36(s0)
204050c4:	ad7ff0ef          	jal	ra,20404b9a <__metal_driver_sifive_plic0_num_interrupts>
204050c8:	872a                	mv	a4,a0
204050ca:	fd842783          	lw	a5,-40(s0)
204050ce:	00e7c463          	blt	a5,a4,204050d6 <__metal_driver_riscv_plic0_register+0x36>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:171
        return -1;
204050d2:	57fd                	li	a5,-1
204050d4:	a051                	j	20405158 <__metal_driver_riscv_plic0_register+0xb8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:174
    }

    if (isr) {
204050d6:	fd442783          	lw	a5,-44(s0)
204050da:	cf9d                	beqz	a5,20405118 <__metal_driver_riscv_plic0_register+0x78>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:175
        __metal_driver_riscv_plic0_set_priority(controller, id, 2);
204050dc:	4609                	li	a2,2
204050de:	fd842583          	lw	a1,-40(s0)
204050e2:	fdc42503          	lw	a0,-36(s0)
204050e6:	c6fff0ef          	jal	ra,20404d54 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:176
        plic->metal_exint_table[id] = isr;
204050ea:	fec42703          	lw	a4,-20(s0)
204050ee:	fd842783          	lw	a5,-40(s0)
204050f2:	078a                	slli	a5,a5,0x2
204050f4:	97ba                	add	a5,a5,a4
204050f6:	fd442703          	lw	a4,-44(s0)
204050fa:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:177
        plic->metal_exdata_table[id].exint_data = priv;
204050fc:	fec42683          	lw	a3,-20(s0)
20405100:	fd842703          	lw	a4,-40(s0)
20405104:	87ba                	mv	a5,a4
20405106:	0786                	slli	a5,a5,0x1
20405108:	97ba                	add	a5,a5,a4
2040510a:	078e                	slli	a5,a5,0x3
2040510c:	97b6                	add	a5,a5,a3
2040510e:	fd042703          	lw	a4,-48(s0)
20405112:	08e7a423          	sw	a4,136(a5)
20405116:	a081                	j	20405156 <__metal_driver_riscv_plic0_register+0xb6>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:179
    } else {
        __metal_driver_riscv_plic0_set_priority(controller, id, 1);
20405118:	4605                	li	a2,1
2040511a:	fd842583          	lw	a1,-40(s0)
2040511e:	fdc42503          	lw	a0,-36(s0)
20405122:	c33ff0ef          	jal	ra,20404d54 <__metal_driver_riscv_plic0_set_priority>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:180
        plic->metal_exint_table[id] = __metal_plic0_default_handler;
20405126:	fec42703          	lw	a4,-20(s0)
2040512a:	fd842783          	lw	a5,-40(s0)
2040512e:	078a                	slli	a5,a5,0x2
20405130:	97ba                	add	a5,a5,a4
20405132:	20405737          	lui	a4,0x20405
20405136:	e8c70713          	addi	a4,a4,-372 # 20404e8c <__metal_plic0_default_handler>
2040513a:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:181
        plic->metal_exdata_table[id].sub_int = priv;
2040513c:	fec42683          	lw	a3,-20(s0)
20405140:	fd842703          	lw	a4,-40(s0)
20405144:	87ba                	mv	a5,a4
20405146:	0786                	slli	a5,a5,0x1
20405148:	97ba                	add	a5,a5,a4
2040514a:	078e                	slli	a5,a5,0x3
2040514c:	97b6                	add	a5,a5,a3
2040514e:	fd042703          	lw	a4,-48(s0)
20405152:	08e7a223          	sw	a4,132(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:184
    }

    return 0;
20405156:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:185
}
20405158:	853e                	mv	a0,a5
2040515a:	50b2                	lw	ra,44(sp)
2040515c:	5422                	lw	s0,40(sp)
2040515e:	6145                	addi	sp,sp,48
20405160:	8082                	ret

20405162 <__metal_driver_riscv_plic0_enable>:
__metal_driver_riscv_plic0_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:188

int __metal_driver_riscv_plic0_enable(struct metal_interrupt *controller,
                                      int id) {
20405162:	7179                	addi	sp,sp,-48
20405164:	d606                	sw	ra,44(sp)
20405166:	d422                	sw	s0,40(sp)
20405168:	1800                	addi	s0,sp,48
2040516a:	fca42e23          	sw	a0,-36(s0)
2040516e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:189
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405172:	fdc42783          	lw	a5,-36(s0)
20405176:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:191

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040517a:	fdc42503          	lw	a0,-36(s0)
2040517e:	a1dff0ef          	jal	ra,20404b9a <__metal_driver_sifive_plic0_num_interrupts>
20405182:	872a                	mv	a4,a0
20405184:	fd842783          	lw	a5,-40(s0)
20405188:	00e7c463          	blt	a5,a4,20405190 <__metal_driver_riscv_plic0_enable+0x2e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:192
        return -1;
2040518c:	57fd                	li	a5,-1
2040518e:	a829                	j	204051a8 <__metal_driver_riscv_plic0_enable+0x46>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:195
    }

    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_ENABLE);
20405190:	868fe0ef          	jal	ra,204031f8 <__metal_myhart_id>
20405194:	87aa                	mv	a5,a0
20405196:	4685                	li	a3,1
20405198:	fd842603          	lw	a2,-40(s0)
2040519c:	85be                	mv	a1,a5
2040519e:	fec42503          	lw	a0,-20(s0)
204051a2:	c49ff0ef          	jal	ra,20404dea <__metal_plic0_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:196
    return 0;
204051a6:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:197
}
204051a8:	853e                	mv	a0,a5
204051aa:	50b2                	lw	ra,44(sp)
204051ac:	5422                	lw	s0,40(sp)
204051ae:	6145                	addi	sp,sp,48
204051b0:	8082                	ret

204051b2 <__metal_driver_riscv_plic0_disable>:
__metal_driver_riscv_plic0_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:200

int __metal_driver_riscv_plic0_disable(struct metal_interrupt *controller,
                                       int id) {
204051b2:	7179                	addi	sp,sp,-48
204051b4:	d606                	sw	ra,44(sp)
204051b6:	d422                	sw	s0,40(sp)
204051b8:	1800                	addi	s0,sp,48
204051ba:	fca42e23          	sw	a0,-36(s0)
204051be:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:201
    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
204051c2:	fdc42783          	lw	a5,-36(s0)
204051c6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:203

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
204051ca:	fdc42503          	lw	a0,-36(s0)
204051ce:	9cdff0ef          	jal	ra,20404b9a <__metal_driver_sifive_plic0_num_interrupts>
204051d2:	872a                	mv	a4,a0
204051d4:	fd842783          	lw	a5,-40(s0)
204051d8:	00e7c463          	blt	a5,a4,204051e0 <__metal_driver_riscv_plic0_disable+0x2e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:204
        return -1;
204051dc:	57fd                	li	a5,-1
204051de:	a829                	j	204051f8 <__metal_driver_riscv_plic0_disable+0x46>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:206
    }
    __metal_plic0_enable(plic, __metal_myhart_id(), id, METAL_DISABLE);
204051e0:	818fe0ef          	jal	ra,204031f8 <__metal_myhart_id>
204051e4:	87aa                	mv	a5,a0
204051e6:	4681                	li	a3,0
204051e8:	fd842603          	lw	a2,-40(s0)
204051ec:	85be                	mv	a1,a5
204051ee:	fec42503          	lw	a0,-20(s0)
204051f2:	bf9ff0ef          	jal	ra,20404dea <__metal_plic0_enable>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:207
    return 0;
204051f6:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:208
}
204051f8:	853e                	mv	a0,a5
204051fa:	50b2                	lw	ra,44(sp)
204051fc:	5422                	lw	s0,40(sp)
204051fe:	6145                	addi	sp,sp,48
20405200:	8082                	ret

20405202 <__metal_driver_riscv_plic0_set_threshold>:
__metal_driver_riscv_plic0_set_threshold():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:211

int __metal_driver_riscv_plic0_set_threshold(struct metal_interrupt *controller,
                                             unsigned int threshold) {
20405202:	1101                	addi	sp,sp,-32
20405204:	ce06                	sw	ra,28(sp)
20405206:	cc22                	sw	s0,24(sp)
20405208:	1000                	addi	s0,sp,32
2040520a:	fea42623          	sw	a0,-20(s0)
2040520e:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:212
    return __metal_plic0_set_threshold(controller, __metal_myhart_id(),
20405212:	fe7fd0ef          	jal	ra,204031f8 <__metal_myhart_id>
20405216:	87aa                	mv	a5,a0
20405218:	fe842603          	lw	a2,-24(s0)
2040521c:	85be                	mv	a1,a5
2040521e:	fec42503          	lw	a0,-20(s0)
20405222:	ab3ff0ef          	jal	ra,20404cd4 <__metal_plic0_set_threshold>
20405226:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:214
                                       threshold);
}
20405228:	853e                	mv	a0,a5
2040522a:	40f2                	lw	ra,28(sp)
2040522c:	4462                	lw	s0,24(sp)
2040522e:	6105                	addi	sp,sp,32
20405230:	8082                	ret

20405232 <__metal_driver_riscv_plic0_get_threshold>:
__metal_driver_riscv_plic0_get_threshold():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:217

unsigned int
__metal_driver_riscv_plic0_get_threshold(struct metal_interrupt *controller) {
20405232:	1101                	addi	sp,sp,-32
20405234:	ce06                	sw	ra,28(sp)
20405236:	cc22                	sw	s0,24(sp)
20405238:	1000                	addi	s0,sp,32
2040523a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:218
    return __metal_plic0_get_threshold(controller, __metal_myhart_id());
2040523e:	fbbfd0ef          	jal	ra,204031f8 <__metal_myhart_id>
20405242:	87aa                	mv	a5,a0
20405244:	85be                	mv	a1,a5
20405246:	fec42503          	lw	a0,-20(s0)
2040524a:	ad1ff0ef          	jal	ra,20404d1a <__metal_plic0_get_threshold>
2040524e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:219
}
20405250:	853e                	mv	a0,a5
20405252:	40f2                	lw	ra,28(sp)
20405254:	4462                	lw	s0,24(sp)
20405256:	6105                	addi	sp,sp,32
20405258:	8082                	ret

2040525a <__metal_driver_riscv_plic0_affinity_enable>:
__metal_driver_riscv_plic0_affinity_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:223

metal_affinity
__metal_driver_riscv_plic0_affinity_enable(struct metal_interrupt *controller,
                                           metal_affinity bitmask, int id) {
2040525a:	7179                	addi	sp,sp,-48
2040525c:	d606                	sw	ra,44(sp)
2040525e:	d422                	sw	s0,40(sp)
20405260:	1800                	addi	s0,sp,48
20405262:	fca42e23          	sw	a0,-36(s0)
20405266:	fcb42c23          	sw	a1,-40(s0)
2040526a:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:224
    metal_affinity ret = {0};
2040526e:	fe042223          	sw	zero,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:227
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
20405272:	fdc42783          	lw	a5,-36(s0)
20405276:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:229

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
2040527a:	fdc42503          	lw	a0,-36(s0)
2040527e:	91dff0ef          	jal	ra,20404b9a <__metal_driver_sifive_plic0_num_interrupts>
20405282:	872a                	mv	a4,a0
20405284:	fd442783          	lw	a5,-44(s0)
20405288:	00e7c863          	blt	a5,a4,20405298 <__metal_driver_riscv_plic0_affinity_enable+0x3e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:230
        metal_affinity_set_val(ret, -1);
2040528c:	57fd                	li	a5,-1
2040528e:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:231
        return ret;
20405292:	fe442783          	lw	a5,-28(s0)
20405296:	a899                	j	204052ec <__metal_driver_riscv_plic0_affinity_enable+0x92>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:234
    }

    for_each_metal_affinity(context, bitmask) {
20405298:	fe042623          	sw	zero,-20(s0)
2040529c:	a099                	j	204052e2 <__metal_driver_riscv_plic0_affinity_enable+0x88>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:235
        if (context != 0)
2040529e:	fec42783          	lw	a5,-20(s0)
204052a2:	c795                	beqz	a5,204052ce <__metal_driver_riscv_plic0_affinity_enable+0x74>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:236
            metal_affinity_set_bit(
204052a4:	4685                	li	a3,1
204052a6:	fd442603          	lw	a2,-44(s0)
204052aa:	fec42583          	lw	a1,-20(s0)
204052ae:	fe842503          	lw	a0,-24(s0)
204052b2:	b39ff0ef          	jal	ra,20404dea <__metal_plic0_enable>
204052b6:	87aa                	mv	a5,a0
204052b8:	0017f713          	andi	a4,a5,1
204052bc:	fec42783          	lw	a5,-20(s0)
204052c0:	00f71733          	sll	a4,a4,a5
204052c4:	fe442783          	lw	a5,-28(s0)
204052c8:	8fd9                	or	a5,a5,a4
204052ca:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204052ce:	fec42783          	lw	a5,-20(s0)
204052d2:	0785                	addi	a5,a5,1
204052d4:	fef42623          	sw	a5,-20(s0)
204052d8:	fd842783          	lw	a5,-40(s0)
204052dc:	8385                	srli	a5,a5,0x1
204052de:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:234 (discriminator 1)
204052e2:	fd842783          	lw	a5,-40(s0)
204052e6:	ffc5                	bnez	a5,2040529e <__metal_driver_riscv_plic0_affinity_enable+0x44>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:241
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_ENABLE));
    }

    return ret;
204052e8:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:242 (discriminator 1)
}
204052ec:	853e                	mv	a0,a5
204052ee:	50b2                	lw	ra,44(sp)
204052f0:	5422                	lw	s0,40(sp)
204052f2:	6145                	addi	sp,sp,48
204052f4:	8082                	ret

204052f6 <__metal_driver_riscv_plic0_affinity_disable>:
__metal_driver_riscv_plic0_affinity_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:246

metal_affinity
__metal_driver_riscv_plic0_affinity_disable(struct metal_interrupt *controller,
                                            metal_affinity bitmask, int id) {
204052f6:	7179                	addi	sp,sp,-48
204052f8:	d606                	sw	ra,44(sp)
204052fa:	d422                	sw	s0,40(sp)
204052fc:	1800                	addi	s0,sp,48
204052fe:	fca42e23          	sw	a0,-36(s0)
20405302:	fcb42c23          	sw	a1,-40(s0)
20405306:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:247
    metal_affinity ret = {0};
2040530a:	fe042223          	sw	zero,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:250
    int context;

    struct __metal_driver_riscv_plic0 *plic = (void *)(controller);
2040530e:	fdc42783          	lw	a5,-36(s0)
20405312:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:252

    if (id >= __metal_driver_sifive_plic0_num_interrupts(controller)) {
20405316:	fdc42503          	lw	a0,-36(s0)
2040531a:	881ff0ef          	jal	ra,20404b9a <__metal_driver_sifive_plic0_num_interrupts>
2040531e:	872a                	mv	a4,a0
20405320:	fd442783          	lw	a5,-44(s0)
20405324:	00e7c863          	blt	a5,a4,20405334 <__metal_driver_riscv_plic0_affinity_disable+0x3e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:253
        metal_affinity_set_val(ret, -1);
20405328:	57fd                	li	a5,-1
2040532a:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:254
        return ret;
2040532e:	fe442783          	lw	a5,-28(s0)
20405332:	a899                	j	20405388 <__metal_driver_riscv_plic0_affinity_disable+0x92>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:257
    }

    for_each_metal_affinity(context, bitmask) {
20405334:	fe042623          	sw	zero,-20(s0)
20405338:	a099                	j	2040537e <__metal_driver_riscv_plic0_affinity_disable+0x88>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:258
        if (context != 0)
2040533a:	fec42783          	lw	a5,-20(s0)
2040533e:	c795                	beqz	a5,2040536a <__metal_driver_riscv_plic0_affinity_disable+0x74>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:259
            metal_affinity_set_bit(
20405340:	4681                	li	a3,0
20405342:	fd442603          	lw	a2,-44(s0)
20405346:	fec42583          	lw	a1,-20(s0)
2040534a:	fe842503          	lw	a0,-24(s0)
2040534e:	a9dff0ef          	jal	ra,20404dea <__metal_plic0_enable>
20405352:	87aa                	mv	a5,a0
20405354:	0017f713          	andi	a4,a5,1
20405358:	fec42783          	lw	a5,-20(s0)
2040535c:	00f71733          	sll	a4,a4,a5
20405360:	fe442783          	lw	a5,-28(s0)
20405364:	8fd9                	or	a5,a5,a4
20405366:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
2040536a:	fec42783          	lw	a5,-20(s0)
2040536e:	0785                	addi	a5,a5,1
20405370:	fef42623          	sw	a5,-20(s0)
20405374:	fd842783          	lw	a5,-40(s0)
20405378:	8385                	srli	a5,a5,0x1
2040537a:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:257 (discriminator 1)
2040537e:	fd842783          	lw	a5,-40(s0)
20405382:	ffc5                	bnez	a5,2040533a <__metal_driver_riscv_plic0_affinity_disable+0x44>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:264
                ret, context,
                __metal_plic0_enable(plic, context, id, METAL_DISABLE));
    }

    return ret;
20405384:	fe442783          	lw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:265 (discriminator 1)
}
20405388:	853e                	mv	a0,a5
2040538a:	50b2                	lw	ra,44(sp)
2040538c:	5422                	lw	s0,40(sp)
2040538e:	6145                	addi	sp,sp,48
20405390:	8082                	ret

20405392 <__metal_driver_riscv_plic0_affinity_set_threshold>:
__metal_driver_riscv_plic0_affinity_set_threshold():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:269

metal_affinity __metal_driver_riscv_plic0_affinity_set_threshold(
    struct metal_interrupt *controller, metal_affinity bitmask,
    unsigned int threshold) {
20405392:	7179                	addi	sp,sp,-48
20405394:	d606                	sw	ra,44(sp)
20405396:	d422                	sw	s0,40(sp)
20405398:	1800                	addi	s0,sp,48
2040539a:	fca42e23          	sw	a0,-36(s0)
2040539e:	fcb42c23          	sw	a1,-40(s0)
204053a2:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:270
    metal_affinity ret = {0};
204053a6:	fe042423          	sw	zero,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:273
    int context;

    for_each_metal_affinity(context, bitmask) {
204053aa:	fe042623          	sw	zero,-20(s0)
204053ae:	a091                	j	204053f2 <__metal_driver_riscv_plic0_affinity_set_threshold+0x60>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:274
        if (context != 0)
204053b0:	fec42783          	lw	a5,-20(s0)
204053b4:	c78d                	beqz	a5,204053de <__metal_driver_riscv_plic0_affinity_set_threshold+0x4c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:275
            metal_affinity_set_bit(
204053b6:	fd442603          	lw	a2,-44(s0)
204053ba:	fec42583          	lw	a1,-20(s0)
204053be:	fdc42503          	lw	a0,-36(s0)
204053c2:	913ff0ef          	jal	ra,20404cd4 <__metal_plic0_set_threshold>
204053c6:	87aa                	mv	a5,a0
204053c8:	0017f713          	andi	a4,a5,1
204053cc:	fec42783          	lw	a5,-20(s0)
204053d0:	00f71733          	sll	a4,a4,a5
204053d4:	fe842783          	lw	a5,-24(s0)
204053d8:	8fd9                	or	a5,a5,a4
204053da:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 2)
    for_each_metal_affinity(context, bitmask) {
204053de:	fec42783          	lw	a5,-20(s0)
204053e2:	0785                	addi	a5,a5,1
204053e4:	fef42623          	sw	a5,-20(s0)
204053e8:	fd842783          	lw	a5,-40(s0)
204053ec:	8385                	srli	a5,a5,0x1
204053ee:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:273 (discriminator 1)
204053f2:	fd842783          	lw	a5,-40(s0)
204053f6:	ffcd                	bnez	a5,204053b0 <__metal_driver_riscv_plic0_affinity_set_threshold+0x1e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:280
                ret, context,
                __metal_plic0_set_threshold(controller, context, threshold));
    }

    return ret;
204053f8:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:281
}
204053fc:	853e                	mv	a0,a5
204053fe:	50b2                	lw	ra,44(sp)
20405400:	5422                	lw	s0,40(sp)
20405402:	6145                	addi	sp,sp,48
20405404:	8082                	ret

20405406 <__metal_driver_riscv_plic0_affinity_get_threshold>:
__metal_driver_riscv_plic0_affinity_get_threshold():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:284

unsigned int __metal_driver_riscv_plic0_affinity_get_threshold(
    struct metal_interrupt *controller, int context_id) {
20405406:	1101                	addi	sp,sp,-32
20405408:	ce06                	sw	ra,28(sp)
2040540a:	cc22                	sw	s0,24(sp)
2040540c:	1000                	addi	s0,sp,32
2040540e:	fea42623          	sw	a0,-20(s0)
20405412:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:285
    __metal_plic0_get_threshold(controller, context_id);
20405416:	fe842583          	lw	a1,-24(s0)
2040541a:	fec42503          	lw	a0,-20(s0)
2040541e:	8fdff0ef          	jal	ra,20404d1a <__metal_plic0_get_threshold>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:286
    return 0;
20405422:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/riscv_plic0.c:287
}
20405424:	853e                	mv	a0,a5
20405426:	40f2                	lw	ra,28(sp)
20405428:	4462                	lw	s0,24(sp)
2040542a:	6105                	addi	sp,sp,32
2040542c:	8082                	ret

2040542e <__metal_driver_sifive_fe310_g000_hfrosc_ref>:
__metal_driver_sifive_fe310_g000_hfrosc_ref():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1037



/* --------------------- sifive_fe310_g000_hfrosc ------------ */
static __inline__ struct metal_clock * __metal_driver_sifive_fe310_g000_hfrosc_ref(const struct metal_clock *clock)
{
2040542e:	1101                	addi	sp,sp,-32
20405430:	ce22                	sw	s0,28(sp)
20405432:	1000                	addi	s0,sp,32
20405434:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1038
		return (struct metal_clock *)&__metal_dt_clock_2.clock;
20405438:	800007b7          	lui	a5,0x80000
2040543c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8bc>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1039
}
20405440:	853e                	mv	a0,a5
20405442:	4472                	lw	s0,28(sp)
20405444:	6105                	addi	sp,sp,32
20405446:	8082                	ret

20405448 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>:
__metal_driver_sifive_fe310_g000_hfrosc_config_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1042

static __inline__ struct __metal_driver_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_hfrosc_config_base(const struct metal_clock *clock)
{
20405448:	1101                	addi	sp,sp,-32
2040544a:	ce22                	sw	s0,28(sp)
2040544c:	1000                	addi	s0,sp,32
2040544e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1043
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405452:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1044
}
20405456:	853e                	mv	a0,a5
20405458:	4472                	lw	s0,28(sp)
2040545a:	6105                	addi	sp,sp,32
2040545c:	8082                	ret

2040545e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfrosc_config_offset():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1052
{
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
}

static __inline__ long __metal_driver_sifive_fe310_g000_hfrosc_config_offset(const struct metal_clock *clock)
{
2040545e:	1101                	addi	sp,sp,-32
20405460:	ce22                	sw	s0,28(sp)
20405462:	1000                	addi	s0,sp,32
20405464:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1053
		return METAL_SIFIVE_FE310_G000_PRCI_HFROSCCFG;
20405468:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1054
}
2040546a:	853e                	mv	a0,a5
2040546c:	4472                	lw	s0,28(sp)
2040546e:	6105                	addi	sp,sp,32
20405470:	8082                	ret

20405472 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1169
{
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_SIZE;
}

static __inline__ const struct __metal_driver_vtable_sifive_fe310_g000_prci * __metal_driver_sifive_fe310_g000_prci_vtable( )
{
20405472:	1141                	addi	sp,sp,-16
20405474:	c622                	sw	s0,12(sp)
20405476:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405478:	204017b7          	lui	a5,0x20401
2040547c:	fe478793          	addi	a5,a5,-28 # 20400fe4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1171
}
20405480:	853e                	mv	a0,a5
20405482:	4432                	lw	s0,12(sp)
20405484:	0141                	addi	sp,sp,16
20405486:	8082                	ret

20405488 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:17
#define CONFIG_TRIM 0x001F0000UL
#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(
    const struct metal_clock *clock) {
20405488:	7139                	addi	sp,sp,-64
2040548a:	de06                	sw	ra,60(sp)
2040548c:	dc22                	sw	s0,56(sp)
2040548e:	0080                	addi	s0,sp,64
20405490:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:19
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfrosc_ref(clock);
20405494:	fcc42503          	lw	a0,-52(s0)
20405498:	3f59                	jal	2040542e <__metal_driver_sifive_fe310_g000_hfrosc_ref>
2040549a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:21
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfrosc_config_offset(clock);
2040549e:	fcc42503          	lw	a0,-52(s0)
204054a2:	3f75                	jal	2040545e <__metal_driver_sifive_fe310_g000_hfrosc_config_offset>
204054a4:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:23
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfrosc_config_base(clock);
204054a8:	fcc42503          	lw	a0,-52(s0)
204054ac:	3f71                	jal	20405448 <__metal_driver_sifive_fe310_g000_hfrosc_config_base>
204054ae:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:25
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204054b2:	37c1                	jal	20405472 <__metal_driver_sifive_fe310_g000_prci_vtable>
204054b4:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:26
    long cfg = vtable->get_reg(config_base, config_offset);
204054b8:	fe042783          	lw	a5,-32(s0)
204054bc:	439c                	lw	a5,0(a5)
204054be:	fe842583          	lw	a1,-24(s0)
204054c2:	fe442503          	lw	a0,-28(s0)
204054c6:	9782                	jalr	a5
204054c8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:28

    if ((cfg & CONFIG_ENABLE) == 0)
204054cc:	fdc42703          	lw	a4,-36(s0)
204054d0:	400007b7          	lui	a5,0x40000
204054d4:	8ff9                	and	a5,a5,a4
204054d6:	e399                	bnez	a5,204054dc <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x54>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:29
        return -1;
204054d8:	57fd                	li	a5,-1
204054da:	a025                	j	20405502 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:30
    if ((cfg & CONFIG_READY) == 0)
204054dc:	fdc42783          	lw	a5,-36(s0)
204054e0:	0007c463          	bltz	a5,204054e8 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x60>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:31
        return -1;
204054e4:	57fd                	li	a5,-1
204054e6:	a831                	j	20405502 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz+0x7a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:32
    return metal_clock_get_rate_hz(ref) / ((cfg & CONFIG_DIVIDER) + 1);
204054e8:	fec42503          	lw	a0,-20(s0)
204054ec:	0e9010ef          	jal	ra,20406dd4 <metal_clock_get_rate_hz>
204054f0:	87aa                	mv	a5,a0
204054f2:	873e                	mv	a4,a5
204054f4:	fdc42783          	lw	a5,-36(s0)
204054f8:	03f7f793          	andi	a5,a5,63
204054fc:	0785                	addi	a5,a5,1
204054fe:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:33
}
20405502:	853e                	mv	a0,a5
20405504:	50f2                	lw	ra,60(sp)
20405506:	5462                	lw	s0,56(sp)
20405508:	6121                	addi	sp,sp,64
2040550a:	8082                	ret

2040550c <__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:36

long __metal_driver_sifive_fe310_g000_hfrosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
2040550c:	1101                	addi	sp,sp,-32
2040550e:	ce06                	sw	ra,28(sp)
20405510:	cc22                	sw	s0,24(sp)
20405512:	1000                	addi	s0,sp,32
20405514:	fea42623          	sw	a0,-20(s0)
20405518:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:37
    return __metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz(clock);
2040551c:	fec42503          	lw	a0,-20(s0)
20405520:	37a5                	jal	20405488 <__metal_driver_sifive_fe310_g000_hfrosc_get_rate_hz>
20405522:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfrosc.c:38
}
20405524:	853e                	mv	a0,a5
20405526:	40f2                	lw	ra,28(sp)
20405528:	4462                	lw	s0,24(sp)
2040552a:	6105                	addi	sp,sp,32
2040552c:	8082                	ret

2040552e <__metal_driver_sifive_fe310_g000_hfxosc_ref>:
__metal_driver_sifive_fe310_g000_hfxosc_ref():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1060
{
2040552e:	1101                	addi	sp,sp,-32
20405530:	ce22                	sw	s0,28(sp)
20405532:	1000                	addi	s0,sp,32
20405534:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1061
		return (struct metal_clock *)&__metal_dt_clock_0.clock;
20405538:	800007b7          	lui	a5,0x80000
2040553c:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8b0>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1062
}
20405540:	853e                	mv	a0,a5
20405542:	4472                	lw	s0,28(sp)
20405544:	6105                	addi	sp,sp,32
20405546:	8082                	ret

20405548 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>:
__metal_driver_sifive_fe310_g000_hfxosc_config_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1065
{
20405548:	1101                	addi	sp,sp,-32
2040554a:	ce22                	sw	s0,28(sp)
2040554c:	1000                	addi	s0,sp,32
2040554e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1066
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405552:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1067
}
20405556:	853e                	mv	a0,a5
20405558:	4472                	lw	s0,28(sp)
2040555a:	6105                	addi	sp,sp,32
2040555c:	8082                	ret

2040555e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>:
__metal_driver_sifive_fe310_g000_hfxosc_config_offset():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1070
{
2040555e:	1101                	addi	sp,sp,-32
20405560:	ce22                	sw	s0,28(sp)
20405562:	1000                	addi	s0,sp,32
20405564:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1071
		return METAL_SIFIVE_FE310_G000_PRCI_HFXOSCCFG;
20405568:	4791                	li	a5,4
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1072
}
2040556a:	853e                	mv	a0,a5
2040556c:	4472                	lw	s0,28(sp)
2040556e:	6105                	addi	sp,sp,32
20405570:	8082                	ret

20405572 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1169
{
20405572:	1141                	addi	sp,sp,-16
20405574:	c622                	sw	s0,12(sp)
20405576:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
20405578:	204017b7          	lui	a5,0x20401
2040557c:	fe478793          	addi	a5,a5,-28 # 20400fe4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1171
}
20405580:	853e                	mv	a0,a5
20405582:	4432                	lw	s0,12(sp)
20405584:	0141                	addi	sp,sp,16
20405586:	8082                	ret

20405588 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:15

#define CONFIG_ENABLE 0x40000000UL
#define CONFIG_READY 0x80000000UL

long __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(
    const struct metal_clock *clock) {
20405588:	7139                	addi	sp,sp,-64
2040558a:	de06                	sw	ra,60(sp)
2040558c:	dc22                	sw	s0,56(sp)
2040558e:	0080                	addi	s0,sp,64
20405590:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:17
    struct metal_clock *ref =
        __metal_driver_sifive_fe310_g000_hfxosc_ref(clock);
20405594:	fcc42503          	lw	a0,-52(s0)
20405598:	3f59                	jal	2040552e <__metal_driver_sifive_fe310_g000_hfxosc_ref>
2040559a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:19
    long config_offset =
        __metal_driver_sifive_fe310_g000_hfxosc_config_offset(clock);
2040559e:	fcc42503          	lw	a0,-52(s0)
204055a2:	3f75                	jal	2040555e <__metal_driver_sifive_fe310_g000_hfxosc_config_offset>
204055a4:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:21
    struct __metal_driver_sifive_fe310_g000_prci *config_base =
        __metal_driver_sifive_fe310_g000_hfxosc_config_base(clock);
204055a8:	fcc42503          	lw	a0,-52(s0)
204055ac:	3f71                	jal	20405548 <__metal_driver_sifive_fe310_g000_hfxosc_config_base>
204055ae:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:23
    const struct __metal_driver_vtable_sifive_fe310_g000_prci *vtable =
        __metal_driver_sifive_fe310_g000_prci_vtable();
204055b2:	37c1                	jal	20405572 <__metal_driver_sifive_fe310_g000_prci_vtable>
204055b4:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:24
    long cfg = vtable->get_reg(config_base, config_offset);
204055b8:	fe042783          	lw	a5,-32(s0)
204055bc:	439c                	lw	a5,0(a5)
204055be:	fe842583          	lw	a1,-24(s0)
204055c2:	fe442503          	lw	a0,-28(s0)
204055c6:	9782                	jalr	a5
204055c8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:26

    if ((cfg & CONFIG_ENABLE) == 0)
204055cc:	fdc42703          	lw	a4,-36(s0)
204055d0:	400007b7          	lui	a5,0x40000
204055d4:	8ff9                	and	a5,a5,a4
204055d6:	e399                	bnez	a5,204055dc <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x54>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:27
        return -1;
204055d8:	57fd                	li	a5,-1
204055da:	a821                	j	204055f2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:28
    if ((cfg & CONFIG_READY) == 0)
204055dc:	fdc42783          	lw	a5,-36(s0)
204055e0:	0007c463          	bltz	a5,204055e8 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x60>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:29
        return -1;
204055e4:	57fd                	li	a5,-1
204055e6:	a031                	j	204055f2 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz+0x6a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:30
    return metal_clock_get_rate_hz(ref);
204055e8:	fec42503          	lw	a0,-20(s0)
204055ec:	7e8010ef          	jal	ra,20406dd4 <metal_clock_get_rate_hz>
204055f0:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:31
}
204055f2:	853e                	mv	a0,a5
204055f4:	50f2                	lw	ra,60(sp)
204055f6:	5462                	lw	s0,56(sp)
204055f8:	6121                	addi	sp,sp,64
204055fa:	8082                	ret

204055fc <__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz>:
__metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:34

long __metal_driver_sifive_fe310_g000_hfxosc_set_rate_hz(
    struct metal_clock *clock, long rate) {
204055fc:	1101                	addi	sp,sp,-32
204055fe:	ce06                	sw	ra,28(sp)
20405600:	cc22                	sw	s0,24(sp)
20405602:	1000                	addi	s0,sp,32
20405604:	fea42623          	sw	a0,-20(s0)
20405608:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:35
    return __metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz(clock);
2040560c:	fec42503          	lw	a0,-20(s0)
20405610:	3fa5                	jal	20405588 <__metal_driver_sifive_fe310_g000_hfxosc_get_rate_hz>
20405612:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_hfxosc.c:36
}
20405614:	853e                	mv	a0,a5
20405616:	40f2                	lw	ra,28(sp)
20405618:	4462                	lw	s0,24(sp)
2040561a:	6105                	addi	sp,sp,32
2040561c:	8082                	ret

2040561e <__metal_driver_sifive_fe310_g000_pll_pllsel0>:
__metal_driver_sifive_fe310_g000_pll_pllsel0():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1121
{
2040561e:	1101                	addi	sp,sp,-32
20405620:	ce22                	sw	s0,28(sp)
20405622:	1000                	addi	s0,sp,32
20405624:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1122
		return (struct metal_clock *)&__metal_dt_clock_3.clock;
20405628:	800007b7          	lui	a5,0x80000
2040562c:	77878793          	addi	a5,a5,1912 # 80000778 <metal_segment_heap_target_end+0xffffefc8>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1123
}
20405630:	853e                	mv	a0,a5
20405632:	4472                	lw	s0,28(sp)
20405634:	6105                	addi	sp,sp,32
20405636:	8082                	ret

20405638 <__metal_driver_sifive_fe310_g000_pll_pllref>:
__metal_driver_sifive_fe310_g000_pll_pllref():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1126
{
20405638:	1101                	addi	sp,sp,-32
2040563a:	ce22                	sw	s0,28(sp)
2040563c:	1000                	addi	s0,sp,32
2040563e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1127
		return (struct metal_clock *)&__metal_dt_clock_1.clock;
20405642:	800007b7          	lui	a5,0x80000
20405646:	78478793          	addi	a5,a5,1924 # 80000784 <metal_segment_heap_target_end+0xffffefd4>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1128
}
2040564a:	853e                	mv	a0,a5
2040564c:	4472                	lw	s0,28(sp)
2040564e:	6105                	addi	sp,sp,32
20405650:	8082                	ret

20405652 <__metal_driver_sifive_fe310_g000_pll_divider_base>:
__metal_driver_sifive_fe310_g000_pll_divider_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1131
{
20405652:	1101                	addi	sp,sp,-32
20405654:	ce22                	sw	s0,28(sp)
20405656:	1000                	addi	s0,sp,32
20405658:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1132
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
2040565c:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1133
}
20405660:	853e                	mv	a0,a5
20405662:	4472                	lw	s0,28(sp)
20405664:	6105                	addi	sp,sp,32
20405666:	8082                	ret

20405668 <__metal_driver_sifive_fe310_g000_pll_divider_offset>:
__metal_driver_sifive_fe310_g000_pll_divider_offset():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1136
{
20405668:	1101                	addi	sp,sp,-32
2040566a:	ce22                	sw	s0,28(sp)
2040566c:	1000                	addi	s0,sp,32
2040566e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1137
		return METAL_SIFIVE_FE310_G000_PRCI_PLLOUTDIV;
20405672:	47b1                	li	a5,12
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1138
}
20405674:	853e                	mv	a0,a5
20405676:	4472                	lw	s0,28(sp)
20405678:	6105                	addi	sp,sp,32
2040567a:	8082                	ret

2040567c <__metal_driver_sifive_fe310_g000_pll_config_base>:
__metal_driver_sifive_fe310_g000_pll_config_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1141
{
2040567c:	1141                	addi	sp,sp,-16
2040567e:	c622                	sw	s0,12(sp)
20405680:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1142
		return (struct __metal_driver_sifive_fe310_g000_prci *)&__metal_dt_prci_10008000;
20405682:	82418793          	addi	a5,gp,-2012 # 800007c4 <__metal_dt_prci_10008000>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1143
}
20405686:	853e                	mv	a0,a5
20405688:	4432                	lw	s0,12(sp)
2040568a:	0141                	addi	sp,sp,16
2040568c:	8082                	ret

2040568e <__metal_driver_sifive_fe310_g000_pll_config_offset>:
__metal_driver_sifive_fe310_g000_pll_config_offset():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1146
{
2040568e:	1141                	addi	sp,sp,-16
20405690:	c622                	sw	s0,12(sp)
20405692:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1147
		return METAL_SIFIVE_FE310_G000_PRCI_PLLCFG;
20405694:	47a1                	li	a5,8
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1148
}
20405696:	853e                	mv	a0,a5
20405698:	4432                	lw	s0,12(sp)
2040569a:	0141                	addi	sp,sp,16
2040569c:	8082                	ret

2040569e <__metal_driver_sifive_fe310_g000_pll_init_rate>:
__metal_driver_sifive_fe310_g000_pll_init_rate():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1151
{
2040569e:	1141                	addi	sp,sp,-16
204056a0:	c622                	sw	s0,12(sp)
204056a2:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1152
		return 16000000;
204056a4:	00f427b7          	lui	a5,0xf42
204056a8:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1153
}
204056ac:	853e                	mv	a0,a5
204056ae:	4432                	lw	s0,12(sp)
204056b0:	0141                	addi	sp,sp,16
204056b2:	8082                	ret

204056b4 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1159
{
204056b4:	1141                	addi	sp,sp,-16
204056b6:	c622                	sw	s0,12(sp)
204056b8:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
204056ba:	100087b7          	lui	a5,0x10008
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1161
}
204056be:	853e                	mv	a0,a5
204056c0:	4432                	lw	s0,12(sp)
204056c2:	0141                	addi	sp,sp,16
204056c4:	8082                	ret

204056c6 <__metal_driver_sifive_fe310_g000_prci_vtable>:
__metal_driver_sifive_fe310_g000_prci_vtable():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1169
{
204056c6:	1141                	addi	sp,sp,-16
204056c8:	c622                	sw	s0,12(sp)
204056ca:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1170
		return &__metal_driver_vtable_sifive_fe310_g000_prci;
204056cc:	204017b7          	lui	a5,0x20401
204056d0:	fe478793          	addi	a5,a5,-28 # 20400fe4 <__metal_driver_vtable_sifive_fe310_g000_prci>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1171
}
204056d4:	853e                	mv	a0,a5
204056d6:	4432                	lw	s0,12(sp)
204056d8:	0141                	addi	sp,sp,16
204056da:	8082                	ret

204056dc <get_pll_config_freq>:
get_pll_config_freq():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:141
                                const struct pll_config_t *config) {
204056dc:	1101                	addi	sp,sp,-32
204056de:	ce22                	sw	s0,28(sp)
204056e0:	1000                	addi	s0,sp,32
204056e2:	fea42623          	sw	a0,-20(s0)
204056e6:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142
    if (pll_input_rate < config->min_input_rate ||
204056ea:	fe842783          	lw	a5,-24(s0)
204056ee:	479c                	lw	a5,8(a5)
204056f0:	fec42703          	lw	a4,-20(s0)
204056f4:	00f76963          	bltu	a4,a5,20405706 <get_pll_config_freq+0x2a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:143 (discriminator 1)
        pll_input_rate > config->max_input_rate)
204056f8:	fe842783          	lw	a5,-24(s0)
204056fc:	47dc                	lw	a5,12(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:142 (discriminator 1)
    if (pll_input_rate < config->min_input_rate ||
204056fe:	fec42703          	lw	a4,-20(s0)
20405702:	00e7f463          	bgeu	a5,a4,2040570a <get_pll_config_freq+0x2e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:144
        return PLL_CONFIG_NOT_VALID;
20405706:	57fd                	li	a5,-1
20405708:	a829                	j	20405722 <get_pll_config_freq+0x46>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:146
    return pll_input_rate * config->multiplier / config->divisor;
2040570a:	fe842783          	lw	a5,-24(s0)
2040570e:	4398                	lw	a4,0(a5)
20405710:	fec42783          	lw	a5,-20(s0)
20405714:	02f70733          	mul	a4,a4,a5
20405718:	fe842783          	lw	a5,-24(s0)
2040571c:	43dc                	lw	a5,4(a5)
2040571e:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:147
}
20405722:	853e                	mv	a0,a5
20405724:	4472                	lw	s0,28(sp)
20405726:	6105                	addi	sp,sp,32
20405728:	8082                	ret

2040572a <__metal_driver_sifive_fe310_g000_pll_init>:
__metal_driver_sifive_fe310_g000_pll_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:162
    struct __metal_driver_sifive_fe310_g000_pll *pll) {
2040572a:	7139                	addi	sp,sp,-64
2040572c:	de06                	sw	ra,60(sp)
2040572e:	dc22                	sw	s0,56(sp)
20405730:	0080                	addi	s0,sp,64
20405732:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:164
        __metal_driver_sifive_fe310_g000_pll_pllref(&(pll->clock));
20405736:	fcc42783          	lw	a5,-52(s0)
2040573a:	853e                	mv	a0,a5
2040573c:	3df5                	jal	20405638 <__metal_driver_sifive_fe310_g000_pll_pllref>
2040573e:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:165
    long init_rate = __metal_driver_sifive_fe310_g000_pll_init_rate();
20405742:	3fb1                	jal	2040569e <__metal_driver_sifive_fe310_g000_pll_init_rate>
20405744:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:166
    long config_offset = __metal_driver_sifive_fe310_g000_pll_config_offset();
20405748:	3799                	jal	2040568e <__metal_driver_sifive_fe310_g000_pll_config_offset>
2040574a:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:167
    long base = __metal_driver_sifive_fe310_g000_prci_base();
2040574e:	379d                	jal	204056b4 <__metal_driver_sifive_fe310_g000_prci_base>
20405750:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:169
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405754:	fe042703          	lw	a4,-32(s0)
20405758:	fe442783          	lw	a5,-28(s0)
2040575c:	97ba                	add	a5,a5,a4
2040575e:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:173
    _metal_clock_call_all_callbacks(pll->clock._pre_rate_change_callback);
20405762:	fcc42783          	lw	a5,-52(s0)
20405766:	43dc                	lw	a5,4(a5)
20405768:	853e                	mv	a0,a5
2040576a:	5d4010ef          	jal	ra,20406d3e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:177
    if ((__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL) != 0)
2040576e:	fdc42783          	lw	a5,-36(s0)
20405772:	4398                	lw	a4,0(a5)
20405774:	67c1                	lui	a5,0x10
20405776:	8ff9                	and	a5,a5,a4
20405778:	cb91                	beqz	a5,2040578c <__metal_driver_sifive_fe310_g000_pll_init+0x62>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:178
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
2040577a:	fdc42783          	lw	a5,-36(s0)
2040577e:	4398                	lw	a4,0(a5)
20405780:	77c1                	lui	a5,0xffff0
20405782:	17fd                	addi	a5,a5,-1
20405784:	8f7d                	and	a4,a4,a5
20405786:	fdc42783          	lw	a5,-36(s0)
2040578a:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:181
    if (pllref != NULL)
2040578c:	fec42783          	lw	a5,-20(s0)
20405790:	cb91                	beqz	a5,204057a4 <__metal_driver_sifive_fe310_g000_pll_init+0x7a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:182
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_REFSEL;
20405792:	fdc42783          	lw	a5,-36(s0)
20405796:	4398                	lw	a4,0(a5)
20405798:	000207b7          	lui	a5,0x20
2040579c:	8f5d                	or	a4,a4,a5
2040579e:	fdc42783          	lw	a5,-36(s0)
204057a2:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:187
    pll->clock.vtable->set_rate_hz(&(pll->clock), init_rate);
204057a4:	fcc42783          	lw	a5,-52(s0)
204057a8:	439c                	lw	a5,0(a5)
204057aa:	43d8                	lw	a4,4(a5)
204057ac:	fcc42783          	lw	a5,-52(s0)
204057b0:	fe842583          	lw	a1,-24(s0)
204057b4:	853e                	mv	a0,a5
204057b6:	9702                	jalr	a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:190
    _metal_clock_call_all_callbacks(pll->clock._post_rate_change_callback);
204057b8:	fcc42783          	lw	a5,-52(s0)
204057bc:	479c                	lw	a5,8(a5)
204057be:	853e                	mv	a0,a5
204057c0:	57e010ef          	jal	ra,20406d3e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:191
}
204057c4:	0001                	nop
204057c6:	50f2                	lw	ra,60(sp)
204057c8:	5462                	lw	s0,56(sp)
204057ca:	6121                	addi	sp,sp,64
204057cc:	8082                	ret

204057ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_get_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:194
    const struct metal_clock *clock) {
204057ce:	711d                	addi	sp,sp,-96
204057d0:	ce86                	sw	ra,92(sp)
204057d2:	cca2                	sw	s0,88(sp)
204057d4:	1080                	addi	s0,sp,96
204057d6:	faa42623          	sw	a0,-84(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:196
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
204057da:	fac42503          	lw	a0,-84(s0)
204057de:	3da9                	jal	20405638 <__metal_driver_sifive_fe310_g000_pll_pllref>
204057e0:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:198
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
204057e4:	fac42503          	lw	a0,-84(s0)
204057e8:	3d1d                	jal	2040561e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
204057ea:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:200
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
204057ee:	fac42503          	lw	a0,-84(s0)
204057f2:	3d71                	jal	2040568e <__metal_driver_sifive_fe310_g000_pll_config_offset>
204057f4:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:202
        __metal_driver_sifive_fe310_g000_pll_config_base(clock);
204057f8:	fac42503          	lw	a0,-84(s0)
204057fc:	3541                	jal	2040567c <__metal_driver_sifive_fe310_g000_pll_config_base>
204057fe:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:204
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405802:	fac42503          	lw	a0,-84(s0)
20405806:	358d                	jal	20405668 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405808:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:206
        __metal_driver_sifive_fe310_g000_pll_divider_base(clock);
2040580c:	fac42503          	lw	a0,-84(s0)
20405810:	3589                	jal	20405652 <__metal_driver_sifive_fe310_g000_pll_divider_base>
20405812:	fca42c23          	sw	a0,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:208
        __metal_driver_sifive_fe310_g000_prci_vtable();
20405816:	3d45                	jal	204056c6 <__metal_driver_sifive_fe310_g000_prci_vtable>
20405818:	fca42a23          	sw	a0,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:210
    long cfg = vtable->get_reg(config_base, config_offset);
2040581c:	fd442783          	lw	a5,-44(s0)
20405820:	439c                	lw	a5,0(a5)
20405822:	fe442583          	lw	a1,-28(s0)
20405826:	fe042503          	lw	a0,-32(s0)
2040582a:	9782                	jalr	a5
2040582c:	fca42823          	sw	a0,-48(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:211
    long div = vtable->get_reg(divider_base, divider_offset);
20405830:	fd442783          	lw	a5,-44(s0)
20405834:	439c                	lw	a5,0(a5)
20405836:	fdc42583          	lw	a1,-36(s0)
2040583a:	fd842503          	lw	a0,-40(s0)
2040583e:	9782                	jalr	a5
20405840:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:215
    if (__METAL_GET_FIELD(cfg, PLL_SEL) == 0)
20405844:	fd042703          	lw	a4,-48(s0)
20405848:	67c1                	lui	a5,0x10
2040584a:	8f7d                	and	a4,a4,a5
2040584c:	67c1                	lui	a5,0x10
2040584e:	00f77863          	bgeu	a4,a5,2040585e <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x90>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:216
        return metal_clock_get_rate_hz(pllsel0);
20405852:	fe842503          	lw	a0,-24(s0)
20405856:	57e010ef          	jal	ra,20406dd4 <metal_clock_get_rate_hz>
2040585a:	87aa                	mv	a5,a0
2040585c:	a8e1                	j	20405934 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:221
        __METAL_GET_FIELD(cfg, PLL_REFSEL) ? pllref : pllsel0);
2040585e:	fd042703          	lw	a4,-48(s0)
20405862:	000207b7          	lui	a5,0x20
20405866:	8f7d                	and	a4,a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220
    long ref_hz = metal_clock_get_rate_hz(
20405868:	000207b7          	lui	a5,0x20
2040586c:	00f76563          	bltu	a4,a5,20405876 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xa8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 1)
20405870:	fec42783          	lw	a5,-20(s0)
20405874:	a019                	j	2040587a <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xac>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 2)
20405876:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:220 (discriminator 4)
2040587a:	853e                	mv	a0,a5
2040587c:	558010ef          	jal	ra,20406dd4 <metal_clock_get_rate_hz>
20405880:	fca42423          	sw	a0,-56(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:225 (discriminator 4)
    if (__METAL_GET_FIELD(cfg, PLL_BYPASS))
20405884:	fd042703          	lw	a4,-48(s0)
20405888:	000407b7          	lui	a5,0x40
2040588c:	8f7d                	and	a4,a4,a5
2040588e:	000407b7          	lui	a5,0x40
20405892:	00f76563          	bltu	a4,a5,2040589c <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0xce>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:226
        return ref_hz;
20405896:	fc842783          	lw	a5,-56(s0)
2040589a:	a869                	j	20405934 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:229
    long div_r = __METAL_GET_FIELD(cfg, PLL_R) + 1;
2040589c:	fd042783          	lw	a5,-48(s0)
204058a0:	8b9d                	andi	a5,a5,7
204058a2:	0785                	addi	a5,a5,1
204058a4:	fcf42223          	sw	a5,-60(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:230
    long mul_f = 2 * (__METAL_GET_FIELD(cfg, PLL_F) + 1);
204058a8:	fd042783          	lw	a5,-48(s0)
204058ac:	3f07f793          	andi	a5,a5,1008
204058b0:	8391                	srli	a5,a5,0x4
204058b2:	0785                	addi	a5,a5,1
204058b4:	0786                	slli	a5,a5,0x1
204058b6:	fcf42023          	sw	a5,-64(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:231
    if (__METAL_GET_FIELD(cfg, PLL_Q) == 0)
204058ba:	fd042703          	lw	a4,-48(s0)
204058be:	6785                	lui	a5,0x1
204058c0:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204058c4:	8f7d                	and	a4,a4,a5
204058c6:	3ff00793          	li	a5,1023
204058ca:	00e7e463          	bltu	a5,a4,204058d2 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x104>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:232
        return -1;
204058ce:	57fd                	li	a5,-1
204058d0:	a095                	j	20405934 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:233
    long div_q = 1 << __METAL_GET_FIELD(cfg, PLL_Q);
204058d2:	fd042703          	lw	a4,-48(s0)
204058d6:	6785                	lui	a5,0x1
204058d8:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
204058dc:	8ff9                	and	a5,a5,a4
204058de:	83a9                	srli	a5,a5,0xa
204058e0:	4705                	li	a4,1
204058e2:	00f717b3          	sll	a5,a4,a5
204058e6:	faf42e23          	sw	a5,-68(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:238
    long pllout = (((ref_hz / div_r) * mul_f) / div_q);
204058ea:	fc842703          	lw	a4,-56(s0)
204058ee:	fc442783          	lw	a5,-60(s0)
204058f2:	02f74733          	div	a4,a4,a5
204058f6:	fc042783          	lw	a5,-64(s0)
204058fa:	02f70733          	mul	a4,a4,a5
204058fe:	fbc42783          	lw	a5,-68(s0)
20405902:	02f747b3          	div	a5,a4,a5
20405906:	faf42c23          	sw	a5,-72(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:239
    if (__METAL_GET_FIELD(div, DIV_1))
2040590a:	fcc42783          	lw	a5,-52(s0)
2040590e:	1007f713          	andi	a4,a5,256
20405912:	0ff00793          	li	a5,255
20405916:	00e7f563          	bgeu	a5,a4,20405920 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x152>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:240
        return pllout;
2040591a:	fb842783          	lw	a5,-72(s0)
2040591e:	a819                	j	20405934 <__metal_driver_sifive_fe310_g000_pll_get_rate_hz+0x166>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:242
    return pllout / (2 * (__METAL_GET_FIELD(div, DIV_DIV) + 1));
20405920:	fb842703          	lw	a4,-72(s0)
20405924:	fcc42783          	lw	a5,-52(s0)
20405928:	03f7f793          	andi	a5,a5,63
2040592c:	0785                	addi	a5,a5,1
2040592e:	0786                	slli	a5,a5,0x1
20405930:	02f757b3          	divu	a5,a4,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:243
}
20405934:	853e                	mv	a0,a5
20405936:	40f6                	lw	ra,92(sp)
20405938:	4466                	lw	s0,88(sp)
2040593a:	6125                	addi	sp,sp,96
2040593c:	8082                	ret

2040593e <find_closest_config>:
find_closest_config():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:253
static int find_closest_config(long ref_hz, long rate) {
2040593e:	7139                	addi	sp,sp,-64
20405940:	de06                	sw	ra,60(sp)
20405942:	dc22                	sw	s0,56(sp)
20405944:	0080                	addi	s0,sp,64
20405946:	fca42623          	sw	a0,-52(s0)
2040594a:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:254
    int closest_index = -1;
2040594e:	57fd                	li	a5,-1
20405950:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:255
    long closest_diff = LONG_MAX;
20405954:	800007b7          	lui	a5,0x80000
20405958:	fff7c793          	not	a5,a5
2040595c:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
20405960:	04300793          	li	a5,67
20405964:	fef42223          	sw	a5,-28(s0)
20405968:	a0b5                	j	204059d4 <find_closest_config+0x96>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:261
        long config_freq = get_pll_config_freq(ref_hz, &(pll_configs[i]));
2040596a:	fcc42683          	lw	a3,-52(s0)
2040596e:	fe442783          	lw	a5,-28(s0)
20405972:	00579713          	slli	a4,a5,0x5
20405976:	204007b7          	lui	a5,0x20400
2040597a:	68478793          	addi	a5,a5,1668 # 20400684 <pll_configs>
2040597e:	97ba                	add	a5,a5,a4
20405980:	85be                	mv	a1,a5
20405982:	8536                	mv	a0,a3
20405984:	d59ff0ef          	jal	ra,204056dc <get_pll_config_freq>
20405988:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:262
        if (config_freq != PLL_CONFIG_NOT_VALID) {
2040598c:	fe042703          	lw	a4,-32(s0)
20405990:	57fd                	li	a5,-1
20405992:	02f70c63          	beq	a4,a5,204059ca <find_closest_config+0x8c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:263
            long freq_diff = labs(config_freq - rate);
20405996:	fe042703          	lw	a4,-32(s0)
2040599a:	fc842783          	lw	a5,-56(s0)
2040599e:	8f1d                	sub	a4,a4,a5
204059a0:	41f75793          	srai	a5,a4,0x1f
204059a4:	8f3d                	xor	a4,a4,a5
204059a6:	40f707b3          	sub	a5,a4,a5
204059aa:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:265
            if (freq_diff < closest_diff) {
204059ae:	fdc42703          	lw	a4,-36(s0)
204059b2:	fe842783          	lw	a5,-24(s0)
204059b6:	00f75a63          	bge	a4,a5,204059ca <find_closest_config+0x8c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:266
                closest_index = i;
204059ba:	fe442783          	lw	a5,-28(s0)
204059be:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:267
                closest_diff = freq_diff;
204059c2:	fdc42783          	lw	a5,-36(s0)
204059c6:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:260
         i--) {
204059ca:	fe442783          	lw	a5,-28(s0)
204059ce:	17fd                	addi	a5,a5,-1
204059d0:	fef42223          	sw	a5,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:259 (discriminator 1)
    for (int i = (sizeof(pll_configs) / sizeof(pll_configs[0])) - 1; i >= 0;
204059d4:	fe442783          	lw	a5,-28(s0)
204059d8:	f807d9e3          	bgez	a5,2040596a <find_closest_config+0x2c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:272
    return closest_index;
204059dc:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:273
}
204059e0:	853e                	mv	a0,a5
204059e2:	50f2                	lw	ra,60(sp)
204059e4:	5462                	lw	s0,56(sp)
204059e6:	6121                	addi	sp,sp,64
204059e8:	8082                	ret

204059ea <configure_pll>:
configure_pll():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:290
                          const struct pll_config_t *config) {
204059ea:	7179                	addi	sp,sp,-48
204059ec:	d606                	sw	ra,44(sp)
204059ee:	d422                	sw	s0,40(sp)
204059f0:	1800                	addi	s0,sp,48
204059f2:	fca42e23          	sw	a0,-36(s0)
204059f6:	fcb42c23          	sw	a1,-40(s0)
204059fa:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:291
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_R);
204059fe:	fdc42783          	lw	a5,-36(s0)
20405a02:	439c                	lw	a5,0(a5)
20405a04:	ff87f713          	andi	a4,a5,-8
20405a08:	fdc42783          	lw	a5,-36(s0)
20405a0c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:292
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_R_SHIFT(config->r);
20405a0e:	fdc42783          	lw	a5,-36(s0)
20405a12:	4398                	lw	a4,0(a5)
20405a14:	fd442783          	lw	a5,-44(s0)
20405a18:	4b9c                	lw	a5,16(a5)
20405a1a:	8b9d                	andi	a5,a5,7
20405a1c:	8f5d                	or	a4,a4,a5
20405a1e:	fdc42783          	lw	a5,-36(s0)
20405a22:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:294
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_F);
20405a24:	fdc42783          	lw	a5,-36(s0)
20405a28:	439c                	lw	a5,0(a5)
20405a2a:	c0f7f713          	andi	a4,a5,-1009
20405a2e:	fdc42783          	lw	a5,-36(s0)
20405a32:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:295
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_F_SHIFT(config->f);
20405a34:	fdc42783          	lw	a5,-36(s0)
20405a38:	4398                	lw	a4,0(a5)
20405a3a:	fd442783          	lw	a5,-44(s0)
20405a3e:	4bdc                	lw	a5,20(a5)
20405a40:	0792                	slli	a5,a5,0x4
20405a42:	3f07f793          	andi	a5,a5,1008
20405a46:	8f5d                	or	a4,a4,a5
20405a48:	fdc42783          	lw	a5,-36(s0)
20405a4c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:297
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_Q);
20405a4e:	fdc42783          	lw	a5,-36(s0)
20405a52:	4398                	lw	a4,0(a5)
20405a54:	77fd                	lui	a5,0xfffff
20405a56:	3ff78793          	addi	a5,a5,1023 # fffff3ff <metal_segment_heap_target_end+0x7fffdc4f>
20405a5a:	8f7d                	and	a4,a4,a5
20405a5c:	fdc42783          	lw	a5,-36(s0)
20405a60:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:298
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_Q_SHIFT(config->q);
20405a62:	fdc42783          	lw	a5,-36(s0)
20405a66:	4398                	lw	a4,0(a5)
20405a68:	fd442783          	lw	a5,-44(s0)
20405a6c:	4f9c                	lw	a5,24(a5)
20405a6e:	00a79693          	slli	a3,a5,0xa
20405a72:	6785                	lui	a5,0x1
20405a74:	c0078793          	addi	a5,a5,-1024 # c00 <__heap_size+0x400>
20405a78:	8ff5                	and	a5,a5,a3
20405a7a:	8f5d                	or	a4,a4,a5
20405a7c:	fdc42783          	lw	a5,-36(s0)
20405a80:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:300
    if (config->d < 0) {
20405a82:	fd442783          	lw	a5,-44(s0)
20405a86:	4fdc                	lw	a5,28(a5)
20405a88:	0207db63          	bgez	a5,20405abe <configure_pll+0xd4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:302
        __METAL_ACCESS_ONCE(plloutdiv) |= DIV_1;
20405a8c:	fd842783          	lw	a5,-40(s0)
20405a90:	439c                	lw	a5,0(a5)
20405a92:	1007e713          	ori	a4,a5,256
20405a96:	fd842783          	lw	a5,-40(s0)
20405a9a:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:304
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405a9c:	fd842783          	lw	a5,-40(s0)
20405aa0:	439c                	lw	a5,0(a5)
20405aa2:	fc07f713          	andi	a4,a5,-64
20405aa6:	fd842783          	lw	a5,-40(s0)
20405aaa:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:305
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(1);
20405aac:	fd842783          	lw	a5,-40(s0)
20405ab0:	439c                	lw	a5,0(a5)
20405ab2:	0017e713          	ori	a4,a5,1
20405ab6:	fd842783          	lw	a5,-40(s0)
20405aba:	c398                	sw	a4,0(a5)
20405abc:	a82d                	j	20405af6 <configure_pll+0x10c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:307
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_1);
20405abe:	fd842783          	lw	a5,-40(s0)
20405ac2:	439c                	lw	a5,0(a5)
20405ac4:	eff7f713          	andi	a4,a5,-257
20405ac8:	fd842783          	lw	a5,-40(s0)
20405acc:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:309
        __METAL_ACCESS_ONCE(plloutdiv) &= ~(DIV_DIV);
20405ace:	fd842783          	lw	a5,-40(s0)
20405ad2:	439c                	lw	a5,0(a5)
20405ad4:	fc07f713          	andi	a4,a5,-64
20405ad8:	fd842783          	lw	a5,-40(s0)
20405adc:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:310
        __METAL_ACCESS_ONCE(plloutdiv) |= PLL_DIV_SHIFT(config->d);
20405ade:	fd842783          	lw	a5,-40(s0)
20405ae2:	4398                	lw	a4,0(a5)
20405ae4:	fd442783          	lw	a5,-44(s0)
20405ae8:	4fdc                	lw	a5,28(a5)
20405aea:	03f7f793          	andi	a5,a5,63
20405aee:	8f5d                	or	a4,a4,a5
20405af0:	fd842783          	lw	a5,-40(s0)
20405af4:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:313
    __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_BYPASS);
20405af6:	fdc42783          	lw	a5,-36(s0)
20405afa:	4398                	lw	a4,0(a5)
20405afc:	fffc07b7          	lui	a5,0xfffc0
20405b00:	17fd                	addi	a5,a5,-1
20405b02:	8f7d                	and	a4,a4,a5
20405b04:	fdc42783          	lw	a5,-36(s0)
20405b08:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:318
    __metal_driver_riscv_clint0_command_request(__METAL_DT_RISCV_CLINT0_HANDLE,
20405b0a:	fe040793          	addi	a5,s0,-32
20405b0e:	863e                	mv	a2,a5
20405b10:	4585                	li	a1,1
20405b12:	800007b7          	lui	a5,0x80000
20405b16:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffeffc>
20405b1a:	c6afd0ef          	jal	ra,20402f84 <__metal_driver_riscv_clint0_command_request>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:320
    mtime_end = mtime + PLL_LOCK_WAIT_TICKS;
20405b1e:	fe042603          	lw	a2,-32(s0)
20405b22:	fe442683          	lw	a3,-28(s0)
20405b26:	4511                	li	a0,4
20405b28:	4581                	li	a1,0
20405b2a:	00a60733          	add	a4,a2,a0
20405b2e:	883a                	mv	a6,a4
20405b30:	00c83833          	sltu	a6,a6,a2
20405b34:	00b687b3          	add	a5,a3,a1
20405b38:	00f806b3          	add	a3,a6,a5
20405b3c:	87b6                	mv	a5,a3
20405b3e:	fee42423          	sw	a4,-24(s0)
20405b42:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405b46:	a819                	j	20405b5c <configure_pll+0x172>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:322
        __metal_driver_riscv_clint0_command_request(
20405b48:	fe040793          	addi	a5,s0,-32
20405b4c:	863e                	mv	a2,a5
20405b4e:	4585                	li	a1,1
20405b50:	800007b7          	lui	a5,0x80000
20405b54:	7ac78513          	addi	a0,a5,1964 # 800007ac <metal_segment_heap_target_end+0xffffeffc>
20405b58:	c2cfd0ef          	jal	ra,20402f84 <__metal_driver_riscv_clint0_command_request>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:321
    while (mtime <= mtime_end) {
20405b5c:	fe042703          	lw	a4,-32(s0)
20405b60:	fe442783          	lw	a5,-28(s0)
20405b64:	fec42683          	lw	a3,-20(s0)
20405b68:	863e                	mv	a2,a5
20405b6a:	00c6ec63          	bltu	a3,a2,20405b82 <configure_pll+0x198>
20405b6e:	fec42683          	lw	a3,-20(s0)
20405b72:	863e                	mv	a2,a5
20405b74:	fcc69ae3          	bne	a3,a2,20405b48 <configure_pll+0x15e>
20405b78:	fe842683          	lw	a3,-24(s0)
20405b7c:	87ba                	mv	a5,a4
20405b7e:	fcf6f5e3          	bgeu	a3,a5,20405b48 <configure_pll+0x15e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340
    while ((__METAL_ACCESS_ONCE(pllcfg) & PLL_LOCK) == 0)
20405b82:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:340 (discriminator 1)
20405b84:	fdc42783          	lw	a5,-36(s0)
20405b88:	439c                	lw	a5,0(a5)
20405b8a:	fe07dde3          	bgez	a5,20405b84 <configure_pll+0x19a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:342
}
20405b8e:	0001                	nop
20405b90:	0001                	nop
20405b92:	50b2                	lw	ra,44(sp)
20405b94:	5422                	lw	s0,40(sp)
20405b96:	6145                	addi	sp,sp,48
20405b98:	8082                	ret

20405b9a <__metal_driver_sifive_fe310_g000_pll_set_rate_hz>:
__metal_driver_sifive_fe310_g000_pll_set_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:345
                                                      long rate) {
20405b9a:	715d                	addi	sp,sp,-80
20405b9c:	c686                	sw	ra,76(sp)
20405b9e:	c4a2                	sw	s0,72(sp)
20405ba0:	0880                	addi	s0,sp,80
20405ba2:	faa42e23          	sw	a0,-68(s0)
20405ba6:	fab42c23          	sw	a1,-72(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:347
        __metal_driver_sifive_fe310_g000_pll_pllref(clock);
20405baa:	fbc42503          	lw	a0,-68(s0)
20405bae:	a8bff0ef          	jal	ra,20405638 <__metal_driver_sifive_fe310_g000_pll_pllref>
20405bb2:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:349
        __metal_driver_sifive_fe310_g000_pll_pllsel0(clock);
20405bb6:	fbc42503          	lw	a0,-68(s0)
20405bba:	a65ff0ef          	jal	ra,2040561e <__metal_driver_sifive_fe310_g000_pll_pllsel0>
20405bbe:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:351
        __metal_driver_sifive_fe310_g000_pll_config_offset(clock);
20405bc2:	fbc42503          	lw	a0,-68(s0)
20405bc6:	ac9ff0ef          	jal	ra,2040568e <__metal_driver_sifive_fe310_g000_pll_config_offset>
20405bca:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:353
        __metal_driver_sifive_fe310_g000_pll_divider_offset(clock);
20405bce:	fbc42503          	lw	a0,-68(s0)
20405bd2:	a97ff0ef          	jal	ra,20405668 <__metal_driver_sifive_fe310_g000_pll_divider_offset>
20405bd6:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:354
    long base = __metal_driver_sifive_fe310_g000_prci_base();
20405bda:	adbff0ef          	jal	ra,204056b4 <__metal_driver_sifive_fe310_g000_prci_base>
20405bde:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:356
    __metal_io_u32 *pllcfg = (__metal_io_u32 *)(base + config_offset);
20405be2:	fdc42703          	lw	a4,-36(s0)
20405be6:	fe442783          	lw	a5,-28(s0)
20405bea:	97ba                	add	a5,a5,a4
20405bec:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:357
    __metal_io_u32 *plloutdiv = (__metal_io_u32 *)(base + divider_offset);
20405bf0:	fdc42703          	lw	a4,-36(s0)
20405bf4:	fe042783          	lw	a5,-32(s0)
20405bf8:	97ba                	add	a5,a5,a4
20405bfa:	fcf42a23          	sw	a5,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:360
    if (__METAL_ACCESS_ONCE(pllcfg) & PLL_SEL)
20405bfe:	fd842783          	lw	a5,-40(s0)
20405c02:	4398                	lw	a4,0(a5)
20405c04:	67c1                	lui	a5,0x10
20405c06:	8ff9                	and	a5,a5,a4
20405c08:	cb91                	beqz	a5,20405c1c <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x82>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:361
        __METAL_ACCESS_ONCE(pllcfg) &= ~(PLL_SEL);
20405c0a:	fd842783          	lw	a5,-40(s0)
20405c0e:	4398                	lw	a4,0(a5)
20405c10:	77c1                	lui	a5,0xffff0
20405c12:	17fd                	addi	a5,a5,-1
20405c14:	8f7d                	and	a4,a4,a5
20405c16:	fd842783          	lw	a5,-40(s0)
20405c1a:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:366
        __METAL_ACCESS_ONCE(pllcfg) & PLL_REFSEL ? pllref : pllsel0);
20405c1c:	fd842783          	lw	a5,-40(s0)
20405c20:	4398                	lw	a4,0(a5)
20405c22:	000207b7          	lui	a5,0x20
20405c26:	8ff9                	and	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365
    long ref_hz = metal_clock_get_rate_hz(
20405c28:	c781                	beqz	a5,20405c30 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x96>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 1)
20405c2a:	fec42783          	lw	a5,-20(s0)
20405c2e:	a019                	j	20405c34 <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x9a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 2)
20405c30:	fe842783          	lw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:365 (discriminator 4)
20405c34:	853e                	mv	a0,a5
20405c36:	19e010ef          	jal	ra,20406dd4 <metal_clock_get_rate_hz>
20405c3a:	fca42823          	sw	a0,-48(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 4)
    if ((ref_hz * 3 / 4) <= rate && (ref_hz * 5 / 4) >= rate) {
20405c3e:	fd042703          	lw	a4,-48(s0)
20405c42:	87ba                	mv	a5,a4
20405c44:	0786                	slli	a5,a5,0x1
20405c46:	97ba                	add	a5,a5,a4
20405c48:	41f7d713          	srai	a4,a5,0x1f
20405c4c:	8b0d                	andi	a4,a4,3
20405c4e:	97ba                	add	a5,a5,a4
20405c50:	8789                	srai	a5,a5,0x2
20405c52:	873e                	mv	a4,a5
20405c54:	fb842783          	lw	a5,-72(s0)
20405c58:	02e7cb63          	blt	a5,a4,20405c8e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:370 (discriminator 1)
20405c5c:	fd042703          	lw	a4,-48(s0)
20405c60:	87ba                	mv	a5,a4
20405c62:	078a                	slli	a5,a5,0x2
20405c64:	97ba                	add	a5,a5,a4
20405c66:	41f7d713          	srai	a4,a5,0x1f
20405c6a:	8b0d                	andi	a4,a4,3
20405c6c:	97ba                	add	a5,a5,a4
20405c6e:	8789                	srai	a5,a5,0x2
20405c70:	873e                	mv	a4,a5
20405c72:	fb842783          	lw	a5,-72(s0)
20405c76:	00f74c63          	blt	a4,a5,20405c8e <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0xf4>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:371
        __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20405c7a:	fd842783          	lw	a5,-40(s0)
20405c7e:	4398                	lw	a4,0(a5)
20405c80:	000407b7          	lui	a5,0x40
20405c84:	8f5d                	or	a4,a4,a5
20405c86:	fd842783          	lw	a5,-40(s0)
20405c8a:	c398                	sw	a4,0(a5)
20405c8c:	a881                	j	20405cdc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:373
        int config_index = find_closest_config(ref_hz, rate);
20405c8e:	fb842583          	lw	a1,-72(s0)
20405c92:	fd042503          	lw	a0,-48(s0)
20405c96:	ca9ff0ef          	jal	ra,2040593e <find_closest_config>
20405c9a:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:374
        if (config_index != -1) {
20405c9e:	fcc42703          	lw	a4,-52(s0)
20405ca2:	57fd                	li	a5,-1
20405ca4:	02f70363          	beq	a4,a5,20405cca <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x130>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:375
            configure_pll(pllcfg, plloutdiv, &(pll_configs[config_index]));
20405ca8:	fcc42783          	lw	a5,-52(s0)
20405cac:	00579713          	slli	a4,a5,0x5
20405cb0:	204007b7          	lui	a5,0x20400
20405cb4:	68478793          	addi	a5,a5,1668 # 20400684 <pll_configs>
20405cb8:	97ba                	add	a5,a5,a4
20405cba:	863e                	mv	a2,a5
20405cbc:	fd442583          	lw	a1,-44(s0)
20405cc0:	fd842503          	lw	a0,-40(s0)
20405cc4:	d27ff0ef          	jal	ra,204059ea <configure_pll>
20405cc8:	a811                	j	20405cdc <__metal_driver_sifive_fe310_g000_pll_set_rate_hz+0x142>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:378
            __METAL_ACCESS_ONCE(pllcfg) |= PLL_BYPASS;
20405cca:	fd842783          	lw	a5,-40(s0)
20405cce:	4398                	lw	a4,0(a5)
20405cd0:	000407b7          	lui	a5,0x40
20405cd4:	8f5d                	or	a4,a4,a5
20405cd6:	fd842783          	lw	a5,-40(s0)
20405cda:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:383
    __METAL_ACCESS_ONCE(pllcfg) |= PLL_SEL;
20405cdc:	fd842783          	lw	a5,-40(s0)
20405ce0:	4398                	lw	a4,0(a5)
20405ce2:	67c1                	lui	a5,0x10
20405ce4:	8f5d                	or	a4,a4,a5
20405ce6:	fd842783          	lw	a5,-40(s0)
20405cea:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:385
    return __metal_driver_sifive_fe310_g000_pll_get_rate_hz(clock);
20405cec:	fbc42503          	lw	a0,-68(s0)
20405cf0:	adfff0ef          	jal	ra,204057ce <__metal_driver_sifive_fe310_g000_pll_get_rate_hz>
20405cf4:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_pll.c:386
}
20405cf6:	853e                	mv	a0,a5
20405cf8:	40b6                	lw	ra,76(sp)
20405cfa:	4426                	lw	s0,72(sp)
20405cfc:	6161                	addi	sp,sp,80
20405cfe:	8082                	ret

20405d00 <__metal_driver_sifive_fe310_g000_prci_base>:
__metal_driver_sifive_fe310_g000_prci_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1159
{
20405d00:	1141                	addi	sp,sp,-16
20405d02:	c622                	sw	s0,12(sp)
20405d04:	0800                	addi	s0,sp,16
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1160
		return METAL_SIFIVE_FE310_G000_PRCI_10008000_BASE_ADDRESS;
20405d06:	100087b7          	lui	a5,0x10008
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:1161
}
20405d0a:	853e                	mv	a0,a5
20405d0c:	4432                	lw	s0,12(sp)
20405d0e:	0141                	addi	sp,sp,16
20405d10:	8082                	ret

20405d12 <__metal_driver_sifive_fe310_g000_prci_get_reg>:
__metal_driver_sifive_fe310_g000_prci_get_reg():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:12

#include <metal/drivers/sifive_fe310-g000_prci.h>
#include <metal/machine.h>

long __metal_driver_sifive_fe310_g000_prci_get_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset) {
20405d12:	7179                	addi	sp,sp,-48
20405d14:	d606                	sw	ra,44(sp)
20405d16:	d422                	sw	s0,40(sp)
20405d18:	1800                	addi	s0,sp,48
20405d1a:	fca42e23          	sw	a0,-36(s0)
20405d1e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:13
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20405d22:	3ff9                	jal	20405d00 <__metal_driver_sifive_fe310_g000_prci_base>
20405d24:	87aa                	mv	a5,a0
20405d26:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:14
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset));
20405d2a:	fd842703          	lw	a4,-40(s0)
20405d2e:	fec42783          	lw	a5,-20(s0)
20405d32:	97ba                	add	a5,a5,a4
20405d34:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:15
}
20405d36:	853e                	mv	a0,a5
20405d38:	50b2                	lw	ra,44(sp)
20405d3a:	5422                	lw	s0,40(sp)
20405d3c:	6145                	addi	sp,sp,48
20405d3e:	8082                	ret

20405d40 <__metal_driver_sifive_fe310_g000_prci_set_reg>:
__metal_driver_sifive_fe310_g000_prci_set_reg():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:19

long __metal_driver_sifive_fe310_g000_prci_set_reg(
    const struct __metal_driver_sifive_fe310_g000_prci *prci, long offset,
    long value) {
20405d40:	7179                	addi	sp,sp,-48
20405d42:	d606                	sw	ra,44(sp)
20405d44:	d422                	sw	s0,40(sp)
20405d46:	1800                	addi	s0,sp,48
20405d48:	fca42e23          	sw	a0,-36(s0)
20405d4c:	fcb42c23          	sw	a1,-40(s0)
20405d50:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:20
    unsigned long base = __metal_driver_sifive_fe310_g000_prci_base();
20405d54:	3775                	jal	20405d00 <__metal_driver_sifive_fe310_g000_prci_base>
20405d56:	87aa                	mv	a5,a0
20405d58:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:21
    return __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + offset)) = value;
20405d5c:	fd842703          	lw	a4,-40(s0)
20405d60:	fec42783          	lw	a5,-20(s0)
20405d64:	97ba                	add	a5,a5,a4
20405d66:	873e                	mv	a4,a5
20405d68:	fd442783          	lw	a5,-44(s0)
20405d6c:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_fe310-g000_prci.c:22
}
20405d6e:	853e                	mv	a0,a5
20405d70:	50b2                	lw	ra,44(sp)
20405d72:	5422                	lw	s0,40(sp)
20405d74:	6145                	addi	sp,sp,48
20405d76:	8082                	ret

20405d78 <__metal_driver_sifive_gpio0_base>:
__metal_driver_sifive_gpio0_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:474
{
20405d78:	1101                	addi	sp,sp,-32
20405d7a:	ce22                	sw	s0,28(sp)
20405d7c:	1000                	addi	s0,sp,32
20405d7e:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:475
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20405d82:	fec42703          	lw	a4,-20(s0)
20405d86:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405d8a:	00f71563          	bne	a4,a5,20405d94 <__metal_driver_sifive_gpio0_base+0x1c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:476
		return METAL_SIFIVE_GPIO0_10012000_BASE_ADDRESS;
20405d8e:	100127b7          	lui	a5,0x10012
20405d92:	a011                	j	20405d96 <__metal_driver_sifive_gpio0_base+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:479
		return 0;
20405d94:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:481
}
20405d96:	853e                	mv	a0,a5
20405d98:	4472                	lw	s0,28(sp)
20405d9a:	6105                	addi	sp,sp,32
20405d9c:	8082                	ret

20405d9e <__metal_driver_sifive_gpio0_interrupt_parent>:
__metal_driver_sifive_gpio0_interrupt_parent():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:504
{
20405d9e:	1101                	addi	sp,sp,-32
20405da0:	ce22                	sw	s0,28(sp)
20405da2:	1000                	addi	s0,sp,32
20405da4:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:505
	if ((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) {
20405da8:	fec42703          	lw	a4,-20(s0)
20405dac:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405db0:	00f71763          	bne	a4,a5,20405dbe <__metal_driver_sifive_gpio0_interrupt_parent+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:506
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
20405db4:	800007b7          	lui	a5,0x80000
20405db8:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffeca8>
20405dbc:	a011                	j	20405dc0 <__metal_driver_sifive_gpio0_interrupt_parent+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:509
		return 0;
20405dbe:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:511
}
20405dc0:	853e                	mv	a0,a5
20405dc2:	4472                	lw	s0,28(sp)
20405dc4:	6105                	addi	sp,sp,32
20405dc6:	8082                	ret

20405dc8 <__metal_driver_sifive_gpio0_interrupt_lines>:
__metal_driver_sifive_gpio0_interrupt_lines():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:514
{
20405dc8:	1101                	addi	sp,sp,-32
20405dca:	ce22                	sw	s0,28(sp)
20405dcc:	1000                	addi	s0,sp,32
20405dce:	fea42623          	sw	a0,-20(s0)
20405dd2:	feb42423          	sw	a1,-24(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:515
	if (((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 0)) {
20405dd6:	fec42703          	lw	a4,-20(s0)
20405dda:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405dde:	00f71763          	bne	a4,a5,20405dec <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:515 (discriminator 1)
20405de2:	fe842783          	lw	a5,-24(s0)
20405de6:	e399                	bnez	a5,20405dec <__metal_driver_sifive_gpio0_interrupt_lines+0x24>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:516
		return 7;
20405de8:	479d                	li	a5,7
20405dea:	a269                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:518
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 1))) {
20405dec:	fec42703          	lw	a4,-20(s0)
20405df0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405df4:	00f71963          	bne	a4,a5,20405e06 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:518 (discriminator 1)
20405df8:	fe842703          	lw	a4,-24(s0)
20405dfc:	4785                	li	a5,1
20405dfe:	00f71463          	bne	a4,a5,20405e06 <__metal_driver_sifive_gpio0_interrupt_lines+0x3e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:519
		return 8;
20405e02:	47a1                	li	a5,8
20405e04:	aa85                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:521
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 2))) {
20405e06:	fec42703          	lw	a4,-20(s0)
20405e0a:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405e0e:	00f71963          	bne	a4,a5,20405e20 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:521 (discriminator 1)
20405e12:	fe842703          	lw	a4,-24(s0)
20405e16:	4789                	li	a5,2
20405e18:	00f71463          	bne	a4,a5,20405e20 <__metal_driver_sifive_gpio0_interrupt_lines+0x58>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:522
		return 9;
20405e1c:	47a5                	li	a5,9
20405e1e:	aa99                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:524
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 3))) {
20405e20:	fec42703          	lw	a4,-20(s0)
20405e24:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405e28:	00f71963          	bne	a4,a5,20405e3a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:524 (discriminator 1)
20405e2c:	fe842703          	lw	a4,-24(s0)
20405e30:	478d                	li	a5,3
20405e32:	00f71463          	bne	a4,a5,20405e3a <__metal_driver_sifive_gpio0_interrupt_lines+0x72>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:525
		return 10;
20405e36:	47a9                	li	a5,10
20405e38:	aa35                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:527
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 4))) {
20405e3a:	fec42703          	lw	a4,-20(s0)
20405e3e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405e42:	00f71963          	bne	a4,a5,20405e54 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:527 (discriminator 1)
20405e46:	fe842703          	lw	a4,-24(s0)
20405e4a:	4791                	li	a5,4
20405e4c:	00f71463          	bne	a4,a5,20405e54 <__metal_driver_sifive_gpio0_interrupt_lines+0x8c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:528
		return 11;
20405e50:	47ad                	li	a5,11
20405e52:	a20d                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:530
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 5))) {
20405e54:	fec42703          	lw	a4,-20(s0)
20405e58:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405e5c:	00f71963          	bne	a4,a5,20405e6e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:530 (discriminator 1)
20405e60:	fe842703          	lw	a4,-24(s0)
20405e64:	4795                	li	a5,5
20405e66:	00f71463          	bne	a4,a5,20405e6e <__metal_driver_sifive_gpio0_interrupt_lines+0xa6>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:531
		return 12;
20405e6a:	47b1                	li	a5,12
20405e6c:	a221                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:533
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 6))) {
20405e6e:	fec42703          	lw	a4,-20(s0)
20405e72:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405e76:	00f71963          	bne	a4,a5,20405e88 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:533 (discriminator 1)
20405e7a:	fe842703          	lw	a4,-24(s0)
20405e7e:	4799                	li	a5,6
20405e80:	00f71463          	bne	a4,a5,20405e88 <__metal_driver_sifive_gpio0_interrupt_lines+0xc0>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:534
		return 13;
20405e84:	47b5                	li	a5,13
20405e86:	a0fd                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:536
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 7))) {
20405e88:	fec42703          	lw	a4,-20(s0)
20405e8c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405e90:	00f71963          	bne	a4,a5,20405ea2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:536 (discriminator 1)
20405e94:	fe842703          	lw	a4,-24(s0)
20405e98:	479d                	li	a5,7
20405e9a:	00f71463          	bne	a4,a5,20405ea2 <__metal_driver_sifive_gpio0_interrupt_lines+0xda>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:537
		return 14;
20405e9e:	47b9                	li	a5,14
20405ea0:	a8d1                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:539
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 8))) {
20405ea2:	fec42703          	lw	a4,-20(s0)
20405ea6:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405eaa:	00f71963          	bne	a4,a5,20405ebc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:539 (discriminator 1)
20405eae:	fe842703          	lw	a4,-24(s0)
20405eb2:	47a1                	li	a5,8
20405eb4:	00f71463          	bne	a4,a5,20405ebc <__metal_driver_sifive_gpio0_interrupt_lines+0xf4>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:540
		return 15;
20405eb8:	47bd                	li	a5,15
20405eba:	a86d                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:542
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 9))) {
20405ebc:	fec42703          	lw	a4,-20(s0)
20405ec0:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405ec4:	00f71963          	bne	a4,a5,20405ed6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:542 (discriminator 1)
20405ec8:	fe842703          	lw	a4,-24(s0)
20405ecc:	47a5                	li	a5,9
20405ece:	00f71463          	bne	a4,a5,20405ed6 <__metal_driver_sifive_gpio0_interrupt_lines+0x10e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:543
		return 16;
20405ed2:	47c1                	li	a5,16
20405ed4:	a045                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:545
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 10))) {
20405ed6:	fec42703          	lw	a4,-20(s0)
20405eda:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405ede:	00f71963          	bne	a4,a5,20405ef0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:545 (discriminator 1)
20405ee2:	fe842703          	lw	a4,-24(s0)
20405ee6:	47a9                	li	a5,10
20405ee8:	00f71463          	bne	a4,a5,20405ef0 <__metal_driver_sifive_gpio0_interrupt_lines+0x128>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:546
		return 17;
20405eec:	47c5                	li	a5,17
20405eee:	a059                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:548
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 11))) {
20405ef0:	fec42703          	lw	a4,-20(s0)
20405ef4:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405ef8:	00f71963          	bne	a4,a5,20405f0a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:548 (discriminator 1)
20405efc:	fe842703          	lw	a4,-24(s0)
20405f00:	47ad                	li	a5,11
20405f02:	00f71463          	bne	a4,a5,20405f0a <__metal_driver_sifive_gpio0_interrupt_lines+0x142>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:549
		return 18;
20405f06:	47c9                	li	a5,18
20405f08:	a0b5                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:551
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 12))) {
20405f0a:	fec42703          	lw	a4,-20(s0)
20405f0e:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405f12:	00f71963          	bne	a4,a5,20405f24 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:551 (discriminator 1)
20405f16:	fe842703          	lw	a4,-24(s0)
20405f1a:	47b1                	li	a5,12
20405f1c:	00f71463          	bne	a4,a5,20405f24 <__metal_driver_sifive_gpio0_interrupt_lines+0x15c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:552
		return 19;
20405f20:	47cd                	li	a5,19
20405f22:	a889                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:554
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 13))) {
20405f24:	fec42703          	lw	a4,-20(s0)
20405f28:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405f2c:	00f71963          	bne	a4,a5,20405f3e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:554 (discriminator 1)
20405f30:	fe842703          	lw	a4,-24(s0)
20405f34:	47b5                	li	a5,13
20405f36:	00f71463          	bne	a4,a5,20405f3e <__metal_driver_sifive_gpio0_interrupt_lines+0x176>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:555
		return 20;
20405f3a:	47d1                	li	a5,20
20405f3c:	a825                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:557
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 14))) {
20405f3e:	fec42703          	lw	a4,-20(s0)
20405f42:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405f46:	00f71963          	bne	a4,a5,20405f58 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:557 (discriminator 1)
20405f4a:	fe842703          	lw	a4,-24(s0)
20405f4e:	47b9                	li	a5,14
20405f50:	00f71463          	bne	a4,a5,20405f58 <__metal_driver_sifive_gpio0_interrupt_lines+0x190>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:558
		return 21;
20405f54:	47d5                	li	a5,21
20405f56:	a839                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:560
	else if ((((uintptr_t)gpio == (uintptr_t)&__metal_dt_gpio_10012000) && (idx == 15))) {
20405f58:	fec42703          	lw	a4,-20(s0)
20405f5c:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20405f60:	00f71963          	bne	a4,a5,20405f72 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:560 (discriminator 1)
20405f64:	fe842703          	lw	a4,-24(s0)
20405f68:	47bd                	li	a5,15
20405f6a:	00f71463          	bne	a4,a5,20405f72 <__metal_driver_sifive_gpio0_interrupt_lines+0x1aa>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:561
		return 22;
20405f6e:	47d9                	li	a5,22
20405f70:	a011                	j	20405f74 <__metal_driver_sifive_gpio0_interrupt_lines+0x1ac>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:564
		return 0;
20405f72:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:566
}
20405f74:	853e                	mv	a0,a5
20405f76:	4472                	lw	s0,28(sp)
20405f78:	6105                	addi	sp,sp,32
20405f7a:	8082                	ret

20405f7c <__metal_driver_sifive_gpio0_enable_input>:
__metal_driver_sifive_gpio0_enable_input():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:13
#include <metal/drivers/sifive_gpio0.h>
#include <metal/io.h>
#include <metal/machine.h>

int __metal_driver_sifive_gpio0_enable_input(struct metal_gpio *ggpio,
                                             long source) {
20405f7c:	7179                	addi	sp,sp,-48
20405f7e:	d606                	sw	ra,44(sp)
20405f80:	d422                	sw	s0,40(sp)
20405f82:	1800                	addi	s0,sp,48
20405f84:	fca42e23          	sw	a0,-36(s0)
20405f88:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:14
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405f8c:	fdc42503          	lw	a0,-36(s0)
20405f90:	de9ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
20405f94:	87aa                	mv	a5,a0
20405f96:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:17

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) |= source;
20405f9a:	fec42783          	lw	a5,-20(s0)
20405f9e:	0791                	addi	a5,a5,4
20405fa0:	4398                	lw	a4,0(a5)
20405fa2:	fd842783          	lw	a5,-40(s0)
20405fa6:	fec42683          	lw	a3,-20(s0)
20405faa:	0691                	addi	a3,a3,4
20405fac:	8fd9                	or	a5,a5,a4
20405fae:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:19

    return 0;
20405fb0:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:20
}
20405fb2:	853e                	mv	a0,a5
20405fb4:	50b2                	lw	ra,44(sp)
20405fb6:	5422                	lw	s0,40(sp)
20405fb8:	6145                	addi	sp,sp,48
20405fba:	8082                	ret

20405fbc <__metal_driver_sifive_gpio0_disable_input>:
__metal_driver_sifive_gpio0_disable_input():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:23

int __metal_driver_sifive_gpio0_disable_input(struct metal_gpio *ggpio,
                                              long source) {
20405fbc:	7179                	addi	sp,sp,-48
20405fbe:	d606                	sw	ra,44(sp)
20405fc0:	d422                	sw	s0,40(sp)
20405fc2:	1800                	addi	s0,sp,48
20405fc4:	fca42e23          	sw	a0,-36(s0)
20405fc8:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:24
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20405fcc:	fdc42503          	lw	a0,-36(s0)
20405fd0:	da9ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
20405fd4:	87aa                	mv	a5,a0
20405fd6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:27

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_INPUT_EN)) &= ~source;
20405fda:	fec42783          	lw	a5,-20(s0)
20405fde:	0791                	addi	a5,a5,4
20405fe0:	439c                	lw	a5,0(a5)
20405fe2:	fd842703          	lw	a4,-40(s0)
20405fe6:	fff74713          	not	a4,a4
20405fea:	86ba                	mv	a3,a4
20405fec:	fec42703          	lw	a4,-20(s0)
20405ff0:	0711                	addi	a4,a4,4
20405ff2:	8ff5                	and	a5,a5,a3
20405ff4:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:29

    return 0;
20405ff6:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:30
}
20405ff8:	853e                	mv	a0,a5
20405ffa:	50b2                	lw	ra,44(sp)
20405ffc:	5422                	lw	s0,40(sp)
20405ffe:	6145                	addi	sp,sp,48
20406000:	8082                	ret

20406002 <__metal_driver_sifive_gpio0_input>:
__metal_driver_sifive_gpio0_input():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:32

long __metal_driver_sifive_gpio0_input(struct metal_gpio *ggpio) {
20406002:	7179                	addi	sp,sp,-48
20406004:	d606                	sw	ra,44(sp)
20406006:	d422                	sw	s0,40(sp)
20406008:	1800                	addi	s0,sp,48
2040600a:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:33
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040600e:	fdc42503          	lw	a0,-36(s0)
20406012:	d67ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
20406016:	87aa                	mv	a5,a0
20406018:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:35

    return __METAL_ACCESS_ONCE(
2040601c:	fec42783          	lw	a5,-20(s0)
20406020:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:37
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_VALUE));
}
20406022:	853e                	mv	a0,a5
20406024:	50b2                	lw	ra,44(sp)
20406026:	5422                	lw	s0,40(sp)
20406028:	6145                	addi	sp,sp,48
2040602a:	8082                	ret

2040602c <__metal_driver_sifive_gpio0_output>:
__metal_driver_sifive_gpio0_output():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:39

long __metal_driver_sifive_gpio0_output(struct metal_gpio *ggpio) {
2040602c:	7179                	addi	sp,sp,-48
2040602e:	d606                	sw	ra,44(sp)
20406030:	d422                	sw	s0,40(sp)
20406032:	1800                	addi	s0,sp,48
20406034:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:40
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406038:	fdc42503          	lw	a0,-36(s0)
2040603c:	d3dff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
20406040:	87aa                	mv	a5,a0
20406042:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:42

    return __METAL_ACCESS_ONCE(
20406046:	fec42783          	lw	a5,-20(s0)
2040604a:	07b1                	addi	a5,a5,12
2040604c:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:44
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT));
}
2040604e:	853e                	mv	a0,a5
20406050:	50b2                	lw	ra,44(sp)
20406052:	5422                	lw	s0,40(sp)
20406054:	6145                	addi	sp,sp,48
20406056:	8082                	ret

20406058 <__metal_driver_sifive_gpio0_disable_output>:
__metal_driver_sifive_gpio0_disable_output():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:47

int __metal_driver_sifive_gpio0_disable_output(struct metal_gpio *ggpio,
                                               long source) {
20406058:	7179                	addi	sp,sp,-48
2040605a:	d606                	sw	ra,44(sp)
2040605c:	d422                	sw	s0,40(sp)
2040605e:	1800                	addi	s0,sp,48
20406060:	fca42e23          	sw	a0,-36(s0)
20406064:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:48
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406068:	fdc42503          	lw	a0,-36(s0)
2040606c:	d0dff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
20406070:	87aa                	mv	a5,a0
20406072:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:51

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) &= ~source;
20406076:	fec42783          	lw	a5,-20(s0)
2040607a:	07a1                	addi	a5,a5,8
2040607c:	439c                	lw	a5,0(a5)
2040607e:	fd842703          	lw	a4,-40(s0)
20406082:	fff74713          	not	a4,a4
20406086:	86ba                	mv	a3,a4
20406088:	fec42703          	lw	a4,-20(s0)
2040608c:	0721                	addi	a4,a4,8
2040608e:	8ff5                	and	a5,a5,a3
20406090:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:53

    return 0;
20406092:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:54
}
20406094:	853e                	mv	a0,a5
20406096:	50b2                	lw	ra,44(sp)
20406098:	5422                	lw	s0,40(sp)
2040609a:	6145                	addi	sp,sp,48
2040609c:	8082                	ret

2040609e <__metal_driver_sifive_gpio0_enable_output>:
__metal_driver_sifive_gpio0_enable_output():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:57

int __metal_driver_sifive_gpio0_enable_output(struct metal_gpio *ggpio,
                                              long source) {
2040609e:	7179                	addi	sp,sp,-48
204060a0:	d606                	sw	ra,44(sp)
204060a2:	d422                	sw	s0,40(sp)
204060a4:	1800                	addi	s0,sp,48
204060a6:	fca42e23          	sw	a0,-36(s0)
204060aa:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:58
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204060ae:	fdc42503          	lw	a0,-36(s0)
204060b2:	cc7ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
204060b6:	87aa                	mv	a5,a0
204060b8:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:61

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_OUTPUT_EN)) |= source;
204060bc:	fec42783          	lw	a5,-20(s0)
204060c0:	07a1                	addi	a5,a5,8
204060c2:	4398                	lw	a4,0(a5)
204060c4:	fd842783          	lw	a5,-40(s0)
204060c8:	fec42683          	lw	a3,-20(s0)
204060cc:	06a1                	addi	a3,a3,8
204060ce:	8fd9                	or	a5,a5,a4
204060d0:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:63

    return 0;
204060d2:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:64
}
204060d4:	853e                	mv	a0,a5
204060d6:	50b2                	lw	ra,44(sp)
204060d8:	5422                	lw	s0,40(sp)
204060da:	6145                	addi	sp,sp,48
204060dc:	8082                	ret

204060de <__metal_driver_sifive_gpio0_output_set>:
__metal_driver_sifive_gpio0_output_set():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:67

int __metal_driver_sifive_gpio0_output_set(struct metal_gpio *ggpio,
                                           long value) {
204060de:	7179                	addi	sp,sp,-48
204060e0:	d606                	sw	ra,44(sp)
204060e2:	d422                	sw	s0,40(sp)
204060e4:	1800                	addi	s0,sp,48
204060e6:	fca42e23          	sw	a0,-36(s0)
204060ea:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:68
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204060ee:	fdc42503          	lw	a0,-36(s0)
204060f2:	c87ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
204060f6:	87aa                	mv	a5,a0
204060f8:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:70

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) |=
204060fc:	fec42783          	lw	a5,-20(s0)
20406100:	07b1                	addi	a5,a5,12
20406102:	4398                	lw	a4,0(a5)
20406104:	fd842783          	lw	a5,-40(s0)
20406108:	fec42683          	lw	a3,-20(s0)
2040610c:	06b1                	addi	a3,a3,12
2040610e:	8fd9                	or	a5,a5,a4
20406110:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:73
        value;

    return 0;
20406112:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:74
}
20406114:	853e                	mv	a0,a5
20406116:	50b2                	lw	ra,44(sp)
20406118:	5422                	lw	s0,40(sp)
2040611a:	6145                	addi	sp,sp,48
2040611c:	8082                	ret

2040611e <__metal_driver_sifive_gpio0_output_clear>:
__metal_driver_sifive_gpio0_output_clear():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:77

int __metal_driver_sifive_gpio0_output_clear(struct metal_gpio *ggpio,
                                             long value) {
2040611e:	7179                	addi	sp,sp,-48
20406120:	d606                	sw	ra,44(sp)
20406122:	d422                	sw	s0,40(sp)
20406124:	1800                	addi	s0,sp,48
20406126:	fca42e23          	sw	a0,-36(s0)
2040612a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:78
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040612e:	fdc42503          	lw	a0,-36(s0)
20406132:	c47ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
20406136:	87aa                	mv	a5,a0
20406138:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:80

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2040613c:	fec42783          	lw	a5,-20(s0)
20406140:	07b1                	addi	a5,a5,12
20406142:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:81
        ~value;
20406144:	fd842703          	lw	a4,-40(s0)
20406148:	fff74713          	not	a4,a4
2040614c:	86ba                	mv	a3,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:80
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) &=
2040614e:	fec42703          	lw	a4,-20(s0)
20406152:	0731                	addi	a4,a4,12
20406154:	8ff5                	and	a5,a5,a3
20406156:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:83

    return 0;
20406158:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:84
}
2040615a:	853e                	mv	a0,a5
2040615c:	50b2                	lw	ra,44(sp)
2040615e:	5422                	lw	s0,40(sp)
20406160:	6145                	addi	sp,sp,48
20406162:	8082                	ret

20406164 <__metal_driver_sifive_gpio0_output_toggle>:
__metal_driver_sifive_gpio0_output_toggle():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:87

int __metal_driver_sifive_gpio0_output_toggle(struct metal_gpio *ggpio,
                                              long value) {
20406164:	7179                	addi	sp,sp,-48
20406166:	d606                	sw	ra,44(sp)
20406168:	d422                	sw	s0,40(sp)
2040616a:	1800                	addi	s0,sp,48
2040616c:	fca42e23          	sw	a0,-36(s0)
20406170:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:88
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406174:	fdc42503          	lw	a0,-36(s0)
20406178:	c01ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
2040617c:	87aa                	mv	a5,a0
2040617e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:91

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
        __METAL_ACCESS_ONCE(
20406182:	fec42783          	lw	a5,-20(s0)
20406186:	07b1                	addi	a5,a5,12
20406188:	4398                	lw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
2040618a:	fd842783          	lw	a5,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
2040618e:	fec42683          	lw	a3,-20(s0)
20406192:	06b1                	addi	a3,a3,12
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:92
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) ^
20406194:	8fb9                	xor	a5,a5,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:90
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_PORT)) =
20406196:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:95
        value;

    return 0;
20406198:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:96
}
2040619a:	853e                	mv	a0,a5
2040619c:	50b2                	lw	ra,44(sp)
2040619e:	5422                	lw	s0,40(sp)
204061a0:	6145                	addi	sp,sp,48
204061a2:	8082                	ret

204061a4 <__metal_driver_sifive_gpio0_enable_io>:
__metal_driver_sifive_gpio0_enable_io():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:99

int __metal_driver_sifive_gpio0_enable_io(struct metal_gpio *ggpio, long source,
                                          long dest) {
204061a4:	7179                	addi	sp,sp,-48
204061a6:	d606                	sw	ra,44(sp)
204061a8:	d422                	sw	s0,40(sp)
204061aa:	1800                	addi	s0,sp,48
204061ac:	fca42e23          	sw	a0,-36(s0)
204061b0:	fcb42c23          	sw	a1,-40(s0)
204061b4:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:100
    long base = __metal_driver_sifive_gpio0_base(ggpio);
204061b8:	fdc42503          	lw	a0,-36(s0)
204061bc:	bbdff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
204061c0:	87aa                	mv	a5,a0
204061c2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:103

    __METAL_ACCESS_ONCE(
        (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_SEL)) |= source;
204061c6:	fec42783          	lw	a5,-20(s0)
204061ca:	03c78793          	addi	a5,a5,60
204061ce:	4398                	lw	a4,0(a5)
204061d0:	fd842783          	lw	a5,-40(s0)
204061d4:	fec42683          	lw	a3,-20(s0)
204061d8:	03c68693          	addi	a3,a3,60
204061dc:	8fd9                	or	a5,a5,a4
204061de:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:104
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) |=
204061e0:	fec42783          	lw	a5,-20(s0)
204061e4:	03878793          	addi	a5,a5,56
204061e8:	4398                	lw	a4,0(a5)
204061ea:	fd442783          	lw	a5,-44(s0)
204061ee:	fec42683          	lw	a3,-20(s0)
204061f2:	03868693          	addi	a3,a3,56
204061f6:	8fd9                	or	a5,a5,a4
204061f8:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:107
        dest;

    return 0;
204061fa:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:108
}
204061fc:	853e                	mv	a0,a5
204061fe:	50b2                	lw	ra,44(sp)
20406200:	5422                	lw	s0,40(sp)
20406202:	6145                	addi	sp,sp,48
20406204:	8082                	ret

20406206 <__metal_driver_sifive_gpio0_disable_io>:
__metal_driver_sifive_gpio0_disable_io():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:111

int __metal_driver_sifive_gpio0_disable_io(struct metal_gpio *ggpio,
                                           long source) {
20406206:	7179                	addi	sp,sp,-48
20406208:	d606                	sw	ra,44(sp)
2040620a:	d422                	sw	s0,40(sp)
2040620c:	1800                	addi	s0,sp,48
2040620e:	fca42e23          	sw	a0,-36(s0)
20406212:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:112
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406216:	fdc42503          	lw	a0,-36(s0)
2040621a:	b5fff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
2040621e:	87aa                	mv	a5,a0
20406220:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:114

    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406224:	fec42783          	lw	a5,-20(s0)
20406228:	03878793          	addi	a5,a5,56
2040622c:	439c                	lw	a5,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:115
        ~source;
2040622e:	fd842703          	lw	a4,-40(s0)
20406232:	fff74713          	not	a4,a4
20406236:	86ba                	mv	a3,a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:114
    __METAL_ACCESS_ONCE((__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_IOF_EN)) &=
20406238:	fec42703          	lw	a4,-20(s0)
2040623c:	03870713          	addi	a4,a4,56
20406240:	8ff5                	and	a5,a5,a3
20406242:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:117

    return 0;
20406244:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:118
}
20406246:	853e                	mv	a0,a5
20406248:	50b2                	lw	ra,44(sp)
2040624a:	5422                	lw	s0,40(sp)
2040624c:	6145                	addi	sp,sp,48
2040624e:	8082                	ret

20406250 <__metal_driver_sifive_gpio0_config_int>:
__metal_driver_sifive_gpio0_config_int():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:121

int __metal_driver_sifive_gpio0_config_int(struct metal_gpio *ggpio,
                                           long source, int intr_type) {
20406250:	7179                	addi	sp,sp,-48
20406252:	d606                	sw	ra,44(sp)
20406254:	d422                	sw	s0,40(sp)
20406256:	1800                	addi	s0,sp,48
20406258:	fca42e23          	sw	a0,-36(s0)
2040625c:	fcb42c23          	sw	a1,-40(s0)
20406260:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:122
    long base = __metal_driver_sifive_gpio0_base(ggpio);
20406264:	fdc42503          	lw	a0,-36(s0)
20406268:	b11ff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
2040626c:	87aa                	mv	a5,a0
2040626e:	fef42623          	sw	a5,-20(s0)
20406272:	fd442703          	lw	a4,-44(s0)
20406276:	479d                	li	a5,7
20406278:	1ce7e963          	bltu	a5,a4,2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
2040627c:	fd442783          	lw	a5,-44(s0)
20406280:	00279713          	slli	a4,a5,0x2
20406284:	204017b7          	lui	a5,0x20401
20406288:	f1078793          	addi	a5,a5,-240 # 20400f10 <__metal_driver_vtable_sifive_fe310_g000_pll+0xc>
2040628c:	97ba                	add	a5,a5,a4
2040628e:	439c                	lw	a5,0(a5)
20406290:	8782                	jr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:127

    switch (intr_type) {
    case METAL_GPIO_INT_DISABLE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) &= ~source;
20406292:	fec42783          	lw	a5,-20(s0)
20406296:	07e1                	addi	a5,a5,24
20406298:	439c                	lw	a5,0(a5)
2040629a:	fd842703          	lw	a4,-40(s0)
2040629e:	fff74713          	not	a4,a4
204062a2:	86ba                	mv	a3,a4
204062a4:	fec42703          	lw	a4,-20(s0)
204062a8:	0761                	addi	a4,a4,24
204062aa:	8ff5                	and	a5,a5,a3
204062ac:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:129
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) &= ~source;
204062ae:	fec42783          	lw	a5,-20(s0)
204062b2:	02078793          	addi	a5,a5,32
204062b6:	439c                	lw	a5,0(a5)
204062b8:	fd842703          	lw	a4,-40(s0)
204062bc:	fff74713          	not	a4,a4
204062c0:	86ba                	mv	a3,a4
204062c2:	fec42703          	lw	a4,-20(s0)
204062c6:	02070713          	addi	a4,a4,32
204062ca:	8ff5                	and	a5,a5,a3
204062cc:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:131
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) &= ~source;
204062ce:	fec42783          	lw	a5,-20(s0)
204062d2:	02878793          	addi	a5,a5,40
204062d6:	439c                	lw	a5,0(a5)
204062d8:	fd842703          	lw	a4,-40(s0)
204062dc:	fff74713          	not	a4,a4
204062e0:	86ba                	mv	a3,a4
204062e2:	fec42703          	lw	a4,-20(s0)
204062e6:	02870713          	addi	a4,a4,40
204062ea:	8ff5                	and	a5,a5,a3
204062ec:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:133
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) &= ~source;
204062ee:	fec42783          	lw	a5,-20(s0)
204062f2:	03078793          	addi	a5,a5,48
204062f6:	439c                	lw	a5,0(a5)
204062f8:	fd842703          	lw	a4,-40(s0)
204062fc:	fff74713          	not	a4,a4
20406300:	86ba                	mv	a3,a4
20406302:	fec42703          	lw	a4,-20(s0)
20406306:	03070713          	addi	a4,a4,48
2040630a:	8ff5                	and	a5,a5,a3
2040630c:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:134
        break;
2040630e:	aa35                	j	2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:137
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406310:	fec42783          	lw	a5,-20(s0)
20406314:	07e1                	addi	a5,a5,24
20406316:	4398                	lw	a4,0(a5)
20406318:	fd842783          	lw	a5,-40(s0)
2040631c:	fec42683          	lw	a3,-20(s0)
20406320:	06e1                	addi	a3,a3,24
20406322:	8fd9                	or	a5,a5,a4
20406324:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:138
        break;
20406326:	a215                	j	2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:141
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
20406328:	fec42783          	lw	a5,-20(s0)
2040632c:	02078793          	addi	a5,a5,32
20406330:	4398                	lw	a4,0(a5)
20406332:	fd842783          	lw	a5,-40(s0)
20406336:	fec42683          	lw	a3,-20(s0)
2040633a:	02068693          	addi	a3,a3,32
2040633e:	8fd9                	or	a5,a5,a4
20406340:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:142
        break;
20406342:	a221                	j	2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:145
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
20406344:	fec42783          	lw	a5,-20(s0)
20406348:	07e1                	addi	a5,a5,24
2040634a:	4398                	lw	a4,0(a5)
2040634c:	fd842783          	lw	a5,-40(s0)
20406350:	fec42683          	lw	a3,-20(s0)
20406354:	06e1                	addi	a3,a3,24
20406356:	8fd9                	or	a5,a5,a4
20406358:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:147
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
2040635a:	fec42783          	lw	a5,-20(s0)
2040635e:	02078793          	addi	a5,a5,32
20406362:	4398                	lw	a4,0(a5)
20406364:	fd842783          	lw	a5,-40(s0)
20406368:	fec42683          	lw	a3,-20(s0)
2040636c:	02068693          	addi	a3,a3,32
20406370:	8fd9                	or	a5,a5,a4
20406372:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:148
        break;
20406374:	a8d9                	j	2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:151
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406376:	fec42783          	lw	a5,-20(s0)
2040637a:	02878793          	addi	a5,a5,40
2040637e:	4398                	lw	a4,0(a5)
20406380:	fd842783          	lw	a5,-40(s0)
20406384:	fec42683          	lw	a3,-20(s0)
20406388:	02868693          	addi	a3,a3,40
2040638c:	8fd9                	or	a5,a5,a4
2040638e:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:152
        break;
20406390:	a86d                	j	2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:155
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
20406392:	fec42783          	lw	a5,-20(s0)
20406396:	03078793          	addi	a5,a5,48
2040639a:	4398                	lw	a4,0(a5)
2040639c:	fd842783          	lw	a5,-40(s0)
204063a0:	fec42683          	lw	a3,-20(s0)
204063a4:	03068693          	addi	a3,a3,48
204063a8:	8fd9                	or	a5,a5,a4
204063aa:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:156
        break;
204063ac:	a879                	j	2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:159
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
204063ae:	fec42783          	lw	a5,-20(s0)
204063b2:	02878793          	addi	a5,a5,40
204063b6:	4398                	lw	a4,0(a5)
204063b8:	fd842783          	lw	a5,-40(s0)
204063bc:	fec42683          	lw	a3,-20(s0)
204063c0:	02868693          	addi	a3,a3,40
204063c4:	8fd9                	or	a5,a5,a4
204063c6:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:161
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
204063c8:	fec42783          	lw	a5,-20(s0)
204063cc:	03078793          	addi	a5,a5,48
204063d0:	4398                	lw	a4,0(a5)
204063d2:	fd842783          	lw	a5,-40(s0)
204063d6:	fec42683          	lw	a3,-20(s0)
204063da:	03068693          	addi	a3,a3,48
204063de:	8fd9                	or	a5,a5,a4
204063e0:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:162
        break;
204063e2:	a0a5                	j	2040644a <__metal_driver_sifive_gpio0_config_int+0x1fa>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:165
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IE)) |= source;
204063e4:	fec42783          	lw	a5,-20(s0)
204063e8:	07e1                	addi	a5,a5,24
204063ea:	4398                	lw	a4,0(a5)
204063ec:	fd842783          	lw	a5,-40(s0)
204063f0:	fec42683          	lw	a3,-20(s0)
204063f4:	06e1                	addi	a3,a3,24
204063f6:	8fd9                	or	a5,a5,a4
204063f8:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:167
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IE)) |= source;
204063fa:	fec42783          	lw	a5,-20(s0)
204063fe:	02078793          	addi	a5,a5,32
20406402:	4398                	lw	a4,0(a5)
20406404:	fd842783          	lw	a5,-40(s0)
20406408:	fec42683          	lw	a3,-20(s0)
2040640c:	02068693          	addi	a3,a3,32
20406410:	8fd9                	or	a5,a5,a4
20406412:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:169
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IE)) |= source;
20406414:	fec42783          	lw	a5,-20(s0)
20406418:	02878793          	addi	a5,a5,40
2040641c:	4398                	lw	a4,0(a5)
2040641e:	fd842783          	lw	a5,-40(s0)
20406422:	fec42683          	lw	a3,-20(s0)
20406426:	02868693          	addi	a3,a3,40
2040642a:	8fd9                	or	a5,a5,a4
2040642c:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:171
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IE)) |= source;
2040642e:	fec42783          	lw	a5,-20(s0)
20406432:	03078793          	addi	a5,a5,48
20406436:	4398                	lw	a4,0(a5)
20406438:	fd842783          	lw	a5,-40(s0)
2040643c:	fec42683          	lw	a3,-20(s0)
20406440:	03068693          	addi	a3,a3,48
20406444:	8fd9                	or	a5,a5,a4
20406446:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:172
        break;
20406448:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:174
    }
    return 0;
2040644a:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:175
}
2040644c:	853e                	mv	a0,a5
2040644e:	50b2                	lw	ra,44(sp)
20406450:	5422                	lw	s0,40(sp)
20406452:	6145                	addi	sp,sp,48
20406454:	8082                	ret

20406456 <__metal_driver_sifive_gpio0_clear_int>:
__metal_driver_sifive_gpio0_clear_int():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:178

int __metal_driver_sifive_gpio0_clear_int(struct metal_gpio *ggpio, long source,
                                          int intr_type) {
20406456:	7179                	addi	sp,sp,-48
20406458:	d606                	sw	ra,44(sp)
2040645a:	d422                	sw	s0,40(sp)
2040645c:	1800                	addi	s0,sp,48
2040645e:	fca42e23          	sw	a0,-36(s0)
20406462:	fcb42c23          	sw	a1,-40(s0)
20406466:	fcc42a23          	sw	a2,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:179
    long base = __metal_driver_sifive_gpio0_base(ggpio);
2040646a:	fdc42503          	lw	a0,-36(s0)
2040646e:	90bff0ef          	jal	ra,20405d78 <__metal_driver_sifive_gpio0_base>
20406472:	87aa                	mv	a5,a0
20406474:	fef42623          	sw	a5,-20(s0)
20406478:	fd442703          	lw	a4,-44(s0)
2040647c:	479d                	li	a5,7
2040647e:	14e7ea63          	bltu	a5,a4,204065d2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
20406482:	fd442783          	lw	a5,-44(s0)
20406486:	00279713          	slli	a4,a5,0x2
2040648a:	204017b7          	lui	a5,0x20401
2040648e:	f3078793          	addi	a5,a5,-208 # 20400f30 <__metal_driver_vtable_sifive_fe310_g000_pll+0x2c>
20406492:	97ba                	add	a5,a5,a4
20406494:	439c                	lw	a5,0(a5)
20406496:	8782                	jr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:184

    switch (intr_type) {
    case METAL_GPIO_INT_RISING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
20406498:	fec42783          	lw	a5,-20(s0)
2040649c:	07f1                	addi	a5,a5,28
2040649e:	4398                	lw	a4,0(a5)
204064a0:	fd842783          	lw	a5,-40(s0)
204064a4:	fec42683          	lw	a3,-20(s0)
204064a8:	06f1                	addi	a3,a3,28
204064aa:	8fd9                	or	a5,a5,a4
204064ac:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:185
        break;
204064ae:	a215                	j	204065d2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:188
    case METAL_GPIO_INT_FALLING:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204064b0:	fec42783          	lw	a5,-20(s0)
204064b4:	02478793          	addi	a5,a5,36
204064b8:	4398                	lw	a4,0(a5)
204064ba:	fd842783          	lw	a5,-40(s0)
204064be:	fec42683          	lw	a3,-20(s0)
204064c2:	02468693          	addi	a3,a3,36
204064c6:	8fd9                	or	a5,a5,a4
204064c8:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:189
        break;
204064ca:	a221                	j	204065d2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:192
    case METAL_GPIO_INT_BOTH_EDGE:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
204064cc:	fec42783          	lw	a5,-20(s0)
204064d0:	07f1                	addi	a5,a5,28
204064d2:	4398                	lw	a4,0(a5)
204064d4:	fd842783          	lw	a5,-40(s0)
204064d8:	fec42683          	lw	a3,-20(s0)
204064dc:	06f1                	addi	a3,a3,28
204064de:	8fd9                	or	a5,a5,a4
204064e0:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:194
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
204064e2:	fec42783          	lw	a5,-20(s0)
204064e6:	02478793          	addi	a5,a5,36
204064ea:	4398                	lw	a4,0(a5)
204064ec:	fd842783          	lw	a5,-40(s0)
204064f0:	fec42683          	lw	a3,-20(s0)
204064f4:	02468693          	addi	a3,a3,36
204064f8:	8fd9                	or	a5,a5,a4
204064fa:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:195
        break;
204064fc:	a8d9                	j	204065d2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:198
    case METAL_GPIO_INT_HIGH:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
204064fe:	fec42783          	lw	a5,-20(s0)
20406502:	02c78793          	addi	a5,a5,44
20406506:	4398                	lw	a4,0(a5)
20406508:	fd842783          	lw	a5,-40(s0)
2040650c:	fec42683          	lw	a3,-20(s0)
20406510:	02c68693          	addi	a3,a3,44
20406514:	8fd9                	or	a5,a5,a4
20406516:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:199
        break;
20406518:	a86d                	j	204065d2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:202
    case METAL_GPIO_INT_LOW:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
2040651a:	fec42783          	lw	a5,-20(s0)
2040651e:	03478793          	addi	a5,a5,52
20406522:	4398                	lw	a4,0(a5)
20406524:	fd842783          	lw	a5,-40(s0)
20406528:	fec42683          	lw	a3,-20(s0)
2040652c:	03468693          	addi	a3,a3,52
20406530:	8fd9                	or	a5,a5,a4
20406532:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:203
        break;
20406534:	a879                	j	204065d2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:206
    case METAL_GPIO_INT_BOTH_LEVEL:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
20406536:	fec42783          	lw	a5,-20(s0)
2040653a:	02c78793          	addi	a5,a5,44
2040653e:	4398                	lw	a4,0(a5)
20406540:	fd842783          	lw	a5,-40(s0)
20406544:	fec42683          	lw	a3,-20(s0)
20406548:	02c68693          	addi	a3,a3,44
2040654c:	8fd9                	or	a5,a5,a4
2040654e:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:208
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
20406550:	fec42783          	lw	a5,-20(s0)
20406554:	03478793          	addi	a5,a5,52
20406558:	4398                	lw	a4,0(a5)
2040655a:	fd842783          	lw	a5,-40(s0)
2040655e:	fec42683          	lw	a3,-20(s0)
20406562:	03468693          	addi	a3,a3,52
20406566:	8fd9                	or	a5,a5,a4
20406568:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:209
        break;
2040656a:	a0a5                	j	204065d2 <__metal_driver_sifive_gpio0_clear_int+0x17c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:212
    case METAL_GPIO_INT_MAX:
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_RISE_IP)) |= source;
2040656c:	fec42783          	lw	a5,-20(s0)
20406570:	07f1                	addi	a5,a5,28
20406572:	4398                	lw	a4,0(a5)
20406574:	fd842783          	lw	a5,-40(s0)
20406578:	fec42683          	lw	a3,-20(s0)
2040657c:	06f1                	addi	a3,a3,28
2040657e:	8fd9                	or	a5,a5,a4
20406580:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:214
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_FALL_IP)) |= source;
20406582:	fec42783          	lw	a5,-20(s0)
20406586:	02478793          	addi	a5,a5,36
2040658a:	4398                	lw	a4,0(a5)
2040658c:	fd842783          	lw	a5,-40(s0)
20406590:	fec42683          	lw	a3,-20(s0)
20406594:	02468693          	addi	a3,a3,36
20406598:	8fd9                	or	a5,a5,a4
2040659a:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:216
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_HIGH_IP)) |= source;
2040659c:	fec42783          	lw	a5,-20(s0)
204065a0:	02c78793          	addi	a5,a5,44
204065a4:	4398                	lw	a4,0(a5)
204065a6:	fd842783          	lw	a5,-40(s0)
204065aa:	fec42683          	lw	a3,-20(s0)
204065ae:	02c68693          	addi	a3,a3,44
204065b2:	8fd9                	or	a5,a5,a4
204065b4:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:218
        __METAL_ACCESS_ONCE(
            (__metal_io_u32 *)(base + METAL_SIFIVE_GPIO0_LOW_IP)) |= source;
204065b6:	fec42783          	lw	a5,-20(s0)
204065ba:	03478793          	addi	a5,a5,52
204065be:	4398                	lw	a4,0(a5)
204065c0:	fd842783          	lw	a5,-40(s0)
204065c4:	fec42683          	lw	a3,-20(s0)
204065c8:	03468693          	addi	a3,a3,52
204065cc:	8fd9                	or	a5,a5,a4
204065ce:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:219
        break;
204065d0:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:221
    }
    return 0;
204065d2:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:222
}
204065d4:	853e                	mv	a0,a5
204065d6:	50b2                	lw	ra,44(sp)
204065d8:	5422                	lw	s0,40(sp)
204065da:	6145                	addi	sp,sp,48
204065dc:	8082                	ret

204065de <__metal_driver_gpio_interrupt_controller>:
__metal_driver_gpio_interrupt_controller():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:225

struct metal_interrupt *
__metal_driver_gpio_interrupt_controller(struct metal_gpio *gpio) {
204065de:	1101                	addi	sp,sp,-32
204065e0:	ce06                	sw	ra,28(sp)
204065e2:	cc22                	sw	s0,24(sp)
204065e4:	1000                	addi	s0,sp,32
204065e6:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:226
    return __metal_driver_sifive_gpio0_interrupt_parent(gpio);
204065ea:	fec42503          	lw	a0,-20(s0)
204065ee:	fb0ff0ef          	jal	ra,20405d9e <__metal_driver_sifive_gpio0_interrupt_parent>
204065f2:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:227
}
204065f4:	853e                	mv	a0,a5
204065f6:	40f2                	lw	ra,28(sp)
204065f8:	4462                	lw	s0,24(sp)
204065fa:	6105                	addi	sp,sp,32
204065fc:	8082                	ret

204065fe <__metal_driver_gpio_get_interrupt_id>:
__metal_driver_gpio_get_interrupt_id():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:229

int __metal_driver_gpio_get_interrupt_id(struct metal_gpio *gpio, int pin) {
204065fe:	7179                	addi	sp,sp,-48
20406600:	d606                	sw	ra,44(sp)
20406602:	d422                	sw	s0,40(sp)
20406604:	1800                	addi	s0,sp,48
20406606:	fca42e23          	sw	a0,-36(s0)
2040660a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:231
    int irq;
    irq = __metal_driver_sifive_gpio0_interrupt_lines(gpio, pin);
2040660e:	fd842583          	lw	a1,-40(s0)
20406612:	fdc42503          	lw	a0,-36(s0)
20406616:	fb2ff0ef          	jal	ra,20405dc8 <__metal_driver_sifive_gpio0_interrupt_lines>
2040661a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:232
    return irq;
2040661e:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_gpio0.c:233
}
20406622:	853e                	mv	a0,a5
20406624:	50b2                	lw	ra,44(sp)
20406626:	5422                	lw	s0,40(sp)
20406628:	6145                	addi	sp,sp,48
2040662a:	8082                	ret

2040662c <__metal_driver_sifive_test0_base>:
__metal_driver_sifive_test0_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:863
{
2040662c:	1101                	addi	sp,sp,-32
2040662e:	ce22                	sw	s0,28(sp)
20406630:	1000                	addi	s0,sp,32
20406632:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:864
	if ((uintptr_t)sd == (uintptr_t)&__metal_dt_test_100000) {
20406636:	fec42703          	lw	a4,-20(s0)
2040663a:	82018793          	addi	a5,gp,-2016 # 800007c0 <__metal_dt_test_100000>
2040663e:	00f71563          	bne	a4,a5,20406648 <__metal_driver_sifive_test0_base+0x1c>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:865
		return METAL_SIFIVE_TEST0_100000_BASE_ADDRESS;
20406642:	001007b7          	lui	a5,0x100
20406646:	a011                	j	2040664a <__metal_driver_sifive_test0_base+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:868
		return 0;
20406648:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:870
}
2040664a:	853e                	mv	a0,a5
2040664c:	4472                	lw	s0,28(sp)
2040664e:	6105                	addi	sp,sp,32
20406650:	8082                	ret

20406652 <__metal_driver_sifive_test0_exit>:
__metal_driver_sifive_test0_exit():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:18
#include <metal/io.h>

void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
void __metal_driver_sifive_test0_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406652:	7179                	addi	sp,sp,-48
20406654:	d606                	sw	ra,44(sp)
20406656:	d422                	sw	s0,40(sp)
20406658:	1800                	addi	s0,sp,48
2040665a:	fca42e23          	sw	a0,-36(s0)
2040665e:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:19
    long base = __metal_driver_sifive_test0_base(sd);
20406662:	fdc42503          	lw	a0,-36(s0)
20406666:	37d9                	jal	2040662c <__metal_driver_sifive_test0_base>
20406668:	87aa                	mv	a5,a0
2040666a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:20
    uint32_t out = (code << 16) + (code == 0 ? 0x5555 : 0x3333);
2040666e:	fd842783          	lw	a5,-40(s0)
20406672:	01079713          	slli	a4,a5,0x10
20406676:	fd842783          	lw	a5,-40(s0)
2040667a:	e789                	bnez	a5,20406684 <__metal_driver_sifive_test0_exit+0x32>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 1)
2040667c:	6795                	lui	a5,0x5
2040667e:	55578793          	addi	a5,a5,1365 # 5555 <__heap_size+0x4d55>
20406682:	a021                	j	2040668a <__metal_driver_sifive_test0_exit+0x38>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 2)
20406684:	678d                	lui	a5,0x3
20406686:	33378793          	addi	a5,a5,819 # 3333 <__heap_size+0x2b33>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:20 (discriminator 4)
2040668a:	97ba                	add	a5,a5,a4
2040668c:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:22 (discriminator 1)
    while (1) {
        __METAL_ACCESS_ONCE((
20406690:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_test0.c:23 (discriminator 1)
            __metal_io_u32 *)(base + METAL_SIFIVE_TEST0_FINISHER_OFFSET)) = out;
20406694:	fe842703          	lw	a4,-24(s0)
20406698:	c398                	sw	a4,0(a5)
2040669a:	bfdd                	j	20406690 <__metal_driver_sifive_test0_exit+0x3e>

2040669c <__metal_driver_sifive_uart0_control_base>:
__metal_driver_sifive_uart0_control_base():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:888
{
2040669c:	1101                	addi	sp,sp,-32
2040669e:	ce22                	sw	s0,28(sp)
204066a0:	1000                	addi	s0,sp,32
204066a2:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:889
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204066a6:	fec42703          	lw	a4,-20(s0)
204066aa:	800007b7          	lui	a5,0x80000
204066ae:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
204066b2:	00f71563          	bne	a4,a5,204066bc <__metal_driver_sifive_uart0_control_base+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:890
		return METAL_SIFIVE_UART0_10013000_BASE_ADDRESS;
204066b6:	100137b7          	lui	a5,0x10013
204066ba:	a011                	j	204066be <__metal_driver_sifive_uart0_control_base+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:893
		return 0;
204066bc:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:895
}
204066be:	853e                	mv	a0,a5
204066c0:	4472                	lw	s0,28(sp)
204066c2:	6105                	addi	sp,sp,32
204066c4:	8082                	ret

204066c6 <__metal_driver_sifive_uart0_interrupt_parent>:
__metal_driver_sifive_uart0_interrupt_parent():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:918
{
204066c6:	1101                	addi	sp,sp,-32
204066c8:	ce22                	sw	s0,28(sp)
204066ca:	1000                	addi	s0,sp,32
204066cc:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:919
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204066d0:	fec42703          	lw	a4,-20(s0)
204066d4:	800007b7          	lui	a5,0x80000
204066d8:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
204066dc:	00f71763          	bne	a4,a5,204066ea <__metal_driver_sifive_uart0_interrupt_parent+0x24>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:920
		return (struct metal_interrupt *)&__metal_dt_interrupt_controller_c000000.controller;
204066e0:	800007b7          	lui	a5,0x80000
204066e4:	45878793          	addi	a5,a5,1112 # 80000458 <metal_segment_heap_target_end+0xffffeca8>
204066e8:	a011                	j	204066ec <__metal_driver_sifive_uart0_interrupt_parent+0x26>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:923
		return 0;
204066ea:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:925
}
204066ec:	853e                	mv	a0,a5
204066ee:	4472                	lw	s0,28(sp)
204066f0:	6105                	addi	sp,sp,32
204066f2:	8082                	ret

204066f4 <__metal_driver_sifive_uart0_interrupt_line>:
__metal_driver_sifive_uart0_interrupt_line():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:928
{
204066f4:	1101                	addi	sp,sp,-32
204066f6:	ce22                	sw	s0,28(sp)
204066f8:	1000                	addi	s0,sp,32
204066fa:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:929
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204066fe:	fec42703          	lw	a4,-20(s0)
20406702:	800007b7          	lui	a5,0x80000
20406706:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
2040670a:	00f71463          	bne	a4,a5,20406712 <__metal_driver_sifive_uart0_interrupt_line+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:930
		return 5;
2040670e:	4795                	li	a5,5
20406710:	a011                	j	20406714 <__metal_driver_sifive_uart0_interrupt_line+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:933
		return 0;
20406712:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:935
}
20406714:	853e                	mv	a0,a5
20406716:	4472                	lw	s0,28(sp)
20406718:	6105                	addi	sp,sp,32
2040671a:	8082                	ret

2040671c <__metal_driver_sifive_uart0_clock>:
__metal_driver_sifive_uart0_clock():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:938
{
2040671c:	1101                	addi	sp,sp,-32
2040671e:	ce22                	sw	s0,28(sp)
20406720:	1000                	addi	s0,sp,32
20406722:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:939
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406726:	fec42703          	lw	a4,-20(s0)
2040672a:	800007b7          	lui	a5,0x80000
2040672e:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
20406732:	00f71763          	bne	a4,a5,20406740 <__metal_driver_sifive_uart0_clock+0x24>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:940
		return (struct metal_clock *)&__metal_dt_clock_4.clock;
20406736:	800007b7          	lui	a5,0x80000
2040673a:	79078793          	addi	a5,a5,1936 # 80000790 <metal_segment_heap_target_end+0xffffefe0>
2040673e:	a011                	j	20406742 <__metal_driver_sifive_uart0_clock+0x26>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:943
		return 0;
20406740:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:945
}
20406742:	853e                	mv	a0,a5
20406744:	4472                	lw	s0,28(sp)
20406746:	6105                	addi	sp,sp,32
20406748:	8082                	ret

2040674a <__metal_driver_sifive_uart0_pinmux>:
__metal_driver_sifive_uart0_pinmux():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:948
{
2040674a:	1101                	addi	sp,sp,-32
2040674c:	ce22                	sw	s0,28(sp)
2040674e:	1000                	addi	s0,sp,32
20406750:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:949
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
20406754:	fec42703          	lw	a4,-20(s0)
20406758:	800007b7          	lui	a5,0x80000
2040675c:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
20406760:	00f71563          	bne	a4,a5,2040676a <__metal_driver_sifive_uart0_pinmux+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:950
		return (struct __metal_driver_sifive_gpio0 *)&__metal_dt_gpio_10012000;
20406764:	81c18793          	addi	a5,gp,-2020 # 800007bc <__metal_dt_gpio_10012000>
20406768:	a011                	j	2040676c <__metal_driver_sifive_uart0_pinmux+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:953
		return 0;
2040676a:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:955
}
2040676c:	853e                	mv	a0,a5
2040676e:	4472                	lw	s0,28(sp)
20406770:	6105                	addi	sp,sp,32
20406772:	8082                	ret

20406774 <__metal_driver_sifive_uart0_pinmux_output_selector>:
__metal_driver_sifive_uart0_pinmux_output_selector():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:958
{
20406774:	1101                	addi	sp,sp,-32
20406776:	ce22                	sw	s0,28(sp)
20406778:	1000                	addi	s0,sp,32
2040677a:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:959
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
2040677e:	fec42703          	lw	a4,-20(s0)
20406782:	800007b7          	lui	a5,0x80000
20406786:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
2040678a:	00f71463          	bne	a4,a5,20406792 <__metal_driver_sifive_uart0_pinmux_output_selector+0x1e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:960
		return 0;
2040678e:	4781                	li	a5,0
20406790:	a011                	j	20406794 <__metal_driver_sifive_uart0_pinmux_output_selector+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:963
		return 0;
20406792:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:965
}
20406794:	853e                	mv	a0,a5
20406796:	4472                	lw	s0,28(sp)
20406798:	6105                	addi	sp,sp,32
2040679a:	8082                	ret

2040679c <__metal_driver_sifive_uart0_pinmux_source_selector>:
__metal_driver_sifive_uart0_pinmux_source_selector():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:968
{
2040679c:	1101                	addi	sp,sp,-32
2040679e:	ce22                	sw	s0,28(sp)
204067a0:	1000                	addi	s0,sp,32
204067a2:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:969
	if ((uintptr_t)uart == (uintptr_t)&__metal_dt_serial_10013000) {
204067a6:	fec42703          	lw	a4,-20(s0)
204067aa:	800007b7          	lui	a5,0x80000
204067ae:	75878793          	addi	a5,a5,1880 # 80000758 <metal_segment_heap_target_end+0xffffefa8>
204067b2:	00f71563          	bne	a4,a5,204067bc <__metal_driver_sifive_uart0_pinmux_source_selector+0x20>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:970
		return 196608;
204067b6:	000307b7          	lui	a5,0x30
204067ba:	a011                	j	204067be <__metal_driver_sifive_uart0_pinmux_source_selector+0x22>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:973
		return 0;
204067bc:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:975
}
204067be:	853e                	mv	a0,a5
204067c0:	4472                	lw	s0,28(sp)
204067c2:	6105                	addi	sp,sp,32
204067c4:	8082                	ret

204067c6 <__metal_driver_sifive_uart0_interrupt_controller>:
__metal_driver_sifive_uart0_interrupt_controller():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:37
    (__METAL_ACCESS_ONCE((__metal_io_u8 *)UART_REG(offset)))
#define UART_REGW(offset)                                                      \
    (__METAL_ACCESS_ONCE((__metal_io_u32 *)UART_REG(offset)))

struct metal_interrupt *
__metal_driver_sifive_uart0_interrupt_controller(struct metal_uart *uart) {
204067c6:	1101                	addi	sp,sp,-32
204067c8:	ce06                	sw	ra,28(sp)
204067ca:	cc22                	sw	s0,24(sp)
204067cc:	1000                	addi	s0,sp,32
204067ce:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:38
    return __metal_driver_sifive_uart0_interrupt_parent(uart);
204067d2:	fec42503          	lw	a0,-20(s0)
204067d6:	3dc5                	jal	204066c6 <__metal_driver_sifive_uart0_interrupt_parent>
204067d8:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:39
}
204067da:	853e                	mv	a0,a5
204067dc:	40f2                	lw	ra,28(sp)
204067de:	4462                	lw	s0,24(sp)
204067e0:	6105                	addi	sp,sp,32
204067e2:	8082                	ret

204067e4 <__metal_driver_sifive_uart0_get_interrupt_id>:
__metal_driver_sifive_uart0_get_interrupt_id():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:41

int __metal_driver_sifive_uart0_get_interrupt_id(struct metal_uart *uart) {
204067e4:	1101                	addi	sp,sp,-32
204067e6:	ce06                	sw	ra,28(sp)
204067e8:	cc22                	sw	s0,24(sp)
204067ea:	1000                	addi	s0,sp,32
204067ec:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:42
    return __metal_driver_sifive_uart0_interrupt_line(uart);
204067f0:	fec42503          	lw	a0,-20(s0)
204067f4:	3701                	jal	204066f4 <__metal_driver_sifive_uart0_interrupt_line>
204067f6:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:43
}
204067f8:	853e                	mv	a0,a5
204067fa:	40f2                	lw	ra,28(sp)
204067fc:	4462                	lw	s0,24(sp)
204067fe:	6105                	addi	sp,sp,32
20406800:	8082                	ret

20406802 <__metal_driver_sifive_uart0_tx_interrupt_enable>:
__metal_driver_sifive_uart0_tx_interrupt_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:45

int __metal_driver_sifive_uart0_tx_interrupt_enable(struct metal_uart *uart) {
20406802:	7179                	addi	sp,sp,-48
20406804:	d606                	sw	ra,44(sp)
20406806:	d422                	sw	s0,40(sp)
20406808:	1800                	addi	s0,sp,48
2040680a:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:46
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040680e:	fdc42503          	lw	a0,-36(s0)
20406812:	e8bff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406816:	87aa                	mv	a5,a0
20406818:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:48

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_TXWM;
2040681c:	fec42783          	lw	a5,-20(s0)
20406820:	07c1                	addi	a5,a5,16
20406822:	439c                	lw	a5,0(a5)
20406824:	fec42703          	lw	a4,-20(s0)
20406828:	0741                	addi	a4,a4,16
2040682a:	0017e793          	ori	a5,a5,1
2040682e:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:49
    return 0;
20406830:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:50
}
20406832:	853e                	mv	a0,a5
20406834:	50b2                	lw	ra,44(sp)
20406836:	5422                	lw	s0,40(sp)
20406838:	6145                	addi	sp,sp,48
2040683a:	8082                	ret

2040683c <__metal_driver_sifive_uart0_tx_interrupt_disable>:
__metal_driver_sifive_uart0_tx_interrupt_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:52

int __metal_driver_sifive_uart0_tx_interrupt_disable(struct metal_uart *uart) {
2040683c:	7179                	addi	sp,sp,-48
2040683e:	d606                	sw	ra,44(sp)
20406840:	d422                	sw	s0,40(sp)
20406842:	1800                	addi	s0,sp,48
20406844:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:53
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406848:	fdc42503          	lw	a0,-36(s0)
2040684c:	e51ff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406850:	87aa                	mv	a5,a0
20406852:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:55

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_TXWM;
20406856:	fec42783          	lw	a5,-20(s0)
2040685a:	07c1                	addi	a5,a5,16
2040685c:	439c                	lw	a5,0(a5)
2040685e:	fec42703          	lw	a4,-20(s0)
20406862:	0741                	addi	a4,a4,16
20406864:	9bf9                	andi	a5,a5,-2
20406866:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:56
    return 0;
20406868:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:57
}
2040686a:	853e                	mv	a0,a5
2040686c:	50b2                	lw	ra,44(sp)
2040686e:	5422                	lw	s0,40(sp)
20406870:	6145                	addi	sp,sp,48
20406872:	8082                	ret

20406874 <__metal_driver_sifive_uart0_rx_interrupt_enable>:
__metal_driver_sifive_uart0_rx_interrupt_enable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:59

int __metal_driver_sifive_uart0_rx_interrupt_enable(struct metal_uart *uart) {
20406874:	7179                	addi	sp,sp,-48
20406876:	d606                	sw	ra,44(sp)
20406878:	d422                	sw	s0,40(sp)
2040687a:	1800                	addi	s0,sp,48
2040687c:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:60
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406880:	fdc42503          	lw	a0,-36(s0)
20406884:	e19ff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406888:	87aa                	mv	a5,a0
2040688a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:62

    UART_REGW(METAL_SIFIVE_UART0_IE) |= UART_RXWM;
2040688e:	fec42783          	lw	a5,-20(s0)
20406892:	07c1                	addi	a5,a5,16
20406894:	439c                	lw	a5,0(a5)
20406896:	fec42703          	lw	a4,-20(s0)
2040689a:	0741                	addi	a4,a4,16
2040689c:	0027e793          	ori	a5,a5,2
204068a0:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:63
    return 0;
204068a2:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:64
}
204068a4:	853e                	mv	a0,a5
204068a6:	50b2                	lw	ra,44(sp)
204068a8:	5422                	lw	s0,40(sp)
204068aa:	6145                	addi	sp,sp,48
204068ac:	8082                	ret

204068ae <__metal_driver_sifive_uart0_rx_interrupt_disable>:
__metal_driver_sifive_uart0_rx_interrupt_disable():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:66

int __metal_driver_sifive_uart0_rx_interrupt_disable(struct metal_uart *uart) {
204068ae:	7179                	addi	sp,sp,-48
204068b0:	d606                	sw	ra,44(sp)
204068b2:	d422                	sw	s0,40(sp)
204068b4:	1800                	addi	s0,sp,48
204068b6:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:67
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204068ba:	fdc42503          	lw	a0,-36(s0)
204068be:	ddfff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
204068c2:	87aa                	mv	a5,a0
204068c4:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:69

    UART_REGW(METAL_SIFIVE_UART0_IE) &= ~UART_RXWM;
204068c8:	fec42783          	lw	a5,-20(s0)
204068cc:	07c1                	addi	a5,a5,16
204068ce:	439c                	lw	a5,0(a5)
204068d0:	fec42703          	lw	a4,-20(s0)
204068d4:	0741                	addi	a4,a4,16
204068d6:	9bf5                	andi	a5,a5,-3
204068d8:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:70
    return 0;
204068da:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:71
}
204068dc:	853e                	mv	a0,a5
204068de:	50b2                	lw	ra,44(sp)
204068e0:	5422                	lw	s0,40(sp)
204068e2:	6145                	addi	sp,sp,48
204068e4:	8082                	ret

204068e6 <__metal_driver_sifive_uart0_txready>:
__metal_driver_sifive_uart0_txready():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:73

int __metal_driver_sifive_uart0_txready(struct metal_uart *uart) {
204068e6:	7179                	addi	sp,sp,-48
204068e8:	d606                	sw	ra,44(sp)
204068ea:	d422                	sw	s0,40(sp)
204068ec:	1800                	addi	s0,sp,48
204068ee:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:74
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204068f2:	fdc42503          	lw	a0,-36(s0)
204068f6:	da7ff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
204068fa:	87aa                	mv	a5,a0
204068fc:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:76

    return !!((UART_REGW(METAL_SIFIVE_UART0_TXDATA) & UART_TXFULL));
20406900:	fec42783          	lw	a5,-20(s0)
20406904:	439c                	lw	a5,0(a5)
20406906:	83fd                	srli	a5,a5,0x1f
20406908:	0ff7f793          	zext.b	a5,a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:77
}
2040690c:	853e                	mv	a0,a5
2040690e:	50b2                	lw	ra,44(sp)
20406910:	5422                	lw	s0,40(sp)
20406912:	6145                	addi	sp,sp,48
20406914:	8082                	ret

20406916 <__metal_driver_sifive_uart0_set_tx_watermark>:
__metal_driver_sifive_uart0_set_tx_watermark():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:80

int __metal_driver_sifive_uart0_set_tx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406916:	7179                	addi	sp,sp,-48
20406918:	d606                	sw	ra,44(sp)
2040691a:	d422                	sw	s0,40(sp)
2040691c:	1800                	addi	s0,sp,48
2040691e:	fca42e23          	sw	a0,-36(s0)
20406922:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:81
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406926:	fdc42503          	lw	a0,-36(s0)
2040692a:	d73ff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
2040692e:	87aa                	mv	a5,a0
20406930:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:83

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(level);
20406934:	fec42783          	lw	a5,-20(s0)
20406938:	07a1                	addi	a5,a5,8
2040693a:	4398                	lw	a4,0(a5)
2040693c:	fd842783          	lw	a5,-40(s0)
20406940:	01079693          	slli	a3,a5,0x10
20406944:	000707b7          	lui	a5,0x70
20406948:	8ff5                	and	a5,a5,a3
2040694a:	fec42683          	lw	a3,-20(s0)
2040694e:	06a1                	addi	a3,a3,8
20406950:	8fd9                	or	a5,a5,a4
20406952:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:84
    return 0;
20406954:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:85
}
20406956:	853e                	mv	a0,a5
20406958:	50b2                	lw	ra,44(sp)
2040695a:	5422                	lw	s0,40(sp)
2040695c:	6145                	addi	sp,sp,48
2040695e:	8082                	ret

20406960 <__metal_driver_sifive_uart0_get_tx_watermark>:
__metal_driver_sifive_uart0_get_tx_watermark():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:87

size_t __metal_driver_sifive_uart0_get_tx_watermark(struct metal_uart *uart) {
20406960:	7179                	addi	sp,sp,-48
20406962:	d606                	sw	ra,44(sp)
20406964:	d422                	sw	s0,40(sp)
20406966:	1800                	addi	s0,sp,48
20406968:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:88
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
2040696c:	fdc42503          	lw	a0,-36(s0)
20406970:	d2dff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406974:	87aa                	mv	a5,a0
20406976:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:90

    return ((UART_REGW(METAL_SIFIVE_UART0_TXCTRL) >> 16) & 0x7);
2040697a:	fec42783          	lw	a5,-20(s0)
2040697e:	07a1                	addi	a5,a5,8
20406980:	439c                	lw	a5,0(a5)
20406982:	83c1                	srli	a5,a5,0x10
20406984:	8b9d                	andi	a5,a5,7
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:91
}
20406986:	853e                	mv	a0,a5
20406988:	50b2                	lw	ra,44(sp)
2040698a:	5422                	lw	s0,40(sp)
2040698c:	6145                	addi	sp,sp,48
2040698e:	8082                	ret

20406990 <__metal_driver_sifive_uart0_set_rx_watermark>:
__metal_driver_sifive_uart0_set_rx_watermark():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:94

int __metal_driver_sifive_uart0_set_rx_watermark(struct metal_uart *uart,
                                                 size_t level) {
20406990:	7179                	addi	sp,sp,-48
20406992:	d606                	sw	ra,44(sp)
20406994:	d422                	sw	s0,40(sp)
20406996:	1800                	addi	s0,sp,48
20406998:	fca42e23          	sw	a0,-36(s0)
2040699c:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:95
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204069a0:	fdc42503          	lw	a0,-36(s0)
204069a4:	cf9ff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
204069a8:	87aa                	mv	a5,a0
204069aa:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:97

    UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXCNT(level);
204069ae:	fec42783          	lw	a5,-20(s0)
204069b2:	07b1                	addi	a5,a5,12
204069b4:	4398                	lw	a4,0(a5)
204069b6:	fd842783          	lw	a5,-40(s0)
204069ba:	01079693          	slli	a3,a5,0x10
204069be:	000707b7          	lui	a5,0x70
204069c2:	8ff5                	and	a5,a5,a3
204069c4:	fec42683          	lw	a3,-20(s0)
204069c8:	06b1                	addi	a3,a3,12
204069ca:	8fd9                	or	a5,a5,a4
204069cc:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:98
    return 0;
204069ce:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:99
}
204069d0:	853e                	mv	a0,a5
204069d2:	50b2                	lw	ra,44(sp)
204069d4:	5422                	lw	s0,40(sp)
204069d6:	6145                	addi	sp,sp,48
204069d8:	8082                	ret

204069da <__metal_driver_sifive_uart0_get_rx_watermark>:
__metal_driver_sifive_uart0_get_rx_watermark():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:101

size_t __metal_driver_sifive_uart0_get_rx_watermark(struct metal_uart *uart) {
204069da:	7179                	addi	sp,sp,-48
204069dc:	d606                	sw	ra,44(sp)
204069de:	d422                	sw	s0,40(sp)
204069e0:	1800                	addi	s0,sp,48
204069e2:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:102
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
204069e6:	fdc42503          	lw	a0,-36(s0)
204069ea:	cb3ff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
204069ee:	87aa                	mv	a5,a0
204069f0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:104

    return ((UART_REGW(METAL_SIFIVE_UART0_RXCTRL) >> 16) & 0x7);
204069f4:	fec42783          	lw	a5,-20(s0)
204069f8:	07b1                	addi	a5,a5,12
204069fa:	439c                	lw	a5,0(a5)
204069fc:	83c1                	srli	a5,a5,0x10
204069fe:	8b9d                	andi	a5,a5,7
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:105
}
20406a00:	853e                	mv	a0,a5
20406a02:	50b2                	lw	ra,44(sp)
20406a04:	5422                	lw	s0,40(sp)
20406a06:	6145                	addi	sp,sp,48
20406a08:	8082                	ret

20406a0a <__metal_driver_sifive_uart0_putc>:
__metal_driver_sifive_uart0_putc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:107

int __metal_driver_sifive_uart0_putc(struct metal_uart *uart, int c) {
20406a0a:	7179                	addi	sp,sp,-48
20406a0c:	d606                	sw	ra,44(sp)
20406a0e:	d422                	sw	s0,40(sp)
20406a10:	1800                	addi	s0,sp,48
20406a12:	fca42e23          	sw	a0,-36(s0)
20406a16:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:108
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406a1a:	fdc42503          	lw	a0,-36(s0)
20406a1e:	c7fff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406a22:	87aa                	mv	a5,a0
20406a24:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:110

    while (__metal_driver_sifive_uart0_txready(uart) != 0) {
20406a28:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:110 (discriminator 1)
20406a2a:	fdc42503          	lw	a0,-36(s0)
20406a2e:	eb9ff0ef          	jal	ra,204068e6 <__metal_driver_sifive_uart0_txready>
20406a32:	87aa                	mv	a5,a0
20406a34:	fbfd                	bnez	a5,20406a2a <__metal_driver_sifive_uart0_putc+0x20>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:113
        /* wait */
    }
    UART_REGW(METAL_SIFIVE_UART0_TXDATA) = c;
20406a36:	fec42783          	lw	a5,-20(s0)
20406a3a:	fd842703          	lw	a4,-40(s0)
20406a3e:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:114
    return 0;
20406a40:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:115
}
20406a42:	853e                	mv	a0,a5
20406a44:	50b2                	lw	ra,44(sp)
20406a46:	5422                	lw	s0,40(sp)
20406a48:	6145                	addi	sp,sp,48
20406a4a:	8082                	ret

20406a4c <__metal_driver_sifive_uart0_getc>:
__metal_driver_sifive_uart0_getc():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:117

int __metal_driver_sifive_uart0_getc(struct metal_uart *uart, int *c) {
20406a4c:	7179                	addi	sp,sp,-48
20406a4e:	d606                	sw	ra,44(sp)
20406a50:	d422                	sw	s0,40(sp)
20406a52:	1800                	addi	s0,sp,48
20406a54:	fca42e23          	sw	a0,-36(s0)
20406a58:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:119
    uint32_t ch;
    long control_base = __metal_driver_sifive_uart0_control_base(uart);
20406a5c:	fdc42503          	lw	a0,-36(s0)
20406a60:	c3dff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406a64:	87aa                	mv	a5,a0
20406a66:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:121
    /* No seperate status register, we get status and the byte at same time */
    ch = UART_REGW(METAL_SIFIVE_UART0_RXDATA);
20406a6a:	fec42783          	lw	a5,-20(s0)
20406a6e:	0791                	addi	a5,a5,4
20406a70:	439c                	lw	a5,0(a5)
20406a72:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:123
    ;
    if (ch & UART_RXEMPTY) {
20406a76:	fe842783          	lw	a5,-24(s0)
20406a7a:	0007d763          	bgez	a5,20406a88 <__metal_driver_sifive_uart0_getc+0x3c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:124
        *c = -1; /* aka: EOF in most of the world */
20406a7e:	fd842783          	lw	a5,-40(s0)
20406a82:	577d                	li	a4,-1
20406a84:	c398                	sw	a4,0(a5)
20406a86:	a801                	j	20406a96 <__metal_driver_sifive_uart0_getc+0x4a>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:126
    } else {
        *c = ch & 0x0ff;
20406a88:	fe842783          	lw	a5,-24(s0)
20406a8c:	0ff7f713          	zext.b	a4,a5
20406a90:	fd842783          	lw	a5,-40(s0)
20406a94:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:128
    }
    return 0;
20406a96:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:129
}
20406a98:	853e                	mv	a0,a5
20406a9a:	50b2                	lw	ra,44(sp)
20406a9c:	5422                	lw	s0,40(sp)
20406a9e:	6145                	addi	sp,sp,48
20406aa0:	8082                	ret

20406aa2 <__metal_driver_sifive_uart0_get_baud_rate>:
__metal_driver_sifive_uart0_get_baud_rate():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:131

int __metal_driver_sifive_uart0_get_baud_rate(struct metal_uart *guart) {
20406aa2:	7179                	addi	sp,sp,-48
20406aa4:	d622                	sw	s0,44(sp)
20406aa6:	1800                	addi	s0,sp,48
20406aa8:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:132
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406aac:	fdc42783          	lw	a5,-36(s0)
20406ab0:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:133
    return uart->baud_rate;
20406ab4:	fec42783          	lw	a5,-20(s0)
20406ab8:	43dc                	lw	a5,4(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:134
}
20406aba:	853e                	mv	a0,a5
20406abc:	5432                	lw	s0,44(sp)
20406abe:	6145                	addi	sp,sp,48
20406ac0:	8082                	ret

20406ac2 <__metal_driver_sifive_uart0_set_baud_rate>:
__metal_driver_sifive_uart0_set_baud_rate():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:137

int __metal_driver_sifive_uart0_set_baud_rate(struct metal_uart *guart,
                                              int baud_rate) {
20406ac2:	7179                	addi	sp,sp,-48
20406ac4:	d606                	sw	ra,44(sp)
20406ac6:	d422                	sw	s0,40(sp)
20406ac8:	1800                	addi	s0,sp,48
20406aca:	fca42e23          	sw	a0,-36(s0)
20406ace:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:138
    struct __metal_driver_sifive_uart0 *uart = (void *)guart;
20406ad2:	fdc42783          	lw	a5,-36(s0)
20406ad6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:139
    long control_base = __metal_driver_sifive_uart0_control_base(guart);
20406ada:	fdc42503          	lw	a0,-36(s0)
20406ade:	bbfff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406ae2:	87aa                	mv	a5,a0
20406ae4:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:140
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406ae8:	fdc42503          	lw	a0,-36(s0)
20406aec:	c31ff0ef          	jal	ra,2040671c <__metal_driver_sifive_uart0_clock>
20406af0:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:142

    uart->baud_rate = baud_rate;
20406af4:	fd842703          	lw	a4,-40(s0)
20406af8:	fec42783          	lw	a5,-20(s0)
20406afc:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:144

    if (clock != NULL) {
20406afe:	fe442783          	lw	a5,-28(s0)
20406b02:	cbb1                	beqz	a5,20406b56 <__metal_driver_sifive_uart0_set_baud_rate+0x94>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:145
        long clock_rate = clock->vtable->get_rate_hz(clock);
20406b04:	fe442783          	lw	a5,-28(s0)
20406b08:	439c                	lw	a5,0(a5)
20406b0a:	439c                	lw	a5,0(a5)
20406b0c:	fe442503          	lw	a0,-28(s0)
20406b10:	9782                	jalr	a5
20406b12:	fea42023          	sw	a0,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:146
        UART_REGW(METAL_SIFIVE_UART0_DIV) = clock_rate / baud_rate - 1;
20406b16:	fe042703          	lw	a4,-32(s0)
20406b1a:	fd842783          	lw	a5,-40(s0)
20406b1e:	02f747b3          	div	a5,a4,a5
20406b22:	fff78713          	addi	a4,a5,-1 # 6ffff <__heap_size+0x6f7ff>
20406b26:	fe842783          	lw	a5,-24(s0)
20406b2a:	07e1                	addi	a5,a5,24
20406b2c:	c398                	sw	a4,0(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:147
        UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXEN;
20406b2e:	fe842783          	lw	a5,-24(s0)
20406b32:	07a1                	addi	a5,a5,8
20406b34:	439c                	lw	a5,0(a5)
20406b36:	fe842703          	lw	a4,-24(s0)
20406b3a:	0721                	addi	a4,a4,8
20406b3c:	0017e793          	ori	a5,a5,1
20406b40:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:148
        UART_REGW(METAL_SIFIVE_UART0_RXCTRL) |= UART_RXEN;
20406b42:	fe842783          	lw	a5,-24(s0)
20406b46:	07b1                	addi	a5,a5,12
20406b48:	439c                	lw	a5,0(a5)
20406b4a:	fe842703          	lw	a4,-24(s0)
20406b4e:	0731                	addi	a4,a4,12
20406b50:	0017e793          	ori	a5,a5,1
20406b54:	c31c                	sw	a5,0(a4)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:150
    }
    return 0;
20406b56:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:151
}
20406b58:	853e                	mv	a0,a5
20406b5a:	50b2                	lw	ra,44(sp)
20406b5c:	5422                	lw	s0,40(sp)
20406b5e:	6145                	addi	sp,sp,48
20406b60:	8082                	ret

20406b62 <pre_rate_change_callback_func>:
pre_rate_change_callback_func():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:153

static void pre_rate_change_callback_func(void *priv) {
20406b62:	7139                	addi	sp,sp,-64
20406b64:	de06                	sw	ra,60(sp)
20406b66:	dc22                	sw	s0,56(sp)
20406b68:	0080                	addi	s0,sp,64
20406b6a:	fca42623          	sw	a0,-52(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:154
    struct __metal_driver_sifive_uart0 *uart = priv;
20406b6e:	fcc42783          	lw	a5,-52(s0)
20406b72:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:156
    long control_base =
        __metal_driver_sifive_uart0_control_base((struct metal_uart *)priv);
20406b76:	fcc42503          	lw	a0,-52(s0)
20406b7a:	b23ff0ef          	jal	ra,2040669c <__metal_driver_sifive_uart0_control_base>
20406b7e:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:155
    long control_base =
20406b80:	fef42423          	sw	a5,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:158
    struct metal_clock *clock =
        __metal_driver_sifive_uart0_clock((struct metal_uart *)priv);
20406b84:	fcc42503          	lw	a0,-52(s0)
20406b88:	b95ff0ef          	jal	ra,2040671c <__metal_driver_sifive_uart0_clock>
20406b8c:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:163

    /* Detect when the TXDATA is empty by setting the transmit watermark count
     * to one and waiting until an interrupt is pending */

    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) &= ~(UART_TXCNT(0x7));
20406b90:	fe842783          	lw	a5,-24(s0)
20406b94:	07a1                	addi	a5,a5,8
20406b96:	4398                	lw	a4,0(a5)
20406b98:	fe842783          	lw	a5,-24(s0)
20406b9c:	07a1                	addi	a5,a5,8
20406b9e:	86be                	mv	a3,a5
20406ba0:	fff907b7          	lui	a5,0xfff90
20406ba4:	17fd                	addi	a5,a5,-1
20406ba6:	8ff9                	and	a5,a5,a4
20406ba8:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:164
    UART_REGW(METAL_SIFIVE_UART0_TXCTRL) |= UART_TXCNT(1);
20406baa:	fe842783          	lw	a5,-24(s0)
20406bae:	07a1                	addi	a5,a5,8
20406bb0:	4398                	lw	a4,0(a5)
20406bb2:	fe842783          	lw	a5,-24(s0)
20406bb6:	07a1                	addi	a5,a5,8
20406bb8:	86be                	mv	a3,a5
20406bba:	67c1                	lui	a5,0x10
20406bbc:	8fd9                	or	a5,a5,a4
20406bbe:	c29c                	sw	a5,0(a3)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:166

    while ((UART_REGW(METAL_SIFIVE_UART0_IP) & UART_TXWM) == 0)
20406bc0:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:166 (discriminator 1)
20406bc2:	fe842783          	lw	a5,-24(s0)
20406bc6:	07d1                	addi	a5,a5,20
20406bc8:	439c                	lw	a5,0(a5)
20406bca:	8b85                	andi	a5,a5,1
20406bcc:	dbfd                	beqz	a5,20406bc2 <pre_rate_change_callback_func+0x60>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:174
    /* When the TXDATA clears, the UART is still shifting out the last byte.
     * Calculate the time we must drain to finish transmitting and then wait
     * that long. */

    long bits_per_symbol =
        (UART_REGW(METAL_SIFIVE_UART0_TXCTRL) & (1 << 1)) ? 9 : 10;
20406bce:	fe842783          	lw	a5,-24(s0)
20406bd2:	07a1                	addi	a5,a5,8
20406bd4:	439c                	lw	a5,0(a5)
20406bd6:	8b89                	andi	a5,a5,2
20406bd8:	c399                	beqz	a5,20406bde <pre_rate_change_callback_func+0x7c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 1)
20406bda:	47a5                	li	a5,9
20406bdc:	a011                	j	20406be0 <pre_rate_change_callback_func+0x7e>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:174 (discriminator 2)
20406bde:	47a9                	li	a5,10
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:173
    long bits_per_symbol =
20406be0:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:175
    long clk_freq = clock->vtable->get_rate_hz(clock);
20406be4:	fe442783          	lw	a5,-28(s0)
20406be8:	439c                	lw	a5,0(a5)
20406bea:	439c                	lw	a5,0(a5)
20406bec:	fe442503          	lw	a0,-28(s0)
20406bf0:	9782                	jalr	a5
20406bf2:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:176
    long cycles_to_wait = bits_per_symbol * clk_freq / uart->baud_rate;
20406bf6:	fe042703          	lw	a4,-32(s0)
20406bfa:	fdc42783          	lw	a5,-36(s0)
20406bfe:	02f707b3          	mul	a5,a4,a5
20406c02:	873e                	mv	a4,a5
20406c04:	fec42783          	lw	a5,-20(s0)
20406c08:	43dc                	lw	a5,4(a5)
20406c0a:	02f757b3          	divu	a5,a4,a5
20406c0e:	fcf42c23          	sw	a5,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:178

    for (volatile long x = 0; x < cycles_to_wait; x++)
20406c12:	fc042a23          	sw	zero,-44(s0)
20406c16:	a039                	j	20406c24 <pre_rate_change_callback_func+0xc2>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:179 (discriminator 3)
        __asm__("nop");
20406c18:	0001                	nop
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 3)
    for (volatile long x = 0; x < cycles_to_wait; x++)
20406c1a:	fd442783          	lw	a5,-44(s0)
20406c1e:	0785                	addi	a5,a5,1
20406c20:	fcf42a23          	sw	a5,-44(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:178 (discriminator 1)
20406c24:	fd442783          	lw	a5,-44(s0)
20406c28:	fd842703          	lw	a4,-40(s0)
20406c2c:	fee7c6e3          	blt	a5,a4,20406c18 <pre_rate_change_callback_func+0xb6>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:180
}
20406c30:	0001                	nop
20406c32:	0001                	nop
20406c34:	50f2                	lw	ra,60(sp)
20406c36:	5462                	lw	s0,56(sp)
20406c38:	6121                	addi	sp,sp,64
20406c3a:	8082                	ret

20406c3c <post_rate_change_callback_func>:
post_rate_change_callback_func():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:182

static void post_rate_change_callback_func(void *priv) {
20406c3c:	7179                	addi	sp,sp,-48
20406c3e:	d606                	sw	ra,44(sp)
20406c40:	d422                	sw	s0,40(sp)
20406c42:	1800                	addi	s0,sp,48
20406c44:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:183
    struct __metal_driver_sifive_uart0 *uart = priv;
20406c48:	fdc42783          	lw	a5,-36(s0)
20406c4c:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:184
    metal_uart_set_baud_rate(&uart->uart, uart->baud_rate);
20406c50:	fec42703          	lw	a4,-20(s0)
20406c54:	fec42783          	lw	a5,-20(s0)
20406c58:	43dc                	lw	a5,4(a5)
20406c5a:	85be                	mv	a1,a5
20406c5c:	853a                	mv	a0,a4
20406c5e:	d73fb0ef          	jal	ra,204029d0 <metal_uart_set_baud_rate>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:185
}
20406c62:	0001                	nop
20406c64:	50b2                	lw	ra,44(sp)
20406c66:	5422                	lw	s0,40(sp)
20406c68:	6145                	addi	sp,sp,48
20406c6a:	8082                	ret

20406c6c <__metal_driver_sifive_uart0_init>:
__metal_driver_sifive_uart0_init():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:187

void __metal_driver_sifive_uart0_init(struct metal_uart *guart, int baud_rate) {
20406c6c:	7139                	addi	sp,sp,-64
20406c6e:	de06                	sw	ra,60(sp)
20406c70:	dc22                	sw	s0,56(sp)
20406c72:	0080                	addi	s0,sp,64
20406c74:	fca42623          	sw	a0,-52(s0)
20406c78:	fcb42423          	sw	a1,-56(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:188
    struct __metal_driver_sifive_uart0 *uart = (void *)(guart);
20406c7c:	fcc42783          	lw	a5,-52(s0)
20406c80:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:189
    struct metal_clock *clock = __metal_driver_sifive_uart0_clock(guart);
20406c84:	fcc42503          	lw	a0,-52(s0)
20406c88:	a95ff0ef          	jal	ra,2040671c <__metal_driver_sifive_uart0_clock>
20406c8c:	fea42423          	sw	a0,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:191
    struct __metal_driver_sifive_gpio0 *pinmux =
        __metal_driver_sifive_uart0_pinmux(guart);
20406c90:	fcc42503          	lw	a0,-52(s0)
20406c94:	ab7ff0ef          	jal	ra,2040674a <__metal_driver_sifive_uart0_pinmux>
20406c98:	fea42223          	sw	a0,-28(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:193

    if (clock != NULL) {
20406c9c:	fe842783          	lw	a5,-24(s0)
20406ca0:	c7b9                	beqz	a5,20406cee <__metal_driver_sifive_uart0_init+0x82>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:194
        uart->pre_rate_change_callback.callback =
20406ca2:	fec42783          	lw	a5,-20(s0)
20406ca6:	20407737          	lui	a4,0x20407
20406caa:	b6270713          	addi	a4,a4,-1182 # 20406b62 <pre_rate_change_callback_func>
20406cae:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:196
            &pre_rate_change_callback_func;
        uart->pre_rate_change_callback.priv = guart;
20406cb0:	fec42783          	lw	a5,-20(s0)
20406cb4:	fcc42703          	lw	a4,-52(s0)
20406cb8:	c7d8                	sw	a4,12(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:197
        metal_clock_register_pre_rate_change_callback(
20406cba:	fec42783          	lw	a5,-20(s0)
20406cbe:	07a1                	addi	a5,a5,8
20406cc0:	85be                	mv	a1,a5
20406cc2:	fe842503          	lw	a0,-24(s0)
20406cc6:	2abd                	jal	20406e44 <metal_clock_register_pre_rate_change_callback>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:200
            clock, &(uart->pre_rate_change_callback));

        uart->post_rate_change_callback.callback =
20406cc8:	fec42783          	lw	a5,-20(s0)
20406ccc:	20407737          	lui	a4,0x20407
20406cd0:	c3c70713          	addi	a4,a4,-964 # 20406c3c <post_rate_change_callback_func>
20406cd4:	cbd8                	sw	a4,20(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:202
            &post_rate_change_callback_func;
        uart->post_rate_change_callback.priv = guart;
20406cd6:	fec42783          	lw	a5,-20(s0)
20406cda:	fcc42703          	lw	a4,-52(s0)
20406cde:	cf98                	sw	a4,24(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:203
        metal_clock_register_post_rate_change_callback(
20406ce0:	fec42783          	lw	a5,-20(s0)
20406ce4:	07d1                	addi	a5,a5,20
20406ce6:	85be                	mv	a1,a5
20406ce8:	fe842503          	lw	a0,-24(s0)
20406cec:	2269                	jal	20406e76 <metal_clock_register_post_rate_change_callback>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:207
            clock, &(uart->post_rate_change_callback));
    }

    metal_uart_set_baud_rate(&(uart->uart), baud_rate);
20406cee:	fec42783          	lw	a5,-20(s0)
20406cf2:	fc842583          	lw	a1,-56(s0)
20406cf6:	853e                	mv	a0,a5
20406cf8:	cd9fb0ef          	jal	ra,204029d0 <metal_uart_set_baud_rate>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:209

    if (pinmux != NULL) {
20406cfc:	fe442783          	lw	a5,-28(s0)
20406d00:	cb95                	beqz	a5,20406d34 <__metal_driver_sifive_uart0_init+0xc8>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:211
        long pinmux_output_selector =
            __metal_driver_sifive_uart0_pinmux_output_selector(guart);
20406d02:	fcc42503          	lw	a0,-52(s0)
20406d06:	a6fff0ef          	jal	ra,20406774 <__metal_driver_sifive_uart0_pinmux_output_selector>
20406d0a:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:210
        long pinmux_output_selector =
20406d0c:	fef42023          	sw	a5,-32(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:213
        long pinmux_source_selector =
            __metal_driver_sifive_uart0_pinmux_source_selector(guart);
20406d10:	fcc42503          	lw	a0,-52(s0)
20406d14:	a89ff0ef          	jal	ra,2040679c <__metal_driver_sifive_uart0_pinmux_source_selector>
20406d18:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:212
        long pinmux_source_selector =
20406d1a:	fcf42e23          	sw	a5,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:214
        pinmux->gpio.vtable->enable_io((struct metal_gpio *)pinmux,
20406d1e:	fe442783          	lw	a5,-28(s0)
20406d22:	439c                	lw	a5,0(a5)
20406d24:	53dc                	lw	a5,36(a5)
20406d26:	fdc42603          	lw	a2,-36(s0)
20406d2a:	fe042583          	lw	a1,-32(s0)
20406d2e:	fe442503          	lw	a0,-28(s0)
20406d32:	9782                	jalr	a5
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/sifive_uart0.c:218
                                       pinmux_output_selector,
                                       pinmux_source_selector);
    }
}
20406d34:	0001                	nop
20406d36:	50f2                	lw	ra,60(sp)
20406d38:	5462                	lw	s0,56(sp)
20406d3a:	6121                	addi	sp,sp,64
20406d3c:	8082                	ret

20406d3e <_metal_clock_call_all_callbacks>:
_metal_clock_call_all_callbacks():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:50

/*!
 * @brief Call all callbacks in the linked list, if any are registered
 */
__inline__ void
_metal_clock_call_all_callbacks(const metal_clock_callback *const list) {
20406d3e:	7179                	addi	sp,sp,-48
20406d40:	d606                	sw	ra,44(sp)
20406d42:	d422                	sw	s0,40(sp)
20406d44:	1800                	addi	s0,sp,48
20406d46:	fca42e23          	sw	a0,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:51
    const metal_clock_callback *current = list;
20406d4a:	fdc42783          	lw	a5,-36(s0)
20406d4e:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:52
    while (current) {
20406d52:	a831                	j	20406d6e <_metal_clock_call_all_callbacks+0x30>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:53
        current->callback(current->priv);
20406d54:	fec42783          	lw	a5,-20(s0)
20406d58:	4398                	lw	a4,0(a5)
20406d5a:	fec42783          	lw	a5,-20(s0)
20406d5e:	43dc                	lw	a5,4(a5)
20406d60:	853e                	mv	a0,a5
20406d62:	9702                	jalr	a4
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:54
        current = current->_next;
20406d64:	fec42783          	lw	a5,-20(s0)
20406d68:	479c                	lw	a5,8(a5)
20406d6a:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:52
    while (current) {
20406d6e:	fec42783          	lw	a5,-20(s0)
20406d72:	f3ed                	bnez	a5,20406d54 <_metal_clock_call_all_callbacks+0x16>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:56
    }
}
20406d74:	0001                	nop
20406d76:	0001                	nop
20406d78:	50b2                	lw	ra,44(sp)
20406d7a:	5422                	lw	s0,40(sp)
20406d7c:	6145                	addi	sp,sp,48
20406d7e:	8082                	ret

20406d80 <_metal_clock_append_to_callbacks>:
_metal_clock_append_to_callbacks():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:63
/*!
 * @brief Append a callback to the linked list and return the head of the list
 */
__inline__ metal_clock_callback *
_metal_clock_append_to_callbacks(metal_clock_callback *list,
                                 metal_clock_callback *const cb) {
20406d80:	7179                	addi	sp,sp,-48
20406d82:	d622                	sw	s0,44(sp)
20406d84:	1800                	addi	s0,sp,48
20406d86:	fca42e23          	sw	a0,-36(s0)
20406d8a:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:64
    cb->_next = NULL;
20406d8e:	fd842783          	lw	a5,-40(s0)
20406d92:	0007a423          	sw	zero,8(a5) # 10008 <__heap_size+0xf808>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:66

    if (!list) {
20406d96:	fdc42783          	lw	a5,-36(s0)
20406d9a:	e781                	bnez	a5,20406da2 <_metal_clock_append_to_callbacks+0x22>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:67
        return cb;
20406d9c:	fd842783          	lw	a5,-40(s0)
20406da0:	a035                	j	20406dcc <_metal_clock_append_to_callbacks+0x4c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:70
    }

    metal_clock_callback *current = list;
20406da2:	fdc42783          	lw	a5,-36(s0)
20406da6:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:72

    while ((current->_next) != NULL) {
20406daa:	a031                	j	20406db6 <_metal_clock_append_to_callbacks+0x36>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:73
        current = current->_next;
20406dac:	fec42783          	lw	a5,-20(s0)
20406db0:	479c                	lw	a5,8(a5)
20406db2:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:72
    while ((current->_next) != NULL) {
20406db6:	fec42783          	lw	a5,-20(s0)
20406dba:	479c                	lw	a5,8(a5)
20406dbc:	fbe5                	bnez	a5,20406dac <_metal_clock_append_to_callbacks+0x2c>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:76
    }

    current->_next = cb;
20406dbe:	fec42783          	lw	a5,-20(s0)
20406dc2:	fd842703          	lw	a4,-40(s0)
20406dc6:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:78

    return list;
20406dc8:	fdc42783          	lw	a5,-36(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:79
}
20406dcc:	853e                	mv	a0,a5
20406dce:	5432                	lw	s0,44(sp)
20406dd0:	6145                	addi	sp,sp,48
20406dd2:	8082                	ret

20406dd4 <metal_clock_get_rate_hz>:
metal_clock_get_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:110
 * @brief Returns the current rate of the given clock
 *
 * @param clk The handle for the clock
 * @return The current rate of the clock in Hz
 */
__inline__ long metal_clock_get_rate_hz(const struct metal_clock *clk) {
20406dd4:	1101                	addi	sp,sp,-32
20406dd6:	ce06                	sw	ra,28(sp)
20406dd8:	cc22                	sw	s0,24(sp)
20406dda:	1000                	addi	s0,sp,32
20406ddc:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:111
    return clk->vtable->get_rate_hz(clk);
20406de0:	fec42783          	lw	a5,-20(s0)
20406de4:	439c                	lw	a5,0(a5)
20406de6:	439c                	lw	a5,0(a5)
20406de8:	fec42503          	lw	a0,-20(s0)
20406dec:	9782                	jalr	a5
20406dee:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:112
}
20406df0:	853e                	mv	a0,a5
20406df2:	40f2                	lw	ra,28(sp)
20406df4:	4462                	lw	s0,24(sp)
20406df6:	6105                	addi	sp,sp,32
20406df8:	8082                	ret

20406dfa <metal_clock_set_rate_hz>:
metal_clock_set_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:128
 * could be anything!
 *
 * Prior to and after the rate change of the clock, this will call the
 * registered pre- and post-rate change callbacks.
 */
__inline__ long metal_clock_set_rate_hz(struct metal_clock *clk, long hz) {
20406dfa:	7179                	addi	sp,sp,-48
20406dfc:	d606                	sw	ra,44(sp)
20406dfe:	d422                	sw	s0,40(sp)
20406e00:	1800                	addi	s0,sp,48
20406e02:	fca42e23          	sw	a0,-36(s0)
20406e06:	fcb42c23          	sw	a1,-40(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:129
    _metal_clock_call_all_callbacks(clk->_pre_rate_change_callback);
20406e0a:	fdc42783          	lw	a5,-36(s0)
20406e0e:	43dc                	lw	a5,4(a5)
20406e10:	853e                	mv	a0,a5
20406e12:	3735                	jal	20406d3e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:131

    long out = clk->vtable->set_rate_hz(clk, hz);
20406e14:	fdc42783          	lw	a5,-36(s0)
20406e18:	439c                	lw	a5,0(a5)
20406e1a:	43dc                	lw	a5,4(a5)
20406e1c:	fd842583          	lw	a1,-40(s0)
20406e20:	fdc42503          	lw	a0,-36(s0)
20406e24:	9782                	jalr	a5
20406e26:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:133

    _metal_clock_call_all_callbacks(clk->_post_rate_change_callback);
20406e2a:	fdc42783          	lw	a5,-36(s0)
20406e2e:	479c                	lw	a5,8(a5)
20406e30:	853e                	mv	a0,a5
20406e32:	f0dff0ef          	jal	ra,20406d3e <_metal_clock_call_all_callbacks>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:135

    return out;
20406e36:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:136
}
20406e3a:	853e                	mv	a0,a5
20406e3c:	50b2                	lw	ra,44(sp)
20406e3e:	5422                	lw	s0,40(sp)
20406e40:	6145                	addi	sp,sp,48
20406e42:	8082                	ret

20406e44 <metal_clock_register_pre_rate_change_callback>:
metal_clock_register_pre_rate_change_callback():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:146
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_pre_rate_change_callback(struct metal_clock *clk,
                                              metal_clock_callback *cb) {
20406e44:	1101                	addi	sp,sp,-32
20406e46:	ce06                	sw	ra,28(sp)
20406e48:	cc22                	sw	s0,24(sp)
20406e4a:	1000                	addi	s0,sp,32
20406e4c:	fea42623          	sw	a0,-20(s0)
20406e50:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:148
    clk->_pre_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_pre_rate_change_callback, cb);
20406e54:	fec42783          	lw	a5,-20(s0)
20406e58:	43dc                	lw	a5,4(a5)
20406e5a:	fe842583          	lw	a1,-24(s0)
20406e5e:	853e                	mv	a0,a5
20406e60:	f21ff0ef          	jal	ra,20406d80 <_metal_clock_append_to_callbacks>
20406e64:	872a                	mv	a4,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:147
    clk->_pre_rate_change_callback =
20406e66:	fec42783          	lw	a5,-20(s0)
20406e6a:	c3d8                	sw	a4,4(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:149
}
20406e6c:	0001                	nop
20406e6e:	40f2                	lw	ra,28(sp)
20406e70:	4462                	lw	s0,24(sp)
20406e72:	6105                	addi	sp,sp,32
20406e74:	8082                	ret

20406e76 <metal_clock_register_post_rate_change_callback>:
metal_clock_register_post_rate_change_callback():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:159
 * @param clk The handle for the clock
 * @param cb The callback to be registered
 */
__inline__ void
metal_clock_register_post_rate_change_callback(struct metal_clock *clk,
                                               metal_clock_callback *cb) {
20406e76:	1101                	addi	sp,sp,-32
20406e78:	ce06                	sw	ra,28(sp)
20406e7a:	cc22                	sw	s0,24(sp)
20406e7c:	1000                	addi	s0,sp,32
20406e7e:	fea42623          	sw	a0,-20(s0)
20406e82:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:161
    clk->_post_rate_change_callback =
        _metal_clock_append_to_callbacks(clk->_post_rate_change_callback, cb);
20406e86:	fec42783          	lw	a5,-20(s0)
20406e8a:	479c                	lw	a5,8(a5)
20406e8c:	fe842583          	lw	a1,-24(s0)
20406e90:	853e                	mv	a0,a5
20406e92:	eefff0ef          	jal	ra,20406d80 <_metal_clock_append_to_callbacks>
20406e96:	872a                	mv	a4,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:160
    clk->_post_rate_change_callback =
20406e98:	fec42783          	lw	a5,-20(s0)
20406e9c:	c798                	sw	a4,8(a5)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/clock.h:162
}
20406e9e:	0001                	nop
20406ea0:	40f2                	lw	ra,28(sp)
20406ea2:	4462                	lw	s0,24(sp)
20406ea4:	6105                	addi	sp,sp,32
20406ea6:	8082                	ret

20406ea8 <metal_cpu_interrupt_controller>:
metal_cpu_interrupt_controller():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/cpu.h:224
 *
 * @param cpu The CPU device handle
 * @return The handle for the CPU interrupt controller
 */
__inline__ struct metal_interrupt *
metal_cpu_interrupt_controller(struct metal_cpu *cpu) {
20406ea8:	1101                	addi	sp,sp,-32
20406eaa:	ce06                	sw	ra,28(sp)
20406eac:	cc22                	sw	s0,24(sp)
20406eae:	1000                	addi	s0,sp,32
20406eb0:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/cpu.h:225
    return cpu->vtable->controller_interrupt(cpu);
20406eb4:	fec42783          	lw	a5,-20(s0)
20406eb8:	439c                	lw	a5,0(a5)
20406eba:	57dc                	lw	a5,44(a5)
20406ebc:	fec42503          	lw	a0,-20(s0)
20406ec0:	9782                	jalr	a5
20406ec2:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/cpu.h:226
}
20406ec4:	853e                	mv	a0,a5
20406ec6:	40f2                	lw	ra,28(sp)
20406ec8:	4462                	lw	s0,24(sp)
20406eca:	6105                	addi	sp,sp,32
20406ecc:	8082                	ret

20406ece <metal_cpu_get>:
metal_cpu_get():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:7
/* SPDX-License-Identifier: Apache-2.0 */

#include <metal/cpu.h>
#include <metal/machine.h>

struct metal_cpu *metal_cpu_get(unsigned int hartid) {
20406ece:	1101                	addi	sp,sp,-32
20406ed0:	ce22                	sw	s0,28(sp)
20406ed2:	1000                	addi	s0,sp,32
20406ed4:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:8
    if (hartid < __METAL_DT_MAX_HARTS) {
20406ed8:	fec42783          	lw	a5,-20(s0)
20406edc:	eb99                	bnez	a5,20406ef2 <metal_cpu_get+0x24>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:9
        return (struct metal_cpu *)__metal_cpu_table[hartid];
20406ede:	800007b7          	lui	a5,0x80000
20406ee2:	fec42703          	lw	a4,-20(s0)
20406ee6:	070a                	slli	a4,a4,0x2
20406ee8:	7a878793          	addi	a5,a5,1960 # 800007a8 <metal_segment_heap_target_end+0xffffeff8>
20406eec:	97ba                	add	a5,a5,a4
20406eee:	439c                	lw	a5,0(a5)
20406ef0:	a011                	j	20406ef4 <metal_cpu_get+0x26>
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:11
    }
    return NULL;
20406ef2:	4781                	li	a5,0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:12
}
20406ef4:	853e                	mv	a0,a5
20406ef6:	4472                	lw	s0,28(sp)
20406ef8:	6105                	addi	sp,sp,32
20406efa:	8082                	ret

20406efc <metal_cpu_get_current_hartid>:
metal_cpu_get_current_hartid():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:14

int metal_cpu_get_current_hartid() {
20406efc:	1101                	addi	sp,sp,-32
20406efe:	ce22                	sw	s0,28(sp)
20406f00:	1000                	addi	s0,sp,32
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:17
#ifdef __riscv
    int mhartid;
    __asm__ volatile("csrr %0, mhartid" : "=r"(mhartid));
20406f02:	f14027f3          	csrr	a5,mhartid
20406f06:	fef42623          	sw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:18
    return mhartid;
20406f0a:	fec42783          	lw	a5,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/cpu.c:20
#endif
}
20406f0e:	853e                	mv	a0,a5
20406f10:	4472                	lw	s0,28(sp)
20406f12:	6105                	addi	sp,sp,32
20406f14:	8082                	ret

20406f16 <__metal_shutdown_exit>:
__metal_shutdown_exit():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/shutdown.h:26
};

__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) __attribute__((noreturn));
__inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                      int code) {
20406f16:	1101                	addi	sp,sp,-32
20406f18:	ce06                	sw	ra,28(sp)
20406f1a:	cc22                	sw	s0,24(sp)
20406f1c:	1000                	addi	s0,sp,32
20406f1e:	fea42623          	sw	a0,-20(s0)
20406f22:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/metal/shutdown.h:27
    sd->vtable->exit(sd, code);
20406f26:	fec42783          	lw	a5,-20(s0)
20406f2a:	439c                	lw	a5,0(a5)
20406f2c:	439c                	lw	a5,0(a5)
20406f2e:	fe842583          	lw	a1,-24(s0)
20406f32:	fec42503          	lw	a0,-20(s0)
20406f36:	9782                	jalr	a5

20406f38 <metal_shutdown>:
metal_shutdown():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/shutdown.c:11

extern __inline__ void __metal_shutdown_exit(const struct __metal_shutdown *sd,
                                             int code);

#if defined(__METAL_DT_SHUTDOWN_HANDLE)
void metal_shutdown(int code) {
20406f38:	1101                	addi	sp,sp,-32
20406f3a:	ce06                	sw	ra,28(sp)
20406f3c:	cc22                	sw	s0,24(sp)
20406f3e:	1000                	addi	s0,sp,32
20406f40:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/shutdown.c:12
    __metal_shutdown_exit(__METAL_DT_SHUTDOWN_HANDLE, code);
20406f44:	fec42583          	lw	a1,-20(s0)
20406f48:	82018513          	addi	a0,gp,-2016 # 800007c0 <__metal_dt_test_100000>
20406f4c:	37e9                	jal	20406f16 <__metal_shutdown_exit>
	...

20406f80 <__metal_vector_table>:
IRQ_0():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:96
#endif
.option norvc
.global __metal_vector_table
__metal_vector_table:
IRQ_0:
        j metal_interrupt_vector_handler
20406f80:	be6fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406f84 <IRQ_1>:
IRQ_1():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:98
IRQ_1:
        j metal_interrupt_vector_handler
20406f84:	be2fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406f88 <IRQ_2>:
IRQ_2():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:100
IRQ_2:
        j metal_interrupt_vector_handler
20406f88:	bdefc06f          	j	20403366 <metal_interrupt_vector_handler>

20406f8c <IRQ_3>:
IRQ_3():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:102
IRQ_3:
        j metal_software_interrupt_vector_handler
20406f8c:	c08fc06f          	j	20403394 <metal_software_interrupt_vector_handler>

20406f90 <IRQ_4>:
IRQ_4():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:104
IRQ_4:
        j metal_interrupt_vector_handler
20406f90:	bd6fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406f94 <IRQ_5>:
IRQ_5():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:106
IRQ_5:
        j metal_interrupt_vector_handler
20406f94:	bd2fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406f98 <IRQ_6>:
IRQ_6():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:108
IRQ_6:
        j metal_interrupt_vector_handler
20406f98:	bcefc06f          	j	20403366 <metal_interrupt_vector_handler>

20406f9c <IRQ_7>:
IRQ_7():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:110
IRQ_7:
        j metal_timer_interrupt_vector_handler
20406f9c:	cf2fc06f          	j	2040348e <metal_timer_interrupt_vector_handler>

20406fa0 <IRQ_8>:
IRQ_8():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:112
IRQ_8:
        j metal_interrupt_vector_handler
20406fa0:	bc6fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fa4 <IRQ_9>:
IRQ_9():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:114
IRQ_9:
        j metal_interrupt_vector_handler
20406fa4:	bc2fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fa8 <IRQ_10>:
IRQ_10():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:116
IRQ_10:
        j metal_interrupt_vector_handler
20406fa8:	bbefc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fac <IRQ_11>:
IRQ_11():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:118
IRQ_11:
        j metal_interrupt_vector_handler
20406fac:	bbafc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fb0 <IRQ_12>:
IRQ_12():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:120
IRQ_12:
        j metal_interrupt_vector_handler
20406fb0:	bb6fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fb4 <IRQ_13>:
IRQ_13():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:122
IRQ_13:
        j metal_interrupt_vector_handler
20406fb4:	bb2fc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fb8 <IRQ_14>:
IRQ_14():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:124
IRQ_14:
        j metal_interrupt_vector_handler
20406fb8:	baefc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fbc <IRQ_15>:
IRQ_15():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:126
IRQ_15:
        j metal_interrupt_vector_handler
20406fbc:	baafc06f          	j	20403366 <metal_interrupt_vector_handler>

20406fc0 <IRQ_LC0>:
IRQ_LC0():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:128
IRQ_LC0:
        j metal_lc0_interrupt_vector_handler
20406fc0:	83bfc06f          	j	204037fa <metal_lc0_interrupt_vector_handler>

20406fc4 <IRQ_LC1>:
IRQ_LC1():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:130
IRQ_LC1:
        j metal_lc1_interrupt_vector_handler
20406fc4:	8cdfc06f          	j	20403890 <metal_lc1_interrupt_vector_handler>

20406fc8 <IRQ_LC2>:
IRQ_LC2():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:132
IRQ_LC2:
        j metal_lc2_interrupt_vector_handler
20406fc8:	95ffc06f          	j	20403926 <metal_lc2_interrupt_vector_handler>

20406fcc <IRQ_LC3>:
IRQ_LC3():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:134
IRQ_LC3:
        j metal_lc3_interrupt_vector_handler
20406fcc:	9f1fc06f          	j	204039bc <metal_lc3_interrupt_vector_handler>

20406fd0 <IRQ_LC4>:
IRQ_LC4():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:136
IRQ_LC4:
        j metal_lc4_interrupt_vector_handler
20406fd0:	a83fc06f          	j	20403a52 <metal_lc4_interrupt_vector_handler>

20406fd4 <IRQ_LC5>:
IRQ_LC5():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:138
IRQ_LC5:
        j metal_lc5_interrupt_vector_handler
20406fd4:	b15fc06f          	j	20403ae8 <metal_lc5_interrupt_vector_handler>

20406fd8 <IRQ_LC6>:
IRQ_LC6():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:140
IRQ_LC6:
        j metal_lc6_interrupt_vector_handler
20406fd8:	ba7fc06f          	j	20403b7e <metal_lc6_interrupt_vector_handler>

20406fdc <IRQ_LC7>:
IRQ_LC7():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:142
IRQ_LC7:
        j metal_lc7_interrupt_vector_handler
20406fdc:	c39fc06f          	j	20403c14 <metal_lc7_interrupt_vector_handler>

20406fe0 <IRQ_LC8>:
IRQ_LC8():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:144
IRQ_LC8:
        j metal_lc8_interrupt_vector_handler
20406fe0:	ccbfc06f          	j	20403caa <metal_lc8_interrupt_vector_handler>

20406fe4 <IRQ_LC9>:
IRQ_LC9():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:146
IRQ_LC9:
        j metal_lc9_interrupt_vector_handler
20406fe4:	d5dfc06f          	j	20403d40 <metal_lc9_interrupt_vector_handler>

20406fe8 <IRQ_LC10>:
IRQ_LC10():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:148
IRQ_LC10:
        j metal_lc10_interrupt_vector_handler
20406fe8:	deffc06f          	j	20403dd6 <metal_lc10_interrupt_vector_handler>

20406fec <IRQ_LC11>:
IRQ_LC11():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:150
IRQ_LC11:
        j metal_lc11_interrupt_vector_handler
20406fec:	e81fc06f          	j	20403e6c <metal_lc11_interrupt_vector_handler>

20406ff0 <IRQ_LC12>:
IRQ_LC12():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:152
IRQ_LC12:
        j metal_lc12_interrupt_vector_handler
20406ff0:	f13fc06f          	j	20403f02 <metal_lc12_interrupt_vector_handler>

20406ff4 <IRQ_LC13>:
IRQ_LC13():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:154
IRQ_LC13:
        j metal_lc13_interrupt_vector_handler
20406ff4:	fa5fc06f          	j	20403f98 <metal_lc13_interrupt_vector_handler>

20406ff8 <IRQ_LC14>:
IRQ_LC14():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:156
IRQ_LC14:
        j metal_lc14_interrupt_vector_handler
20406ff8:	836fd06f          	j	2040402e <metal_lc14_interrupt_vector_handler>

20406ffc <IRQ_LC15>:
IRQ_LC15():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/vector.S:158
IRQ_LC15:
        j metal_lc15_interrupt_vector_handler
20406ffc:	8c8fd06f          	j	204040c4 <metal_lc15_interrupt_vector_handler>

20407000 <__metal_driver_fixed_clock_rate>:
__metal_driver_fixed_clock_rate():
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:180
{
20407000:	1101                	addi	sp,sp,-32
20407002:	ce22                	sw	s0,28(sp)
20407004:	1000                	addi	s0,sp,32
20407006:	fea42623          	sw	a0,-20(s0)
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:181
	if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_0) {
2040700a:	fec42703          	lw	a4,-20(s0)
2040700e:	800007b7          	lui	a5,0x80000
20407012:	06078793          	addi	a5,a5,96 # 80000060 <metal_segment_heap_target_end+0xffffe8b0>
20407016:	00f71763          	bne	a4,a5,20407024 <__metal_driver_fixed_clock_rate+0x24>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:182
		return METAL_FIXED_CLOCK_0_CLOCK_FREQUENCY;
2040701a:	00f427b7          	lui	a5,0xf42
2040701e:	40078793          	addi	a5,a5,1024 # f42400 <__heap_size+0xf41c00>
20407022:	a825                	j	2040705a <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:184
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_2) {
20407024:	fec42703          	lw	a4,-20(s0)
20407028:	800007b7          	lui	a5,0x80000
2040702c:	06c78793          	addi	a5,a5,108 # 8000006c <metal_segment_heap_target_end+0xffffe8bc>
20407030:	00f71763          	bne	a4,a5,2040703e <__metal_driver_fixed_clock_rate+0x3e>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:185
		return METAL_FIXED_CLOCK_2_CLOCK_FREQUENCY;
20407034:	044aa7b7          	lui	a5,0x44aa
20407038:	20078793          	addi	a5,a5,512 # 44aa200 <__heap_size+0x44a9a00>
2040703c:	a839                	j	2040705a <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:187
	else if ((uintptr_t)clock == (uintptr_t)&__metal_dt_clock_5) {
2040703e:	fec42703          	lw	a4,-20(s0)
20407042:	800007b7          	lui	a5,0x80000
20407046:	07878793          	addi	a5,a5,120 # 80000078 <metal_segment_heap_target_end+0xffffe8c8>
2040704a:	00f71763          	bne	a4,a5,20407058 <__metal_driver_fixed_clock_rate+0x58>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:188
		return METAL_FIXED_CLOCK_5_CLOCK_FREQUENCY;
2040704e:	01e857b7          	lui	a5,0x1e85
20407052:	80078793          	addi	a5,a5,-2048 # 1e84800 <__heap_size+0x1e84000>
20407056:	a011                	j	2040705a <__metal_driver_fixed_clock_rate+0x5a>
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:191
		return 0;
20407058:	4781                	li	a5,0
C:\wsFreedomStudio\qemu_sifive_e31_hello\bsp\build\debug/./metal/machine.h:193
}
2040705a:	853e                	mv	a0,a5
2040705c:	4472                	lw	s0,28(sp)
2040705e:	6105                	addi	sp,sp,32
20407060:	8082                	ret

20407062 <__metal_driver_fixed_clock_get_rate_hz>:
__metal_driver_fixed_clock_get_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/fixed-clock.c:12

#include <metal/drivers/fixed-clock.h>
#include <metal/machine.h>
#include <stddef.h>

long __metal_driver_fixed_clock_get_rate_hz(const struct metal_clock *gclk) {
20407062:	1101                	addi	sp,sp,-32
20407064:	ce06                	sw	ra,28(sp)
20407066:	cc22                	sw	s0,24(sp)
20407068:	1000                	addi	s0,sp,32
2040706a:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/fixed-clock.c:13
    return __metal_driver_fixed_clock_rate(gclk);
2040706e:	fec42503          	lw	a0,-20(s0)
20407072:	3779                	jal	20407000 <__metal_driver_fixed_clock_rate>
20407074:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/fixed-clock.c:14
}
20407076:	853e                	mv	a0,a5
20407078:	40f2                	lw	ra,28(sp)
2040707a:	4462                	lw	s0,24(sp)
2040707c:	6105                	addi	sp,sp,32
2040707e:	8082                	ret

20407080 <__metal_driver_fixed_clock_set_rate_hz>:
__metal_driver_fixed_clock_set_rate_hz():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/fixed-clock.c:17

long __metal_driver_fixed_clock_set_rate_hz(struct metal_clock *gclk,
                                            long target_hz) {
20407080:	1101                	addi	sp,sp,-32
20407082:	ce06                	sw	ra,28(sp)
20407084:	cc22                	sw	s0,24(sp)
20407086:	1000                	addi	s0,sp,32
20407088:	fea42623          	sw	a0,-20(s0)
2040708c:	feb42423          	sw	a1,-24(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/fixed-clock.c:18
    return __metal_driver_fixed_clock_get_rate_hz(gclk);
20407090:	fec42503          	lw	a0,-20(s0)
20407094:	37f9                	jal	20407062 <__metal_driver_fixed_clock_get_rate_hz>
20407096:	87aa                	mv	a5,a0
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/src/drivers/fixed-clock.c:19
}
20407098:	853e                	mv	a0,a5
2040709a:	40f2                	lw	ra,28(sp)
2040709c:	4462                	lw	s0,24(sp)
2040709e:	6105                	addi	sp,sp,32
204070a0:	8082                	ret

204070a2 <_exit>:
_exit():
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_exit.c:3
#include <metal/shutdown.h>

void _exit(int exit_status) {
204070a2:	1101                	addi	sp,sp,-32
204070a4:	ce06                	sw	ra,28(sp)
204070a6:	cc22                	sw	s0,24(sp)
204070a8:	1000                	addi	s0,sp,32
204070aa:	fea42623          	sw	a0,-20(s0)
C:/wsFreedomStudio/qemu_sifive_e31_hello/freedom-metal/gloss/sys_exit.c:4
    metal_shutdown(exit_status);
204070ae:	fec42503          	lw	a0,-20(s0)
204070b2:	e87ff0ef          	jal	ra,20406f38 <metal_shutdown>
