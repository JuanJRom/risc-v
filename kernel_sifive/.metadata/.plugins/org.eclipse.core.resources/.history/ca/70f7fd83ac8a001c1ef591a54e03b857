.section .text
.global osSchedulerLaunch
.type osSchedulerLaunch, @function
.extern currentPt
osSchedulerLaunch:
    lw t0, currentPt   # Load currentPt into T0
    #lw t1, (t0)
    lw sp, (t0)        # t1 = &t0
    lw ra, (sp)
    lui t5, 0x0DEAD
    lui t6, 0x1DEAD
    sw t5, 16(sp)
    sw t6, 124(sp)
    addi sp, sp, 128   # make a stack frame
    ret

.section .text
.global switch_to
.type switch_to, @function
.extern currentPt
.align 2
switch_to:

    addi sp, sp, 144  # 16 spaces are the task
    sw ra, (sp)
    sw sp, 4(sp)
    sw gp, 8(sp)
    sw tp, 12(sp)
    sw t0, 16(sp)
    sw t1, 20(sp)
    sw t2, 24(sp)
    sw t3, 28(sp)
    sw s0, 32(sp)
    sw s1, 36(sp)
    sw a0, 40(sp)
    sw a1, 44(sp)
    sw a2, 48(sp)
    sw a3, 52(sp)
    sw a4, 56(sp)
    sw a5, 60(sp)
    sw a6, 64(sp)
    sw a7, 68(sp)
    sw s2, 72(sp)
    sw s3, 76(sp)
    sw s4, 80(sp)
    sw s5, 84(sp)
    sw s6, 88(sp)
    sw s7, 92(sp)
    sw s8, 96(sp)
    sw s9, 100(sp)
    sw s10,104(sp)
    sw s11,108(sp)
    sw t3, 112(sp)
    sw t4, 116(sp)
    sw t5, 120(sp)
    sw t6, 124(sp)

    #lw t0, currentPt   # Load currentPt into t0
    #lw sp, (t0)        # t1 = &t0
    #lw ra, (sp)
    #addi sp, sp, 4
    call handle_trap
    mret
